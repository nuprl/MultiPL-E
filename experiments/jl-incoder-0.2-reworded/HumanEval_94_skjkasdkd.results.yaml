language: jl
name: HumanEval_94_skjkasdkd
results:
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    primes = primes(length(lst))\n    largest = primes[end]\n    sum = 0\n\
    \    for x in lst\n        if x % largest == 0\n            sum += largest\n \
    \       end\n    end\n    return sum\nend\n</code>\n<|/ a dscore=1 |>\n<| c |>\n\
    Thank you for sharing your code. Could you please explain what is the purpose\
    \ of using \"end\" in the for loop?\n<|/ c |>\n<| c |>\n`end` ends the for loop.\
    \ `end` can be omitted when there is only one statement in the loop. `end` can\
    \ also be omitted when there is only one statement in the loop and it is followed\
    \ by a semicolon. `end` can also be omitted when there is only one statement in\
    \ the loop and it is followed by a semicolon and an `end` keyword.\n<|/ c |>\n\
    <| c |>\nThank you for the explanation. Could you please explain what is the purpose\
    \ of using \"end\" in the for loop?\n<|/ c |>\n<| c |>\n`end` ends the for loop.\
    \ `end` can be omitted when there is only one statement in the loop. `end` can\
    \ also be omitted when there is only one statement in the loop and it is followed\
    \ by a semicolon. `end` can also be omitted when there is only one statement in\
    \ the loop and it is followed by a semicolon and an `end` keyword.\n<|/ c |>\n\
    <| c |>\nThank you for the explanation. Could you please explain what is the purpose\
    \ of using \"end\" in the for loop?\n<|/ c |>\n<| a dscore=0 |>\n<code>\nusing\
    \ Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2,\
    \ 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t\
    @test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) ==\
    \ 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32,\
    \ 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91,\
    \ 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0,\
    \ 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191,\
    \ 123456, 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5sl8z7ni.jl:29\nin expression starting at\
    \ /tmp/tmp5sl8z7ni.jl:29\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    largest = 0\n    largestPrime = 0\n    largestSum = 0\n    \n  \
    \  for x in lst\n        if x == largestPrime\n            largestPrime = largestPrime\
    \ + 1\n            largestSum = largestSum + x\n        else\n            if largestPrime\
    \ == 0\n                largestPrime = x\n                largestSum = x\n   \
    \         else\n                if largestPrime > x\n                    largestPrime\
    \ = x\n                    largestSum = x\n                end\n            end\n\
    \        end\n    end\n    \n    return largestSum\nend\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324,\
    \ 4, 3])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([1, 0, 1, 8, 2, 4597,\
    \ 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3])\n\
    </cell>\n<code language=julia-1.5>\nskjkasdkd([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0, 81, 12,\
    \ 3, 1, 21])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0, 8, 1, 2, 1, 7])\n\
    </cell>\n<text>\nExercise 2\nusing Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\
    \t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1,\
    \ 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12,\
    \ 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191])\
    \ == 19)\n\t@test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127,\
    \ 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpo8a5ayr0.jl:43\nin expression starting at\
    \ /tmp/tmpo8a5ayr0.jl:43\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    primes = primes(length(lst))\n    \n    largest = primes[end]\n\
    \    \n    sum = 0\n    \n    for el in lst\n        if el == largest\n      \
    \      sum += el\n        else\n            largest = el\n        end\n    end\n\
    \    \n    return sum\nend\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n</cell>\n\
    <code language=julia-1.5>\nskjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6])\n</cell>\n<code\
    \ language=julia-1.5>\nskjkasdkd([0, 81, 12, 3, 1, 21])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([0, 8, 1, 2, 1, 7])\n</cell>\n<text>\nExercise: Find the largest prime\
    \ factor of a number\nusing Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\
    \t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1,\
    \ 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12,\
    \ 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191])\
    \ == 19)\n\t@test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127,\
    \ 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplf_031g2.jl:36\nin expression starting at\
    \ /tmp/tmplf_031g2.jl:36\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    primes = primes(length(lst))\n    largest = primes[end]\n    largest =\
    \ largest * largest\n    largest = largest * largest\n    largest = largest *\
    \ largest\n    largest = largest * largest\n    largest = largest * largest\n\
    \    largest = largest * largest\n    largest = largest * largest\n    largest\
    \ = largest * largest\n    largest = largest * largest\n    largest = largest\
    \ * largest\n    largest = largest * largest\n    largest = largest * largest\n\
    \    largest = largest * largest\n    largest = largest * largest\n    largest\
    \ = largest * largest\n    largest = largest * largest\n    largest = largest\
    \ * largest\n    largest = largest * largest\n    largest = largest * largest\n\
    \    largest = largest * largest\n    largest = largest * largest\n    largest\
    \ = largest * largest\n    largest = largest * largest\n    largest = largest\
    \ * largest\n    largest = largest * largest\n    largest = largest * largest\n\
    \    largest = largest * largest\n    largest = largest * largest\n    largest\
    \ = largest * largest\n    largest = largest * largest\n    largest = largest\
    \ * largest\n    largest = largest * largest\n    largest = largest * largest\n\
    \    largest = largest * largest\n    largest = largest * largest\n    largest\
    \ = largest * largest\n    largest = largest * largest\n    largest = largest\
    \ * largest\n    largest = largest * largest\n    largest = largest * largest\n\
    \    largest = largest * largest\n    largest = largest * largest\n    largest\
    \ = largest * largest\n    largest = largest * largest\n    largest = largest\
    \ * largest\n    largest = largest * largest\n    largest = largest * largest\n\
    \    largest = largest * largest\n    largest = largest * largest\n    largest\
    \ = lar\nusing Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    \t@test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\
    \ == 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t\
    @test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t\
    @test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192])\
    \ == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpqrq0ha72.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpqrq0ha72.jl:1\n\
    in expression starting at /tmp/tmpqrq0ha72.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    primes = primes(length(lst))\n    largest = primes[end]\n    sum = 0\n\
    \    for p in primes\n        if p > largest\n            largest = p\n      \
    \  end\n    end\n    for p in primes\n        if p < largest\n            sum\
    \ += lst[p]\n        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.3>\n\
    @test skjkasdkd([2, 3, 1, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324,\
    \ 4, 3]) == 10\n@test skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2,\
    \ 4, 2, 5, 1]) == 25\n@test skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163,\
    \ 23, 2323, 32, 30, 1, 9, 3]) == 13\n@test skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6]) == 11\n@test skjkasdkd([0, 81, 12, 3, 1, 21]) ==\
    \ 3\n@test skjkasdkd([0, 8, 1, 2, 1, 7]) == 7\n</cell>\n<text>\nProblem 3\nThe\
    \ Fibonacci sequence is defined by the formula:\nusing Test\n\n@testset begin\n\
    \ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1,\
    \ 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpsiey6iyr.jl:34\nin expression starting at\
    \ /tmp/tmpsiey6iyr.jl:34\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    largest = 0\n    largestPrime = 0\n    largestSum = 0\n    largestSumPrime\
    \ = 0\n    largestSumPrime2 = 0\n    largestSumPrime3 = 0\n    largestSumPrime4\
    \ = 0\n    largestSumPrime5 = 0\n    largestSumPrime6 = 0\n    largestSumPrime7\
    \ = 0\n    largestSumPrime8 = 0\n    largestSumPrime9 = 0\n    largestSumPrime10\
    \ = 0\n    largestSumPrime11 = 0\n    largestSumPrime12 = 0\n    largestSumPrime13\
    \ = 0\n    largestSumPrime14 = 0\n    largestSumPrime15 = 0\n    largestSumPrime16\
    \ = 0\n    largestSumPrime17 = 0\n    largestSumPrime18 = 0\n    largestSumPrime19\
    \ = 0\n    largestSumPrime20 = 0\n    largestSumPrime21 = 0\n    largestSumPrime22\
    \ = 0\n    largestSumPrime23 = 0\n    largestSumPrime24 = 0\n    largestSumPrime25\
    \ = 0\n    largestSumPrime26 = 0\n    largestSumPrime27 = 0\n    largestSumPrime28\
    \ = 0\n    largestSumPrime29 = 0\n    largestSumPrime30 = 0\n    largestSumPrime31\
    \ = 0\n    largestSumPrime32 = 0\n    largestSumPrime33 = 0\n    largestSumPrime34\
    \ = 0\n    largestSumPrime35 = 0\n    largestSumPrime36 = 0\n    largestSumPrime37\
    \ = 0\n    largestSumPrime38 = 0\n    largestSumPrime39 = 0\n    largestSumPrime40\
    \ = 0\n    largestSumPrime41 = 0\n    largestSumPrime42 = 0\n    largestSumPrime43\
    \ = 0\n    largestSumPrime44 = 0\n    largestSumPrime45 = 0\n    largestSumPrime46\
    \ = 0\n    largestSumPrime47 = 0\n    largestSumPrime48 = 0\n    largestSumPrime49\
    \ = 0\n    largestSumPrime50 = 0\n    largestSumPrime51 = 0\n    largestSumPrime52\
    \ = 0\n    largestSumPrime53 = 0\n    largestSumPrime54 = 0\n    largestSumPrime55\n\
    using Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    \t@test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\
    \ == 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t\
    @test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t\
    @test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192])\
    \ == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpk6q7nz9a.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpk6q7nz9a.jl:1\n\
    in expression starting at /tmp/tmpk6q7nz9a.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    primes = primes(length(lst))\n    largest = 0\n    for p in primes\n \
    \       if lst.contains(p)\n            largest = largest+p\n        end\n   \
    \ end\n    return largest\nend\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n</cell>\n\
    <code language=julia-1.5>\nskjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6])\n</cell>\n<code\
    \ language=julia-1.5>\nskjkasdkd([0, 81, 12, 3, 1, 21])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([0, 8, 1, 2, 1, 7])\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes a vector of integers and returns the sum of its digits.\nusing Test\n\n\
    @testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjjzy9bgm.jl:28\nin expression starting at\
    \ /tmp/tmpjjzy9bgm.jl:28\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    primes = primes(length(lst))\n    \n    largest = primes[end]\n\
    \    \n    sum = 0\n    \n    for p in primes\n        if p > largest\n      \
    \      largest = p\n        end\n    end\n    \n    for p in primes\n        if\
    \ p > largest\n            sum += lst[p]\n        end\n    end\n    \n    return\
    \ sum\nend\n</cell>\n<code language=julia-1.5>\n@test skjkasdkd([2, 3, 5, 7, 11,\
    \ 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89,\
    \ 97]) == 10\n@test skjkasdkd([2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41,\
    \ 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]) == 10\n@test skjkasdkd([2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97]) == 10\n@test skjkasdkd([2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]) == 10\n@test skjkasdkd([2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97]) == 10\n@test skjkasdkd([2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]) == 10\n@test skjkasdkd([2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97]) == 10\n@test skjkasdkd([2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]) == 10\n@test skjkasdkd([2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97]) == 10\n@test skjkasdkd([2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, \nusing Test\n\n@testset\
    \ begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4,\
    \ 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpn6l46yw3.jl:40\nin expression starting at\
    \ /tmp/tmpn6l46yw3.jl:40\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    primes = primes(lst)\n    \n    largest = primes[end]\n    \n  \
    \  sum = 0\n    \n    for p in primes\n        if p > largest\n            largest\
    \ = p\n        end\n    end\n    \n    for p in primes\n        if p < largest\n\
    \            sum += p - largest\n        end\n    end\n    \n    return sum\n\
    end\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\n</cell>\n\
    <code language=julia-1.5>\nskjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163,\
    \ 23, 2323, 32, 30, 1, 9, 3])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([0, 81, 12, 3, 1, 21])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0,\
    \ 8, 1, 2, 1, 7])\n</cell>\n<text>\nProblem 4\nWrite a function that takes a vector\
    \ of integers and returns the number of integers that are divisible by 3.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2,\
    \ 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t\
    @test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) ==\
    \ 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32,\
    \ 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91,\
    \ 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0,\
    \ 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191,\
    \ 123456, 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpo115omq5.jl:40\nin expression starting at\
    \ /tmp/tmpo115omq5.jl:40\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    primes = primes(length(lst))\n    largest = primes[end]\n    sum\
    \ = 0\n    for n in lst\n        if n % largest == 0\n            sum += largest\n\
    \        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    @time skjkasdkd(rand(1:10000))\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that returns the sum of the digits of an integer.\nusing Test\n\n@testset begin\n\
    \ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1,\
    \ 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfjqep1o_.jl:30\nin expression starting at\
    \ /tmp/tmpfjqep1o_.jl:30\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    largest = 0\n    largestPrime = 0\n    largestSum = 0\n    for x in lst\n\
    \        if x == largestPrime\n            largestPrime = largestPrime + 1\n \
    \       else\n            if largestPrime > largest\n                largest =\
    \ largestPrime\n                largestSum = largestPrime\n            largestPrime\
    \ = 1\n        end\n    end\n    return largestSum\nend\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324,\
    \ 4, 3])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([1, 0, 1, 8, 2, 4597,\
    \ 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3])\n\
    </cell>\n<code language=julia-1.5>\nskjkasdkd([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0, 81, 12,\
    \ 3, 1, 21])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0, 8, 1, 2, 1, 7])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the number of prime\
    \ numbers less than a given integer $n$. \nFor example, for $n=10$, the function\
    \ should return $5$.\nusing Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\
    \t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1,\
    \ 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12,\
    \ 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191])\
    \ == 19)\n\t@test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127,\
    \ 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmph5uwrcyj.jl:34\nin expression starting at\
    \ /tmp/tmph5uwrcyj.jl:34\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    largest = 0\n    largestPrime = 0\n    largestSum = 0\n    largestSumPrime\
    \ = 0\n    largestSumPrime2 = 0\n    largestSumPrime3 = 0\n    largestSumPrime4\
    \ = 0\n    largestSumPrime5 = 0\n    largestSumPrime6 = 0\n    largestSumPrime7\
    \ = 0\n    largestSumPrime8 = 0\n    largestSumPrime9 = 0\n    largestSumPrime10\
    \ = 0\n    largestSumPrime11 = 0\n    largestSumPrime12 = 0\n    largestSumPrime13\
    \ = 0\n    largestSumPrime14 = 0\n    largestSumPrime15 = 0\n    largestSumPrime16\
    \ = 0\n    largestSumPrime17 = 0\n    largestSumPrime18 = 0\n    largestSumPrime19\
    \ = 0\n    largestSumPrime20 = 0\n    largestSumPrime21 = 0\n    largestSumPrime22\
    \ = 0\n    largestSumPrime23 = 0\n    largestSumPrime24 = 0\n    largestSumPrime25\
    \ = 0\n    largestSumPrime26 = 0\n    largestSumPrime27 = 0\n    largestSumPrime28\
    \ = 0\n    largestSumPrime29 = 0\n    largestSumPrime30 = 0\n    largestSumPrime31\
    \ = 0\n    largestSumPrime32 = 0\n    largestSumPrime33 = 0\n    largestSumPrime34\
    \ = 0\n    largestSumPrime35 = 0\n    largestSumPrime36 = 0\n    largestSumPrime37\
    \ = 0\n    largestSumPrime38 = 0\n    largestSumPrime39 = 0\n    largestSumPrime40\
    \ = 0\n    largestSumPrime41 = 0\n    largestSumPrime42 = 0\n    largestSumPrime43\
    \ = 0\n    largestSumPrime44 = 0\n    largestSumPrime45 = 0\n    largestSumPrime46\
    \ = 0\n    largestSumPrime47 = 0\n    largestSumPrime48 = 0\n    largestSumPrime49\
    \ = 0\n    largestSumPrime50 = 0\n    largestSumPrime51 = 0\n    largestSumPrime52\
    \ = 0\n    largestSumPrime53 = 0\n    largestSumPrime54 = 0\n    largestSumPrime55\n\
    using Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    \t@test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\
    \ == 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t\
    @test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t\
    @test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192])\
    \ == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpk6q7nz9a.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpk6q7nz9a.jl:1\n\
    in expression starting at /tmp/tmpk6q7nz9a.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    largest = 0\n    largestPrime = 0\n    largestSum = 0\n    for x in lst\n\
    \        if x == largestPrime\n            largestPrime = largestPrime + 1\n \
    \           largestSum = largestSum + largestPrime\n        else\n           \
    \ if largestPrime > largest\n                largestPrime = largest\n        \
    \        largestSum = largestPrime\n            largestPrime = 1\n           \
    \ largest = largestPrime\n            largestSum = largestPrime\n        end\n\
    \    end\n    return largestSum\nend\n</cell>\n<code language=julia-1.5>\n@time\
    \ skjkasdkd(rand(1:10000, 10000))\n</cell>\n<text>\nExercise\nWrite a function\
    \ that takes a vector of integers and returns the sum of the digits of all the\
    \ prime numbers less than or equal to the given vector.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4,\
    \ 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmzgtpi9x.jl:37\nin expression starting at\
    \ /tmp/tmpmzgtpi9x.jl:37\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    primes = primes(length(lst))\n    largest = primes[end]\n    largest =\
    \ largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.round()\n    largest = largest.abs()\n    largest = largest.ceiling()\n\
    \    largest = largest.floor()\n    largest = largest.round()\n    largest = largest.abs()\n\
    \    largest = largest.ceiling()\n    largest = largest.floor()\n    largest =\
    \ largest.round()\n    largest = largest.abs()\n    largest = largest.ceiling()\n\
    \    largest = largest.floor()\n    largest = largest.round()\n    largest = largest.abs()\n\
    \    largest = largest.ceiling()\n    largest = largest.floor()\n    largest =\
    \ largest.round()\n    largest = largest.abs()\n    largest = largest.ceiling()\n\
    \    largest = largest.floor()\n    largest = largest.round()\n    largest = largest.abs()\n\
    \    largest = largest.ceiling()\n    largest = largest.floor()\n    largest =\
    \ largest.round()\n    largest = largest.abs()\n    largest = largest.ceiling()\n\
    \    largest = largest.floor()\n    largest = largest.round()\n    largest = largest.abs()\n\
    \    largest = largest.ceiling()\n    largest = largest.floor()\n    largest =\
    \ largest.round()\n    largest = largest.abs()\n    largest = largest.ceiling()\n\
    \    largest = largest.floor()\n    largest = largest.round()\n    largest = largest.abs()\n\
    \    largest = largest.ceiling()\n    largest = largest.floor()\n    largest =\
    \ largest.round()\n    largest = largest.abs()\n    largest = largest.ceiling()\n\
    \    largest = largest.floor()\n    largest = largest.round()\n    largest = largest.abs()\n\
    \    largest = lar\nusing Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\t\
    @test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1,\
    \ 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12,\
    \ 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191])\
    \ == 19)\n\t@test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127,\
    \ 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxp3zfhu0.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxp3zfhu0.jl:1\n\
    in expression starting at /tmp/tmpxp3zfhu0.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    primes = primes(length(lst))\n    \n    largest = 0\n    \n    for\
    \ p in primes\n        if lst .contains p\n            largest = largest+p\n \
    \       end\n    end\n    \n    return largest\nend\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97])\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes a vector of integers\
    \ and returns the sum of its digits.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32,\
    \ 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1, 8, 2, 4597,\
    \ 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1, 3, 1, 32,\
    \ 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0,\
    \ 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191])\
    \ == 19)\n\t@test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127,\
    \ 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: space before \".\" not allowed in \"lst .\" at\
    \ /tmp/tmpr4kfinn0.jl:25\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpr4kfinn0.jl:25\n\
    in expression starting at /tmp/tmpr4kfinn0.jl:25\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    largest = 0\n    largestPrime = 0\n    largestSum = 0\n    largestSumDigit\
    \ = 0\n    largestSumDigitDigit = 0\n    largestSumDigitDigitDigit = 0\n    largestSumDigitDigitDigitDigit\
    \ = 0\n    largestSumDigitDigitDigitDigitDigit = 0\n    largestSumDigitDigitDigitDigitDigitDigit\
    \ = 0\n    largestSumDigitDigitDigitDigitDigitDigit = 0\n    largestSumDigitDigitDigitDigitDigitDigitDigit\
    \ = 0\n    largestSumDigitDigitDigitDigitDigitDigitDigitDigit = 0\n    largestSumDigitDigitDigitDigitDigitDigitDigitDigitDigit\
    \ = 0\n    largestSumDigitDigitDigitDigitDigitDigitDigitDigitDigit = 0\n    largestSumDigitDigitDigitDigitDigitDigitDigitDigitDigitDigit\
    \ = 0\n    largestSumDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigit =\
    \ 0\n    largestSumDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigit = 0\n\
    \    largestSumDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigit =\
    \ 0\n    largestSumDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigit\
    \ = 0\n    largestSumDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigit\
    \ = 0\n    largestSumDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigit\
    \ = 0\n    largestSumDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigit\
    \ = 0\n    largestSumDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigit\
    \ = 0\n    largestSumDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigit\
    \ = 0\n    largestSumDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigit\
    \ = 0\n    largestSumDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigit\
    \ = 0\n    largestSumDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigit\
    \ = 0\n    largestSumDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigit\
    \ = 0\n    largestSumDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigit\
    \ = 0\n    largestSumDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigit\
    \ = 0\n    largestSumDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigit\
    \ = 0\n    largestSumDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigit\
    \ = 0\n    largestSumDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigit\
    \ = 0\n    largestSumDigitDigitDigitDigitDigit\nusing Test\n\n@testset begin\n\
    \ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1,\
    \ 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpg7fzmmrj.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpg7fzmmrj.jl:1\n\
    in expression starting at /tmp/tmpg7fzmmrj.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    primes = primes(length(lst))\n    \n    largest = 0\n    largestPrime\
    \ = 0\n    largestPrimeIndex = 0\n    \n    for prime in primes\n        if prime\
    \ > largest\n            largestPrime = prime\n            largestPrimeIndex =\
    \ prime\n        end\n    end\n    \n    for index in 1:length(lst)\n        if\
    \ lst[index] == largestPrimeIndex\n            largestPrimeIndex += 1\n      \
    \  end\n    end\n    \n    sum = 0\n    for index in 1:length(lst)\n        if\
    \ lst[index] == largestPrimeIndex\n            sum += Int(lst[index])\n      \
    \  end\n    end\n    \n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    @time skjkasdkd(rand(1:10000));\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that returns the number of prime numbers less than a given number. \nThe function\
    \ should take a single integer as an argument and return the number of prime numbers\
    \ less than that number.\nusing Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\
    \t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1,\
    \ 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12,\
    \ 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191])\
    \ == 19)\n\t@test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127,\
    \ 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp29evtrg5.jl:48\nin expression starting at\
    \ /tmp/tmp29evtrg5.jl:48\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    largest = 0\n    largestPrime = 0\n    largestSum = 0\n    \n  \
    \  for el in lst\n        if el == largestPrime\n            largestPrime = 0\n\
    \            largestSum = 0\n        elseif el == largest\n            largestPrime\
    \ = 0\n            largestSum = 0\n        elseif el == largestPrime\n       \
    \     largestPrime = 0\n            largestSum = 0\n        elseif el > largestPrime\n\
    \            largestPrime = el\n            largestSum = 0\n        elseif el\
    \ == largestPrime\n            largestPrime = 0\n            largestSum = 0\n\
    \        elseif el > largestPrime\n            largestPrime = el\n           \
    \ largestSum = 0\n        else\n            largestPrime = 0\n            largestSum\
    \ = 0\n        end\n    end\n    \n    return largestSum\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 9 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpkul8yh5g.jl:53

    '
  stdout: "test set: Test Failed at /tmp/tmpkul8yh5g.jl:56\n  Expression: candidate([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10\n\
    \   Evaluated: 0 == 10\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkul8yh5g.jl:56 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkul8yh5g.jl:55\ntest set: Test\
    \ Failed at /tmp/tmpkul8yh5g.jl:57\n  Expression: candidate([1, 0, 1, 8, 2, 4597,\
    \ 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25\n   Evaluated: 0 == 25\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkul8yh5g.jl:57 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkul8yh5g.jl:55\ntest set: Test\
    \ Failed at /tmp/tmpkul8yh5g.jl:58\n  Expression: candidate([1, 3, 1, 32, 5107,\
    \ 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13\n   Evaluated: 0 == 13\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkul8yh5g.jl:58 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkul8yh5g.jl:55\ntest set: Test\
    \ Failed at /tmp/tmpkul8yh5g.jl:59\n  Expression: candidate([0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11\n   Evaluated: 0 == 11\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkul8yh5g.jl:59 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkul8yh5g.jl:55\ntest set: Test\
    \ Failed at /tmp/tmpkul"
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    primes = primes(length(lst))\n    largest = primes[end]\n    largest =\
    \ largest.abs()\n    largest = largest.ceiling()\n    largest = largest.abs()\n\
    \    largest = largest.ceiling()\n    largest = largest.abs()\n    largest = largest.ceiling()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.abs()\n\
    \    largest = largest.ceiling()\n    largest = largest.abs()\n    largest = largest.ceiling()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.abs()\n\
    \    largest = largest.ceiling()\n    largest = largest.abs()\n    largest = largest.ceiling()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.abs()\n\
    \    largest = largest.ceiling()\n    largest = largest.abs()\n    largest = largest.ceiling()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.abs()\n\
    \    largest = largest.ceiling()\n    largest = largest.abs()\n    largest = largest.ceiling()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.abs()\n\
    \    largest = largest.ceiling()\n    largest = largest.abs()\n    largest = largest.ceiling()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.abs()\n\
    \    largest = largest.ceiling()\n    largest = largest.abs()\n    largest = largest.ceiling()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.abs()\n\
    \    largest = largest.ceiling()\n    largest = largest.abs()\n    largest = largest.ceiling()\n\
    \    largest = largest.abs()\n    largest = lar\nusing Test\n\n@testset begin\n\
    \ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1,\
    \ 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp9oyd_4_e.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp9oyd_4_e.jl:1\n\
    in expression starting at /tmp/tmp9oyd_4_e.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    primes = primes(length(lst))\n    \n    largest = 0\n    largestPrime\
    \ = 0\n    largestSum = 0\n    \n    for i in primes\n        \n        if lst.contains(i)\n\
    \            \n            sum = 0\n            \n            for j in lst\n \
    \               \n                if j == i\n                    \n          \
    \          sum += j\n                \n                else\n                \
    \    \n                    break\n                \n            \n           \
    \ if sum > largestSum\n                \n                largestSum = sum\n  \
    \              largestPrime = i\n                largest = largestSum\n      \
    \      \n            elseif sum == largestSum\n                \n            \
    \    largestPrime = i\n                largest = largestSum\n            \n  \
    \          end\n            \n        end\n        \n    end\n    \n    return\
    \ largestPrime\nend\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0, 3, 2, 1,\
    \ 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n</cell>\n<code\
    \ language=julia-1.5>\nskjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2,\
    \ 4, 2, 5, 1])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([1, 3, 1, 32, 5107,\
    \ 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6])\n</cell>\n<code\
    \ language=julia-1.5>\nskjkasdkd([0, 81, 12, 3, 1, 21])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([0, 8, 1, 2, 1, 7])\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ returns the sum of the digits of an integer.\nusing Test\n\n@testset begin\n\
    \ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1,\
    \ 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphsbgreyo.jl:62\nin expression starting at\
    \ /tmp/tmphsbgreyo.jl:62\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    primes = primes(length(lst))\n    \n    largest = primes[end]\n\
    \    \n    for p in primes\n        if p > largest\n            largest = p\n\
    \        end\n    end\n    \n    sum = 0\n    for p in primes\n        if p ==\
    \ largest\n            sum += lst[p]\n        end\n    end\n    \n    return sum\n\
    end\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\n</cell>\n\
    <code language=julia-1.5>\nskjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163,\
    \ 23, 2323, 32, 30, 1, 9, 3])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([0, 81, 12, 3, 1, 21])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0,\
    \ 8, 1, 2, 1, 7])\n</cell>\n<text>\nExercise 3\nWrite a function that takes a\
    \ vector of integers and returns the sum of the squares of the integers in the\
    \ vector.\nusing Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    \t@test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\
    \ == 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t\
    @test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t\
    @test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192])\
    \ == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpd4698dhr.jl:39\nin expression starting at\
    \ /tmp/tmpd4698dhr.jl:39\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    primes = primes(length(lst))\n    \n    largest = primes[end]\n\
    \    \n    sum = 0\n    \n    for el in lst\n        if el == largest\n      \
    \      sum += el\n        else\n            largest = el\n        end\n    end\n\
    \    \n    return sum\nend\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n</cell>\n\
    <code language=julia-1.5>\nskjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6])\n</cell>\n<code\
    \ language=julia-1.5>\nskjkasdkd([0, 81, 12, 3, 1, 21])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([0, 8, 1, 2, 1, 7])\n</cell>\n<text>\nExercise: Write a function that\
    \ returns the number of prime numbers less than a given number.\nusing Test\n\n\
    @testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0dyos0d1.jl:36\nin expression starting at\
    \ /tmp/tmp0dyos0d1.jl:36\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    primes = primes(length(lst))\n    largest = primes[end]\n    largest =\
    \ 0\n    for p in primes\n        if p > largest\n            largest = p\n  \
    \      end\n    end\n    sum = 0\n    for p in primes\n        if p > largest\n\
    \            sum += lst[p]\n        end\n    end\n    return sum\nend\n</code>\n\
    <|/ a dscore=1 |>\n<| c |>\nThis is not the most efficient solution. `primes(length(lst))`\
    \ will generate all primes up to `length(lst)`, which is `O(sqrt(n))`. `primes(length(lst))[end]`\
    \ will generate all primes up to `length(lst)`, which is `O(n)`. `primes(length(lst))`\
    \ will generate all primes up to `length(lst)`, which is `O(n)`. `primes(length(lst))[end]`\
    \ will generate all primes up to `length(lst)`, which is `O(n)`. `primes(length(lst))`\
    \ will generate all primes up to `length(lst)`, which is `O(n)`. `primes(length(lst))[end]`\
    \ will generate all primes up to `length(lst)`, which is `O(n)`. `primes(length(lst))`\
    \ will generate all primes up to `length(lst)`, which is `O(n)`. `primes(length(lst))[end]`\
    \ will generate all primes up to `length(lst)`, which is `O(n)`. `primes(length(lst))`\
    \ will generate all primes up to `length(lst)`, which is `O(n)`. `primes(length(lst))[end]`\
    \ will generate all primes up to `length(lst)`, which is `O(n)`. `primes(length(lst))`\
    \ will generate all primes up to `length(lst)`, which is `O(n)`. `primes(length(lst))[end]`\
    \ will generate all primes up to `length(lst)`, which is `O(n)`. `primes(length(lst))`\
    \ will generate all primes up to `length(lst)`, which is `O(n)`. `primes(length(lst))[end]`\
    \ will generate all primes up to `length(lst)`, which is `O(n)`. `primes(length(lst))`\
    \ will generate all primes up to `length(lst)`, which is `O(n)`. `primes(length(lst))[end]`\
    \ will generate all primes up to `length(lst)`, which is `O(n)`. `primes(length(lst))`\
    \ will generate all primes up to `length(lst)`, which is `O(n)`. `primes(length(lst))[end]`\
    \ \nusing Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    \t@test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\
    \ == 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t\
    @test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t\
    @test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192])\
    \ == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp11rszwyp.jl:35\nin expression starting at\
    \ /tmp/tmp11rszwyp.jl:35\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    primes = primes(length(lst))\n    largest = primes[end]\n    largest =\
    \ largest.abs()\n    largest = largest.ceiling()\n    largest = largest.abs()\n\
    \    largest = largest.ceiling()\n    largest = largest.abs()\n    largest = largest.ceiling()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.abs()\n\
    \    largest = largest.ceiling()\n    largest = largest.abs()\n    largest = largest.ceiling()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.abs()\n\
    \    largest = largest.ceiling()\n    largest = largest.abs()\n    largest = largest.ceiling()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.abs()\n\
    \    largest = largest.ceiling()\n    largest = largest.abs()\n    largest = largest.ceiling()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.abs()\n\
    \    largest = largest.ceiling()\n    largest = largest.abs()\n    largest = largest.ceiling()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.abs()\n\
    \    largest = largest.ceiling()\n    largest = largest.abs()\n    largest = largest.ceiling()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.abs()\n\
    \    largest = largest.ceiling()\n    largest = largest.abs()\n    largest = largest.ceiling()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.abs()\n\
    \    largest = largest.ceiling()\n    largest = largest.abs()\n    largest = largest.ceiling()\n\
    \    largest = largest.abs()\n    largest = lar\nusing Test\n\n@testset begin\n\
    \ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1,\
    \ 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp9oyd_4_e.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp9oyd_4_e.jl:1\n\
    in expression starting at /tmp/tmp9oyd_4_e.jl:1\n"
  stdout: ''
- exit_code: -1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    largest = Int64(0)\n    largest = findlargestprime(lst)\n    largest =\
    \ sum(map(x -> mod(x, largest), lst))\n    return largest\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp7x0a98_w.jl:29\n  Test threw
    exception\n  Expression: candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32,
    4, 32, 3, 2, 32, 324, 4, 3]) == 10\n  UndefVarError: findlargestprime not defined\n  Stacktrace:\n   [1]
    skjkasdkd(lst::Vector{Int64})\n     @ Main /tmp/tmp7x0a98_w.jl:20\n   [2] macro
    expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7x0a98_w.jl:29 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7x0a98_w.jl:28\ntest set: Error
    During Test at /tmp/tmp7x0a98_w.jl:30\n  Test threw exception\n  Expression: candidate([1,
    0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25\n  UndefVarError:
    findlargestprime not defined\n  Stacktrace:\n   [1] skjkasdkd(lst::Vector{Int64})\n     @
    Main /tmp/tmp7x0a98_w.jl:20\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7x0a98_w.jl:30 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7x0a98_w.jl:28\ntest set: Error
    During Test at /tmp/tmp7x0a98_w.jl:31\n  Test threw exception\n  Expression: candidate([1,
    3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13\n  UndefVarError:
    findlargestprime not defined\n  Stacktrace:\n   [1] skjkasdkd(lst::Vector{Int64})\n     @
    Main /tmp/tmp7x0a98_w.jl:20\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7x0a98_w.jl:31 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7x0a98_w.jl:28\ntest set: Error
    During Test at /tmp/tmp7x0a98_w.jl:'
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    primes = primes(length(lst))\n    largest = primes[end]\n    largest\
    \ = largest * largest\n    largest = largest * largest\n    largest = largest\
    \ * largest\n    largest = largest * largest\n    largest = largest * largest\n\
    \    largest = largest * largest\n    largest = largest * largest\n    largest\
    \ = largest * largest\n    largest = largest * largest\n    largest = largest\
    \ * largest\n    largest = largest * largest\n    largest = largest * largest\n\
    \    largest = largest * largest\n    largest = largest * largest\n    largest\
    \ = largest * largest\n    largest = largest * largest\n    largest = largest\
    \ * largest\n    largest = largest * largest\n    largest = largest * largest\n\
    \    largest = largest * largest\n    largest = largest * largest\n    largest\
    \ = largest * largest\n    largest = largest * largest\n    largest = largest\
    \ * largest\n    largest = largest * largest\n    largest = largest * largest\n\
    \    largest = largest * largest\n    largest = largest * largest\n    largest\
    \ = largest * largest\n    largest = largest * largest\n    largest = largest\
    \ * largest\n    largest = largest * largest\n    largest = largest * largest\n\
    \    largest = largest * largest\n    largest = largest * largest\n    largest\
    \ = largest * largest\n    largest = largest * largest\n    largest = largest\
    \ * largest\n    largest = largest * largest\n    largest = largest * largest\n\
    \    largest = largest * largest\n    largest = largest * largest\n    largest\
    \ = largest * largest\n    largest = largest * largest\n    largest = largest\
    \ * largest\n    largest = largest * largest\n    largest = largest * largest\n\
    \    largest = largest * largest\n    largest = largest * largest\n    largest\n\
    using Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    \t@test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\
    \ == 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t\
    @test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t\
    @test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192])\
    \ == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp2ee8wruu.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp2ee8wruu.jl:1\n\
    in expression starting at /tmp/tmp2ee8wruu.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    primes = primes(length(lst))\n    largest = primes[end]\n    largest =\
    \ largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.ceiling()\n    largest = largest.ceiling()\n    largest\
    \ = largest.ceiling()\n    largest = largest.ceiling()\n    largest = largest.ceiling()\n\
    \    largest = largest.ceiling()\n    largest = largest.ceiling()\n    largest\
    \ = largest.ceiling()\n    largest = largest.ceiling()\n    largest = largest.ceiling()\n\
    \    largest = largest.ceiling()\n    largest = largest.ceiling()\n    largest\
    \ = largest.ceiling()\n    largest = largest.ceiling()\n    largest = largest.ceiling()\n\
    \    largest = largest.ceiling()\n    largest = largest.ceiling()\n    largest\
    \ = largest.ceiling()\n    largest = largest.ceiling()\n    largest = largest.ceiling()\n\
    \    largest = largest.ceiling()\n    largest = largest.ceiling()\n    largest\
    \ = largest.ceiling()\n    largest = largest.ceiling()\n    largest = largest.ceiling()\n\
    \    largest = largest.ceiling()\n    largest = largest.ceiling()\n    largest\
    \ = largest.ceiling()\n    largest = largest.ceiling()\n    largest = largest.ceiling()\n\
    \    largest = largest.ceiling()\n    largest = largest.ceiling()\n    largest\
    \ = largest.ceiling()\n    largest = largest.ceiling()\n    largest = largest.ceiling()\n\
    \    largest = largest.ceiling()\n    largest = largest.ceiling()\n    largest\
    \ = largest.ceiling()\n    largest = largest.ceiling()\n    largest = largest.ceiling()\n\
    \    largest = largest.ceiling()\n    largest = largest.ceiling()\n    largest\
    \ = largest.ceiling()\n    largest = largest.ceiling()\n    largest = largest.ceiling()\n\
    \    largest = largest.ceiling()\n    largest = lar\nusing Test\n\n@testset begin\n\
    \ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1,\
    \ 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxlkqffqo.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxlkqffqo.jl:1\n\
    in expression starting at /tmp/tmpxlkqffqo.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    primes = primes(length(lst))\n    largest = primes[end]\n    largest =\
    \ largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = lar\nusing Test\n\n@testset begin\n\
    \ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1,\
    \ 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmptkm6wrun.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmptkm6wrun.jl:1\n\
    in expression starting at /tmp/tmptkm6wrun.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    primes = primes(length(lst))\n    largest = primes[end]\n    largest =\
    \ largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.ceiling()\n    largest = largest.ceiling()\n    largest\
    \ = largest.ceiling()\n    largest = largest.ceiling()\n    largest = largest.ceiling()\n\
    \    largest = largest.ceiling()\n    largest = largest.ceiling()\n    largest\
    \ = largest.ceiling()\n    largest = largest.ceiling()\n    largest = largest.ceiling()\n\
    \    largest = largest.ceiling()\n    largest = largest.ceiling()\n    largest\
    \ = largest.ceiling()\n    largest = largest.ceiling()\n    largest = largest.ceiling()\n\
    \    largest = largest.ceiling()\n    largest = largest.ceiling()\n    largest\
    \ = largest.ceiling()\n    largest = largest.ceiling()\n    largest = largest.ceiling()\n\
    \    largest = largest.ceiling()\n    largest = largest.ceiling()\n    largest\
    \ = largest.ceiling()\n    largest = largest.ceiling()\n    largest = largest.ceiling()\n\
    \    largest = largest.ceiling()\n    largest = largest.ceiling()\n    largest\
    \ = largest.ceiling()\n    largest = largest.ceiling()\n    largest = largest.ceiling()\n\
    \    largest = largest.ceiling()\n    largest = largest.ceiling()\n    largest\
    \ = largest.ceiling()\n    largest = largest.ceiling()\n    largest = largest.ceiling()\n\
    \    largest = largest.ceiling()\n    largest = largest.ceiling()\n    largest\
    \ = largest.ceiling()\n    largest = largest.ceiling()\n    largest = largest.ceiling()\n\
    \    largest = largest.ceiling()\n    largest = largest.ceiling()\n    largest\
    \ = largest.ceiling()\n    largest = largest.ceiling()\n    largest = largest.ceiling()\n\
    \    largest = largest.ceiling()\n    largest = lar\nusing Test\n\n@testset begin\n\
    \ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1,\
    \ 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxlkqffqo.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxlkqffqo.jl:1\n\
    in expression starting at /tmp/tmpxlkqffqo.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    primes = primes(length(lst))\n    largest = primes[end]\n    largest\
    \ = largest.abs()\n    largest = largest.ceil()\n    largest = largest.floor()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest\nusing Test\n\n@testset begin\n\ncandidate\
    \ = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32,\
    \ 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1, 8, 2, 4597,\
    \ 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1, 3, 1, 32,\
    \ 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0,\
    \ 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191])\
    \ == 19)\n\t@test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127,\
    \ 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpqbzr48qq.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpqbzr48qq.jl:1\n\
    in expression starting at /tmp/tmpqbzr48qq.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    primes = primes(length(lst))\n    largest = primes[end]\n    largest =\
    \ largest.abs()\n    largest = largest.ceiling()\n    largest = largest.abs()\n\
    \    largest = largest.ceiling()\n    largest = largest.abs()\n    largest = largest.ceiling()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.abs()\n\
    \    largest = largest.ceiling()\n    largest = largest.abs()\n    largest = largest.ceiling()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.abs()\n\
    \    largest = largest.ceiling()\n    largest = largest.abs()\n    largest = largest.ceiling()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.abs()\n\
    \    largest = largest.ceiling()\n    largest = largest.abs()\n    largest = largest.ceiling()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.abs()\n\
    \    largest = largest.ceiling()\n    largest = largest.abs()\n    largest = largest.ceiling()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.abs()\n\
    \    largest = largest.ceiling()\n    largest = largest.abs()\n    largest = largest.ceiling()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.abs()\n\
    \    largest = largest.ceiling()\n    largest = largest.abs()\n    largest = largest.ceiling()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.abs()\n\
    \    largest = largest.ceiling()\n    largest = largest.abs()\n    largest = largest.ceiling()\n\
    \    largest = largest.abs()\n    largest = lar\nusing Test\n\n@testset begin\n\
    \ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1,\
    \ 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp9oyd_4_e.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp9oyd_4_e.jl:1\n\
    in expression starting at /tmp/tmp9oyd_4_e.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    largest = 0\n    largestPrime = 0\n    largestSum = 0\n    largestSumPrime\
    \ = 0\n    largestSumPrime2 = 0\n    largestSumPrime3 = 0\n    largestSumPrime4\
    \ = 0\n    largestSumPrime5 = 0\n    largestSumPrime6 = 0\n    largestSumPrime7\
    \ = 0\n    largestSumPrime8 = 0\n    largestSumPrime9 = 0\n    largestSumPrime10\
    \ = 0\n    largestSumPrime11 = 0\n    largestSumPrime12 = 0\n    largestSumPrime13\
    \ = 0\n    largestSumPrime14 = 0\n    largestSumPrime15 = 0\n    largestSumPrime16\
    \ = 0\n    largestSumPrime17 = 0\n    largestSumPrime18 = 0\n    largestSumPrime19\
    \ = 0\n    largestSumPrime20 = 0\n    largestSumPrime21 = 0\n    largestSumPrime22\
    \ = 0\n    largestSumPrime23 = 0\n    largestSumPrime24 = 0\n    largestSumPrime25\
    \ = 0\n    largestSumPrime26 = 0\n    largestSumPrime27 = 0\n    largestSumPrime28\
    \ = 0\n    largestSumPrime29 = 0\n    largestSumPrime30 = 0\n    largestSumPrime31\
    \ = 0\n    largestSumPrime32 = 0\n    largestSumPrime33 = 0\n    largestSumPrime34\
    \ = 0\n    largestSumPrime35 = 0\n    largestSumPrime36 = 0\n    largestSumPrime37\
    \ = 0\n    largestSumPrime38 = 0\n    largestSumPrime39 = 0\n    largestSumPrime40\
    \ = 0\n    largestSumPrime41 = 0\n    largestSumPrime42 = 0\n    largestSumPrime43\
    \ = 0\n    largestSumPrime44 = 0\n    largestSumPrime45 = 0\n    largestSumPrime46\
    \ = 0\n    largestSumPrime47 = 0\n    largestSumPrime48 = 0\n    largestSumPrime49\
    \ = 0\n    largestSumPrime50 = 0\n    largestSumPrime51 = 0\n    largestSumPrime52\
    \ = 0\n    largestSumPrime53 = 0\n    largestSumPrime54 = 0\n    largestSumPrime55\n\
    using Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    \t@test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\
    \ == 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t\
    @test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t\
    @test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192])\
    \ == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpk6q7nz9a.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpk6q7nz9a.jl:1\n\
    in expression starting at /tmp/tmpk6q7nz9a.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    primes = primes(length(lst))\n    largest = primes[end]\n    largest =\
    \ largest.abs()\n    largest = largest.ceil()\n    largest = largest.floor()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = lar\nusing Test\n\n@testset begin\n\
    \ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1,\
    \ 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5292986c.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5292986c.jl:1\n\
    in expression starting at /tmp/tmp5292986c.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    largest = 0\n    largestPrime = 0\n    largestSum = 0\n    largestSumPrime\
    \ = 0\n    largestSumPrime2 = 0\n    largestSumPrime3 = 0\n    largestSumPrime4\
    \ = 0\n    largestSumPrime5 = 0\n    largestSumPrime6 = 0\n    largestSumPrime7\
    \ = 0\n    largestSumPrime8 = 0\n    largestSumPrime9 = 0\n    largestSumPrime10\
    \ = 0\n    largestSumPrime11 = 0\n    largestSumPrime12 = 0\n    largestSumPrime13\
    \ = 0\n    largestSumPrime14 = 0\n    largestSumPrime15 = 0\n    largestSumPrime16\
    \ = 0\n    largestSumPrime17 = 0\n    largestSumPrime18 = 0\n    largestSumPrime19\
    \ = 0\n    largestSumPrime20 = 0\n    largestSumPrime21 = 0\n    largestSumPrime22\
    \ = 0\n    largestSumPrime23 = 0\n    largestSumPrime24 = 0\n    largestSumPrime25\
    \ = 0\n    largestSumPrime26 = 0\n    largestSumPrime27 = 0\n    largestSumPrime28\
    \ = 0\n    largestSumPrime29 = 0\n    largestSumPrime30 = 0\n    largestSumPrime31\
    \ = 0\n    largestSumPrime32 = 0\n    largestSumPrime33 = 0\n    largestSumPrime34\
    \ = 0\n    largestSumPrime35 = 0\n    largestSumPrime36 = 0\n    largestSumPrime37\
    \ = 0\n    largestSumPrime38 = 0\n    largestSumPrime39 = 0\n    largestSumPrime40\
    \ = 0\n    largestSumPrime41 = 0\n    largestSumPrime42 = 0\n    largestSumPrime43\
    \ = 0\n    largestSumPrime44 = 0\n    largestSumPrime45 = 0\n    largestSumPrime46\
    \ = 0\n    largestSumPrime47 = 0\n    largestSumPrime48 = 0\n    largestSumPrime49\
    \ = 0\n    largestSumPrime50 = 0\n    largestSumPrime51 = 0\n    largestSumPrime52\
    \ = 0\n    largestSumPrime53 = 0\n    largestSumPrime54 = 0\n    largestSumPrime55\n\
    using Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    \t@test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\
    \ == 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t\
    @test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t\
    @test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192])\
    \ == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpk6q7nz9a.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpk6q7nz9a.jl:1\n\
    in expression starting at /tmp/tmpk6q7nz9a.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    primes = primes(length(lst))\n    \n    largest = primes[end]\n\
    \    \n    sum = 0\n    \n    for elt in lst\n        if elt > largest\n     \
    \       largest = elt\n        end\n    end\n    \n    for elt in lst\n      \
    \  if elt == largest\n            sum += elt\n        end\n    end\n    \n   \
    \ return sum\nend\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0, 3, 2, 1,\
    \ 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n</cell>\n<code\
    \ language=julia-1.5>\nskjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2,\
    \ 4, 2, 5, 1])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([1, 3, 1, 32, 5107,\
    \ 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6])\n</cell>\n<code\
    \ language=julia-1.5>\nskjkasdkd([0, 81, 12, 3, 1, 21])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([0, 8, 1, 2, 1, 7])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([3,\
    \ 7, 1, 3, 7, 1, 3, 7, 1, 3, 7, 1, 3, 7, 1, 3, 7, 1, 3, 7, 1, 3, 7, 1, 3, 7, 1,\
    \ 3, 7, 1, 3, 7, 1, 3, 7, 1, 3, 7, 1, 3, 7, 1, 3, 7, 1, 3, 7, 1, 3, 7, 1, 3, 7,\
    \ 1, 3, 7, 1, 3, 7, 1, 3, 7, 1, 3, 7, 1, 3, 7, 1, 3, 7, 1, 3, 7, 1, 3, 7, 1, 3,\
    \ 7, 1, 3, 7, 1, 3, 7, 1, 3, 7, 1, 3, 7, 1, 3, 7, 1, 3, 7, 1, 3, 7, 1, 3, 7, 1,\
    \ 3, 7, 1, 3, 7, 1, 3, 7, 1, 3, 7, 1, 3, 7, 1, 3, 7, 1, 3, 7, 1, 3, 7, 1, 3, 7,\
    \ 1, 3, 7, 1, 3, 7, 1, 3, 7, 1, 3, 7, 1, 3, 7, 1, 3, 7, 1, 3, 7, 1, 3, 7, 1, 3,\
    \ 7, 1, 3, 7, 1, 3, 7, 1, 3, 7, 1, 3, 7, 1, 3, 7, 1, 3, 7, 1, 3, 7, 1, 3, 7, 1,\
    \ 3, 7, 1, 3, 7, 1, 3, 7, 1, 3, 7, 1, 3, 7, 1, 3, 7, 1, 3, 7, 1, 3, 7, 1, 3, 7,\
    \ 1, 3, 7, 1, 3, 7, 1, 3, 7, 1, 3, 7, 1, 3, 7, 1, 3, 7, 1, 3, 7, 1, 3, 7, 1, 3,\
    \ 7, 1, \nusing Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    \t@test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\
    \ == 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t\
    @test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t\
    @test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192])\
    \ == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvtkus5js.jl:40\nin expression starting at\
    \ /tmp/tmpvtkus5js.jl:40\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpl4v7mbcj.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpl4v7mbcj.jl:1\n\
    in expression starting at /tmp/tmpl4v7mbcj.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    primes = primes(length(lst))\n    largest = primes[end]\n    largest\
    \ = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.round()\n    largest = largest.abs()\n    largest = largest.ceiling()\n\
    \    largest = largest.floor()\n    largest = largest.round()\n    largest = largest.abs()\n\
    \    largest = largest.ceiling()\n    largest = largest.floor()\n    largest =\
    \ largest.round()\n    largest = largest.abs()\n    largest = largest.ceiling()\n\
    \    largest = largest.floor()\n    largest = largest.round()\n    largest = largest.abs()\n\
    \    largest = largest.ceiling()\n    largest = largest.floor()\n    largest =\
    \ largest.round()\n    largest = largest.abs()\n    largest = largest.ceiling()\n\
    \    largest = largest.floor()\n    largest = largest.round()\n    largest = largest.abs()\n\
    \    largest = largest.ceiling()\n    largest = largest.floor()\n    largest =\
    \ largest.round()\n    largest = largest.abs()\n    largest = largest.ceiling()\n\
    \    largest = largest.floor()\n    largest = largest.round()\n    largest = largest.abs()\n\
    \    largest = largest.ceiling()\n    largest = largest.floor()\n    largest =\
    \ largest.round()\n    largest = largest.abs()\n    largest = largest.ceiling()\n\
    \    largest = largest.floor()\n    largest = largest.round()\n    largest = largest.abs()\n\
    \    largest = largest.ceiling()\n    largest = largest.floor()\n    largest =\
    \ largest.round()\n    largest = largest.abs()\n    largest = largest.ceiling()\n\
    \    largest = largest.floor()\n    largest = largest.round()\n    largest = largest.abs()\n\
    \    largest\nusing Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    \t@test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\
    \ == 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t\
    @test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t\
    @test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192])\
    \ == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpzm0r_5xw.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpzm0r_5xw.jl:1\n\
    in expression starting at /tmp/tmpzm0r_5xw.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    primes = primes(length(lst))\n    \n    largest = primes[end]\n\
    \    \n    largest = largest * 10 + lst[end]\n    \n    largest = largest * 10\
    \ + lst[end]\n    \n    return largest\nend\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([2,3,5,7,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n\
    using Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    \t@test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\
    \ == 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t\
    @test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t\
    @test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192])\
    \ == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpbk082cwp.jl:30\nin expression starting at\
    \ /tmp/tmpbk082cwp.jl:30\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    primes = primes(length(lst))\n    largest = primes[end]\n    largest\
    \ = 0\n    for el in lst\n        if el > largest\n            largest = el\n\
    \        end\n    end\n    largest\nend\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324,\
    \ 4, 3])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([1, 0, 1, 8, 2, 4597,\
    \ 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3])\n\
    </cell>\n<code language=julia-1.5>\nskjkasdkd([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0, 81, 12,\
    \ 3, 1, 21])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0, 8, 1, 2, 1, 7])\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the number of prime\
    \ numbers less than a given number.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32,\
    \ 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1, 8, 2, 4597,\
    \ 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1, 3, 1, 32,\
    \ 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0,\
    \ 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191])\
    \ == 19)\n\t@test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127,\
    \ 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpniwbdqw2.jl:30\nin expression starting at\
    \ /tmp/tmpniwbdqw2.jl:30\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    primes = primes(length(lst))\n    largest = 0\n    for p in primes\n \
    \       if lst.contains(p)\n            largest = largest+p\n        end\n   \
    \ end\n    return largest\nend\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n</cell>\n\
    <code language=julia-1.5>\nskjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6])\n</cell>\n<code\
    \ language=julia-1.5>\nskjkasdkd([0, 81, 12, 3, 1, 21])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([0, 8, 1, 2, 1, 7])\n</cell>\n<text>\nProblem 3\nWrite a function that\
    \ takes a vector of integers and returns the sum of the squares of the integers\
    \ in the vector.\nusing Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    \t@test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\
    \ == 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t\
    @test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t\
    @test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192])\
    \ == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpquivv389.jl:28\nin expression starting at\
    \ /tmp/tmpquivv389.jl:28\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    largest = minimum(lst)\n    largestPrime = primes[largest]\n   \
    \ largestPrimeDigits = digits[largestPrime]\n    largestPrimeDigitSum = sum(largestPrimeDigits)\n\
    \    largestPrimeDigitSum = largestPrimeDigitSum + largestPrimeDigitSum\n    largestPrimeDigitSum\
    \ = largestPrimeDigitSum + largestPrimeDigitSum\n    largestPrimeDigitSum = largestPrimeDigitSum\
    \ + largestPrimeDigitSum\n    largestPrimeDigitSum = largestPrimeDigitSum + largestPrimeDigitSum\n\
    \    largestPrimeDigitSum = largestPrimeDigitSum + largestPrimeDigitSum\n    largestPrimeDigitSum\
    \ = largestPrimeDigitSum + largestPrimeDigitSum\n    largestPrimeDigitSum = largestPrimeDigitSum\
    \ + largestPrimeDigitSum\n    largestPrimeDigitSum = largestPrimeDigitSum + largestPrimeDigitSum\n\
    \    largestPrimeDigitSum = largestPrimeDigitSum + largestPrimeDigitSum\n    largestPrimeDigitSum\
    \ = largestPrimeDigitSum + largestPrimeDigitSum\n    largestPrimeDigitSum = largestPrimeDigitSum\
    \ + largestPrimeDigitSum\n    largestPrimeDigitSum = largestPrimeDigitSum + largestPrimeDigitSum\n\
    \    largestPrimeDigitSum = largestPrimeDigitSum + largestPrimeDigitSum\n    largestPrimeDigitSum\
    \ = largestPrimeDigitSum + largestPrimeDigitSum\n    largestPrimeDigitSum = largestPrimeDigitSum\
    \ + largestPrimeDigitSum\n    largestPrimeDigitSum = largestPrimeDigitSum + largestPrimeDigitSum\n\
    \    largestPrimeDigitSum = largestPrimeDigitSum + largestPrimeDigitSum\n    largestPrimeDigitSum\
    \ = largestPrimeDigitSum + largestPrimeDigitSum\n    largestPrimeDigitSum = largestPrimeDigitSum\
    \ + largestPrimeDigitSum\n    largestPrimeDigitSum = largestPrimeDigitSum + largestPrimeDigitSum\n\
    \    largestPrimeDigitSum = largestPrimeDigitSum + largestPri\nusing Test\n\n\
    @testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp38cdy45_.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp38cdy45_.jl:1\n\
    in expression starting at /tmp/tmp38cdy45_.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    primes = primes(length(lst))\n    largest = primes[end]\n    largest =\
    \ largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = lar\nusing Test\n\n@testset begin\n\
    \ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1,\
    \ 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmptkm6wrun.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmptkm6wrun.jl:1\n\
    in expression starting at /tmp/tmptkm6wrun.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    primes = primes(length(lst))\n    largest = primes[end]\n    largest =\
    \ largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.ceiling()\n    largest = largest.ceiling()\n    largest\
    \ = largest.ceiling()\n    largest = largest.ceiling()\n    largest = largest.ceiling()\n\
    \    largest = largest.ceiling()\n    largest = largest.ceiling()\n    largest\
    \ = largest.ceiling()\n    largest = largest.ceiling()\n    largest = largest.ceiling()\n\
    \    largest = largest.ceiling()\n    largest = largest.ceiling()\n    largest\
    \ = largest.ceiling()\n    largest = largest.ceiling()\n    largest = largest.ceiling()\n\
    \    largest = largest.ceiling()\n    largest = largest.ceiling()\n    largest\
    \ = largest.ceiling()\n    largest = largest.ceiling()\n    largest = largest.ceiling()\n\
    \    largest = largest.ceiling()\n    largest = largest.ceiling()\n    largest\
    \ = largest.ceiling()\n    largest = largest.ceiling()\n    largest = largest.ceiling()\n\
    \    largest = largest.ceiling()\n    largest = largest.ceiling()\n    largest\
    \ = largest.ceiling()\n    largest = largest.ceiling()\n    largest = largest.ceiling()\n\
    \    largest = largest.ceiling()\n    largest = largest.ceiling()\n    largest\
    \ = largest.ceiling()\n    largest = largest.ceiling()\n    largest = largest.ceiling()\n\
    \    largest = largest.ceiling()\n    largest = largest.ceiling()\n    largest\
    \ = largest.ceiling()\n    largest = largest.ceiling()\n    largest = largest.ceiling()\n\
    \    largest = largest.ceiling()\n    largest = largest.ceiling()\n    largest\
    \ = largest.ceiling()\n    largest = largest.ceiling()\n    largest = largest.ceiling()\n\
    \    largest = largest.ceiling()\n    largest = lar\nusing Test\n\n@testset begin\n\
    \ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1,\
    \ 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxlkqffqo.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxlkqffqo.jl:1\n\
    in expression starting at /tmp/tmpxlkqffqo.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    largest = findmax(lst)\n    largest = largest[1]\n    largest = largest[1]\n\
    \    largest = largest[1]\n    largest = largest[1]\n    largest = largest[1]\n\
    \    largest = largest[1]\n    largest = largest[1]\n    largest = largest[1]\n\
    \    largest = largest[1]\n    largest = largest[1]\n    largest = largest[1]\n\
    \    largest = largest[1]\n    largest = largest[1]\n    largest = largest[1]\n\
    \    largest = largest[1]\n    largest = largest[1]\n    largest = largest[1]\n\
    \    largest = largest[1]\n    largest = largest[1]\n    largest = largest[1]\n\
    \    largest = largest[1]\n    largest = largest[1]\n    largest = largest[1]\n\
    \    largest = largest[1]\n    largest = largest[1]\n    largest = largest[1]\n\
    \    largest = largest[1]\n    largest = largest[1]\n    largest = largest[1]\n\
    \    largest = largest[1]\n    largest = largest[1]\n    largest = largest[1]\n\
    \    largest = largest[1]\n    largest = largest[1]\n    largest = largest[1]\n\
    \    largest = largest[1]\n    largest = largest[1]\n    largest = largest[1]\n\
    \    largest = largest[1]\n    largest = largest[1]\n    largest = largest[1]\n\
    \    largest = largest[1]\n    largest = largest[1]\n    largest = largest[1]\n\
    \    largest = largest[1]\n    largest = largest[1]\n    largest = largest[1]\n\
    \    largest = largest[1]\n    largest = largest[1]\n    largest = largest[1]\n\
    \    largest = largest[1]\n    largest = largest[1]\n    largest = largest[1]\n\
    \    largest = largest[1]\n    largest = largest[1]\n    largest = largest[1]\n\
    \    largest = largest[1]\n    largest = largest[1]\n    largest = largest[1]\n\
    \    largest = largest[1]\n    largest = largest[1]\n    largest = largest[1]\n\
    \    largest = largest[1]\nusing Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\
    \t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1,\
    \ 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12,\
    \ 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191])\
    \ == 19)\n\t@test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127,\
    \ 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpbz__84oz.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpbz__84oz.jl:1\n\
    in expression starting at /tmp/tmpbz__84oz.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    largest = Int64(0)\n    largestPrime = Int64(0)\n    largestPrimeIndex\
    \ = Int64(0)\n    largestPrimeIndex2 = Int64(0)\n    largestPrimeIndex3 = Int64(0)\n\
    \    largestPrimeIndex4 = Int64(0)\n    largestPrimeIndex5 = Int64(0)\n    largestPrimeIndex6\
    \ = Int64(0)\n    largestPrimeIndex7 = Int64(0)\n    largestPrimeIndex8 = Int64(0)\n\
    \    largestPrimeIndex9 = Int64(0)\n    largestPrimeIndex10 = Int64(0)\n    largestPrimeIndex11\
    \ = Int64(0)\n    largestPrimeIndex12 = Int64(0)\n    largestPrimeIndex13 = Int64(0)\n\
    \    largestPrimeIndex14 = Int64(0)\n    largestPrimeIndex15 = Int64(0)\n    largestPrimeIndex16\
    \ = Int64(0)\n    largestPrimeIndex17 = Int64(0)\n    largestPrimeIndex18 = Int64(0)\n\
    \    largestPrimeIndex19 = Int64(0)\n    largestPrimeIndex20 = Int64(0)\n    largestPrimeIndex21\
    \ = Int64(0)\n    largestPrimeIndex22 = Int64(0)\n    largestPrimeIndex23 = Int64(0)\n\
    \    largestPrimeIndex24 = Int64(0)\n    largestPrimeIndex25 = Int64(0)\n    largestPrimeIndex26\
    \ = Int64(0)\n    largestPrimeIndex27 = Int64(0)\n    largestPrimeIndex28 = Int64(0)\n\
    \    largestPrimeIndex29 = Int64(0)\n    largestPrimeIndex30 = Int64(0)\n    largestPrimeIndex31\
    \ = Int64(0)\n    largestPrimeIndex32 = Int64(0)\n    largestPrimeIndex33 = Int64(0)\n\
    \    largestPrimeIndex34 = Int64(0)\n    largestPrimeIndex35 = Int64(0)\n    largestPrimeIndex36\
    \ = Int64(0)\n    largestPrimeIndex37 = Int64(0)\n    largestPrimeIndex38 = Int64(0)\n\
    \    largestPrimeIndex39 = Int64(0)\n    largestPrimeIndex40 = Int64(0)\n    largestPrimeIndex41\
    \ = Int64(0)\n    largestPrimeIndex42 = Int64(0)\n    \nusing Test\n\n@testset\
    \ begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4,\
    \ 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmprdqqprp2.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmprdqqprp2.jl:1\n\
    in expression starting at /tmp/tmprdqqprp2.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    primes = primes(length(lst))\n    \n    largest = primes[end]\n\
    \    \n    sum = 0\n    \n    for el in lst\n        if el == largest\n      \
    \      sum += el\n        else\n            largest = el\n        end\n    end\n\
    \    \n    return sum\nend\n</cell>\n<code language=julia-1.3>\nskjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n</cell>\n\
    <code language=julia-1.3>\nskjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1])\n</cell>\n<code language=julia-1.3>\nskjkasdkd([1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3])\n</cell>\n<code language=julia-1.3>\n\
    skjkasdkd([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6])\n</cell>\n<code\
    \ language=julia-1.3>\nskjkasdkd([0, 81, 12, 3, 1, 21])\n</cell>\n<code language=julia-1.3>\n\
    skjkasdkd([0, 8, 1, 2, 1, 7])\n</cell>\n<text>\nExercise\nWrite a function that\
    \ takes in a vector of integers and returns the sum of the digits in reverse order.\n\
    using Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    \t@test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\
    \ == 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t\
    @test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t\
    @test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192])\
    \ == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_tdllnty.jl:36\nin expression starting at\
    \ /tmp/tmp_tdllnty.jl:36\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    primes = primes(length(lst))\n    \n    largest = primes[end]\n\
    \    \n    sum = 0\n    \n    for el in lst\n        if el == largest\n      \
    \      sum += el\n        else\n            largest = el\n        end\n    end\n\
    \    \n    return sum\nend\n</cell>\n<code language=julia-1.5>\n@test skjkasdkd([2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97]) == 10\n@test skjkasdkd([2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]) == 10\n@test skjkasdkd([2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97]) == 10\n@test skjkasdkd([2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]) == 10\n@test skjkasdkd([2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97]) == 10\n@test skjkasdkd([2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]) == 10\n@test skjkasdkd([2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97]) == 10\n@test skjkasdkd([2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]) == 10\n@test skjkasdkd([2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97]) == 10\n@test skjkasdkd([2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]) == 10\n@test skjkasdkd([2,\
    \ 3, \nusing Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    \t@test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\
    \ == 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t\
    @test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t\
    @test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192])\
    \ == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpo_t1rdle.jl:36\nin expression starting at\
    \ /tmp/tmpo_t1rdle.jl:36\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    primes = primes(lst)\n    \n    largest = primes[end]\n    \n  \
    \  sum = 0\n    \n    for el in primes\n        if el > largest\n            largest\
    \ = el\n        end\n    end\n    \n    for el in primes\n        if el == largest\n\
    \            sum += el\n        end\n    end\n    \n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nskjkasdkd([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181,\
    \ 32, 4, 32, 3, 2, 32, 324, 4, 3])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3])\n\
    </cell>\n<code language=julia-1.5>\nskjkasdkd([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0, 81, 12,\
    \ 3, 1, 21])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0, 8, 1, 2, 1, 7])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a vector of integers\
    \ and returns the sum of the squares of the integers in the vector.\nusing Test\n\
    \n@testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3,\
    \ 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4vphctub.jl:40\nin expression starting at\
    \ /tmp/tmp4vphctub.jl:40\n"
  stdout: ''
- exit_code: -1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    primes = primes(length(lst))\n    \n    largest = primes[end]\n\
    \    \n    largest = largest * 10 + lst[end]\n    \n    largest = largest.digits()\n\
    \    \n    largest = largest.sum()\n    \n    return largest\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3,\
    \ 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpn9y8s64c.jl:37\n  Test threw
    exception\n  Expression: candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32,
    4, 32, 3, 2, 32, 324, 4, 3]) == 10\n  UndefVarError: primes not defined\n  Stacktrace:\n   [1]
    skjkasdkd(lst::Vector{Int64})\n     @ Main /tmp/tmpn9y8s64c.jl:20\n   [2] macro
    expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpn9y8s64c.jl:37 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpn9y8s64c.jl:36\ntest set: Error
    During Test at /tmp/tmpn9y8s64c.jl:38\n  Test threw exception\n  Expression: candidate([1,
    0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25\n  UndefVarError:
    primes not defined\n  Stacktrace:\n   [1] skjkasdkd(lst::Vector{Int64})\n     @
    Main /tmp/tmpn9y8s64c.jl:20\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpn9y8s64c.jl:38 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpn9y8s64c.jl:36\ntest set: Error
    During Test at /tmp/tmpn9y8s64c.jl:39\n  Test threw exception\n  Expression: candidate([1,
    3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13\n  UndefVarError:
    primes not defined\n  Stacktrace:\n   [1] skjkasdkd(lst::Vector{Int64})\n     @
    Main /tmp/tmpn9y8s64c.jl:20\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpn9y8s64c.jl:39 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpn9y8s64c.jl:36\ntest set: Error
    During Test at /tmp/tmpn9y8s64c.jl:40\n  Test threw exception\n  '
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpl4v7mbcj.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpl4v7mbcj.jl:1\n\
    in expression starting at /tmp/tmpl4v7mbcj.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    largest = Int64(0)\n    largestPrime = Int64(0)\n    largestPrimeIndex\
    \ = Int64(0)\n    largestPrimeValue = Int64(0)\n    largestPrimeValueIndex = Int64(0)\n\
    \    largestPrimeValueSum = Int64(0)\n    largestPrimeValueSumIndex = Int64(0)\n\
    \    largestPrimeValueSumValue = Int64(0)\n    largestPrimeValueSumValueIndex\
    \ = Int64(0)\n    largestPrimeValueSumValueSum = Int64(0)\n    largestPrimeValueSumValueSumIndex\
    \ = Int64(0)\n    largestPrimeValueSumValueSumValue = Int64(0)\n    largestPrimeValueSumValueSumValueIndex\
    \ = Int64(0)\n    largestPrimeValueSumValueSumValueSum = Int64(0)\n    largestPrimeValueSumValueSumValueSumIndex\
    \ = Int64(0)\n    largestPrimeValueSumValueSumValueSumValue = Int64(0)\n    largestPrimeValueSumValueSumValueSumValueIndex\
    \ = Int64(0)\n    largestPrimeValueSumValueSumValueSumValueSum = Int64(0)\n  \
    \  largestPrimeValueSumValueSumValueSumValueSumIndex = Int64(0)\n    largestPrimeValueSumValueSumValueSumValueSumValue\
    \ = Int64(0)\n    largestPrimeValueSumValueSumValueSumValueSumValueIndex = Int64(0)\n\
    \    largestPrimeValueSumValueSumValueSumValueSumValueSum = Int64(0)\n    largestPrimeValueSumValueSumValueSumValueSumValueSumIndex\
    \ = Int64(0)\n    largestPrimeValueSumValueSumValueSumValueSumValueSumValue =\
    \ Int64(0)\n    largestPrimeValueSumValueSumValueSumValueSumValueSumValueIndex\
    \ = Int64(0)\n    largestPrimeValueSumValueSumValueSumValueSumValueSumValueSum\
    \ = Int64(0)\n    largestPrimeValueSumValueSumValueSumValueSumValueSumValueSumIndex\
    \ = Int64(0)\n    largestPrimeValueSumValueSumValueSumValueSumValueSumValueSumValue\
    \ = Int64(0)\n    largestPrimeValueSumValueSumValueSumValueSumValueSumValueSumIndex\
    \ = Int64(0)\n    largestPrimeValueSumValueSumValueSumValueSumValueSumValueSumValueSum\
    \ = Int64(0)\n    largestPrimeValueSumValueSumValueSumValueSumValueSumValueSumValueSumIndex\
    \ = Int64(0)\n\nusing Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    \t@test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\
    \ == 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t\
    @test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t\
    @test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192])\
    \ == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp0o9prem4.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp0o9prem4.jl:1\n\
    in expression starting at /tmp/tmp0o9prem4.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    primes = primes(length(lst))\n    largest = primes[end]\n    largest =\
    \ largest.abs()\n    largest = largest.ceil()\n    largest = largest.abs()\n \
    \   largest = largest.ceil()\n    largest = largest.abs()\n    largest = largest.ceil()\n\
    \    largest = largest.abs()\n    largest = largest.ceil()\n    largest = largest.abs()\n\
    \    largest = largest.ceil()\n    largest = largest.abs()\n    largest = largest.ceil()\n\
    \    largest = largest.abs()\n    largest = largest.ceil()\n    largest = largest.abs()\n\
    \    largest = largest.ceil()\n    largest = largest.abs()\n    largest = largest.ceil()\n\
    \    largest = largest.abs()\n    largest = largest.ceil()\n    largest = largest.abs()\n\
    \    largest = largest.ceil()\n    largest = largest.abs()\n    largest = largest.ceil()\n\
    \    largest = largest.abs()\n    largest = largest.ceil()\n    largest = largest.abs()\n\
    \    largest = largest.ceil()\n    largest = largest.abs()\n    largest = largest.ceil()\n\
    \    largest = largest.abs()\n    largest = largest.ceil()\n    largest = largest.abs()\n\
    \    largest = largest.ceil()\n    largest = largest.abs()\n    largest = largest.ceil()\n\
    \    largest = largest.abs()\n    largest = largest.ceil()\n    largest = largest.abs()\n\
    \    largest = largest.ceil()\n    largest = largest.abs()\n    largest = largest.ceil()\n\
    \    largest = largest.abs()\n    largest = largest.ceil()\n    largest = largest.abs()\n\
    \    largest = largest.ceil()\n    largest = largest.abs()\n    largest = largest.ceil()\n\
    \    largest = largest.abs()\n    largest = lar\nusing Test\n\n@testset begin\n\
    \ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1,\
    \ 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpg_m1u4_z.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpg_m1u4_z.jl:1\n\
    in expression starting at /tmp/tmpg_m1u4_z.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    primes = primes(length(lst))\n    largest = 0\n    for p in primes\n \
    \       if lst.last() % p == 0\n            largest = lst.last()\n           \
    \ break\n        end\n    end\n    return largest + sum(map(x -> x % largest,\
    \ lst))\nend\n</cell>\n<code language=julia-1.5>\n@time skjkasdkd(rand(1:10000,\
    \ 1000));\n</cell>\n<text>\nExercise 2\nWrite a function that takes in a vector\
    \ of integers and returns the sum of the squares of the integers in the vector.\n\
    using Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    \t@test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\
    \ == 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t\
    @test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t\
    @test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192])\
    \ == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpn75j_s6b.jl:29\nin expression starting at\
    \ /tmp/tmpn75j_s6b.jl:29\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    largest = Int64(0)\n    largestPrime = Int64(0)\n    largestPrimeIndex\
    \ = Int64(0)\n    largestPrimeIndex = Int64(0)\n    largestPrimeIndex = Int64(0)\n\
    \    largestPrimeIndex = Int64(0)\n    largestPrimeIndex = Int64(0)\n    largestPrimeIndex\
    \ = Int64(0)\n    largestPrimeIndex = Int64(0)\n    largestPrimeIndex = Int64(0)\n\
    \    largestPrimeIndex = Int64(0)\n    largestPrimeIndex = Int64(0)\n    largestPrimeIndex\
    \ = Int64(0)\n    largestPrimeIndex = Int64(0)\n    largestPrimeIndex = Int64(0)\n\
    \    largestPrimeIndex = Int64(0)\n    largestPrimeIndex = Int64(0)\n    largestPrimeIndex\
    \ = Int64(0)\n    largestPrimeIndex = Int64(0)\n    largestPrimeIndex = Int64(0)\n\
    \    largestPrimeIndex = Int64(0)\n    largestPrimeIndex = Int64(0)\n    largestPrimeIndex\
    \ = Int64(0)\n    largestPrimeIndex = Int64(0)\n    largestPrimeIndex = Int64(0)\n\
    \    largestPrimeIndex = Int64(0)\n    largestPrimeIndex = Int64(0)\n    largestPrimeIndex\
    \ = Int64(0)\n    largestPrimeIndex = Int64(0)\n    largestPrimeIndex = Int64(0)\n\
    \    largestPrimeIndex = Int64(0)\n    largestPrimeIndex = Int64(0)\n    largestPrimeIndex\
    \ = Int64(0)\n    largestPrimeIndex = Int64(0)\n    largestPrimeIndex = Int64(0)\n\
    \    largestPrimeIndex = Int64(0)\n    largestPrimeIndex = Int64(0)\n    largestPrimeIndex\
    \ = Int64(0)\n    largestPrimeIndex = Int64(0)\n    largestPrimeIndex = Int64(0)\n\
    \    largestPrimeIndex = Int64(0)\n    largestPrimeIndex = Int64(0)\n    largestPrimeIndex\
    \ = Int64(0)\n    largestPrimeIndex = Int64(0)\n    largestPrimeIndex = Int64(0)\n\
    \    largestPrimeIndex = Int64(0)\n    largestPrimeIndex = Int64(0)\n    largestPrimeIndex\
    \ = Int64(0)\n    largestPrimeIndex = Int64(0)\n    largestPrimeIndex = Int64(0)\n\
    \    largestPrimeIndex = Int64(0)\n    lar\nusing Test\n\n@testset begin\n\ncandidate\
    \ = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32,\
    \ 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1, 8, 2, 4597,\
    \ 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1, 3, 1, 32,\
    \ 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0,\
    \ 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191])\
    \ == 19)\n\t@test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127,\
    \ 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_z5x2_g2.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_z5x2_g2.jl:1\n\
    in expression starting at /tmp/tmp_z5x2_g2.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    primes = primes(length(lst))\n    largest = 0\n    for p in primes\n \
    \       if lst.contains(p)\n            largest = largest+p\n        end\n   \
    \ end\n    return largest\nend\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n</cell>\n\
    <code language=julia-1.5>\nskjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6])\n</cell>\n<code\
    \ language=julia-1.5>\nskjkasdkd([0, 81, 12, 3, 1, 21])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([0, 8, 1, 2, 1, 7])\n</cell>\n<text>\nProblem 3\nWrite a function that\
    \ returns the number of prime numbers less than or equal to n.\nusing Test\n\n\
    @testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphj4umy7z.jl:28\nin expression starting at\
    \ /tmp/tmphj4umy7z.jl:28\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    primes = Primes(lst)\n    \n    largest = primes[end]\n    \n  \
    \  sum = 0\n    \n    for p in primes\n        if p > largest\n            largest\
    \ = p\n        end\n    end\n    \n    for p in primes\n        if p > largest\n\
    \            sum += p\n        end\n    end\n    \n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nskjkasdkd([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181,\
    \ 32, 4, 32, 3, 2, 32, 324, 4, 3])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3])\n\
    </cell>\n<code language=julia-1.5>\nskjkasdkd([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0, 81, 12,\
    \ 3, 1, 21])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0, 8, 1, 2, 1, 7])\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the number of prime\
    \ numbers less than a given number.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32,\
    \ 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1, 8, 2, 4597,\
    \ 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1, 3, 1, 32,\
    \ 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0,\
    \ 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191])\
    \ == 19)\n\t@test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127,\
    \ 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8v9h6aik.jl:40\nin expression starting at\
    \ /tmp/tmp8v9h6aik.jl:40\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    largest = Int.(max(lst))\n    largestPrime = Int.(largest)\n   \
    \ largestPrimeFactor = Int.(largestPrime)\n    largestPrimeFactor2 = Int.(largestPrimeFactor)\n\
    \    largestPrimeFactor3 = Int.(largestPrimeFactor2)\n    largestPrimeFactor4\
    \ = Int.(largestPrimeFactor3)\n    largestPrimeFactor5 = Int.(largestPrimeFactor4)\n\
    \    largestPrimeFactor6 = Int.(largestPrimeFactor5)\n    largestPrimeFactor7\
    \ = Int.(largestPrimeFactor6)\n    largestPrimeFactor8 = Int.(largestPrimeFactor7)\n\
    \    largestPrimeFactor9 = Int.(largestPrimeFactor8)\n    largestPrimeFactor10\
    \ = Int.(largestPrimeFactor9)\n    largestPrimeFactor11 = Int.(largestPrimeFactor10)\n\
    \    largestPrimeFactor12 = Int.(largestPrimeFactor11)\n    largestPrimeFactor13\
    \ = Int.(largestPrimeFactor12)\n    largestPrimeFactor14 = Int.(largestPrimeFactor13)\n\
    \    largestPrimeFactor15 = Int.(largestPrimeFactor14)\n    largestPrimeFactor16\
    \ = Int.(largestPrimeFactor15)\n    largestPrimeFactor17 = Int.(largestPrimeFactor16)\n\
    \    largestPrimeFactor18 = Int.(largestPrimeFactor17)\n    largestPrimeFactor19\
    \ = Int.(largestPrimeFactor18)\n    largestPrimeFactor20 = Int.(largestPrimeFactor19)\n\
    \    largestPrimeFactor21 = Int.(largestPrimeFactor20)\n    largestPrimeFactor22\
    \ = Int.(largestPrimeFactor21)\n    largestPrimeFactor23 = Int.(largestPrimeFactor22)\n\
    \    largestPrimeFactor24 = Int.(largestPrimeFactor23)\n    largestPrimeFactor25\
    \ = Int.(largestPrimeFactor24)\n    largestPrimeFactor26 = Int.(largestPrimeFactor25)\n\
    \    largestPrimeFactor27 = Int.(largestPrimeFactor26)\n    largestPrimeFactor28\
    \ = Int.\nusing Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    \t@test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\
    \ == 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t\
    @test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t\
    @test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192])\
    \ == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"function\" at /tmp/tmp5jvnk9md.jl:18 expected\
    \ \"end\", got \"Test\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5jvnk9md.jl:50\n\
    in expression starting at /tmp/tmp5jvnk9md.jl:50\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    primes = primes(length(lst))\n    largest = primes[end]\n    sum\
    \ = 0\n    for x in lst\n        if x == largest\n            sum += largest\n\
    \        else\n            largest = primes[end]\n            sum += largest\n\
    \        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324,\
    \ 4, 3])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([1, 0, 1, 8, 2, 4597,\
    \ 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3])\n\
    </cell>\n<code language=julia-1.5>\nskjkasdkd([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0, 81, 12,\
    \ 3, 1, 21])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0, 8, 1, 2, 1, 7])\n\
    </cell>\n<code language=julia-1.5>\nskjkasdkd([0, 8, 1, 2, 1, 7])\n</cell>\n<code\
    \ language=julia-1.5>\nskjkasdkd([0, 8, 1, 2, 1, 7])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([0, 8, 1, 2, 1, 7])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0,\
    \ 8, 1, 2, 1, 7])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0, 8, 1, 2,\
    \ 1, 7])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0, 8, 1, 2, 1, 7])\n\
    </cell>\n<code language=julia-1.5>\nskjkasdkd([0, 8, 1, 2, 1, 7])\n</cell>\n<code\
    \ language=julia-1.5>\nskjkasdkd([0, 8, 1, 2, 1, 7])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([0, 8, 1, 2, 1, 7])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0,\
    \ 8, 1, 2, 1, 7])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0, 8, 1, 2,\
    \ 1, 7])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0, 8, 1, 2, 1, 7])\n\
    </cell>\n<code language=julia-1.5>\nskjkasdkd([0, 8, 1, 2, 1, \nusing Test\n\n\
    @testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3r8rizff.jl:33\nin expression starting at\
    \ /tmp/tmp3r8rizff.jl:33\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    largest = Int64(0)\n    largestPrime = Int64(0)\n    largestPrimeIndex\
    \ = Int64(0)\n    largestPrimeIndex2 = Int64(0)\n    largestPrimeIndex3 = Int64(0)\n\
    \    largestPrimeIndex4 = Int64(0)\n    largestPrimeIndex5 = Int64(0)\n    largestPrimeIndex6\
    \ = Int64(0)\n    largestPrimeIndex7 = Int64(0)\n    largestPrimeIndex8 = Int64(0)\n\
    \    largestPrimeIndex9 = Int64(0)\n    largestPrimeIndex10 = Int64(0)\n    largestPrimeIndex11\
    \ = Int64(0)\n    largestPrimeIndex12 = Int64(0)\n    largestPrimeIndex13 = Int64(0)\n\
    \    largestPrimeIndex14 = Int64(0)\n    largestPrimeIndex15 = Int64(0)\n    largestPrimeIndex16\
    \ = Int64(0)\n    largestPrimeIndex17 = Int64(0)\n    largestPrimeIndex18 = Int64(0)\n\
    \    largestPrimeIndex19 = Int64(0)\n    largestPrimeIndex20 = Int64(0)\n    largestPrimeIndex21\
    \ = Int64(0)\n    largestPrimeIndex22 = Int64(0)\n    largestPrimeIndex23 = Int64(0)\n\
    \    largestPrimeIndex24 = Int64(0)\n    largestPrimeIndex25 = Int64(0)\n    largestPrimeIndex26\
    \ = Int64(0)\n    largestPrimeIndex27 = Int64(0)\n    largestPrimeIndex28 = Int64(0)\n\
    \    largestPrimeIndex29 = Int64(0)\n    largestPrimeIndex30 = Int64(0)\n    largestPrimeIndex31\
    \ = Int64(0)\n    largestPrimeIndex32 = Int64(0)\n    largestPrimeIndex33 = Int64(0)\n\
    \    largestPrimeIndex34 = Int64(0)\n    largestPrimeIndex35 = Int64(0)\n    largestPrimeIndex36\
    \ = Int64(0)\n    largestPrimeIndex37 = Int64(0)\n    largestPrimeIndex38 = Int64(0)\n\
    \    largestPrimeIndex39 = Int64(0)\n    largestPrimeIndex40 = Int64(0)\n    largestPrimeIndex41\
    \ = Int64(0)\n    largestPrimeIndex42 = Int64(0)\n    \nusing Test\n\n@testset\
    \ begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4,\
    \ 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmprdqqprp2.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmprdqqprp2.jl:1\n\
    in expression starting at /tmp/tmprdqqprp2.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    primes = primes(length(lst))\n    largest = primes[end]\n    largest =\
    \ largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = lar\nusing Test\n\n@testset begin\n\
    \ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1,\
    \ 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmptkm6wrun.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmptkm6wrun.jl:1\n\
    in expression starting at /tmp/tmptkm6wrun.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    primes = primes(length(lst))\n    largest = primes[end]\n    largest =\
    \ largest.abs()\n    largest = largest.ceiling()\n    largest = largest.abs()\n\
    \    largest = largest.ceiling()\n    largest = largest.abs()\n    largest = largest.ceiling()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.abs()\n\
    \    largest = largest.ceiling()\n    largest = largest.abs()\n    largest = largest.ceiling()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.abs()\n\
    \    largest = largest.ceiling()\n    largest = largest.abs()\n    largest = largest.ceiling()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.abs()\n\
    \    largest = largest.ceiling()\n    largest = largest.abs()\n    largest = largest.ceiling()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.abs()\n\
    \    largest = largest.ceiling()\n    largest = largest.abs()\n    largest = largest.ceiling()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.abs()\n\
    \    largest = largest.ceiling()\n    largest = largest.abs()\n    largest = largest.ceiling()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.abs()\n\
    \    largest = largest.ceiling()\n    largest = largest.abs()\n    largest = largest.ceiling()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.abs()\n\
    \    largest = largest.ceiling()\n    largest = largest.abs()\n    largest = largest.ceiling()\n\
    \    largest = largest.abs()\n    largest = lar\nusing Test\n\n@testset begin\n\
    \ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1,\
    \ 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp9oyd_4_e.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp9oyd_4_e.jl:1\n\
    in expression starting at /tmp/tmp9oyd_4_e.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    largest = Int64(0)\n    largestPrime = Int64(0)\n    largestPrimeIndex\
    \ = Int64(0)\n    largestPrimeIndex2 = Int64(0)\n    largestPrimeIndex3 = Int64(0)\n\
    \    largestPrimeIndex4 = Int64(0)\n    largestPrimeIndex5 = Int64(0)\n    largestPrimeIndex6\
    \ = Int64(0)\n    largestPrimeIndex7 = Int64(0)\n    largestPrimeIndex8 = Int64(0)\n\
    \    largestPrimeIndex9 = Int64(0)\n    largestPrimeIndex10 = Int64(0)\n    largestPrimeIndex11\
    \ = Int64(0)\n    largestPrimeIndex12 = Int64(0)\n    largestPrimeIndex13 = Int64(0)\n\
    \    largestPrimeIndex14 = Int64(0)\n    largestPrimeIndex15 = Int64(0)\n    largestPrimeIndex16\
    \ = Int64(0)\n    largestPrimeIndex17 = Int64(0)\n    largestPrimeIndex18 = Int64(0)\n\
    \    largestPrimeIndex19 = Int64(0)\n    largestPrimeIndex20 = Int64(0)\n    largestPrimeIndex21\
    \ = Int64(0)\n    largestPrimeIndex22 = Int64(0)\n    largestPrimeIndex23 = Int64(0)\n\
    \    largestPrimeIndex24 = Int64(0)\n    largestPrimeIndex25 = Int64(0)\n    largestPrimeIndex26\
    \ = Int64(0)\n    largestPrimeIndex27 = Int64(0)\n    largestPrimeIndex28 = Int64(0)\n\
    \    largestPrimeIndex29 = Int64(0)\n    largestPrimeIndex30 = Int64(0)\n    largestPrimeIndex31\
    \ = Int64(0)\n    largestPrimeIndex32 = Int64(0)\n    largestPrimeIndex33 = Int64(0)\n\
    \    largestPrimeIndex34 = Int64(0)\n    largestPrimeIndex35 = Int64(0)\n    largestPrimeIndex36\
    \ = Int64(0)\n    largestPrimeIndex37 = Int64(0)\n    largestPrimeIndex38 = Int64(0)\n\
    \    largestPrimeIndex39 = Int64(0)\n    largestPrimeIndex40 = Int64(0)\n    largestPrimeIndex41\
    \ = Int64(0)\n    largestPrimeIndex42 = Int64(0)\n    \nusing Test\n\n@testset\
    \ begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4,\
    \ 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmprdqqprp2.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmprdqqprp2.jl:1\n\
    in expression starting at /tmp/tmprdqqprp2.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    primes = primes(length(lst))\n    largest = primes[end]\n    largestPrime\
    \ = primes[end]\n    largestPrimeDigit = 0\n    largestPrimeDigitSum = 0\n   \
    \ for el in lst\n        if el == largestPrime\n            largestPrimeDigit\
    \ += 1\n            largestPrimeDigitSum += largestPrimeDigit\n        else\n\
    \            if el > largestPrime\n                largestPrime = el\n       \
    \         largestPrimeDigit = 1\n                largestPrimeDigitSum = largestPrimeDigit\n\
    \            else\n                largestPrimeDigit += 1\n                largestPrimeDigitSum\
    \ += largestPrimeDigit\n            end\n        end\n    end\n    return largestPrimeDigitSum\n\
    end\n</cell>\n<code language=julia-1.4>\nskjkasdkd([3, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n</cell>\n<code language=julia-1.4>\n\
    skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\n</cell>\n\
    <code language=julia-1.4>\nskjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163,\
    \ 23, 2323, 32, 30, 1, 9, 3])\n</cell>\n<code language=julia-1.4>\nskjkasdkd([0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6])\n</cell>\n<code language=julia-1.4>\n\
    skjkasdkd([0, 81, 12, 3, 1, 21])\n</cell>\n<code language=julia-1.4>\nskjkasdkd([0,\
    \ 8, 1, 2, 1, 7])\n</cell>\n<text>\nExercise: Find the largest prime factor of\
    \ a number\nThe prime factors of a number are all the numbers less than or equal\
    \ to its square root. For example, 6 is a prime factor of 36, and 8 is a prime\
    \ factor of 64. Write a function that takes in a number and returns the largest\
    \ prime factor of that number.\nusing Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\
    \t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1,\
    \ 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12,\
    \ 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191])\
    \ == 19)\n\t@test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127,\
    \ 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4cqglvuv.jl:42\nin expression starting at\
    \ /tmp/tmp4cqglvuv.jl:42\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    largest = Int.(lst[1])\n    largest = largest * largest\n    largest\
    \ = largest * largest\n    largest = largest * largest\n    largest = largest\
    \ * largest\n    largest = largest * largest\n    largest = largest * largest\n\
    \    largest = largest * largest\n    largest = largest * largest\n    largest\
    \ = largest * largest\n    largest = largest * largest\n    largest = largest\
    \ * largest\n    largest = largest * largest\n    largest = largest * largest\n\
    \    largest = largest * largest\n    largest = largest * largest\n    largest\
    \ = largest * largest\n    largest = largest * largest\n    largest = largest\
    \ * largest\n    largest = largest * largest\n    largest = largest * largest\n\
    \    largest = largest * largest\n    largest = largest * largest\n    largest\
    \ = largest * largest\n    largest = largest * largest\n    largest = largest\
    \ * largest\n    largest = largest * largest\n    largest = largest * largest\n\
    \    largest = largest * largest\n    largest = largest * largest\n    largest\
    \ = largest * largest\n    largest = largest * largest\n    largest = largest\
    \ * largest\n    largest = largest * largest\n    largest = largest * largest\n\
    \    largest = largest * largest\n    largest = largest * largest\n    largest\
    \ = largest * largest\n    largest = largest * largest\n    largest = largest\
    \ * largest\n    largest = largest * largest\n    largest = largest * largest\n\
    \    largest = largest * largest\n    largest = largest * largest\n    largest\
    \ = largest * largest\n    largest = largest * largest\n    largest = largest\
    \ * largest\n    largest = largest * largest\n    largest = largest * largest\n\
    \    largest = largest * largest\n    largest = largest * largest\n\nusing Test\n\
    \n@testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3,\
    \ 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpw5hlzwry.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpw5hlzwry.jl:1\n\
    in expression starting at /tmp/tmpw5hlzwry.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    largest = 0\n    largestPrime = 0\n    largestSum = 0\n    for x in lst\n\
    \        if x == largestPrime\n            largestPrime = largestPrime + 1\n \
    \           largestSum = largestSum + largestPrime\n        else\n           \
    \ if largestPrime > largest\n                largestPrime = largestPrime\n   \
    \             largestSum = largestSum + largestPrime\n            largestPrime\
    \ = 1\n            largest = largestPrime\n            largestSum = largestSum\
    \ + largestPrime\n        end\n    end\n    return largestSum\nend\n</cell>\n\
    <code language=julia-1.4>\nskjkasdkd([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181,\
    \ 32, 4, 32, 3, 2, 32, 324, 4, 3])\n</cell>\n<code language=julia-1.4>\nskjkasdkd([1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\n</cell>\n<code language=julia-1.4>\n\
    skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3])\n\
    </cell>\n<code language=julia-1.4>\nskjkasdkd([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6])\n</cell>\n<code language=julia-1.4>\nskjkasdkd([0, 81, 12,\
    \ 3, 1, 21])\n</cell>\n<code language=julia-1.4>\nskjkasdkd([0, 8, 1, 2, 1, 7])\n\
    </cell>\n<text>\nProblem 3\nThe sum of the primes below 10 is 2 + 3 + 5 + 7 =\
    \ 17.\nusing Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    \t@test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\
    \ == 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t\
    @test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t\
    @test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192])\
    \ == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpl8wgxu_3.jl:37\nin expression starting at\
    \ /tmp/tmpl8wgxu_3.jl:37\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    primes = primes(length(lst))\n    largest = primes[end]\n    sum\
    \ = 0\n    for i in primes\n        if lst.index(i) == length(lst)\n         \
    \   sum += i\n        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324,\
    \ 4, 3])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([1, 0, 1, 8, 2, 4597,\
    \ 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3])\n\
    </cell>\n<code language=julia-1.5>\nskjkasdkd([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0, 81, 12,\
    \ 3, 1, 21])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0, 8, 1, 2, 1, 7])\n\
    </cell>\n<code language=julia-1.5>\nskjkasdkd([1, 1, 2, 5, 7, 3, 6, 5, 6, 4, 3,\
    \ 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,\
    \ 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,\
    \ 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,\
    \ 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,\
    \ 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,\
    \ 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,\
    \ 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,\
    \ 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,\
    \ 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,\
    \ 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, \nusing Test\n\
    \n@testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3,\
    \ 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwzzsdaau.jl:30\nin expression starting at\
    \ /tmp/tmpwzzsdaau.jl:30\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    largest = Int64(0)\n    largestPrime = Int64(0)\n    largestPrimeIndex\
    \ = Int64(0)\n    largestPrimeIndex2 = Int64(0)\n    largestPrimeIndex3 = Int64(0)\n\
    \    largestPrimeIndex4 = Int64(0)\n    largestPrimeIndex5 = Int64(0)\n    largestPrimeIndex6\
    \ = Int64(0)\n    largestPrimeIndex7 = Int64(0)\n    largestPrimeIndex8 = Int64(0)\n\
    \    largestPrimeIndex9 = Int64(0)\n    largestPrimeIndex10 = Int64(0)\n    largestPrimeIndex11\
    \ = Int64(0)\n    largestPrimeIndex12 = Int64(0)\n    largestPrimeIndex13 = Int64(0)\n\
    \    largestPrimeIndex14 = Int64(0)\n    largestPrimeIndex15 = Int64(0)\n    largestPrimeIndex16\
    \ = Int64(0)\n    largestPrimeIndex17 = Int64(0)\n    largestPrimeIndex18 = Int64(0)\n\
    \    largestPrimeIndex19 = Int64(0)\n    largestPrimeIndex20 = Int64(0)\n    largestPrimeIndex21\
    \ = Int64(0)\n    largestPrimeIndex22 = Int64(0)\n    largestPrimeIndex23 = Int64(0)\n\
    \    largestPrimeIndex24 = Int64(0)\n    largestPrimeIndex25 = Int64(0)\n    largestPrimeIndex26\
    \ = Int64(0)\n    largestPrimeIndex27 = Int64(0)\n    largestPrimeIndex28 = Int64(0)\n\
    \    largestPrimeIndex29 = Int64(0)\n    largestPrimeIndex30 = Int64(0)\n    largestPrimeIndex31\
    \ = Int64(0)\n    largestPrimeIndex32 = Int64(0)\n    largestPrimeIndex33 = Int64(0)\n\
    \    largestPrimeIndex34 = Int64(0)\n    largestPrimeIndex35 = Int64(0)\n    largestPrimeIndex36\
    \ = Int64(0)\n    largestPrimeIndex37 = Int64(0)\n    largestPrimeIndex38 = Int64(0)\n\
    \    largestPrimeIndex39 = Int64(0)\n    largestPrimeIndex40 = Int64(0)\n    largestPrimeIndex41\
    \ = Int64(0)\n    largestPrimeIndex42 = Int64(0)\n    \nusing Test\n\n@testset\
    \ begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4,\
    \ 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmprdqqprp2.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmprdqqprp2.jl:1\n\
    in expression starting at /tmp/tmprdqqprp2.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    primes = primes(length(lst))\n    largest = 0\n    for p in primes\n \
    \       if lst.last() == p\n            largest = lst.last()\n            break\n\
    \        end\n    end\n    sum = 0\n    for p in primes\n        if lst.last()\
    \ == p\n            sum += lst.last()\n        end\n    end\n    return sum\n\
    end\n</cell>\n<code language=julia-1.4>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32,\
    \ 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1, 8, 2, 4597,\
    \ 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1, 3, 1, 32,\
    \ 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0,\
    \ 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191])\
    \ == 19)\n\t@test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127,\
    \ 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpeu8vtkex.jl:35\nin expression starting at\
    \ /tmp/tmpeu8vtkex.jl:35\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    primes = primes(length(lst))\n    largest = primes[end]\n    largest =\
    \ largest * largest\n    largest = largest * largest\n    largest = largest *\
    \ largest\n    largest = largest * largest\n    largest = largest * largest\n\
    \    largest = largest * largest\n    largest = largest * largest\n    largest\
    \ = largest * largest\n    largest = largest * largest\n    largest = largest\
    \ * largest\n    largest = largest * largest\n    largest = largest * largest\n\
    \    largest = largest * largest\n    largest = largest * largest\n    largest\
    \ = largest * largest\n    largest = largest * largest\n    largest = largest\
    \ * largest\n    largest = largest * largest\n    largest = largest * largest\n\
    \    largest = largest * largest\n    largest = largest * largest\n    largest\
    \ = largest * largest\n    largest = largest * largest\n    largest = largest\
    \ * largest\n    largest = largest * largest\n    largest = largest * largest\n\
    \    largest = largest * largest\n    largest = largest * largest\n    largest\
    \ = largest * largest\n    largest = largest * largest\n    largest = largest\
    \ * largest\n    largest = largest * largest\n    largest = largest * largest\n\
    \    largest = largest * largest\n    largest = largest * largest\n    largest\
    \ = largest * largest\n    largest = largest * largest\n    largest = largest\
    \ * largest\n    largest = largest * largest\n    largest = largest * largest\n\
    \    largest = largest * largest\n    largest = largest * largest\n    largest\
    \ = largest * largest\n    largest = largest * largest\n    largest = largest\
    \ * largest\n    largest = largest * largest\n    largest = largest * largest\n\
    \    largest = largest * largest\n    largest = largest * largest\n    largest\
    \ = lar\nusing Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    \t@test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\
    \ == 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t\
    @test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t\
    @test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192])\
    \ == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpqrq0ha72.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpqrq0ha72.jl:1\n\
    in expression starting at /tmp/tmpqrq0ha72.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    primes = primes(length(lst))\n    \n    largest = primes[end]\n\
    \    \n    largest = largest * 10 + lst[end]\n    \n    largest = largest * 10\
    \ + sum(lst[end - 1 .. end])\n    \n    return largest\nend\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324,\
    \ 4, 3])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([1, 0, 1, 8, 2, 4597,\
    \ 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3])\n\
    </cell>\n<code language=julia-1.5>\nskjkasdkd([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0, 81, 12,\
    \ 3, 1, 21])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0, 8, 1, 2, 1, 7])\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes a vector of integers\
    \ and returns the sum of the squares of the digits.\nusing Test\n\n@testset begin\n\
    \ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1,\
    \ 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5he2kil3.jl:30\nin expression starting at\
    \ /tmp/tmp5he2kil3.jl:30\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    primes = primes(length(lst))\n    largest = primes[end]\n    largest =\
    \ largest.digits[end]\n    largest = largest.digits[end]\n    largest = largest.digits[end]\n\
    \    largest = largest.digits[end]\n    largest = largest.digits[end]\n    largest\
    \ = largest.digits[end]\n    largest = largest.digits[end]\n    largest = largest.digits[end]\n\
    \    largest = largest.digits[end]\n    largest = largest.digits[end]\n    largest\
    \ = largest.digits[end]\n    largest = largest.digits[end]\n    largest = largest.digits[end]\n\
    \    largest = largest.digits[end]\n    largest = largest.digits[end]\n    largest\
    \ = largest.digits[end]\n    largest = largest.digits[end]\n    largest = largest.digits[end]\n\
    \    largest = largest.digits[end]\n    largest = largest.digits[end]\n    largest\
    \ = largest.digits[end]\n    largest = largest.digits[end]\n    largest = largest.digits[end]\n\
    \    largest = largest.digits[end]\n    largest = largest.digits[end]\n    largest\
    \ = largest.digits[end]\n    largest = largest.digits[end]\n    largest = largest.digits[end]\n\
    \    largest = largest.digits[end]\n    largest = largest.digits[end]\n    largest\
    \ = largest.digits[end]\n    largest = largest.digits[end]\n    largest = largest.digits[end]\n\
    \    largest = largest.digits[end]\n    largest = largest.digits[end]\n    largest\
    \ = largest.digits[end]\n    largest = largest.digits[end]\n    largest = largest.digits[end]\n\
    \    largest = largest.digits[end]\n    largest = largest.digits[end]\n    largest\
    \ = largest.digits[end]\n    largest = largest.digits[end]\n    largest = largest.digits[end]\n\
    \    largest = largest.digits[end]\n    largest = largest.digits[end]\n\nusing\
    \ Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2,\
    \ 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t\
    @test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) ==\
    \ 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32,\
    \ 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91,\
    \ 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0,\
    \ 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191,\
    \ 123456, 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpqrjyw7sh.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpqrjyw7sh.jl:1\n\
    in expression starting at /tmp/tmpqrjyw7sh.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    largest = findmax(lst)\n    largest = largest[1]\n    largest = largest[2]\n\
    \    largest = largest[1]\n    largest = largest[2]\n    largest = largest[1]\n\
    \    largest = largest[2]\n    largest = largest[1]\n    largest = largest[2]\n\
    \    largest = largest[1]\n    largest = largest[2]\n    largest = largest[1]\n\
    \    largest = largest[2]\n    largest = largest[1]\n    largest = largest[2]\n\
    \    largest = largest[1]\n    largest = largest[2]\n    largest = largest[1]\n\
    \    largest = largest[2]\n    largest = largest[1]\n    largest = largest[2]\n\
    \    largest = largest[1]\n    largest = largest[2]\n    largest = largest[1]\n\
    \    largest = largest[2]\n    largest = largest[1]\n    largest = largest[2]\n\
    \    largest = largest[1]\n    largest = largest[2]\n    largest = largest[1]\n\
    \    largest = largest[2]\n    largest = largest[1]\n    largest = largest[2]\n\
    \    largest = largest[1]\n    largest = largest[2]\n    largest = largest[1]\n\
    \    largest = largest[2]\n    largest = largest[1]\n    largest = largest[2]\n\
    \    largest = largest[1]\n    largest = largest[2]\n    largest = largest[1]\n\
    \    largest = largest[2]\n    largest = largest[1]\n    largest = largest[2]\n\
    \    largest = largest[1]\n    largest = largest[2]\n    largest = largest[1]\n\
    \    largest = largest[2]\n    largest = largest[1]\n    largest = largest[2]\n\
    \    largest = largest[1]\n    largest = largest[2]\n    largest = largest[1]\n\
    \    largest = largest[2]\n    largest = largest[1]\n    largest = largest[2]\n\
    \    largest = largest[1]\n    largest = largest[2]\n    largest = largest[1]\n\
    \    largest = largest[2]\n    largest = largest[1]\n    largest = largest[2]\n\
    \    largest = largest[1]\nusing Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\
    \t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1,\
    \ 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12,\
    \ 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191])\
    \ == 19)\n\t@test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127,\
    \ 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpid1sccu0.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpid1sccu0.jl:1\n\
    in expression starting at /tmp/tmpid1sccu0.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    largest = 0\n    largestPrime = 0\n    largestSum = 0\n    largestSumDigits\
    \ = 0\n    largestSumDigit = 0\n    largestSumDigits = 0\n    largestSumDigit\
    \ = 0\n    largestSumDigits = 0\n    largestSumDigit = 0\n    largestSumDigits\
    \ = 0\n    largestSumDigit = 0\n    largestSumDigits = 0\n    largestSumDigit\
    \ = 0\n    largestSumDigits = 0\n    largestSumDigit = 0\n    largestSumDigits\
    \ = 0\n    largestSumDigit = 0\n    largestSumDigits = 0\n    largestSumDigit\
    \ = 0\n    largestSumDigits = 0\n    largestSumDigit = 0\n    largestSumDigits\
    \ = 0\n    largestSumDigit = 0\n    largestSumDigits = 0\n    largestSumDigit\
    \ = 0\n    largestSumDigits = 0\n    largestSumDigit = 0\n    largestSumDigits\
    \ = 0\n    largestSumDigit = 0\n    largestSumDigits = 0\n    largestSumDigit\
    \ = 0\n    largestSumDigits = 0\n    largestSumDigit = 0\n    largestSumDigits\
    \ = 0\n    largestSumDigit = 0\n    largestSumDigits = 0\n    largestSumDigit\
    \ = 0\n    largestSumDigits = 0\n    largestSumDigit = 0\n    largestSumDigits\
    \ = 0\n    largestSumDigit = 0\n    largestSumDigits = 0\n    largestSumDigit\
    \ = 0\n    largestSumDigits = 0\n    largestSumDigit = 0\n    largestSumDigits\
    \ = 0\n    largestSumDigit = 0\n    largestSumDigits = 0\n    largestSumDigit\
    \ = 0\n    largestSumDigits = 0\n    largestSumDigit = 0\n    largestSumDigits\
    \ = 0\n    largestSumDigit = 0\n    largestSumDigits = 0\n    largestSumDigit\
    \ = 0\n    largestSumDigits = 0\n    largestSumDigit = 0\n    largestSumDigits\
    \ = 0\n    largestSumDigit = 0\n    largestSumDigits = 0\n    largestSumDigit\
    \ = 0\n    largestSumDigits = 0\n    largestSumDigit = 0\n    largestSumDigits\
    \ = 0\n    largestSumDigit = 0\n    largestSumDigits = 0\n    largestSumDigit\
    \ = 0\n    largestSumDigits = 0\n    largestSumDigit = 0\n    largestSumDigits\
    \ = 0\n    largestSumDigit = 0\n    largestSumDigits = 0\n    largestSumDigit\
    \ = 0\n    lar\nusing Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    \t@test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\
    \ == 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t\
    @test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t\
    @test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192])\
    \ == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpt50hd0jy.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpt50hd0jy.jl:1\n\
    in expression starting at /tmp/tmpt50hd0jy.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    primes = Primes(lst)\n    \n    largest = primes[end]\n    \n  \
    \  sum = 0\n    \n    for p in primes\n        if p > largest\n            largest\
    \ = p\n        end\n    end\n    \n    for p in primes\n        if p <= largest\n\
    \            sum += p\n        end\n    end\n    \n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\n@time skjkasdkd(rand(1:10000));\n</cell>\n<code language=julia-1.5>\n\
    @time skjkasdkd(rand(1:10000));\n</cell>\n<code language=julia-1.5>\n@time skjkasdkd(rand(1:10000));\n\
    </cell>\n<code language=julia-1.5>\n@time skjkasdkd(rand(1:10000));\n</cell>\n\
    <code language=julia-1.5>\n@time skjkasdkd(rand(1:10000));\n</cell>\n<code language=julia-1.5>\n\
    @time skjkasdkd(rand(1:10000));\n</cell>\n<code language=julia-1.5>\n@time skjkasdkd(rand(1:10000));\n\
    </cell>\n<code language=julia-1.5>\n@time skjkasdkd(rand(1:10000));\n</cell>\n\
    <code language=julia-1.5>\n@time skjkasdkd(rand(1:10000));\n</cell>\n<code language=julia-1.5>\n\
    @time skjkasdkd(rand(1:10000));\n</cell>\n<code language=julia-1.5>\n@time skjkasdkd(rand(1:10000));\n\
    </cell>\n<code language=julia-1.5>\n@time skjkasdkd(rand(1:10000));\n</cell>\n\
    <code language=julia-1.5>\n@time skjkasdkd(rand(1:10000));\n</cell>\n<code language=julia-1.5>\n\
    @time skjkasdkd(rand(1:10000));\n</cell>\n<code language=julia-1.5>\n@time skjkasdkd(rand(1:10000));\n\
    </cell>\n<code language=julia-1.5>\n@time skjkasdkd(rand(1:10000));\n</cell>\n\
    <code language=julia-1.5>\n@time skjkasdkd(rand(1:10000));\n</cell>\n<code language=julia-1.5>\n\
    @time skjkasdkd(rand(1:10000));\n</cell>\n<code language=julia-1.5>\n@time skjkasdkd(rand(1:10000\n\
    using Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    \t@test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\
    \ == 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t\
    @test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t\
    @test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192])\
    \ == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp84m32s5z.jl:40\nin expression starting at\
    \ /tmp/tmp84m32s5z.jl:40\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    primes = primes(length(lst))\n    \n    largest = primes[end]\n\
    \    \n    sum = 0\n    for n in lst\n        if n <= largest\n            sum\
    \ += n\n        end\n    end\n    \n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324,\
    \ 4, 3])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([1, 0, 1, 8, 2, 4597,\
    \ 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3])\n\
    </cell>\n<code language=julia-1.5>\nskjkasdkd([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0, 81, 12,\
    \ 3, 1, 21])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0, 8, 1, 2, 1, 7])\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the number of prime\
    \ numbers less than or equal to n.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32,\
    \ 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1, 8, 2, 4597,\
    \ 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1, 3, 1, 32,\
    \ 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0,\
    \ 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191])\
    \ == 19)\n\t@test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127,\
    \ 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpof8w4zpw.jl:33\nin expression starting at\
    \ /tmp/tmpof8w4zpw.jl:33\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    primes = primes(length(lst))\n    \n    largest = primes[end]\n\
    \    \n    sum = 0\n    \n    for el in lst\n        if el == largest\n      \
    \      sum += el\n        else\n            largest = el\n        end\n    end\n\
    \    \n    return sum\nend\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n</cell>\n\
    <code language=julia-1.5>\nskjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6])\n</cell>\n<code\
    \ language=julia-1.5>\nskjkasdkd([0, 81, 12, 3, 1, 21])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([0, 8, 1, 2, 1, 7])\n</cell>\n<text>\nProblem 7\nusing Test\n\n@testset\
    \ begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4,\
    \ 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpulnno30d.jl:36\nin expression starting at\
    \ /tmp/tmpulnno30d.jl:36\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    primes = primes(length(lst))\n    largest = primes[end]\n    largest\
    \ = largest.abs()\n    largest = largest.ceil()\n    largest = largest.abs()\n\
    \    largest = largest.ceil()\n    largest = largest.abs()\n    largest = largest.ceil()\n\
    \    largest = largest.abs()\n    largest = largest.ceil()\n    largest = largest.abs()\n\
    \    largest = largest.ceil()\n    largest = largest.abs()\n    largest = largest.ceil()\n\
    \    largest = largest.abs()\n    largest = largest.ceil()\n    largest = largest.abs()\n\
    \    largest = largest.ceil()\n    largest = largest.abs()\n    largest = largest.ceil()\n\
    \    largest = largest.abs()\n    largest = largest.ceil()\n    largest = largest.abs()\n\
    \    largest = largest.ceil()\n    largest = largest.abs()\n    largest = largest.ceil()\n\
    \    largest = largest.abs()\n    largest = largest.ceil()\n    largest = largest.abs()\n\
    \    largest = largest.ceil()\n    largest = largest.abs()\n    largest = largest.ceil()\n\
    \    largest = largest.abs()\n    largest = largest.ceil()\n    largest = largest.abs()\n\
    \    largest = largest.ceil()\n    largest = largest.abs()\n    largest = largest.ceil()\n\
    \    largest = largest.abs()\n    largest = largest.ceil()\n    largest = largest.abs()\n\
    \    largest = largest.ceil()\n    largest = largest.abs()\n    largest = largest.ceil()\n\
    \    largest = largest.abs()\n    largest = largest.ceil()\n    largest = largest.abs()\n\
    \    largest = largest.ceil()\n    largest = largest.abs()\n    largest = largest.ceil()\n\
    \    largest = largest.abs()\n    largest\nusing Test\n\n@testset begin\n\ncandidate\
    \ = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32,\
    \ 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1, 8, 2, 4597,\
    \ 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1, 3, 1, 32,\
    \ 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0,\
    \ 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191])\
    \ == 19)\n\t@test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127,\
    \ 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmppp7nzx8w.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmppp7nzx8w.jl:1\n\
    in expression starting at /tmp/tmppp7nzx8w.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    primes = primes(length(lst))\n    largest = primes[end]\n    largest =\
    \ largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = lar\nusing Test\n\n@testset begin\n\
    \ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1,\
    \ 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmptkm6wrun.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmptkm6wrun.jl:1\n\
    in expression starting at /tmp/tmptkm6wrun.jl:1\n"
  stdout: ''
- exit_code: -1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    primes = Primes(lst)\n    \n    largest = primes[end]\n    \n  \
    \  sum = 0\n    \n    for i in primes\n        if i == largest\n            sum\
    \ += i\n        end\n    end\n    \n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4,\
    \ 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpbxcs2d6_.jl:39\n  Test threw
    exception\n  Expression: candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32,
    4, 32, 3, 2, 32, 324, 4, 3]) == 10\n  UndefVarError: Primes not defined\n  Stacktrace:\n   [1]
    skjkasdkd(lst::Vector{Int64})\n     @ Main /tmp/tmpbxcs2d6_.jl:20\n   [2] macro
    expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpbxcs2d6_.jl:39 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpbxcs2d6_.jl:38\ntest set: Error
    During Test at /tmp/tmpbxcs2d6_.jl:40\n  Test threw exception\n  Expression: candidate([1,
    0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25\n  UndefVarError:
    Primes not defined\n  Stacktrace:\n   [1] skjkasdkd(lst::Vector{Int64})\n     @
    Main /tmp/tmpbxcs2d6_.jl:20\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpbxcs2d6_.jl:40 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpbxcs2d6_.jl:38\ntest set: Error
    During Test at /tmp/tmpbxcs2d6_.jl:41\n  Test threw exception\n  Expression: candidate([1,
    3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13\n  UndefVarError:
    Primes not defined\n  Stacktrace:\n   [1] skjkasdkd(lst::Vector{Int64})\n     @
    Main /tmp/tmpbxcs2d6_.jl:20\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpbxcs2d6_.jl:41 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpbxcs2d6_.jl:38\ntest set: Error
    During Test at /tmp/tmpbxcs2d6_.jl:42\n  Test threw exception\n  '
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    largest = 0\n    largestPrime = 0\n    largestSum = 0\n    largestSumPrime\
    \ = 0\n    largestSumPrime2 = 0\n    largestSumPrime3 = 0\n    largestSumPrime4\
    \ = 0\n    largestSumPrime5 = 0\n    largestSumPrime6 = 0\n    largestSumPrime7\
    \ = 0\n    largestSumPrime8 = 0\n    largestSumPrime9 = 0\n    largestSumPrime10\
    \ = 0\n    largestSumPrime11 = 0\n    largestSumPrime12 = 0\n    largestSumPrime13\
    \ = 0\n    largestSumPrime14 = 0\n    largestSumPrime15 = 0\n    largestSumPrime16\
    \ = 0\n    largestSumPrime17 = 0\n    largestSumPrime18 = 0\n    largestSumPrime19\
    \ = 0\n    largestSumPrime20 = 0\n    largestSumPrime21 = 0\n    largestSumPrime22\
    \ = 0\n    largestSumPrime23 = 0\n    largestSumPrime24 = 0\n    largestSumPrime25\
    \ = 0\n    largestSumPrime26 = 0\n    largestSumPrime27 = 0\n    largestSumPrime28\
    \ = 0\n    largestSumPrime29 = 0\n    largestSumPrime30 = 0\n    largestSumPrime31\
    \ = 0\n    largestSumPrime32 = 0\n    largestSumPrime33 = 0\n    largestSumPrime34\
    \ = 0\n    largestSumPrime35 = 0\n    largestSumPrime36 = 0\n    largestSumPrime37\
    \ = 0\n    largestSumPrime38 = 0\n    largestSumPrime39 = 0\n    largestSumPrime40\
    \ = 0\n    largestSumPrime41 = 0\n    largestSumPrime42 = 0\n    largestSumPrime43\
    \ = 0\n    largestSumPrime44 = 0\n    largestSumPrime45 = 0\n    largestSumPrime46\
    \ = 0\n    largestSumPrime47 = 0\n    largestSumPrime48 = 0\n    largestSumPrime49\
    \ = 0\n    largestSumPrime50 = 0\n    largestSumPrime51 = 0\n    largestSumPrime52\
    \ = 0\n    largestSumPrime53 = 0\n    largestSumPrime54 = 0\n    largestSumPrime55\n\
    using Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    \t@test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\
    \ == 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t\
    @test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t\
    @test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192])\
    \ == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpk6q7nz9a.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpk6q7nz9a.jl:1\n\
    in expression starting at /tmp/tmpk6q7nz9a.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    primes = primes(length(lst))\n    largest = 0\n    for p in primes\n \
    \       if lst.last() == p\n            largest = lst.last()\n            break\n\
    \        end\n    end\n    return largest\nend\n</cell>\n<code language=julia-1.0>\n\
    skjkasdkd([2,3,5,7,5,5,5,2,181,32,4,32,3,2,32,324,4,3])\n</cell>\n<code language=julia-1.0>\n\
    skjkasdkd([1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1])\n</cell>\n<code language=julia-1.0>\n\
    skjkasdkd([1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3])\n</cell>\n<code\
    \ language=julia-1.0>\nskjkasdkd([0,724,32,71,99,32,6,0,5,91,83,0,5,6])\n</cell>\n\
    <code language=julia-1.0>\nskjkasdkd([0,81,12,3,1,21])\n</cell>\n<code language=julia-1.0>\n\
    skjkasdkd([0,8,1,2,1,7])\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the sum of the digits of an integer.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32,\
    \ 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1, 8, 2, 4597,\
    \ 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1, 3, 1, 32,\
    \ 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0,\
    \ 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191])\
    \ == 19)\n\t@test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127,\
    \ 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpo0_33ela.jl:29\nin expression starting at\
    \ /tmp/tmpo0_33ela.jl:29\n"
  stdout: ''
- exit_code: -1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    primes = primes(length(lst))\n    largest = primes[end]\n    sum\
    \ = 0\n    for elt in lst\n        if elt > largest\n            largest = elt\n\
    \        end\n    end\n    for elt in lst\n        if elt == largest\n       \
    \     sum += elt\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4,\
    \ 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp70s3fqej.jl:40\n  Test threw
    exception\n  Expression: candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32,
    4, 32, 3, 2, 32, 324, 4, 3]) == 10\n  UndefVarError: primes not defined\n  Stacktrace:\n   [1]
    skjkasdkd(lst::Vector{Int64})\n     @ Main /tmp/tmp70s3fqej.jl:20\n   [2] macro
    expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp70s3fqej.jl:40 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp70s3fqej.jl:39\ntest set: Error
    During Test at /tmp/tmp70s3fqej.jl:41\n  Test threw exception\n  Expression: candidate([1,
    0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25\n  UndefVarError:
    primes not defined\n  Stacktrace:\n   [1] skjkasdkd(lst::Vector{Int64})\n     @
    Main /tmp/tmp70s3fqej.jl:20\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp70s3fqej.jl:41 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp70s3fqej.jl:39\ntest set: Error
    During Test at /tmp/tmp70s3fqej.jl:42\n  Test threw exception\n  Expression: candidate([1,
    3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13\n  UndefVarError:
    primes not defined\n  Stacktrace:\n   [1] skjkasdkd(lst::Vector{Int64})\n     @
    Main /tmp/tmp70s3fqej.jl:20\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp70s3fqej.jl:42 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp70s3fqej.jl:39\ntest set: Error
    During Test at /tmp/tmp70s3fqej.jl:43\n  Test threw exception\n  '
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    primes = primes(length(lst))\n    \n    largest = primes[end]\n\
    \    \n    sum = 0\n    \n    for el in lst\n        if el == largest\n      \
    \      sum += el\n        else\n            largest = el\n        end\n    end\n\
    \    \n    return sum\nend\n</cell>\n<code language=julia-1.5>\n@time skjkasdkd(rand(1:100000000));\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the number of prime\
    \ numbers less than a given number. \nThe function should take one argument, an\
    \ integer $n$, and return an integer $k$, where $k$ is the number of prime numbers\
    \ less than $n$.\nusing Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    \t@test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\
    \ == 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t\
    @test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t\
    @test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192])\
    \ == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcv3grabl.jl:36\nin expression starting at\
    \ /tmp/tmpcv3grabl.jl:36\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    primes = primes(length(lst))\n    \n    largest = primes[end]\n\
    \    \n    sum = 0\n    \n    for i in lst\n        if isPrime(i)\n          \
    \  sum += i\n        end\n    end\n    \n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    @test skjkasdkd([2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97]) == 10\n@test skjkasdkd([2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\
    \ == 10\n@test skjkasdkd([2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43,\
    \ 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]) == 10\n@test skjkasdkd([2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]) == 10\n@test skjkasdkd([2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]) == 10\n@test skjkasdkd([2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97]) == 10\n@test skjkasdkd([2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]) == 10\n@test skjkasdkd([2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97]) == 10\n@test skjkasdkd([2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]) == 10\n@test skjkasdkd([2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97]) == 10\n@test skjkasdkd([2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, \nusing Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    \t@test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\
    \ == 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t\
    @test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t\
    @test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192])\
    \ == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjffh6hi_.jl:34\nin expression starting at\
    \ /tmp/tmpjffh6hi_.jl:34\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    largest = 0\n    largestPrime = 0\n    largestPrimeIndex = 0\n    largestPrimeDigit\
    \ = 0\n    largestPrimeDigitIndex = 0\n    largestPrimeDigitSum = 0\n    for x\
    \ in lst\n        if x == largestPrime\n            largestPrimeDigitSum += largestPrimeDigit\n\
    \            largestPrimeDigitIndex += 1\n            if largestPrimeIndex > largestPrimeDigitIndex\n\
    \                largestPrimeDigitIndex = largestPrimeIndex\n                largestPrimeDigit\
    \ = largestPrimeDigitSum\n            largestPrimeIndex += 1\n        else\n \
    \           largestPrimeDigitSum = 0\n            largestPrimeDigitIndex = 0\n\
    \            largestPrimeDigit = 0\n            largestPrimeIndex = 0\n      \
    \      largestPrime = 0\n        end\n        if x == largestPrime\n         \
    \   largestPrimeDigitSum += largestPrimeDigit\n            largestPrimeDigitIndex\
    \ += 1\n            if largestPrimeIndex > largestPrimeDigitIndex\n          \
    \      largestPrimeDigitIndex = largestPrimeIndex\n                largestPrimeDigit\
    \ = largestPrimeDigitSum\n            largestPrimeIndex += 1\n        else\n \
    \           largestPrimeDigitSum = 0\n            largestPrimeDigitIndex = 0\n\
    \            largestPrimeDigit = 0\n            largestPrimeIndex = 0\n      \
    \      largestPrime = 0\n        end\n        if x == largestPrime\n         \
    \   largestPrimeDigitSum += largestPrimeDigit\n            largestPrimeDigitIndex\
    \ += 1\n            if largestPrimeIndex > largestPrimeDigitIndex\n          \
    \      largestPrimeDigitIndex = largestPrimeIndex\n                largestPrimeDigit\
    \ = largestPrimeDigitSum\n            largestPrimeIndex += 1\n        else\n \
    \           largestPrimeDigitSum = 0\n            largestPrimeDigitIndex = 0\n\
    \            largestPrimeDigit = 0\n            largestPrimeIndex = 0\n      \
    \      largestPrime = 0\n        end\n        if x == largestPrime\n         \
    \   largestPrimeDigitSum += largestPrimeDigit\n            largestPrimeDigitIndex\
    \ += 1\n            if largestPrimeIndex > largestPrimeDigitIndex\n          \
    \      largestPrimeDigitIndex = largestPrimeIndex\n                largestPrimeDigit\
    \ = largestPrimeDigitSum\n            largestPrimeIndex += 1\n        else\n \
    \           largestPrime\nusing Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\
    \t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1,\
    \ 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12,\
    \ 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191])\
    \ == 19)\n\t@test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127,\
    \ 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"if\" at /tmp/tmp6lk7mzab.jl:71\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp6lk7mzab.jl:1\n\
    in expression starting at /tmp/tmp6lk7mzab.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    primes = primes(lst)\n    \n    largest = primes[end]\n    \n  \
    \  sum = 0\n    \n    for p in primes\n        if p > largest\n            largest\
    \ = p\n        end\n    end\n    \n    for p in primes\n        if p == largest\n\
    \            sum += p\n        end\n    end\n    \n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nskjkasdkd([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181,\
    \ 32, 4, 32, 3, 2, 32, 324, 4, 3])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3])\n\
    </cell>\n<code language=julia-1.5>\nskjkasdkd([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0, 81, 12,\
    \ 3, 1, 21])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0, 8, 1, 2, 1, 7])\n\
    </cell>\n<code language=julia-1.5>\nskjkasdkd([0, 8, 1, 2, 1, 7])\n</cell>\n<code\
    \ language=julia-1.5>\nskjkasdkd([0, 8, 1, 2, 1, 7])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([0, 8, 1, 2, 1, 7])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0,\
    \ 8, 1, 2, 1, 7])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0, 8, 1, 2,\
    \ 1, 7])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0, 8, 1, 2, 1, 7])\n\
    </cell>\n<code language=julia-1.5>\nskjkasdkd([0, 8, 1, 2, 1, 7])\n</cell>\n<code\
    \ language=julia-1.5>\nskjkasdkd([0, 8, 1, 2, 1, 7])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([0, 8, 1, 2, 1, 7])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0,\
    \ 8, 1, 2, 1, 7])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0, 8, 1, 2,\
    \ 1, 7])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0, 8, 1, 2, 1, 7])\n\
    </cell>\n\nusing Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    \t@test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\
    \ == 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t\
    @test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t\
    @test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192])\
    \ == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2vy8287y.jl:40\nin expression starting at\
    \ /tmp/tmp2vy8287y.jl:40\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    largest = 0\n    largestPrime = 0\n    largestPrimeIndex = 0\n    for\
    \ index in 1:length(lst)\n        if lst[index] == largestPrime\n            largestPrimeIndex\
    \ += 1\n        elseif lst[index] > largestPrime\n            largestPrime = lst[index]\n\
    \            largestPrimeIndex = index\n        end\n    end\n    largestPrimeIndex\
    \ += 1\n    largestPrime = largestPrimeIndex\n    largestPrimeIndex += 1\n   \
    \ largestPrime = largestPrimeIndex\n    largestPrimeIndex += 1\n    largestPrime\
    \ = largestPrimeIndex\n    largestPrimeIndex += 1\n    largestPrime = largestPrimeIndex\n\
    \    largestPrimeIndex += 1\n    largestPrime = largestPrimeIndex\n    largestPrimeIndex\
    \ += 1\n    largestPrime = largestPrimeIndex\n    largestPrimeIndex += 1\n   \
    \ largestPrime = largestPrimeIndex\n    largestPrimeIndex += 1\n    largestPrime\
    \ = largestPrimeIndex\n    largestPrimeIndex += 1\n    largestPrime = largestPrimeIndex\n\
    \    largestPrimeIndex += 1\n    largestPrime = largestPrimeIndex\n    largestPrimeIndex\
    \ += 1\n    largestPrime = largestPrimeIndex\n    largestPrimeIndex += 1\n   \
    \ largestPrime = largestPrimeIndex\n    largestPrimeIndex += 1\n    largestPrime\
    \ = largestPrimeIndex\n    largestPrimeIndex += 1\n    largestPrime = largestPrimeIndex\n\
    \    largestPrimeIndex += 1\n    largestPrime = largestPrimeIndex\n    largestPrimeIndex\
    \ += 1\n    largestPrime = largestPrimeIndex\n    largestPrimeIndex += 1\n   \
    \ largestPrime = largestPrimeIndex\n    largestPrimeIndex += 1\n    largestPrime\
    \ = largestPrimeIndex\n    largestPrimeIndex += 1\n    largestPrime = largestPrimeIndex\n\
    \    largestPrimeIndex += 1\n    largestPrime = largestPrimeIndex\n    largestPrimeIndex\
    \ += 1\n    largestPrime = largestPrimeIndex\n    largestPrimeIndex += 1\n   \
    \ largestPrime = largestPri\nusing Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\
    \t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1,\
    \ 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12,\
    \ 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191])\
    \ == 19)\n\t@test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127,\
    \ 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmppnuosw7l.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmppnuosw7l.jl:1\n\
    in expression starting at /tmp/tmppnuosw7l.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    primes = primes(length(lst))\n    \n    largest = 0\n    \n    for\
    \ p in primes\n        if lst.contains(p)\n            largest = max(p, largest)\n\
    \        end\n    end\n    \n    return largest\nend\n</cell>\n<code language=julia-1.5>\n\
    @test skjkasdkd([2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97]) == 10\n@test skjkasdkd([2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\
    \ == 10\n@test skjkasdkd([2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43,\
    \ 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]) == 10\n@test skjkasdkd([2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]) == 10\n@test skjkasdkd([2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]) == 10\n@test skjkasdkd([2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97]) == 10\n@test skjkasdkd([2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]) == 10\n@test skjkasdkd([2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97]) == 10\n@test skjkasdkd([2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]) == 10\n@test skjkasdkd([2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97]) == 10\n@test skjkasdkd([2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, \nusing Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    \t@test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\
    \ == 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t\
    @test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t\
    @test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192])\
    \ == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcwixp4d2.jl:32\nin expression starting at\
    \ /tmp/tmpcwixp4d2.jl:32\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    primes = primes(length(lst))\n    largest = primes[end]\n    largest =\
    \ largest * largest\n    largest = largest * largest\n    largest = largest *\
    \ largest\n    largest = largest * largest\n    largest = largest * largest\n\
    \    largest = largest * largest\n    largest = largest * largest\n    largest\
    \ = largest * largest\n    largest = largest * largest\n    largest = largest\
    \ * largest\n    largest = largest * largest\n    largest = largest * largest\n\
    \    largest = largest * largest\n    largest = largest * largest\n    largest\
    \ = largest * largest\n    largest = largest * largest\n    largest = largest\
    \ * largest\n    largest = largest * largest\n    largest = largest * largest\n\
    \    largest = largest * largest\n    largest = largest * largest\n    largest\
    \ = largest * largest\n    largest = largest * largest\n    largest = largest\
    \ * largest\n    largest = largest * largest\n    largest = largest * largest\n\
    \    largest = largest * largest\n    largest = largest * largest\n    largest\
    \ = largest * largest\n    largest = largest * largest\n    largest = largest\
    \ * largest\n    largest = largest * largest\n    largest = largest * largest\n\
    \    largest = largest * largest\n    largest = largest * largest\n    largest\
    \ = largest * largest\n    largest = largest * largest\n    largest = largest\
    \ * largest\n    largest = largest * largest\n    largest = largest * largest\n\
    \    largest = largest * largest\n    largest = largest * largest\n    largest\
    \ = largest * largest\n    largest = largest * largest\n    largest = largest\
    \ * largest\n    largest = largest * largest\n    largest = largest * largest\n\
    \    largest = largest * largest\n    largest = largest * largest\n    largest\
    \ = lar\nusing Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    \t@test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\
    \ == 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t\
    @test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t\
    @test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192])\
    \ == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpqrq0ha72.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpqrq0ha72.jl:1\n\
    in expression starting at /tmp/tmpqrq0ha72.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    primes = primes(length(lst))\n    largest = primes[end]\n    largest\
    \ = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.ceiling()\n\
    \    largest = largest.ceiling()\n    largest = largest.ceiling()\n    largest\
    \ = largest.ceiling()\n    largest = largest.ceiling()\n    largest = largest.ceiling()\n\
    \    largest = largest.ceiling()\n    largest = largest.ceiling()\n    largest\
    \ = largest.ceiling()\n    largest = largest.ceiling()\n    largest = largest.ceiling()\n\
    \    largest = largest.ceiling()\n    largest = largest.ceiling()\n    largest\
    \ = largest.ceiling()\n    largest = largest.ceiling()\n    largest = largest.ceiling()\n\
    \    largest = largest.ceiling()\n    largest = largest.ceiling()\n    largest\
    \ = largest.ceiling()\n    largest = largest.ceiling()\n    largest = largest.ceiling()\n\
    \    largest = largest.ceiling()\n    largest = largest.ceiling()\n    largest\
    \ = largest.ceiling()\n    largest = largest.ceiling()\n    largest = largest.ceiling()\n\
    \    largest = largest.ceiling()\n    largest = largest.ceiling()\n    largest\
    \ = largest.ceiling()\n    largest = largest.ceiling()\n    largest = largest.ceiling()\n\
    \    largest = largest.ceiling()\n    largest = largest.ceiling()\n    largest\
    \ = largest.ceiling()\n    largest = largest.ceiling()\n    largest = largest.ceiling()\n\
    \    largest = largest.ceiling()\n    largest = largest.ceiling()\n    largest\
    \ = largest.ceiling()\n    largest = largest.ceiling()\n    largest = largest.ceiling()\n\
    \    largest = largest.ceiling()\n    largest = largest.ceiling()\n    largest\
    \ = largest.ceiling()\n    largest = largest.ceiling()\n    largest = largest.ceiling()\n\
    \    largest = largest.ceiling()\n    largest\nusing Test\n\n@testset begin\n\n\
    candidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2,\
    \ 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1, 8,\
    \ 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpvy_1nty0.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpvy_1nty0.jl:1\n\
    in expression starting at /tmp/tmpvy_1nty0.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    primes = primes(length(lst))\n    largest = primes[end]\n    largest =\
    \ largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.ceiling()\n    largest = largest.ceiling()\n    largest\
    \ = largest.ceiling()\n    largest = largest.ceiling()\n    largest = largest.ceiling()\n\
    \    largest = largest.ceiling()\n    largest = largest.ceiling()\n    largest\
    \ = largest.ceiling()\n    largest = largest.ceiling()\n    largest = largest.ceiling()\n\
    \    largest = largest.ceiling()\n    largest = largest.ceiling()\n    largest\
    \ = largest.ceiling()\n    largest = largest.ceiling()\n    largest = largest.ceiling()\n\
    \    largest = largest.ceiling()\n    largest = largest.ceiling()\n    largest\
    \ = largest.ceiling()\n    largest = largest.ceiling()\n    largest = largest.ceiling()\n\
    \    largest = largest.ceiling()\n    largest = largest.ceiling()\n    largest\
    \ = largest.ceiling()\n    largest = largest.ceiling()\n    largest = largest.ceiling()\n\
    \    largest = largest.ceiling()\n    largest = largest.ceiling()\n    largest\
    \ = largest.ceiling()\n    largest = largest.ceiling()\n    largest = largest.ceiling()\n\
    \    largest = largest.ceiling()\n    largest = largest.ceiling()\n    largest\
    \ = largest.ceiling()\n    largest = largest.ceiling()\n    largest = largest.ceiling()\n\
    \    largest = largest.ceiling()\n    largest = largest.ceiling()\n    largest\
    \ = largest.ceiling()\n    largest = largest.ceiling()\n    largest = largest.ceiling()\n\
    \    largest = largest.ceiling()\n    largest = largest.ceiling()\n    largest\
    \ = largest.ceiling()\n    largest = largest.ceiling()\n    largest = largest.ceiling()\n\
    \    largest = largest.ceiling()\n    largest = lar\nusing Test\n\n@testset begin\n\
    \ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1,\
    \ 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxlkqffqo.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxlkqffqo.jl:1\n\
    in expression starting at /tmp/tmpxlkqffqo.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpl4v7mbcj.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpl4v7mbcj.jl:1\n\
    in expression starting at /tmp/tmpl4v7mbcj.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    primes = primes(length(lst))\n    \n    largest = primes[end]\n\
    \    \n    sum = 0\n    \n    for x in lst\n        if x % largest == 0\n    \
    \        sum += largest\n        end\n    end\n    \n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nskjkasdkd([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181,\
    \ 32, 4, 32, 3, 2, 32, 324, 4, 3])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3])\n\
    </cell>\n<code language=julia-1.5>\nskjkasdkd([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0, 81, 12,\
    \ 3, 1, 21])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0, 8, 1, 2, 1, 7])\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the number of prime\
    \ numbers less than a given number.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32,\
    \ 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1, 8, 2, 4597,\
    \ 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1, 3, 1, 32,\
    \ 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0,\
    \ 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191])\
    \ == 19)\n\t@test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127,\
    \ 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4c60k79b.jl:34\nin expression starting at\
    \ /tmp/tmp4c60k79b.jl:34\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    primes = primes(length(lst))\n    largest = primes[end]\n    largest =\
    \ 0\n    for p in primes\n        if p > largest\n            largest = p\n  \
    \      end\n    end\n    sum = 0\n    for x in lst\n        if x == largest\n\
    \            sum += largest\n        end\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\
    \t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1,\
    \ 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12,\
    \ 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191])\
    \ == 19)\n\t@test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127,\
    \ 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpj2pfruy_.jl:35\nin expression starting at\
    \ /tmp/tmpj2pfruy_.jl:35\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    primes = primes(length(lst))\n    largest = primes[end]\n    largest\
    \ = largest.largest\n    largest = largest.digits\n    largest = sum(largest)\n\
    \    return largest\nend\n</cell>\n<code language=julia-1.5>\n@time skjkasdkd(rand(1:10000))\n\
    </cell>\n<code language=julia-1.5>\n@time skjkasdkd(rand(1:10000))\n</cell>\n\
    <code language=julia-1.5>\n@time skjkasdkd(rand(1:10000))\n</cell>\n<code language=julia-1.5>\n\
    @time skjkasdkd(rand(1:10000))\n</cell>\n<code language=julia-1.5>\n@time skjkasdkd(rand(1:10000))\n\
    </cell>\n<code language=julia-1.5>\n@time skjkasdkd(rand(1:10000))\n</cell>\n\
    <code language=julia-1.5>\n@time skjkasdkd(rand(1:10000))\n</cell>\n<code language=julia-1.5>\n\
    @time skjkasdkd(rand(1:10000))\n</cell>\n<code language=julia-1.5>\n@time skjkasdkd(rand(1:10000))\n\
    </cell>\n<code language=julia-1.5>\n@time skjkasdkd(rand(1:10000))\n</cell>\n\
    <code language=julia-1.5>\n@time skjkasdkd(rand(1:10000))\n</cell>\n<code language=julia-1.5>\n\
    @time skjkasdkd(rand(1:10000))\n</cell>\n<code language=julia-1.5>\n@time skjkasdkd(rand(1:10000))\n\
    </cell>\n<code language=julia-1.5>\n@time skjkasdkd(rand(1:10000))\n</cell>\n\
    <code language=julia-1.5>\n@time skjkasdkd(rand(1:10000))\n</cell>\n<code language=julia-1.5>\n\
    @time skjkasdkd(rand(1:10000))\n</cell>\n<code language=julia-1.5>\n@time skjkasdkd(rand(1:10000))\n\
    </cell>\n<code language=julia-1.5>\n@time skjkasdkd(rand(1:10000))\n</cell>\n\
    <code language=julia-1.5>\n@time skjkasdkd(rand(1:10000))\n</cell>\n<code language=julia-1.5>\n\
    @time skjkasdkd(rand(1:10000))\nusing Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\
    \t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1,\
    \ 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12,\
    \ 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191])\
    \ == 19)\n\t@test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127,\
    \ 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpasm6k8zh.jl:27\nin expression starting at\
    \ /tmp/tmpasm6k8zh.jl:27\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    primes = primes(length(lst))\n    \n    largest = primes[end]\n\
    \    \n    sum = 0\n    \n    for x in lst\n        if x % largest == 0\n    \
    \        sum += largest\n        end\n    end\n    \n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nskjkasdkd([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181,\
    \ 32, 4, 32, 3, 2, 32, 324, 4, 3])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3])\n\
    </cell>\n<code language=julia-1.5>\nskjkasdkd([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0, 81, 12,\
    \ 3, 1, 21])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0, 8, 1, 2, 1, 7])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the number of prime\
    \ numbers less than a given number. \nFor example, given n = 10, the function\
    \ should return 3.\nusing Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\t\
    @test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1,\
    \ 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12,\
    \ 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191])\
    \ == 19)\n\t@test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127,\
    \ 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9uknpmpv.jl:34\nin expression starting at\
    \ /tmp/tmp9uknpmpv.jl:34\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    primes = primes(length(lst))\n    largest = primes[end]\n    largest\
    \ = largest.abs()\n    largest = largest.ceil()\n    largest = largest.floor()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest\nusing Test\n\n@testset begin\n\ncandidate\
    \ = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32,\
    \ 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1, 8, 2, 4597,\
    \ 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1, 3, 1, 32,\
    \ 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0,\
    \ 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191])\
    \ == 19)\n\t@test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127,\
    \ 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpqbzr48qq.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpqbzr48qq.jl:1\n\
    in expression starting at /tmp/tmpqbzr48qq.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    primes = primes(length(lst))\n    \n    largest = primes[end]\n\
    \    \n    sum = 0\n    \n    for i in primes\n        if lst[i] > largest\n \
    \           largest = lst[i]\n        end\n    end\n    \n    for i in primes\n\
    \        if lst[i] <= largest\n            sum += lst[i]\n        end\n    end\n\
    \    \n    return sum\nend\n</cell>\n<code language=julia-1.5>\nskjkasdkd([3,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n</cell>\n\
    <code language=julia-1.5>\nskjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6])\n</cell>\n<code\
    \ language=julia-1.5>\nskjkasdkd([0, 81, 12, 3, 1, 21])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([0, 8, 1, 2, 1, 7])\n</cell>\n<text>\nProblem 3\nusing Test\n\n@testset\
    \ begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4,\
    \ 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpe1tp6wxm.jl:40\nin expression starting at\
    \ /tmp/tmpe1tp6wxm.jl:40\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    primes = primes(length(lst))\n    largest = primes[end]\n    largest =\
    \ largest.abs()\n    largest = largest.floor()\n    largest = largest.abs()\n\
    \    largest = largest.ceil()\n    largest = largest.abs()\n    largest = largest.ceil()\n\
    \    largest = largest.abs()\n    largest = largest.ceil()\n    largest = largest.abs()\n\
    \    largest = largest.ceil()\n    largest = largest.abs()\n    largest = largest.ceil()\n\
    \    largest = largest.abs()\n    largest = largest.ceil()\n    largest = largest.abs()\n\
    \    largest = largest.ceil()\n    largest = largest.abs()\n    largest = largest.ceil()\n\
    \    largest = largest.abs()\n    largest = largest.ceil()\n    largest = largest.abs()\n\
    \    largest = largest.ceil()\n    largest = largest.abs()\n    largest = largest.ceil()\n\
    \    largest = largest.abs()\n    largest = largest.ceil()\n    largest = largest.abs()\n\
    \    largest = largest.ceil()\n    largest = largest.abs()\n    largest = largest.ceil()\n\
    \    largest = largest.abs()\n    largest = largest.ceil()\n    largest = largest.abs()\n\
    \    largest = largest.ceil()\n    largest = largest.abs()\n    largest = largest.ceil()\n\
    \    largest = largest.abs()\n    largest = largest.ceil()\n    largest = largest.abs()\n\
    \    largest = largest.ceil()\n    largest = largest.abs()\n    largest = largest.ceil()\n\
    \    largest = largest.abs()\n    largest = largest.ceil()\n    largest = largest.abs()\n\
    \    largest = largest.ceil()\n    largest = largest.abs()\n    largest = largest.ceil()\n\
    \    largest = largest.abs()\n    largest = lar\nusing Test\n\n@testset begin\n\
    \ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1,\
    \ 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpidn5xb63.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpidn5xb63.jl:1\n\
    in expression starting at /tmp/tmpidn5xb63.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    largest = 0\n    largestPrime = 0\n    for x in lst\n        if x == largestPrime\n\
    \            largestPrime += x\n        else\n            if largestPrime == 0\n\
    \                largestPrime = x\n            else\n                if largestPrime\
    \ > x\n                    largestPrime = x\n                end\n           \
    \ end\n        end\n    end\n    return largestPrime\nend\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324,\
    \ 4, 3])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([1, 0, 1, 8, 2, 4597,\
    \ 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3])\n\
    </cell>\n<code language=julia-1.5>\nskjkasdkd([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0, 81, 12,\
    \ 3, 1, 21])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0, 8, 1, 2, 1, 7])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes in a vector of integers\
    \ and returns the sum of the squares of the integers in the vector.\nusing Test\n\
    \n@testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3,\
    \ 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppc8r5q9x.jl:36\nin expression starting at\
    \ /tmp/tmppc8r5q9x.jl:36\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    primes = primes(length(lst))\n    largest = primes[end]\n    largest\
    \ = largest * largest\n    largest = largest * largest\n    largest = largest\
    \ * largest\n    largest = largest * largest\n    largest = largest * largest\n\
    \    largest = largest * largest\n    largest = largest * largest\n    largest\
    \ = largest * largest\n    largest = largest * largest\n    largest = largest\
    \ * largest\n    largest = largest * largest\n    largest = largest * largest\n\
    \    largest = largest * largest\n    largest = largest * largest\n    largest\
    \ = largest * largest\n    largest = largest * largest\n    largest = largest\
    \ * largest\n    largest = largest * largest\n    largest = largest * largest\n\
    \    largest = largest * largest\n    largest = largest * largest\n    largest\
    \ = largest * largest\n    largest = largest * largest\n    largest = largest\
    \ * largest\n    largest = largest * largest\n    largest = largest * largest\n\
    \    largest = largest * largest\n    largest = largest * largest\n    largest\
    \ = largest * largest\n    largest = largest * largest\n    largest = largest\
    \ * largest\n    largest = largest * largest\n    largest = largest * largest\n\
    \    largest = largest * largest\n    largest = largest * largest\n    largest\
    \ = largest * largest\n    largest = largest * largest\n    largest = largest\
    \ * largest\n    largest = largest * largest\n    largest = largest * largest\n\
    \    largest = largest * largest\n    largest = largest * largest\n    largest\
    \ = largest * largest\n    largest = largest * largest\n    largest = largest\
    \ * largest\n    largest = largest * largest\n    largest = largest * largest\n\
    \    largest = largest * largest\n    largest = largest * largest\n    largest\n\
    using Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    \t@test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\
    \ == 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t\
    @test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t\
    @test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192])\
    \ == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp2ee8wruu.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp2ee8wruu.jl:1\n\
    in expression starting at /tmp/tmp2ee8wruu.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    largest = 0\n    largestPrime = 0\n    for x in lst\n        if isPrime(x)\n\
    \            if x > largest\n                largest = x\n                largestPrime\
    \ = x\n            else\n                if x > largestPrime\n               \
    \     largestPrime = x\n                end\n            end\n        end\n  \
    \  end\n    return largestPrime\nend\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n</cell>\n\
    <code language=julia-1.5>\nskjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6])\n</cell>\n<code\
    \ language=julia-1.5>\nskjkasdkd([0, 81, 12, 3, 1, 21])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([0, 8, 1, 2, 1, 7])\n</cell>\n<text>\nProblem 3\nWrite a function that\
    \ takes a vector of integers and returns the sum of the squares of the integers\
    \ in the vector.\nusing Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    \t@test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\
    \ == 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t\
    @test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t\
    @test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192])\
    \ == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzxp0ylh2.jl:35\nin expression starting at\
    \ /tmp/tmpzxp0ylh2.jl:35\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    primes = Primes(lst)\n    \n    largest = primes[end]\n    \n  \
    \  largest = largest.digits[1]\n    \n    largest = largest.digits[2]\n    \n\
    \    largest = largest.digits[3]\n    \n    largest = largest.digits[4]\n    \n\
    \    largest = largest.digits[5]\n    \n    largest = largest.digits[6]\n    \n\
    \    largest = largest.digits[7]\n    \n    largest = largest.digits[8]\n    \n\
    \    largest = largest.digits[9]\n    \n    largest = largest.digits[10]\n   \
    \ \n    largest = largest.digits[11]\n    \n    largest = largest.digits[12]\n\
    \    \n    largest = largest.digits[13]\n    \n    largest = largest.digits[14]\n\
    \    \n    largest = largest.digits[15]\n    \n    largest = largest.digits[16]\n\
    \    \n    largest = largest.digits[17]\n    \n    largest = largest.digits[18]\n\
    \    \n    largest = largest.digits[19]\n    \n    largest = largest.digits[20]\n\
    \    \n    largest = largest.digits[21]\n    \n    largest = largest.digits[22]\n\
    \    \n    largest = largest.digits[23]\n    \n    largest = largest.digits[24]\n\
    \    \n    largest = largest.digits[25]\n    \n    largest = largest.digits[26]\n\
    \    \n    largest = largest.digits[27]\n    \n    largest = largest.digits[28]\n\
    \    \n    largest = largest.digits[29]\n    \n    largest = largest.digits[30]\n\
    \    \n    largest = largest.digits[31]\n    \n    largest = largest.digits[32]\n\
    \    \n    largest = largest.digits[33]\n    \n    largest = largest.digits[34]\n\
    \    \n    largest = largest.digits[35]\n    \n    largest = largest.digits[36]\n\
    \    \n\nusing Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    \t@test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\
    \ == 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t\
    @test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t\
    @test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192])\
    \ == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7n57kmtq.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7n57kmtq.jl:1\n\
    in expression starting at /tmp/tmp7n57kmtq.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    primes = primes(length(lst))\n    \n    largest = primes[end]\n\
    \    \n    sum = 0\n    \n    for n in lst\n        if n <= largest\n        \
    \    sum += n\n        end\n    end\n    \n    return sum\nend\n</cell>\n<code\
    \ language=julia-1.5>\nskjkasdkd([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32,\
    \ 4, 32, 3, 2, 32, 324, 4, 3])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3])\n\
    </cell>\n<code language=julia-1.5>\nskjkasdkd([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0, 81, 12,\
    \ 3, 1, 21])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0, 8, 1, 2, 1, 7])\n\
    </cell>\n<text>\nExercise: Find the largest prime factor of a number\nusing Test\n\
    \n@testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3,\
    \ 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3uqfurip.jl:34\nin expression starting at\
    \ /tmp/tmp3uqfurip.jl:34\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    primes = primes(length(lst))\n    \n    largest = 0\n    \n    for\
    \ p in primes\n        if lst.contains(p)\n            largest = largest+p\n \
    \       end\n    end\n    \n    return largest\nend\n</cell>\n<code language=julia-1.5>\n\
    @time skjkasdkd(rand(1:10000))\n</cell>\n<code language=julia-1.5>\n@time skjkasdkd(rand(1:10000))\n\
    </cell>\n<code language=julia-1.5>\n@time skjkasdkd(rand(1:10000))\n</cell>\n\
    <code language=julia-1.5>\n@time skjkasdkd(rand(1:10000))\n</cell>\n<code language=julia-1.5>\n\
    @time skjkasdkd(rand(1:10000))\n</cell>\n<code language=julia-1.5>\n@time skjkasdkd(rand(1:10000))\n\
    </cell>\n<code language=julia-1.5>\n@time skjkasdkd(rand(1:10000))\n</cell>\n\
    <code language=julia-1.5>\n@time skjkasdkd(rand(1:10000))\n</cell>\n<code language=julia-1.5>\n\
    @time skjkasdkd(rand(1:10000))\n</cell>\n<code language=julia-1.5>\n@time skjkasdkd(rand(1:10000))\n\
    </cell>\n<code language=julia-1.5>\n@time skjkasdkd(rand(1:10000))\n</cell>\n\
    <code language=julia-1.5>\n@time skjkasdkd(rand(1:10000))\n</cell>\n<code language=julia-1.5>\n\
    @time skjkasdkd(rand(1:10000))\n</cell>\n<code language=julia-1.5>\n@time skjkasdkd(rand(1:10000))\n\
    </cell>\n<code language=julia-1.5>\n@time skjkasdkd(rand(1:10000))\n</cell>\n\
    <code language=julia-1.5>\n@time skjkasdkd(rand(1:10000))\n</cell>\n<code language=julia-1.5>\n\
    @time skjkasdkd(rand(1:10000))\n</cell>\n<code language=julia-1.5>\n@time skjkasdkd(rand(1:10000))\n\
    </cell>\n<code language=julia-1.5>\n@time skjkasdkd(rand(1:10000))\n</cell>\n\
    <code language=julia-1.5>\n@time skjkasdkd(rand(1:10000))\n\nusing Test\n\n@testset\
    \ begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4,\
    \ 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjc46bf28.jl:32\nin expression starting at\
    \ /tmp/tmpjc46bf28.jl:32\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    primes = primes(length(lst))\n    \n    largest = 0\n    \n    for\
    \ p in primes\n        if lst .contains p\n            largest = p\n         \
    \   break\n        end\n    end\n    \n    sum = 0\n    for p in primes\n    \
    \    if largest == p\n            sum += lst .index(p)\n        end\n    end\n\
    \    \n    return sum\nend\n</cell>\n<code language=julia-1.5>\nskjkasdkd([2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\n\
    </cell>\n<code language=julia-1.5>\nskjkasdkd([2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\n</cell>\n\
    <code language=julia-1.5>\nskjkasdkd([2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, \nusing Test\n\
    \n@testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3,\
    \ 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: space before \".\" not allowed in \"lst .\" at\
    \ /tmp/tmpai2wxcvy.jl:25\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpai2wxcvy.jl:25\n\
    in expression starting at /tmp/tmpai2wxcvy.jl:25\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    primes = primes(length(lst))\n    largest = primes[end]\n    largest =\
    \ 0\n    for p in primes\n        if p > largest\n            largest = p\n  \
    \      end\n    end\n    sum = 0\n    for p in primes\n        if p > largest\n\
    \            sum += lst[p]\n        end\n    end\n    return sum\nend\n</code>\n\
    <|/ a |>\n<| c |>\nThis code doesn't work. `primes(length(lst))` returns `primes(length(lst))`\
    \ which is not an array.\n<|/ c |>\n<| c |>\nI fixed the code. Thanks for pointing\
    \ out.\n<|/ c |>\n<| a dscore=1 |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32,\
    \ 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1, 8, 2, 4597,\
    \ 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1, 3, 1, 32,\
    \ 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0,\
    \ 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191])\
    \ == 19)\n\t@test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127,\
    \ 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvfn03rgj.jl:35\nin expression starting at\
    \ /tmp/tmpvfn03rgj.jl:35\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    primes = primes(length(lst))\n    largest = primes[end]\n    largest =\
    \ 0\n    for p in primes\n        if p > largest\n            largest = p\n  \
    \      end\n    end\n    sum = 0\n    for p in primes\n        if p == largest\n\
    \            sum += lst[p]\n        end\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nskjkasdkd([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181,\
    \ 32, 4, 32, 3, 2, 32, 324, 4, 3])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3])\n\
    </cell>\n<code language=julia-1.5>\nskjkasdkd([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0, 81, 12,\
    \ 3, 1, 21])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0, 8, 1, 2, 1, 7])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a vector of integers\
    \ and returns the number of prime numbers less than or equal to the length of\
    \ the vector.\nusing Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    \t@test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\
    \ == 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t\
    @test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t\
    @test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192])\
    \ == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnnzg7fov.jl:35\nin expression starting at\
    \ /tmp/tmpnnzg7fov.jl:35\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    primes = primes(length(lst))\n    largest = primes[end]\n    sum = 0\n\
    \    for p in primes\n        if p > largest\n            largest = p\n      \
    \  end\n    end\n    for p in primes\n        if p > largest\n            sum\
    \ += lst[p]\n        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324,\
    \ 4, 3])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([1, 0, 1, 8, 2, 4597,\
    \ 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3])\n\
    </cell>\n<code language=julia-1.5>\nskjkasdkd([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0, 81, 12,\
    \ 3, 1, 21])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0, 8, 1, 2, 1, 7])\n\
    </cell>\n<text>\nExercise 2\nusing Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\
    \t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1,\
    \ 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12,\
    \ 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191])\
    \ == 19)\n\t@test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127,\
    \ 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0857fgon.jl:34\nin expression starting at\
    \ /tmp/tmp0857fgon.jl:34\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    primes = primes(length(lst))\n    largest = primes[end]\n    largest =\
    \ largest.(lst)\n    largest = largest.(primes)\n    largest = largest.(primes)\n\
    \    largest = largest.(primes)\n    largest = largest.(primes)\n    largest =\
    \ largest.(primes)\n    largest = largest.(primes)\n    largest = largest.(primes)\n\
    \    largest = largest.(primes)\n    largest = largest.(primes)\n    largest =\
    \ largest.(primes)\n    largest = largest.(primes)\n    largest = largest.(primes)\n\
    \    largest = largest.(primes)\n    largest = largest.(primes)\n    largest =\
    \ largest.(primes)\n    largest = largest.(primes)\n    largest = largest.(primes)\n\
    \    largest = largest.(primes)\n    largest = largest.(primes)\n    largest =\
    \ largest.(primes)\n    largest = largest.(primes)\n    largest = largest.(primes)\n\
    \    largest = largest.(primes)\n    largest = largest.(primes)\n    largest =\
    \ largest.(primes)\n    largest = largest.(primes)\n    largest = largest.(primes)\n\
    \    largest = largest.(primes)\n    largest = largest.(primes)\n    largest =\
    \ largest.(primes)\n    largest = largest.(primes)\n    largest = largest.(primes)\n\
    \    largest = largest.(primes)\n    largest = largest.(primes)\n    largest =\
    \ largest.(primes)\n    largest = largest.(primes)\n    largest = largest.(primes)\n\
    \    largest = largest.(primes)\n    largest = largest.(primes)\n    largest =\
    \ largest.(primes)\n    largest = largest.(primes)\n    largest = largest.(primes)\n\
    \    largest = largest.(primes)\n    largest = largest.(primes)\n\nusing Test\n\
    \n@testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3,\
    \ 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpflhuagjf.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpflhuagjf.jl:1\n\
    in expression starting at /tmp/tmpflhuagjf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    primes = primes(length(lst))\n    largest = primes[end]\n    sum\
    \ = 0\n    for x in lst\n        if x == largest\n            sum += largest\n\
    \        else\n            largest = primes[end]\n            sum += largest\n\
    \        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324,\
    \ 4, 3])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([1, 0, 1, 8, 2, 4597,\
    \ 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3])\n\
    </cell>\n<code language=julia-1.5>\nskjkasdkd([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0, 81, 12,\
    \ 3, 1, 21])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0, 8, 1, 2, 1, 7])\n\
    </cell>\n<text>\nProblem 3\nusing Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\
    \t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1,\
    \ 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12,\
    \ 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191])\
    \ == 19)\n\t@test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127,\
    \ 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpd_pkrsh4.jl:33\nin expression starting at\
    \ /tmp/tmpd_pkrsh4.jl:33\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    primes = primes(length(lst))\n    largest = primes[end]\n    largest =\
    \ largest.abs()\n    largest = largest.ceil()\n    largest = largest.floor()\n\
    \    largest = largest.ceil()\n    largest = largest.abs()\n    largest = largest.ceil()\n\
    \    largest = largest.floor()\n    largest = largest.ceil()\n    largest = largest.abs()\n\
    \    largest = largest.ceil()\n    largest = largest.floor()\n    largest = largest.ceil()\n\
    \    largest = largest.abs()\n    largest = largest.ceil()\n    largest = largest.floor()\n\
    \    largest = largest.ceil()\n    largest = largest.abs()\n    largest = largest.ceil()\n\
    \    largest = largest.floor()\n    largest = largest.ceil()\n    largest = largest.abs()\n\
    \    largest = largest.ceil()\n    largest = largest.floor()\n    largest = largest.ceil()\n\
    \    largest = largest.abs()\n    largest = largest.ceil()\n    largest = largest.floor()\n\
    \    largest = largest.ceil()\n    largest = largest.abs()\n    largest = largest.ceil()\n\
    \    largest = largest.floor()\n    largest = largest.ceil()\n    largest = largest.abs()\n\
    \    largest = largest.ceil()\n    largest = largest.floor()\n    largest = largest.ceil()\n\
    \    largest = largest.abs()\n    largest = largest.ceil()\n    largest = largest.floor()\n\
    \    largest = largest.ceil()\n    largest = largest.abs()\n    largest = largest.ceil()\n\
    \    largest = largest.floor()\n    largest = largest.ceil()\n    largest = largest.abs()\n\
    \    largest = largest.ceil()\n    largest = largest.floor()\n    largest = largest.ceil()\n\
    \    largest = largest.abs()\n    largest = lar\nusing Test\n\n@testset begin\n\
    \ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1,\
    \ 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_yy06dgd.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_yy06dgd.jl:1\n\
    in expression starting at /tmp/tmp_yy06dgd.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    largest = minimum(lst)\n    largestPrime = primes[largest]\n   \
    \ largestPrimeDigits = digits[largestPrime]\n    largestPrimeDigitSum = sum(largestPrimeDigits)\n\
    \    \n    largestPrimeDigitSum = largestPrimeDigitSum + largestPrimeDigitSum\n\
    \    \n    return largestPrimeDigitSum\nend\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324,\
    \ 4, 3])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([1, 0, 1, 8, 2, 4597,\
    \ 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3])\n\
    </cell>\n<code language=julia-1.5>\nskjkasdkd([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0, 81, 12,\
    \ 3, 1, 21])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0, 8, 1, 2, 1, 7])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the sum of the digits\
    \ of an integer.\nusing Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    \t@test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\
    \ == 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t\
    @test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t\
    @test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192])\
    \ == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxz4kt0uw.jl:29\nin expression starting at\
    \ /tmp/tmpxz4kt0uw.jl:29\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    primes = primes(length(lst))\n    largest = primes[end]\n    largest =\
    \ 0\n    for p in primes\n        if p > largest\n            largest = p\n  \
    \      end\n    end\n    sum = 0\n    for p in primes\n        if p == largest\n\
    \            sum += lst[p]\n        end\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nskjkasdkd([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181,\
    \ 32, 4, 32, 3, 2, 32, 324, 4, 3])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3])\n\
    </cell>\n<code language=julia-1.5>\nskjkasdkd([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0, 81, 12,\
    \ 3, 1, 21])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0, 8, 1, 2, 1, 7])\n\
    </cell>\n<code language=julia-1.5>\nskjkasdkd([0, 8, 1, 2, 1, 7])\n</cell>\n<code\
    \ language=julia-1.5>\nskjkasdkd([0, 8, 1, 2, 1, 7])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([0, 8, 1, 2, 1, 7])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0,\
    \ 8, 1, 2, 1, 7])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0, 8, 1, 2,\
    \ 1, 7])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0, 8, 1, 2, 1, 7])\n\
    </cell>\n<code language=julia-1.5>\nskjkasdkd([0, 8, 1, 2, 1, 7])\n</cell>\n<code\
    \ language=julia-1.5>\nskjkasdkd([0, 8, 1, 2, 1, 7])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([0, 8, 1, 2, 1, 7])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0,\
    \ 8, 1, 2, 1, 7])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0, 8, 1, 2,\
    \ 1, 7])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0, 8, 1, 2, 1, 7])\n\
    </cell>\n<code language=julia-1.5\nusing Test\n\n@testset begin\n\ncandidate =\
    \ skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32,\
    \ 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1, 8, 2, 4597,\
    \ 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1, 3, 1, 32,\
    \ 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0,\
    \ 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191])\
    \ == 19)\n\t@test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127,\
    \ 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmperb4979c.jl:35\nin expression starting at\
    \ /tmp/tmperb4979c.jl:35\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    primes = primes(length(lst))\n    largest = primes[end]\n    largest =\
    \ largest.(lst)\n    largest = largest.(primes)\n    largest = largest.(primes)\n\
    \    largest = largest.(primes)\n    largest = largest.(primes)\n    largest =\
    \ largest.(primes)\n    largest = largest.(primes)\n    largest = largest.(primes)\n\
    \    largest = largest.(primes)\n    largest = largest.(primes)\n    largest =\
    \ largest.(primes)\n    largest = largest.(primes)\n    largest = largest.(primes)\n\
    \    largest = largest.(primes)\n    largest = largest.(primes)\n    largest =\
    \ largest.(primes)\n    largest = largest.(primes)\n    largest = largest.(primes)\n\
    \    largest = largest.(primes)\n    largest = largest.(primes)\n    largest =\
    \ largest.(primes)\n    largest = largest.(primes)\n    largest = largest.(primes)\n\
    \    largest = largest.(primes)\n    largest = largest.(primes)\n    largest =\
    \ largest.(primes)\n    largest = largest.(primes)\n    largest = largest.(primes)\n\
    \    largest = largest.(primes)\n    largest = largest.(primes)\n    largest =\
    \ largest.(primes)\n    largest = largest.(primes)\n    largest = largest.(primes)\n\
    \    largest = largest.(primes)\n    largest = largest.(primes)\n    largest =\
    \ largest.(primes)\n    largest = largest.(primes)\n    largest = largest.(primes)\n\
    \    largest = largest.(primes)\n    largest = largest.(primes)\n    largest =\
    \ largest.(primes)\n    largest = largest.(primes)\n    largest = largest.(primes)\n\
    \    largest = largest.(primes)\n    largest = largest.(primes)\n\nusing Test\n\
    \n@testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3,\
    \ 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpflhuagjf.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpflhuagjf.jl:1\n\
    in expression starting at /tmp/tmpflhuagjf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    primes = primes(length(lst))\n    largest = 0\n    for p in primes\n \
    \       if lst .contains p\n            largest = largest+p\n        end\n   \
    \ end\n    return largest\nend\n</cell>\n<code language=julia-1.4>\nskjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n</cell>\n\
    <code language=julia-1.4>\nskjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1])\n</cell>\n<code language=julia-1.4>\nskjkasdkd([1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3])\n</cell>\n<code language=julia-1.4>\n\
    skjkasdkd([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6])\n</cell>\n<code\
    \ language=julia-1.4>\nskjkasdkd([0, 81, 12, 3, 1, 21])\n</cell>\n<code language=julia-1.4>\n\
    skjkasdkd([0, 8, 1, 2, 1, 7])\n</cell>\n<text>\nExercise\nWrite a function that\
    \ takes a vector of integers and returns the sum of its digits.\nusing Test\n\n\
    @testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: space before \".\" not allowed in \"lst .\" at\
    \ /tmp/tmp8dltr7cq.jl:22\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp8dltr7cq.jl:22\n\
    in expression starting at /tmp/tmp8dltr7cq.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    primes = primes(length(lst))\n    largest = primes[end]\n    sum\
    \ = 0\n    for el in lst\n        if el == largest\n            sum += el\n  \
    \      else\n            break\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.4>\n\
    skjkasdkd([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324,\
    \ 4, 3])\n</cell>\n<code language=julia-1.4>\nskjkasdkd([1, 0, 1, 8, 2, 4597,\
    \ 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\n</cell>\n<code language=julia-1.4>\n\
    skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3])\n\
    </cell>\n<code language=julia-1.4>\nskjkasdkd([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6])\n</cell>\n<code language=julia-1.4>\nskjkasdkd([0, 81, 12,\
    \ 3, 1, 21])\n</cell>\n<code language=julia-1.4>\nskjkasdkd([0, 8, 1, 2, 1, 7])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes in a vector of integers\
    \ and returns the sum of the squares of the integers in the vector.\nusing Test\n\
    \n@testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3,\
    \ 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpf_vnyuc7.jl:31\nin expression starting at\
    \ /tmp/tmpf_vnyuc7.jl:31\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    largest = 0\n    largestPrime = 0\n    largestSum = 0\n    largestSumPrime\
    \ = 0\n    largestSumPrime2 = 0\n    largestSumPrime3 = 0\n    largestSumPrime4\
    \ = 0\n    largestSumPrime5 = 0\n    largestSumPrime6 = 0\n    largestSumPrime7\
    \ = 0\n    largestSumPrime8 = 0\n    largestSumPrime9 = 0\n    largestSumPrime10\
    \ = 0\n    largestSumPrime11 = 0\n    largestSumPrime12 = 0\n    largestSumPrime13\
    \ = 0\n    largestSumPrime14 = 0\n    largestSumPrime15 = 0\n    largestSumPrime16\
    \ = 0\n    largestSumPrime17 = 0\n    largestSumPrime18 = 0\n    largestSumPrime19\
    \ = 0\n    largestSumPrime20 = 0\n    largestSumPrime21 = 0\n    largestSumPrime22\
    \ = 0\n    largestSumPrime23 = 0\n    largestSumPrime24 = 0\n    largestSumPrime25\
    \ = 0\n    largestSumPrime26 = 0\n    largestSumPrime27 = 0\n    largestSumPrime28\
    \ = 0\n    largestSumPrime29 = 0\n    largestSumPrime30 = 0\n    largestSumPrime31\
    \ = 0\n    largestSumPrime32 = 0\n    largestSumPrime33 = 0\n    largestSumPrime34\
    \ = 0\n    largestSumPrime35 = 0\n    largestSumPrime36 = 0\n    largestSumPrime37\
    \ = 0\n    largestSumPrime38 = 0\n    largestSumPrime39 = 0\n    largestSumPrime40\
    \ = 0\n    largestSumPrime41 = 0\n    largestSumPrime42 = 0\n    largestSumPrime43\
    \ = 0\n    largestSumPrime44 = 0\n    largestSumPrime45 = 0\n    largestSumPrime46\
    \ = 0\n    largestSumPrime47 = 0\n    largestSumPrime48 = 0\n    largestSumPrime49\
    \ = 0\n    largestSumPrime50 = 0\n    largestSumPrime51 = 0\n    largestSumPrime52\
    \ = 0\n    largestSumPrime53 = 0\n    largestSumPrime54 = 0\n    largestSumPrime55\n\
    using Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    \t@test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\
    \ == 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t\
    @test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t\
    @test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192])\
    \ == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpk6q7nz9a.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpk6q7nz9a.jl:1\n\
    in expression starting at /tmp/tmpk6q7nz9a.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    largest = 0\n    largestPrime = 0\n    largestPrimeIndex = 0\n \
    \   largestPrimeIndex2 = 0\n    largestPrimeIndex3 = 0\n    largestPrimeIndex4\
    \ = 0\n    largestPrimeIndex5 = 0\n    largestPrimeIndex6 = 0\n    largestPrimeIndex7\
    \ = 0\n    largestPrimeIndex8 = 0\n    largestPrimeIndex9 = 0\n    largestPrimeIndex10\
    \ = 0\n    largestPrimeIndex11 = 0\n    largestPrimeIndex12 = 0\n    largestPrimeIndex13\
    \ = 0\n    largestPrimeIndex14 = 0\n    largestPrimeIndex15 = 0\n    largestPrimeIndex16\
    \ = 0\n    largestPrimeIndex17 = 0\n    largestPrimeIndex18 = 0\n    largestPrimeIndex19\
    \ = 0\n    largestPrimeIndex20 = 0\n    largestPrimeIndex21 = 0\n    largestPrimeIndex22\
    \ = 0\n    largestPrimeIndex23 = 0\n    largestPrimeIndex24 = 0\n    largestPrimeIndex25\
    \ = 0\n    largestPrimeIndex26 = 0\n    largestPrimeIndex27 = 0\n    largestPrimeIndex28\
    \ = 0\n    largestPrimeIndex29 = 0\n    largestPrimeIndex30 = 0\n    largestPrimeIndex31\
    \ = 0\n    largestPrimeIndex32 = 0\n    largestPrimeIndex33 = 0\n    largestPrimeIndex34\
    \ = 0\n    largestPrimeIndex35 = 0\n    largestPrimeIndex36 = 0\n    largestPrimeIndex37\
    \ = 0\n    largestPrimeIndex38 = 0\n    largestPrimeIndex39 = 0\n    largestPrimeIndex40\
    \ = 0\n    largestPrimeIndex41 = 0\n    largestPrimeIndex42 = 0\n    largestPrimeIndex43\
    \ = 0\n    largestPrimeIndex44 = 0\n    largestPrimeIndex45 = 0\n    largestPrimeIndex46\
    \ = 0\n    largestPrimeIndex47 = 0\n    largestPrimeIndex48 = 0\n    largestPrimeIndex49\
    \ = 0\n    largestPrimeIndex50 = 0\n    largestPrimeIndex51 = 0\n    largestPrimeIndex52\
    \ = 0\n    largestPrimeIndex53 = 0\n    largestPrimeIndex54 = 0\n    largestPrimeIndex55\
    \ = 0\n    largestPri\nusing Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\
    \t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1,\
    \ 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12,\
    \ 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191])\
    \ == 19)\n\t@test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127,\
    \ 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpdfnmruvd.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpdfnmruvd.jl:1\n\
    in expression starting at /tmp/tmpdfnmruvd.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    primes = primes(lst)\n    \n    largest = primes[end]\n    \n  \
    \  sum = 0\n    \n    for p in primes\n        if p > largest\n            largest\
    \ = p\n        end\n    end\n    \n    for p in primes\n        if p < largest\n\
    \            sum += p\n        end\n    end\n    \n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nskjkasdkd([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181,\
    \ 32, 4, 32, 3, 2, 32, 324, 4, 3])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3])\n\
    </cell>\n<code language=julia-1.5>\nskjkasdkd([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0, 81, 12,\
    \ 3, 1, 21])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0, 8, 1, 2, 1, 7])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the sum of all prime\
    \ numbers less than a given number.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32,\
    \ 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1, 8, 2, 4597,\
    \ 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1, 3, 1, 32,\
    \ 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0,\
    \ 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191])\
    \ == 19)\n\t@test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127,\
    \ 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpbau5wwet.jl:40\nin expression starting at\
    \ /tmp/tmpbau5wwet.jl:40\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    primes = primes(length(lst))\n    \n    largest = primes[end]\n\
    \    \n    sum = 0\n    \n    for x in lst\n        if x % largest == 0\n    \
    \        sum += largest\n        end\n    end\n    \n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nskjkasdkd([2,3,5,7,11])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes a list of integers and returns the sum of the\
    \ squares of the numbers.\nusing Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\
    \t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1,\
    \ 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12,\
    \ 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191])\
    \ == 19)\n\t@test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127,\
    \ 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpml1wglre.jl:34\nin expression starting at\
    \ /tmp/tmpml1wglre.jl:34\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    largest = Int64(0)\n    largestPrime = Int64(0)\n    for x in lst\n  \
    \      if isPrime(x)\n            if x > largest\n                largest = x\n\
    \                largestPrime = x\n            else\n                largestPrime\
    \ += x\n        end\n    end\n    return largestPrime\nend\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324,\
    \ 4, 3])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([1, 0, 1, 8, 2, 4597,\
    \ 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3])\n\
    </cell>\n<code language=julia-1.5>\nskjkasdkd([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0, 81, 12,\
    \ 3, 1, 21])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0, 8, 1, 2, 1, 7])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the number of prime\
    \ numbers less than a given number.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32,\
    \ 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1, 8, 2, 4597,\
    \ 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1, 3, 1, 32,\
    \ 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0,\
    \ 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191])\
    \ == 19)\n\t@test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127,\
    \ 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp50p_2e_q.jl:32\nin expression starting at\
    \ /tmp/tmp50p_2e_q.jl:32\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    largest = 0\n    largestPrime = 0\n    largestPrimeIndex = 0\n    for\
    \ index in 1:length(lst)\n        if lst[index] == largestPrime\n            largestPrimeIndex\
    \ += 1\n        elseif lst[index] > largestPrime\n            largestPrime = lst[index]\n\
    \            largestPrimeIndex = index\n        end\n    end\n    largestPrimeIndex\
    \ += 1\n    largestPrime = largestPrimeIndex\n    largestPrimeIndex += 1\n   \
    \ largestPrime = largestPrimeIndex\n    largestPrimeIndex += 1\n    largestPrime\
    \ = largestPrimeIndex\n    largestPrimeIndex += 1\n    largestPrime = largestPrimeIndex\n\
    \    largestPrimeIndex += 1\n    largestPrime = largestPrimeIndex\n    largestPrimeIndex\
    \ += 1\n    largestPrime = largestPrimeIndex\n    largestPrimeIndex += 1\n   \
    \ largestPrime = largestPrimeIndex\n    largestPrimeIndex += 1\n    largestPrime\
    \ = largestPrimeIndex\n    largestPrimeIndex += 1\n    largestPrime = largestPrimeIndex\n\
    \    largestPrimeIndex += 1\n    largestPrime = largestPrimeIndex\n    largestPrimeIndex\
    \ += 1\n    largestPrime = largestPrimeIndex\n    largestPrimeIndex += 1\n   \
    \ largestPrime = largestPrimeIndex\n    largestPrimeIndex += 1\n    largestPrime\
    \ = largestPrimeIndex\n    largestPrimeIndex += 1\n    largestPrime = largestPrimeIndex\n\
    \    largestPrimeIndex += 1\n    largestPrime = largestPrimeIndex\n    largestPrimeIndex\
    \ += 1\n    largestPrime = largestPrimeIndex\n    largestPrimeIndex += 1\n   \
    \ largestPrime = largestPrimeIndex\n    largestPrimeIndex += 1\n    largestPrime\
    \ = largestPrimeIndex\n    largestPrimeIndex += 1\n    largestPrime = largestPrimeIndex\n\
    \    largestPrimeIndex += 1\n    largestPrime = largestPrimeIndex\n    largestPrimeIndex\
    \ += 1\n    largestPrime = largestPrimeIndex\n    largestPrimeIndex += 1\n   \
    \ largestPrime = largestPri\nusing Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\
    \t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1,\
    \ 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12,\
    \ 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191])\
    \ == 19)\n\t@test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127,\
    \ 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmppnuosw7l.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmppnuosw7l.jl:1\n\
    in expression starting at /tmp/tmppnuosw7l.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    primes = primes(length(lst))\n    \n    largest = primes[end]\n\
    \    \n    sum = 0\n    \n    for x in lst\n        if x % largest == 0\n    \
    \        sum += x\n        end\n    end\n    \n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\n@time skjkasdkd(rand(1:10000, 10000));\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the number of prime numbers less than\
    \ a given number.\nusing Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\t\
    @test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1,\
    \ 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12,\
    \ 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191])\
    \ == 19)\n\t@test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127,\
    \ 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcgi4o6mt.jl:34\nin expression starting at\
    \ /tmp/tmpcgi4o6mt.jl:34\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    primes = primes(length(lst))\n    \n    largest = 0\n    largestPrime\
    \ = 0\n    \n    for prime in primes\n        if prime > largestPrime\n      \
    \      largestPrime = prime\n            largest = lst[prime]\n        elseif\
    \ prime == largestPrime\n            largest += lst[prime]\n        end\n    end\n\
    \    \n    return largest\nend\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n</cell>\n\
    <code language=julia-1.5>\nskjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6])\n</cell>\n<code\
    \ language=julia-1.5>\nskjkasdkd([0, 81, 12, 3, 1, 21])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([0, 8, 1, 2, 1, 7])\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ takes in a vector of integers and returns the number of prime numbers less than\
    \ or equal to the length of the vector.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32,\
    \ 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1, 8, 2, 4597,\
    \ 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1, 3, 1, 32,\
    \ 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0,\
    \ 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191])\
    \ == 19)\n\t@test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127,\
    \ 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_rmioxxn.jl:36\nin expression starting at\
    \ /tmp/tmp_rmioxxn.jl:36\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    primes = primes(length(lst))\n    largest = primes[end]\n    sum = 0\n\
    \    for i in lst\n        if i==largest\n            sum += i\n        else\n\
    \            largest = primes[end]\n            sum += i\n        end\n    end\n\
    \    return sum\nend\n</cell>\n<code language=julia-1.0>\nskjkasdkd([0, 3, 2,\
    \ 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n</cell>\n\
    <code language=julia-1.0>\nskjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1])\n</cell>\n<code language=julia-1.0>\nskjkasdkd([1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3])\n</cell>\n<code language=julia-1.0>\n\
    skjkasdkd([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6])\n</cell>\n<code\
    \ language=julia-1.0>\nskjkasdkd([0, 81, 12, 3, 1, 21])\n</cell>\n<code language=julia-1.0>\n\
    skjkasdkd([0, 8, 1, 2, 1, 7])\n</cell>\n<text>\nProblem 3\nWrite a function that\
    \ takes a vector of integers and returns the sum of the squares of the integers\
    \ in the vector.\nusing Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    \t@test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\
    \ == 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t\
    @test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t\
    @test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192])\
    \ == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7ayct96r.jl:32\nin expression starting at\
    \ /tmp/tmp7ayct96r.jl:32\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    largest = 0\n    largestPrime = 0\n    largestSum = 0\n    largestSumDigit\
    \ = 0\n    largestSumDigit2 = 0\n    largestSumDigit3 = 0\n    largestSumDigit4\
    \ = 0\n    largestSumDigit5 = 0\n    largestSumDigit6 = 0\n    largestSumDigit7\
    \ = 0\n    largestSumDigit8 = 0\n    largestSumDigit9 = 0\n    largestSumDigit10\
    \ = 0\n    largestSumDigit11 = 0\n    largestSumDigit12 = 0\n    largestSumDigit13\
    \ = 0\n    largestSumDigit14 = 0\n    largestSumDigit15 = 0\n    largestSumDigit16\
    \ = 0\n    largestSumDigit17 = 0\n    largestSumDigit18 = 0\n    largestSumDigit19\
    \ = 0\n    largestSumDigit20 = 0\n    largestSumDigit21 = 0\n    largestSumDigit22\
    \ = 0\n    largestSumDigit23 = 0\n    largestSumDigit24 = 0\n    largestSumDigit25\
    \ = 0\n    largestSumDigit26 = 0\n    largestSumDigit27 = 0\n    largestSumDigit28\
    \ = 0\n    largestSumDigit29 = 0\n    largestSumDigit30 = 0\n    largestSumDigit31\
    \ = 0\n    largestSumDigit32 = 0\n    largestSumDigit33 = 0\n    largestSumDigit34\
    \ = 0\n    largestSumDigit35 = 0\n    largestSumDigit36 = 0\n    largestSumDigit37\
    \ = 0\n    largestSumDigit38 = 0\n    largestSumDigit39 = 0\n    largestSumDigit40\
    \ = 0\n    largestSumDigit41 = 0\n    largestSumDigit42 = 0\n    largestSumDigit43\
    \ = 0\n    largestSumDigit44 = 0\n    largestSumDigit45 = 0\n    largestSumDigit46\
    \ = 0\n    largestSumDigit47 = 0\n    largestSumDigit48 = 0\n    largestSumDigit49\
    \ = 0\n    largestSumDigit50 = 0\n    largestSumDigit51 = 0\n    largestSumDigit52\
    \ = 0\n    largestSumDigit53 = 0\n    largestSumDigit54 = 0\n    largestSumDigit55\
    \ = 0\n    largestSumDigit56 = 0\n    largestSumDigit57 = 0\n    largestSumDigit58\
    \ = 0\n    largestSumDigit59 = 0\n    largestSumDigit60 = 0\n    largestSumDigit61\
    \ = 0\n    largestSumDigit\nusing Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\
    \t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1,\
    \ 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12,\
    \ 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191])\
    \ == 19)\n\t@test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127,\
    \ 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpcrfirnaw.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpcrfirnaw.jl:1\n\
    in expression starting at /tmp/tmpcrfirnaw.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpl4v7mbcj.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpl4v7mbcj.jl:1\n\
    in expression starting at /tmp/tmpl4v7mbcj.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    primes = primes(length(lst))\n    \n    largest = primes[end]\n\
    \    \n    sum = 0\n    \n    for x in lst\n        if x % largest == 0\n    \
    \        sum += largest\n        end\n    end\n    \n    return sum\nend\n</cell>\n\
    <code language=julia-1.3>\nskjkasdkd([2, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32,\
    \ 3, 2, 32, 324, 4, 3])\n</cell>\n<code language=julia-1.3>\nskjkasdkd([1, 0,\
    \ 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\n</cell>\n<code language=julia-1.3>\n\
    skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3])\n\
    </cell>\n<code language=julia-1.3>\nskjkasdkd([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6])\n</cell>\n<code language=julia-1.3>\nskjkasdkd([0, 81, 12,\
    \ 3, 1, 21])\n</cell>\n<code language=julia-1.3>\nskjkasdkd([0, 8, 1, 2, 1, 7])\n\
    </cell>\n<text>\nProblem 3\nWrite a function that takes a vector of integers and\
    \ returns the number of prime numbers less than or equal to the length of the\
    \ vector.\nusing Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    \t@test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\
    \ == 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t\
    @test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t\
    @test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192])\
    \ == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnoeqcp39.jl:34\nin expression starting at\
    \ /tmp/tmpnoeqcp39.jl:34\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpl4v7mbcj.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpl4v7mbcj.jl:1\n\
    in expression starting at /tmp/tmpl4v7mbcj.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    primes = primes(length(lst))\n    largest = primes[end]\n    largest =\
    \ largest * largest\n    largest = largest * largest\n    largest = largest *\
    \ largest\n    largest = largest * largest\n    largest = largest * largest\n\
    \    largest = largest * largest\n    largest = largest * largest\n    largest\
    \ = largest * largest\n    largest = largest * largest\n    largest = largest\
    \ * largest\n    largest = largest * largest\n    largest = largest * largest\n\
    \    largest = largest * largest\n    largest = largest * largest\n    largest\
    \ = largest * largest\n    largest = largest * largest\n    largest = largest\
    \ * largest\n    largest = largest * largest\n    largest = largest * largest\n\
    \    largest = largest * largest\n    largest = largest * largest\n    largest\
    \ = largest * largest\n    largest = largest * largest\n    largest = largest\
    \ * largest\n    largest = largest * largest\n    largest = largest * largest\n\
    \    largest = largest * largest\n    largest = largest * largest\n    largest\
    \ = largest * largest\n    largest = largest * largest\n    largest = largest\
    \ * largest\n    largest = largest * largest\n    largest = largest * largest\n\
    \    largest = largest * largest\n    largest = largest * largest\n    largest\
    \ = largest * largest\n    largest = largest * largest\n    largest = largest\
    \ * largest\n    largest = largest * largest\n    largest = largest * largest\n\
    \    largest = largest * largest\n    largest = largest * largest\n    largest\
    \ = largest * largest\n    largest = largest * largest\n    largest = largest\
    \ * largest\n    largest = largest * largest\n    largest = largest * largest\n\
    \    largest = largest * largest\n    largest = largest * largest\n    largest\
    \ = lar\nusing Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    \t@test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\
    \ == 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t\
    @test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t\
    @test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192])\
    \ == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpqrq0ha72.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpqrq0ha72.jl:1\n\
    in expression starting at /tmp/tmpqrq0ha72.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    largest = 0\n    largestPrime = 0\n    for x in lst\n        if isPrime(x)\n\
    \            if x > largest\n                largest = x\n                largestPrime\
    \ = x\n            else\n                largestPrime += x\n        end\n    end\n\
    \    return largestPrime\nend\nusing Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\
    \t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1,\
    \ 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12,\
    \ 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191])\
    \ == 19)\n\t@test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127,\
    \ 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpdf_tsyis.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpdf_tsyis.jl:1\n\
    in expression starting at /tmp/tmpdf_tsyis.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    largest = Int64(0)\n    largestPrime = Int64(0)\n    largestPrimeIndex\
    \ = Int64(0)\n    largestPrimeIndex2 = Int64(0)\n    largestPrimeIndex3 = Int64(0)\n\
    \    largestPrimeIndex4 = Int64(0)\n    largestPrimeIndex5 = Int64(0)\n    largestPrimeIndex6\
    \ = Int64(0)\n    largestPrimeIndex7 = Int64(0)\n    largestPrimeIndex8 = Int64(0)\n\
    \    largestPrimeIndex9 = Int64(0)\n    largestPrimeIndex10 = Int64(0)\n    largestPrimeIndex11\
    \ = Int64(0)\n    largestPrimeIndex12 = Int64(0)\n    largestPrimeIndex13 = Int64(0)\n\
    \    largestPrimeIndex14 = Int64(0)\n    largestPrimeIndex15 = Int64(0)\n    largestPrimeIndex16\
    \ = Int64(0)\n    largestPrimeIndex17 = Int64(0)\n    largestPrimeIndex18 = Int64(0)\n\
    \    largestPrimeIndex19 = Int64(0)\n    largestPrimeIndex20 = Int64(0)\n    largestPrimeIndex21\
    \ = Int64(0)\n    largestPrimeIndex22 = Int64(0)\n    largestPrimeIndex23 = Int64(0)\n\
    \    largestPrimeIndex24 = Int64(0)\n    largestPrimeIndex25 = Int64(0)\n    largestPrimeIndex26\
    \ = Int64(0)\n    largestPrimeIndex27 = Int64(0)\n    largestPrimeIndex28 = Int64(0)\n\
    \    largestPrimeIndex29 = Int64(0)\n    largestPrimeIndex30 = Int64(0)\n    largestPrimeIndex31\
    \ = Int64(0)\n    largestPrimeIndex32 = Int64(0)\n    largestPrimeIndex33 = Int64(0)\n\
    \    largestPrimeIndex34 = Int64(0)\n    largestPrimeIndex35 = Int64(0)\n    largestPrimeIndex36\
    \ = Int64(0)\n    largestPrimeIndex37 = Int64(0)\n    largestPrimeIndex38 = Int64(0)\n\
    \    largestPrimeIndex39 = Int64(0)\n    largestPrimeIndex40 = Int64(0)\n    largestPrimeIndex41\
    \ = Int64(0)\n    largestPrimeIndex42 = Int64(0)\n    \nusing Test\n\n@testset\
    \ begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4,\
    \ 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmprdqqprp2.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmprdqqprp2.jl:1\n\
    in expression starting at /tmp/tmprdqqprp2.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    primes = primes(length(lst))\n    largest = primes[end]\n    largest\
    \ = largest.digit\n    largest = largest.digits\n    largest = largest[1]\n  \
    \  largest = largest.digits\n    largest = largest[1]\n    largest = largest.digits\n\
    \    largest = largest[1]\n    largest = largest.digits\n    largest = largest[1]\n\
    \    largest = largest.digits\n    largest = largest[1]\n    largest = largest.digits\n\
    \    largest = largest[1]\n    largest = largest.digits\n    largest = largest[1]\n\
    \    largest = largest.digits\n    largest = largest[1]\n    largest = largest.digits\n\
    \    largest = largest[1]\n    largest = largest.digits\n    largest = largest[1]\n\
    \    largest = largest.digits\n    largest = largest[1]\n    largest = largest.digits\n\
    \    largest = largest[1]\n    largest = largest.digits\n    largest = largest[1]\n\
    \    largest = largest.digits\n    largest = largest[1]\n    largest = largest.digits\n\
    \    largest = largest[1]\n    largest = largest.digits\n    largest = largest[1]\n\
    \    largest = largest.digits\n    largest = largest[1]\n    largest = largest.digits\n\
    \    largest = largest[1]\n    largest = largest.digits\n    largest = largest[1]\n\
    \    largest = largest.digits\n    largest = largest[1]\n    largest = largest.digits\n\
    \    largest = largest[1]\n    largest = largest.digits\n    largest = largest[1]\n\
    \    largest = largest.digits\n    largest = largest[1]\n    largest = largest.digits\n\
    \    largest = largest[1]\n    largest = largest.digits\n    largest = largest[1]\n\
    \    largest = largest.digits\n    largest = largest[1]\n    largest = largest.digits\n\
    \    largest = largest[1]\n    largest = largest.digits\n    largest = largest[1]\n\
    \    largest = largest.digits\nusing Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\
    \t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1,\
    \ 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12,\
    \ 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191])\
    \ == 19)\n\t@test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127,\
    \ 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp26d106xw.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp26d106xw.jl:1\n\
    in expression starting at /tmp/tmp26d106xw.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    primes = primes(length(lst))\n    largest = primes[end]\n    largest =\
    \ largest.abs()\n    largest = largest.ceil()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceil()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceil()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceil()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceil()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceil()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceil()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceil()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceil()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceil()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceil()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceil()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceil()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceil()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceil()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceil()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = lar\nusing Test\n\n@testset begin\n\
    \ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1,\
    \ 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp0p05j1rc.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp0p05j1rc.jl:1\n\
    in expression starting at /tmp/tmp0p05j1rc.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    primes = primes(length(lst))\n    largest = primes[end]\n    largest =\
    \ largest.abs()\n    largest = largest.ceiling()\n    largest = largest.ceiling()\n\
    \    largest = largest.ceiling()\n    largest = largest.ceiling()\n    largest\
    \ = largest.ceiling()\n    largest = largest.ceiling()\n    largest = largest.ceiling()\n\
    \    largest = largest.ceiling()\n    largest = largest.ceiling()\n    largest\
    \ = largest.ceiling()\n    largest = largest.ceiling()\n    largest = largest.ceiling()\n\
    \    largest = largest.ceiling()\n    largest = largest.ceiling()\n    largest\
    \ = largest.ceiling()\n    largest = largest.ceiling()\n    largest = largest.ceiling()\n\
    \    largest = largest.ceiling()\n    largest = largest.ceiling()\n    largest\
    \ = largest.ceiling()\n    largest = largest.ceiling()\n    largest = largest.ceiling()\n\
    \    largest = largest.ceiling()\n    largest = largest.ceiling()\n    largest\
    \ = largest.ceiling()\n    largest = largest.ceiling()\n    largest = largest.ceiling()\n\
    \    largest = largest.ceiling()\n    largest = largest.ceiling()\n    largest\
    \ = largest.ceiling()\n    largest = largest.ceiling()\n    largest = largest.ceiling()\n\
    \    largest = largest.ceiling()\n    largest = largest.ceiling()\n    largest\
    \ = largest.ceiling()\n    largest = largest.ceiling()\n    largest = largest.ceiling()\n\
    \    largest = largest.ceiling()\n    largest = largest.ceiling()\n    largest\
    \ = largest.ceiling()\n    largest = largest.ceiling()\n    largest = largest.ceiling()\n\
    \    largest = largest.ceiling()\n    largest = largest.ceiling()\n    largest\
    \ = largest.ceiling()\n    largest = largest.ceiling()\n    largest = largest.ceiling()\n\
    \    largest = largest.ceiling()\n    largest = lar\nusing Test\n\n@testset begin\n\
    \ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1,\
    \ 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpqzvqkxju.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpqzvqkxju.jl:1\n\
    in expression starting at /tmp/tmpqzvqkxju.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    primes = primes(length(lst))\n    largest = primes[end]\n    sum\
    \ = 0\n    for p in primes\n        if p > largest\n            largest = p\n\
    \        end\n    end\n    for p in primes\n        if p > largest\n         \
    \   sum += lst[p]\n        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([2,3,5,7,11,13,17,19])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a list of integers and returns the sum of the squares of the numbers.\n\
    using Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    \t@test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\
    \ == 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t\
    @test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t\
    @test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192])\
    \ == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplc0c7khw.jl:35\nin expression starting at\
    \ /tmp/tmplc0c7khw.jl:35\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    primes = primes(length(lst))\n    largest = primes[end]\n    largest =\
    \ 0\n    for p in primes\n        if p > largest\n            largest = p\n  \
    \      end\n    end\n    sum = 0\n    for p in primes\n        if p == largest\n\
    \            sum += lst[p]\n        end\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\
    \t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1,\
    \ 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12,\
    \ 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191])\
    \ == 19)\n\t@test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127,\
    \ 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_0mhqtf4.jl:35\nin expression starting at\
    \ /tmp/tmp_0mhqtf4.jl:35\n"
  stdout: ''
- exit_code: -1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    largest = Int.(max(lst))\n    largestPrime = Int.(largest)\n   \
    \ largestPrimeIndex = Int.(findfirst(x -> x == largestPrime, lst))\n    largestPrimeValue\
    \ = Int.(lst[largestPrimeIndex])\n    largestPrimeValueSum = Int.(sum(largestPrimeValue))\n\
    \    return largestPrimeValueSum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32,\
    \ 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1, 8, 2, 4597,\
    \ 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1, 3, 1, 32,\
    \ 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0,\
    \ 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191])\
    \ == 19)\n\t@test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127,\
    \ 97, 8192]) == 10)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp20pck4u5.jl:32\n  Test threw
    exception\n'''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    largest = findmax(lst)\n    \n    if largest == 0\n        return\
    \ largest\n    else\n        \n        largest = largest[1]\n        \n      \
    \  sum = 0\n        \n        for el in lst\n            if el == largest\n  \
    \              sum += largest\n            else\n                sum += el\n \
    \           end\n        end\n        \n        return sum\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\n@time skjkasdkd(rand(1:100))\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes a vector of integers and returns the sum of its\
    \ digits.\nusing Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    \t@test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\
    \ == 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t\
    @test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t\
    @test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192])\
    \ == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0ebfd023.jl:41\nin expression starting at\
    \ /tmp/tmp0ebfd023.jl:41\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    primes = primes(length(lst))\n    largest = primes[end]\n    largest =\
    \ largest.abs()\n    largest = largest.floor()\n    largest = largest.ceil()\n\
    \    largest = largest.abs()\n    largest = largest.floor()\n    largest = largest.ceil()\n\
    \    largest = largest.abs()\n    largest = largest.floor()\n    largest = largest.ceil()\n\
    \    largest = largest.abs()\n    largest = largest.floor()\n    largest = largest.ceil()\n\
    \    largest = largest.abs()\n    largest = largest.floor()\n    largest = largest.ceil()\n\
    \    largest = largest.abs()\n    largest = largest.floor()\n    largest = largest.ceil()\n\
    \    largest = largest.abs()\n    largest = largest.floor()\n    largest = largest.ceil()\n\
    \    largest = largest.abs()\n    largest = largest.floor()\n    largest = largest.ceil()\n\
    \    largest = largest.abs()\n    largest = largest.floor()\n    largest = largest.ceil()\n\
    \    largest = largest.abs()\n    largest = largest.floor()\n    largest = largest.ceil()\n\
    \    largest = largest.abs()\n    largest = largest.floor()\n    largest = largest.ceil()\n\
    \    largest = largest.abs()\n    largest = largest.floor()\n    largest = largest.ceil()\n\
    \    largest = largest.abs()\n    largest = largest.floor()\n    largest = largest.ceil()\n\
    \    largest = largest.abs()\n    largest = largest.floor()\n    largest = largest.ceil()\n\
    \    largest = largest.abs()\n    largest = largest.floor()\n    largest = largest.ceil()\n\
    \    largest = largest.abs()\n    largest = largest.floor()\n    largest = largest.ceil()\n\
    \    largest = largest.abs()\n    largest = lar\nusing Test\n\n@testset begin\n\
    \ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1,\
    \ 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpt26kpssw.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpt26kpssw.jl:1\n\
    in expression starting at /tmp/tmpt26kpssw.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    largest = Int64(0)\n    largestPrime = Int64(0)\n    largestPrimeIndex\
    \ = Int64(0)\n    largestPrimeIndex = Int64(0)\n    largestPrimeIndex = Int64(0)\n\
    \    largestPrimeIndex = Int64(0)\n    largestPrimeIndex = Int64(0)\n    largestPrimeIndex\
    \ = Int64(0)\n    largestPrimeIndex = Int64(0)\n    largestPrimeIndex = Int64(0)\n\
    \    largestPrimeIndex = Int64(0)\n    largestPrimeIndex = Int64(0)\n    largestPrimeIndex\
    \ = Int64(0)\n    largestPrimeIndex = Int64(0)\n    largestPrimeIndex = Int64(0)\n\
    \    largestPrimeIndex = Int64(0)\n    largestPrimeIndex = Int64(0)\n    largestPrimeIndex\
    \ = Int64(0)\n    largestPrimeIndex = Int64(0)\n    largestPrimeIndex = Int64(0)\n\
    \    largestPrimeIndex = Int64(0)\n    largestPrimeIndex = Int64(0)\n    largestPrimeIndex\
    \ = Int64(0)\n    largestPrimeIndex = Int64(0)\n    largestPrimeIndex = Int64(0)\n\
    \    largestPrimeIndex = Int64(0)\n    largestPrimeIndex = Int64(0)\n    largestPrimeIndex\
    \ = Int64(0)\n    largestPrimeIndex = Int64(0)\n    largestPrimeIndex = Int64(0)\n\
    \    largestPrimeIndex = Int64(0)\n    largestPrimeIndex = Int64(0)\n    largestPrimeIndex\
    \ = Int64(0)\n    largestPrimeIndex = Int64(0)\n    largestPrimeIndex = Int64(0)\n\
    \    largestPrimeIndex = Int64(0)\n    largestPrimeIndex = Int64(0)\n    largestPrimeIndex\
    \ = Int64(0)\n    largestPrimeIndex = Int64(0)\n    largestPrimeIndex = Int64(0)\n\
    \    largestPrimeIndex = Int64(0)\n    largestPrimeIndex = Int64(0)\n    largestPrimeIndex\
    \ = Int64(0)\n    largestPrimeIndex = Int64(0)\n    largestPrimeIndex = Int64(0)\n\
    \    largestPrimeIndex = Int64(0)\n    largestPrimeIndex = Int64(0)\n    largestPrimeIndex\
    \ = Int64(0)\n    largestPrimeIndex = Int64(0)\n    largestPrimeIndex = Int64(0)\n\
    \    largestPrimeIndex = Int64(0)\n    lar\nusing Test\n\n@testset begin\n\ncandidate\
    \ = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32,\
    \ 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1, 8, 2, 4597,\
    \ 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1, 3, 1, 32,\
    \ 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0,\
    \ 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191])\
    \ == 19)\n\t@test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127,\
    \ 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_z5x2_g2.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_z5x2_g2.jl:1\n\
    in expression starting at /tmp/tmp_z5x2_g2.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    primes = primes(length(lst))\n    largest = primes[end]\n    largest =\
    \ largest * largest\n    largest = largest * largest\n    largest = largest *\
    \ largest\n    largest = largest * largest\n    largest = largest * largest\n\
    \    largest = largest * largest\n    largest = largest * largest\n    largest\
    \ = largest * largest\n    largest = largest * largest\n    largest = largest\
    \ * largest\n    largest = largest * largest\n    largest = largest * largest\n\
    \    largest = largest * largest\n    largest = largest * largest\n    largest\
    \ = largest * largest\n    largest = largest * largest\n    largest = largest\
    \ * largest\n    largest = largest * largest\n    largest = largest * largest\n\
    \    largest = largest * largest\n    largest = largest * largest\n    largest\
    \ = largest * largest\n    largest = largest * largest\n    largest = largest\
    \ * largest\n    largest = largest * largest\n    largest = largest * largest\n\
    \    largest = largest * largest\n    largest = largest * largest\n    largest\
    \ = largest * largest\n    largest = largest * largest\n    largest = largest\
    \ * largest\n    largest = largest * largest\n    largest = largest * largest\n\
    \    largest = largest * largest\n    largest = largest * largest\n    largest\
    \ = largest * largest\n    largest = largest * largest\n    largest = largest\
    \ * largest\n    largest = largest * largest\n    largest = largest * largest\n\
    \    largest = largest * largest\n    largest = largest * largest\n    largest\
    \ = largest * largest\n    largest = largest * largest\n    largest = largest\
    \ * largest\n    largest = largest * largest\n    largest = largest * largest\n\
    \    largest = largest * largest\n    largest = largest * largest\n    largest\
    \ = lar\nusing Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    \t@test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\
    \ == 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t\
    @test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t\
    @test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192])\
    \ == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpqrq0ha72.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpqrq0ha72.jl:1\n\
    in expression starting at /tmp/tmpqrq0ha72.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    largest = minimum(lst)\n    largestPrime = primes[largest]\n   \
    \ largestPrimeSum = 0\n    for x in lst\n        if x % largestPrime == 0\n  \
    \          largestPrimeSum += x % largestPrime\n        end\n    end\n    return\
    \ largestPrimeSum\nend\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0, 3, 2,\
    \ 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n</cell>\n\
    <code language=julia-1.5>\nskjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6])\n</cell>\n<code\
    \ language=julia-1.5>\nskjkasdkd([0, 81, 12, 3, 1, 21])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([0, 8, 1, 2, 1, 7])\n</cell>\n<text>\nProblem 3\nWrite a function that\
    \ returns the number of prime factors of a given integer.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4,\
    \ 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpj8mwxeow.jl:30\nin expression starting at\
    \ /tmp/tmpj8mwxeow.jl:30\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    largest = findmax(lst)\n    largest = largest[1]\n    largest = largest[1]\n\
    \    largest = largest[1]\n    largest = largest[1]\n    largest = largest[1]\n\
    \    largest = largest[1]\n    largest = largest[1]\n    largest = largest[1]\n\
    \    largest = largest[1]\n    largest = largest[1]\n    largest = largest[1]\n\
    \    largest = largest[1]\n    largest = largest[1]\n    largest = largest[1]\n\
    \    largest = largest[1]\n    largest = largest[1]\n    largest = largest[1]\n\
    \    largest = largest[1]\n    largest = largest[1]\n    largest = largest[1]\n\
    \    largest = largest[1]\n    largest = largest[1]\n    largest = largest[1]\n\
    \    largest = largest[1]\n    largest = largest[1]\n    largest = largest[1]\n\
    \    largest = largest[1]\n    largest = largest[1]\n    largest = largest[1]\n\
    \    largest = largest[1]\n    largest = largest[1]\n    largest = largest[1]\n\
    \    largest = largest[1]\n    largest = largest[1]\n    largest = largest[1]\n\
    \    largest = largest[1]\n    largest = largest[1]\n    largest = largest[1]\n\
    \    largest = largest[1]\n    largest = largest[1]\n    largest = largest[1]\n\
    \    largest = largest[1]\n    largest = largest[1]\n    largest = largest[1]\n\
    \    largest = largest[1]\n    largest = largest[1]\n    largest = largest[1]\n\
    \    largest = largest[1]\n    largest = largest[1]\n    largest = largest[1]\n\
    \    largest = largest[1]\n    largest = largest[1]\n    largest = largest[1]\n\
    \    largest = largest[1]\n    largest = largest[1]\n    largest = largest[1]\n\
    \    largest = largest[1]\n    largest = largest[1]\n    largest = largest[1]\n\
    \    largest = largest[1]\n    largest = largest[1]\n    largest = largest[1]\n\
    \    largest = largest[1]\nusing Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\
    \t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1,\
    \ 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12,\
    \ 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191])\
    \ == 19)\n\t@test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127,\
    \ 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpbz__84oz.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpbz__84oz.jl:1\n\
    in expression starting at /tmp/tmpbz__84oz.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    primes = primes(length(lst))\n    largest = primes[end]\n    sum = 0\n\
    \    for p in primes\n        if p > largest\n            largest = p\n      \
    \  end\n    end\n    for p in primes\n        if p > largest\n            sum\
    \ += lst[p]\n        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([2,3,5,7,11,13,17,19])\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes a vector of integers and returns the sum of the squares of the integers\
    \ in the vector.\nusing Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    \t@test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\
    \ == 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t\
    @test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t\
    @test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192])\
    \ == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpf3w76ny2.jl:34\nin expression starting at\
    \ /tmp/tmpf3w76ny2.jl:34\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    primes = primes(length(lst))\n    largest = primes[end]\n    largest =\
    \ largest.abs()\n    largest = largest.ceiling()\n    largest = largest.abs()\n\
    \    largest = largest.ceiling()\n    largest = largest.abs()\n    largest = largest.ceiling()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.abs()\n\
    \    largest = largest.ceiling()\n    largest = largest.abs()\n    largest = largest.ceiling()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.abs()\n\
    \    largest = largest.ceiling()\n    largest = largest.abs()\n    largest = largest.ceiling()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.abs()\n\
    \    largest = largest.ceiling()\n    largest = largest.abs()\n    largest = largest.ceiling()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.abs()\n\
    \    largest = largest.ceiling()\n    largest = largest.abs()\n    largest = largest.ceiling()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.abs()\n\
    \    largest = largest.ceiling()\n    largest = largest.abs()\n    largest = largest.ceiling()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.abs()\n\
    \    largest = largest.ceiling()\n    largest = largest.abs()\n    largest = largest.ceiling()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.abs()\n\
    \    largest = largest.ceiling()\n    largest = largest.abs()\n    largest = largest.ceiling()\n\
    \    largest = largest.abs()\n    largest = lar\nusing Test\n\n@testset begin\n\
    \ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1,\
    \ 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp9oyd_4_e.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp9oyd_4_e.jl:1\n\
    in expression starting at /tmp/tmp9oyd_4_e.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    largest = findmax(lst)\n    sum = 0\n    for x in lst\n        if x ==\
    \ largest\n            sum += x\n        end\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2,\
    \ 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t\
    @test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) ==\
    \ 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32,\
    \ 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91,\
    \ 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0,\
    \ 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191,\
    \ 123456, 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 9 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmppapj4nm8.jl:30

    '
  stdout: "test set: Test Failed at /tmp/tmppapj4nm8.jl:33\n  Expression: candidate([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10\n\
    \   Evaluated: 0 == 10\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppapj4nm8.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppapj4nm8.jl:32\ntest set: Test\
    \ Failed at /tmp/tmppapj4nm8.jl:34\n  Expression: candidate([1, 0, 1, 8, 2, 4597,\
    \ 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25\n   Evaluated: 0 == 25\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppapj4nm8.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppapj4nm8.jl:32\ntest set: Test\
    \ Failed at /tmp/tmppapj4nm8.jl:35\n  Expression: candidate([1, 3, 1, 32, 5107,\
    \ 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13\n   Evaluated: 0 == 13\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppapj4nm8.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppapj4nm8.jl:32\ntest set: Test\
    \ Failed at /tmp/tmppapj4nm8.jl:36\n  Expression: candidate([0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11\n   Evaluated: 0 == 11\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppapj4nm8.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppapj4nm8.jl:32\ntest set: Test\
    \ Failed at /tmp/tmppap"
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    primes = primes(length(lst))\n    largest = primes[end]\n    sum = 0\n\
    \    for x in lst\n        if x % largest == 0\n            sum += largest\n \
    \       end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([2, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n\
    </cell>\n<code language=julia-1.5>\nskjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40,\
    \ 1, 2, 1, 2, 4, 2, 5, 1])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3])\n</cell>\n\
    <code language=julia-1.5>\nskjkasdkd([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83,\
    \ 0, 5, 6])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0, 81, 12, 3, 1, 21])\n\
    </cell>\n<code language=julia-1.5>\nskjkasdkd([0, 8, 1, 2, 1, 7])\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes a vector of integers and returns the number\
    \ of integers that are divisible by all numbers in the vector.\nusing Test\n\n\
    @testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpokwulroj.jl:29\nin expression starting at\
    \ /tmp/tmpokwulroj.jl:29\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    primes = primes(length(lst))\n    \n    largest = 0\n    \n    for\
    \ p in primes\n        if lst .contains p\n            largest = largest+p\n \
    \       end\n    end\n    \n    return largest\nend\n</cell>\n<code language=julia-1.5>\n\
    @time skjkasdkd(rand(1:10000));\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes a vector of integers and returns the sum of the digits of its largest\
    \ prime factor.\nusing Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    \t@test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\
    \ == 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t\
    @test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t\
    @test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192])\
    \ == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: space before \".\" not allowed in \"lst .\" at\
    \ /tmp/tmpprivdjpn.jl:25\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpprivdjpn.jl:25\n\
    in expression starting at /tmp/tmpprivdjpn.jl:25\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    largest = minimum(lst)\n    largestPrime = primes[largest]\n   \
    \ largestPrimeSum = 0\n    for el in lst\n        if el == largest\n         \
    \   continue\n        if el == largestPrime\n            largestPrimeSum += el\n\
    \            continue\n        if el % largestPrime == 0\n            largestPrimeSum\
    \ += el\n        end\n    end\n    return largestPrimeSum\nend\n</cell>\n<code\
    \ language=julia-1.5>\nskjkasdkd([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32,\
    \ 4, 32, 3, 2, 32, 324, 4, 3])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3])\n\
    </cell>\n<code language=julia-1.5>\nskjkasdkd([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0, 81, 12,\
    \ 3, 1, 21])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0, 8, 1, 2, 1, 7])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a vector of integers\
    \ and returns the sum of its digits.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32,\
    \ 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1, 8, 2, 4597,\
    \ 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1, 3, 1, 32,\
    \ 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0,\
    \ 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191])\
    \ == 19)\n\t@test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127,\
    \ 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6pcxhlau.jl:35\nin expression starting at\
    \ /tmp/tmp6pcxhlau.jl:35\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    primes = Primes(lst)\n    largest = primes[end]\n    sum = 0\n \
    \   for p in primes\n        if p > largest\n            largest = p\n       \
    \ end\n    end\n    for p in primes\n        if p > largest\n            sum +=\
    \ p\n        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.4>\n\
    skjkasdkd([3, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324,\
    \ 4, 3])\n</cell>\n<code language=julia-1.4>\nskjkasdkd([1, 0, 1, 8, 2, 4597,\
    \ 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\n</cell>\n<code language=julia-1.4>\n\
    skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3])\n\
    </cell>\n<code language=julia-1.4>\nskjkasdkd([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6])\n</cell>\n<code language=julia-1.4>\nskjkasdkd([0, 81, 12,\
    \ 3, 1, 21])\n</cell>\n<code language=julia-1.4>\nskjkasdkd([0, 8, 1, 2, 1, 7])\n\
    </cell>\n<code language=julia-1.4>\nskjkasdkd([3, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n</cell>\n<code language=julia-1.4>\n\
    skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\n</cell>\n\
    <code language=julia-1.4>\nskjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163,\
    \ 23, 2323, 32, 30, 1, 9, 3])\n</cell>\n<code language=julia-1.4>\nskjkasdkd([0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6])\n</cell>\n<code language=julia-1.4>\n\
    skjkasdkd([0, 81, 12, 3, 1, 21])\n</cell>\n<code language=julia-1.4>\nskjkasdkd([0,\
    \ 8, 1, 2, 1, 7])\n</cell>\n<code language=julia-1.4>\nskjkasdkd([3, 3, 2, 1,\
    \ 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n</cell>\n<code\
    \ language=julia-1.4>\nskjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2,\
    \ 4, 2, 5, 1])\n</cell>\n<code language=julia-1.4>\nskjkasdkd([1, 3, 1, 32, \n\
    using Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    \t@test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\
    \ == 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t\
    @test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t\
    @test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192])\
    \ == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnodm84au.jl:35\nin expression starting at\
    \ /tmp/tmpnodm84au.jl:35\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    largest = 0\n    largestPrime = 0\n    for i in lst\n        if i%2 ==\
    \ 0\n            largestPrime = i\n        else\n            if i%3 == 0\n   \
    \             largestPrime = i\n            else\n                if i%5 == 0\n\
    \                    largestPrime = i\n                else\n                \
    \    if i%7 == 0\n                        largestPrime = i\n                 \
    \   else\n                        if i%11 == 0\n                            largestPrime\
    \ = i\n                        else\n                            if i%13 == 0\n\
    \                                largestPrime = i\n                          \
    \  else\n                                if i%17 == 0\n                      \
    \              largestPrime = i\n                                else\n      \
    \                              if i%19 == 0\n                                \
    \        largestPrime = i\n                                    else\n        \
    \                                if i%23 == 0\n                              \
    \              largestPrime = i\n                                        else\n\
    \                                            if i%29 == 0\n                  \
    \                              largestPrime = i\n                            \
    \                else\n                                                if i%31\
    \ == 0\n                                                    largestPrime = i\n\
    \                                                else\n                      \
    \                              largestPrime = largestPrime + 1\n            end\n\
    \        end\n    end\n    largestPrime = largestPrime + 1\n    largest = largestPrime\
    \ + largest\n    return largest\nend\n</code>\n<|/ a tags=julia,primes |>\n<|\
    \ c |>\nThis does not work. `skjkasdkd([2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])` returns `10` instead\
    \ of `15`.\n<|/ c |>\n<| c |>\nI fixed the bug, thanks for pointing it out. Now\
    \ it works.\n<|/ c |>\n<| c |>\nI fixed the bug, thanks for pointing it out. Now\
    \ it works.\n<|/ c |>\n<| c |>\nI fixed the bug, thanks for pointing it out. Now\
    \ it works.\n<|/ c |>\n<| c |>\nI fixed the bug, thanks for pointing it out. Now\
    \ it works.\n<|/ c |>\n<| a tags=julia,primes |>\nI wrote a package for Julia\
    \ that does this for you:\nhttps://github.com/JuliaLang/julia-primes\n<code>\n\
    julia> using JuliaPrimes\nusing Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\
    \t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1,\
    \ 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12,\
    \ 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191])\
    \ == 19)\n\t@test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127,\
    \ 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2fpz0xxm.jl:63\nin expression starting at\
    \ /tmp/tmp2fpz0xxm.jl:63\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    primes = primes(length(lst))\n    largest = primes[end]\n    largest =\
    \ largest * largest\n    largest = largest * largest\n    largest = largest *\
    \ largest\n    largest = largest * largest\n    largest = largest * largest\n\
    \    largest = largest * largest\n    largest = largest * largest\n    largest\
    \ = largest * largest\n    largest = largest * largest\n    largest = largest\
    \ * largest\n    largest = largest * largest\n    largest = largest * largest\n\
    \    largest = largest * largest\n    largest = largest * largest\n    largest\
    \ = largest * largest\n    largest = largest * largest\n    largest = largest\
    \ * largest\n    largest = largest * largest\n    largest = largest * largest\n\
    \    largest = largest * largest\n    largest = largest * largest\n    largest\
    \ = largest * largest\n    largest = largest * largest\n    largest = largest\
    \ * largest\n    largest = largest * largest\n    largest = largest * largest\n\
    \    largest = largest * largest\n    largest = largest * largest\n    largest\
    \ = largest * largest\n    largest = largest * largest\n    largest = largest\
    \ * largest\n    largest = largest * largest\n    largest = largest * largest\n\
    \    largest = largest * largest\n    largest = largest * largest\n    largest\
    \ = largest * largest\n    largest = largest * largest\n    largest = largest\
    \ * largest\n    largest = largest * largest\n    largest = largest * largest\n\
    \    largest = largest * largest\n    largest = largest * largest\n    largest\
    \ = largest * largest\n    largest = largest * largest\n    largest = largest\
    \ * largest\n    largest = largest * largest\n    largest = largest * largest\n\
    \    largest = largest * largest\n    largest = largest * largest\n    largest\
    \ = lar\nusing Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    \t@test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\
    \ == 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t\
    @test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t\
    @test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192])\
    \ == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpqrq0ha72.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpqrq0ha72.jl:1\n\
    in expression starting at /tmp/tmpqrq0ha72.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    largest = Int64(0)\n    largest = Int64(lst[1])\n    for i in 2:length(lst)\n\
    \        if lst[i] > largest\n            largest = lst[i]\n        end\n    end\n\
    \    return largest\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4,\
    \ 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpa97i1fox.jl:28\nin expression starting at\
    \ /tmp/tmpa97i1fox.jl:28\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    primes = primes(length(lst))\n    largest = primes[end]\n    largest =\
    \ largest.digits[1]\n    largest = largest.digits[2]\n    largest = largest.digits[3]\n\
    \    largest = largest.digits[4]\n    largest = largest.digits[5]\n    largest\
    \ = largest.digits[6]\n    largest = largest.digits[7]\n    largest = largest.digits[8]\n\
    \    largest = largest.digits[9]\n    largest = largest.digits[10]\n    largest\
    \ = largest.digits[11]\n    largest = largest.digits[12]\n    largest = largest.digits[13]\n\
    \    largest = largest.digits[14]\n    largest = largest.digits[15]\n    largest\
    \ = largest.digits[16]\n    largest = largest.digits[17]\n    largest = largest.digits[18]\n\
    \    largest = largest.digits[19]\n    largest = largest.digits[20]\n    largest\
    \ = largest.digits[21]\n    largest = largest.digits[22]\n    largest = largest.digits[23]\n\
    \    largest = largest.digits[24]\n    largest = largest.digits[25]\n    largest\
    \ = largest.digits[26]\n    largest = largest.digits[27]\n    largest = largest.digits[28]\n\
    \    largest = largest.digits[29]\n    largest = largest.digits[30]\n    largest\
    \ = largest.digits[31]\n    largest = largest.digits[32]\n    largest = largest.digits[33]\n\
    \    largest = largest.digits[34]\n    largest = largest.digits[35]\n    largest\
    \ = largest.digits[36]\n    largest = largest.digits[37]\n    largest = largest.digits[38]\n\
    \    largest = largest.digits[39]\n    largest = largest.digits[40]\n    largest\
    \ = largest.digits[41]\n    largest = largest.digits[42]\n    largest = largest\n\
    using Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    \t@test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\
    \ == 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t\
    @test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t\
    @test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192])\
    \ == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpq6fdrdv_.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpq6fdrdv_.jl:1\n\
    in expression starting at /tmp/tmpq6fdrdv_.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    primes = primes(length(lst))\n    largest = primes[end]\n    largest =\
    \ largest.abs()\n    largest = largest.ceil()\n    largest = largest.floor()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = lar\nusing Test\n\n@testset begin\n\
    \ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1,\
    \ 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5292986c.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5292986c.jl:1\n\
    in expression starting at /tmp/tmp5292986c.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    primes = primes(length(lst))\n    largest = primes[end]\n    sum = 0\n\
    \    for el in lst\n        if el == largest\n            sum += el\n        else\n\
    \            largest = el\n        end\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nskjkasdkd([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181,\
    \ 32, 4, 32, 3, 2, 32, 324, 4, 3])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3])\n\
    </cell>\n<code language=julia-1.5>\nskjkasdkd([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0, 81, 12,\
    \ 3, 1, 21])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0, 8, 1, 2, 1, 7])\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes in a vector of integers\
    \ and returns the sum of the squares of the integers in the vector.\nusing Test\n\
    \n@testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3,\
    \ 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprkex15xq.jl:31\nin expression starting at\
    \ /tmp/tmprkex15xq.jl:31\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    primes = primes(length(lst))\n    largest = primes[end]\n    largest\
    \ = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.ceiling()\n    largest = largest.ceiling()\n    largest\
    \ = largest.ceiling()\n    largest = largest.ceiling()\n    largest = largest.ceiling()\n\
    \    largest = largest.ceiling()\n    largest = largest.ceiling()\n    largest\
    \ = largest.ceiling()\n    largest = largest.ceiling()\n    largest = largest.ceiling()\n\
    \    largest = largest.ceiling()\n    largest = largest.ceiling()\n    largest\
    \ = largest.ceiling()\n    largest = largest.ceiling()\n    largest = largest.ceiling()\n\
    \    largest = largest.ceiling()\n    largest = largest.ceiling()\n    largest\
    \ = largest.ceiling()\n    largest = largest.ceiling()\n    largest = largest.ceiling()\n\
    \    largest = largest.ceiling()\n    largest = largest.ceiling()\n    largest\
    \ = largest.ceiling()\n    largest = largest.ceiling()\n    largest = largest.ceiling()\n\
    \    largest = largest.ceiling()\n    largest = largest.ceiling()\n    largest\
    \ = largest.ceiling()\n    largest = largest.ceiling()\n    largest = largest.ceiling()\n\
    \    largest = largest.ceiling()\n    largest = largest.ceiling()\n    largest\
    \ = largest.ceiling()\n    largest = largest.ceiling()\n    largest = largest.ceiling()\n\
    \    largest = largest.ceiling()\n    largest = largest.ceiling()\n    largest\
    \ = largest.ceiling()\n    largest = largest.ceiling()\n    largest = largest.ceiling()\n\
    \    largest = largest.ceiling()\n    largest = largest.ceiling()\n    largest\
    \ = largest.ceiling()\n    largest = largest.ceiling()\n    largest = largest.ceiling()\n\
    \    largest = largest.ceiling()\n    largest\nusing Test\n\n@testset begin\n\n\
    candidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2,\
    \ 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1, 8,\
    \ 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpycityu50.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpycityu50.jl:1\n\
    in expression starting at /tmp/tmpycityu50.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    largest = minimum(lst)\n    largestPrime = primes[largest]\n   \
    \ largestPrimeDigits = digits[largestPrime]\n    largestPrimeDigitSum = sum(largestPrimeDigits)\n\
    \    \n    largestPrimeDigitSum\nend\n</cell>\n<code language=julia-1.5>\nusing\
    \ Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2,\
    \ 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t\
    @test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) ==\
    \ 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32,\
    \ 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91,\
    \ 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0,\
    \ 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191,\
    \ 123456, 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6733fpbi.jl:27\nin expression starting at\
    \ /tmp/tmp6733fpbi.jl:27\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    largest = 0\n    largestPrime = 0\n    largestSum = 0\n    for x in lst\n\
    \        if x == largestPrime\n            largestPrime = 0\n            largestSum\
    \ = 0\n        else\n            if largestPrime == 0\n                largestPrime\
    \ = x\n                largestSum = x\n            else\n                if largestPrime\
    \ > x\n                    largestPrime = x\n                    largestSum =\
    \ x\n                end\n            end\n        end\n    end\n    return largestSum\n\
    end\n</cell>\n<code language=julia-1.5>\n@assert skjkasdkd([0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10\n@assert skjkasdkd([1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25\n@assert skjkasdkd([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13\n@assert\
    \ skjkasdkd([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11\n@assert\
    \ skjkasdkd([0, 81, 12, 3, 1, 21]) == 3\n@assert skjkasdkd([0, 8, 1, 2, 1, 7])\
    \ == 7\n</cell>\n<text>\nProblem 4\nWrite a function that returns the number of\
    \ prime numbers less than a given integer $n$. \nThe function should take in a\
    \ single integer $n$ and return a number.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32,\
    \ 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1, 8, 2, 4597,\
    \ 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1, 3, 1, 32,\
    \ 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0,\
    \ 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191])\
    \ == 19)\n\t@test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127,\
    \ 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcff2rjlv.jl:40\nin expression starting at\
    \ /tmp/tmpcff2rjlv.jl:40\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    primes = primes(length(lst))\n    \n    largest = primes[end]\n\
    \    \n    sum = 0\n    \n    for el in lst\n        if el == largest\n      \
    \      sum += el\n        else\n            largest = primes[end]\n          \
    \  sum += el\n        end\n    end\n    \n    return sum\nend\n</cell>\n<code\
    \ language=julia-1.4>\nskjkasdkd([3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3])\n</cell>\n<code language=julia-1.4>\nskjkasdkd([1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\n</cell>\n<code language=julia-1.4>\n\
    skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3])\n\
    </cell>\n<code language=julia-1.4>\nskjkasdkd([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6])\n</cell>\n<code language=julia-1.4>\nskjkasdkd([0, 81, 12,\
    \ 3, 1, 21])\n</cell>\n<code language=julia-1.4>\nskjkasdkd([0, 8, 1, 2, 1, 7])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a vector of integers\
    \ and returns the sum of the squares of the integers in the vector.\nusing Test\n\
    \n@testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3,\
    \ 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxjmvo__e.jl:37\nin expression starting at\
    \ /tmp/tmpxjmvo__e.jl:37\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    largest = Int64(0)\n    largestPrime = Int64(0)\n    largestPrimeIndex\
    \ = Int64(0)\n    largestPrimeIndex = Int64(0)\n    largestPrimeIndex = Int64(0)\n\
    \    largestPrimeIndex = Int64(0)\n    largestPrimeIndex = Int64(0)\n    largestPrimeIndex\
    \ = Int64(0)\n    largestPrimeIndex = Int64(0)\n    largestPrimeIndex = Int64(0)\n\
    \    largestPrimeIndex = Int64(0)\n    largestPrimeIndex = Int64(0)\n    largestPrimeIndex\
    \ = Int64(0)\n    largestPrimeIndex = Int64(0)\n    largestPrimeIndex = Int64(0)\n\
    \    largestPrimeIndex = Int64(0)\n    largestPrimeIndex = Int64(0)\n    largestPrimeIndex\
    \ = Int64(0)\n    largestPrimeIndex = Int64(0)\n    largestPrimeIndex = Int64(0)\n\
    \    largestPrimeIndex = Int64(0)\n    largestPrimeIndex = Int64(0)\n    largestPrimeIndex\
    \ = Int64(0)\n    largestPrimeIndex = Int64(0)\n    largestPrimeIndex = Int64(0)\n\
    \    largestPrimeIndex = Int64(0)\n    largestPrimeIndex = Int64(0)\n    largestPrimeIndex\
    \ = Int64(0)\n    largestPrimeIndex = Int64(0)\n    largestPrimeIndex = Int64(0)\n\
    \    largestPrimeIndex = Int64(0)\n    largestPrimeIndex = Int64(0)\n    largestPrimeIndex\
    \ = Int64(0)\n    largestPrimeIndex = Int64(0)\n    largestPrimeIndex = Int64(0)\n\
    \    largestPrimeIndex = Int64(0)\n    largestPrimeIndex = Int64(0)\n    largestPrimeIndex\
    \ = Int64(0)\n    largestPrimeIndex = Int64(0)\n    largestPrimeIndex = Int64(0)\n\
    \    largestPrimeIndex = Int64(0)\n    largestPrimeIndex = Int64(0)\n    largestPrimeIndex\
    \ = Int64(0)\n    largestPrimeIndex = Int64(0)\n    largestPrimeIndex = Int64(0)\n\
    \    largestPrimeIndex = Int64(0)\n    largestPrimeIndex = Int64(0)\n    largestPrimeIndex\
    \ = Int64(0)\n    largestPrimeIndex = Int64(0)\n    largestPrimeIndex = Int64(0)\n\
    \    largestPrimeIndex = Int64(0)\n    lar\nusing Test\n\n@testset begin\n\ncandidate\
    \ = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32,\
    \ 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1, 8, 2, 4597,\
    \ 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1, 3, 1, 32,\
    \ 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0,\
    \ 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191])\
    \ == 19)\n\t@test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127,\
    \ 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_z5x2_g2.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_z5x2_g2.jl:1\n\
    in expression starting at /tmp/tmp_z5x2_g2.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpl4v7mbcj.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpl4v7mbcj.jl:1\n\
    in expression starting at /tmp/tmpl4v7mbcj.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    primes = primes(length(lst))\n    largest = primes[end]\n    largest =\
    \ largest.abs()\n    largest = largest.ceil()\n    largest = largest.floor()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = lar\nusing Test\n\n@testset begin\n\
    \ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1,\
    \ 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5292986c.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5292986c.jl:1\n\
    in expression starting at /tmp/tmp5292986c.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    primes = primes(length(lst))\n    largest = 0\n    for p in primes\n \
    \       if lst.last() == p\n            largest = lst.last()\n            break\n\
    \        end\n    end\n    return largest\nend\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([2,3,5,7,5,5,5,2,181,32,4,32,3,2,32,324,4,3])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([2,3,5,7,5,5,5,2,181,32,4,32,3,2,32,324,4,3])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([2,3,5,7,5,5,5,2,181,32,4,32,3,2,32,324,4,3])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([2,3,5,7,5,5,5,2,181,32,4,32,3,2,32,324,4,3])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([2,3,5,7,5,5,5,2,181,32,4,32,3,2,32,324,4,3])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([2,3,5,7,5,5,5,2,181,32,4,32,3,2,32,324,4,3])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([2,3,5,7,5,5,5,2,181,32,4,32,3,2,32,324,4,3])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([2,3,5,7,5,5,5,2,181,32,4,32,3,2,32,324,4,3])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([2,3,5,7,5,5,5,2,181,32,4,32,3,2,32,324,4,3])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([2,3,5,7,5,5,5,2,181,32,4,32,3,2,32,324,4,3])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([2,3,5,7,5,5,5,2,181,32,4,32,3,2,32,324,4,3])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([2,3,5,7,5,5,5,2,181,32,4,32,3,2,32,324,4,3])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([2,3,5,7,5,5,5,2,181,32,4,32,3,2,32,324,\nusing Test\n\n@testset begin\n\
    \ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1,\
    \ 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp25ebqqqr.jl:29\nin expression starting at\
    \ /tmp/tmp25ebqqqr.jl:29\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    primes = primes(length(lst))\n    largest = primes[end]\n    largest =\
    \ largest * largest\n    largest = largest * largest\n    largest = largest *\
    \ largest\n    largest = largest * largest\n    largest = largest * largest\n\
    \    largest = largest * largest\n    largest = largest * largest\n    largest\
    \ = largest * largest\n    largest = largest * largest\n    largest = largest\
    \ * largest\n    largest = largest * largest\n    largest = largest * largest\n\
    \    largest = largest * largest\n    largest = largest * largest\n    largest\
    \ = largest * largest\n    largest = largest * largest\n    largest = largest\
    \ * largest\n    largest = largest * largest\n    largest = largest * largest\n\
    \    largest = largest * largest\n    largest = largest * largest\n    largest\
    \ = largest * largest\n    largest = largest * largest\n    largest = largest\
    \ * largest\n    largest = largest * largest\n    largest = largest * largest\n\
    \    largest = largest * largest\n    largest = largest * largest\n    largest\
    \ = largest * largest\n    largest = largest * largest\n    largest = largest\
    \ * largest\n    largest = largest * largest\n    largest = largest * largest\n\
    \    largest = largest * largest\n    largest = largest * largest\n    largest\
    \ = largest * largest\n    largest = largest * largest\n    largest = largest\
    \ * largest\n    largest = largest * largest\n    largest = largest * largest\n\
    \    largest = largest * largest\n    largest = largest * largest\n    largest\
    \ = largest * largest\n    largest = largest * largest\n    largest = largest\
    \ * largest\n    largest = largest * largest\n    largest = largest * largest\n\
    \    largest = largest * largest\n    largest = largest * largest\n    largest\
    \ = lar\nusing Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    \t@test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\
    \ == 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t\
    @test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t\
    @test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192])\
    \ == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpqrq0ha72.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpqrq0ha72.jl:1\n\
    in expression starting at /tmp/tmpqrq0ha72.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    primes = primes(length(lst))\n    \n    largest = 0\n    largestPrime\
    \ = 0\n    \n    for p in primes\n        if lst .contains p\n            largestPrime\
    \ = p\n            largest = lst .index(p)\n        end\n    end\n    \n    sum\
    \ = 0\n    for p in primes\n        if lst .contains p\n            sum += lst\
    \ .index(p)\n        end\n    end\n    \n    return sum + largestPrime\nend\n\
    </cell>\n<code language=julia-1.5>\nskjkasdkd([3, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\n</cell>\n\
    <code language=julia-1.5>\nskjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163,\
    \ 23, 2323, 32, 30, 1, 9, 3])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([0, 81, 12, 3, 1, 21])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0,\
    \ 8, 1, 2, 1, 7])\n</cell>\n<text>\nProblem 3\nWrite a function that takes a vector\
    \ of integers and returns the number of prime numbers less than or equal to the\
    \ length of the vector.\nusing Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\
    \t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1,\
    \ 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12,\
    \ 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191])\
    \ == 19)\n\t@test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127,\
    \ 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: space before \".\" not allowed in \"lst .\" at\
    \ /tmp/tmp27ubpuxr.jl:26\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp27ubpuxr.jl:26\n\
    in expression starting at /tmp/tmp27ubpuxr.jl:26\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    primes = primes(length(lst))\n    largest = primes[end]\n    sum = 0\n\
    \    for x in lst\n        if x % largest == 0\n            sum += largest\n \
    \           largest = primes[end]\n        else\n            largest = primes[end]\n\
    \        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.3>\n\
    skjkasdkd([2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97])\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that returns the number of prime numbers less than a given number. \nThe function\
    \ should take one argument, an integer $n$, and return an integer. \nThe function\
    \ should return $n$ if $n$ is prime.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32,\
    \ 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1, 8, 2, 4597,\
    \ 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1, 3, 1, 32,\
    \ 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0,\
    \ 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191])\
    \ == 19)\n\t@test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127,\
    \ 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1w_c7z1n.jl:32\nin expression starting at\
    \ /tmp/tmp1w_c7z1n.jl:32\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    primes = primes(length(lst))\n    largest = primes[end]\n    sum = 0\n\
    \    for elt in lst\n        if elt > largest\n            largest = elt\n   \
    \     end\n    end\n    for elt in lst\n        if elt == largest\n          \
    \  sum += elt\n        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324,\
    \ 4, 3])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([1, 0, 1, 8, 2, 4597,\
    \ 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3])\n\
    </cell>\n<code language=julia-1.5>\nskjkasdkd([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0, 81, 12,\
    \ 3, 1, 21])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0, 8, 1, 2, 1, 7])\n\
    </cell>\n<text>\nProblem 3\nThe sum of the primes below 10 is 2 + 3 + 5 + 7 =\
    \ 17.\nusing Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    \t@test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\
    \ == 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t\
    @test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t\
    @test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192])\
    \ == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxu5ijcud.jl:34\nin expression starting at\
    \ /tmp/tmpxu5ijcud.jl:34\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    largest = Int64(0)\n    largestPrime = Int64(0)\n    largestPrimeIndex\
    \ = Int64(0)\n    largestPrimeValue = Int64(0)\n    largestPrimeValueIndex = Int64(0)\n\
    \    largestPrimeValueSum = Int64(0)\n    largestPrimeValueSumIndex = Int64(0)\n\
    \    largestPrimeValueSumValue = Int64(0)\n    largestPrimeValueSumValueIndex\
    \ = Int64(0)\n    largestPrimeValueSumValueSum = Int64(0)\n    largestPrimeValueSumValueSumIndex\
    \ = Int64(0)\n    largestPrimeValueSumValueSumValue = Int64(0)\n    largestPrimeValueSumValueSumValueIndex\
    \ = Int64(0)\n    largestPrimeValueSumValueSumValueSum = Int64(0)\n    largestPrimeValueSumValueSumValueSumIndex\
    \ = Int64(0)\n    largestPrimeValueSumValueSumValueSumValue = Int64(0)\n    largestPrimeValueSumValueSumValueSumValueIndex\
    \ = Int64(0)\n    largestPrimeValueSumValueSumValueSumValueSum = Int64(0)\n  \
    \  largestPrimeValueSumValueSumValueSumValueSumIndex = Int64(0)\n    largestPrimeValueSumValueSumValueSumValueSumValue\
    \ = Int64(0)\n    largestPrimeValueSumValueSumValueSumValueSumValueIndex = Int64(0)\n\
    \    largestPrimeValueSumValueSumValueSumValueSumValueSum = Int64(0)\n    largestPrimeValueSumValueSumValueSumValueSumValueSumIndex\
    \ = Int64(0)\n    largestPrimeValueSumValueSumValueSumValueSumValueSumValue =\
    \ Int64(0)\n    largestPrimeValueSumValueSumValueSumValueSumValueSumValueIndex\
    \ = Int64(0)\n    largestPrimeValueSumValueSumValueSumValueSumValueSumValueSum\
    \ = Int64(0)\n    largestPrimeValueSumValueSumValueSumValueSumValueSumValueSumIndex\
    \ = Int64(0)\n    largestPrimeValueSumValueSumValueSumValueSumValueSumValueSumValue\
    \ = Int64(0)\n    largestPrimeValueSumValueSumValueSumValueSumValueSumValueSumIndex\
    \ = Int64(0)\n    largestPrimeValueSumValueSumValueSumValueSumValueSumValueSumValueSum\
    \ = Int64(0)\n    largestPrimeValueSumValueSumValueSumValueSumValueSumValueSumValueSumIndex\
    \ = Int64(0)\n\nusing Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    \t@test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\
    \ == 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t\
    @test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t\
    @test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192])\
    \ == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp0o9prem4.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp0o9prem4.jl:1\n\
    in expression starting at /tmp/tmp0o9prem4.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    primes = primes(length(lst))\n    \n    largest = 0\n    for p in\
    \ primes\n        if lst.contains(p)\n            largest = largest+p\n      \
    \  end\n    end\n    \n    return largest\nend\n</cell>\n<code language=julia-1.5>\n\
    @time skjkasdkd(rand(1:10000));\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that returns the sum of all the digits in a given number.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4,\
    \ 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpb5zem0zc.jl:31\nin expression starting at\
    \ /tmp/tmpb5zem0zc.jl:31\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    primes = Primes(lst)\n    \n    largest = primes[end]\n    \n  \
    \  sum = 0\n    \n    for i in primes\n        if i > largest\n            largest\
    \ = i\n        end\n    end\n    \n    for i in primes\n        if i == largest\n\
    \            sum += i\n        end\n    end\n    \n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nskjkasdkd([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181,\
    \ 32, 4, 32, 3, 2, 32, 324, 4, 3])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3])\n\
    </cell>\n<code language=julia-1.5>\nskjkasdkd([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0, 81, 12,\
    \ 3, 1, 21])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0, 8, 1, 2, 1, 7])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a vector of integers\
    \ and returns the sum of the squares of the integers in the vector.\nusing Test\n\
    \n@testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3,\
    \ 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7mued34q.jl:40\nin expression starting at\
    \ /tmp/tmp7mued34q.jl:40\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    primes = primes(length(lst))\n    largest = primes[end]\n    largest =\
    \ largest * 10\n    largest = largest.digits\n    largest = sum(largest)\n   \
    \ return largest\nend\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0, 3, 2,\
    \ 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n</cell>\n\
    <code language=julia-1.5>\nskjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6])\n</cell>\n<code\
    \ language=julia-1.5>\nskjkasdkd([0, 81, 12, 3, 1, 21])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([0, 8, 1, 2, 1, 7])\n</cell>\n<text>\nExercise\nWrite a function that\
    \ returns the sum of the digits of an integer.\nusing Test\n\n@testset begin\n\
    \ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1,\
    \ 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptd020u4r.jl:26\nin expression starting at\
    \ /tmp/tmptd020u4r.jl:26\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    primes = primes(length(lst))\n    \n    largest = primes[end]\n\
    \    \n    sum = 0\n    \n    for el in lst\n        if el == largest\n      \
    \      sum += el\n        else\n            largest = el\n        end\n    end\n\
    \    \n    return sum\nend\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n</cell>\n\
    <code language=julia-1.5>\nskjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6])\n</cell>\n<code\
    \ language=julia-1.5>\nskjkasdkd([0, 81, 12, 3, 1, 21])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([0, 8, 1, 2, 1, 7])\n</cell>\n<text>\nExercise 2\nusing Test\n\n@testset\
    \ begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4,\
    \ 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdp82osvq.jl:36\nin expression starting at\
    \ /tmp/tmpdp82osvq.jl:36\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    primes = primes(length(lst))\n    \n    largest = 0\n    \n    for\
    \ p in primes\n        if lst .contains p\n            largest = p\n         \
    \   break\n        end\n    end\n    \n    sum = 0\n    \n    for p in primes\n\
    \        if largest == p\n            sum += lst .index(p)\n        end\n    end\n\
    \    \n    return sum\nend\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n</cell>\n\
    <code language=julia-1.5>\nskjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6])\n</cell>\n<code\
    \ language=julia-1.5>\nskjkasdkd([0, 81, 12, 3, 1, 21])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([0, 8, 1, 2, 1, 7])\n</cell>\n<text>\nProblem 3\nWrite a function that\
    \ takes a vector of integers and returns the sum of the squares of the numbers.\n\
    using Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    \t@test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\
    \ == 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t\
    @test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t\
    @test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192])\
    \ == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: space before \".\" not allowed in \"lst .\" at\
    \ /tmp/tmpu1tkyexo.jl:25\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu1tkyexo.jl:25\n\
    in expression starting at /tmp/tmpu1tkyexo.jl:25\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    primes = primes(length(lst))\n    largest = primes[end]\n    largest =\
    \ largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.abs()\n    largest = lar\nusing Test\n\n@testset begin\n\
    \ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1,\
    \ 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmptkm6wrun.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmptkm6wrun.jl:1\n\
    in expression starting at /tmp/tmptkm6wrun.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    primes = primes(length(lst))\n    largest = primes[end]\n    largest =\
    \ largest.abs()\n    largest = largest.ceil()\n    largest = largest.floor()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = largest.ceil()\n    largest = largest.ceil()\n\
    \    largest = largest.ceil()\n    largest = lar\nusing Test\n\n@testset begin\n\
    \ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1,\
    \ 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5292986c.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5292986c.jl:1\n\
    in expression starting at /tmp/tmp5292986c.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    primes = primes(length(lst))\n    largest = primes[end]\n    largest =\
    \ largest.(lst)\n    largest = largest.(primes)\n    largest = largest.(primes)\n\
    \    largest = largest.(primes)\n    largest = largest.(primes)\n    largest =\
    \ largest.(primes)\n    largest = largest.(primes)\n    largest = largest.(primes)\n\
    \    largest = largest.(primes)\n    largest = largest.(primes)\n    largest =\
    \ largest.(primes)\n    largest = largest.(primes)\n    largest = largest.(primes)\n\
    \    largest = largest.(primes)\n    largest = largest.(primes)\n    largest =\
    \ largest.(primes)\n    largest = largest.(primes)\n    largest = largest.(primes)\n\
    \    largest = largest.(primes)\n    largest = largest.(primes)\n    largest =\
    \ largest.(primes)\n    largest = largest.(primes)\n    largest = largest.(primes)\n\
    \    largest = largest.(primes)\n    largest = largest.(primes)\n    largest =\
    \ largest.(primes)\n    largest = largest.(primes)\n    largest = largest.(primes)\n\
    \    largest = largest.(primes)\n    largest = largest.(primes)\n    largest =\
    \ largest.(primes)\n    largest = largest.(primes)\n    largest = largest.(primes)\n\
    \    largest = largest.(primes)\n    largest = largest.(primes)\n    largest =\
    \ largest.(primes)\n    largest = largest.(primes)\n    largest = largest.(primes)\n\
    \    largest = largest.(primes)\n    largest = largest.(primes)\n    largest =\
    \ largest.(primes)\n    largest = largest.(primes)\n    largest = largest.(primes)\n\
    \    largest = largest.(primes)\n    largest = largest.(primes)\n\nusing Test\n\
    \n@testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3,\
    \ 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpflhuagjf.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpflhuagjf.jl:1\n\
    in expression starting at /tmp/tmpflhuagjf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpl4v7mbcj.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpl4v7mbcj.jl:1\n\
    in expression starting at /tmp/tmpl4v7mbcj.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    primes = primes(length(lst))\n    largest = 0\n    for p in primes\n\
    \        if lst .contains p\n            largest = largest+p\n        end\n  \
    \  end\n    return largest\nend\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n</cell>\n\
    <code language=julia-1.5>\nskjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6])\n</cell>\n<code\
    \ language=julia-1.5>\nskjkasdkd([0, 81, 12, 3, 1, 21])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([0, 8, 1, 2, 1, 7])\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes a vector of integers and returns the sum of the squares of the integers\
    \ in the vector.\nusing Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    \t@test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\
    \ == 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t\
    @test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t\
    @test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192])\
    \ == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: space before \".\" not allowed in \"lst .\" at\
    \ /tmp/tmp8eze2och.jl:23\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp8eze2och.jl:23\n\
    in expression starting at /tmp/tmp8eze2och.jl:23\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    largest = 0\n    largestPrime = 0\n    for i in lst\n        if i%2==0\n\
    \            largestPrime = i\n        else\n            if largestPrime>i\n \
    \               largestPrime = i\n            end\n        end\n    end\n    largestPrime\
    \ = largestPrime+largestPrime\n    largestPrime = largestPrime+largestPrime\n\
    \    largestPrime = largestPrime+largestPrime\n    largestPrime = largestPrime+largestPrime\n\
    \    largestPrime = largestPrime+largestPrime\n    largestPrime = largestPrime+largestPrime\n\
    \    largestPrime = largestPrime+largestPrime\n    largestPrime = largestPrime+largestPrime\n\
    \    largestPrime = largestPrime+largestPrime\n    largestPrime = largestPrime+largestPrime\n\
    \    largestPrime = largestPrime+largestPrime\n    largestPrime = largestPrime+largestPrime\n\
    \    largestPrime = largestPrime+largestPrime\n    largestPrime = largestPrime+largestPrime\n\
    \    largestPrime = largestPrime+largestPrime\n    largestPrime = largestPrime+largestPrime\n\
    \    largestPrime = largestPrime+largestPrime\n    largestPrime = largestPrime+largestPrime\n\
    \    largestPrime = largestPrime+largestPrime\n    largestPrime = largestPrime+largestPrime\n\
    \    largestPrime = largestPrime+largestPrime\n    largestPrime = largestPrime+largestPrime\n\
    \    largestPrime = largestPrime+largestPrime\n    largestPrime = largestPrime+largestPrime\n\
    \    largestPrime = largestPrime+largestPrime\n    largestPrime = largestPrime+largestPrime\n\
    \    largestPrime = largestPrime+largestPrime\n    largestPrime = largestPrime+largestPrime\n\
    \    largestPrime = largestPri\nusing Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\
    \t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1,\
    \ 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12,\
    \ 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191])\
    \ == 19)\n\t@test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127,\
    \ 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpjf97ymf7.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpjf97ymf7.jl:1\n\
    in expression starting at /tmp/tmpjf97ymf7.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    largest = minimum(lst)\n    largestPrime = primes[largest]\n    largestPrimeDigits\
    \ = digits[largestPrime]\n    largestPrimeSum = sum(largestPrimeDigits)\n    return\
    \ largestPrimeSum\nend\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0, 3, 2,\
    \ 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n</cell>\n\
    <code language=julia-1.5>\nskjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6])\n</cell>\n<code\
    \ language=julia-1.5>\nskjkasdkd([0, 81, 12, 3, 1, 21])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([0, 8, 1, 2, 1, 7])\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ finds the largest prime factor of a number.\nusing Test\n\n@testset begin\n\n\
    candidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2,\
    \ 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1, 8,\
    \ 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0z41wc8k.jl:25\nin expression starting at\
    \ /tmp/tmp0z41wc8k.jl:25\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    primes = primes(length(lst))\n    \n    largest = primes[end]\n\
    \    \n    sum = 0\n    \n    for n in lst\n        if n <= largest\n        \
    \    sum += n\n        end\n    end\n    \n    return sum\nend\n</cell>\n<code\
    \ language=julia-1.3>\nskjkasdkd([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32,\
    \ 4, 32, 3, 2, 32, 324, 4, 3])\n</cell>\n<code language=julia-1.3>\nskjkasdkd([1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\n</cell>\n<code language=julia-1.3>\n\
    skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3])\n\
    </cell>\n<code language=julia-1.3>\nskjkasdkd([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6])\n</cell>\n<code language=julia-1.3>\nskjkasdkd([0, 81, 12,\
    \ 3, 1, 21])\n</cell>\n<code language=julia-1.3>\nskjkasdkd([0, 8, 1, 2, 1, 7])\n\
    </cell>\n<text>\nExercise\nWrite a function that returns the sum of the digits\
    \ of an integer.\nusing Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    \t@test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\
    \ == 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t\
    @test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t\
    @test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192])\
    \ == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzo0mdhqf.jl:34\nin expression starting at\
    \ /tmp/tmpzo0mdhqf.jl:34\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    primes = primes(length(lst))\n    \n    largest = primes[end]\n\
    \    \n    largest = largest * 10 + sum(lst[end-1:end])\n    \n    return largest\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    \t@test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\
    \ == 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t\
    @test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t\
    @test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192])\
    \ == 10)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,
    0 broken.

    in expression starting at /tmp/tmp88ovu930.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp88ovu930.jl:33\n  Test threw exception\n\
    \  Expression: candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32,\
    \ 3, 2, 32, 324, 4, 3]) == 10\n  UndefVarError: primes not defined\n  Stacktrace:\n\
    \   [1] skjkasdkd(lst::Vector{Int64})\n     @ Main /tmp/tmp88ovu930.jl:20\n  \
    \ [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp88ovu930.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp88ovu930.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp88ovu930.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25\n\
    \  UndefVarError: primes not defined\n  Stacktrace:\n   [1] skjkasdkd(lst::Vector{Int64})\n\
    \     @ Main /tmp/tmp88ovu930.jl:20\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp88ovu930.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp88ovu930.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp88ovu930.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3])\
    \ == 13\n  UndefVarError: primes not defined\n  Stacktrace:\n   [1] skjkasdkd(lst::Vector{Int64})\n\
    \     @ Main /tmp/tmp88ovu930.jl:20\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp88ovu930.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp88ovu930.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp88ovu930.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([0, 724, 32, 71, 99, 32, 6,"
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    primes = primes(length(lst))\n    largest = primes[end]\n    sum = 0\n\
    \    for elt in lst\n        if elt > largest\n            largest = elt\n   \
    \     end\n    end\n    for elt in lst\n        if elt == largest\n          \
    \  sum += elt\n        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324,\
    \ 4, 3])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([1, 0, 1, 8, 2, 4597,\
    \ 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3])\n\
    </cell>\n<code language=julia-1.5>\nskjkasdkd([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0, 81, 12,\
    \ 3, 1, 21])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0, 8, 1, 2, 1, 7])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the sum of the digits\
    \ of an integer.\nusing Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    \t@test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\
    \ == 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t\
    @test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t\
    @test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192])\
    \ == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1cp31x52.jl:34\nin expression starting at\
    \ /tmp/tmp1cp31x52.jl:34\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    largest = minimum(lst)\n    largestPrime = findPrime(largest)\n    sum\
    \ = 0\n    for i in lst\n        if i==largest\n            continue\n       \
    \ if i==largestPrime\n            sum += largestPrime\n        else\n        \
    \    sum += i\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    @time skjkasdkd(rand(1:10000,1000));\n</cell>\n<code language=julia-1.5>\n@time\
    \ skjkasdkd(rand(1:10000,1000));\n</cell>\n<code language=julia-1.5>\n@time skjkasdkd(rand(1:10000,1000));\n\
    </cell>\n<code language=julia-1.5>\n@time skjkasdkd(rand(1:10000,1000));\n</cell>\n\
    <code language=julia-1.5>\n@time skjkasdkd(rand(1:10000,1000));\n</cell>\n<code\
    \ language=julia-1.5>\n@time skjkasdkd(rand(1:10000,1000));\n</cell>\n<code language=julia-1.5>\n\
    @time skjkasdkd(rand(1:10000,1000));\n</cell>\n<code language=julia-1.5>\n@time\
    \ skjkasdkd(rand(1:10000,1000));\n</cell>\n<code language=julia-1.5>\n@time skjkasdkd(rand(1:10000,1000));\n\
    </cell>\n<code language=julia-1.5>\n@time skjkasdkd(rand(1:10000,1000));\n</cell>\n\
    <code language=julia-1.5>\n@time skjkasdkd(rand(1:10000,1000));\n</cell>\n<code\
    \ language=julia-1.5>\n@time skjkasdkd(rand(1:10000,1000));\n</cell>\n<code language=julia-1.5>\n\
    @time skjkasdkd(rand(1:10000,1000));\n</cell>\n<code language=julia-1.5>\n@time\
    \ skjkasdkd(rand(1:10000,1000));\n</cell>\n<code language=julia-1.5>\n@time skjkasdkd(rand(1:10000,1000));\n\
    </cell>\n<code language=julia-1.5>\n@time skjkasdkd(rand(1:10000,1000));\n</cell>\n\
    <code language=julia-1.5>\n@time skjkasdkd(rand(1:10000,1000));\n</cell>\n<code\
    \ language=julia-1.5>\n@time skjkasdkd(rand(1:10000\nusing Test\n\n@testset begin\n\
    \ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1,\
    \ 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpyr17dyz1.jl:32\nin expression starting at\
    \ /tmp/tmpyr17dyz1.jl:32\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    largest = Int64(0);\n    largestPrime = Int64(0);\n    largestPrimeIndex\
    \ = Int64(0);\n    largestPrimeValue = Int64(0);\n    largestPrimeValueIndex =\
    \ Int64(0);\n    largestPrimeValueSum = Int64(0);\n    largestPrimeValueSumIndex\
    \ = Int64(0);\n    largestPrimeValueSumValue = Int64(0);\n    largestPrimeValueSumValueIndex\
    \ = Int64(0);\n    largestPrimeValueSumValueSum = Int64(0);\n    largestPrimeValueSumValueSumIndex\
    \ = Int64(0);\n    largestPrimeValueSumValueSumValue = Int64(0);\n    largestPrimeValueSumValueSumValueIndex\
    \ = Int64(0);\n    largestPrimeValueSumValueSumValueSum = Int64(0);\n    largestPrimeValueSumValueSumValueSumIndex\
    \ = Int64(0);\n    largestPrimeValueSumValueSumValueSumValue = Int64(0);\n   \
    \ largestPrimeValueSumValueSumValueSumValueIndex = Int64(0);\n    largestPrimeValueSumValueSumValueSumValueSum\
    \ = Int64(0);\n    largestPrimeValueSumValueSumValueSumValueSumIndex = Int64(0);\n\
    \    largestPrimeValueSumValueSumValueSumValueSumValue = Int64(0);\n    largestPrimeValueSumValueSumValueSumValueSumValueIndex\
    \ = Int64(0);\n    largestPrimeValueSumValueSumValueSumValueSumValueSum = Int64(0);\n\
    \    largestPrimeValueSumValueSumValueSumValueSumValueSumIndex = Int64(0);\n \
    \   largestPrimeValueSumValueSumValueSumValueSumValueSumValue = Int64(0);\n  \
    \  largestPrimeValueSumValueSumValueSumValueSumValueSumIndex = Int64(0);\n   \
    \ largestPrimeValueSumValueSumValueSumValueSumValueSumValueSum = Int64(0);\n \
    \   largestPrimeValueSumValueSumValueSumValueSumValueSumValueSumIndex = Int64(0);\n\
    \    largestPrimeValueSumValueSumValueSumValueSumValueSumValueSumValue = Int64(0);\n\
    \    largestPrimeValueSumValueSumValueSumValueSumValueSumValueSumIndex = Int64(0);\n\
    \    largestPrimeValueSumValueSumValueSumValueSumValueSumValueSumValueSum = Int64(0);\n\
    \    largestPrimeValueSumValueSumValueSumValueSumValueSumValueSumValueSumIndex\
    \ = Int64(0);\n    \nusing Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\t\
    @test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1,\
    \ 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12,\
    \ 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191])\
    \ == 19)\n\t@test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127,\
    \ 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpx9l849_7.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpx9l849_7.jl:1\n\
    in expression starting at /tmp/tmpx9l849_7.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    primes = primes(length(lst))\n    largest = primes[end]\n    largest =\
    \ largest.abs()\n    largest = largest.ceiling()\n    largest = largest.floor()\n\
    \    largest = largest.ceiling()\n    largest = largest.ceiling()\n    largest\
    \ = largest.ceiling()\n    largest = largest.ceiling()\n    largest = largest.ceiling()\n\
    \    largest = largest.ceiling()\n    largest = largest.ceiling()\n    largest\
    \ = largest.ceiling()\n    largest = largest.ceiling()\n    largest = largest.ceiling()\n\
    \    largest = largest.ceiling()\n    largest = largest.ceiling()\n    largest\
    \ = largest.ceiling()\n    largest = largest.ceiling()\n    largest = largest.ceiling()\n\
    \    largest = largest.ceiling()\n    largest = largest.ceiling()\n    largest\
    \ = largest.ceiling()\n    largest = largest.ceiling()\n    largest = largest.ceiling()\n\
    \    largest = largest.ceiling()\n    largest = largest.ceiling()\n    largest\
    \ = largest.ceiling()\n    largest = largest.ceiling()\n    largest = largest.ceiling()\n\
    \    largest = largest.ceiling()\n    largest = largest.ceiling()\n    largest\
    \ = largest.ceiling()\n    largest = largest.ceiling()\n    largest = largest.ceiling()\n\
    \    largest = largest.ceiling()\n    largest = largest.ceiling()\n    largest\
    \ = largest.ceiling()\n    largest = largest.ceiling()\n    largest = largest.ceiling()\n\
    \    largest = largest.ceiling()\n    largest = largest.ceiling()\n    largest\
    \ = largest.ceiling()\n    largest = largest.ceiling()\n    largest = largest.ceiling()\n\
    \    largest = largest.ceiling()\n    largest = largest.ceiling()\n    largest\
    \ = largest.ceiling()\n    largest = largest.ceiling()\n    largest = largest.ceiling()\n\
    \    largest = largest.ceiling()\n    largest = lar\nusing Test\n\n@testset begin\n\
    \ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1,\
    \ 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxlkqffqo.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxlkqffqo.jl:1\n\
    in expression starting at /tmp/tmpxlkqffqo.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    largest = 0\n    largestPrime = 0\n    largestSum = 0\n    \n  \
    \  for x in lst\n        if x == largestPrime\n            largestPrime = largestPrime\
    \ + 1\n            largestSum = largestSum + x\n        else\n            if largestPrime\
    \ == 0\n                largestPrime = x\n                largestSum = x\n   \
    \         else\n                if largestPrime > x\n                    largestPrime\
    \ = x\n                    largestSum = x\n                else\n            \
    \        largestPrime = largestPrime + 1\n                    largestSum = largestSum\
    \ + x\n                end\n            end\n        end\n    end\n    \n    return\
    \ largestSum\nend\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0, 3, 2, 1,\
    \ 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n</cell>\n<code\
    \ language=julia-1.5>\nskjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2,\
    \ 4, 2, 5, 1])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([1, 3, 1, 32, 5107,\
    \ 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6])\n</cell>\n<code\
    \ language=julia-1.5>\nskjkasdkd([0, 81, 12, 3, 1, 21])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([0, 8, 1, 2, 1, 7])\n</cell>\n<code language=julia-1.5>\nusing Test\n\
    \n@testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3,\
    \ 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdzfy4r16.jl:46\nin expression starting at\
    \ /tmp/tmpdzfy4r16.jl:46\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    largest = Int64(0)\n    largest = Int64(0)\n    largest = Int64(0)\n\
    \    largest = Int64(0)\n    largest = Int64(0)\n    largest = Int64(0)\n    largest\
    \ = Int64(0)\n    largest = Int64(0)\n    largest = Int64(0)\n    largest = Int64(0)\n\
    \    largest = Int64(0)\n    largest = Int64(0)\n    largest = Int64(0)\n    largest\
    \ = Int64(0)\n    largest = Int64(0)\n    largest = Int64(0)\n    largest = Int64(0)\n\
    \    largest = Int64(0)\n    largest = Int64(0)\n    largest = Int64(0)\n    largest\
    \ = Int64(0)\n    largest = Int64(0)\n    largest = Int64(0)\n    largest = Int64(0)\n\
    \    largest = Int64(0)\n    largest = Int64(0)\n    largest = Int64(0)\n    largest\
    \ = Int64(0)\n    largest = Int64(0)\n    largest = Int64(0)\n    largest = Int64(0)\n\
    \    largest = Int64(0)\n    largest = Int64(0)\n    largest = Int64(0)\n    largest\
    \ = Int64(0)\n    largest = Int64(0)\n    largest = Int64(0)\n    largest = Int64(0)\n\
    \    largest = Int64(0)\n    largest = Int64(0)\n    largest = Int64(0)\n    largest\
    \ = Int64(0)\n    largest = Int64(0)\n    largest = Int64(0)\n    largest = Int64(0)\n\
    \    largest = Int64(0)\n    largest = Int64(0)\n    largest = Int64(0)\n    largest\
    \ = Int64(0)\n    largest = Int64(0)\n    largest = Int64(0)\n    largest = Int64(0)\n\
    \    largest = Int64(0)\n    largest = Int64(0)\n    largest = Int64(0)\n    largest\
    \ = Int64(0)\n    largest = Int64(0)\n    largest = Int64(0)\n    largest = Int64(0)\n\
    \    largest = Int64(0)\n    largest = Int64(0)\n    largest = Int64(0)\n    largest\
    \ = Int64(0)\n    largest = Int64\nusing Test\n\n@testset begin\n\ncandidate =\
    \ skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32,\
    \ 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1, 8, 2, 4597,\
    \ 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1, 3, 1, 32,\
    \ 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0,\
    \ 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191])\
    \ == 19)\n\t@test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127,\
    \ 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpzttt636h.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpzttt636h.jl:1\n\
    in expression starting at /tmp/tmpzttt636h.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    primes = primes(length(lst))\n    largest = primes[end]\n    largest =\
    \ largest.abs()\n    largest = largest.ceiling()\n    largest = largest.abs()\n\
    \    largest = largest.ceiling()\n    largest = largest.abs()\n    largest = largest.ceiling()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.abs()\n\
    \    largest = largest.ceiling()\n    largest = largest.abs()\n    largest = largest.ceiling()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.abs()\n\
    \    largest = largest.ceiling()\n    largest = largest.abs()\n    largest = largest.ceiling()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.abs()\n\
    \    largest = largest.ceiling()\n    largest = largest.abs()\n    largest = largest.ceiling()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.abs()\n\
    \    largest = largest.ceiling()\n    largest = largest.abs()\n    largest = largest.ceiling()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.abs()\n\
    \    largest = largest.ceiling()\n    largest = largest.abs()\n    largest = largest.ceiling()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.abs()\n\
    \    largest = largest.ceiling()\n    largest = largest.abs()\n    largest = largest.ceiling()\n\
    \    largest = largest.abs()\n    largest = largest.ceiling()\n    largest = largest.abs()\n\
    \    largest = largest.ceiling()\n    largest = largest.abs()\n    largest = largest.ceiling()\n\
    \    largest = largest.abs()\n    largest = lar\nusing Test\n\n@testset begin\n\
    \ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1,\
    \ 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp9oyd_4_e.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp9oyd_4_e.jl:1\n\
    in expression starting at /tmp/tmp9oyd_4_e.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    largest = Int64(0)\n    largestPrime = Int64(0)\n    largestPrimeIndex\
    \ = Int64(0)\n    largestPrimeIndex2 = Int64(0)\n    largestPrimeIndex3 = Int64(0)\n\
    \    largestPrimeIndex4 = Int64(0)\n    largestPrimeIndex5 = Int64(0)\n    largestPrimeIndex6\
    \ = Int64(0)\n    largestPrimeIndex7 = Int64(0)\n    largestPrimeIndex8 = Int64(0)\n\
    \    largestPrimeIndex9 = Int64(0)\n    largestPrimeIndex10 = Int64(0)\n    largestPrimeIndex11\
    \ = Int64(0)\n    largestPrimeIndex12 = Int64(0)\n    largestPrimeIndex13 = Int64(0)\n\
    \    largestPrimeIndex14 = Int64(0)\n    largestPrimeIndex15 = Int64(0)\n    largestPrimeIndex16\
    \ = Int64(0)\n    largestPrimeIndex17 = Int64(0)\n    largestPrimeIndex18 = Int64(0)\n\
    \    largestPrimeIndex19 = Int64(0)\n    largestPrimeIndex20 = Int64(0)\n    largestPrimeIndex21\
    \ = Int64(0)\n    largestPrimeIndex22 = Int64(0)\n    largestPrimeIndex23 = Int64(0)\n\
    \    largestPrimeIndex24 = Int64(0)\n    largestPrimeIndex25 = Int64(0)\n    largestPrimeIndex26\
    \ = Int64(0)\n    largestPrimeIndex27 = Int64(0)\n    largestPrimeIndex28 = Int64(0)\n\
    \    largestPrimeIndex29 = Int64(0)\n    largestPrimeIndex30 = Int64(0)\n    largestPrimeIndex31\
    \ = Int64(0)\n    largestPrimeIndex32 = Int64(0)\n    largestPrimeIndex33 = Int64(0)\n\
    \    largestPrimeIndex34 = Int64(0)\n    largestPrimeIndex35 = Int64(0)\n    largestPrimeIndex36\
    \ = Int64(0)\n    largestPrimeIndex37 = Int64(0)\n    largestPrimeIndex38 = Int64(0)\n\
    \    largestPrimeIndex39 = Int64(0)\n    largestPrimeIndex40 = Int64(0)\n    largestPrimeIndex41\
    \ = Int64(0)\n    largestPrimeIndex42 = Int64(0)\n    \nusing Test\n\n@testset\
    \ begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4,\
    \ 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmprdqqprp2.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmprdqqprp2.jl:1\n\
    in expression starting at /tmp/tmprdqqprp2.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    largest = 0\n    largestPrime = 0\n    largestSum = 0\n    largestSumDigit\
    \ = 0\n    largestSumDigit2 = 0\n    largestSumDigit3 = 0\n    largestSumDigit4\
    \ = 0\n    largestSumDigit5 = 0\n    largestSumDigit6 = 0\n    largestSumDigit7\
    \ = 0\n    largestSumDigit8 = 0\n    largestSumDigit9 = 0\n    largestSumDigit10\
    \ = 0\n    largestSumDigit11 = 0\n    largestSumDigit12 = 0\n    largestSumDigit13\
    \ = 0\n    largestSumDigit14 = 0\n    largestSumDigit15 = 0\n    largestSumDigit16\
    \ = 0\n    largestSumDigit17 = 0\n    largestSumDigit18 = 0\n    largestSumDigit19\
    \ = 0\n    largestSumDigit20 = 0\n    largestSumDigit21 = 0\n    largestSumDigit22\
    \ = 0\n    largestSumDigit23 = 0\n    largestSumDigit24 = 0\n    largestSumDigit25\
    \ = 0\n    largestSumDigit26 = 0\n    largestSumDigit27 = 0\n    largestSumDigit28\
    \ = 0\n    largestSumDigit29 = 0\n    largestSumDigit30 = 0\n    largestSumDigit31\
    \ = 0\n    largestSumDigit32 = 0\n    largestSumDigit33 = 0\n    largestSumDigit34\
    \ = 0\n    largestSumDigit35 = 0\n    largestSumDigit36 = 0\n    largestSumDigit37\
    \ = 0\n    largestSumDigit38 = 0\n    largestSumDigit39 = 0\n    largestSumDigit40\
    \ = 0\n    largestSumDigit41 = 0\n    largestSumDigit42 = 0\n    largestSumDigit43\
    \ = 0\n    largestSumDigit44 = 0\n    largestSumDigit45 = 0\n    largestSumDigit46\
    \ = 0\n    largestSumDigit47 = 0\n    largestSumDigit48 = 0\n    largestSumDigit49\
    \ = 0\n    largestSumDigit50 = 0\n    largestSumDigit51 = 0\n    largestSumDigit52\
    \ = 0\n    largestSumDigit53 = 0\n    largestSumDigit54 = 0\n    largestSumDigit55\
    \ = 0\n    largestSumDigit56 = 0\n    largestSumDigit57 = 0\n    largestSumDigit58\
    \ = 0\n    largestSumDigit59 = 0\n    largestSumDigit60 = 0\n    largestSumDigit61\
    \ = 0\n    largestSumDigit\nusing Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\
    \t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1,\
    \ 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12,\
    \ 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191])\
    \ == 19)\n\t@test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127,\
    \ 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpcrfirnaw.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpcrfirnaw.jl:1\n\
    in expression starting at /tmp/tmpcrfirnaw.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    primes = primes(length(lst))\n    largest = primes[end]\n    largest =\
    \ largest * largest\n    largest = largest * largest\n    largest = largest *\
    \ largest\n    largest = largest * largest\n    largest = largest * largest\n\
    \    largest = largest * largest\n    largest = largest * largest\n    largest\
    \ = largest * largest\n    largest = largest * largest\n    largest = largest\
    \ * largest\n    largest = largest * largest\n    largest = largest * largest\n\
    \    largest = largest * largest\n    largest = largest * largest\n    largest\
    \ = largest * largest\n    largest = largest * largest\n    largest = largest\
    \ * largest\n    largest = largest * largest\n    largest = largest * largest\n\
    \    largest = largest * largest\n    largest = largest * largest\n    largest\
    \ = largest * largest\n    largest = largest * largest\n    largest = largest\
    \ * largest\n    largest = largest * largest\n    largest = largest * largest\n\
    \    largest = largest * largest\n    largest = largest * largest\n    largest\
    \ = largest * largest\n    largest = largest * largest\n    largest = largest\
    \ * largest\n    largest = largest * largest\n    largest = largest * largest\n\
    \    largest = largest * largest\n    largest = largest * largest\n    largest\
    \ = largest * largest\n    largest = largest * largest\n    largest = largest\
    \ * largest\n    largest = largest * largest\n    largest = largest * largest\n\
    \    largest = largest * largest\n    largest = largest * largest\n    largest\
    \ = largest * largest\n    largest = largest * largest\n    largest = largest\
    \ * largest\n    largest = largest * largest\n    largest = largest * largest\n\
    \    largest = largest * largest\n    largest = largest * largest\n    largest\
    \ = lar\nusing Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    \t@test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\
    \ == 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t\
    @test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t\
    @test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192])\
    \ == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpqrq0ha72.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpqrq0ha72.jl:1\n\
    in expression starting at /tmp/tmpqrq0ha72.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    primes = primes(length(lst))\n    largest = primes[end]\n    largest =\
    \ largest.(lst)\n    largest = largest.max\n    largest = largest.digits\n   \
    \ largest = sum(largest)\n    return largest\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1, 0, 1,\
    \ 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,
    0 broken.

    in expression starting at /tmp/tmppwh36w9i.jl:29

    '
  stdout: "test set: Error During Test at /tmp/tmppwh36w9i.jl:32\n  Test threw exception\n\
    \  Expression: candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32,\
    \ 3, 2, 32, 324, 4, 3]) == 10\n  UndefVarError: primes not defined\n  Stacktrace:\n\
    \   [1] skjkasdkd(lst::Vector{Int64})\n     @ Main /tmp/tmppwh36w9i.jl:19\n  \
    \ [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppwh36w9i.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppwh36w9i.jl:31\ntest set:\
    \ Error During Test at /tmp/tmppwh36w9i.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25\n\
    \  UndefVarError: primes not defined\n  Stacktrace:\n   [1] skjkasdkd(lst::Vector{Int64})\n\
    \     @ Main /tmp/tmppwh36w9i.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppwh36w9i.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppwh36w9i.jl:31\ntest set:\
    \ Error During Test at /tmp/tmppwh36w9i.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3])\
    \ == 13\n  UndefVarError: primes not defined\n  Stacktrace:\n   [1] skjkasdkd(lst::Vector{Int64})\n\
    \     @ Main /tmp/tmppwh36w9i.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppwh36w9i.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppwh36w9i.jl:31\ntest set:\
    \ Error During Test at /tmp/tmppwh36w9i.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([0, 724, 32, 71, 99, 32, 6,"
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    primes = primes(length(lst))\n    \n    largest = 0\n    \n    for\
    \ p in primes\n        if lst .contains p\n            largest = largest+p\n \
    \       end\n    end\n    \n    return largest\nend\n</cell>\n<code language=julia-1.4>\n\
    skjkasdkd([2,3,5,7,11,13,17,19])\n</cell>\n<code language=julia-1.4>\nskjkasdkd([2,3,5,7,11,13,17,19])\n\
    </cell>\n<code language=julia-1.4>\nskjkasdkd([2,3,5,7,11,13,17,19])\n</cell>\n\
    <code language=julia-1.4>\nskjkasdkd([2,3,5,7,11,13,17,19])\n</cell>\n<code language=julia-1.4>\n\
    skjkasdkd([2,3,5,7,11,13,17,19])\n</cell>\n<code language=julia-1.4>\nskjkasdkd([2,3,5,7,11,13,17,19])\n\
    </cell>\n<code language=julia-1.4>\nskjkasdkd([2,3,5,7,11,13,17,19])\n</cell>\n\
    <code language=julia-1.4>\nskjkasdkd([2,3,5,7,11,13,17,19])\n</cell>\n<code language=julia-1.4>\n\
    skjkasdkd([2,3,5,7,11,13,17,19])\n</cell>\n<code language=julia-1.4>\nskjkasdkd([2,3,5,7,11,13,17,19])\n\
    </cell>\n<code language=julia-1.4>\nskjkasdkd([2,3,5,7,11,13,17,19])\n</cell>\n\
    <code language=julia-1.4>\nskjkasdkd([2,3,5,7,11,13,17,19])\n</cell>\n<code language=julia-1.4>\n\
    skjkasdkd([2,3,5,7,11,13,17,19])\n</cell>\n<code language=julia-1.4>\nskjkasdkd([2,3,5,7,11,13,17,19])\n\
    </cell>\n<code language=julia-1.4>\nskjkasdkd([2,3,5,7,11,13,17,19])\n</cell>\n\
    <code language=julia-1.4>\nskjkasdkd([2,3,5,7,11,13,17,19])\n</cell>\n<code language=julia-1.4>\n\
    skjkasdkd([2,3,5,7,11,13,17,19])\n</cell>\n<code language=julia-1.4>\nskjkasdkd([2,\n\
    using Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    \t@test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\
    \ == 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t\
    @test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t\
    @test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192])\
    \ == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: space before \".\" not allowed in \"lst .\" at\
    \ /tmp/tmplsslosqg.jl:25\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmplsslosqg.jl:25\n\
    in expression starting at /tmp/tmplsslosqg.jl:25\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    primes = primes(length(lst))\n    largest = primes[end]\n    largest\
    \ = largest.digits[end]\n    largest = largest.digits[end]\n    largest = largest.digits[end]\n\
    \    largest = largest.digits[end]\n    largest = largest.digits[end]\n    largest\
    \ = largest.digits[end]\n    largest = largest.digits[end]\n    largest = largest.digits[end]\n\
    \    largest = largest.digits[end]\n    largest = largest.digits[end]\n    largest\
    \ = largest.digits[end]\n    largest = largest.digits[end]\n    largest = largest.digits[end]\n\
    \    largest = largest.digits[end]\n    largest = largest.digits[end]\n    largest\
    \ = largest.digits[end]\n    largest = largest.digits[end]\n    largest = largest.digits[end]\n\
    \    largest = largest.digits[end]\n    largest = largest.digits[end]\n    largest\
    \ = largest.digits[end]\n    largest = largest.digits[end]\n    largest = largest.digits[end]\n\
    \    largest = largest.digits[end]\n    largest = largest.digits[end]\n    largest\
    \ = largest.digits[end]\n    largest = largest.digits[end]\n    largest = largest.digits[end]\n\
    \    largest = largest.digits[end]\n    largest = largest.digits[end]\n    largest\
    \ = largest.digits[end]\n    largest = largest.digits[end]\n    largest = largest.digits[end]\n\
    \    largest = largest.digits[end]\n    largest = largest.digits[end]\n    largest\
    \ = largest.digits[end]\n    largest = largest.digits[end]\n    largest = largest.digits[end]\n\
    \    largest = largest.digits[end]\n    largest = largest.digits[end]\n    largest\
    \ = largest.digits[end]\n    largest = largest.digits[end]\n    largest = largest.digits[end]\n\
    \    largest = largest.digits[end]\n    largest = largest.digits[\nusing Test\n\
    \n@testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3,\
    \ 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpeo06iogz.jl:1\nin expression starting at /tmp/tmpeo06iogz.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    largest = minimum(lst)\n    largestPrime = primes[largest]\n   \
    \ sum = 0\n    for el in lst\n        if el == largest\n            sum += largestPrime\n\
    \        else\n            sum += el\n        end\n    end\n    return sum\nend\n\
    </cell>\n<code language=julia-1.5>\nskjkasdkd([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\n</cell>\n\
    <code language=julia-1.5>\nskjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163,\
    \ 23, 2323, 32, 30, 1, 9, 3])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6])\n</cell>\n<code language=julia-1.5>\n\
    skjkasdkd([0, 81, 12, 3, 1, 21])\n</cell>\n<code language=julia-1.5>\nskjkasdkd([0,\
    \ 8, 1, 2, 1, 7])\n</cell>\n<text>\nProblem 4\nWrite a function that takes a vector\
    \ of integers and returns the sum of the squares of the numbers.\nusing Test\n\
    \n@testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0, 3, 2, 1, 3,\
    \ 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\t@test(candidate([1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\n\t@test(candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\t\
    @test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\t\
    @test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t@test(candidate([0, 8, 1, 2, 1,\
    \ 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t@test(candidate([8191, 123456,\
    \ 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192]) == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpx1ebt756.jl:32\nin expression starting at\
    \ /tmp/tmpx1ebt756.jl:32\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You are given a vector of integers.\n    You need to find the largest\
    \ prime value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\nfunction skjkasdkd(lst::Vector{Int64})::Int64\
    \ \n    \n    primes = primes(length(lst))\n    \n    largest = 0\n    largestPrime\
    \ = 0\n    largestSum = 0\n    \n    for prime in primes\n        \n        sum\
    \ = 0\n        \n        for i = 1:length(lst)\n            \n            if lst[i]\
    \ % prime == 0\n                sum += lst[i]\n            end\n            \n\
    \        end\n        \n        if sum > largestSum\n            largestSum =\
    \ sum\n            largestPrime = prime\n            largest = largestSum\n  \
    \      end\n    end\n    \n    return largest\nend\n</cell>\n<code language=julia-1.5>\n\
    @time skjkasdkd(rand(1:100000));\n</cell>\n<text>\nProblem 3\nWrite a function\
    \ that takes a vector of integers and returns the sum of the squares of the numbers.\n\
    using Test\n\n@testset begin\n\ncandidate = skjkasdkd;\n\t@test(candidate([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    \t@test(candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\
    \ == 25)\n\t@test(candidate([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3]) == 13)\n\t@test(candidate([0, 724, 32, 71, 99, 32, 6, 0, 5,\
    \ 91, 83, 0, 5, 6]) == 11)\n\t@test(candidate([0, 81, 12, 3, 1, 21]) == 3)\n\t\
    @test(candidate([0, 8, 1, 2, 1, 7]) == 7)\n\t@test(candidate([8191]) == 19)\n\t\
    @test(candidate([8191, 123456, 127, 7]) == 19)\n\t@test(candidate([127, 97, 8192])\
    \ == 10)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxfjpppz7.jl:47\nin expression starting at\
    \ /tmp/tmpxfjpppz7.jl:47\n"
  stdout: ''

name: HumanEval_88_sort_array
language: jl
prompt: "\"\"\"\n    Given a vector of non-negative integers, return a cojl of the\
  \ given vector after sorting,\n    you will sort the given vector in ascending order\
  \ if the sum( first index value, last index value) is odd,\n    or sort it in descending\
  \ order if the sum( first index value, last index value) is even.\n\n    Note:\n\
  \    * don't change the given vector.\n\n    Examples:\n    >>> sort_array([])\n\
  \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1, 5])\n\
  \    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n    [6, 5, 4,\
  \ 3, 2, 1, 0]\n    \"\"\"\nfunction sort_array(array::Vector{Int64})::Vector{Int64}\
  \ \n"
tests: "using Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate(Vector{Int64}([]))\
  \ == Vector{Int64}([]))\n\t@test(candidate([5]) == [5])\n\t@test(candidate([2, 4,\
  \ 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5])\n\t@test(candidate([2, 4, 3, 0, 1, 5, 6])\
  \ == [6, 5, 4, 3, 2, 1, 0])\n\t@test(candidate([2, 1]) == [1, 2])\n\t@test(candidate([15,\
  \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87])\n\t@test(candidate([21, 14, 23,\
  \ 11]) == [23, 21, 14, 11])\nend\n"
completions: ["    if length(array) == 0 \n        return array \n    \n    sum =\
    \ 0\n    for i in array\n        sum += i\n    end\n    \n    if sum % 2 == 1\
    \ \n        array = reverse(array)\n    end\n    \n    return array\nend\n</cell>\n\
    <code language=julia-1.5>", "    if length(array) == 0 \n        return array\n\
    \    \n    sum = 0\n    for x in array\n        sum += x\n    end\n    \n    if\
    \ sum % 2 == 0\n        array = sort_array(reverse(array))\n    end\n    \n  \
    \  return array\nend\n</cell>\n<code language=julia-1.5>", "    array = sort(array)\n\
    \    if sum(array) % 2 == 1\n        array = reverse(array)\n    end\n    return\
    \ array\nend\n</code>\n<|/ a tags=julia,sorting,arrays |>\n<| c |>\nThis doesn't\
    \ work for me. `sort_array([2, 4, 3, 0, 1, 5, 6])` returns `[6, 5, 4, 3, 2, 1,\
    \ 0]` instead of `[0, 1, 2, 3, 4, 5]`.\n<|/ c |>\n<| c |>\nI tested it on Julia\
    \ 1.5.1 and it works. What version are you using?\n<|/ c |>\n<| c |>\nI'm using\
    \ Julia 1.5.1. I guess it's because I'm on Windows. I'll try it on Linux and see\
    \ if it works.\n<|/ c |>\n<| c |>\nI tested it on Julia 1.5.1 on Linux and it\
    \ works. I guess it's because I'm on Windows. I'll try it on Linux and see if\
    \ it works.\n<|/ c |>\n<| c |>\nI tested it on Julia 1.5.1 on Linux and it works.\
    \ I guess it's because I'm on Windows. I'll try it on Linux and see if it works.\n\
    <|/ c |>\n<| a tags=julia,sorting,arrays |>\nThe answer by is correct, but I thought\
    \ I'd add some explanation as to why it works.\nThe sort function sorts the array\
    \ in place. As such, it does not return a new array. Instead, it modifies the\
    \ original array in place. \nThe sort function also sorts the array in ascending\
    \ order (by default), but you can specify descending order using the reverse function.\
    \ \nThe reverse function reverses the array in place. As such, it does not return\
    \ a new array. Instead, it modifies the original array in place. \nThe reverse\
    \ function also reverses the array in descending order (by default), but you can\
    \ specify ascending order using the reverse function. \nThe reverse function also\
    \ reverses the array in ascending order (by default), but you can specify descending\
    \ order using the reverse function. \nThe reverse function also reverses the array\
    \ in descending order (by default), but you can specify ascending order using\
    \ the reverse function. \nThe reverse function also reverses the array in descending\
    \ order (by default), but you can specify ascending order using the reverse function.\
    \ \nThe reverse function also reverses the array in descending order (by default),\
    \ but you can specify ascending order using the reverse function. \nThe reverse\
    \ function also reverses the array in descending order (by default), but you can\
    \ specify ascending order using the reverse function. \nThe reverse function also\
    \ reverses the array in descending order (by default), but you can specify ascending\
    \ order using the reverse function. \nThe reverse function also ", "    if length(array)\
    \ == 0 \n        return array \n    \n    sum_array = sum(array)\n    if sum_array\
    \ % 2 == 0 \n        sort_array = array\n    else\n        sort_array = reverse(array)\n\
    \    end\n    \n    sort_array = sort_array[1:end-1]\n    \n    return sort_array\n\
    end\n</cell>\n<code language=julia-1.5>", "    if length(array) == 0 \n      \
    \  return array \n    \n    sum = 0\n    for i in array\n        sum += i \n \
    \   end", "    if length(array) == 0 \n        return array\n    \n    sum = 0\n\
    \    for i in array\n        sum += i\n    end\n    \n    if sum % 2 != 0\n  \
    \      array = reverse( array )\n    end\n    \n    return array\nend\n</cell>\n\
    <code language=julia-1.5>", "    if length(array) == 0 \n        return array\
    \ \n    \n    sum = 0\n    for i in array\n        sum += i\n    end\n    \n \
    \   if sum % 2 != 0\n        array = reverse(array)\n    end\n    \n    return\
    \ array\nend\n</cell>\n<code language=julia-1.5>", "    if length(array) == 0\
    \ \n        return array \n    \n    sum = 0\n    for x in array \n        sum\
    \ += x \n    end\n    \n    if sum % 2 != 0 \n        array = reverse(array) \n\
    \    end\n    \n    array = sort(array) \n    \n    return array\nend\n</cell>\n\
    <code language=julia-1.5>", "    if length(array) == 0 \n        return array\n\
    \    \n    sum = 0\n    for i in array\n        sum += i\n    end\n    \n    if\
    \ sum % 2 != 0\n        sort_array(reverse(array))\n    else\n        sort_array(array)\n\
    \    end\nend", "    sum = 0\n    for i in array\n        sum += i\n    end\n\
    \    if sum % 2 == 1\n        sort_array(reverse(array))\n    else\n        sort_array(array)\n\
    \    end\nend\n</code>\n<|/ a tags=sorting,julia,arrays |>\n<| a tags=sorting,julia,arrays\
    \ |>\nI like using sortperm:\n<code>\njulia> sortperm(1:10)\n10-element Array{Int64,1}:\n\
    \ 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n</code>\n<|/ a dscore=3 |>\n<| c |>\nThis\
    \ should be the accepted answer. `sortperm` does exactly what OP wants, without\
    \ having to write any custom code.\n<|/ c |>\n<| a dscore=3 |>\nI like using sortperm:\n\
    <code>\njulia> sortperm(1:10)\n10-element Array{Int64,1}:\n 2\n 3\n 4\n 5\n 6\n\
    \ 7\n 8\n 9\n10\n</code>\n<|/ a tags=sorting,julia,arrays |>\n<| a dscore=3 |>\n\
    I like using sortperm:\n<code>\njulia> sortperm(1:10)\n10-element Array{Int64,1}:\n\
    \ 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n</code>\n<|/ a tags=sorting,julia,arrays\
    \ |>\n<| a tags=sorting,julia,arrays |>\nI like using sortperm:\n<code>\njulia>\
    \ sortperm(1:10)\n10-element Array{Int64,1}:\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n\
    10\n</code>\n<|/ a dscore=3 |>\n<| a dscore=3 |>\nI like using sortperm:\n<code>\n\
    julia> sortperm(1:10)\n10-element Array{Int64,1}:\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n\
    \ 9\n10\n</code>\n<|/ a tags=sorting,julia,arrays |>\n<| a dscore=3 |>\nI like\
    \ using sortperm:\n<code>\njulia> sortperm(1:10)\n10-element Array{Int64,1}:\n\
    \ 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n</code>", "    \n    sum = 0\n    for i in\
    \ array\n        sum += i\n    end\n    if sum % 2 == 1\n        array.sort!\n\
    \    else\n        array.reverse!\n    end\n    return array\nend", "    if length(array)\
    \ == 0 \n        return array\n    \n    sum = 0\n    for x in array\n       \
    \ sum += x\n    end\n    \n    if sum % 2 != 0\n        array = reverse(array)\n\
    \    end\n    \n    array = sort(array)\n    \n    return array\nend\n</cell>\n\
    <code language=julia-1.5>", "    if length(array) == 0 \n        return array\
    \ \n    \n    sum_array = sum(array) \n    if sum_array % 2 == 1 \n        array\
    \ = sort_array(array) \n        array = reverse(array) \n        return array\
    \ \n    \n    sum_array = sum(array) \n    if sum_array % 2 == 0 \n        array\
    \ = sort_array(array) \n        return array \n    \n    array = sort_array(array)\
    \ \n    array = reverse(array) \n    return array \nend\n</code>\n<|/ a |>\n<|\
    \ a dscore=0 |>\n<code>", "    if length(array) == 0 \n        return array \n\
    \    \n    sum_array = sum(array) \n    if sum_array % 2 == 1 \n        array\
    \ = sort_array(array[2:end-1]) \n        array = [array[1], array[1], array[2],\
    \ array[3], array[4], array[5], array[6]] \n    else \n        array = sort_array(array[1:end-1])\
    \ \n        array = [array[1], array[2], array[3], array[4], array[5], array[6],\
    \ array[7]] \n    return array \nend\n</code>\n<|/ a dscore=0 |>\n<| a tags=sorting,arrays,julia\
    \ |>\n<code>", "    if length(array) == 0 \n        return array \n    \n    sum\
    \ = 0\n    for i in array\n        sum += i \n    end\n    \n    if sum % 2 !=\
    \ 0\n        array = reverse(array)\n    end\n    \n    array = sort(array)\n\
    \    \n    return array\nend\n</cell>\n<code language=julia-1.5>", "    if length(array)\
    \ == 0 \n        return array \n    \n    sum = 0\n    for i in array\n      \
    \  sum += i\n    end\n    \n    if sum % 2 == 1\n        array = reverse(array)\n\
    \    end\n    \n    array = sort(array)\n    return array\nend\n</cell>\n<code\
    \ language=julia-1.5>", "    if length(array) == 0 \n        return array \n \
    \   \n    sum_array = sum(array) \n    if sum_array % 2 == 1 \n        array =\
    \ sort_array(array[end-1:end]) \n        array[end] = sum_array - array[end] \n\
    \        return array \n    else \n        array = sort_array(array[end-1:end])\
    \ \n        array[end] = sum_array - array[end] \n        array[end+1] = sum_array\
    \ - array[end+1] \n        return array \n    end\nend\n</code>\n<|/ a dscore=2\
    \ |>\n<| a dscore=1 |>\nThe algorithm is fairly straightforward:", "    if length(array)\
    \ == 0 \n        return array\n    end\n    \n    sum = 0\n    for x in array\n\
    \        sum += x\n    end\n    \n    if sum % 2 != 0\n        array = reverse(array)\n\
    \    end\n    \n    return array\nend\n</cell>\n<code language=julia-1.5>", " \
    \   if length(array) == 0 \n        return array \n    \n    sum = 0\n    for\
    \ i in array\n        sum += i\n    end\n    \n    if sum % 2 != 0\n        array\
    \ = reverse(array)\n    end\n    \n    return array\nend\n</cell>\n<code language=julia-1.5>",
  "    if length(array) == 0 \n        return array \n    \n    sum = 0\n    for i\
    \ in array\n        sum += i\n    end\n    \n    if sum % 2 != 0\n        array\
    \ = reverse(array)\n    end\n    \n    return array\nend\n</cell>\n<code language=julia-1.5>",
  "    array = sort(array)\n    if sum(array) % 2 != 0\n        array = reverse(array)\n\
    \    end\n    return array\nend", "    if length(array) == 0 \n        return\
    \ array\n    end\n    \n    sum_array = sum(array)\n    if sum_array % 2 == 1\n\
    \        array = sort_array(array[end-1:end])\n        array = reverse(array)\n\
    \        return array\n    end\n    \n    array = sort_array(array[end-1:end])\n\
    \    array = reverse(array)\n    return array\nend\n</cell>\n<code language=julia-1.5>",
  "    if length(array) == 0 \n        return array \n    \n    sum_array = sum(array)\
    \ \n    if sum_array % 2 == 1 \n        array = sort_array(array[2:end-1]) \n\
    \        array[1] = array[end] \n        array[end] = array[1] \n        return\
    \ array \n    else \n        array = sort_array(array[1:end-1]) \n        array[1]\
    \ = array[end] \n        array[end] = array[1] \n        return array \nend\n\
    </code>\n<|/ a dscore=1 |>\n<| a |>\n<code>", "    if length(array) == 0 \n  \
    \      return array \n    \n    sum = 0\n    \n    for element in array \n   \
    \     sum += element \n    \n    if sum % 2 == 0 \n        sorted = sort_array(array[1:end-1])\
    \ \n        sorted[end] = array[end] \n        return sorted \n    else \n   \
    \     sorted = sort_array(array[1:end-1]) \n        sorted[end] = array[end] \n\
    \        sorted[end-1] = array[end-1] \n        return sorted \nend\n</cell>\n\
    <code language=julia-1.5>", "    if length(array) == 0 \n        return array\
    \ \n    \n    sum = 0\n    for i in array\n        sum += i\n    end\n    \n \
    \   if sum % 2 != 0 \n        array = reverse( array )\n    end\n    \n    return\
    \ array\nend\n</cell>\n<text>\nProblem 3\nWrite a function that takes a vector\
    \ of non-negative integers and returns the sum of the first index value, last\
    \ index value, and middle index value.", "    if length(array) == 0 \n       \
    \ return array\n    \n    sum = 0\n    for x in array\n        sum += x\n    end",
  "    if length(array) == 0 \n        return array\n    \n    sum = 0\n    for i\
    \ in array\n        sum += i\n    end\n    \n    if sum % 2 != 0\n        array\
    \ = reverse(array)\n    end\n    \n    return array\nend\n</cell>\n<text>\nProblem\
    \ 7\nGiven a vector of non-negative integers, return a vector where each element\
    \ is the sum of the vector elements up to\nand including the index position.",
  "    if length(array) == 0 \n        return array\n    end\n    \n    sum = 0\n\
    \    \n    for i in 1:length(array) \n        sum += array[i]\n    end\n    \n\
    \    if sum % 2 != 0 \n        array = reverse(array)\n    end\n    \n    return\
    \ array\nend\n</cell>\n<text>\nPart B: Sort a vector\nWrite a function that sorts\
    \ a vector in ascending order.", "    if length(array) == 0 \n        return array\n\
    \    \n    sum = 0\n    for i in array\n        sum += i\n    end\n    \n    if\
    \ sum % 2 == 1\n        array = reverse(array)\n    end\n    \n    return array\n\
    end\n</cell>\n<code language=julia-1.5>", "    \n    if length(array) == 0 \n\
    \        return array\n    end\n    \n    sum = 0\n    for i in array\n      \
    \  sum += i\n    end\n    \n    if sum % 2 == 1\n        array = reverse(array)\n\
    \    end\n    \n    return array\nend\n</cell>\n<code language=julia-1.5>", " \
    \   if length(array) == 0 \n        return array \n    \n    sum = 0\n    \n \
    \   for x in array \n        sum += x \n    end\n    \n    if sum % 2 != 0 \n\
    \        array = reverse(array) \n    end\n    \n    return array\nend", "   \
    \ if length(array) == 0 \n        return array\n    end\n    \n    sum_array =\
    \ sum(array)\n    if sum_array % 2 == 1\n        sort_array = reverse(array)\n\
    \    else\n        sort_array = array\n    end\n    \n    return sort_array\n\
    end\n</cell>\n<code language=julia-1.5>", "    if length(array) == 0 \n      \
    \  return array\n    end\n    \n    sum = 0\n    for i in array\n        sum +=\
    \ i\n    end\n    \n    if sum % 2 != 0\n        array = reverse(array)\n    end\n\
    \    \n    return array\nend\n</cell>\n<code language=julia-1.5>", "    if length(array)\
    \ == 0 \n        return array \n    \n    sum = 0\n    \n    for element in array\
    \ \n        sum += element \n    end\n    \n    if sum % 2 != 0 \n        array\
    \ = reverse(array) \n    end\n    \n    array = sort(array) \n    return array\
    \ \nend\n</cell>\n<code language=julia-1.5>", "    if length(array) == 0 \n  \
    \      return array\n    \n    sum = 0\n    for i in array\n        sum += i\n\
    \    end\n    \n    if sum % 2 != 0\n        array = reverse(array)\n    end\n\
    \    \n    return array\nend", "    if length(array) == 0 \n        return array\
    \ \n    \n    sum = 0\n    for i in array\n        sum += i\n    end\n    \n \
    \   if sum % 2 == 1 \n        array = reverse(array)\n    end\n    \n    array\
    \ = sort(array)\n    \n    return array\nend\n</cell>\n<text>\nProblem 4\nWrite\
    \ a function that takes a vector of non-negative integers and returns a vector\
    \ of the same length where each element is the product of all the numbers in the\
    \ original vector. For example, if the input vector is [5, 7, -2, 3], the output\
    \ vector should be [-2, 5, 7, 24].", "    if length(array) == 0 \n        return\
    \ array \n    \n    sum = 0\n    for i in array\n        sum += i\n    end\n \
    \   \n    if sum % 2 != 0\n        sort_array(reverse(array))\n    else\n    \
    \    sort_array(array)\n    end\nend\n</cell>\n<code language=julia-1.5>", " \
    \   if length(array) == 0 \n        return array\n    \n    sum = 0\n    for i\
    \ in array\n        sum += i\n    end\n    \n    if sum % 2 != 0\n        array\
    \ = reverse(array)\n    end\n    \n    return array\nend\n</cell>\n<code language=julia-1.5>",
  "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    if length(array)\
    \ == 0 \n        return array \n    \n    sum = 0\n    for i in array\n      \
    \  sum += i\n    end\n    \n    if sum % 2 == 1 \n        array = reverse(array)\n\
    \    end\n    \n    return array\nend\n</cell>\n<code language=julia-1.5>", " \
    \   if length(array) == 0 \n        return array \n    \n    sum = 0\n    for\
    \ i in array\n        sum += i \n    end\n    \n    if sum % 2 == 1 \n       \
    \ array = reverse( array )\n    end\n    \n    return array\nend\n</cell>\n<text>\n\
    Problem 8\nWrite a function that takes a vector of non-negative integers and returns\
    \ a vector of non-negative integers where the ith element of the returned vector\
    \ is the product of all the numbers in the original vector, except the one at\
    \ position i.", "    if length(array) == 0 \n        return array\n    \n    sum_array\
    \ = sum(array)\n    if sum_array % 2 == 0 \n        sort_array = array\n    else\n\
    \        sort_array = reverse(array)\n    end\n    \n    sort_array = sort_array[1:end-1]\n\
    \    return sort_array\nend\n</cell>\n<code language=julia-1.5>", "    if length(array)\
    \ == 0 \n        return array\n    \n    sum_of_first_and_last = sum(array[1:end-1])\
    \ \n    if sum_of_first_and_last % 2 == 1 \n        array = reverse( array )\n\
    \    end\n    return array\nend", "    if length(array) == 0 \n        return\
    \ array\n    end\n    \n    sum = 0\n    for i in array\n        sum += i\n  \
    \  end\n    \n    if sum % 2 != 0\n        array = reverse(array)\n    end\n \
    \   \n    return array\nend", "    if length(array) == 0 \n        return array\
    \ \n    \n    sum = 0\n    for i in array\n        sum += i\n    end", "    if\
    \ length(array) == 0 \n        return array\n    \n    sum = 0\n    for i in array\n\
    \        sum += i\n    end\n    \n    if sum % 2 != 0\n        array = reverse(array)\n\
    \    end\n    \n    array = sort(array)\n    return array\nend", "    if length(array)\
    \ == 0 \n        return array \n    \n    sum = 0\n    for i in array\n      \
    \  sum += i\n    end\n    \n    if sum % 2 != 0 \n        array = reverse(array)\n\
    \    end\n    \n    return array\nend\n</cell>\n<code language=julia-1.4>", " \
    \   \n    \n    if length(array) == 0 \n        return array\n    end\n    \n\
    \    \n    \n    if sum(array) % 2 == 1\n        array = reverse( array )\n  \
    \  end\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    ", "    array = sort(array)\n    if sum(array)\
    \ % 2 != 0\n        array = reverse(array)\n    end\n    return array\nend\n</code>\n\
    <|/ a dscore=2 |>\n<| c |>\nThis doesn't work for negative numbers. Try `sort_array([-2,\
    \ -1, 0, 1, 2])`.\n<|/ c |>\n<| c |>\nYes, it does. Try it yourself. It sorts\
    \ negative numbers correctly.\n<|/ c |>\n<| c |>\nI see what you mean. My bad.\n\
    <|/ c |>\n<| a dscore=1 |>\n<code>", "    if length(array) == 0 \n        return\
    \ array\n    end\n    \n    sum = 0\n    for i in array\n        sum += i\n  \
    \  end\n    \n    if sum % 2 != 0\n        array = reverse(array)\n    end\n \
    \   \n    return array\nend\n</cell>\n<code language=julia-1.5>", "    if length(array)\
    \ == 0 \n        return array \n    \n    sum = 0\n    for i in array\n      \
    \  sum += i\n    end\n    \n    if sum % 2 != 0\n        sort_array(reverse(array))\n\
    \    end\n    \n    return array\nend\n</cell>\n<code language=julia-1.5>", " \
    \   if length(array) == 0 \n        return array\n    \n    sum_array = sum(array)\n\
    \    if sum_array % 2 != 0 \n        array = reverse(array)\n        sum_array\
    \ = sum(array)\n    end", "    \n    if length(array) == 0 \n        return array\n\
    \    end", "    if length(array) == 0 \n        return array \n    \n    sum =\
    \ 0\n    for i in array\n        sum += i \n    end", "    if length(array) ==\
    \ 0 \n        return array \n    \n    sum = 0\n    for i in array\n        sum\
    \ += i\n    end", "    if length(array) == 0 \n        return array \n    \n \
    \   sum = 0\n    for i in array\n        sum += i \n    end\n    \n    if sum\
    \ % 2 != 0 \n        array = reverse(array) \n    end\n    \n    array = sort(array)\
    \ \n    \n    return array\nend\n</cell>\n<code language=julia-1.5>", "    if\
    \ length(array) == 0 \n        return array\n    \n    sum = 0\n    for i in array\n\
    \        sum += i\n    end\n    \n    if sum % 2 != 0\n        array = reverse(array)\n\
    \    end\n    \n    array = sort(array)\n    \n    return array\nend\n</cell>\n\
    <code language=julia-1.5>", "    array = sort(array)\n    if sum(array) % 2 ==\
    \ 1\n        array = reverse(array)\n    end\n    return array\nend\n</code>\n\
    <|/ a tags=julia,sorting |>\n<| a dscore=0 |>\n<code>", "    if length(array)\
    \ == 0 \n        return array \n    \n    sum = 0\n    for i in array\n      \
    \  sum += i \n    end\n    \n    if sum % 2 == 1 \n        array = reverse(array)\n\
    \    end\n    \n    return array\nend\n</cell>\n<code language=julia-1.5>", " \
    \   if length(array) == 0 \n        return array\n    \n    sum = 0\n    for i\
    \ in array\n        sum += i\n    end\n    \n    if sum % 2 == 1\n        sorted\
    \ = sort_array(reverse(array))\n        return sorted + [array[end]]\n    else\n\
    \        sorted = sort_array(reverse(array))\n        return sorted + [array[1]]\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>", "    if length(array) == 0\
    \ \n        return array \n    \n    sum = 0\n    for i in array\n        sum\
    \ += i\n    end\n    \n    if sum % 2 != 0 \n        array = reverse(array)\n\
    \    end\n    \n    array = sort(array)\n    return array\nend\n</cell>\n<code\
    \ language=julia-1.5>", "    if length(array) == 0 \n        return array \n \
    \   \n    sum = 0\n    \n    for i in array\n        sum += i\n    end\n    \n\
    \    if sum % 2 != 0\n        array = reverse(array)\n    end\n    \n    return\
    \ array\nend\n</cell>\n<text>\nQuestion 4\nWrite a function that returns a vector\
    \ of non-negative integers whose sum is equal to the given integer.", "    \n\
    \    \n    if length(array) == 0 \n        return array\n    end\n    \n    \n\
    \    if sum(array) == 0 \n        return array\n    end\n    \n    \n    if sum(array)\
    \ % 2 == 1 \n        array = reverse( array )\n    end\n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n", "    if length(array) == 0 \n  \
    \      return array \n    \n    sum = 0\n    for i in array\n        sum += i\
    \ \n    end\n    \n    if sum % 2 == 1 \n        array = reverse(array) \n   \
    \ end\n    \n    return array \nend\n</cell>\n<code language=julia-1.3>", "  \
    \  if length(array) == 0 \n        return array \n    \n    sum = 0\n    for i\
    \ in array\n        sum += i\n    end\n    \n    if sum % 2 == 1\n        sort_array(reverse(array))\n\
    \    else\n        sort_array(array)\n    end\nend", "    \n    if length(array)\
    \ == 0 \n        return array\n    end\n    \n    sum_array = sum(array)\n   \
    \ if sum_array % 2 == 0 \n        sort_array = array\n    else\n        sort_array\
    \ = reverse(array)\n    end\n    \n    return sort_array\nend\n</cell>\n<code\
    \ language=julia-1.5>", "    if length(array) == 0 \n        return array \n \
    \   \n    sum = 0\n    for i in array\n        sum += i\n    end\n    \n    if\
    \ sum % 2 != 0\n        push!(array,0)\n        push!(array,length(array))\n \
    \   end\n    \n    sum = 0\n    for i in array\n        sum += i\n    end\n  \
    \  \n    if sum % 2 == 0\n        push!(array,0)\n        push!(array,length(array))\n\
    \    end\n    \n    array = sort(array)\n    \n    return array\nend\n</cell>\n\
    <text>\nProblem 3\nWrite a function that takes in a vector of non-negative integers\
    \ and returns the sum of the first index value, last index value, and sum of the\
    \ second index value if the sum of the first index value, last index value, and\
    \ sum of the second index value is even.", "    if length(array) == 0 \n     \
    \   return array \n    \n    sum_array = sum(array) \n    if sum_array % 2 ==\
    \ 1 \n        array = reverse(array) \n    \n    sum_array = sum(array) \n   \
    \ if sum_array % 2 == 0 \n        array = reverse(array) \n    \n    array = sort(array)\
    \ \n    return array \nend\n</cell>\n<code language=julia-1.5>", "    \n    sum\
    \ = 0\n    for i in array\n        sum += i\n    end\n    if sum % 2 == 1\n  \
    \      sort_array(reverse(array))\n    else\n        sort_array(array)\n    end\n\
    end\n</code>\n<|/ a dscore=0 |>\n<| a tags=sorting,julia,arrays |>\n<code>", " \
    \   array = sort(array)\n    if sum(array) % 2 != 0\n        array = reverse(array)\n\
    \    end\n    return array\nend\n</code>\n<|/ a dscore=1 |>\n<| a tags=sorting,julia\
    \ |>\nThe answer by is great, but I wanted to add some explanation as to why it\
    \ works.\nThe function sort_array is defined as:\n<code>", "    if length(array)\
    \ == 0 \n        return array\n    \n    sum = 0\n    for i in array\n       \
    \ sum += i\n    end\n    \n    if sum % 2 == 1\n        array = reverse(array)\n\
    \    end\n    \n    array = sort(array)\n    \n    return array\nend", "    \n\
    \    if length(array) == 0 \n        return array\n    end\n    \n    sum = 0\n\
    \    for i in 1:length(array)\n        sum += array[i]\n    end\n    \n    if\
    \ sum % 2 != 0\n        sort_array(reverse(array))\n    else\n        sort_array(array)\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>", "    if length(array) == 0\
    \ \n        return array \n    \n    sum_array = sum(array) \n    if sum_array\
    \ % 2 == 1 \n        array = sort_array(array[end-1:end]) \n        array = [array[1],\
    \ array[0]] + array[2:end] \n    else \n        array = sort_array(array[end-1:end])\
    \ \n        array = [array[1], array[0]] + array[1:end-1] \n    return array \n\
    end\n</code>\n<|/ a tags=sorting,arrays,julia |>\n<| c |>\nThis doesn't work for\
    \ me. `sort_array([2, 4, 3, 0, 1, 5, 6])` gives `[6, 5, 4, 3, 2, 1, 0]` instead\
    \ of `[0, 1, 2, 3, 4, 5]`.\n<|/ c |>\n<| c |>\nI tested it on Julia 0.6.2 and\
    \ it works. I guess it depends on the version of Julia you are using.\n<|/ c |>\n\
    <| c |>\nI tested it on Julia 0.6.2 and it works. I guess it depends on the version\
    \ of Julia you are using.\n<|/ c |>\n<| c |>\nI tested it on Julia 0.6.2 and it\
    \ works. I guess it depends on the version of Julia you are using.\n<|/ c |>\n\
    <| c |>\nI tested it on Julia 0.6.2 and it works. I guess it depends on the version\
    \ of Julia you are using.\n<|/ c |>\n<| a dscore=3 |>\nI wrote a package called\
    \ SortArrays.jl that does this for you:\n<code>\njulia> using SortArrays", " \
    \   \n    array = sort(array)\n    if sum(array) % 2 == 1\n        array = reverse(array)\n\
    \    end\n    return array\nend\n</cell>\n<code language=julia-1.5>", "    if\
    \ length(array) == 0 \n        return array\n    end\n    \n    sum_array = sum(array)\n\
    \    \n    if sum_array % 2 == 1 \n        array = reverse(array)\n    end\n \
    \   \n    sum_array = sum(array)\n    \n    if sum_array % 2 == 0 \n        array\
    \ = reverse(array)\n    end\n    \n    return array\nend", "    if length(array)\
    \ == 0 \n        return array \n    \n    sum = 0\n    for i in array\n      \
    \  sum += i\n    end\n    \n    if sum % 2 != 0 \n        array = reverse(array)\n\
    \    end\n    \n    return array\nend\n</cell>\n<code language=julia-1.5>", " \
    \   if length(array) == 0 \n        return array \n    \n    sum_array = sum(array)\
    \ \n    if sum_array % 2 == 0 \n        array = sort_array(array) \n        array\
    \ = reverse(array) \n        return array \n    else \n        array = sort_array(reverse(array))\
    \ \n        return array \nend\n</code>\n<|/ a tags=sorting,arrays,julia |>\n\
    <| a dscore=0 |>\n<code>", "    \n    if length(array) == 0 \n        return array\n\
    \    end\n    \n    sum_array = sum(array)\n    if sum_array % 2 == 0 \n     \
    \   sort_array = array\n    else\n        sort_array = reverse(array)\n    end\n\
    \    \n    return sort_array\nend", "    if length(array) == 0 \n        return\
    \ array\n    \n    sum = 0\n    \n    for x in array\n        sum += x\n    end\n\
    \    \n    if sum % 2 == 1\n        array = reverse(array)\n    end\n    \n  \
    \  return array\nend\n</cell>\n<text>\nPart 2: Implement a Merge Sort Function",
  "    \n    sum = 0\n    for x in array\n        sum += x\n    end\n    if sum %\
    \ 2 == 1\n        array = reverse(array)\n    end\n    return array\nend\n</cell>\n\
    <code language=julia-1.5>", "    if length(array) == 0 \n        return array\
    \ \n    \n    sum = 0\n    for i in array\n        sum += i\n    end", "    sum\
    \ = 0\n    for x in array\n        sum += x\n    end\n    if sum % 2 != 0\n  \
    \      array = reverse(array)\n    end\n    return array\nend", "    if length(array)\
    \ == 0 \n        return array\n    end\n    \n    sum = 0\n    for x in array\n\
    \        sum += x\n    end\n    \n    if sum % 2 == 1\n        array = reverse(array)\n\
    \    end\n    \n    array = sort(array)\n    \n    return array\nend", "    if\
    \ length(array) == 0 \n        return array\n    \n    sum = 0\n    for i in array\n\
    \        sum += i\n    end\n    \n    if sum % 2 == 1\n        array = reverse(\
    \ array )\n    end\n    \n    return array\nend", "    if length(array) == 0 \n\
    \        return array \n    \n    sum = 0\n    for i in array\n        sum +=\
    \ i\n    end\n    \n    if sum % 2 == 1\n        array = reverse(array)\n    end\n\
    \    \n    return array\nend\n</cell>\n<code language=julia-1.5>", "    if length(array)\
    \ == 0 \n        return array \n    \n    sum = 0\n    for i in array\n      \
    \  sum += i\n    end\n    \n    if sum % 2 == 0 \n        array = reverse(array)\n\
    \    end\n    \n    return array\nend\n</cell>\n<code language=julia-1.5>", " \
    \   if length(array) == 0 \n        return array\n    end\n    \n    sum = 0\n\
    \    for i in array\n        sum += i\n    end\n    \n    if sum % 2 != 0\n  \
    \      array = reverse(array)\n    end\n    \n    return array\nend\n</cell>\n\
    <text>\nExercise 9\nWrite a function that takes in a vector of non-negative integers\
    \ and returns the sum of the first index value and the last index value in a sorted\
    \ vector.", "    if length(array) == 0 \n        return array\n    \n    sum =\
    \ 0\n    for i in array\n        sum += i\n    end\n    \n    if sum % 2 != 0\n\
    \        array = reverse(array)\n    end\n    \n    return array\nend\n</cell>\n\
    <code language=julia-1.5>", "    if length(array) == 0 \n        return array\n\
    \    \n    sum = 0\n    for i in array\n        sum += i\n    end\n    \n    if\
    \ sum % 2 == 1\n        sorted = sort_array(reverse(array))\n        return reverse(sorted)\n\
    \    else\n        return array\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that takes a vector of non-negative integers and returns a vector\
    \ of non-negative integers sorted from smallest to largest.", "    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n", "    if length(array) == 0 \n  \
    \      return array \n    \n    sum = 0\n    for i in array\n        sum += i\n\
    \    end", "    if length(array) == 0 \n        return array \n    \n    sum_array\
    \ = sum(array) \n    if sum_array % 2 != 0 \n        array = reverse(array) \n\
    \    \n    array = sort(array) \n    \n    if sum_array % 2 == 0 \n        array\
    \ = reverse(array) \n    \n    return array \nend\n</cell>\n<code language=julia-1.5>",
  "    sum = 0\n    for x in array\n        sum += x\n    end\n    if sum % 2 == 1\n\
    \        sort_array(reverse(array))\n    else\n        sort_array(array)\n   \
    \ end\nend", "    if length(array) == 0 \n        return array \n    \n    sum\
    \ = 0\n    for x in array \n        sum += x \n    end", "    if length(array)\
    \ == 0 \n        return array \n    \n    sum_array = sum(array) \n    \n    if\
    \ sum_array % 2 == 1 \n        array = sort_array(array) \n        array = reverse(array)\
    \ \n    else \n        array = sort_array(reverse(array)) \n        array = reverse(array)\
    \ \n    end \n    \n    return array \nend ", "    if length(array) == 0 \n  \
    \      return array\n    \n    sum = 0\n    for i in array\n        sum += i\n\
    \    end\n    \n    if sum % 2 == 0\n        sorted = sort_array(array[1:end-1])\
    \ .+ [array[end]] \n    else\n        sorted = sort_array(array[1:end-1]) .- [array[end]]\
    \ \n    end\n    return sorted\nend\n</cell>\n<code language=julia-1.5>", "  \
    \  if length(array) == 0 \n        return array \n    \n    sum = 0\n    for i\
    \ in array\n        sum += i\n    end", "    \n    sorted = sort(array)\n    if\
    \ sum(sorted[1..end]) % 2 != 0\n        sorted[end] = sorted[end] - 1\n    end\n\
    \    return sorted\nend\n</cell>\n<code language=julia-1.5>", "    if length(array)\
    \ == 0 \n        return array \n    \n    sum = 0\n    for i in array\n      \
    \  sum += i\n    end\n    \n    if sum % 2 == 0 \n        sorted = sort_array(array[1:end-1])\
    \ \n        push!(sorted, array[end]) \n        return sorted \n    else \n  \
    \      sorted = sort_array(array[2:end]) \n        push!(sorted, array[1]) \n\
    \        return sorted \n    end\nend\n</code>\n<|/ a dscore=0 |>\n<| a tags=sorting,arrays,julia\
    \ |>\n<code>", "    if length(array) == 0 \n        return array \n    \n    sum\
    \ = 0\n    for i in array\n        sum += i\n    end\n    \n    if sum % 2 !=\
    \ 0 \n        array = reverse(array)\n    end\n    \n    array = sort(array)\n\
    \    return array\nend\n</cell>\n<code language=julia-1.5>", "    if length(array)\
    \ == 0 \n        return array \n    \n    sum = 0\n    for i in array\n      \
    \  sum += i\n    end\n    \n    if sum % 2 != 0\n        array = reverse(array)\n\
    \    end\n    \n    array = sort(array)\n    \n    return array\nend\n</cell>\n\
    <code language=julia-1.5>", "    if length(array) == 0 \n        return array\
    \ \n    \n    sum = 0\n    for i in array\n        sum += i\n    end\n    \n \
    \   if sum % 2 == 1 \n        array = reverse(array)\n    end\n    \n    return\
    \ array\nend\n</cell>\n<code language=julia-1.5>", "    if length(array) == 0\
    \ \n        return array \n    \n    sum_array = sum(array) \n    if sum_array\
    \ % 2 != 0 \n        array = sort_array(array) \n        array = reverse(array)\
    \ \n        return array \n    \n    sum_array = sum(array) \n    if sum_array\
    \ % 2 == 0 \n        array = sort_array(array) \n        array = reverse(array)\
    \ \n        return array \n    \n    sum_array = sum(array) \n    \n    array\
    \ = sort_array(array) \n    array = reverse(array) \n    \n    array = array[2:end-1]\
    \ \n    \n    return array \nend\n</cell>\n<code language=julia-1.4>", "    if\
    \ length(array) == 0 \n        return array \n    \n    sum = 0\n    for i in\
    \ array\n        sum += i \n    end\n    \n    if sum % 2 == 0 \n        array\
    \ = reverse(array) \n    end\n    \n    array = sort(array) \n    \n    return\
    \ array\nend\n</cell>\n<code language=julia-1.5>", "    if length(array) == 0\
    \ \n        return array \n    \n    sum = 0\n    for i in array\n        sum\
    \ += i\n    end\n    \n    if sum % 2 == 1\n        array = reverse(array)\n \
    \   end\n    \n    array = sort(array)\n    \n    return array\nend", "    if\
    \ length(array) == 0 \n        return array \n    \n    sum = 0\n    for i in\
    \ array\n        sum += i \n    end\n    \n    if sum % 2 == 0 \n        sorted\
    \ = sort_array(array[1:end-1]) \n        sorted[end] = array[end] \n        return\
    \ sorted \n    else \n        sorted = sort_array(array[2:end]) \n        sorted[1]\
    \ = array[end] \n        return sorted \n    end\nend\n</cell>\n<code language=julia-1.5>",
  "    if length(array) == 0 \n        return array\n    \n    sum = 0\n    for i\
    \ in array\n        sum += i\n    end\n    \n    if sum % 2 != 0\n        array\
    \ = reverse(array)\n    end\n    \n    return array\nend\n</cell>\n<code language=julia-1.5>",
  "    if length(array) == 0 \n        return array\n    \n    sum = 0\n    for i\
    \ in array\n        sum += i\n    end\n    \n    if sum % 2 == 1\n        array\
    \ = reverse(array)\n    end\n    \n    array = sort(array)\n    \n    return array\n\
    end\n</cell>\n<code language=julia-1.5>", "    if length(array) == 0 \n      \
    \  return array\n    \n    sum = 0\n    for i in array\n        sum += i\n   \
    \ end\n    \n    if sum % 2 == 1\n        array = reverse(array)\n    end\n  \
    \  \n    return array\nend\n</cell>\n<code language=julia-1.5>", "    if length(array)\
    \ == 0 \n        return array \n    \n    sum = 0\n    for i in array\n      \
    \  sum += i\n    end\n    \n    if sum % 2 == 0 \n        sort_array(reverse(array))\n\
    \    else\n        sort_array(array)\n    end\nend", "    if length(array) ==\
    \ 0 \n        return array\n    \n    sum_array = sum(array)\n    if sum_array\
    \ % 2 == 1 \n        array = reverse(array)\n    end\n    \n    cojl = coalesce(array)\n\
    \    \n    cojl = sort_array(cojl[1...end-1]) + cojl[end]\n    \n    return cojl\n\
    end\n</cell>\n<code language=julia-1.5>", "    if length(array) == 0 \n      \
    \  return array \n    \n    sum = 0\n    for i in array\n        sum += i\n  \
    \  end\n    \n    if sum % 2 == 0 \n        sort_array(reverse(array))\n    else\
    \ \n        sort_array(array)\n    end\nend", "    if length(array) == 0 \n  \
    \      return array\n    \n    sum = 0\n    for i in array\n        sum += i\n\
    \    end\n    \n    if sum % 2 != 0\n        array = reverse(array)\n    end\n\
    \    \n    return array\nend\n</cell>\n<code language=julia-1.5>", "    if length(array)\
    \ == 0 \n        return array\n    end\n    \n    sum = 0\n    for i in array\n\
    \        sum += i\n    end\n    \n    if sum % 2 == 0 \n        sort_array(reverse(array))\n\
    \    else\n        sort_array(array)\n    end\nend\n</cell>\n<text>\nProblem 3\n\
    Write a function that returns the number of times a given value appears in a given\
    \ vector.", "    if length(array) == 0 \n        return array\n    \n    sum =\
    \ 0\n    for i in array\n        sum += i\n    end\n    \n    if sum % 2 == 0\n\
    \        sorted = sort_array(reverse(array))\n        return reverse(sorted)\n\
    \    else\n        sorted = sort_array(array)\n        return sorted\n    end\n\
    end\n</code>\n<|/ a tags=sorting,arrays,julia |>\n<| a dscore=2 |>\nI wrote a\
    \ package for sorting arrays in Julia. \n<code>\nusing SortedArrays", "    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n", "    if length(array) == 0\
    \ \n        return array \n    \n    sum_array = sum(array) \n    if sum_array\
    \ % 2 == 0 \n        sort_array = array\n    else\n        sort_array = reverse(array)\
    \ \n    end\n    \n    sort_array = sort_array[sort_array .< length(sort_array)]\n\
    \    return sort_array\nend\n</cell>\n<code language=julia-1.5>", "    if length(array)\
    \ == 0 \n        return array \n    \n    sum = 0\n    for i in array\n      \
    \  sum += i\n    end\n    \n    if sum % 2 != 0\n        sort_array(reverse(array))\n\
    \    else\n        sort_array(array)\n    end\nend\n</code>\n<|/ a dscore=0 |>\n\
    <| a dscore=0 |>\n<code>", "    \n    if length(array) == 0 \n        return array\n\
    \    end\n    \n    sum = 0\n    for i in 1:length(array)\n        sum += array[i]\n\
    \    end\n    \n    if sum % 2 != 0\n        array = reverse(array)\n    end\n\
    \    \n    return array\nend\n</cell>\n<text>\nQuestion 4\nWrite a function that\
    \ returns a vector of non-negative integers whose sum is equal to the given integer.",
  "    if length(array) == 0 \n        return array\n    \n    sum = 0\n    for i\
    \ in array\n        sum += i\n    end\n    \n    if sum % 2 != 0\n        array\
    \ = reverse(array)\n    end\n    \n    return array\nend", "    if length(array)\
    \ == 0 \n        return array \n    \n    sum_array = sum(array) \n    if sum_array\
    \ % 2 == 1 \n        array = sort_array(array[2:end-1]) \n        array = append(array,\
    \ array[1]) \n        array = append(array, array[1]) \n    else \n        array\
    \ = sort_array(array[1:end-1]) \n        array = append(array, array[1]) \n  \
    \      array = append(array, array[1]) \n    end \n    return array \nend \n</code>\n\
    <|/ a dscore=1 |>\n<| a tags=sorting,arrays,julia |>\n<code>", "    if length(array)\
    \ == 0 \n        return array\n    end\n    \n    sum = 0\n    for i in 1:length(array)\n\
    \        sum += array[i]\n    end\n    \n    if sum % 2 != 0\n        array =\
    \ reverse(array)\n    end\n    \n    return array\nend", "    if length(array)\
    \ == 0 \n        return array \n    \n    sum_array = sum(array) \n    if sum_array\
    \ % 2 == 1 \n        array = reverse(array) \n    \n    sum_array = sum(array)\
    \ \n    if sum_array % 2 == 0 \n        array = reverse(array) \n    \n    array\
    \ = sort(array) \n    \n    return array \nend\n</cell>\n<code language=julia-1.5>",
  "    if length(array) == 0 \n        return array \n    \n    sum = 0\n    for i\
    \ in array\n        sum += i \n    end\n    \n    if sum % 2 != 0 \n        sort_array(reverse(array))\n\
    \        return array \n    else \n        sort_array(reverse(array))\n      \
    \  return reverse(array) \n    end\nend\n</cell>\n<code language=julia-1.5>",
  "    if length(array) == 0 \n        return array\n    end\n    \n    sum = 0\n\
    \    for x in array\n        sum += x\n    end\n    \n    if sum % 2 == 1\n  \
    \      array = reverse(array)\n    end\n    \n    return array\nend\n</cell>\n\
    <code language=julia-1.5>", "    if length(array) == 0 \n        return array\n\
    \    \n    sum = 0\n    for i in array\n        sum += i\n    end\n    \n    if\
    \ sum % 2 != 0\n        array = reverse( array )\n    end\n    \n    return array\n\
    end", "    if length(array) == 0 \n        return array\n    end\n    \n    sum\
    \ = 0\n    for i in array\n        sum += i\n    end\n    \n    if sum % 2 ==\
    \ 0\n        array = reverse(array)\n    end\n    \n    array = sort(array)\n\
    \    \n    return array\nend\n</cell>\n<code language=julia-1.5>", "    if length(array)\
    \ == 0 \n        return array \n    \n    sum = 0\n    for i in array\n      \
    \  sum += i\n    end\n    \n    if sum % 2 == 1\n        array = reverse(array)\n\
    \    end\n    \n    array = sort(array)\n    \n    return array\nend\n</cell>\n\
    <code language=julia-1.5>", "    if length(array) == 0 \n        return array\n\
    \    \n    sum_array = sum(array)\n    if sum_array % 2 == 0 \n        array =\
    \ sort_array(array[2:end-1]) + sort_array(array[1:end-1])\n    else\n        array\
    \ = sort_array(array[2:end-1]) + sort_array(array[1:end-1]) + sort_array(array[2:end])\n\
    \    end\n    return array\nend\n</cell>\n<code language=julia-1.5>", "    array\
    \ = sort(array)\n    if sum(array) % 2 != 0\n        array = reverse(array)\n\
    \    end\n    return array\nend", "    if length(array) == 0 \n        return\
    \ array\n    \n    sum = 0\n    for i in array\n        sum += i\n    end\n  \
    \  \n    if sum % 2 == 1\n        array = reverse(array)\n    end\n    \n    return\
    \ array\nend\n</cell>\n<text>\nQuestion 3\nWrite a function that takes a vector\
    \ of non-negative integers and returns a vector of non-negative integers where\
    \ the ith element is the product of the ith element of the original vector and\
    \ the ith element of the original vector. Do not use loops.", "    if length(array)\
    \ == 0 \n        return array \n    \n    sum = 0\n    for x in array \n     \
    \   sum += x \n    end", "    if length(array) == 0 \n        return array\n \
    \   \n    sum = 0\n    for i in array\n        sum += i\n    end", "    if length(array)\
    \ == 0 \n        return array \n    \n    sum_array = sum(array) \n    if sum_array\
    \ % 2 != 0 \n        array = sort_array(array[end:-1:1]) \n        return array\
    \ \n    \n    array = sort_array(array[end:-1:1]) \n    return array \nend\n</code>\n\
    <|/ a tags=sorting,julia |>\n<| a dscore=0 |>\nI wrote a package called SortArrays.jl\
    \ which does exactly what you want. \n<code>\njulia> using SortArrays", "    if\
    \ length(array) == 0 \n        return array\n    \n    sum = 0\n    for x in array\n\
    \        sum += x\n    end\n    \n    if sum % 2 != 0\n        array = reverse(array)\n\
    \    end\n    \n    return array\nend\n</cell>\n<code language=julia-1.4>", " \
    \   if length(array) == 0 \n        return array \n    \n    sum = 0\n    for\
    \ i in array\n        sum += i\n    end\n    \n    if sum % 2 != 0\n        array\
    \ = reverse(array)\n    end\n    \n    array = sort(array)\n    return array\n\
    end\n</cell>\n<code language=julia-1.3>", "    \n    if length(array) == 0 \n\
    \        return array\n    end", "    if length(array) == 0 \n        return array\
    \ \n    \n    sum = 0\n    for i in array\n        sum += i\n    end\n    \n \
    \   if sum % 2 != 0 \n        array = reverse(array)\n    end\n    \n    return\
    \ array\nend\n</cell>\n<code language=julia-1.5>", "    if length(array) == 0\
    \ \n        return array \n    \n    sum = 0\n    \n    for x in array \n    \
    \    sum += x \n    \n    if sum % 2 == 1 \n        array = reverse(array) \n\
    \    \n    array = sort(array) \n    \n    return array\nend\n</cell>\n<code language=julia-1.5>",
  "    if length(array) == 0 \n        return array \n    \n    sum = 0\n    for i\
    \ in array\n        sum += i\n    end\n    \n    if sum % 2 != 0\n        sort_array(reverse(array))\n\
    \    end\n    \n    return array\nend", "    \n    array = copy(array)\n    \n\
    \    if length(array) == 0 \n        return array\n    end", "    if length(array)\
    \ == 0 \n        return array\n    \n    sum = 0\n    for element in array \n\
    \        sum += element\n    end\n    \n    if sum % 2 == 0 \n        sorted =\
    \ sort_array(array[1..end-1]) \n        push!(sorted, array[end]) \n        return\
    \ sorted \n    else \n        sorted = sort_array(array[2..end-1]) \n        push!(sorted,\
    \ array[1]) \n        return sorted \n    end\nend\n</code>\n<|/ a dscore=2 |>\n\
    <| a dscore=2 |>\nThis solution uses only built-in functions:\n<code>", "    \n\
    \    sum = 0\n    for i in array\n        sum += i\n    end\n    if sum % 2 ==\
    \ 1\n        array = reverse(array)\n    end\n    return array\nend\n</cell>\n\
    <code language=julia-1.5>", "    if length(array) == 0 \n        return array\
    \ \n    \n    sum = 0\n    \n    for i in array\n        sum += i \n    end\n\
    \    \n    if sum % 2 == 1\n        array = reverse( array )\n    end\n    \n\
    \    return array\nend", "    if length(array) == 0 \n        return array \n\
    \    \n    sum_array = sum(array) \n    if sum_array % 2 == 1 \n        array\
    \ = sort_array(array[2:end-1]) \n        array[1] = array[end] \n        array[end]\
    \ = array[1] \n        return array \n    else \n        array = sort_array(array[1:end-1])\
    \ \n        array[1] = array[end] \n        array[end] = array[1] \n        return\
    \ array \nend\n</code>\n<|/ a tags=sorting,arrays,julia |>\n<| c |>\nThis does\
    \ not provide an answer to the question. To critique or request clarification\
    \ from an author, leave a comment below their post. - [From Review](/review/low-quality-posts/26839423)\n\
    <|/ c |>\n<| c |>\nI believe this does answer the question, since it does exactly\
    \ what the question asks for. How else would you sort a vector of non-negative\
    \ integers in Julia?\n<|/ c |>\n<| c |>\nThis does not provide an answer to the\
    \ question. To critique or request clarification from an author, leave a comment\
    \ below their post. - [From Review](/review/low-quality-posts/26839423)\n<|/ c\
    \ |>\n<| c |>\nI believe this does answer the question, since it does exactly\
    \ what the question asks for. How else would you sort a vector of non-negative\
    \ integers in Julia?\n<|/ c |>\n<| c |>\nThis does not provide an answer to the\
    \ question. To critique or request clarification from an author, leave a comment\
    \ below their post. - [From Review](/review/low-quality-posts/26839423)\n<|/ c\
    \ |>\n<| a tags=sorting,arrays,julia |>\n<code>", "    if length(array) == 0 \n\
    \        return array\n    end\n    \n    sum_array = sum(array)\n    if sum_array\
    \ % 2 == 1\n        array = reverse(array)\n    end\n    \n    sum_array = sum(array)\n\
    \    if sum_array % 2 == 0\n        array = sort(array)\n    end\n    \n    return\
    \ array\nend\n</cell>\n<code language=julia-1.5>", "    if length(array) == 0\
    \ \n        return array \n    \n    sum = 0\n    for i in array\n        sum\
    \ += i \n    end", "    if length(array) == 0 \n        return array \n    \n\
    \    sum_array = sum(array) \n    if sum_array % 2 == 0 \n        sort_array =\
    \ reverse(array) \n    else \n        sort_array = array \n    end \n    \n  \
    \  sort_array = sort_sort_array(sort_array) \n    return sort_array \nend \n</cell>\n\
    <text>\nQuestion 3\nWrite a function that takes a vector of non-negative integers\
    \ and returns a vector of non-negative integers sorted in the descending order.",
  "    \n    if length(array) == 0 \n        return array \n    \n    sum_array =\
    \ sum(array) \n    if sum_array % 2 == 1 \n        array = sort_array(array[2:end])\
    \ + array[2:end] \n    else \n        array = sort_array(array[1:end-1]) + array[1:end-1]\
    \ \n    return array \nend\n</cell>\n<code language=julia-1.5>", "    if length(array)\
    \ == 0 \n        return array \n    \n    sum = 0\n    for i in array\n      \
    \  sum += i\n    end", "    if length(array) == 0 \n        return array \n  \
    \  \n    sum_array = sum(array) \n    if sum_array % 2 == 1 \n        array =\
    \ sort_array(array[end-1:end]) \n        return array + [sum_array] \n    else\
    \ \n        array = sort_array(array[end-1:end]) \n        return array + [sum_array-1]\
    \ \nend\n</cell>\n<code language=julia-1.5>", "    if length(array) == 0 \n  \
    \      return array\n    \n    sum_array = sum(array)\n    if sum_array % 2 ==\
    \ 1 \n        array = sort_array(array[2:end-1]) + array[1:end-1]\n    else\n\
    \        array = sort_array(array[2:end-1]) + array[1:end-1]\n    end\n    return\
    \ array\nend\n</cell>\n<code language=julia-1.4>", "    if length(array) == 0\
    \ \n        return array \n    \n    sum_array = sum(array) \n    if sum_array\
    \ % 2 == 0 \n        sort_array = array\n    else\n        sort_array = reverse(array)\
    \ \n    end\n    \n    sort_array = sort_array[sort_array .!= 0]\n    \n    return\
    \ sort_array \nend\n</cell>\n<code language=julia-1.5>", "    if length(array)\
    \ == 0 \n        return array \n    \n    sum = 0\n    for x in array \n     \
    \   sum += x \n    \n    if sum % 2 == 1 \n        array = sort_array(array) \n\
    \        array = reverse(array) \n    else \n        array = sort_array(reverse(array))\
    \ \n        array = reverse(array) \n    \n    return array \nend\n</cell>\n<code\
    \ language=julia-1.5>", "    if length(array) == 0 \n        return array \n \
    \   \n    sum = 0\n    for i in array\n        sum += i\n    end\n    \n    if\
    \ sum % 2 != 0\n        array = reverse( array )\n    end\n    \n    return array\n\
    end\n</cell>\n<code language=julia-1.5>", "    if length(array) == 0 \n      \
    \  return array \n    \n    sum = 0\n    for i in array\n        sum += i\n  \
    \  end\n    \n    if sum % 2 != 0 \n        array = reverse(array)\n    end\n\
    \    \n    return array\nend\n</cell>\n<code language=julia-1.5>", "    if length(array)\
    \ == 0 \n        return array \n    \n    sum = 0\n    for i in array\n      \
    \  sum += i\n    end\n    \n    if sum % 2 == 1 \n        array = reverse(array)\n\
    \    end\n    \n    array = sort(array)\n    \n    return array\nend", "    \n\
    \    sum = 0\n    for x in array\n        sum += x\n    end\n    if sum % 2 ==\
    \ 1\n        array = reverse(array)\n    end\n    return array\nend", "    if\
    \ length(array) == 0 \n        return array \n    \n    sum = 0\n    for i in\
    \ array\n        sum += i \n    end\n    \n    if sum % 2 == 1 \n        array\
    \ = reverse(array) \n    end\n    \n    return array \nend", "    if length(array)\
    \ == 0 \n        return array\n    \n    sum = 0\n    for i in array\n       \
    \ sum += i\n    end\n    \n    if sum % 2 == 1\n        array = reverse(array)\n\
    \    end\n    \n    return array\nend\n</cell>\n<code language=julia-1.5>", " \
    \   array = sort(array)\n    if sum(array) % 2 != 0\n        array = reverse(array)\n\
    \    end\n    return array\nend", "    array = sort(array)\n    if sum(array)\
    \ % 2 != 0\n        array = reverse(array)\n    end\n    return array\nend", " \
    \   if length(array) == 0 \n        return array \n    \n    sum = 0\n    for\
    \ i in array\n        sum += i\n    end\n    \n    if sum % 2 == 0 \n        sort_array(reverse(array))\n\
    \    else \n        sort_array(array)\n    end\nend\n</cell>\n<code language=julia-1.5>",
  "    if length(array) == 0 \n        return array \n    \n    sum = 0\n    for element\
    \ in array \n        sum += element \n    end\n    \n    if sum % 2 != 0 \n  \
    \      array = reverse(array) \n    end\n    \n    array = sort(array) \n    return\
    \ array\nend\n</cell>\n<code language=julia-1.5>", "    if length(array) == 0\
    \ \n        return array \n    \n    sum_array = sum(array) \n    \n    if sum_array\
    \ % 2 == 1 \n        array = sort_array(array) \n        array = reverse(array)\
    \ \n    else \n        array = sort_array(reverse(array)) \n        array = reverse(array)\
    \ \n    end \n    \n    return array \nend ", "    \n    sum = 0\n    for x in\
    \ array\n        sum += x\n    end\n    if sum % 2 == 1\n        sort(array)\n\
    \    else\n        sort(reverse, array)\n    end\n    return array\nend\n</cell>\n\
    <code language=julia-1.5>", "    if length(array) == 0 \n        return array\
    \ \n    \n    sum = 0\n    for x in array \n        sum += x \n    end\n    \n\
    \    if sum % 2 == 1 \n        array = reverse(array) \n    end\n    \n    array\
    \ = sort(array) \n    \n    return array \nend\n</cell>\n<code language=julia-1.5>",
  "    if length(array) == 0 \n        return array \n    \n    sum = 0\n    for i\
    \ in array\n        sum += i\n    end\n    \n    if sum % 2 != 0\n        array\
    \ = reverse(array)\n    end\n    \n    return array\nend\n</cell>\n<code language=julia-1.5>",
  "    if length(array) == 0 \n        return array\n    end\n    \n    sum = 0\n\
    \    for i in 1:length(array)\n        sum += array[i]\n    end\n    \n    if\
    \ sum % 2 == 1\n        array = reverse(array)\n    end\n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    ", "    \n  \
    \  array = sort(array)\n    if sum(array) % 2 != 0\n        array = reverse(array)\n\
    \    end\n    return array\nend\n</code>\n<|/ a tags=sorting,julia |>\n<| a tags=sorting,julia\
    \ |>\n<code>", "    if length(array) == 0 \n        return array\n    \n    sum\
    \ = 0\n    for i in array\n        sum += i\n    end\n    \n    if sum % 2 ==\
    \ 1\n        array = reverse(array)\n    end\n    \n    array = sort(array)\n\
    \    \n    return array\nend", "    if length(array) == 0 \n        return array\n\
    \    \n    sum = 0\n    for x in array \n        sum += x\n    end\n    \n   \
    \ if sum % 2 == 0 \n        sorted = sort_array(array[1:end-1]) \n        return\
    \ sorted + [array[end]]\n    else \n        sorted = sort_array(array[end-1:end])\
    \ \n        return [array[1]] + sorted\n    end\nend\n</code>\n<|/ a tags=sorting,arrays,julia\
    \ |>\n<| a tags=sorting,arrays,julia |>\n<code>", "    if length(array) == 0 \n\
    \        return array\n    end\n    \n    sum = 0\n    for i in 1:length(array)\
    \ \n        sum += array[i]\n    end\n    \n    if sum % 2 != 0 \n        array\
    \ = reverse(array)\n    end\n    \n    return array\nend\n</cell>\n<text>\nProblem\
    \ 4\nWrite a function that takes a vector of non-negative integers and returns\
    \ a vector of non-negative integers where the ith element of the returned vector\
    \ is the product of the ith element of the given vector and the ith element of\
    \ the given vector.", "    if length(array) == 0 \n        return array \n   \
    \ \n    sum = 0\n    for i in array\n        sum += i \n    end\n    \n    if\
    \ sum % 2 != 0 \n        array = reverse(array) \n    end\n    \n    array = sort(array)\
    \ \n    return array\nend", "    \n    if length(array) == 0 \n        return\
    \ array\n    end", "    if length(array) == 0 \n        return array\n    \n \
    \   sum = 0\n    \n    for x in array \n        sum += x\n    end\n    \n    if\
    \ sum % 2 != 0 \n        array = reverse(array)\n    end\n    \n    return array\n\
    end\n</cell>\n<code language=julia-1.5>", "    \n    if length(array) == 0 \n\
    \        return array\n    \n    sum = 0\n    for i in array\n        sum += i\n\
    \    end\n    \n    if sum % 2 != 0\n        array = reverse(array)\n    end\n\
    \    \n    return array\nend\n</cell>\n<text>\nProblem 3\nWrite a function that\
    \ takes in an array of integers and returns the sum of the numbers in the array.",
  "    if length(array) == 0 \n        return array \n    \n    sum = 0\n    \n  \
    \  for element in array \n        sum += element \n    end\n    \n    if sum %\
    \ 2 != 0 \n        array = reverse(array) \n    end\n    \n    array = sort(array)\
    \ \n    \n    return array\nend\n</cell>\n<code language=julia-1.5>", "    if\
    \ length(array) == 0 \n        return array \n    \n    sum_array = sum(array)\
    \ \n    if sum_array % 2 == 0 \n        sort_array = array\n    else\n       \
    \ sort_array = reverse(array) \n    end\n    \n    sort_array = sort_sort_array(sort_array)\
    \ \n    \n    return sort_array \nend\n</cell>\n<code language=julia-1.5>", " \
    \   array = sort(array)\n    if sum(array) % 2 == 1\n        array = reverse(array)\n\
    \    end\n    return array\nend\n</code>\n<|/ a |>\n<| a tags=sorting,julia |>\n\
    <code>", "    if length(array) == 0 \n        return array \n    \n    sum = 0\n\
    \    for i in array\n        sum += i\n    end", "    if length(array) == 0 \n\
    \        return array \n    \n    sum_array = sum(array) \n    if sum_array %\
    \ 2 == 1 \n        array = sort_array(array[2:end]) + array[2:end-1] \n    else\
    \ \n        array = sort_array(array[1:end-1]) + array[2:end] \n    return array\
    \ \nend\n</cell>\n<code language=julia-1.4>", "    if length(array) == 0 \n  \
    \      return array\n    end\n    \n    sum = 0\n    for i in array\n        sum\
    \ += i\n    end\n    \n    if sum % 2 == 1\n        array = reverse(array)\n \
    \   end\n    \n    return array\nend\n</cell>\n<code language=julia-1.5>", " \
    \   if length(array) == 0 \n        return array \n    \n    sum_array = sum(array)\n\
    \    if sum_array % 2 == 0 \n        sort_array = array\n    else\n        sort_array\
    \ = reverse(array)\n    end\n    \n    sort_array = sort(sort_array)\n    \n \
    \   return sort_array\nend\n</cell>\n<code language=julia-1.5>", "    if length(array)\
    \ == 0 \n        return array \n    \n    sum = 0\n    for i in array\n      \
    \  sum += i\n    end\n    \n    if sum % 2 == 0 \n        sort_array(reverse(array))\n\
    \    else \n        sort_array(array)\n    end\nend\n</code>\n<|/ a tags=sorting,julia\
    \ |>\n<| a dscore=2 |>\n<code>", "    if length(array) == 0 \n        return array\
    \ \n    \n    sum = 0\n    for i in array\n        sum += i \n    end\n    \n\
    \    if sum % 2 == 0 \n        array = reverse(array)\n    end\n    \n    return\
    \ array\nend\n</cell>\n<code language=julia-1.5>", "    if length(array) == 0\
    \ \n        return array\n    \n    sum = 0\n    for i in array\n        sum +=\
    \ i\n    end\n    \n    if sum % 2 == 1\n        array = reverse(array)\n    end\n\
    \    \n    return array\nend", "    if length(array) == 0 \n        return array\
    \ \n    \n    sum = 0\n    for i in array\n        sum += i\n    end\n    \n \
    \   if sum % 2 == 1 \n        array = reverse(array)\n    end\n    \n    array\
    \ = sort(array)\n    \n    return array\nend\n</cell>\n<code language=julia-1.5>",
  "    sum = 0\n    for x in array\n        sum += x\n    end\n    if sum % 2 == 1\n\
    \        array = reverse(array)\n    end\n    return array\nend\n</code>\n<|/\
    \ a tags=julia,sorting |>\n<| a |>\nThe answer by is great, but I wanted to add\
    \ that you can also use sortperm:\n<code>\njulia> sortperm([5,4,3,2,1])\n5-element\
    \ Array{Int64,1}:\n 1\n 2\n 3\n 4\n 5\n</code>\n<|/ a tags=julia,sorting dscore=2\
    \ |>\n<| a tags=julia,sorting |>\n<code>", "    if length(array) == 0 \n     \
    \   return array\n    \n    sum_array = sum(array)\n    if sum_array % 2 == 0\
    \ \n        sort_array = array[2:end]\n    else\n        sort_array = array[1:end-1]\n\
    \    end\n    return sort_array\nend\n</cell>\n<text>\nProblem 3\nWrite a function\
    \ that returns a vector of integers whose elements are the sum of the first n\
    \ natural numbers.", "    if length(array) == 0 \n        return array\n    \n\
    \    sum = 0\n    for x in array\n        sum += x\n    end\n    \n    if sum\
    \ % 2 != 0\n        array = reverse( array )\n    end\n    \n    return array\n\
    end", "    if length(array) == 0 \n        return array\n    \n    sum = 0\n \
    \   for i in array\n        sum += i\n    end\n    \n    if sum % 2 == 1 \n  \
    \      array = reverse(array)\n    end\n    \n    return array\nend\n</cell>\n\
    <code language=julia-1.5>", "    if length(array) == 0 \n        return array\
    \ \n    \n    sum = 0\n    for i in array\n        sum += i\n    end\n    \n \
    \   if sum % 2 != 0\n        array = reverse(array)\n    end\n    \n    return\
    \ array\nend", "    if length(array) == 0 \n        return array \n    \n    sum\
    \ = 0\n    for i in array\n        sum += i\n    end\n    \n    if sum % 2 !=\
    \ 0\n        array = reverse(array)\n    end\n    \n    array = sort(array)\n\
    \    \n    return array\nend\n</cell>\n<code language=julia-1.5>", "    if length(array)\
    \ == 0 \n        return array \n    \n    sum = 0\n    for i in array\n      \
    \  sum += i\n    end\n    \n    if sum % 2 == 0 \n        sort_array(reverse(array))\n\
    \        return array\n    else \n        sort_array(reverse(array))\n       \
    \ return reverse(array)\n    end\nend", "    array = sort(array)\n    if sum(array)\
    \ % 2 != 0\n        array = reverse(array)\n    end\n    return array\nend\n</cell>\n\
    <code language=julia-1.5>", "    if length(array) == 0 \n        return array\
    \ \n    \n    sum = 0\n    for i in array\n        sum += i\n    end", "    if\
    \ length(array) == 0 \n        return array \n    \n    sum = 0\n    for i in\
    \ array\n        sum += i\n    end\n    \n    if sum % 2 != 0\n        array =\
    \ reverse(array)\n    end\n    \n    return array\nend", "    if length(array)\
    \ == 0 \n        return array\n    end\n    \n    sum = 0\n    for i in array\n\
    \        sum += i\n    end\n    \n    if sum % 2 != 0\n        array = reverse(array)\n\
    \    end\n    \n    array = sort(array)\n    \n    return array\nend\n</cell>\n\
    <code language=julia-1.5>", "    if length(array) == 0 \n        return array\
    \ \n    \n    sum = 0\n    for i in array\n        sum += i\n    end\n    \n \
    \   if sum % 2 != 0 \n        array = reverse(array)\n    end\n    \n    array\
    \ = sort(array)\n    \n    return array\nend\n</cell>\n<code language=julia-1.5>"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

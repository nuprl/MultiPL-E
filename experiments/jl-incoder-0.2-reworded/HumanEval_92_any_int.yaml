name: HumanEval_92_any_int
language: jl
prompt: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true if\
  \ one of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
  \    Returns false in any other cases.\n    \n    Examples\n    >>> any_int(5, 2,\
  \ 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\n    >>> any_int(3,\
  \ -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n    false\n  \n\n    \n\
  \    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool \n"
tests: "using Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2,\
  \ 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
  \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
  \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
  \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4, 7)\
  \ == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
completions: ["    if x == y || x == z || y == z\n        true\n    else\n       \
    \ false\n    end\nend", "    if x == y+z\n        true\n    else\n        false\n\
    end\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    Create a function that takes\
    \ 3 numbers.\n    Returns true if one of the numbers is equal to the sum of the\
    \ other two, and all numbers are integers.\n    Returns false in any other cases.\n\
    \    \n    Examples\n    >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3,\
    \ 2, 2)\n    false", "    if x == y || x == z\n        true\n    else\n      \
    \  false\nend\n</cell>\n<text>\nProblem 7\nWrite a function that takes 3 numbers\
    \ and returns true if they are all positive, and false otherwise.", "    if x\
    \ == y || x == z\n        return true\n    else\n        return false\n    end\n\
    end", "    if x == y || x == z || y == z\n        true\n    else\n        false\n\
    \    end\nend\n</cell>\n<text>\nProblem 7\nWrite a function that takes 3 numbers\
    \ and returns true if all numbers are evenly divisible by 3.\nReturns false if\
    \ any number is odd.\nReturns true in all other cases.\n    \nExamples\n>>> all_evenly_divisible(5,\
    \ 2, 7)\ntrue\n    \n>>> all_evenly_divisible(2, 3, 2)\nfalse", "    if x == y\
    \ + z\n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Create a function that takes 3 numbers.\n    Returns true if one of\
    \ the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    \    Returns false in any other cases.\n    \n    Examples\n    >>> any_int(5,\
    \ 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false", "    if x == y\
    \ || x == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<code\
    \ language=julia-1.5>", "    if x == y || x == z\n        true\n    else\n   \
    \     false\n    end\nend", "    if x == y+z\n        return true\n    else\n\
    \        return false\n    end\nend", "    if x == y+z\n        return true\n\
    \    else\n        return false\n    end\nend\n</cell>\n<text>\nProblem 7: any_float\n\
    Write a function that takes 3 numbers.\nReturns true if one of the numbers is\
    \ equal to the sum of the other two, and all numbers are floats.\nReturns false\
    \ in any other cases.\n    \nExamples\n    >>> any_float(5, 2, 7)\n    true\n\
    \    \n    >>> any_float(3, 2, 2)\n    false", "    if x == y || x == z || y ==\
    \ z\n        return true\n    else\n        return false\n    end\nend", "   \
    \ if x == y || x == z\n        return true\n    else\n        return false\n \
    \   end\nend", "    if x == y || x == z || y == z\n        true\n    else\n  \
    \      false\n    end\nend", "    if x == y+z\n    else false\nend\n</cell>\n\
    <text>\nProblem 7\nWrite a function that takes 3 numbers and returns the sum of\
    \ the numbers.\nThe function should return false if the numbers are all integers\
    \ or if any number is a floating point number.\nThe function should return true\
    \ if the numbers are all floating point numbers.\nThe function should return false\
    \ if any number is a negative number.\nThe function should return false if any\
    \ number is a negative or zero number.\nThe function should return false if any\
    \ number is a NaN.\nThe function should return false if any number is a NaN, positive\
    \ or negative or zero.\nThe function should return false if any number is a NaN,\
    \ positive or negative or zero, or if any number is a floating point number.\n\
    The function should return false if any number is a floating point number, negative\
    \ or zero.\nThe function should return false if any number is a floating point\
    \ number, negative or zero, or if any number is a NaN.\nThe function should return\
    \ false if any number is a floating point number, negative or zero, or if any\
    \ number is a NaN, positive or negative or zero.\nThe function should return false\
    \ if any number is a floating point number, negative or zero, or if any number\
    \ is a NaN, positive or negative or zero, or if any number is a floating point\
    \ number, negative or zero.\nThe function should return false if any number is\
    \ a floating point number, negative or zero, or if any number is a NaN, positive\
    \ or negative or zero, or if any number is a floating point number, negative or\
    \ zero, or if any number is a NaN, positive or negative or zero.\nThe function\
    \ should return false if any number is a floating point number, negative or zero,\
    \ or if any number is a NaN, positive or negative or zero, or if any number is\
    \ a floating point number, negative or zero, or if any number is a NaN, positive\
    \ or negative or zero, or if any number is a floating point number, negative or\
    \ zero, or if any number is a NaN, positive or negative or zero.\nThe function\
    \ should return false if any number is a floating point number, negative or zero,\
    \ or if any number is a NaN, positive or negative or zero, or if any number is\
    \ a floating point number, negative or zero, or if any number is a NaN, positive\
    \ or negative or zero, or if any number is a floating point number, negative or\
    \ zero, or if any number is a NaN, positive or negative or zero, or if any number\
    \ is a floating point number, negative or zero.\nThe function should return false\
    \ if any number is a floating point number, negative or zero, or if any number\
    \ is a NaN, positive or negative or zero, or if any number is a floating point\
    \ number, negative or zero, or if any number is a NaN, positive or negative or\
    \ zero, or if any number is a floating point number, negative or zero, or if any\
    \ number is a NaN, positive or negative or zero, or if any number is a floating\
    \ point number, negative or zero, or if any number is a NaN, positive or negative\
    \ or zero.\nThe function should return false if any number ", "    if x == y+z\n\
    \        return true\n    else\n        return false\n    end\nend\n</cell>\n\
    <text>\nProblem 7\nWrite a function that takes 3 numbers and returns true if all\
    \ numbers are divisible by 3, and all numbers are integers.\nReturns false in\
    \ any other case.\n    \n    Examples\n    >>> all_divisible(5, 2, 7)\n    true\n\
    \    \n    >>> all_divisible(3, -2, 1)\n    false\n    \n    >>> all_divisible(3.6,\
    \ -2.2, 2)\n    true\n    \n    \n    \"\"\"", "    if x == y+z\n        true\n\
    \    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>", " \
    \   if x == y || x == z || y == z\n        return true\n    else\n        return\
    \ false\n    end\nend\n</cell>\n<code language=julia-1.5>", "    if x == y ||\
    \ x == z\n        true\n    else\n        false\n    end\nend", "    if x == y\
    \ || x == z || y == z\n        return true\n    else\n        return false\n \
    \   end\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    Create a function\
    \ that takes 3 numbers.\n    Returns true if all numbers are equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> all_int(5, 2, 7)\n    true\n    \n    >>>\
    \ all_int(3, 2, 2)\n    false", "    if x == y || x == z\n        true\n    else\n\
    \        false\n    end\nend\n</cell>\n<text>\nProblem 7\nWrite a function that\
    \ takes an array of numbers and returns the sum of the numbers in the array.",
  "    if x == y || x == z\n        return true\n    else\n        return false\n\
    \    end\nend", "    if x == y || x == z || y == z\n        return true\n    else\n\
    \        return false\n    end\nend\n</cell>\n<text>\nProblem 3\nWrite a function\
    \ that takes 3 numbers and returns true if any of them is equal to the sum of\
    \ the other two, and all numbers are integers.\nReturns false in any other cases.\n\
    \    \n    Examples\n    >>> any_int_or_sum(5, 2, 7)\n    true\n    \n    >>>\
    \ any_int_or_sum(3, 2, 2)\n    false", "    if x == y || x == z || y == z\n  \
    \      return true\n    else\n        return false\n    end\nend", "    if x ==\
    \ y || x == z\n        true\n    else\n        false\n    end\nend", "    if x\
    \ == y || x == z || y == z\n        true\n    else\n        false\n    end\nend",
  "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\n\
    end\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\n\
    any_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n\
    <code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 2\n\
    Write a function that takes 3 numbers and returns true if all numbers are divisible\
    \ by 3.", "    if x == y+z\n    else \n        if x == y\n        else \n    \
    \        if x == z\n            else \n                if x == x+y\n         \
    \       else \n                    if x == x+z\n                    else \n  \
    \                      if x == y+z\n                        else \n          \
    \                  if x == y-z\n                            else \n          \
    \                      if x == y-x\n                                else \n  \
    \                                  if x == y-x\n                             \
    \       else \n                                        if x == y-z\n         \
    \                               else \n                                      \
    \      if x == y-z\n                                            else \n      \
    \                                          if x == y-x\n                     \
    \                           else \n                                          \
    \          if x == y-z\n                                                    else\
    \ \n                                                        if x == y-x\n    \
    \                                                    else \n                 \
    \                                           false\n    else \n        false\n\
    end\n</cell>\n<code language=julia-1.0>", "    if x == y || x == z\n        true\n\
    \    else\n        false\n    end\nend\n</cell>\n<text>\nProblem 7: Any Float64\n\
    Create a function that takes 3 numbers.\nReturns true if any of the numbers is\
    \ equal to the sum of the other two, and all numbers are floats.\nReturns false\
    \ in any other cases.\n    \n    Examples\n    >>> any_float(5, 2, 7)\n    true\n\
    \    \n    >>> any_float(3, 2, 2)\n    false", "    if x == y + z\n    else if\
    \ x == z\n    else if y == z\n    else false\nend\n</cell>\n<code language=julia-1.5>",
  "    if x == y || x == z\n        true\n    else\n        false\n    end\nend",
  "    if x == y || x == z\n        true\n    else\n        false\n    end\nend",
  "    if x == y+z\n        true\n    else\n        false\n    end\nend\n</cell>\n\
    <code language=julia-1.5>", "    if x == y+z\n        true\n    else\n       \
    \ false\n    end\nend", "    if x == y || x == z || y == z\n        true\n   \
    \ else\n        false\n    end\nend", "    if x == y+z\n        return true\n\
    \    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Create a function that takes 3 numbers.\n    Returns true if all numbers\
    \ are equal to the sum of the other two, and all numbers are integers.\n    Returns\
    \ false in any other cases.\n    \n    Examples\n    >>> all_int(5, 2, 7)\n  \
    \  true\n    \n    >>> all_int(3, 2, 2)\n    false", "    if x == y+z\n    else\
    \ false\n    end\nend", "    if x == y || x == z || y == z\n        return true\n\
    \    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>",
  "    if x == y+z\n        return true\n    else\n        return false\n    end\n\
    end", "    if x == y || x == z || y == z \n        true\n    else\n        false\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n\
    <code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\n\
    any_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes 3 numbers and returns\
    \ the sum of the numbers.\nWrite a function that takes 3 numbers and returns the\
    \ product of the numbers.\nWrite a function that takes 3 numbers and returns the\
    \ minimum of the numbers.\nWrite a function that takes 3 numbers and returns the\
    \ maximum of the numbers.\nWrite a function that takes 3 numbers and returns the\
    \ absolute value of the numbers.\nWrite a function that takes 3 numbers and returns\
    \ the reciprocal of the numbers.\nWrite a function that takes 3 numbers and returns\
    \ the square of the numbers.\nWrite a function that takes 3 numbers and returns\
    \ the cube of the numbers.\nWrite a function that takes 3 numbers and returns\
    \ the square root of the numbers.\nWrite a function that takes 3 numbers and returns\
    \ the logarithm of the numbers.\nWrite a function that takes 3 numbers and returns\
    \ the exponential of the numbers.\nWrite a function that takes 3 numbers and returns\
    \ the sine of the numbers.\nWrite a function that takes 3 numbers and returns\
    \ the cosine of the numbers.\nWrite a function that takes 3 numbers and returns\
    \ the tangent of the numbers.\nWrite a function that takes 3 numbers and returns\
    \ the arctangent of the numbers.\nWrite a function that takes 3 numbers and returns\
    \ the hyperbolic sine of the numbers.\nWrite a function that takes 3 numbers and\
    \ returns the hyperbolic cosine of the numbers.\nWrite a function that takes 3\
    \ numbers and returns the hyperbolic tangent of the numbers.\nWrite a function\
    \ that takes 3 numbers and returns the hyperbolic arctangent of the numbers.\n\
    Write a function that takes 3 numbers and returns the hyperbolic hyperbolic sine\
    \ of the numbers.\nWrite a function that takes 3 numbers and returns the hyperbolic\
    \ hyperbolic cosine of the numbers.\nWrite a function that takes 3 numbers and\
    \ returns the hyperbolic hyperbolic tangent of the numbers.\nWrite a function\
    \ that takes 3 numbers and returns the hyperbolic hyperbolic arctangent of the\
    \ numbers.\nWrite a function that takes 3 numbers and returns the hyperbolic hyperbolic\
    \ hyperbolic sine of the numbers.\nWrite a function that takes 3 numbers and returns\
    \ the hyperbolic hyperbolic hyperbolic cosine of the numbers.\nWrite a function\
    \ that takes 3 numbers and returns the hyperbolic hyperbolic hyperbolic tangent\
    \ of the numbers.\nWrite a function that takes 3 numbers and returns the hyperbolic\
    \ hyperbolic hyperbolic ar", "    if x == y || x == z\n        true\n    else\n\
    \        false\n    end\nend", "    if x == y+z\n        true\n    else\n    \
    \    false\n    end\nend", "    if x == y + z\n    else if x == z\n    else if\
    \ y == z\n    else false\n    end\nend\n</cell>\n<code language=julia-1.5>", " \
    \   if x == y || x == z || y == z\n        true\n    else\n        false\n   \
    \ end\nend\n</cell>\n<code language=julia-1.5>", "    if x == y + z\n    else\
    \ false\nend\n</cell>\n<text>\nProblem 3\nWrite a function that takes 3 numbers\
    \ and returns true if at least one of them is greater than the other. Return false\
    \ otherwise.", "    if x == y + z\n    else if x == z\n    else if y == z\n  \
    \  else false\n    end\nend\n</cell>\n<text>\nProblem 4\nWrite a function that\
    \ takes 3 numbers and returns true if any of them is equal to the sum of the other\
    \ two, and all numbers are integers.\nReturns false in any other cases.\n    \n\
    \    Examples\n    >>> any_int_or_sum(5, 2, 7)\n    true\n    \n    >>> any_int_or_sum(3,\
    \ 2, 2)\n    false", "    if x == y+z\n    else false\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes 3 numbers and returns true if any of them\
    \ is equal to the sum of the other two, and all numbers are integers.\nReturn\
    \ false in any other cases.\nTest your function on some examples:", "    if x\
    \ == y || x == z || y == z\n        return true\n    else\n        return false\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    Create a function\
    \ that takes 3 numbers.\n    Returns true if all numbers are equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> all_int(5, 2, 7)\n    true\n    \n    >>>\
    \ all_int(3, 2, 2)\n    true", "    if x == y || x == z || y == z \n        true\
    \ \n    else \n        false \n    end\nend\n</cell>\n<text>\nProblem 7\nWrite\
    \ a function that takes 3 numbers and returns true if at least one of them is\
    \ positive.\nReturn false if all three numbers are negative.\nReturn false if\
    \ all three numbers are zero.\nReturn false if all three numbers are non-positive.\n\
    Return false if all three numbers are non-negative.\nReturn false if any of them\
    \ is NaN.\nReturn false if all three numbers are integers.\nReturn false if any\
    \ of them is non-integers.\nReturn false if any of them is NaN.\nReturn false\
    \ if any of them is non-integers.\nReturn false if any of them is NaN.\nReturn\
    \ false if any of them is non-integers.\nReturn false if any of them is NaN.\n\
    Return false if any of them is non-integers.\nReturn false if any of them is NaN.\n\
    Return false if any of them is non-integers.\nReturn false if any of them is NaN.\n\
    Return false if any of them is non-integers.\nReturn false if any of them is NaN.\n\
    Return false if any of them is non-integers.\nReturn false if any of them is NaN.\n\
    Return false if any of them is non-integers.\nReturn false if any of them is NaN.\n\
    Return false if any of them is non-integers.\nReturn false if any of them is NaN.\n\
    Return false if any of them is non-integers.\nReturn false if any of them is NaN.\n\
    Return false if any of them is non-integers.\nReturn false if any of them is NaN.\n\
    Return false if any of them is non-integers.\nReturn false if any of them is NaN.\n\
    Return false if any of them is non-integers.\nReturn false if any of them is NaN.\n\
    Return false if any of them is non-integers.\nReturn false if any of them is NaN.\n\
    Return false if any of them is non-integers.\nReturn false if any of them is NaN.\n\
    Return false if any of them is non-integers.\nReturn false if any of them is NaN.\n\
    Return false if any of them is non-integers.\nReturn false if any of them is NaN.\n\
    Return false if any of them is non-integers.\nReturn false if any of them is NaN.\n\
    Return false if any of them is non-integers.\nReturn false if any of them is NaN.\n\
    Return false if any ", "    if x == y || x == z || y == z\n        return true\n\
    \    else\n        return false\n    end\nend", "    if x == y+z\n        return\
    \ true\n    else\n        return false\n    end\nend", "    if x == y || x ==\
    \ z || y == z\n        return true\n    else\n        return false\n    end\n\
    end\n</cell>\n<text>\nProblem 7: any_float\nWrite a function that takes 3 numbers.\n\
    Returns true if one of the numbers is equal to the sum of the other two, and all\
    \ numbers are floats.\nReturns false in any other cases.\n    \nExamples\n   \
    \ >>> any_float(5, 2, 7)\n    true\n    \n    >>> any_float(3, 2, 2)\n    false",
  "    if x == y || x == z || y == z\n        return true\n    else\n        return\
    \ false\n    end\nend", "    if x == y+z\n        true\n    else\n        false\n\
    \    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes in 3 numbers\
    \ and returns the sum of the numbers. If the sum is 0, return 0.", "    if x ==\
    \ y || x == z\n        true\n    else\n        false\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Create a function that takes 3 numbers.\n    Returns true if all of\
    \ the numbers are equal to the sum of the other two, and all numbers are integers.\n\
    \    Returns false in any other cases.\n    \n    Examples\n    >>> all_int(5,\
    \ 2, 7)\n    true\n    \n    >>> all_int(3, 2, 2)\n    true", "    if x == y+z\n\
    \        true\n    else\n        false\n    end\nend", "    if x == y || x ==\
    \ z || y == z \n        true\n    else\n        false\n    end\nend\n</cell>\n\
    <text>\nProblem 3\nWrite a function that takes a list of numbers and returns the\
    \ sum of the numbers in the list. \nIf the list is empty, return 0.\nIf the list\
    \ has one number, return that number.\nIf the list has two numbers, return the\
    \ sum of the numbers.\nIf the list has three or more numbers, return the sum of\
    \ the numbers in the middle of the list.\nIf the list has more than three numbers,\
    \ return the sum of the numbers in the middle of the list and the sum of the numbers\
    \ in the middle of the list.", "    if x == y || x == z || y == z\n        return\
    \ true\n    else\n        return false\n    end\nend", "    if x == y || x ==\
    \ z || y == z\n        true\n    else\n        false\n    end\nend", "    if x\
    \ == y+z\n        return true\n    else\n        return false\n    end\nend",
  "    if x == y+z\n        return true\n    else\n        return false\n    end\n\
    end", "    if x == y+z\n        true\n    else\n        false\n    end\nend",
  "    if x == y || x == z || y == z \n        true\n    else\n        false\n   \
    \ end\nend\n</cell>\n<code language=julia-1.5>", "    if x == y+z\n        true\n\
    \    else\n        false\n    end\nend", "    if x == y || x == z || y == z\n\
    \        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>",
  "    if x == y+z\n        return true\n    else\n        return false\nend\n</cell>\n\
    <text>\nProblem 3\nWrite a function that takes 3 numbers and returns true if any\
    \ of them is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\n    \n    Examples\n    >>> any_int_or_sum(5,\
    \ 2, 7)\n    true\n    \n    >>> any_int_or_sum(3, 2, 2)\n    false", "    if\
    \ x == y || x == z || y == z\n        return true\n    else\n        return false\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>", "    if x == y || x == z ||\
    \ y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<code\
    \ language=julia-1.5>", "    if x == y || x == z || y == z\n        true\n   \
    \ else\n        false\n    end\nend", "    if x == y + z\n    else if x == z\n\
    \    else if y == z\n    else false\n    end\nend\n</cell>\n<code language=julia-1.5>",
  "    if x == y+z\n    else false\nend\n</cell>\n<text>\nProblem 7\nWrite a function\
    \ that takes 3 numbers and returns the largest of them. \nIf all three numbers\
    \ are equal, return 0.\nIf any two of them are equal, return the smaller of the\
    \ two.\nIf all three are equal, return 0.", "    if x == y || x == z\n       \
    \ true\n    else\n        false\n    end\nend", "    if x == y || x == z\n   \
    \     true\n    else\n        false\n    end\nend\n</cell>\n<text>\nProblem 7:\
    \ any_float\nCreate a function that takes 3 numbers.\nReturns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are floats.\n\
    Returns false in any other cases.\n    \nExamples\n    >>> any_float(5, 2, 7)\n\
    \    true\n    \n    >>> any_float(3, 2, 2)\n    false", "    if x == y || x ==\
    \ z || y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n\
    <code language=julia-1.5>", "    if x == y || x == z || y == z\n        return\
    \ true\n    else\n        return false\n    end\nend\n</cell>\n<text>\nProblem\
    \ 7\nWrite a function that takes 3 numbers and returns true if any of them is\
    \ equal to the sum of the other two.\nReturns false in any other case.\nExamples\n\
    >>> any_equal(5, 2, 7)\ntrue\n>>> any_equal(3, 2, 2)\nfalse\n>>> any_equal(3,\
    \ -2, 1)\ntrue\n>>> any_equal(3.6, -2.2, 2)\nfalse", "    if x == y || x == z\
    \ || y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<code\
    \ language=julia-1.5>", "    if x == y || x == z\n        true\n    else\n   \
    \     false\n    end\nend", "    if x == y || x == z || y == z\n        true\n\
    \    else\n        false\n    end\nend", "    if x == y || x == z\n        true\n\
    \    else\n        false\n    end\nend\n</cell>\n<text>\nProblem 7\nWrite a function\
    \ that takes 3 numbers and returns true if any of them is equal to the sum of\
    \ the other two.\nReturns false in any other case.\nThe function should work for\
    \ any number of numbers.", "    if x == y || x == z || y == z\n        return\
    \ true\n    else\n        return false\n    end\nend", "    if x == y || x ==\
    \ z\n        true\n    else\n        false\nend\n</cell>\n<text>\nProblem 7\n\
    Write a function that takes 3 numbers and returns true if all numbers are divisible\
    \ by 3.\nReturns false if any number is divisible by 3.\nReturns true in any other\
    \ case.\n    \nExamples\n    >>> all_divisible(5, 2, 7)\n    true\n    \n    >>>\
    \ all_divisible(3, 2, 2)\n    false", "    if x == y + z\n        return true\n\
    \    else\n        return false\n    end\nend", "    if x == y+z\n        return\
    \ true\n    else\n        return false\n    end\nend", "    if x == y+z\n    \
    \    true\n    else\n        false\n    end\nend\n</cell>\n<text>\nProblem 7\n\
    Write a function that takes 3 numbers and returns true if all numbers are evenly\
    \ divisible by 3.", "    if x == y || x == z || y == z\n        return true\n\
    \    else\n        return false\n    end\nend", "    if x == y || x == z || y\
    \ == z \n        true\n    else\n        false\n    end\nend\n</cell>\n<text>\n\
    Problem 3\nWrite a function that takes 3 numbers and returns true if they are\
    \ all integers, and false otherwise.\nReturn false if any number is a float.\n\
    Return false if any number is a negative number.\nReturn false if any number is\
    \ a decimal.\nReturn false if any number is a NaN.\nReturn false if any number\
    \ is a string.\nReturn false if any number is a symbol.\nReturn false if any number\
    \ is an empty array.\nReturn false if any number is an empty dictionary.\nReturn\
    \ false if any number is an empty tuple.\nReturn false if any number is an empty\
    \ vector.\nReturn false if any number is an empty matrix.\nReturn false if any\
    \ number is a function.\nReturn false if any number is a tuple.\nReturn false\
    \ if any number is a vector.\nReturn false if any number is a matrix.\nReturn\
    \ false if any number is a dictionary.\nReturn false if any number is a function.\n\
    Return false if any number is a string.\nReturn false if any number is a symbol.\n\
    Return false if any number is a number.\nReturn false if any number is a boolean.\n\
    Return false if any number is a function.\nReturn false if any number is a string.\n\
    Return false if any number is a number.\nReturn false if any number is a boolean.\n\
    Return false if any number is a function.\nReturn false if any number is a string.\n\
    Return false if any number is a number.\nReturn false if any number is a boolean.\n\
    Return false if any number is a function.\nReturn false if any number is a string.\n\
    Return false if any number is a number.\nReturn false if any number is a boolean.\n\
    Return false if any number is a function.\nReturn false if any number is a string.\n\
    Return false if any number is a number.\nReturn false if any number is a boolean.\n\
    Return false if any number is a function.\nReturn false if any number is a string.\n\
    Return false if any number is a number.\nReturn false if any number is a boolean.\n\
    Return false if any number is a function.\nReturn false if any number is a string.\n\
    Return false if any number is a number.\nReturn false if any number is a boolean.\n\
    Return false if any number is a function.\nReturn false if any number is a string.\n\
    Return false if any number is a number.\nReturn false if any number is a boolean.\n\
    Return false if any number is a function.\nReturn false if any number is a string.\n\
    Return false if any number is a number.\nReturn false if any number is a boolean.\n\
    Return false if any number is a function.\nReturn false if any number is a string.\n\
    Return false if any number is a number.", "    if x == y || x == z || y == z \n\
    \        true\n    else\n        false\n    end\nend", "    if x == y || x ==\
    \ z || y == z\n        true\n    else\n        false\n    end\nend", "    if x\
    \ == y || x == z\n        true\n    else\n        false\n    end\nend", "    if\
    \ x == y || x == z || y == z\n        return true\n    else\n        return false\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>", "    if x == y+z\n    else\
    \ if x == y\n    else if x == z\n    else false\n    end\nend", "    if x == y\
    \ + z\n    else if x == z\n    else if y == z\n    else false\n    end\nend",
  "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\n\
    end\n</cell>\n<text>\nProblem 3\nWrite a function that takes 3 numbers and returns\
    \ true if at least one of them is greater than the other two.", "    if x == y\
    \ || x == z\n        true\n    else\n        false\nend\n</cell>\n<text>\nProblem\
    \ 3\nWrite a function that takes 3 numbers and returns true if all numbers are\
    \ integers, and false otherwise.\nThe function should work for any number of numbers.\n\
    The function should work for any type of numbers.\nThe function should work for\
    \ any type of numbers.\nThe function should work for any type of numbers.\nThe\
    \ function should work for any type of numbers.\nThe function should work for\
    \ any type of numbers.\nThe function should work for any type of numbers.\nThe\
    \ function should work for any type of numbers.\nThe function should work for\
    \ any type of numbers.\nThe function should work for any type of numbers.\nThe\
    \ function should work for any type of numbers.\nThe function should work for\
    \ any type of numbers.\nThe function should work for any type of numbers.\nThe\
    \ function should work for any type of numbers.\nThe function should work for\
    \ any type of numbers.\nThe function should work for any type of numbers.\nThe\
    \ function should work for any type of numbers.\nThe function should work for\
    \ any type of numbers.\nThe function should work for any type of numbers.\nThe\
    \ function should work for any type of numbers.\nThe function should work for\
    \ any type of numbers.\nThe function should work for any type of numbers.\nThe\
    \ function should work for any type of numbers.\nThe function should work for\
    \ any type of numbers.\nThe function should work for any type of numbers.\nThe\
    \ function should work for any type of numbers.\nThe function should work for\
    \ any type of numbers.\nThe function should work for any type of numbers.\nThe\
    \ function should work for any type of numbers.\nThe function should work for\
    \ any type of numbers.\nThe function should work for any type of numbers.\nThe\
    \ function should work for any type of numbers.\nThe function should work for\
    \ any type of numbers.\nThe function should work for any type of numbers.\nThe\
    \ function should work for any type of numbers.\nThe function should work for\
    \ any type of numbers.\nThe function should work for any type of numbers.\nThe\
    \ function should work for any type of numbers.\nThe function should work for\
    \ any type of numbers.\nThe function should work for any type of numbers.\nThe\
    \ function should work for any type of numbers.\nThe function should work for\
    \ any type of numbers.\nThe function should work for any type of numbers.\nThe\
    \ function should work for any type of numbers.\nThe function should work for\
    \ any type of numbers.\nThe function should work for any type of numbers.\nThe\
    \ function should work for any type of numbers.\nThe function should work for\
    \ any type of numbers.\nThe function should work for any type of numbers.\nThe\
    \ function should work for any type of numbers.\nThe function should work for\
    \ any type of numbers.\nThe function should work for any type of numbers.\nThe\
    \ function should work for any type of numbers.\nThe function should work for\
    \ any type of numbers.\nThe function should work for any type of numbers.\nThe\
    \ function should work for any type of numbers.\nThe function should work for\
    \ any type of numbers.\nThe function should work for any type of numbers.\nThe\
    \ function should work for any ", "    if x == y || x == z || y == z\n       \
    \ true\n    else\n        false\n    end\nend", "    if x == y || x == z || y\
    \ == z \n        true\n    else\n        false\n    end\nend\n</cell>\n<text>\n\
    Problem 7\nWrite a function that takes 3 numbers and returns true if any of them\
    \ is equal to the sum of the other two.\nReturns false in any other case.\nExamples\n\
    >>> any_sum(5, 2, 7)\ntrue\n>>> any_sum(3, 2, 2)\nfalse\n>>> any_sum(3, -2, 1)\n\
    true\n>>> any_sum(3.6, -2.2, 2)\nfalse\n ", "    if x == y || x == z\n       \
    \ true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>",
  "    if x == y + z\n        true\n    else\n        false\n    end\nend\n</cell>\n\
    <text>\nProblem 3\nWrite a function that takes 3 numbers and returns true if all\
    \ numbers are positive, and false if any number is negative.\nReturn false in\
    \ any other cases.\n    \nExamples\n    >>> all_positive(5, 2, 7)\n    true\n\
    \    \n    >>> all_positive(3, -2, 1)\n    false\n    \n    >>> all_positive(3.6,\
    \ -2.2, 2)\n    false\n    \n    \n    \"\"\"", "    if x == y || x == z\n   \
    \     true\n    else\n        false\n    end\nend\n</cell>\n<text>\nProblem 7\n\
    Create a function that takes 3 numbers and returns true if they are all integers.\
    \ Return false if any of them are not integers.\nExamples\n>>> all_ints(5, 2,\
    \ 7)\ntrue\n>>> all_ints(3, 2, 2)\nfalse", "    if x == y || x == z || y == z\n\
    \        return true\n    else\n        return false\n    end\nend", "    if x\
    \ == y || x == z || y == z\n        return true\n    else\n        return false\n\
    \    end\nend\n</cell>\n<text>\nProblem 4\nWrite a function that takes 3 numbers\
    \ and returns true if all numbers are divisible by 3.\nReturns false in any other\
    \ case.\nExamples\n>>> all_divisible(5, 2, 7)\ntrue\n>>> all_divisible(3, 2, 2)\n\
    false\n>>> all_divisible(3.6, -2.2, 2)\nfalse", "    if x == y || x == z\n   \
    \     return true\n    else\n        return false\n    end\nend\n</cell>\n<code\
    \ language=julia-1.3>\n\"\"\"\n    Create a function that takes 3 numbers.\n \
    \   Returns true if all of the numbers are equal to the sum of the other two,\
    \ and all numbers are integers.\n    Returns false in any other cases.\n    \n\
    \    Examples\n    >>> all_int(5, 2, 7)\n    false\n    \n    >>> all_int(3, 2,\
    \ 2)\n    true", "    if x == y || x == z || y == z\n        true\n    else\n\
    \        false\n    end\nend", "    if x == y || x == z || y == z\n        true\n\
    \    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5,\
    \ 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code\
    \ language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\n\
    any_int(3.6, -2.2, 2)\n</cell>\n<text>\nProblem 3\nWrite a function that takes\
    \ 3 numbers and returns true if they are all positive.\nReturns false if any number\
    \ is negative.\nReturns false if any number is zero.\nReturns false if any number\
    \ is NaN.\nReturns false in any other cases.\nExamples\n>>> all_positive(5, 2,\
    \ 7)\ntrue", "    if x == y+z\n        true\n    else\n        false\n    end\n\
    end\n</cell>\n<text>\nProblem 3\nWrite a function that takes 3 numbers and returns\
    \ true if any of them is equal to the sum of the other two.", "    if x == y +\
    \ z\n    else if x == z\n    else if y == z\n    else false\n    end\nend", " \
    \   if x == y+z\n    then return true\n    else return false\n    end\nend\n</cell>\n\
    <text>\nProblem 4\nWrite a function that takes 3 numbers and returns true if any\
    \ of them is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\n    \nExamples\n    >>> any_int_or_sum(5, 2,\
    \ 7)\n    true\n    \n    >>> any_int_or_sum(3, 2, 2)\n    false", "    if x ==\
    \ y+z\n        true\n    else\n        false\n    end\nend", "    if x == y ||\
    \ x == z || y == z\n        return true\n    else\n        return false\n    end\n\
    end", "    if x == y || x == z\n        true\n    else\n        false\nend\n</cell>\n\
    <code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\n4.2 Write a\
    \ function that checks if a number is even.\nThe function should take one number\
    \ as input, and return true if the number is even, and false otherwise.", "  \
    \  if x == y || x == z || y == z\n        return true\n    else\n        return\
    \ false\n    end\nend", "    if x == y+z\n        return true\n    else\n    \
    \    return false\n    end\nend", "    if x == y || x == z || y == z\n       \
    \ return true\n    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>",
  "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\n\
    end", "    if x == y || x == z || y == z\n        true\n    else\n        false\n\
    \    end\nend", "    if x == y || x == z\n        true\n    else\n        false\n\
    \    end\nend", "    if x == y || x == z || y == z \n        true\n    else\n\
    \        false\n    end\nend", "    if x == y+z\n        true\n    else\n    \
    \    false\nend\n</cell>\n<text>\nProblem 7\nCreate a function that takes 3 numbers\
    \ and returns true if any of them is equal to the sum of the other two, and all\
    \ numbers are integers.\nReturns false in any other cases.\n    \n    Examples\n\
    \    >>> any_int_or_sum(5, 2, 7)\n    true\n    \n    >>> any_int_or_sum(3, 2,\
    \ 2)\n    false", "    if x == y || x == z || y == z\n        return true\n  \
    \  else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.1>\n\
    \"\"\"\n    Create a function that takes 3 numbers.\n    Returns true if all numbers\
    \ are equal to the sum of the other two, and all numbers are integers.\n    Returns\
    \ false in any other cases.\n    \n    Examples\n    >>> all_int(5, 2, 7)\n  \
    \  true\n    \n    >>> all_int(3, 2, 2)\n    false", "    if x == y || x == z\
    \ || y == z \n        true\n    else\n        false\n    end\nend\n</cell>\n<text>\n\
    Problem 7: any_float\nWrite a function that takes 3 numbers.\nReturns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ floats.\nReturns false in any other cases.\n    \nExamples\n    >>> any_float(5,\
    \ 2, 7)\n    true\n    \n    >>> any_float(3, 2, 2)\n    false", "    if x ==\
    \ y + z\n    else false\nend\n</cell>\n<text>\nProblem 7\nWrite a function that\
    \ takes 3 numbers and returns true if any of them is equal to the sum of the other\
    \ two.\nReturns false in any other case.\nExamples\nany_int(5, 2, 7)\ntrue\nany_int(3,\
    \ 2, 2)\nfalse\nany_int(3, -2, 1)\ntrue\nany_int(3.6, -2.2, 2)\nfalse", "    if\
    \ x == y || x == z || y == z\n        true\n    else\n        false\n    end\n\
    end\n</cell>\n<text>\nProblem 7\nWrite a function that takes 3 numbers and returns\
    \ true if all numbers are evenly divisible by 3.\nReturns false if any number\
    \ is odd.\nReturns true in all other cases.\n    \nExamples\n>>> all_evenly_divisible(5,\
    \ 2, 7)\ntrue\n>>> all_evenly_divisible(3, 2, 2)\nfalse\n>>> all_evenly_divisible(3.6,\
    \ -2.2, 2)\ntrue", "    if x == y+z\n        true\n    else\n        false\n \
    \   end\nend", "    if x == y+z\n    true\n    else \n    false\nend\n</cell>\n\
    <code language=julia-1.5>", "    if x == y+z\n    else false\nend\n</cell>\n<text>\n\
    Problem 7\nWrite a function that takes 3 numbers and returns true if any of them\
    \ is equal to the sum of the other two, and all numbers are integers.\nReturns\
    \ false in any other cases.\n    \nExamples\n    >>> any_int_or_false(5, 2, 7)\n\
    \    true\n    \n    >>> any_int_or_false(3, -2, 1)\n    false\n    \n    >>>\
    \ any_int_or_false(3.6, -2.2, 2)\n    true\n    \n    >>> any_int_or_false(3.6,\
    \ -2.2, 2.1)\n    false\n    \n    >>> any_int_or_false(3.6, -2.2, 2.5)\n    false\n\
    \    \n    >>> any_int_or_false(3.6, -2.2, 2.5)\n    false\n    \n    >>> any_int_or_false(3.6,\
    \ -2.2, 2.5)\n    false\n    \n    >>> any_int_or_false(3.6, -2.2, 2.5)\n    false\n\
    \    \n    >>> any_int_or_false(3.6, -2.2, 2.5)\n    false\n    \n    >>> any_int_or_false(3.6,\
    \ -2.2, 2.5)\n    false\n    \n    >>> any_int_or_false(3.6, -2.2, 2.5)\n    false\n\
    \    \n    >>> any_int_or_false(3.6, -2.2, 2.5)\n    false\n    \n    >>> any_int_or_false(3.6,\
    \ -2.2, 2.5)\n    false\n    \n    >>> any_int_or_false(3.6, -2.2, 2.5)\n    false\n\
    \    \n    >>> any_int_or_false(3.6, -2.2, 2.5)\n    false\n    \n    >>> any_int_or_false(3.6,\
    \ -2.2, 2.5)\n    false\n    \n    >>> any_int_or_false(3.6, -2.2, 2.5)\n    false\n\
    \    \n    >>> any_int_or_false(3.6, -2.2, 2.5)\n    false\n    \n    >>> any_int_or_false(3.6,\
    \ -2.2, 2.5)\n    false\n    \n    >>> any_int_or_false(3.6, -2.2, 2.5)\n    false\n\
    \    \n    >>> any_int_or_false(3.6, -2.2, 2.5)\n    false\n    \n    >>> any_int_or_false(3.6,\
    \ -2.2, 2.5)\n    false\n    \n    >>> any_int_or_false(3.6, -2.2, 2.5)\n    false\n\
    \    \n    >>> any_int_or_false(3.6, -2.2, 2.5)\n    false\n    \n    >>> any_int_or_false(3.6,\
    \ -2.2, 2.5)\n    false\n    \n    >>> any_int_or_false(3.6, -2.2, 2.5)\n    false\n",
  "    if x == y || x == z\n        true\n    else\n        false\n    end\nend\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes 3 numbers and returns\
    \ the sum of the numbers. If the sum is negative, return -1.", "    if x == y\
    \ || x == z || y == z\n        return true\n    else\n        return false\n \
    \   end\nend\n</cell>\n<code language=julia-1.5>", "    if x == y || x == z ||\
    \ y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<code\
    \ language=julia-1.5>", "    if x == y || x == z || y == z\n        return true\n\
    \    else\n        return false\n    end\nend", "    if x == y || x == z || y\
    \ == z\n        return true\n    else\n        return false\n    end\nend\n</cell>\n\
    <text>\nProblem 3\nWrite a function that takes 3 numbers and returns true if any\
    \ of them is equal to the sum of the other two.\nReturns false in any other cases.\n\
    \    \n    Examples\n    >>> any_int_sum(5, 2, 7)\n    true\n    \n    >>> any_int_sum(3,\
    \ 2, 2)\n    false", "    if x == y+z\n        true\n    else\n        false\n\
    \    end\nend", "    if x == y+z\n        true\n    else\n        false\nend\n\
    </cell>\n<code language=julia-1.5>", "    if x == y+z\n        true\n    else\n\
    \        false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n   \
    \ Create a function that takes 3 numbers.\n    Returns true if all numbers are\
    \ equal to the sum of the other two, and all numbers are integers.\n    Returns\
    \ false in any other cases.\n    \n    Examples\n    >>> all_int(5, 2, 7)\n  \
    \  true\n    \n    >>> all_int(3, 2, 2)\n    true", "    if x == y+z\n       \
    \ true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    any_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ 3 numbers and returns true if any of them is equal to the sum of the other two.\n\
    Return false in any other case.", "    if x == y || x == z || y == z\n       \
    \ true\n    else\n        false\n    end\nend", "    if x == y || x == z || y\
    \ == z\n        return true\n    else\n        return false\n    end\nend\n</cell>\n\
    <text>\nProblem 4\nWrite a function that takes 3 numbers and returns true if all\
    \ numbers are divisible by 3.\nReturns false in any other case.\n    \nExamples\n\
    >>> all_divisible(5, 2, 7)\ntrue\n    \n>>> all_divisible(3, 2, 2)\nfalse", " \
    \   if x == y+z\n    else false\nend\n</cell>\n<text>\nProblem 7\nWrite a function\
    \ that takes 3 numbers and returns true if any of them is equal to the sum of\
    \ the other two.\nReturns false if all numbers are different.\nReturns false if\
    \ all numbers are integers.\nReturns true in any other cases.\nExamples\n>>> any_int(5,\
    \ 2, 7)\ntrue\n>>> any_int(3, 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6,\
    \ -2.2, 2)\nfalse", "    if x == y || x == z\n        return true\n    else\n\
    \        return false\n    end\nend\n</cell>\n<code language=julia-1.5>", "  \
    \  if x == y || x == z || y == z\n        return true\n    else\n        return\
    \ false\n    end\nend", "    if x == y || x == z || y == z\n        true\n   \
    \ else\n        false\n    end\nend", "    if x == y || x == z || y == z\n   \
    \     true\n    else\n        false\n    end\nend\n</cell>\n<text>\nProblem 4\n\
    Write a function that takes 3 numbers and returns true if the sum of the numbers\
    \ is equal to the product of the other two, and all numbers are integers.\nReturns\
    \ false in any other cases.\n    \n    Examples\n    >>> any_int(5, 2, 7)\n  \
    \  true\n    \n    >>> any_int(3, 2, 2)\n    false", "    if x == y+z\n      \
    \  true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    any_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n\
    <code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\n\
    any_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a vector of numbers and returns the sum of the numbers in the vector. \nWrite\
    \ a function that takes a vector of numbers and returns the product of the numbers\
    \ in the vector. \nWrite a function that takes a vector of numbers and returns\
    \ the maximum of the numbers in the vector. \nWrite a function that takes a vector\
    \ of numbers and returns the minimum of the numbers in the vector. \nWrite a function\
    \ that takes a vector of numbers and returns the number of times the number in\
    \ the vector appears. \nWrite a function that takes a vector of numbers and returns\
    \ the number of times the number in the vector appears more than once. \nWrite\
    \ a function that takes a vector of numbers and returns the number of times the\
    \ number in the vector appears less than once. \nWrite a function that takes a\
    \ vector of numbers and returns the number of times the number in the vector appears\
    \ exactly once. \nWrite a function that takes a vector of numbers and returns\
    \ the number of times the number in the vector appears exactly twice. \nWrite\
    \ a function that takes a vector of numbers and returns the number of times the\
    \ number in the vector appears exactly three times. \nWrite a function that takes\
    \ a vector of numbers and returns the number of times the number in the vector\
    \ appears exactly four times. \nWrite a function that takes a vector of numbers\
    \ and returns the number of times the number in the vector appears exactly five\
    \ times. \nWrite a function that takes a vector of numbers and returns the number\
    \ of times the number in the vector appears exactly six times. \nWrite a function\
    \ that takes a vector of numbers and returns the number of times the number in\
    \ the vector appears exactly seven times. \nWrite a function that takes a vector\
    \ of numbers and returns the number of times the number in the vector appears\
    \ exactly eight times. \nWrite a function that takes a vector of numbers and returns\
    \ the number of times the number in the vector appears exactly nine times. \n\
    Write a function that takes a vector of numbers and returns the number of times\
    \ the number in the vector appears exactly ten times. \nWrite a function that\
    \ takes a vector of numbers and returns the number of times the number in the\
    \ vector appears exactly eleven times. \nWrite a function that takes a vector\
    \ of numbers and returns the number of times the number in the vector appears\
    \ exactly twelve times. \nWrite a function that takes a vector of numbers and\
    \ returns the number of times the number in the vector appears exactly thirteen\
    \ times. \nWrite a function that takes a vector of numbers and returns the number\
    \ of times the number in the vector appears exactly fourteen time", "    if x\
    \ == y || x == z || y == z\n        return true\n    else\n        return false\n\
    \    end\nend\n</cell>\n<text>\nProblem 3\nWrite a function that takes 3 numbers\
    \ and returns true if all numbers are even, and false otherwise.\nReturn false\
    \ in any other case.\nExamples\n>>> all_evens(5, 2, 7)\ntrue\n>>> all_evens(3,\
    \ 2, 2)\nfalse\n>>> all_evens(3, -2, 1)\nfalse\n>>> all_evens(3.6, -2.2, 2)\n\
    true", "    if x == y || x == z || y == z\n        true\n    else\n        false\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    Create a function\
    \ that takes 3 numbers.\n    Returns true if all of the numbers are equal to the\
    \ sum of the other two, and all numbers are integers.\n    Returns false in any\
    \ other cases.\n    \n    Examples\n    >>> all_int(5, 2, 7)\n    false\n    \n\
    \    >>> all_int(3, 2, 2)\n    true", "    if x == y || x == z || y == z \n  \
    \      true\n    else\n        false\n    end\nend\n</cell>\n<text>\nProblem 3\n\
    Write a function that takes 3 numbers and returns true if they are all integers.\
    \ Return false if any of them are not integers.", "    if x == y || x == z\n \
    \       true\n    else\n        false\n    end\nend\n</cell>\n<text>\nProblem\
    \ 7\nWrite a function that takes 3 numbers and returns true if at least one of\
    \ them is positive, and all numbers are integers.\nReturn false in any other case.\n\
    Examples\n>>> positive_int(5, 2, 7)\ntrue\n>>> positive_int(3, 2, 2)\ntrue\n>>>\
    \ positive_int(3, -2, 1)\nfalse\n>>> positive_int(3.6, -2.2, 2)\nfalse\n>>> positive_int(3.6,\
    \ -2.2, -2)\ntrue\n>>> positive_int(3.6, -2.2, 0)\nfalse\n>>> positive_int(3.6,\
    \ -2.2, 2)\nfalse\n>>> positive_int(3.6, -2.2, 2)\nfalse\n>>> positive_int(3.6,\
    \ -2.2, 2)\nfalse\n>>> positive_int(3.6, -2.2, 2)\nfalse\n>>> positive_int(3.6,\
    \ -2.2, 2)\nfalse\n>>> positive_int(3.6, -2.2, 2)\nfalse\n>>> positive_int(3.6,\
    \ -2.2, 2)\nfalse\n>>> positive_int(3.6, -2.2, 2)\nfalse\n>>> positive_int(3.6,\
    \ -2.2, 2)\nfalse\n>>> positive_int(3.6, -2.2, 2)\nfalse\n>>> positive_int(3.6,\
    \ -2.2, 2)\nfalse\n>>> positive_int(3.6, -2.2, 2)\nfalse\n>>> positive_int(3.6,\
    \ -2.2, 2)\nfalse\n>>> positive_int(3.6, -2.2, 2)\nfalse\n>>> positive_int(3.6,\
    \ -2.2, 2)\nfalse\n>>> positive_int(3.6, -2.2, 2)\nfalse\n>>> positive_int(3.6,\
    \ -2.2, 2)\nfalse\n>>> positive_int(3.6, -2.2, 2)\nfalse\n>>> positive_int(3.6,\
    \ -2.2, 2)\nfalse\n>>> positive_int(3.6, -2.2, 2)\nfalse\n>>> positive_int(3.6,\
    \ -2.2, 2)\nfalse\n>>> positive_int(3.6, -2.2, 2)\nfalse\n>>> positive_int(3.6,\
    \ -2.2, 2)\nfalse\n>>> positive_int(3.6, -2.2, 2)\nfalse\n>>> positive_int(3.6,\
    \ -2.2, 2)\nfalse\n>>> positive_int(3.6, -2.2, 2)\nfalse\n>>> positive_int(3.6,\
    \ -2.2, 2)\nfalse\n>>> positive_int(3.6, -2.2, 2)\nfalse\n>>> positive_int(3.6,\
    \ -2.2, 2)\nfalse\n>>> positive_int(3.6, -2.2, 2)\nfalse\n>>> positive_int(3.6,\
    \ -2.2, 2)\nfalse\n>>> positive_int(3.6, -2.2, 2)\nfalse\n>>> positive_int(3.6,\
    \ -2.2, 2)\nfalse\n>>> positive_int(3.6, -2.2, 2)\nfalse\n>>> positive_int(3.6,\
    \ -2.2, 2)\nfalse\n>>> positive_int(3.6, -2.2, 2)\nfalse", "    if x == y + z\n\
    \    else if x == z\n    else if y == z\n    else false\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\n\"\"\"\n    Create a function that takes 3 numbers.\n\
    \    Returns true if one of the numbers is equal to the sum of the other two,\
    \ and all numbers are integers.\n    Returns false in any other cases.\n    \n\
    \    Examples\n    >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2,\
    \ 2)\n    false", "    if x == y || x == z || y == z\n        return true\n  \
    \  else\n        return false\n    end\nend", "    if x == y || x == z || y ==\
    \ z\n        return true\n    else\n        return false\n    end\nend", "   \
    \ if x == y + z\n    else if x == z\n    else if y == z\n    else false\n    end\n\
    end", "    if x == y || x == z || y == z\n        return true\n    else\n    \
    \    return false\n    end\nend", "    if x == y+z\n        return true\n    else\n\
    \        return false\n    end\nend", "    if x == y || x == z\n        true\n\
    \    else\n        false\n    end\nend", "    if x == y+z\n    else if x == y\n\
    \    else if x == z\n    else if y == z\n    else false\n    end\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes 3 numbers and returns true if\
    \ all numbers are evenly divisible by 3.", "    if x == y + z\n    else \n   \
    \     if x == y\n        else \n            if x == z\n            else \n   \
    \             if x == x + y\n                else \n                    if x ==\
    \ x + z\n                    else \n                        if x == y + z\n  \
    \                      else \n                            return false\n    return\
    \ true\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code\
    \ language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\n\
    any_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes 3 numbers and returns\
    \ true if they are all positive.", "    if x == y+z\n        true\n    else\n\
    \        false\n    end\nend\n</cell>\n<code language=julia-1.3>", "    if x ==\
    \ y || x == z\n        true\n    else\n        false\n    end\nend\n</cell>\n\
    <code language=julia-1.5>", "    if x == y+z\n        true\n    else\n       \
    \ false\n    end\nend\n</cell>\n<code language=julia-1.5>", "    if x == y + z\n\
    \    else if x == z\n    else if y == z\n    else false\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\n\
    any_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n\
    <code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 3\n\
    Write a function that takes 3 numbers and returns true if any of them is equal\
    \ to the sum of the other two, and all numbers are integers.\nReturn false in\
    \ any other cases.\nExamples\nany_int_sum(5, 2, 7)\ntrue", "    if x == y+z\n\
    \        return true\n    else\n        return false\nend\n</cell>\n<text>\nProblem\
    \ 4\nWrite a function that takes 3 numbers and returns true if any of them is\
    \ equal to the sum of the other two, and all numbers are integers.\nReturns false\
    \ in any other cases.\n    \n    Examples\n    >>> any_int(5, 2, 7)\n    true\n\
    \    \n    >>> any_int(3, 2, 2)\n    false", "    if x == y+z\n        true\n\
    \    else\n        false\n    end\nend", "    if x == y || x == z\n        true\n\
    \    else\n        false\n    end\nend", "    if x == y+z\n        true\n    else\n\
    \        false\n    end\nend", "    if x == y+z\n        return true\n    else\n\
    \        return false\n    end\nend\n</cell>\n<text>\nProblem 7\nWrite a function\
    \ that takes three numbers and returns true if any of them is equal to the sum\
    \ of the other two, and all numbers are integers.\nReturns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int_or_sum(5, 2, 7)\n    true\n    \n\
    \    >>> any_int_or_sum(3, 2, 2)\n    false", "    if x == y || x == z\n     \
    \   true\n    else\n        false\nend\n</cell>\n<code language=julia-1.5>", " \
    \   if x == y+z\n    else false\nend\n</cell>\n<text>\nProblem 4\nWrite a function\
    \ that takes 3 numbers and returns true if at least one of them is equal to the\
    \ sum of the other two.", "    if x == y+z\n        return true\n    else\n  \
    \      return false\n    end\nend\n</cell>\n<text>\nProblem 7\nCreate a function\
    \ that takes 3 numbers and returns the sum of the numbers.\nReturn false if the\
    \ sum of the numbers is negative.\nReturn false if the sum of the numbers is 0.\n\
    Return true if the sum of the numbers is positive.\nReturn true if the sum of\
    \ the numbers is equal to the sum of the other two.\nReturn false in any other\
    \ cases.\nExamples\n>>> sum_int(5, 2, 7)\n12\n>>> sum_int(3, 2, 2)\nfalse\n>>>\
    \ sum_int(3, -2, 1)\ntrue\n>>> sum_int(3.6, -2.2, 2)\ntrue", "    if x == y ||\
    \ x == z || y == z\n        true\n    else\n        false\n    end\nend", "  \
    \  if x == y || x == z || y == z\n        return true\n    else\n        return\
    \ false\n    end\nend", "    if x == y || x == z || y == z\n        true\n   \
    \ else\n        false\n    end\nend", "    if x == y+z\n        return true\n\
    \    else\n        return false\n    end\nend", "    if x == y || x == z\n   \
    \     true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    any_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n\
    <code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\n\
    any_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ 3 numbers and returns true if they are all integers, and false if any of them\
    \ are not integers.", "    if x == y+z\n    else false\n    end\nend\n</cell>\n\
    <code language=julia-1.5>", "    if x == y || x == z || y == z\n        true\n\
    \    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\"\
    \"\"\n    Create a function that takes 3 numbers.\n    Returns true if all numbers\
    \ are equal to the sum of the other two, and all numbers are integers.\n    Returns\
    \ false in any other cases.\n    \n    Examples\n    >>> all_int(5, 2, 7)\n  \
    \  true\n    \n    >>> all_int(3, 2, 2)\n    false", "    if x == y || x == z\n\
    \        return true\n    else\n        return false\n    end\nend", "    if x\
    \ == y || x == z || y == z\n        return true\n    else\n        return false\n\
    \    end\nend", "    if x == y + z\n    else \n        if x == y\n        else\
    \ \n            if x == z\n            else \n                if x == x + y\n\
    \                else \n                    if x == x + z\n                  \
    \  else \n                        if x == y + z\n                        else\
    \ \n                            if x == y + x\n                            else\
    \ \n                                if x == y + z\n                          \
    \      else \n                                    return false\n             \
    \                   else \n                                    return true\n \
    \                           else \n                                return false\n\
    \                        else \n                            return true\n    \
    \                else \n                        return true\n                else\
    \ \n                    return true\n            else \n                return\
    \ true\n        else \n            return true\n    else \n        return true\n\
    end\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\n\
    any_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n\
    <code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<code language=julia-1.5>\n\
    any_int(3.6, -2.2, 2.2)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2,\
    \ 2.3)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2.4)\n</cell>\n\
    <code language=julia-1.5>\nany_int(3.6, -2.2, 2.5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(3.6, -2.2, 2.6)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2,\
    \ 2.7)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2.8)\n</cell>\n\
    <code language=julia-1.5>\nany_int(3.6, -2.2, 2.9)\n</cell>\n<code language=julia-1.5>\n\
    any_int(3.6, -2.2, 3)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2,\
    \ 3.1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 3.2)\n</cell>\n\
    <code language=julia-1.5>\nany_int(3.6, -2.2, 3.3)\n</cell>\n<code language=julia-1.5>\n\
    any_int(3.6, -2.2, 3.4)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2,\
    \ 3.5)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 3.6)\n</cell>\n\
    <code language=julia-1.5>\nany_int(3.6, -2.2, 3.7)\n</cell>\n<code language=julia-1.5>\n\
    any_int(3.6, -2.2, 3.8)\n</cell>\n<code language=julia-1.5>\nany_int(3.", "  \
    \  if x == y || x == z || y == z\n        true\n    else\n        false\n    end\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function that takes 3 numbers and returns\
    \ true if all numbers are equal, and false otherwise.\nReturn false in any other\
    \ cases.\nTest your function with some examples:", "    if x == y+z\n    else\
    \ false\nend\n</cell>\n<code language=julia-1.5>", "    if x == y || x == z ||\
    \ y == z\n        true\n    else\n        false\n    end\nend", "    if x == y+z\n\
    \        true\n    else\n        false\n    end\nend", "    if x == y || x ==\
    \ z || y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n\
    <text>\nProblem 7\nWrite a function that takes 3 numbers and returns the sum of\
    \ the numbers.\nThe function should return false if the numbers are not all integers.\n\
    The function should return false if the numbers are all integers.\nThe function\
    \ should return true if the numbers are all integers and the sum is equal to the\
    \ sum of the numbers.\nThe function should return true if the numbers are all\
    \ integers and the sum is not equal to the sum of the numbers.\nThe function should\
    \ return true if the numbers are all integers and the sum is equal to the sum\
    \ of the numbers, even if one or both of the numbers is zero.\nThe function should\
    \ return true if the numbers are all integers and the sum is not equal to the\
    \ sum of the numbers, even if one or both of the numbers is zero.\nThe function\
    \ should return true if the numbers are all integers and the sum is equal to the\
    \ sum of the numbers, even if one or both of the numbers is zero.\nThe function\
    \ should return true if the numbers are all integers and the sum is not equal\
    \ to the sum of the numbers, even if one or both of the numbers is zero.\nThe\
    \ function should return true if the numbers are all integers and the sum is equal\
    \ to the sum of the numbers, even if one or both of the numbers is zero.\nThe\
    \ function should return true if the numbers are all integers and the sum is not\
    \ equal to the sum of the numbers, even if one or both of the numbers is zero.\n\
    The function should return true if the numbers are all integers and the sum is\
    \ equal to the sum of the numbers, even if one or both of the numbers is zero.\n\
    The function should return true if the numbers are all integers and the sum is\
    \ not equal to the sum of the numbers, even if one or both of the numbers is zero.\n\
    The function should return true if the numbers are all integers and the sum is\
    \ equal to the sum of the numbers, even if one or both of the numbers is zero.\n\
    The function should return true if the numbers are all integers and the sum is\
    \ not equal to the sum of the numbers, even if one or both of the numbers is zero.\n\
    The function should return true if the numbers are all integers and the sum is\
    \ equal to the sum of the numbers, even if one or both of the numbers is zero.\n\
    The function should return true if the numbers are all integers and the sum is\
    \ not equal to the sum of the numbers, even if one or both of the numbers is zero.\n\
    The function should return true if the numbers are all integers and the sum is\
    \ equal to the sum of the numbers, even if one or both of the numbers is zero.\n\
    The function should return true if the numbers are all integers and the sum is\
    \ not equal to the sum of the numbers, even if one or both of the numbers is zero.\n\
    The function should return true if the numbers are all integers and the sum is\
    \ equal to the sum of the numbers, even if one or both of the numbers is zero.\n\
    The function should return ", "    if x == y+z\n        true\n    else\n     \
    \   false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n\
    </cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\n\
    any_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a vector of numbers and\
    \ returns the sum of the numbers. If the vector is empty, return 0.", "    if\
    \ x == y+z\n        true\n    else\n        false\n    end\nend\n</cell>\n<code\
    \ language=julia-1.5>", "    if x == y || x == z\n        true\n    else\n   \
    \     false\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ takes 3 numbers and returns true if at least one of them is equal to the sum\
    \ of the other two, and all numbers are integers.\nReturn false in any other cases.\n\
    \    \n    Examples\n    >>> any_int_or_false(5, 2, 7)\n    true\n    \n    >>>\
    \ any_int_or_false(3, 2, 2)\n    false", "    if x == y || x == z || y == z\n\
    \        return true\n    else\n        return false\n    end\nend\n</cell>\n\
    <text>\nProblem 3\nWrite a function that takes 3 numbers and returns the sum of\
    \ the numbers.\nThe function should return false if any of the numbers is negative.\n\
    The function should return false if the sum of the numbers is zero.\nThe function\
    \ should return false if the sum of the numbers is larger than the largest number\
    \ in the list.\nThe function should return true if the sum of the numbers is equal\
    \ to the largest number in the list.\nThe function should return true if the sum\
    \ of the numbers is equal to the sum of the other two numbers.\nThe function should\
    \ return true if the sum of the numbers is equal to the sum of the other two numbers\
    \ and the numbers are integers.\nThe function should return true if the sum of\
    \ the numbers is equal to the sum of the other two numbers and the numbers are\
    \ integers.\nThe function should return true if the sum of the numbers is equal\
    \ to the sum of the other two numbers and the numbers are integers.\nThe function\
    \ should return true if the sum of the numbers is equal to the sum of the other\
    \ two numbers and the numbers are integers.\nThe function should return true if\
    \ the sum of the numbers is equal to the sum of the other two numbers and the\
    \ numbers are integers.\nThe function should return true if the sum of the numbers\
    \ is equal to the sum of the other two numbers and the numbers are integers.\n\
    The function should return true if the sum of the numbers is equal to the sum\
    \ of the other two numbers and the numbers are integers.\nThe function should\
    \ return true if the sum of the numbers is equal to the sum of the other two numbers\
    \ and the numbers are integers.\nThe function should return true if the sum of\
    \ the numbers is equal to the sum of the other two numbers and the numbers are\
    \ integers.\nThe function should return true if the sum of the numbers is equal\
    \ to the sum of the other two numbers and the numbers are integers.\nThe function\
    \ should return true if the sum of the numbers is equal to the sum of the other\
    \ two numbers and the numbers are integers.\nThe function should return true if\
    \ the sum of the numbers is equal to the sum of the other two numbers and the\
    \ numbers are integers.\nThe function should return true if the sum of the numbers\
    \ is equal to the sum of the other two numbers and the numbers are integers.\n\
    The function should return true if the sum of the numbers is equal to the sum\
    \ of the other two numbers and the numbers are integers.\nThe function should\
    \ return true if the sum of the numbers is equal to the sum of the other two numbers\
    \ and the numbers are integers.\nThe function should return true if the sum of\
    \ the numbers is equal to the sum of the other two numbers and the numbers are\
    \ integers.\nThe function should return true if the sum of the numbers is equal\
    \ to the sum of the other two numbers and the numbers are integers.\nThe function\
    \ should return true if the sum of the numbers is equal to the sum of the other\
    \ two numbers and the numbers are integers.", "    if x == y || x == z\n     \
    \   true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Create a function that takes 3 numbers.\n    Returns true if one of\
    \ the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    \    Returns false in any other cases.\n    \n    Examples\n    >>> any_int(5,\
    \ 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false", "    if x == y+z\n\
    \    else false\nend", "    if x == y || x == z || y == z \n        true\n   \
    \ else\n        false\n    end\nend\n</cell>\n<text>\nProblem 7: any_int()\nWrite\
    \ a function that takes 3 numbers and returns true if any of them is equal to\
    \ the sum of the other two, and all numbers are integers.\nReturns false in any\
    \ other cases.\n    \nExamples\n    >>> any_int(5, 2, 7)\n    true\n    \n   \
    \ >>> any_int(3, 2, 2)\n    false", "    if x == y+z\n    then true\n    else\
    \ false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    Create\
    \ a function that takes 3 numbers.\n    Returns true if all of the numbers are\
    \ equal to the sum of the other two, and all numbers are integers.\n    Returns\
    \ false in any other cases.\n    \n    Examples\n    >>> all_int(5, 2, 7)\n  \
    \  false\n    \n    >>> all_int(3, 2, 2)\n    true", "    if x == y+z\n      \
    \  return true\n    else\n        return false\n    end\nend\n</cell>\n<text>\n\
    Problem 3\nWrite a function that takes 3 numbers and returns true if all numbers\
    \ are evenly divisible by 3.\nReturns false in any other case.\n    \n    Examples\n\
    \    >>> all_evenly_divisible(5, 2, 7)\n    true\n    \n    >>> all_evenly_divisible(3,\
    \ 2, 2)\n    false", "    if x == y || x == z\n        return true\n    else\n\
    \        return false\n    end\nend", "    if x == y+z\n        true\n    else\n\
    \        false\n    end\nend\n</cell>\n<text>\nProblem 7\nCreate a function that\
    \ takes 3 numbers and returns true if all numbers are even, and false if any number\
    \ is odd.\nReturn false in any other cases.\n    \n    Examples\n    >>> all_even(6,\
    \ 4, 2)\n    true\n    \n    >>> all_even(6, 4, 3)\n    false\n    \n    >>> all_even(6,\
    \ 4, 4)\n    false\n    \n    >>> all_even(6, 4, 5)\n    false\n    \n    >>>\
    \ all_even(6, 4, 6)\n    false\n    \n    >>> all_even(6, 4, 7)\n    false\n \
    \   \n    >>> all_even(6, 4, 8)\n    false\n    \n    >>> all_even(6, 4, 9)\n\
    \    false\n    \n    >>> all_even(6, 4, 10)\n    false\n    \n    >>> all_even(6,\
    \ 4, 11)\n    false\n    \n    >>> all_even(6, 4, 12)\n    false\n    \n    >>>\
    \ all_even(6, 4, 13)\n    false\n    \n    >>> all_even(6, 4, 14)\n    false\n\
    \    \n    >>> all_even(6, 4, 15)\n    false\n    \n    >>> all_even(6, 4, 16)\n\
    \    false\n    \n    >>> all_even(6, 4, 17)\n    false\n    \n    >>> all_even(6,\
    \ 4, 18)\n    false\n    \n    >>> all_even(6, 4, 19)\n    false\n    \n    >>>\
    \ all_even(6, 4, 20)\n    false\n    \n    >>> all_even(6, 4, 21)\n    false\n\
    \    \n    >>> all_even(6, 4, 22)\n    false\n    \n    >>> all_even(6, 4, 23)\n\
    \    false\n    \n    >>> all_even(6, 4, 24)\n    false\n    \n    >>> all_even(6,\
    \ 4, 25)\n    false\n    \n    >>> all_even(6, 4, 26)\n    false\n    \n    >>>\
    \ all_even(6, 4, 27)\n    false\n    \n    >>> all_even(6, 4, 28)\n    false\n\
    \    \n    >>> all_even(6, 4, 29)\n    false\n    \n    >>> all_even(6, 4, 30)\n\
    \    false\n    \n    >>> all_even(6, 4, 31)\n    false\n    \n    >>> all_even(6,\
    \ 4, 32)\n    false\n    \n    >>> all_even(6, 4, 33)\n    false\n    \n    >>>\
    \ all_even(6, 4, 34)\n    false\n    \n    >>> all_even(6, 4, 35)\n    false\n\
    \    \n    >>> all_even(6, 4, 36)\n    false\n    \n    >>> all_even(6, 4, 37)\n\
    \    false\n    \n    >>> all_even(6, 4, 38)\n    false\n    ", "    if x == y\
    \ || x == z || y == z\n        return true\n    else\n        return false\n \
    \   end\nend", "    if x == y || x == z || y == z\n        true\n    else\n  \
    \      false\n    end\nend\n</cell>\n<code language=julia-1.5>", "    if x ==\
    \ y+z\n        true\n    else\n        false\n    end\nend", "    if x == y+z\n\
    \        true\n    else\n        false\n    end\nend", "    if x == y || x ==\
    \ z\n        return true\n    else\n        return false\n    end\nend\n</cell>\n\
    <text>\nProblem 7\nWrite a function that takes 3 numbers and returns true if they\
    \ are all equal, and false if they are not.\nThe function should work for any\
    \ number of numbers, not just 3.", "    if x == y+z\n        return true\n   \
    \ else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>",
  "    if x == y + z\n    else if x == z\n    else if y == z\n    else false\n   \
    \ end\nend", "    if x == y+z\n    else false\nend\n</cell>\n<code language=julia-1.5>"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

name: HumanEval_43_pairs_sum_to_zero
language: jl
prompt: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n \
  \   it returns true if there are two distinct elements in the vector that\n    sum\
  \ to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n    false\n\
  \    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
  \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
  \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
  \ \n"
tests: "using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
  \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
  \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
  \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
  \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
  \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
completions: ["    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>",
  "    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n          \
    \  return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes an array of integers\
    \ and returns an array of the same length\nthat contains the number of pairs of\
    \ elements in the array that sum to zero.", "    sum = 0\n    for i in l\n   \
    \     sum += i\n        if sum == 0\n            return true\n    return false\n\
    end\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,5,0])\n</cell>\n\
    <code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([2,4,-5,3,5,7])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a vector of integers and returns true\
    \ if the vector has all unique elements and false otherwise.\nFor example, \n\
    [1,2,2,3,4] has all unique elements and \n[1,2,2,3,4] does not have all unique\
    \ elements.", "    sum = 0\n    for x in l\n        sum += x\n        if sum ==\
    \ 0 \n            return true\n    return false\nend\n</cell>\n<text>\nExercise\
    \ 4\nWrite a function that checks if a vector contains all integers from 1 to\
    \ n. \nFor example, \n[1,2,3] contains all integers from 1 to 3\n[1,2,4] contains\
    \ no integers\n[1,3,4] contains all integers from 1 to 4\n[1,3,4] contains no\
    \ integers\n[1,3,5] contains no integers\n[1,3,6] contains no integers\n[1,3,7]\
    \ contains no integers\n[1,3,8] contains no integers\n[1,3,9] contains no integers\n\
    [1,3,10] contains no integers\n[1,3,11] contains no integers\n[1,3,12] contains\
    \ no integers\n[1,3,13] contains no integers\n[1,3,14] contains no integers\n\
    [1,3,15] contains no integers\n[1,3,16] contains no integers\n[1,3,17] contains\
    \ no integers\n[1,3,18] contains no integers\n[1,3,19] contains no integers\n\
    [1,3,20] contains no integers\n[1,3,21] contains no integers\n[1,3,22] contains\
    \ no integers\n[1,3,23] contains no integers\n[1,3,24] contains no integers\n\
    [1,3,25] contains no integers\n[1,3,26] contains no integers\n[1,3,27] contains\
    \ no integers\n[1,3,28] contains no integers\n[1,3,29] contains no integers\n\
    [1,3,30] contains no integers\n[1,3,31] contains no integers\n[1,3,32] contains\
    \ no integers\n[1,3,33] contains no integers\n[1,3,34] contains no integers\n\
    [1,3,35] contains no integers\n[1,3,36] contains no integers\n[1,3,37] contains\
    \ no integers\n[1,3,38] contains no integers\n[1,3,39] contains no integers\n\
    [1,3,40] contains no integers\n[1,3,41] contains no integers\n[1,3,42] contains\
    \ no integers\n[1,3,43] contains no integers\n[1,3,44] contains no integers\n\
    [1,3,45] contains no integers\n[1,3,46] contains no integers\n[1,3,47] contains\
    \ no integers\n[1,3,48] contains no integers\n[1,3,49] contains no integers\n\
    [1,3,50] contains no integers\n[1,3,51] ", "    \n    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n", "    \n    sum = 0\n    for i in l\n        sum +=\
    \ i\n        if sum == 0\n            return true\n        end\n    end\n    return\
    \ false\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes as input a list of integers\
    \ and returns true if there are two distinct elements in the list that sum to\
    \ zero, and false otherwise.", "    sum = 0\n    for i in l\n        sum += i\n\
    \        if sum == 0\n            return true\n    return false\nend\n</cell>\n\
    <code language=julia-1.3>\npairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,2,3,7])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n\
    <code language=julia-1.3>\npairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 3\n\
    Write a function that returns the number of pairs in the given vector that sum\
    \ to zero.", "    \n    sum = 0\n    for i in l\n        sum += i\n        if\
    \ sum == 0\n            return true\n        end\n    end\n    return false\n\
    end\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>", "    \n    sum = 0\n    for i in l\n        sum += i\n        if sum\
    \ == 0\n            return true\n        end\n    end\n    return false\nend\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<text>\n\
    Question 3.2\nWrite a function called pairs_sum_to_zero that takes an array of\
    \ integers as an input.\nIt returns true if there are two distinct elements in\
    \ the array that sum to zero, and false otherwise.\nThe function should return\
    \ false if the array is empty.\nThe function should return false if the array\
    \ has only one element.\nThe function should return false if the array has two\
    \ or more elements.\nThe function should return true if the array has two or more\
    \ elements that sum to zero.\nThe function should return true if the array has\
    \ two or more elements that sum to zero.\nThe function should return true if the\
    \ array has two or more elements that sum to zero.\nThe function should return\
    \ true if the array has two or more elements that sum to zero.\nThe function should\
    \ return true if the array has two or more elements that sum to zero.\nThe function\
    \ should return true if the array has two or more elements that sum to zero.\n\
    The function should return true if the array has two or more elements that sum\
    \ to zero.\nThe function should return true if the array has two or more elements\
    \ that sum to zero.\nThe function should return true if the array has two or more\
    \ elements that sum to zero.\nThe function should return true if the array has\
    \ two or more elements that sum to zero.\nThe function should return true if the\
    \ array has two or more elements that sum to zero.\nThe function should return\
    \ true if the array has two or more elements that sum to zero.\nThe function should\
    \ return true if the array has two or more elements that sum to zero.\nThe function\
    \ should return true if the array has two or more elements that sum to zero.\n\
    The function should return true if the array has two or more elements that sum\
    \ to zero.\nThe function should return true if the array has two or more elements\
    \ that sum to zero.\nThe function should return true if the array has two or more\
    \ elements that sum to zero.\nThe function should return true if the array has\
    \ two or more elements that sum to zero.\nThe function should return true if the\
    \ array has two or more elements that sum to zero.\nThe function should return\
    \ true if the array has two or more elements that sum to zero.\nThe function should\
    \ return true if the array has two or more elements that sum to zero.\nThe function\
    \ should return true if the array has two or more elements that sum to zero.\n\
    The function should return true if the array has two or more elements that sum\
    \ to zero.\nThe function should return true if the array has two or more elements\
    \ that sum to zero.\nThe function should ", "    \n    sum = 0\n    for i in l\n\
    \        sum += i\n        if sum == 0\n            return true\n    return false\n\
    end\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,2,3])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,4,5])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,2,3,4,5,6])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,4,5,6,7])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,2,3,4,5,6,7,8])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,4,5,6,7,8,9])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,2,3,4,5,6,7,8,9,10])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,4,5,6,7,8,9,10,11])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,2,3,4,5,6,7,8,9,10,11,12])\n</cell>",
  "    l = sort(l)\n    pairs = zip(l[1:end-1], l[2:end])\n    pairs = filter(x ->\
    \ x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x\
    \ -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs =\
    \ filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n \
    \   pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0,\
    \ pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1]\
    \ == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x\
    \ -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs =\
    \ filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n \
    \   pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0,\
    \ pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1]\
    \ == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x\
    \ -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs =\
    \ filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n \
    \   pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0,\
    \ pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1]\
    \ == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x\
    \ -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs =\
    \ filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n \
    \   pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0,\
    \ pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1]\
    \ == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x\
    \ -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs =\
    \ filter(x -> x[1] == 0, pairs)\n    pair", "    \n    sum = 0\n    for i in l\n\
    \        sum += i\n        if sum == 0\n            return true\n    return false\n\
    end\n</cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,5,0])\n</cell>\n\
    <text>\nExercise 2\nWrite a function that checks if a vector has all positive\
    \ elements.\nThe function should return true if the vector has at least one positive\
    \ element, and false otherwise.\nThe function should work for both real and complex\
    \ numbers.", "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n", " \
    \   sum = 0\n    for i in l\n        sum += i\n        if sum == 0 \n        \
    \    return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ as input a vector of integers and returns true if the vector has all unique\
    \ elements and false otherwise.", "    sum = 0\n    for i in l\n        sum +=\
    \ i\n        if sum == 0\n            return true\n        end\n    end\n    return\
    \ false\nend", "    sum = 0\n    for x in l\n        sum += x\n        if sum\
    \ == 0\n            return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,", "    \n    sum = 0\n \
    \   for i in l\n        sum += i\n        if sum == 0\n            return true\n\
    \        end\n    end\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>", "    sum = 0\n\
    \    for i in l\n        sum += i\n        if sum == 0\n            return true\n\
    \        end\n    end\n    return false\nend\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,2,3,7])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n\
    <code language=julia-1.3>\npairs_sum_to_zero([1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7,0])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,2,3,7])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n\
    <code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([2,4,-5,3,5,7])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,2,3,7])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n\
    <code language=julia-1.3>\n", "    \n    sum = 0\n    for i in l\n        sum\
    \ += i\n    end\n    \n    sum == 0\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ as input a vector of integers and returns true if the vector contains any negative\
    \ integers, and false otherwise.\nThe function should work for both positive and\
    \ negative integers.\nThe function should work for both single and double digit\
    \ integers.\nThe function should work for both single and double digit integers\
    \ when the vector is empty.\nThe function should work for both single and double\
    \ digit integers when the vector has only one element.\nThe function should work\
    \ for both single and double digit integers when the vector has more than one\
    \ element.\nThe function should work for both single and double digit integers\
    \ when the vector has one or two elements.", "    sum = 0\n    for i in l\n  \
    \      sum += i\n        if sum == 0\n            return true\n    return false\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function that tests whether a vector\
    \ contains all integers from 1 to n. For example, \n[1,2,3] contains all integers\
    \ from 1 to 3, and [1,2,4] does not."]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

name: HumanEval_43_pairs_sum_to_zero
language: jl
prompt: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n \
  \   it returns true if there are two distinct elements in the vector that\n    sum\
  \ to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n    false\n\
  \    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
  \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
  \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
  \ \n"
tests: "using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
  \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
  \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
  \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
  \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
  \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
completions: ["    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>",
  "    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n          \
    \  return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes an array of integers\
    \ and returns an array of the same length\nthat contains the number of pairs of\
    \ elements in the array that sum to zero.", "    sum = 0\n    for i in l\n   \
    \     sum += i\n        if sum == 0\n            return true\n    return false\n\
    end\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,5,0])\n</cell>\n\
    <code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([2,4,-5,3,5,7])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a vector of integers and returns true\
    \ if the vector has all unique elements and false otherwise.\nFor example, \n\
    [1,2,2,3,4] has all unique elements and \n[1,2,2,3,4] does not have all unique\
    \ elements.", "    sum = 0\n    for x in l\n        sum += x\n        if sum ==\
    \ 0 \n            return true\n    return false\nend\n</cell>\n<text>\nExercise\
    \ 4\nWrite a function that checks if a vector contains all integers from 1 to\
    \ n. \nFor example, \n[1,2,3] contains all integers from 1 to 3\n[1,2,4] contains\
    \ no integers\n[1,3,4] contains all integers from 1 to 4\n[1,3,4] contains no\
    \ integers\n[1,3,5] contains no integers\n[1,3,6] contains no integers\n[1,3,7]\
    \ contains no integers\n[1,3,8] contains no integers\n[1,3,9] contains no integers\n\
    [1,3,10] contains no integers\n[1,3,11] contains no integers\n[1,3,12] contains\
    \ no integers\n[1,3,13] contains no integers\n[1,3,14] contains no integers\n\
    [1,3,15] contains no integers\n[1,3,16] contains no integers\n[1,3,17] contains\
    \ no integers\n[1,3,18] contains no integers\n[1,3,19] contains no integers\n\
    [1,3,20] contains no integers\n[1,3,21] contains no integers\n[1,3,22] contains\
    \ no integers\n[1,3,23] contains no integers\n[1,3,24] contains no integers\n\
    [1,3,25] contains no integers\n[1,3,26] contains no integers\n[1,3,27] contains\
    \ no integers\n[1,3,28] contains no integers\n[1,3,29] contains no integers\n\
    [1,3,30] contains no integers\n[1,3,31] contains no integers\n[1,3,32] contains\
    \ no integers\n[1,3,33] contains no integers\n[1,3,34] contains no integers\n\
    [1,3,35] contains no integers\n[1,3,36] contains no integers\n[1,3,37] contains\
    \ no integers\n[1,3,38] contains no integers\n[1,3,39] contains no integers\n\
    [1,3,40] contains no integers\n[1,3,41] contains no integers\n[1,3,42] contains\
    \ no integers\n[1,3,43] contains no integers\n[1,3,44] contains no integers\n\
    [1,3,45] contains no integers\n[1,3,46] contains no integers\n[1,3,47] contains\
    \ no integers\n[1,3,48] contains no integers\n[1,3,49] contains no integers\n\
    [1,3,50] contains no integers\n[1,3,51] ", "    \n    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n", "    \n    sum = 0\n    for i in l\n        sum +=\
    \ i\n        if sum == 0\n            return true\n        end\n    end\n    return\
    \ false\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes as input a list of integers\
    \ and returns true if there are two distinct elements in the list that sum to\
    \ zero, and false otherwise.", "    sum = 0\n    for i in l\n        sum += i\n\
    \        if sum == 0\n            return true\n    return false\nend\n</cell>\n\
    <code language=julia-1.3>\npairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,2,3,7])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n\
    <code language=julia-1.3>\npairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 3\n\
    Write a function that returns the number of pairs in the given vector that sum\
    \ to zero.", "    \n    sum = 0\n    for i in l\n        sum += i\n        if\
    \ sum == 0\n            return true\n        end\n    end\n    return false\n\
    end\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>", "    \n    sum = 0\n    for i in l\n        sum += i\n        if sum\
    \ == 0\n            return true\n        end\n    end\n    return false\nend\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<text>\n\
    Question 3.2\nWrite a function called pairs_sum_to_zero that takes an array of\
    \ integers as an input.\nIt returns true if there are two distinct elements in\
    \ the array that sum to zero, and false otherwise.\nThe function should return\
    \ false if the array is empty.\nThe function should return false if the array\
    \ has only one element.\nThe function should return false if the array has two\
    \ or more elements.\nThe function should return true if the array has two or more\
    \ elements that sum to zero.\nThe function should return true if the array has\
    \ two or more elements that sum to zero.\nThe function should return true if the\
    \ array has two or more elements that sum to zero.\nThe function should return\
    \ true if the array has two or more elements that sum to zero.\nThe function should\
    \ return true if the array has two or more elements that sum to zero.\nThe function\
    \ should return true if the array has two or more elements that sum to zero.\n\
    The function should return true if the array has two or more elements that sum\
    \ to zero.\nThe function should return true if the array has two or more elements\
    \ that sum to zero.\nThe function should return true if the array has two or more\
    \ elements that sum to zero.\nThe function should return true if the array has\
    \ two or more elements that sum to zero.\nThe function should return true if the\
    \ array has two or more elements that sum to zero.\nThe function should return\
    \ true if the array has two or more elements that sum to zero.\nThe function should\
    \ return true if the array has two or more elements that sum to zero.\nThe function\
    \ should return true if the array has two or more elements that sum to zero.\n\
    The function should return true if the array has two or more elements that sum\
    \ to zero.\nThe function should return true if the array has two or more elements\
    \ that sum to zero.\nThe function should return true if the array has two or more\
    \ elements that sum to zero.\nThe function should return true if the array has\
    \ two or more elements that sum to zero.\nThe function should return true if the\
    \ array has two or more elements that sum to zero.\nThe function should return\
    \ true if the array has two or more elements that sum to zero.\nThe function should\
    \ return true if the array has two or more elements that sum to zero.\nThe function\
    \ should return true if the array has two or more elements that sum to zero.\n\
    The function should return true if the array has two or more elements that sum\
    \ to zero.\nThe function should return true if the array has two or more elements\
    \ that sum to zero.\nThe function should ", "    \n    sum = 0\n    for i in l\n\
    \        sum += i\n        if sum == 0\n            return true\n    return false\n\
    end\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,2,3])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,4,5])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,2,3,4,5,6])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,4,5,6,7])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,2,3,4,5,6,7,8])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,4,5,6,7,8,9])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,2,3,4,5,6,7,8,9,10])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,4,5,6,7,8,9,10,11])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,2,3,4,5,6,7,8,9,10,11,12])\n</cell>",
  "    l = sort(l)\n    pairs = zip(l[1:end-1], l[2:end])\n    pairs = filter(x ->\
    \ x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x\
    \ -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs =\
    \ filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n \
    \   pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0,\
    \ pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1]\
    \ == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x\
    \ -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs =\
    \ filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n \
    \   pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0,\
    \ pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1]\
    \ == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x\
    \ -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs =\
    \ filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n \
    \   pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0,\
    \ pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1]\
    \ == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x\
    \ -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs =\
    \ filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n \
    \   pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0,\
    \ pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1]\
    \ == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x\
    \ -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs =\
    \ filter(x -> x[1] == 0, pairs)\n    pair", "    \n    sum = 0\n    for i in l\n\
    \        sum += i\n        if sum == 0\n            return true\n    return false\n\
    end\n</cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,5,0])\n</cell>\n\
    <text>\nExercise 2\nWrite a function that checks if a vector has all positive\
    \ elements.\nThe function should return true if the vector has at least one positive\
    \ element, and false otherwise.\nThe function should work for both real and complex\
    \ numbers.", "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n", " \
    \   sum = 0\n    for i in l\n        sum += i\n        if sum == 0 \n        \
    \    return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ as input a vector of integers and returns true if the vector has all unique\
    \ elements and false otherwise.", "    sum = 0\n    for i in l\n        sum +=\
    \ i\n        if sum == 0\n            return true\n        end\n    end\n    return\
    \ false\nend", "    sum = 0\n    for x in l\n        sum += x\n        if sum\
    \ == 0\n            return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,", "    \n    sum = 0\n \
    \   for i in l\n        sum += i\n        if sum == 0\n            return true\n\
    \        end\n    end\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>", "    sum = 0\n\
    \    for i in l\n        sum += i\n        if sum == 0\n            return true\n\
    \        end\n    end\n    return false\nend\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,2,3,7])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n\
    <code language=julia-1.3>\npairs_sum_to_zero([1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7,0])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,2,3,7])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n\
    <code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([2,4,-5,3,5,7])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,2,3,7])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n\
    <code language=julia-1.3>\n", "    \n    sum = 0\n    for i in l\n        sum\
    \ += i\n    end\n    \n    sum == 0\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ as input a vector of integers and returns true if the vector contains any negative\
    \ integers, and false otherwise.\nThe function should work for both positive and\
    \ negative integers.\nThe function should work for both single and double digit\
    \ integers.\nThe function should work for both single and double digit integers\
    \ when the vector is empty.\nThe function should work for both single and double\
    \ digit integers when the vector has only one element.\nThe function should work\
    \ for both single and double digit integers when the vector has more than one\
    \ element.\nThe function should work for both single and double digit integers\
    \ when the vector has one or two elements.", "    sum = 0\n    for i in l\n  \
    \      sum += i\n        if sum == 0\n            return true\n    return false\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function that tests whether a vector\
    \ contains all integers from 1 to n. For example, \n[1,2,3] contains all integers\
    \ from 1 to 3, and [1,2,4] does not.", "    sum = 0\n    for i in l\n        sum\
    \ += i\n        if sum == 0\n            return true\n        end\n    end\n \
    \   return false\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ a list of numbers and returns the number of positive integers contained in the\
    \ list.", "    \n    pairs = zip(l, l[1:end-1]) \n    \n    pairs = filter(x ->\
    \ x[1] > 0, pairs)\n    \n    pairs = filter(x -> x[1] == 0, pairs)\n    \n  \
    \  pairs = filter(x -> x[1] < 0, pairs)\n    \n    pairs = filter(x -> x[1] >\
    \ 0, pairs)\n    \n    pairs = filter(x -> x[1] > 0, pairs)\n    \n    pairs =\
    \ filter(x -> x[1] > 0, pairs)\n    \n    pairs = filter(x -> x[1] > 0, pairs)\n\
    \    \n    pairs = filter(x -> x[1] > 0, pairs)\n    \n    pairs = filter(x ->\
    \ x[1] > 0, pairs)\n    \n    pairs = filter(x -> x[1] > 0, pairs)\n    \n   \
    \ pairs = filter(x -> x[1] > 0, pairs)\n    \n    pairs = filter(x -> x[1] > 0,\
    \ pairs)\n    \n    pairs = filter(x -> x[1] > 0, pairs)\n    \n    pairs = filter(x\
    \ -> x[1] > 0, pairs)\n    \n    pairs = filter(x -> x[1] > 0, pairs)\n    \n\
    \    pairs = filter(x -> x[1] > 0, pairs)\n    \n    pairs = filter(x -> x[1]\
    \ > 0, pairs)\n    \n    pairs = filter(x -> x[1] > 0, pairs)\n    \n    pairs\
    \ = filter(x -> x[1] > 0, pairs)\n    \n    pairs = filter(x -> x[1] > 0, pairs)\n\
    \    \n    pairs = filter(x -> x[1] > 0, pairs)\n    \n    pairs = filter(x ->\
    \ x[1] > 0, pairs)\n    \n    pairs = filter(x -> x[1] > 0, pairs)\n    \n   \
    \ pairs = filter(x -> x[1] > 0, pairs)\n    \n    pairs = filter(x -> x[1] > 0,\
    \ pairs)\n    \n    pairs = filter(x -> x[1] > 0, pairs)\n    \n    pairs = filter(x\
    \ -> x[1] > 0, pairs)\n    \n    pairs = filter(x -> x[1] > 0, pairs)\n    \n\
    \    pairs = filter(x -> x[1] > 0, pairs)\n    \n    pairs = filter(x -> x[1]\
    \ > 0, pairs)\n    \n    pairs = filter(x -> x[1] > 0, pairs)\n    \n    pairs\
    \ = filter(x -> x[1] > 0, pairs)\n    \n    pairs = filter(x -> x[1] > 0, pairs)\n\
    \    \n    pairs = filter(x -> x[1] > 0, pairs)\n    \n    pairs = filter(x ->\
    \ x[1] > 0, pairs)\n    \n    pairs = filter(x -> x[1]", "    \n    sum = 0\n\
    \    for i in l\n        sum += i\n        if sum == 0\n            return true\n\
    \        end\n    end\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ takes a list of integers and returns a list of all unique pairs of integers\
    \ in the list. \nFor example, given [1,2,3], return [[1,2],[1,3],[2,3]].", " \
    \   \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n   \
    \         return true\n        end\n    end\n    return false\nend\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 2\n\
    Write a function that checks if a vector has all elements equal to zero. \nThe\
    \ function should take an input vector as an argument.\nThe function should return\
    \ true if the vector has all elements equal to zero, and false otherwise.\nThe\
    \ function should work for vectors of any length.\nFor example, \n>>> all_zeros([1,3,5,0])\n\
    true\n>>> all_zeros([1,3,-2,1])\nfalse\n>>> all_zeros([1,2,3,7])\nfalse\n>>> all_zeros([2,4,-5,3,5,7])\n\
    true\n>>> all_zeros([1])\nfalse\n>>> all_zeros([1,2])\nfalse\n>>> all_zeros([1,-2,3])\n\
    false\n>>> all_zeros([1,-3,2])\nfalse\n>>> all_zeros([1,-3,-2])\nfalse\n>>> all_zeros([1,-3,-2,4])\n\
    false\n>>> all_zeros([1,-3,-2,4,5])\nfalse\n>>> all_zeros([1,-3,-2,4,5,6])\nfalse\n\
    >>> all_zeros([1,-3,-2,4,5,6,7])\nfalse\n>>> all_zeros([1,-3,-2,4,5,6,7,8])\n\
    false\n>>> all_zeros([1,-3,-2,4,5,6,7,8,9])\nfalse\n>>> all_zeros([1,-3,-2,4,5,6,7,8,9,10])\n\
    false\n>>> all_zeros([1,-3,-2,4,5,6,7,8,9,10,11])\nfalse\n>>> all_zeros([1,-3,-2,4,5,6,7,8,9,10,11,12])\n\
    false\n>>> all_zeros([1,-3,-2,4,5,6,7,8,9,10,11,12,13])\nfalse\n>>> all_zeros([1,-3,-2,4,5,6,7,8,9,10,11,12,13,14])\n\
    false\n>>> all_zeros([1,-3,-2,4,5,6,7,8,9,10,11,12,13,14,15])\nfalse\n>>> all_zeros([1,-3,-2,4,5,6,7,8,9,10,11,12,13,14,15,16])\n\
    false\n>>> all_zeros([1,-3,", "    \n    sum = 0\n    for i in l\n        sum\
    \ += i\n        if sum == 0\n            return true\n        end\n    end\n \
    \   return false\nend", "    \n    sum = 0\n    for i in l\n        sum += i\n\
    \        if sum == 0\n            return true\n        end\n    end\n    return\
    \ false\nend\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>", "    sum = 0\n    for i in l\n      \
    \  sum += i\n        if sum == 0\n            return true\n    return false\n\
    end\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that checks if a vector contains all integers from\
    \ 1 to n (inclusive).", "    l = sort(l)\n    \n    if length(l) == 0 \n     \
    \   return false\n    end\n    \n    \n    \n    if l[1] == 0\n        return\
    \ true\n    end\n    \n    if l[end] == 0\n        return true\n    end\n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    l = sort(l)\n\
    \    sum = 0\n    for i in l\n        sum += i\n        if sum == 0 \n       \
    \     return true\n        end\n    end\n    return false\nend\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<text>\nQuestion\
    \ 3\nWrite a function that returns true if the given vector contains any zero\n\
    elements, and false otherwise.\nFor example, \n[0, 0, 0, 0] returns true\n[0,\
    \ 0, 0, 0, 0] returns false\n[0, 0, 0, 0, 0, 1] returns false\n[0, 0, 0, 0, 1,\
    \ 0] returns false\n[0, 0, 0, 0, 1, 1] returns true\n[0, 0, 0, 0, 1, 2] returns\
    \ false\n[0, 0, 0, 0, 1, 2, 3] returns false\n[0, 0, 0, 0, 1, 2, 3, 4] returns\
    \ false\n[0, 0, 0, 0, 1, 2, 3, 4, 5] returns false\n[0, 0, 0, 0, 1, 2, 3, 4, 5,\
    \ 6] returns false\n[0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7] returns false\n[0, 0, 0,\
    \ 0, 1, 2, 3, 4, 5, 6, 7, 8] returns false\n[0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9] returns false\n[0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0] returns false\n\
    [0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1] returns false\n[0, 0, 0, 0, 1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 0, 2] returns false\n[0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 0, 3] returns false\n[0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 4] returns\
    \ false\n[0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 5] returns false\n[0, 0, 0,\
    \ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 6] returns false\n[0, 0, 0, 0, 1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 0, 7] returns false\n[0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 0, 8] returns false\n[0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 9] returns false\n\
    [0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10] returns false\n[0, 0, 0, 0, 1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 0, 11] returns false\n[0, 0, 0, 0, 1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 0, 12] returns false\n[0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 13]\
    \ returns false\n[0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 14] returns false\n\
    [0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 15] returns false\n[0, 0, 0, 0, 1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 0, 16] returns false\n[0, 0, 0, 0, 1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 0, 17] returns false\n[0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 18]\
    \ returns false\n[0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 19] returns false\n\
    [0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 20] returns false\n[0, 0, 0, 0, 1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 0, 21] returns false\n[0, 0, 0, 0, 1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 0, 22] returns false\n[0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 23]\
    \ returns false\n[0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 24] returns false\n\
    [0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 25] returns false\n[0, 0, 0, 0, 1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 0, 26] returns false\n[0, 0, 0, 0, 1, 2, 3, 4, 5, ",
  "    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n    \
    \        return true\n        end\n    end\n    return false\nend\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,2])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,2])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,5,2,4])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,5,2,4,6])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,5,2,4,6,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,5,2,4,6,7,8])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,5,2,4,6,7,8,9])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,5,2,4,6,7,8,9,10])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,5,2,4,6,7,8,9,10,11])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,5,2,4,6,7,8,9,10,11,12])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,5,2,4,6,7,8,9,10,11,12,13])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,5,2,4,6,7,8,9,10,11,12,13,14])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,5,2,4,6,7,8,9,10,11,12,13,14,15])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,5,2,4,6,7,8,9,10,11,12,13,14,15,16])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,5,2,4,6,7,", "    sum\
    \ = 0\n    for i in l\n        sum += i\n        if sum == 0\n            return\
    \ true\n    return false\nend", "    sum = 0\n    for i in l\n        sum += i\n\
    \        if sum == 0\n            return true\n    return false\nend\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>", "    \n    sum = 0\n    for i in l\n        sum += i\n\
    \    end\n    \n    sum == 0\nend\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,5,0])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,2])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,5])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,5,0])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,5,0,0])\n</cell>\n\
    <code language=julia-1.3>\npairs_sum_to_zero([1,3,5,0,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,5,0,2])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,5,0,3])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,5,0,4])\n</cell>\n\
    <code language=julia-1.3>\npairs_sum_to_zero([1,3,5,0,5])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,5,0,6])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,5,0,7])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,5,0,8])\n</cell>\n\
    <code language=julia-1.3>\npairs_sum_to_zero([1,3,5,0,9])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,5,0,10])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,5,0,11])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,5,0,12])\n</cell>\n\
    <code language=julia-1.3>\npairs_sum_to_zero([1,3,5,0,13])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,5,0,14])\n</cell>\n<code language=julia-1.3>\npairs_sum",
  "    \n    l = sort(l)\n    \n    pairs = Dict{Int64, Int64}()\n    \n    for x\
    \ in l\n        pairs[x] = pairs[x] + 1 if pairs[x] > 0 else 0\n    end\n    \n\
    \    for x in pairs\n        if pairs[x] == 0\n            return false\n    \
    \    end\n    end\n    return true\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-5,0])\n</cell>\n", "    sum = 0\n    for x in l\n    \
    \    sum += x\n        if sum == 0\n            return true\n    return false\n\
    end", "    \n    sum = 0\n    for i in l\n        sum += i\n        if sum ==\
    \ 0\n            return true\n        end\n    end\n    return false\nend\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 2\n\
    Write a function that checks if a vector has all elements equal to zero. \nFor\
    \ example, \n[0,0,0,0] is true\n[0,0,0,0,0] is false\n[0,1,0,0,0] is false\n[0,0,0,0,0]\
    \ is false\n[0,0,0,0,0] is false\n[0,0,0,0,0] is false\n[0,0,0,0,0] is false\n\
    [0,0,0,0,0] is false\n[0,0,0,0,0] is false\n[0,0,0,0,0] is false\n[0,0,0,0,0]\
    \ is false\n[0,0,0,0,0] is false\n[0,0,0,0,0] is false\n[0,0,0,0,0] is false\n\
    [0,0,0,0,0] is false\n[0,0,0,0,0] is false\n[0,0,0,0,0] is false\n[0,0,0,0,0]\
    \ is false\n[0,0,0,0,0] is false\n[0,0,0,0,0] is false\n[0,0,0,0,0] is false\n\
    [0,0,0,0,0] is false\n[0,0,0,0,0] is false\n[0,0,0,0,0] is false\n[0,0,0,0,0]\
    \ is false\n[0,0,0,0,0] is false\n[0,0,0,0,0] is false\n[0,0,0,0,0] is false\n\
    [0,0,0,0,0] is false\n[0,0,0,0,0] is false\n[0,0,0,0,0] is false\n[0,0,0,0,0]\
    \ is false\n[0,0,0,0,0] is false\n[0,0,0,0,0] is false\n[0,0,0,0,0] is false\n\
    [0,0,0,0,0] is false\n[0,0,0,0,0] is false\n[0,0,0,0,0] is false\n[0,0,0,0,0]\
    \ is false\n[0,0,0,0,0] is false\n[0,0,0,0,0] is false\n[0,0,0,0,0] is false\n\
    [0,0,0,0,0] is false\n[0,0,0,0,0] is false\n[0,0,0,0,0] is false\n[0,0,0,0,0]\
    \ is false\n[0,0,0,0,0] is false\n[0,0,0,0,0] is false\n[0,0,0,0,0] is false\n\
    [0,0,0,0,0] is false\n[0,0,0,0,0] is false\n[0,0,0,0,0] is false\n[0,0,0,0,0]\
    \ is false\n[0,0,0,0,0] is false\n[0,0,0,0,0] is false\n[0,0,0,0,0] is false\n\
    [0,0,0,0,0] is false\n[0,0,0,0,0] is false\n[0,0,0,0,0] is false\n[0,0,0,0,0]\
    \ is ", "    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n        end\n    end\n    return false\nend\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 2\n\
    Write a function that takes in a list of integers and returns true if the list\
    \ contains at least one pair of integers that sum to zero.", "    sum = 0\n  \
    \  for i in l\n        sum += i\n        if sum == 0\n            return true\n\
    \    return false\nend", "    sum = 0\n    for i in l\n        sum += i\n    \
    \    if sum == 0\n            return true\n    return false\nend\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes an array of integers as an input, and returns\
    \ true if there are two distinct elements in the array that sum to zero, and false\
    \ otherwise.", "    sum = 0\n    for i in l\n        sum += i\n        if sum\
    \ == 0\n            return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>",
  "    sum = 0\n    for i in l\n        sum += i\n        if sum == 0 \n         \
    \   return true\n        end\n    end\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes an array of integers and returns the number of pairs of integers in the\
    \ array that sum to zero.", "    sum = 0\n    for i in l\n        sum += i\n \
    \       if sum == 0\n            return true\n    return false\nend\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 2\n\
    Write a function that takes a vector of integers as an input, and returns true\
    \ if the vector has all unique elements, and false otherwise.\nFor example, \n\
    [1,2,2,3,4] returns true\n[1,2,2,3,4] returns false\n[1,2,2,3] returns false\n\
    [1,2,2,3] returns true\n[1,2,2,3] returns false\n[1,2,2,3,4] returns true\n[1,2,2,3,4]\
    \ returns false\n[1,2,2,3,4] returns true\n[1,2,2,3,4] returns false\n[1,2,2,3,4]\
    \ returns true\n[1,2,2,3,4] returns false\n[1,2,2,3,4] returns true\n[1,2,2,3,4]\
    \ returns false\n[1,2,2,3,4] returns true\n[1,2,2,3,4] returns false\n[1,2,2,3,4]\
    \ returns true\n[1,2,2,3,4] returns false\n[1,2,2,3,4] returns true\n[1,2,2,3,4]\
    \ returns false\n[1,2,2,3,4] returns true\n[1,2,2,3,4] returns false\n[1,2,2,3,4]\
    \ returns true\n[1,2,2,3,4] returns false\n[1,2,2,3,4] returns true\n[1,2,2,3,4]\
    \ returns false\n[1,2,2,3,4] returns true\n[1,2,2,3,4] returns false\n[1,2,2,3,4]\
    \ returns true\n[1,2,2,3,4] returns false\n[1,2,2,3,4] returns true\n[1,2,2,3,4]\
    \ returns false\n[1,2,2,3,4] returns true\n[1,2,2,3,4] returns false\n[1,2,2,3,4]\
    \ returns true\n[1,2,2,3,4] returns false\n[1,2,2,3,4] returns true\n[1,2,2,3,4]\
    \ returns false\n[1,2,2,3,4] returns true\n[1,2,2,3,4] returns false\n[1,2,2,3,4]\
    \ returns true\n[1,2,2,", "    l = sort(l)\n    sum = 0\n    for i in l\n    \
    \    sum += i\n        if sum == 0\n            return true\n        end\n   \
    \ end\n    return false\nend\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes as input a vector of integers and returns true if the vector has all unique\
    \ elements and false otherwise.", "    l = sort(l)\n    pairs = zip(l[1:end-1],\
    \ l[2:end])\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x ->\
    \ x[1] != 0, pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs =\
    \ filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n\
    \    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] !=\
    \ x[2], pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x\
    \ -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs\
    \ = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n\
    \    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] !=\
    \ x[2], pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x\
    \ -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs\
    \ = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n\
    \    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] !=\
    \ x[2], pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x\
    \ -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs\
    \ = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n\
    \    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] !=\
    \ x[2], pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x\
    \ -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs\
    \ = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n\
    \    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] !=\
    \ x[2], pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x\
    \ -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n    pair",
  "    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n          \
    \  return true\n    return false\nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes an integer as an input and returns the number of positive integers\
    \ less than or equal to that integer.", "    l = sort(l)\n    sum = 0\n    for\
    \ i in l\n        sum += i\n        if sum == 0\n            return true\n   \
    \     end\n    end\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n", "    sum = 0\n    for\
    \ i in l\n        sum += i\n        if sum == 0\n            return true\n   \
    \ return false\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,\
    \ 3, 5, 0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1, 3, -2,\
    \ 1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1, 2, 3, 7])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([-1, -2, 3, -4, -5, -6, -7, -8])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([-1, -2, 3, -4, -5, -6, -7, -8, 0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([-1, -2, 3, -4, -5, -6, -7, -8, 0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([-1, -2, 3, -4, -5, -6, -7, -8, 0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([-1, -2, 3, -4, -5, -6, -7, -8, 0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([-1, -2, 3, -4, -5, -6, -7, -8, 0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([-1, -2, 3, -4, -5, -6, -7, -8, 0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([-1, -2, 3, -4, -5, -6, -7, -8, 0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([-1, -2, 3, -4, -5, -6, -7, -8, 0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([-1, -2, 3, -4, -5, -6, -7, -8, 0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([-1, -2, 3, -4, -5, -6, -7, -8, 0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([-1, -2, 3, -4, -5, -6, -7, -8, 0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([-1, -2, 3, -4, -5, -6, -7, -8, 0])\n</cell>\n<code language=julia-",
  "    l = sort(l)\n    l = l[1..end]\n    \n    if l[1] == 0\n        return true\n\
    \    end", "    \n    sum = 0\n    for i in l\n        sum += i\n        if sum\
    \ == 0\n            return true\n        end\n    end\n    return false\nend\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes an array of integers as an input, and\
    \ returns true if the array contains any negative integers, and false otherwise.\n\
    For example, \n[1,2,-3,-4,-5,6] should return true.\n[1,2,3,4,5,6] should return\
    \ false.\n[1,2,-3,-4,-5,6,7] should return false.\n[1,2,3,4,5,6,7] should return\
    \ true.\n[1,2,3,4,5,6,7,8] should return false.\n[1,2,3,4,5,6,7,8,9] should return\
    \ false.\n[1,2,3,4,5,6,7,8,9,0] should return false.\n[1,2,3,4,5,6,7,8,9,0,1]\
    \ should return true.\n[1,2,3,4,5,6,7,8,9,0,-1] should return false.\n[1,2,3,4,5,6,7,8,9,0,-1]\
    \ should return false.\n[1,2,3,4,5,6,7,8,9,0,-1] should return false.\n[1,2,3,4,5,6,7,8,9,0,-1]\
    \ should return false.\n[1,2,3,4,5,6,7,8,9,0,-1] should return false.\n[1,2,3,4,5,6,7,8,9,0,-1]\
    \ should return false.\n[1,2,3,4,5,6,7,8,9,0,-1] should return false.\n[1,2,3,4,5,6,7,8,9,0,-1]\
    \ should return false.\n[1,2,3,4,5,6,7,8,9,0,-1] should return false.\n[1,2,3,4,5,6,7,8,9,0,-1]\
    \ should return false.\n[1,2,3,4,5,6,7,8,9,0,-1] should return false.\n[1,2,3,4,5,6,7,8,9,0,-1]\
    \ should return false.\n[1,2,3,4,5,6,7,8,9,0,-1] should return false.\n[1,2,3,4,5,6,7,8,9,0,-1]\
    \ should return false.\n[1,2,3,4,5,6,7,8,9,0,-1] should return false.\n[1,2,3,4,5,6,7,8,9,0,-1]\
    \ should return false.\n[1,2,3,4,5,6,7,8,9,0,-1] should return false.\n[1,2,3,4,5,6,7,8,9,0,-1]\
    \ should return false.\n[1,2,3,4,5,6,7,8,9,0,-1] should return false.\n[1,2,3,4,5,6,7,8,9,0,-1]\
    \ should return false.\n[1,2,3,4,5,6,7,8,9,0,-1] should return false.\n[1,2,3,4,5,6,7,",
  "    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n    \
    \        return true\n        end\n    end\n    return false\nend\n</cell>\n<text>\n\
    Exercise 4\nWrite a function that takes in a list of integers and returns the\
    \ number of pairs in the list that sum to zero.", "    sum = 0\n    for i in l\n\
    \        sum += i\n        if sum == 0\n            return true\n    return false\n\
    end\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,", "    sum = 0\n \
    \   for i in l\n        sum += i\n        if sum == 0\n            return true\n\
    \    return false\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the number of pairs\
    \ in the given vector that sum to zero.", "    \n    l = sort(l)\n    \n    if\
    \ l[1] == 0\n        return true\n    end\n    \n    if l[2] == 0\n        return\
    \ true\n    end\n    \n    if l[1] == l[2]\n        return false\n    end\n  \
    \  \n    if l[1] > l[2]\n        return pairs_sum_to_zero(l[1:end-1])\n    end\n\
    \    \n    return pairs_sum_to_zero(l[2:end])\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,1])\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the number of elements\
    \ in a vector that are less than a given value.", "    sum = 0\n    for i in l\n\
    \        sum += i\n        if sum == 0\n            return true\n    return false\n\
    end\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>", "    \n    sum = 0\n    for i in l\n    \
    \    sum += i\n        if sum == 0\n            return true\n        end\n   \
    \ end\n    return false\nend\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,5,0])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that checks if a vector has all\
    \ positive elements and returns true if it does, and false otherwise.", "    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n", "    sum = 0\n    for i in\
    \ l\n        sum += i\n        if sum == 0\n            return true\n    return\
    \ false\nend\n</cell>\n<text>\nExercise 2\nWrite a function that checks if a vector\
    \ contains all integers from 1 to n (both included).", "    \n    sum = 0\n  \
    \  for i in l\n        sum += i\n        if sum == 0\n            return true\n\
    \        end\n    end\n    return false\nend\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that takes a list of numbers as an input, and returns a list of all\
    \ numbers in the list that do not sum to zero.", "    \n    sum = 0\n    for x\
    \ in l\n        sum += x\n        if sum == 0 \n            return true\n    return\
    \ false\nend", "    sum = 0\n    for i in l\n        sum += i\n        if sum\
    \ == 0\n            return true\n        end\n    end\n    return false\nend\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a vector of integers as an input.\nIt\
    \ returns true if the vector has all positive elements, and false otherwise.\n\
    For example, \n>>> positive_elements([1, 3, -5, -7, 0])\ntrue\n>>> positive_elements([1,\
    \ 3, -5, -7, 0])\nfalse\n>>> positive_elements([1, 3, -5, -7, 0])\nfalse\n>>>\
    \ positive_elements([1, 3, -5, -7, 0])\nfalse\n>>> positive_elements([1, 3, -5,\
    \ -7, 0])\nfalse\n>>> positive_elements([1, 3, -5, -7, 0])\nfalse\n>>> positive_elements([1,\
    \ 3, -5, -7, 0])\nfalse\n>>> positive_elements([1, 3, -5, -7, 0])\nfalse\n>>>\
    \ positive_elements([1, 3, -5, -7, 0])\nfalse\n>>> positive_elements([1, 3, -5,\
    \ -7, 0])\nfalse\n>>> positive_elements([1, 3, -5, -7, 0])\nfalse\n>>> positive_elements([1,\
    \ 3, -5, -7, 0])\nfalse\n>>> positive_elements([1, 3, -5, -7, 0])\nfalse\n>>>\
    \ positive_elements([1, 3, -5, -7, 0])\nfalse\n>>> positive_elements([1, 3, -5,\
    \ -7, 0])\nfalse\n>>> positive_elements([1, 3, -5, -7, 0])\nfalse\n>>> positive_elements([1,\
    \ 3, -5, -7, 0])\nfalse\n>>> positive_elements([1, 3, -5, -7, 0])\nfalse\n>>>\
    \ positive_elements([1, 3, -5, -7, 0])\nfalse\n>>> positive_elements([1, 3, -5,\
    \ -7, 0])\nfalse\n>>> positive_elements([1, 3, -5, -7, 0])\nfalse\n>>> positive_elements([1,\
    \ 3, -5, -7, 0])\nfalse\n>>> positive_elements([1, 3, -5, -7, 0])\nfalse\n>>>\
    \ positive_elements([1, 3, -5, -7, 0])\nfalse\n>>> positive_elements([1, 3, -5,\
    \ -7, 0])\nfalse\n>>> positive_", "    sum = 0\n    for i in l\n        sum +=\
    \ i\n        if sum == 0\n            return true\n    return false\nend\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes as input a vector of integers and returns true\
    \ if there are two distinct elements in the vector that sum to zero, and false\
    \ otherwise.", "    sum = 0\n    for i in l\n        sum += i\n        if sum\
    \ == 0\n            return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>",
  "    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n    \
    \        return true\n        end\n    end\n    return false\nend\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<text>\n4.3 The function\
    \ count_zero", "    sum = 0\n    for i in l\n        sum += i\n        if sum\
    \ == 0 \n            return true\n    return false\nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes a list of integers and returns true if all elements\
    \ are distinct, and false otherwise.", "    sum = 0\n    for i in l\n        sum\
    \ += i\n        if sum == 0\n            return true\n        end\n    end\n \
    \   return false\nend", "    sum = 0\n    for i in l\n        sum += i\n     \
    \   if sum == 0 \n            return true\n        end\n    end\n    return false\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function that takes a list of integers\
    \ and returns the number of integers in the list that sum to zero.", "    \n \
    \   sum = 0\n    for i in l\n        sum += i\n        if sum == 0 \n        \
    \    return true\n        sum -= i\n    end\n    return false\nend\n</cell>\n\
    <code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])", "    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    sum = 0\n    for\
    \ x in l\n        sum += x\n        if sum == 0\n            return true\n   \
    \     end\n    end\n    return false\nend", "    \n    \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n", "    \n    l = sort(l)\n    \n    if l[1] == 0\n \
    \       return true\n    end\n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    ", "    l = sort(l)\n    \n    sum = 0\n    for i\
    \ in l\n        sum += i\n        if sum == 0\n            return true\n     \
    \   end\n    end\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ returns true if the given vector has all positive elements, and false otherwise.",
  "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    sum = 0\n    for\
    \ i in l\n        sum += i\n        if sum == 0\n            return true\n   \
    \ return false\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>", "    sum =\
    \ 0\n    for i in l\n        sum += i\n        if sum == 0\n            return\
    \ true\n    return false\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes as input a vector of\
    \ integers and returns true if the vector has two distinct elements that sum to\
    \ zero, and false otherwise.", "    \n    \n    \n    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n", "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n", " \
    \   sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n         \
    \   return true\n    return false\nend", "    \n    l = sort(l)\n    \n    sum\
    \ = 0\n    for i in l\n        sum += i\n    end\n    \n    \n    for i in l\n\
    \        if sum == 0 \n            return false\n        end\n        \n     \
    \   sum += i\n    end\n    \n    return true\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ checks if a vector contains all integers from 1 to n (both included).", "  \
    \  \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n    \
    \        return true\n        end\n    end\n    return false\nend\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 2\n\
    Write a function that returns the number of pairs in the given vector that sum\
    \ to zero.", "    \n    sum = 0\n    for i in l\n        sum += i\n        if\
    \ sum == 0\n            return true\n        end\n    end\n    return false\n\
    end\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1])\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes as input a vector of\
    \ integers and returns true if the vector contains any negative integers, and\
    \ false otherwise.", "    sum = 0\n    for i in l\n        sum += i\n        if\
    \ sum == 0\n            return true\n    return false\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes a list of integers and returns true if\
    \ there are two distinct elements in the list that sum to zero, and false otherwise.",
  "    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n          \
    \  return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>", "    \n  \
    \  sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n          \
    \  return true\n        end\n    end\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>", "    sum = 0\n\
    \    for i in l\n        sum += i\n        if sum == 0\n            return true\n\
    \    return false\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,1])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,1])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,1])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,1])\n</cell>\n\
    <code language=juli", "    sum = 0\n    for i in l\n        sum += i\n       \
    \ if sum == 0\n            return true\n    return false\nend\n</cell>\n<code\
    \ language=julia-1.4>\npairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.4>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,2,3,7])\n\
    </cell>\n<code language=julia-1.4>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n\
    <code language=julia-1.4>\npairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 3\n\
    Write a function that takes a vector of integers as an input, and returns true\
    \ if the vector has all unique elements, and false otherwise.\nFor example, \n\
    [1,2,2,3,3] returns true\n[1,2,2,3,4] returns false\n[1,2,2,3,3] returns false\n\
    [1,2,2,3,4] returns false\n[1,2,2,3,5] returns false\n[1,2,2,3,5] returns false\n\
    [1,2,2,3,5] returns false\n[1,2,2,3,5] returns false\n[1,2,2,3,5] returns false\n\
    [1,2,2,3,5] returns false\n[1,2,2,3,5] returns false\n[1,2,2,3,5] returns false\n\
    [1,2,2,3,5] returns false\n[1,2,2,3,5] returns false\n[1,2,2,3,5] returns false\n\
    [1,2,2,3,5] returns false\n[1,2,2,3,5] returns false\n[1,2,2,3,5] returns false\n\
    [1,2,2,3,5] returns false\n[1,2,2,3,5] returns false\n[1,2,2,3,5] returns false\n\
    [1,2,2,3,5] returns false\n[1,2,2,3,5] returns false\n[1,2,2,3,5] returns false\n\
    [1,2,2,3,5] returns false\n[1,2,2,3,5] returns false\n[1,2,2,3,5] returns false\n\
    [1,2,2,3,5] returns false\n[1,2,2,3,5] returns false\n[1,2,2,3,5] returns false\n\
    [1,2,2,3,5] returns false\n[1,2,2,3,5] returns false\n[1,2,2,3,5] returns false\n\
    [1,2,2,3,5] returns false\n[1,2,2,3,5] returns false\n[1,2,2,3,5] returns false\n\
    [1,2,2,3,5] returns false\n[1,2,2,3,5] returns false\n[1,2,2,3,5] returns false\n\
    [1,2,2,3,5] returns ", "    sum = 0\n    for x in l\n        sum += x\n      \
    \  if sum == 0 \n            return true\n    return false\nend", "    sum = 0\n\
    \    for i in l\n        sum += i\n        if sum == 0\n            return true\n\
    \    return false\nend\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a vector of integers as an input, and returns true if the vector has all unique\
    \ elements, and false otherwise.\nFor example, \n[1, 1, 2] has all unique elements,\
    \ so it returns true.\n[1, 3, 2] has all unique elements, so it returns true.\n\
    [1, 2, 3] has all unique elements, so it returns false.", "    sum = 0\n    for\
    \ i in l\n        sum += i\n        if sum == 0\n            return true\n   \
    \ return false\nend", "    \n    sum = 0\n    for i in l\n        sum += i\n \
    \       if sum == 0\n            return true\n        end\n    end\n    return\
    \ false\nend", "    \n    l = sort(l)\n    \n    if length(l) == 0 \n        return\
    \ false\n    end\n    \n    if l[1] == 0\n        return true\n    end\n    \n\
    \    if l[end] == 0\n        return true\n    end\n    \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    sum = 0\n    for\
    \ i in l\n        sum += i\n        if sum == 0\n            return true\n   \
    \     end\n    end\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-5,0])\n</cell>\n<text>\nExercise 4\nWrite a function that\
    \ checks if a vector contains all integers from 1 to n. \nFor example, \n[1,2,3]\
    \ contains all integers from 1 to 3, and [1,2,4] does not.", "    \n    sum =\
    \ 0\n    for i in l\n        sum += i\n        if sum == 0\n            return\
    \ true\n        end\n    end\n    return false\nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes a vector of integers as an input, and returns\
    \ true if the vector has all positive elements, and false otherwise.\nFor example,\
    \ \n[1,2,3] has all positive elements, and \n[-1,2,3] has all negative elements.\n\
    The function should return false for [1,2,3], and true for [-1,2,3].\nThe function\
    \ should work for both positive and negative integers.\nThe function should work\
    \ for vectors of any length.", "    sum = 0\n    for i in l\n        sum += i\n\
    \        if sum == 0\n            return true\n    return false\nend\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that checks if a vector contains all integers from 1 to\
    \ n. \nFor example, \n[1,2,3] contains all integers from 1 to 3.\n[1,2,4] does\
    \ not contain all integers from 1 to 3.\n[1,2,3] contains all integers from 1\
    \ to 2.\n[1,2,4] does not contain all integers from 1 to 2.\n[1,2,3] contains\
    \ all integers from 1 to 1.\n[1,2,4] does not contain all integers from 1 to 1.\n\
    [1,2,3] contains all integers from 0 to 3.\n[1,2,4] does not contain all integers\
    \ from 0 to 3.\n[1,2,3] contains all integers from 0 to 2.\n[1,2,4] does not contain\
    \ all integers from 0 to 2.\n[1,2,3] contains all integers from 0 to 1.\n[1,2,4]\
    \ does not contain all integers from 0 to 1.\n[1,2,3] contains all integers from\
    \ 0 to 3.\n[1,2,4] does not contain all integers from 0 to 3.\n[1,2,3] contains\
    \ all integers from 0 to 2.\n[1,2,4] does not contain all integers from 0 to 2.\n\
    [1,2,3] contains all integers from 0 to 1.\n[1,2,4] does not contain all integers\
    \ from 0 to 1.\n[1,2,3] contains all integers from 0 to 3.\n[1,2,4] does not contain\
    \ all integers from 0 to 3.\n[1,2,3] contains all integers from 0 to 2.\n[1,2,4]\
    \ does not contain all integers from 0 to 2.\n[1,2,3] contains all integers from\
    \ 0 to 1.\n[1,2,4] does not contain all integers from 0 to 1.\n[1,2,3] contains\
    \ all integers from 0 to 3.\n[1,2,4] does not contain all integers from 0 to 3.\n\
    [1,2,3] contains all integers from 0 to 2.\n[1,2,4] does not contain all integers\
    \ from 0 to 2.\n[1,2,3] contains all integers from 0 to 1.\n[1,2,4] does not contain\
    \ all integers from 0 to 1.\n[1,2,3] contains all integers from 0 to 3.\n[1,2,4]\
    \ does not contain all integers from 0 to 3.\n[1,2,3] contains all integers from\
    \ 0 to 2.\n[1,2,4] does not contain all integers from 0 to 2.\n[1,2,3] contains\
    \ all integers from 0 to 1.\n[1,2,4] does not contain all integers from 0 to 1.\n\
    [1,2,3] contains all integers from 0 to 3.\n[1,2,4] does not contain all integers\
    \ from 0 to 3.\n[1,2,3] contains all integers from 0 to 2.\n[1,2,4] does not contain\
    \ all integers from 0 to 2.\n[1,2,", "    sum = 0\n    for i in l\n        sum\
    \ += i\n        if sum == 0 \n            return true\n    return false\nend\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes an array of integers and returns an array\
    \ of integers representing the number of times each unique number appears in the\
    \ array.", "    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\
    \ \n            return true\n    return false\nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes a list of integers and returns a list of all\
    \ positive integers less than the largest element in the list.", "    \n    sum\
    \ = 0\n    for i in l\n        sum += i\n        if sum == 0\n            return\
    \ true\n        end\n    end\n    return false\nend\n</cell>\n<text>\nExercise\
    \ 4\nWrite a function that checks if a vector has all elements equal, except for\
    \ one. For example, vec([1]) should return false, but vec([1]; [2]) should return\
    \ true.", "    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\
    \ \n            return true\n    return false\nend\n</cell>\n<code language=julia-1.0>\n\
    pairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.0>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.0>\n\
    pairs_sum_to_zero([1])\n</cell>\n<text>\n4.3 Exercise\nWrite a function that returns\
    \ the number of pairs in the given vector that sum to zero.", "    sum = 0\n \
    \   for x in l\n        sum += x\n        if sum == 0 \n            return true\n\
    \    return false\nend", "    sum = 0\n    for x in l\n        sum += x\n    \
    \    if sum == 0\n            return true\n    return false\nend\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that checks if a vector has all positive elements and returns\
    \ true if it does, and false if it does not. Test it on some vectors.", "    l\
    \ = sort(l)\n    \n    pairs = zip(l[1:end-1], l[2:end])\n    \n    sum = 0\n\
    \    for pair in pairs\n        sum += pair[1]\n        if sum == 0\n        \
    \    return true\n        end\n    end\n    return false\nend\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<code language=julia-1.5>",
  "    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n          \
    \  return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1])\n\
    </cell>\n<text>\nExercise 3\nWrite a function that checks if a vector contains\
    \ all integers from 1 to n. \nFor example, \n[1,2,3,4,5,6,7,8,9,10] contains all\
    \ integers from 1 to 10. \n[1,2,3,4,5,6,7,8,9,10] does not contain all integers\
    \ from 1 to 9. \n[1,2,3,4,5,6,7,8,9,10] contains all integers from 1 to 9. \n\
    [1,2,3,4,5,6,7,8,9,10] does not contain all integers from 1 to 10.", "    \n \
    \   sum = 0\n    for x in l\n        sum += x\n        if sum == 0 \n        \
    \    return true\n    return false\nend", "    sum = 0\n    for i in l\n     \
    \   sum += i\n        if sum == 0\n            return true\n    return false\n\
    end", "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    sum = 0\n\
    \    for i in l\n        sum += i\n        if sum == 0\n            return true\n\
    \    return false\nend", "    \n    sum = 0\n    for i in l\n        sum += i\n\
    \        if sum == 0\n            return true\n        end\n    end\n    return\
    \ false\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1, 3, 5,\
    \ 0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1, 3, -2, 1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1, 2, 3, 7])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that returns the number of elements in a vector that are positive.",
  "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    sum = 0\n\
    \    for i in l\n        sum += i\n        if sum == 0\n            return true\n\
    \        end\n    end\n    return false\nend\n</cell>\n<text>\nExercise 4\nWrite\
    \ a function that takes an array of integers and returns an array of integers\
    \ where the even numbers are moved to the end of the array, and the odd numbers\
    \ are moved to the beginning.", "    \n    sum = 0\n    for i in l\n        sum\
    \ += i\n        if sum == 0\n            return true\n        end\n    end\n \
    \   return false\nend\n</cell>\n<text>\nExercise 3\nWrite a function that checks\
    \ if a vector has all elements equal to zero.", "    sum = 0\n    for i in l\n\
    \        sum += i\n        if sum == 0\n            return true\n    return false\n\
    end\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1, 3, 5, 0])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1, 3, -2, 1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1, 2, 3, 7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1])\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes an array of integers\
    \ and returns the number of pairs that sum to zero.", "    sum = 0\n    for i\
    \ in l\n        sum += i\n        if sum == 0 \n            return true\n    \
    \    end\n    end\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1, 3, 5, 0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,\
    \ 3, -2, 1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1, 2, 3,\
    \ 7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2, 4, -5, 3, 5,\
    \ 7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<text>\n\
    4.3 Exercise: Write a function that takes an array of integers and returns the\
    \ number of pairs of elements in the array that sum to zero.", "    \n    sum\
    \ = 0\n    for i in l\n        sum += i\n        if sum == 0\n            return\
    \ true\n        end\n    end\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>", "    \n    sum\
    \ = 0\n    for i in l\n        sum += i\n        if sum == 0\n            return\
    \ true\n        end\n    end\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 2\n\
    Write a function that returns the number of pairs in the given vector that sum\
    \ to zero.", "    \n    sum = 0\n    for i in l\n        sum += i\n        if\
    \ sum == 0\n            return true\n        end\n    end\n    return false\n\
    end\n</cell>\n<text>\nExercise 4\nWrite a function that checks if a vector contains\
    \ all zeros or not. For example, given [0, 0, 0], it returns true. Given [0, 0,\
    \ 0, 0, 0], it returns false. Given [0, 0, 0, 0, 0, 0], returns false.", "   \
    \ sum = 0\n    for i in l\n        sum += i\n        if sum == 0 \n          \
    \  return true\n    return false\nend", "    \n    sum = 0\n    for x in l\n \
    \       sum += x\n        if sum == 0 \n            return true\n        end\n\
    \    end\n    return false\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes a list of numbers as\
    \ an input, and returns true if there are two distinct elements in the list that\
    \ sum to zero, and false otherwise.", "    l = sort(l)\n    pairs = zip(l[1:end-1],\
    \ l[2:end])\n    pairs = filter(x -> x[1] > 0, pairs)\n    pairs = filter(x ->\
    \ x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == x[2], pairs)\n    pairs =\
    \ filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] != 0, pairs)\n\
    \    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] !=\
    \ 0, pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x\
    \ -> x[1] != 0, pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs\
    \ = filter(x -> x[1] != 0, pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n\
    \    pairs = filter(x -> x[1] != 0, pairs)\n    pairs = filter(x -> x[1] != x[2],\
    \ pairs)\n    pairs = filter(x -> x[1] != 0, pairs)\n    pairs = filter(x -> x[1]\
    \ != x[2], pairs)\n    pairs = filter(x -> x[1] != 0, pairs)\n    pairs = filter(x\
    \ -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] != 0, pairs)\n    pairs\
    \ = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] != 0, pairs)\n\
    \    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] !=\
    \ 0, pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x\
    \ -> x[1] != 0, pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs\
    \ = filter(x -> x[1] != 0, pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n\
    \    pairs = filter(x -> x[1] != 0, pairs)\n    pairs = filter(x -> x[1] != x[2],\
    \ pairs)\n    pairs = filter(x -> x[1] != 0, pairs)\n    pairs = filter(x -> x[1]\
    \ != x[2], pairs)\n    pairs = filter(x -> x[1] != 0, pairs)\n    pairs = filter(x\
    \ -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] != 0, pairs)\n    pairs\
    \ = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] != 0, pairs)\n\
    \    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] !=\
    \ 0, pairs)\n    pairs = filter(x -> x[1]", "    sum = 0\n    for i in l\n   \
    \     sum += i\n        if sum == 0 \n            return true\n        end\n \
    \   end\n    return false\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the number of pairs\
    \ in a given vector that sum to zero.", "    sum = 0\n    for i in l\n       \
    \ sum += i\n        if sum == 0\n            return true\n    return false\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes a list of integers and\
    \ returns a list of all positive integers less than or equal to the input integer.\
    \ For example, given the list [10, 20, 30, 40], the function should return [10,\
    \ 20, 30, 40].", "    sum = 0\n    for x in l\n        sum += x\n        if sum\
    \ == 0 \n            return true\n    return false\nend", "    sum = 0\n    for\
    \ i in l\n        sum += i\n        if sum == 0\n            return true\n   \
    \     end\n    end\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert pairs_sum_to_zero([1, 3, 5, 0]) == false\n@assert pairs_sum_to_zero([1,\
    \ 3, -2, 1]) == false\n@assert pairs_sum_to_zero([1, 2, 3, 7]) == false\n@assert\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7]) == true\n@assert pairs_sum_to_zero([1])\
    \ == false\n</cell>\n<text>\nExercise 3\nWrite a function that checks if a vector\
    \ contains all integers from 1 to n (both included).", "    sum = 0\n    for x\
    \ in l\n        sum += x\n        if sum == 0 \n            return true\n    return\
    \ false\nend\n</cell>\n<text>\nExercise 4\nWrite a function that takes as input\
    \ a vector of integers and returns true if the vector contains any negative integers,\
    \ and false otherwise.\nFor example, \n[5, -4, -7, 2, 3] should return true.\n\
    [5, -4, -7, 2, -3] should return false.\n[5, -4, -7, 2, 3] should return false.",
  "    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n    \
    \        return true\n        end\n    end\n    return false\nend", "    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n", "    sum = 0\n    for i in\
    \ l\n        sum += i\n        if sum == 0\n            return true\n    return\
    \ false\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,3,4])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,3,4])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,3,4])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,3,4])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,3,4])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,3,4])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,3,4])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,3,4])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,3,4])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,3,4])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,3,4])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,3,4])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,3,4])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,3,4])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,3,4])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,3,4])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,3,4])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,3,4])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,3,4])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,3,4])\n\
    </cell>\n<code language=julia-1.5>\n", "    sum = 0\n    for i in l\n        sum\
    \ += i\n        if sum == 0\n            return true\n    return false\nend",
  "    \n    pairs = zip(l, l[1:end-1]) \n    \n    pairs = filter(x -> x[1] == 0,\
    \ pairs)\n    \n    return length(pairs) == 0\nend", "    \n    sum = 0\n    for\
    \ i in l\n        sum += i\n    end\n    \n    sum == 0\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1, 3, 5, 0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,\
    \ 3, -2, 1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1, 2, 3,\
    \ 7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2, 4, -5, 3, 5,\
    \ 7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([-1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([-1, 1, -2, 3, -4, -5, -6, -7, -8])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([-1, 1, -2, 3, -4, -5, -6, -7, -8, 0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([-1, 1, -2, 3, -4, -5, -6, -7, -8, 0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([-1, 1, -2, 3, -4, -5, -6, -7, -8, 0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([-1, 1, -2, 3, -4, -5, -6, -7, -8, 0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([-1, 1, -2, 3, -4, -5, -6, -7, -8, 0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([-1, 1, -2, 3, -4, -5, -6, -7, -8, 0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([-1, 1, -2, 3, -4, -5, -6, -7, -8, 0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([-1, 1, -2, 3, -4, -5, -6, -7, -8, 0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([-1, 1, -2, 3, -4, -5, -6, -7, -8, 0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([-1, 1, -2, 3, -4, -5, -6, -7, -8, 0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([-1, 1, -2, 3, -4, -5, -6, -7, -8, 0])\n</cell>\n<code language=julia-1.5",
  "    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n    \
    \        return true\n        end\n    end\n    return false\nend\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a list of numbers as an input, and returns\
    \ a list of all positive numbers that are less than or equal to each of the numbers\
    \ in the list. For example, if the list is [5, 3, 8, 2, 6, 4, 9], the function\
    \ should return [5, 3, 8].", "    sum = 0\n    for i in l\n        sum += i\n\
    \        if sum == 0\n            return true\n        end\n    end\n    return\
    \ false\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,4,-5,3,5,", "    sum = 0\n    for i in l\n        sum +=\
    \ i\n        if sum == 0\n            return true\n    return false\nend", " \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n", "    \n    sum = 0\n    for i in l\n \
    \       sum += i\n        if sum == 0\n            return true\n    return false\n\
    end\n</cell>\n<text>\nExercise 4\nWrite a function that takes a vector of integers\
    \ as an input, and returns true if the vector has all unique elements, and false\
    \ otherwise.", "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n", " \
    \   l = sort(l)\n    l = l[1..end]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[", "    sum = 0\n    for i in l\n        sum +=\
    \ i\n        if sum == 0\n            return true\n    return false\nend", " \
    \   sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n         \
    \   return true\n        end\n    end\n    return false\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes as input a vector of integers and returns\
    \ true if the vector contains any negative integers, and false otherwise.\nFor\
    \ example, \n[5, -4, 3, -6, 2] should return true.\n[5, -4, 3, -6, -2] should\
    \ return false.\n[5, -4, 3, -6, 2, 0] should return false.\n[5, -4, 3, -6, 2,\
    \ -1, 0] should return true.\n[5, -4, 3, -6, 2, -1, 0, 3] should return false.\n\
    [5, -4, 3, -6, 2, -1, 0, 3, 0] should return false.\n[5, -4, 3, -6, 2, -1, 0,\
    \ 3, 0] should return false.\n[5, -4, 3, -6, 2, -1, 0, 3, 0] should return false.\n\
    [5, -4, 3, -6, 2, -1, 0, 3, 0] should return false.\n[5, -4, 3, -6, 2, -1, 0,\
    \ 3, 0] should return false.\n[5, -4, 3, -6, 2, -1, 0, 3, 0] should return false.\n\
    [5, -4, 3, -6, 2, -1, 0, 3, 0] should return false.\n[5, -4, 3, -6, 2, -1, 0,\
    \ 3, 0] should return false.\n[5, -4, 3, -6, 2, -1, 0, 3, 0] should return false.\n\
    [5, -4, 3, -6, 2, -1, 0, 3, 0] should return false.\n[5, -4, 3, -6, 2, -1, 0,\
    \ 3, 0] should return false.\n[5, -4, 3, -6, 2, -1, 0, 3, 0] should return false.\n\
    [5, -4, 3, -6, 2, -1, 0, 3, 0] should return false.\n[5, -4, 3, -6, 2, -1, 0,\
    \ 3, 0] should return false.\n[5, -4, 3, -6, 2, -1, 0, 3, 0] should return false.\n\
    [5, -4, 3, -6, 2, -1, 0, 3, 0] should return false.\n[5, -4, 3, -6, 2, -1, 0,\
    \ 3, 0] should return false.\n[5, -4, 3, -6, 2, -1, 0, 3, 0] should return false.\n\
    [5, -4, 3, -6, 2, -1, 0, 3, 0] should return false.\n[5, -4, 3, -6, 2, -1, 0,\
    \ 3, 0] should return false.\n[5, -4, 3, -6, 2, -1, 0, 3, 0] should return false.\n\
    [5, -4, 3, -6, 2, -1, 0, 3, 0] should return false.\n[5, -4, 3, -", "    sum =\
    \ 0\n    for i in l\n        sum += i\n        if sum == 0\n            return\
    \ true\n    return false\nend\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-5,0])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-5,0])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-5,0])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-5,0])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-5,0])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-5,0])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=juli",
  "    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n          \
    \  return true\n    return false\nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that checks if a vector is a permutation of another vector.\nThe function should\
    \ return true if the first vector is a permutation of the second vector.\nThe\
    \ function should return false if the first vector is not the same length as the\
    \ second vector.\nThe function should return false if the first vector contains\
    \ any duplicate elements.\nThe function should return false if the second vector\
    \ contains any duplicate elements.\nThe function should return false if the second\
    \ vector is longer than the first vector.\nThe function should return false if\
    \ any element in the first vector is negative.\nThe function should return false\
    \ if any element in the second vector is negative.\nThe function should return\
    \ false if any element in the second vector is zero.\nThe function should return\
    \ false if any element in the second vector is greater than the largest element\
    \ in the first vector.\nThe function should return false if any element in the\
    \ second vector is less than the smallest element in the first vector.\nThe function\
    \ should return false if any element in the second vector is greater than the\
    \ largest element in the first vector.\nThe function should return false if any\
    \ element in the second vector is less than the smallest element in the first\
    \ vector.\nThe function should return false if any element in the second vector\
    \ is greater than the largest element in the first vector.\nThe function should\
    \ return false if any element in the second vector is less than the smallest element\
    \ in the first vector.\nThe function should return false if any element in the\
    \ second vector is greater than the largest element in the first vector.\nThe\
    \ function should return false if any element in the second vector is less than\
    \ the smallest element in the first vector.\nThe function should return false\
    \ if any element in the second vector is greater than the largest element in the\
    \ first vector.\nThe function should return false if any element in the second\
    \ vector is less than the smallest element in the first vector.\nThe function\
    \ should return false if any element in the second vector is greater than the\
    \ largest element in the first vector.\nThe function should return false if any\
    \ element in the second vector is less than the smallest element in the first\
    \ vector.\nThe function should return false if any element in the second vector\
    \ is greater than the largest element in the first vector.\nThe function should\
    \ return false if any element in the second vector is less than the smallest element\
    \ in the first vector.\nThe function should return false if any element in the\
    \ second vector is greater than the largest element in the first vector.\nThe\
    \ function should return false if any element in the second vector is less than\
    \ the smallest element in the first vector.\nThe function should return false\
    \ if any element in the second vector is greater than the largest element in the\
    \ first vector.\nThe function should return false if any element in the second\
    \ vector is less than ", "    sum = 0\n    for i in l\n        sum += i\n    \
    \    if sum == 0 \n            return true\n    return false\nend\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes an array of integers and returns the number\
    \ of pairs that sum to zero.", "    l = sort(l)\n    l = l[1:end-1]\n    l = l[findall(l==0)]\n\
    \    l = l[1:end-1]\n    l = l[findall(l==0)]\n    l = l[1:end-1]\n    l = l[findall(l==0)]\n\
    \    l = l[1:end-1]\n    l = l[findall(l==0)]\n    l = l[1:end-1]\n    l = l[findall(l==0)]\n\
    \    l = l[1:end-1]\n    l = l[findall(l==0)]\n    l = l[1:end-1]\n    l = l[findall(l==0)]\n\
    \    l = l[1:end-1]\n    l = l[findall(l==0)]\n    l = l[1:end-1]\n    l = l[findall(l==0)]\n\
    \    l = l[1:end-1]\n    l = l[findall(l==0)]\n    l = l[1:end-1]\n    l = l[findall(l==0)]\n\
    \    l = l[1:end-1]\n    l = l[findall(l==0)]\n    l = l[1:end-1]\n    l = l[findall(l==0)]\n\
    \    l = l[1:end-1]\n    l = l[findall(l==0)]\n    l = l[1:end-1]\n    l = l[findall(l==0)]\n\
    \    l = l[1:end-1]\n    l = l[findall(l==0)]\n    l = l[1:end-1]\n    l = l[findall(l==0)]\n\
    \    l = l[1:end-1]\n    l = l[findall(l==0)]\n    l = l[1:end-1]\n    l = l[findall(l==0)]\n\
    \    l = l[1:end-1]\n    l = l[findall(l==0)]\n    l = l[1:end-1]\n    l = l[findall(l==0)]\n\
    \    l = l[1:end-1]\n    l = l[findall(l==0)]\n    l = l[1:end-1]\n    l = l[findall(l==0)]\n\
    \    l = l[1:end-1]\n    l = l[findall(l==0)]\n    l = l[1:end-1]\n    l = l[findall(l==0)]\n\
    \    l = l[1:end-1]\n    l = l[findall(l==0)]\n    l = l[1:end-1]\n    l = l[findall(l==0)]\n\
    \    l = l[1:end-1]\n    l = l[findall(l==0)]\n    l = l[1:end-1]\n    l = l[findall(l==0)]\n\
    \    l = l[1:end-1]\n    l = l[findall(l==", "    sum = 0\n    for i in l\n  \
    \      sum += i\n        if sum == 0\n            return true\n    return false\n\
    end\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n\
    <code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>", "    \n    sum = 0\n    for i in l\n    \
    \    sum += i\n        if sum == 0\n            return true\n        end\n   \
    \ end\n    return false\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,1])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,1,2])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,1,2])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7,1,2])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,1,2])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,1,2])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,1,2])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,1,2])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7,1,2])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,1,2])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,1,2])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,1,2])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,1,2])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7,1,2])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,1,2])\n\
    </cell>\n<code language=julia-1.5>\npairs_", "    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n", "    \n    sum = 0\n    for i in l\n        sum +=\
    \ i\n    end\n    \n    sum == 0\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>", "    sum =\
    \ 0\n    for i in l\n        sum += i\n        if sum == 0\n            return\
    \ true\n    return false\nend\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 2\nWrite a function that checks\
    \ if a vector contains all integers from 1 to n (both included).", "    \n   \
    \ sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n           \
    \ return true\n        end\n    end\n    return false\nend\n</cell>\n<code language=julia-1.4>\n\
    pairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.4>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.4>\n\
    pairs_sum_to_zero([1])\n</cell>\n<text>\n4.3 Exercise: Find all pairs of integers\
    \ whose sum is zero in a given vector\nWrite a function that takes as input a\
    \ vector of integers and returns all pairs of integers whose sum is zero.", " \
    \   \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n   \
    \         return true\n        end\n    end\n    return false\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes a list of numbers and returns\
    \ the number of pairs in the list that sum to zero.", "    sum = 0\n    for x\
    \ in l\n        sum += x\n        if sum == 0 \n            return true\n    return\
    \ false\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-", "    \n    pairs\
    \ = zip(l, l[1:end-1]) \n    \n    for pair in pairs \n        if pair[1] == 0\
    \ \n            return true\n        else \n            return false \n    end\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function that takes an array of integers\
    \ as an input, and returns true if there are two distinct elements in the array\
    \ that sum to zero, and false otherwise.", "    \n    l = sort(l)\n    \n    if\
    \ length(l)==0\n        return false\n    end\n    \n    \n    \n    if l[1]==0\n\
    \        return false\n    end\n    \n    \n    if l[end-1]==0\n        return\
    \ false\n    end\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    sum\
    \ = 0\n    for i in l\n        sum += i\n        if sum == 0\n            return\
    \ true\n    return false\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>", "    sum =\
    \ 0\n    for i in l\n        sum += i\n        if sum == 0\n            return\
    \ true\n        end\n    end\n    return false\nend\n</cell>\n<code language=julia-1.4>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1,0])\n\
    </cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1,0,0])\n</cell>\n\
    <code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1,0,0,0])\n</cell>\n<code\
    \ language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1,0,0,0,0])\n</cell>\n<code language=julia-1.4>\n\
    pairs_sum_to_zero([1,3,-2,1,0,0,0,0,0])\n</cell>\n<code language=julia-1.4>\n\
    pairs_sum_to_zero([1,3,-2,1,0,0,0,0,0,0])\n</cell>\n<code language=julia-1.4>\n\
    pairs_sum_to_zero([1,3,-2,1,0,0,0,0,0,0,0])\n</cell>\n<code language=julia-1.4>\n\
    pairs_sum_to_zero([1,3,-2,1,0,0,0,0,0,0,0,0])\n</cell>\n<code language=julia-1.4>\n\
    pairs_sum_to_zero([1,3,-2,1,0,0,0,0,0,0,1,0])\n</cell>\n<code language=julia-1.4>\n\
    pairs_sum_to_zero([1,3,-2,1,0,0,0,0,0,0,1,0,0])\n</cell>\n<code language=julia-1.4>\n\
    pairs_sum_to_zero([1,3,-2,1,0,0,0,0,0,0,1,0,0,0])\n</cell>\n<code language=julia-1.4>\n\
    pairs_sum_to_zero([1,3,-2,1,0,0,0,0,0,0,1,0,0,0,0])\n</cell>\n<code language=julia-1.4>\n\
    pairs_sum_to_zero([1,3,-2,1,0,0,0,0,0,0,1,0,0,0,0,0])\n</cell>\n<code language=julia-1.4>\n\
    pairs_sum_to_zero([1,3,-2,1,0,0,0,0,0,0,1,0,0,0,0,0,0])\n</cell>\n<code language=julia-1.4>\n\
    pairs_sum_to_zero([1,3,-2,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0])\n</cell>\n<code language=julia-1.4>\n\
    pairs_sum_to_zero([1,3,-2,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0])\n</cell>\n<code language=julia-1.4>\n\
    pairs_sum_to_zero([1,3,-2,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0])\n</cell>\n<code language=julia-1.4>\n\
    pairs_sum_to_zero([1,3,-2,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0])\n</cell>\n<code language=julia-1.4>\n\
    pairs_sum_to_zero([1,3,-2,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0])\n</cell>\n<code language=julia-1.4>\n\
    pairs_sum_to_zero([1,3,-2,", "    \n    sum = 0\n    for i in l\n        sum +=\
    \ i\n        if sum == 0\n            return true\n        end\n    end\n    return\
    \ false\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>", "    sum = 0\n    for i in l\n      \
    \  sum += i\n        if sum == 0 \n            return true\n    return false\n\
    end\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an array of integers and returns\
    \ an array of booleans indicating whether each element in the array is greater\
    \ than zero.", "    \n    sum = 0\n    for i in l\n        sum += i\n        if\
    \ sum == 0 \n            return true\n        end\n    end\n    return false\n\
    end\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the number of pairs that sum\
    \ to zero in a given vector.", "    sum = 0\n    for i in l\n        sum += i\n\
    \        if sum == 0\n            return true\n    return false\nend", "    \n\
    \    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n        \
    \    return true\n        end\n    end\n    return false\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that checks if a vector contains all integers from\
    \ 1 to n (inclusive).", "    \n    sum = 0\n    for i in l\n        sum += i\n\
    \        if sum == 0 \n            return true\n        end\n    end\n    return\
    \ false\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes as input\
    \ a vector of integers and returns true if there are two distinct elements in\
    \ the vector that sum to zero and false otherwise.", "    sum = 0\n    for i in\
    \ l\n        sum += i\n        if sum == 0\n            return true\n    return\
    \ false\nend", "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n", " \
    \   sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n         \
    \   return true\n    return false\nend", "    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n", "    \n    sum = 0\n    for i in l\n        sum += i\n \
    \       if sum == 0 \n            return true\n        end\n    end\n    return\
    \ false\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes as input\
    \ a vector of integers and returns true if the vector has all positive elements\
    \ and false otherwise.", "    \n    pairs = zip(l, l[1:end-1]) \n    \n    for\
    \ p in pairs \n        if p[1] == 0 \n            return true \n        else \n\
    \            return false \n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([", "    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n", "    \n    sum = 0\n    for x in l\n        sum +=\
    \ x\n        if sum == 0\n            return true\n    return false\nend", " \
    \   \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n   \
    \         return true\n    return false\nend", "    \n    sum = 0\n    for i in\
    \ l\n        sum += i\n        if sum == 0\n            return true\n    return\
    \ false\nend\n</cell>\n<text>\nExercise 4\nWrite a function that takes as input\
    \ a vector of integers and returns true if the vector contains any negative integers,\
    \ and false otherwise.\nFor example, \n[4, -5, -7, -9, -10, -6, -3] is true.\n\
    [4, -5, -7, -9, -10, -6, -3] is false.\n[4, -5, -7, -9, -10, -6, -3] is false.\n\
    [4, -5, -7, -9, -10, -6, -3] is false.\n[4, -5, -7, -9, -10, -6, -3] is false.\n\
    [4, -5, -7, -9, -10, -6, -3] is false.\n[4, -5, -7, -9, -10, -6, -3] is false.\n\
    [4, -5, -7, -9, -10, -6, -3] is false.\n[4, -5, -7, -9, -10, -6, -3] is false.\n\
    [4, -5, -7, -9, -10, -6, -3] is false.\n[4, -5, -7, -9, -10, -6, -3] is false.\n\
    [4, -5, -7, -9, -10, -6, -3] is false.\n[4, -5, -7, -9, -10, -6, -3] is false.\n\
    [4, -5, -7, -9, -10, -6, -3] is false.\n[4, -5, -7, -9, -10, -6, -3] is false.\n\
    [4, -5, -7, -9, -10, -6, -3] is false.\n[4, -5, -7, -9, -10, -6, -3] is false.\n\
    [4, -5, -7, -9, -10, -6, -3] is false.\n[4, -5, -7, -9, -10, -6, -3] is false.\n\
    [4, -5, -7, -9, -10, -6, -3] is false.\n[4, -5, -7, -9, -10, -6, -3] is false.\n\
    [4, -5, -7, -9, -10, -6, -3] is false.\n[4, -5, -7, -9, -10, -6, -3] is false.\n\
    [4, -5, -7, -9, -10, -6, -3] is false.\n[4, -5, -7, -9, -10, -6, -3] is false.\n\
    [4, -5, -7, -9, -10, -6, -3] is false.\n[4, -5, -7, -9, -10, ", "    l = sort(l)\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l", "    sum = 0\n    for i in l\n        sum += i\n        if sum ==\
    \ 0\n            return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,0])\n\
    </cell>\n<text>\nExercise: Write a function that takes in a vector of integers\
    \ and returns true if the vector contains any negative integers, and false otherwise.",
  "    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n          \
    \  return true\n        end\n    end\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes as input a vector of integers and returns true if the sum of the absolute\
    \ values of the elements in the vector is less than twice the largest absolute\
    \ value of the elements in the vector, and false otherwise.", "    \n    sum =\
    \ 0\n    for i in l\n        sum += i\n        if sum == 0\n            return\
    \ true\n    return false\nend", "    \n    \n    \n    \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n", "    \n    l = sort(l)\n    \n    if l[1] == 0\n        return\
    \ true\n    end\n    \n    if l[end] == 0\n        return true\n    end\n    \n\
    \    if l[end] == l[1]\n        return false\n    end\n    \n    \n    return\
    \ pairs_sum_to_zero(l[1:end-1]) && pairs_sum_to_zero(l[2:end])\nend\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])", "    \n    sum = 0\n    for i in l\n        sum\
    \ += i\n        if sum == 0\n            return true\n        end\n    end\n \
    \   return false\nend\n</cell>\n<text>\nQuestion 2.3\nWrite a function that takes\
    \ an array of integers as an input and returns the number of pairs in the array\
    \ that sum to zero.", "    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n",
  "    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n          \
    \  return true\n    return false\nend", "    \n    sum = 0\n    for i in l\n \
    \       sum += i\n    end\n    \n    sum == 0\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ as input a vector of integers and returns true if the vector contains no 0s,\
    \ false otherwise. \nFor example, \n>>> no_zeros([1,3,5,0])\nfalse\n>>> no_zeros([1,3,-2,1])\n\
    true\n>>> no_zeros([1,2,3,7])\ntrue\n>>> no_zeros([2,4,-5,3,5,7])\nfalse\n>>>\
    \ no_zeros([1])\ntrue\n>>> no_zeros([2,4,-5,3,5,7,0])\nfalse\n>>> no_zeros([2,4,-5,3,5,7,0,0])\n\
    true\n>>> no_zeros([2,4,-5,3,5,7,0,0,0])\nfalse\n>>> no_zeros([2,4,-5,3,5,7,0,0,0,0])\n\
    true\n>>> no_zeros([2,4,-5,3,5,7,0,0,0,0,0])\nfalse\n>>> no_zeros([2,4,-5,3,5,7,0,0,0,0,0,0])\n\
    true\n>>> no_zeros([2,4,-5,3,5,7,0,0,0,0,0,0,0])\nfalse\n>>> no_zeros([2,4,-5,3,5,7,0,0,0,0,0,0,0,0])\n\
    true\n>>> no_zeros([2,4,-5,3,5,7,0,0,0,0,0,0,0,0])\nfalse\n>>> no_zeros([2,4,-5,3,5,7,0,0,0,0,0,0,0,0])\n\
    true\n>>> no_zeros([2,4,-5,3,5,7,0,0,0,0,0,0,0,0])\nfalse\n>>> no_zeros([2,4,-5,3,5,7,0,0,0,0,0,0,0,0])\n\
    true\n>>> no_zeros([2,4,-5,3,5,7,0,0,0,0,0,0,0,0])\nfalse\n>>> no_zeros([2,4,-5,3,5,7,0,0,0,0,0,0,0,0])\n\
    true\n>>> no_zeros([2,4,-5,3,5,7,0,0,0,0,0,0,0,0])\nfalse\n>>> no_zeros([2,4,-5,3,5,7,0,0,0,0,0,0,0,0])\n\
    true\n>>> no_zeros([2,4,-5,3,5,7,0,0,0,0,0,0,0,0])\nfalse\n>>> no_zeros([2,4,-5,3,5,7,0,0,0,0,0,0,0,0])\n\
    true\n>>> no_zeros([2,4,-", "    sum = 0\n    for i in l\n        sum += i\n \
    \       if sum == 0\n            return true\n        end\n    end\n    return\
    \ false\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that checks if a vector contains\
    \ all integers from 1 to n (both included).", "    sum = 0\n    for i in l\n \
    \       sum += i\n        if sum == 0\n            return true\n    return false\n\
    end", "    l = sort(l)\n    sum = 0\n    for i in l\n        sum += i\n      \
    \  if sum == 0\n            return true\n    return false\nend\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,1])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,1])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,1])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7,1])\n</cell", "    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n", "    sum = 0\n    for x in l\n        sum += x\n \
    \       if sum == 0\n            return true\n    return false\nend\n</cell>\n\
    <code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes as input a list of integers and returns true\
    \ if and only if the list contains at least one pair of distinct integers that\
    \ sum to zero.", "    \n    sum = 0\n    for i in l\n        sum += i\n      \
    \  if sum == 0\n            return true\n        end\n    end\n    return false\n\
    end\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1, 3, 5, 0])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1, 3, -2, 1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1, 2, 3, 7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1])\n\
    </cell>\n<text>\n4.4 Exercise: Find all pairs of numbers that sum to zero in a\
    \ given vector", "    \n    sum = 0\n    for i in l\n        sum += i\n      \
    \  if sum == 0\n            return true\n        end\n    end\n    return false\n\
    end\n</cell>\n<text>\nExercise 2\nWrite a function that takes as input a vector\
    \ of integers and returns true if the vector has all unique elements and false\
    \ otherwise.", "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n", " \
    \   l = sort(l)\n    \n    if length(l) == 0 \n        return false\n    end\n\
    \    \n    pairs = zeros(Int, 2)\n    \n    for i = 1:length(l) \n        pairs[1]\
    \ = l[i]\n        pairs[2] = l[i+1]\n        if pairs[1] + pairs[2] != 0 \n  \
    \          return false\n        end\n    end\n    \n    return true\nend\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes in a vector of integers and returns true if the\
    \ vector contains any negative integers, and false otherwise.", "    \n    sum\
    \ = 0\n    for i in l\n        sum += i\n    end\n    \n    sum == 0\nend\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 3\n\
    Write a function that takes as input a vector of integers and returns true if\
    \ the vector contains any negative numbers and false otherwise.", "    \n    sum\
    \ = 0\n    for i in l\n        sum += i\n        if sum == 0\n            return\
    \ true\n        end\n    end\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>", "    sum = 0\n\
    \    for i in l\n        sum += i\n        if sum == 0 \n            return true\n\
    \        end\n    end\n    return false\nend\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that takes as input a vector of integers and returns true if the\
    \ number of elements in the vector that are positive is equal to the number of\
    \ elements in the vector that are negative, and false otherwise.", "    sum =\
    \ 0\n    for i in l\n        sum += i\n        if sum == 0\n            return\
    \ true\n        end\n    end\n    return false\nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes a list of integers and returns true if the list\
    \ contains any negative integers, and false otherwise.\nFor example, \n[4, -5,\
    \ -7, 3] should return true.\n[4, -5, -7, 3, 0] should return false.\n[4, -5,\
    \ -7, 3, 0] should return false.\n[4, -5, -7, 3] should return false.\n[4, -5,\
    \ -7, 3, 0] should return false.\n[4, -5, -7, 3, 0] should return false.\n[4,\
    \ -5, -7, 3] should return false.\n[4, -5, -7, 3, 0] should return false.\n[4,\
    \ -5, -7, 3, 0] should return false.\n[4, -5, -7, 3] should return false.\n[4,\
    \ -5, -7, 3, 0] should return false.\n[4, -5, -7, 3, 0] should return false.\n\
    [4, -5, -7, 3] should return false.\n[4, -5, -7, 3, 0] should return false.\n\
    [4, -5, -7, 3, 0] should return false.\n[4, -5, -7, 3] should return false.\n\
    [4, -5, -7, 3, 0] should return false.\n[4, -5, -7, 3, 0] should return false.\n\
    [4, -5, -7, 3] should return false.\n[4, -5, -7, 3, 0] should return false.\n\
    [4, -5, -7, 3, 0] should return false.\n[4, -5, -7, 3] should return false.\n\
    [4, -5, -7, 3, 0] should return false.\n[4, -5, -7, 3, 0] should return false.\n\
    [4, -5, -7, 3] should return false.\n[4, -5, -7, 3, 0] should return false.\n\
    [4, -5, -7, 3, 0] should return false.\n[4, -5, -7, 3] should return false.\n\
    [4, -5, -7, 3, 0] should return false.\n[4, -5, -7, 3, 0] should return false.\n\
    [4, -5, -7, 3] should return false.\n[4, -5, -7, 3, 0] should return false.\n\
    [4, -5, -7, 3, 0] should return false.\n[4, -5, -7, 3] should return false.\n\
    [4, -5, -7, 3, 0] should return false.\n[4, -5, -7, 3, 0] should return false.\n\
    [4, -5, -7, 3] should return ", "    sum = 0\n    for i in l\n        sum += i\n\
    \        if sum == 0\n            return true\n    return false\nend", "    \n\
    \    sum = 0\n    for i in l\n        sum += i\n        if sum == 0 \n       \
    \     return true\n        end\n    end\n    return false\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes a list of integers and returns true if\
    \ there are two distinct elements in the list that sum to zero, and false otherwise.",
  "    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n    \
    \        return true\n        end\n    end\n    return false\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes a list of integers and returns true if\
    \ there are two distinct elements in the list that sum to zero.", "    \n    sum\
    \ = 0\n    for i in l\n        sum += i\n    end\n    \n    for i in l\n     \
    \   if sum == 0 \n            return false\n        end\n        \n        sum\
    \ -= i\n    end\n    \n    return true\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes a vector of integers as an input, and returns true if the vector has all\
    \ positive integers and false otherwise.\nFor example, \n>>> all_positive([-1,\
    \ 2, -3, 4])\ntrue\n>>> all_positive([-1, 2, -3, -4])\nfalse\n>>> all_positive([-1,\
    \ 2, -3, 5])\nfalse\n>>> all_positive([-1, 2, -3, 5])\nfalse\n>>> all_positive([-1,\
    \ 2, -3, 5])\nfalse\n>>> all_positive([-1, 2, -3, 5])\nfalse\n>>> all_positive([-1,\
    \ 2, -3, 5])\nfalse\n>>> all_positive([-1, 2, -3, 5])\nfalse\n>>> all_positive([-1,\
    \ 2, -3, 5])\nfalse\n>>> all_positive([-1, 2, -3, 5])\nfalse\n>>> all_positive([-1,\
    \ 2, -3, 5])\nfalse\n>>> all_positive([-1, 2, -3, 5])\nfalse\n>>> all_positive([-1,\
    \ 2, -3, 5])\nfalse\n>>> all_positive([-1, 2, -3, 5])\nfalse\n>>> all_positive([-1,\
    \ 2, -3, 5])\nfalse\n>>> all_positive([-1, 2, -3, 5])\nfalse\n>>> all_positive([-1,\
    \ 2, -3, 5])\nfalse\n>>> all_positive([-1, 2, -3, 5])\nfalse\n>>> all_positive([-1,\
    \ 2, -3, 5])\nfalse\n>>> all_positive([-1, 2, -3, 5])\nfalse\n>>> all_positive([-1,\
    \ 2, -3, 5])\nfalse\n>>> all_positive([-1, 2, -3, 5])\nfalse\n>>> all_positive([-1,\
    \ 2, -3, 5])\nfalse\n>>> all_positive([-1, 2, -3, 5])\nfalse\n>>> all_positive([-1,\
    \ 2, -3, 5])\nfalse\n>>> all_positive([-1, 2, -3, 5])\nfalse\n>>> all_positive([-1,\
    \ 2, -3, 5])\nfalse\n>>> all_positive([-1, 2, -3, 5])\nfalse\n>>> all_positive([-1,\
    \ 2, -3, 5])\nfalse\n>>> all_positive([-1, 2, -3, 5])\nfalse\n>>> all_positive([-1,\
    \ 2, -3, 5])\nfalse\n>>> all_positive([-1, 2, -3, 5])\nfalse\n>>> all_positive([-1,\
    \ 2, -3, 5])\nfalse\n>>> all_positive([-1, 2, -3, 5])\nfalse\n>>> all_positive([-1,\
    \ 2, -3, 5])\nfalse\n>>> all_positive([-1, 2, -3, 5])\nfalse\n>>> all_positive([-1,\
    \ 2, -3, 5])\nfalse\n>>> all_positive", "    sum = 0\n    for i in l\n       \
    \ sum += i\n        if sum == 0 \n            return true\n    return false\n\
    end\n</cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,5,0])\n</cell>\n\
    <code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\n\
    pairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.0>\npairs_sum_to_zero([2,4,-5,3,5,7])\n\
    </cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1])\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes a vector of integers as an input and returns\
    \ the number of pairs that sum to zero.", "    \n    sum = 0\n    for i in l\n\
    \        sum += i\n        if sum == 0\n            return true\n        end\n\
    \    end\n    return false\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<text>\nPart III. Finding all pairs of integers in a given vector whose\
    \ sum is exactly zero"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

language: jl
name: HumanEval_35_max_element
results:
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = max_element(l)\n    minimum = min_element(l)\n    if maximum < minimum \n\
    \        return maximum\n    else\n        return minimum\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpunoc4c3m.jl:16\nin expression starting at\
    \ /tmp/tmpunoc4c3m.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    if l.length\
    \ == 0\n        throw(ArgumentError(\"Vector is empty\"))\n    end\n    max =\
    \ l[1]\n    for i in l[2:end]\n        if i > max\n            max = i\n     \
    \   end\n    end\n    return max\nend\n</cell>\n<code language=julia-1.5>\nusing\
    \ Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1, 2,\
    \ 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqg_y87pm.jl:19\nin expression starting at\
    \ /tmp/tmpqg_y87pm.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    if length(l)\
    \ == 0 \n        throw(ArgumentError(\"Vector is empty\"))\n    end\n    maximum\
    \ = l[1]\n    for i in 2:length(l) \n        if l[i] > maximum \n            maximum\
    \ = l[i]\n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns the minimum element in the vector.\n    >>>\
    \ min_element([1, 2, 3])\n    1\n    >>> min_element([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n    -10\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3,\
    \ -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpl2agkr36.jl:19\nin expression starting at\
    \ /tmp/tmpl2agkr36.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    if length(l)\
    \ == 0 \n        throw(ArgumentError(\"Vector is empty\"))\n    end\n    maximum\
    \ = l[1]\n    for i in 2:length(l) \n        if l[i] > maximum \n            maximum\
    \ = l[i]\n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpbw4678xv.jl:19\nin expression starting at\
    \ /tmp/tmpbw4678xv.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = l[1]\n    for i in 2:length(l)\n        if l[i] > maximum\n            maximum\
    \ = l[i]\n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpv2khryq8.jl:16\nin expression starting at\
    \ /tmp/tmpv2khryq8.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = l[1]\n    for i in 2:length(l)\n        if l[i] > maximum\n            maximum\
    \ = l[i]\n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.3>\n\
    using Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpe5kumfx5.jl:16\nin expression starting at\
    \ /tmp/tmpe5kumfx5.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    return\
    \ max(l)\nend\n</cell>\n<text>\nExercise 3\nWrite a function that returns the\
    \ index of the maximum element in the vector.\nusing Test\n\n@testset begin\n\n\
    candidate = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjt1fqk6y.jl:10\nin expression starting at\
    \ /tmp/tmpjt1fqk6y.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    if length(l)\
    \ == 0 \n        return 0 \n    else \n        return l[argmax(l)]\n    end\n\
    end\n</cell>\n<code language=julia-1.5>\nmax_element([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n</cell>\n<text>\nExercise 2\nWrite a function that returns the\
    \ index of the maximum element in the vector.\n    >>> max_element_index(l::Vector{Int64})\n\
    \    >>> max_element_index([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    12\n\
    \    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpow02rbd1.jl:14\nin expression starting at\
    \ /tmp/tmpow02rbd1.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    if length(l)\
    \ == 0 \n        throw(ArgumentError(\"Vector is empty\"))\n    end\n    max =\
    \ l[1]\n    for i in 2:length(l) \n        if l[i] > max \n            max = l[i]\
    \ \n        end\n    end\n    return max\nend\n</cell>\n<code language=julia-1.4>\n\
    using Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpa4w0aizz.jl:19\nin expression starting at\
    \ /tmp/tmpa4w0aizz.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = l[1]\n    for i in l[2:end]\n        if i > maximum\n            maximum =\
    \ i\n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8vcov6fo.jl:16\nin expression starting at\
    \ /tmp/tmp8vcov6fo.jl:16\n"
  stdout: ''
- exit_code: -1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = max_element(l)\n    return maximum\nend\nusing Test\n\n@testset begin\n\n\
    candidate = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  status: Timeout
  stderr: None
  stdout: None
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    if length(l)\
    \ == 0 \n        throw(ArgumentError(\"Vector is empty\"))\n    end\n    maximum\
    \ = l[1]\n    for i in 2:length(l) \n        if l[i] > maximum \n            maximum\
    \ = l[i]\n        end\n    end\n    return maximum\nend\n</cell>\n<text>\nmax_element()\n\
    This function returns the maximum element in the vector.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpshf00ctn.jl:19\nin expression starting at\
    \ /tmp/tmpshf00ctn.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = l[1]\n    for i in l[2:end]\n        if i > maximum\n            maximum =\
    \ i\n        end\n    end\n    return maximum\nend\n</cell>\n<text>\nmax_element\n\
    using Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpaxxgrgfs.jl:16\nin expression starting at\
    \ /tmp/tmpaxxgrgfs.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    if length(l)\
    \ == 0 \n        throw(ArgumentError(\"Vector is empty\"))\n    end\n    maximum\
    \ = l[1]\n    for i in 2:length(l) \n        if l[i] > maximum \n            maximum\
    \ = l[i] \n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.3>\n\
    using Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmfu6sdnm.jl:19\nin expression starting at\
    \ /tmp/tmpmfu6sdnm.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = l[1]\n    for i in 2:length(l)\n        if l[i] > maximum\n            maximum\
    \ = l[i]\n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpv2khryq8.jl:16\nin expression starting at\
    \ /tmp/tmpv2khryq8.jl:16\n"
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    if length(l)\
    \ == 0 \n        throw(ArgumentError(\"Vector is empty\"))\n    end\n    maximum\
    \ = l[1]\n    for i in 2:length(l) \n        if l[i] > maximum \n            maximum\
    \ = l[i] \n        end\n    end\n    return maximum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    2      2

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = l[1]\n    for i in 2:length(l)\n        if l[i] > maximum\n            maximum\
    \ = l[i]\n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpv2khryq8.jl:16\nin expression starting at\
    \ /tmp/tmpv2khryq8.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    \n  \
    \  maximum = l[1]\n    for i in l[2:end]\n        if i > maximum\n           \
    \ maximum = i\n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgtxep2pr.jl:17\nin expression starting at\
    \ /tmp/tmpgtxep2pr.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = l[1]\n    for i in l[2:end]\n        if i > maximum\n            maximum =\
    \ i\n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8vcov6fo.jl:16\nin expression starting at\
    \ /tmp/tmp8vcov6fo.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    \n  \
    \  maximum = l[1]\n    for i in l[2:end]\n        if i > maximum\n           \
    \ maximum = i\n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgtxep2pr.jl:17\nin expression starting at\
    \ /tmp/tmpgtxep2pr.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = l[1]\n    for x in l[2:end]\n        if x > maximum\n            maximum =\
    \ x\n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the sum of the elements in the vector.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1, 2,\
    \ 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpatvxgrk8.jl:16\nin expression starting at\
    \ /tmp/tmpatvxgrk8.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    if length(l)\
    \ == 0 \n        throw(ArgumentError(\"Vector is empty\"))\n    end\n    maximum\
    \ = l[1]\n    for i in 2:length(l) \n        if l[i] > maximum \n            maximum\
    \ = l[i]\n        end\n    end\n    return maximum\nend\n</cell>\n<text>\nExercise\
    \ 2: max_element\nWrite a function that returns the maximum element in a vector.\
    \ \nThe function should throw an error if the vector is empty.\nusing Test\n\n\
    @testset begin\n\ncandidate = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\
    \t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0xvuma74.jl:19\nin expression starting at\
    \ /tmp/tmp0xvuma74.jl:19\n"
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    if length(l)\
    \ == 0 \n        throw(ArgumentError(\"Vector is empty\"))\n    end\n    \n  \
    \  maximum = l[1]\n    for i in 2:length(l) \n        if l[i] > maximum \n   \
    \         maximum = l[i]\n        end\n    end\n    return maximum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1, 2,\
    \ 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    2      2

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = l[1]\n    for i in l[2:end]\n        if i > maximum\n            maximum =\
    \ i\n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8vcov6fo.jl:16\nin expression starting at\
    \ /tmp/tmp8vcov6fo.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = l[1]\n    for i in l[2:end]\n        if i > maximum\n            maximum =\
    \ i\n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8vcov6fo.jl:16\nin expression starting at\
    \ /tmp/tmp8vcov6fo.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = l[1]\n    for i in l[2:end]\n        if i > maximum\n            maximum =\
    \ i\n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.4>\n\
    max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the sum of the elements in the vector.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1, 2,\
    \ 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2dhukerf.jl:16\nin expression starting at\
    \ /tmp/tmp2dhukerf.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    \n  \
    \  maximum = l[1]\n    for i in l[2:end]\n        if i > maximum\n           \
    \ maximum = i\n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns the index of the maximum element in the vector.\n\
    using Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1xc_jrcw.jl:17\nin expression starting at\
    \ /tmp/tmp1xc_jrcw.jl:17\n"
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    if length(l)\
    \ == 0 \n        throw(ArgumentError(\"Vector is empty\"))\n    end\n    \n  \
    \  maximum = l[1]\n    for i in 2:length(l) \n        if l[i] > maximum \n   \
    \         maximum = l[i]\n        end\n    end\n    return maximum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1, 2,\
    \ 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    2      2

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = l[1]\n    for i in l[2:end]\n        if i > maximum\n            maximum =\
    \ i\n        end\n    end\n    return maximum\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    2      2

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    if length(l)\
    \ == 0 \n        throw(ArgumentError(\"Empty vector\"))\n    end\n    return maximum(l)\
    \ \nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\n\
    candidate = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpt0ybvijn.jl:13\nin expression starting at\
    \ /tmp/tmpt0ybvijn.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = max_element(l)\n    minimum = min_element(l)\n    if maximum == minimum\n\
    \        return maximum\n    else\n        return maximum(maximum(minimum, minimum),\
    \ minimum)\n    end\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp86qin07s.jl:16\nin expression starting at\
    \ /tmp/tmp86qin07s.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = l[1]\n    for i in l[2:end]\n        if i > maximum\n            maximum =\
    \ i\n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8vcov6fo.jl:16\nin expression starting at\
    \ /tmp/tmp8vcov6fo.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    return\
    \ maximum(l) \nend\n</cell>\n<text>\nExercise 4\nWrite a function that returns\
    \ the index of the maximum element in the vector.\nusing Test\n\n@testset begin\n\
    \ncandidate = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpim8fryrp.jl:10\nin expression starting at\
    \ /tmp/tmpim8fryrp.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    if l.length\
    \ == 1\n        return l[0]\n    end\n    \n    maximum = l[1]\n    for i in 2:l.length\n\
    \        if l[i] > maximum\n            maximum = l[i]\n        end\n    end\n\
    \    return maximum\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpm8wztu3_.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmpm8wztu3_.jl:25\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 3]) == 3\n  type Array has no field length\n \
    \ Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] max_element(l::Vector{Int64})\n\
    \     @ Main /tmp/tmpm8wztu3_.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpm8wztu3_.jl:25 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpm8wztu3_.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpm8wztu3_.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n  type Array has\
    \ no field length\n  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n\
    \   [2] max_element(l::Vector{Int64})\n     @ Main /tmp/tmpm8wztu3_.jl:8\n   [3]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpm8wztu3_.jl:26 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpm8wztu3_.jl:24\nTest Summary:\
    \ | Error  Total\ntest set      |     2      2\n"
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = l[1]\n    for x in l[2:end]\n        if x > maximum\n            maximum =\
    \ x\n        end\n    end\n    maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpsj48v1at.jl:16\nin expression starting at\
    \ /tmp/tmpsj48v1at.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    return\
    \ max(l)\nend\n</cell>\n<code language=julia-1.4>\nmax_element([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n</cell>\n<text>\nExercise\nWrite a function that returns\
    \ the minimum element in the vector.\nWrite a function that returns the maximum\
    \ element in the vector.\nWrite a function that returns the sum of the elements\
    \ in the vector.\nWrite a function that returns the product of the elements in\
    \ the vector.\nWrite a function that returns the quotient of the elements in the\
    \ vector.\nWrite a function that returns the absolute value of the elements in\
    \ the vector.\nWrite a function that returns the absolute value of the elements\
    \ in the vector.\nWrite a function that returns the absolute value of the elements\
    \ in the vector.\nWrite a function that returns the absolute value of the elements\
    \ in the vector.\nWrite a function that returns the absolute value of the elements\
    \ in the vector.\nWrite a function that returns the absolute value of the elements\
    \ in the vector.\nWrite a function that returns the absolute value of the elements\
    \ in the vector.\nWrite a function that returns the absolute value of the elements\
    \ in the vector.\nWrite a function that returns the absolute value of the elements\
    \ in the vector.\nWrite a function that returns the absolute value of the elements\
    \ in the vector.\nWrite a function that returns the absolute value of the elements\
    \ in the vector.\nWrite a function that returns the absolute value of the elements\
    \ in the vector.\nWrite a function that returns the absolute value of the elements\
    \ in the vector.\nWrite a function that returns the absolute value of the elements\
    \ in the vector.\nWrite a function that returns the absolute value of the elements\
    \ in the vector.\nWrite a function that returns the absolute value of the elements\
    \ in the vector.\nWrite a function that returns the absolute value of the elements\
    \ in the vector.\nWrite a function that returns the absolute value of the elements\
    \ in the vector.\nWrite a function that returns the absolute value of the elements\
    \ in the vector.\nWrite a function that returns the absolute value of the elements\
    \ in the vector.\nWrite a function that returns the absolute value of the elements\
    \ in the vector.\nWrite a function that returns the absolute value of the elements\
    \ in the vector.\nWrite a function that returns the absolute value of the elements\
    \ in the vector.\nWrite a function that returns the absolute value of the elements\
    \ in the vector.\nWrite a function that returns the absolute value of the elements\
    \ in the vector.\nWrite a function that returns the absolute value of the elements\
    \ in the vector.\nWrite a function that returns the absolute value of the elements\
    \ in the vector.\nWrite a function that returns the absolute value of the elements\
    \ in the vector.\nWrite a function that returns the absolute value of the elements\
    \ in the vector.\nWrite a function that returns the absolute value of the elements\
    \ in the vector.\nWrite a function that returns the absolute value of the elements\
    \ in the vector.\nWrite a function that returns the absolute value of the elements\
    \ in the vector.\nWrite a function that returns the absolute value of the elements\
    \ in the vector.\nWrite a function that returns the absolute value of the elements\
    \ in the vector.\nWrite a function that returns the absolute value of the elements\
    \ in the vector.\nWrite a function that returns the absolute value of the elements\
    \ in the vector.\nWrite a function that returns the absolute value of the elements\
    \ in the vector.\nWrite a function that returns the absolute value of the elements\
    \ in the vector.\nWrite a function that returns the absolute value of the elements\
    \ in the vector.\nWrite a function that returns the absolute value of the elements\
    \ in the vector.\nWrite a function that returns the absolute value of the elements\
    \ in the vector.\nWrite a function that returns the absolute value of the elements\
    \ in the vector.\nWrite \nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpsy9sxjwf.jl:10\nin expression starting at\
    \ /tmp/tmpsy9sxjwf.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    \n  \
    \  maximum = l[1]\n    for i in l[2:end]\n        if i > maximum\n           \
    \ maximum = i\n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgtxep2pr.jl:17\nin expression starting at\
    \ /tmp/tmpgtxep2pr.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    if length(l)\
    \ == 0 \n        throw(ArgumentError(\"Vector is empty\"))\n    end\n    \n  \
    \  maximum = l[1]\n    for i in 2:length(l) \n        if maximum < l[i] \n   \
    \         maximum = l[i]\n        end\n    end\n    return maximum\nend\n</cell>\n\
    <code language=julia-1.5>\nmax_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    </cell>\n<text>\nmin_element\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpj11y82md.jl:20\nin expression starting at\
    \ /tmp/tmpj11y82md.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    if l.length\
    \ == 0\n        throw(ArgumentError(\"Cannot find max element of empty vector\"\
    ))\n    end\n    max = l[1]\n    for i in 2:l.length\n        if l[i] > max\n\
    \            max = l[i]\n        end\n    end\n    return max\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1, 2, 3]) ==\
    \ 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpo7gx1rjy.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpo7gx1rjy.jl:24\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 3]) == 3\n  type Array has no field length\n \
    \ Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] max_element(l::Vector{Int64})\n\
    \     @ Main /tmp/tmpo7gx1rjy.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpo7gx1rjy.jl:24 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpo7gx1rjy.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpo7gx1rjy.jl:25\n  Test threw exception\n  Expression:\
    \ candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n  type Array has\
    \ no field length\n  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n\
    \   [2] max_element(l::Vector{Int64})\n     @ Main /tmp/tmpo7gx1rjy.jl:8\n   [3]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpo7gx1rjy.jl:25 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpo7gx1rjy.jl:23\nTest Summary:\
    \ | Error  Total\ntest set      |     2      2\n"
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    if length(l)\
    \ == 0 \n        throw(ArgumentError(\"Vector is empty\"))\n    end\n    \n  \
    \  maximum = l[1]\n    for i in 2:length(l) \n        if l[i] > maximum \n   \
    \         maximum = l[i]\n        end\n    end\n    return maximum\nend\n</cell>\n\
    <text>\nmax_element()\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2zkmrs0n.jl:20\nin expression starting at\
    \ /tmp/tmp2zkmrs0n.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = l[1]\n    for i in 2:length(l)\n        if l[i] > maximum\n            maximum\
    \ = l[i]\n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.4>\n\
    using Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjq35c5m_.jl:16\nin expression starting at\
    \ /tmp/tmpjq35c5m_.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = l[1]\n    for i in l[2:end]\n        if i > maximum\n            maximum =\
    \ i\n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8vcov6fo.jl:16\nin expression starting at\
    \ /tmp/tmp8vcov6fo.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    if l.length==0\n\
    \        throw(ArgumentError(\"Vector is empty\"))\n    end\n    max = l[1]\n\
    \    for i in 2:l.length\n        if l[i] > max\n            max = l[i]\n    \
    \    end\n    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3,\
    \ -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpqdmdxcgz.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpqdmdxcgz.jl:24\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 3]) == 3\n  type Array has no field length\n \
    \ Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] max_element(l::Vector{Int64})\n\
    \     @ Main /tmp/tmpqdmdxcgz.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpqdmdxcgz.jl:24 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpqdmdxcgz.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpqdmdxcgz.jl:25\n  Test threw exception\n  Expression:\
    \ candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n  type Array has\
    \ no field length\n  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n\
    \   [2] max_element(l::Vector{Int64})\n     @ Main /tmp/tmpqdmdxcgz.jl:8\n   [3]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpqdmdxcgz.jl:25 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpqdmdxcgz.jl:23\nTest Summary:\
    \ | Error  Total\ntest set      |     2      2\n"
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    if length(l)\
    \ == 0 \n        return 0 \n    else \n        return max(l) \nend \n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the minimum element in the vector.\n\
    \    >>> min_element([1, 2, 3])\n    1\n    >>> min_element([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n    -10\n    \"\"\"\nusing Test\n\n@testset begin\n\n\
    candidate = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3knmczas.jl:13\nin expression starting at\
    \ /tmp/tmp3knmczas.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = l[1]\n    for i in l[2:end]\n        if i > maximum\n            maximum =\
    \ i\n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8vcov6fo.jl:16\nin expression starting at\
    \ /tmp/tmp8vcov6fo.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = l[1]\n    for i in 2:length(l)\n        if l[i] > maximum\n            maximum\
    \ = l[i]\n        end\n    end\n    return maximum\nend\n</code>\n<|/ a tags=julia,arrays\
    \ |>\n<| a dscore=1 |>\nI came up with a solution that is similar to what was\
    \ suggested by but is more efficient and doesn't require any packages.\n<code>\n\
    using Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp44r4jbp5.jl:16\nin expression starting at\
    \ /tmp/tmp44r4jbp5.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    \n  \
    \  if length(l) == 0 \n        throw(ArgumentError(\"Vector is empty\"))\n   \
    \ end\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpgshy9aum.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpgshy9aum.jl:1\n\
    in expression starting at /tmp/tmpgshy9aum.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    return\
    \ max(l)\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmp3wn1z_ji.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp3wn1z_ji.jl:15\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 3]) == 3\n  MethodError: no method matching max(::Vector{Int64})\n\
    \  Closest candidates are:\n    max(::Any, !Matched::Missing) at /shared/centos7/julia/1.7.3/share/julia/base/missing.jl:137\n\
    \    max(::Any, !Matched::Any) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:492\n\
    \    max(::Any, !Matched::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n\
    \    ...\n  Stacktrace:\n   [1] max_element(l::Vector{Int64})\n     @ Main /tmp/tmp3wn1z_ji.jl:8\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3wn1z_ji.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3wn1z_ji.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp3wn1z_ji.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n  MethodError: no\
    \ method matching max(::Vector{Int64})\n  Closest candidates are:\n    max(::Any,\
    \ !Matched::Missing) at /shared/centos7/julia/1.7.3/share/julia/base/missing.jl:137\n\
    \    max(::Any, !Matched::Any) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:492\n\
    \    max(::Any, !Matched::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n\
    \    ...\n  Stacktrace:\n   [1] max_element(l::Vector{Int64})\n     @ Main /tmp/tmp3wn1z_ji.jl:8\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3wn1z_ji.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3wn1z_ji.jl:14\nTest Summary:\
    \ | Error  Total\ntest set      |     2      2\n"
- exit_code: 0
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    if length(l)\
    \ == 0 \n        throw(ArgumentError(\"Vector is empty\"))\n    end\n    maximum\
    \ = l[1]\n    for i in 2:length(l) \n        if l[i] > maximum \n            maximum\
    \ = l[i]\n        end\n    end\n    return maximum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    2      2

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = l[1]\n    for i in l[2:end]\n        if i > maximum\n            maximum =\
    \ i\n        end\n    end\n    maximum\nend\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that returns the minimum element in the vector.\n    >>> min_element([1,\
    \ 2, 3])\n    1\n    >>> min_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    \    -10\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdxaogjrt.jl:16\nin expression starting at\
    \ /tmp/tmpdxaogjrt.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = maximum(l) \n    for x in l \n        if x < maximum \n            maximum\
    \ = x \n        end \n    end \n    return maximum \nend \n</cell>\n<code language=julia-1.5>\n\
    max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n</cell>\n<text>\n4.4 Finding\
    \ the index of the maximum element in a vector\nThe function argmax() returns\
    \ the index of the maximum element in a vector. \nIf the vector is empty, return\
    \ -1.\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp06_bjnat.jl:16\nin expression starting at\
    \ /tmp/tmp06_bjnat.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = maximum(l) \n    for i in l\n        if i > maximum\n            maximum =\
    \ i\n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the sum of the elements in the vector.\n>>>\
    \ sum([1, 2, 3])\n6\n>>> sum([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n123\n>>>\
    \ sum([1, 2, 3])\n6\n>>> sum([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n123\n>>>\
    \ sum([1, 2, 3])\n6\n>>> sum([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n123\n>>>\
    \ sum([1, 2, 3])\n6\n>>> sum([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n123\n>>>\
    \ sum([1, 2, 3])\n6\n>>> sum([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n123\n>>>\
    \ sum([1, 2, 3])\n6\n>>> sum([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n123\n>>>\
    \ sum([1, 2, 3])\n6\n>>> sum([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n123\n>>>\
    \ sum([1, 2, 3])\n6\n>>> sum([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n123\n>>>\
    \ sum([1, 2, 3])\n6\n>>> sum([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n123\n>>>\
    \ sum([1, 2, 3])\n6\n>>> sum([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n123\n>>>\
    \ sum([1, 2, 3])\n6\n>>> sum([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n123\n>>>\
    \ sum([1, 2, 3])\n6\n>>> sum([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n123\n>>>\
    \ sum([1, 2, 3])\n6\n>>> sum([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n123\n>>>\
    \ sum([1, 2, 3])\n6\n>>> sum([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n123\n>>>\
    \ sum([1, 2, 3])\n6\n>>> sum([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n123\n>>>\
    \ sum([1, 2, 3])\n6\n>>> sum([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n123\n>>>\
    \ sum([1, 2, 3])\n6\n>>> sum([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n123\n>>>\
    \ sum([1, 2, 3])\n6\n>>> sum([5, 3, -\nusing Test\n\n@testset begin\n\ncandidate\
    \ = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3,\
    \ -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpo3o6b2ab.jl:16\nin expression starting at\
    \ /tmp/tmpo3o6b2ab.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    if length(l)\
    \ == 0 \n        throw(ArgumentError(\"Vector is empty\"))\n    end\n    \n  \
    \  maximum = l[1]\n    for i in 2:length(l) \n        if maximum < l[i] \n   \
    \         maximum = l[i]\n        end\n    end\n    return maximum\nend\n</cell>\n\
    <text>\nmax_element()\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplp6zi7zr.jl:20\nin expression starting at\
    \ /tmp/tmplp6zi7zr.jl:20\n"
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = l[1]\n    for i in l[2:end]\n        if i > maximum\n            maximum =\
    \ i\n        end\n    end\n    return maximum\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    2      2

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    if l.length\
    \ == 0\n        throw(ArgumentError(\"Vector is empty\"))\n    end\n    \n   \
    \ maximum = l[1]\n    for i in 2:length(l)\n        if l[i] > maximum\n      \
    \      maximum = l[i]\n        end\n    end\n    return maximum\nend\n</cell>\n\
    <code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_n5xm4qv.jl:20\nin expression starting at\
    \ /tmp/tmp_n5xm4qv.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    if length(l)\
    \ == 0 \n        throw(ArgumentError(\"Vector is empty\"))\n    end\n    \n  \
    \  maximum = l[1]\n    for i in 2:length(l) \n        if l[i] > maximum \n   \
    \         maximum = l[i] \n        end\n    end\n    return maximum\nend\n</cell>\n\
    <code language=julia-1.3>\nmax_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    </cell>\n<text>\nExercise\nWrite a function that returns the sum of the elements\
    \ in the vector.\nWrite a function that returns the product of the elements in\
    \ the vector.\nWrite a function that returns the maximum of the elements in the\
    \ vector.\nWrite a function that returns the minimum of the elements in the vector.\n\
    Write a function that returns the absolute value of the elements in the vector.\n\
    using Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6g5d_h_7.jl:20\nin expression starting at\
    \ /tmp/tmp6g5d_h_7.jl:20\n"
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = l[1]\n    for i in l[2:end]\n        if i > maximum\n            maximum =\
    \ i\n        end\n    end\n    return maximum\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    2      2

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = l[1]\n    for i in l[2:end]\n        if i > maximum\n            maximum =\
    \ i\n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the index of the element with the maximum value\
    \ in a vector.\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppianit_j.jl:16\nin expression starting at\
    \ /tmp/tmppianit_j.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    \n  \
    \  maximum = l[1]\n    for i in 2:length(l)\n        if l[i] > maximum\n     \
    \       maximum = l[i]\n        end\n    end\n    return maximum\nend\n</cell>\n\
    <code language=julia-1.5>\nmax_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the index of the maximum\
    \ element in the vector.\n    >>> max_element_index(l::Vector{Int64})\n    >>>\
    \ max_element_index([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    12\n    \"\"\
    \"\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpag88t_7y.jl:17\nin expression starting at\
    \ /tmp/tmpag88t_7y.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = l[1]\n    for i in l[2:end]\n        if i > maximum\n            maximum =\
    \ i\n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.3>\n\
    using Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpv8py8o78.jl:16\nin expression starting at\
    \ /tmp/tmpv8py8o78.jl:16\n"
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    if length(l)\
    \ == 0 \n        throw(ArgumentError(\"Empty vector\"))\n    end\n    \n    maximum\
    \ = l[1]\n    for i in 2:length(l) \n        if l[i] > maximum \n            maximum\
    \ = l[i]\n        end\n    end\n    return maximum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    2      2

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    if length(l)\
    \ == 0 \n        return 0 \n    else \n        return l[argmax(l)]\nend\n</cell>\n\
    <code language=julia-1.5>\nmax_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    </cell>\n<text>\nExercise 4\nWrite a function that returns the index of the maximum\
    \ element in the vector.\n    >>> max_element_index(l::Vector{Int64})\n    >>>\
    \ max_element_index([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    12\n    \"\"\
    \"\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprflphj7i.jl:13\nin expression starting at\
    \ /tmp/tmprflphj7i.jl:13\n"
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    if length(l)\
    \ == 0 \n        throw(ArgumentError(\"Vector is empty\"))\n    end\n    max =\
    \ l[1]\n    for i in 2:length(l) \n        if l[i] > max \n            max = l[i]\n\
    \        end\n    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3,\
    \ -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    2      2

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    if length(l)\
    \ == 0 \n        throw(ArgumentError(\"Vector is empty\"))\n    end\n    \n  \
    \  maximum = l[1]\n    for i in 2:length(l) \n        if l[i] > maximum \n   \
    \         maximum = l[i]\n        end\n    end\n    return maximum\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the minimum element in the vector.\n\
    \    >>> min_element([1, 2, 3])\n    1\n    >>> min_element([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n    -10\n    \"\"\"\nusing Test\n\n@testset begin\n\n\
    candidate = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2y6oi5wx.jl:20\nin expression starting at\
    \ /tmp/tmp2y6oi5wx.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    return\
    \ maximum(l) \nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8q52w6je.jl:10\nin expression starting at\
    \ /tmp/tmp8q52w6je.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = l[1]\n    for i in 2:length(l)\n        if l[i] > maximum\n            maximum\
    \ = l[i]\n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpv2khryq8.jl:16\nin expression starting at\
    \ /tmp/tmpv2khryq8.jl:16\n"
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    if length(l)\
    \ == 0 \n        throw(ArgumentError(\"Vector is empty\"))\n    end\n    \n  \
    \  maximum = l[1]\n    for i in 2:length(l) \n        if l[i] > maximum \n   \
    \         maximum = l[i]\n        end\n    end\n    return maximum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1, 2,\
    \ 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    2      2

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    \n  \
    \  maximum = l[1]\n    for i in l[2:end]\n        if i > maximum\n           \
    \ maximum = i\n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the minimum element in the vector.\n    >>>\
    \ min_element([1, 2, 3])\n    1\n    >>> min_element([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n    -10\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3,\
    \ -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpr1a236rm.jl:17\nin expression starting at\
    \ /tmp/tmpr1a236rm.jl:17\n"
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    if length(l)\
    \ == 0 \n        throw(ArgumentError(\"Vector is empty\"))\n    end\n    maximum\
    \ = l[1]\n    for i in 2:length(l) \n        if l[i] > maximum \n            maximum\
    \ = l[i]\n        end\n    end\n    return maximum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    2      2

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = l[1]\n    for i in 2:length(l)\n        if l[i] > maximum\n            maximum\
    \ = l[i]\n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the minimum element in the vector.\n    >>>\
    \ min_element([1, 2, 3])\n    1\n    >>> min_element([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n    -10\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3,\
    \ -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpm21jbo2t.jl:16\nin expression starting at\
    \ /tmp/tmpm21jbo2t.jl:16\n"
  stdout: ''
- exit_code: -1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = max_element(l)\n    return maximum\nend\nusing Test\n\n@testset begin\n\n\
    candidate = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  status: Timeout
  stderr: None
  stdout: None
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = maximum(l) \n    for i in l\n        if i > maximum\n            maximum =\
    \ i\n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5dynrb51.jl:16\nin expression starting at\
    \ /tmp/tmp5dynrb51.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = l[1]\n    for i in 2:length(l)\n        if l[i] > maximum\n            maximum\
    \ = l[i]\n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpv2khryq8.jl:16\nin expression starting at\
    \ /tmp/tmpv2khryq8.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = l[1]\n    for i in 2:length(l)\n        if l[i] > maximum\n            maximum\
    \ = l[i]\n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpv2khryq8.jl:16\nin expression starting at\
    \ /tmp/tmpv2khryq8.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    if length(l)\
    \ == 0 \n        throw(ArgumentError(\"Vector is empty\"))\n    end\n    return\
    \ l[end]\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\
    \ncandidate = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfuwn2xm8.jl:13\nin expression starting at\
    \ /tmp/tmpfuwn2xm8.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    if length(l)\
    \ == 0 \n        throw(ArgumentError(\"Vector is empty\"))\n    end\n    return\
    \ maximum(l) \nend\n</cell>\n<code language=julia-1.4>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfus6mfw5.jl:13\nin expression starting at\
    \ /tmp/tmpfus6mfw5.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    \n  \
    \  maximum = l[1]\n    for i in l[2:end]\n        if i > maximum\n           \
    \ maximum = i\n        end\n    end\n    return maximum\nend\n</cell>\n<text>\n\
    Exercise 4\nWrite a function that returns the minimum element in the vector.\n\
    \    >>> min_element([1, 2, 3])\n    1\n    >>> min_element([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n    -10\n    \"\"\"\nusing Test\n\n@testset begin\n\n\
    candidate = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4137kgwg.jl:17\nin expression starting at\
    \ /tmp/tmp4137kgwg.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    if length(l)\
    \ == 0 \n        throw(ArgumentError(\"Vector is empty\"))\n    end\n    \n  \
    \  maximum = l[1]\n    for i in 2:length(l) \n        if l[i] > maximum \n   \
    \         maximum = l[i]\n        end\n    end\n    return maximum\nend\n</cell>\n\
    <text>\nmax_element\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprjc22xpv.jl:20\nin expression starting at\
    \ /tmp/tmprjc22xpv.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = l[1]\n    for i in l[2:end]\n        if i > maximum\n            maximum =\
    \ i\n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.3>\n\
    using Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpv8py8o78.jl:16\nin expression starting at\
    \ /tmp/tmpv8py8o78.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = l[1]\n    for i in l[2:end]\n        if i > maximum\n            maximum =\
    \ i\n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n</cell>\n<text>\nmax_element\
    \ function can be also written using reduce function from Base package:\nusing\
    \ Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1, 2,\
    \ 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplqy5kv5z.jl:16\nin expression starting at\
    \ /tmp/tmplqy5kv5z.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    if length(l)\
    \ == 0 \n        throw(ArgumentError(\"Vector is empty\"))\n    end\n    return\
    \ l[end]\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpljblxsh6.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpljblxsh6.jl:19\n  Expression: candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n   Evaluated: -10 == 124\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpljblxsh6.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpljblxsh6.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     1      2\n"
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = l[1]\n    for i in l[2:end]\n        if i > maximum\n            maximum =\
    \ i\n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the minimum element in the vector.\n    >>>\
    \ min_element([1, 2, 3])\n    1\n    >>> min_element([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n    -10\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3,\
    \ -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0kaqtq7b.jl:16\nin expression starting at\
    \ /tmp/tmp0kaqtq7b.jl:16\n"
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    if length(l)\
    \ == 0 \n        throw(ArgumentError(\"Vector is empty\"))\n    end\n    maximum\
    \ = l[1]\n    for i in 2:length(l) \n        if l[i] > maximum \n            maximum\
    \ = l[i] \n        end\n    end\n    return maximum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    2      2

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    return\
    \ max(l)\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\
    \ncandidate = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprva_2cdh.jl:10\nin expression starting at\
    \ /tmp/tmprva_2cdh.jl:10\n"
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    if length(l)\
    \ == 0 \n        throw(ArgumentError(\"Vector is empty\"))\n    end\n    \n  \
    \  maximum = l[1]\n    for i in 2:length(l) \n        if l[i] > maximum \n   \
    \         maximum = l[i]\n        end\n    end\n    return maximum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1, 2,\
    \ 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    2      2

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    if length(l)\
    \ == 0 \n        throw(ArgumentError(\"Vector is empty\"))\n    end\n    \n  \
    \  maximum = l[1]\n    for i in 2:length(l) \n        if l[i] > maximum \n   \
    \         maximum = l[i]\n        end\n    end\n    return maximum\nend\n</cell>\n\
    <text>\nmax_element\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprjc22xpv.jl:20\nin expression starting at\
    \ /tmp/tmprjc22xpv.jl:20\n"
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = l[1]\n    for x in l[2:end]\n        if x > maximum\n            maximum =\
    \ x\n        end\n    end\n    return maximum\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    2      2

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = l[1]\n    for i in l[2:end]\n        if i > maximum\n            maximum =\
    \ i\n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8vcov6fo.jl:16\nin expression starting at\
    \ /tmp/tmp8vcov6fo.jl:16\n"
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = l[1]\n    for i in l[2:end]\n        if i > maximum\n            maximum =\
    \ i\n        end\n    end\n    return maximum\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    2      2

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = l[1]\n    for i in 2:length(l)\n        if l[i] > maximum\n            maximum\
    \ = l[i]\n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns the minimum element in the vector.\n    >>>\
    \ min_element([1, 2, 3])\n    1\n    >>> min_element([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n    -10\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3,\
    \ -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplqkc8ywo.jl:16\nin expression starting at\
    \ /tmp/tmplqkc8ywo.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    if length(l)\
    \ == 0 \n        throw(ArgumentError(\"Vector is empty\"))\n    end\n    maximum\
    \ = l[1]\n    for i in 2:length(l) \n        if l[i] > maximum \n            maximum\
    \ = l[i]\n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.3>\n\
    max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n</cell>\n<text>\n3.2.3 min_element\n\
    min_element(l::Vector{T}) where T<:AbstractFloat\nmin_element(l::Vector{T}) where\
    \ T<:AbstractInt\nmin_element(l::Vector{T}) where T<:AbstractInt64\nmin_element(l::Vector{T})\
    \ where T<:AbstractString\nmin_element(l::Vector{T}) where T<:AbstractArray\n\
    min_element(l::Vector{T}) where T<:AbstractAbstractArray\nmin_element(l::Vector{T})\
    \ where T<:AbstractSparseArray\nmin_element(l::Vector{T}) where T<:AbstractSparseArrayCSC\n\
    min_element(l::Vector{T}) where T<:AbstractSparseArrayCSR\nmin_element(l::Vector{T})\
    \ where T<:AbstractSparseArrayCOO\nmin_element(l::Vector{T}) where T<:AbstractSparseArrayRow\n\
    min_element(l::Vector{T}) where T<:AbstractSparseArrayCSX\nmin_element(l::Vector{T})\
    \ where T<:AbstractSparseArrayCSC\nmin_element(l::Vector{T}) where T<:AbstractSparseArrayCSR\n\
    min_element(l::Vector{T}) where T<:AbstractSparseArrayCOO\nmin_element(l::Vector{T})\
    \ where T<:AbstractSparseArrayRow\nmin_element(l::Vector{T}) where T<:AbstractSparseArrayCSX\n\
    min_element(l::Vector{T}) where T<:AbstractSparseArrayCSC\nmin_element(l::Vector{T})\
    \ where T<:AbstractSparseArrayCSR\nmin_element(l::Vector{T}) where T<:AbstractSparseArrayCOO\n\
    min_element(l::Vector{T}) where T<:AbstractSparseArrayRow\nmin_element(l::Vector{T})\
    \ where T<:AbstractSparseArrayCSX\nmin_element(l::Vector{T}) where T<:AbstractSparseArrayCSC\n\
    min_element(l::Vector{T}) where T<:AbstractSparseArrayCSR\nmin_element(l::Vector{T})\
    \ where T<\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprscvxep9.jl:19\nin expression starting at\
    \ /tmp/tmprscvxep9.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = l[1]\n    for i in l[2:end]\n        if i > maximum\n            maximum =\
    \ i\n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8vcov6fo.jl:16\nin expression starting at\
    \ /tmp/tmp8vcov6fo.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    if length(l)\
    \ == 0 \n        throw(ArgumentError(\"Vector is empty\"))\n    end\n    maximum\
    \ = l[1]\n    for i in 2:length(l) \n        if l[i] > maximum \n            maximum\
    \ = l[i] \n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpswx3wzjl.jl:19\nin expression starting at\
    \ /tmp/tmpswx3wzjl.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = max_element(l)\n    minimum = min_element(l)\n    if minimum > maximum\n \
    \       minimum\n    else\n        maximum\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the minimum element in the vector.\nWrite a\
    \ function that returns the maximum element in the vector.\nWrite a function that\
    \ returns the median element in the vector.\nWrite a function that returns the\
    \ mean element in the vector.\nWrite a function that returns the variance element\
    \ in the vector.\nWrite a function that returns the standard deviation element\
    \ in the vector.\nWrite a function that returns the sum of the elements in the\
    \ vector.\nWrite a function that returns the product of the elements in the vector.\n\
    Write a function that returns the product of the elements in the vector and multiplies\
    \ it by 2.\nWrite a function that returns the product of the elements in the vector\
    \ and multiplies it by 3.\nWrite a function that returns the product of the elements\
    \ in the vector and multiplies it by 4.\nWrite a function that returns the product\
    \ of the elements in the vector and multiplies it by 5.\nWrite a function that\
    \ returns the product of the elements in the vector and multiplies it by 6.\n\
    Write a function that returns the product of the elements in the vector and multiplies\
    \ it by 7.\nWrite a function that returns the product of the elements in the vector\
    \ and multiplies it by 8.\nWrite a function that returns the product of the elements\
    \ in the vector and multiplies it by 9.\nWrite a function that returns the product\
    \ of the elements in the vector and multiplies it by 10.\nWrite a function that\
    \ returns the product of the elements in the vector and multiplies it by 11.\n\
    Write a function that returns the product of the elements in the vector and multiplies\
    \ it by 12.\nWrite a function that returns the product of the elements in the\
    \ vector and multiplies it by 13.\nWrite a function that returns the product of\
    \ the elements in the vector and multiplies it by 14.\nWrite a function that returns\
    \ the product of the elements in the vector and multiplies it by 15.\nWrite a\
    \ function that returns the product of the elements in the vector and multiplies\
    \ it by 16.\nWrite a function that returns the product of the elements in the\
    \ vector and multiplies it by 17.\nWrite a function that returns the product of\
    \ the elements in the vector and multiplies it by 18.\nWrite a function that returns\
    \ the product of the elements in the vector and multiplies it by 19.\nWrite a\
    \ function that returns the product of the elements in the vector and multiplies\
    \ it by 20.\nWrite a function that returns the product of the elements in the\
    \ vector and multiplies it by 21.\nWrite a function that returns the product of\
    \ the elements in the vector and multiplies it by 22.\nWrite a function that returns\
    \ the product of the elements in the vector and multiplies it by 23.\nWrite a\
    \ function that returns the product of the elements in the vector and multiplies\
    \ it by 24.\nWrite \nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppv0yfls5.jl:16\nin expression starting at\
    \ /tmp/tmppv0yfls5.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = l[1]\n    for i in l[2:end]\n        if i > maximum\n            maximum =\
    \ i\n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns the index of the maximum element in the vector.\n\
    \    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n    123\n    >>> max_element([-10, -9, -8, -7, -6, -5,\
    \ -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9])\n    10\n    >>> max_element([-10,\
    \ -9, -8, -7, -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9])\n    10\n\
    \    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdvedu7za.jl:16\nin expression starting at\
    \ /tmp/tmpdvedu7za.jl:16\n"
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    if length(l)\
    \ == 0 \n        throw(ArgumentError(\"Vector is empty\"))\n    end\n    maximum\
    \ = l[1]\n    for i in 2:length(l) \n        if l[i] > maximum \n            maximum\
    \ = l[i]\n        end\n    end\n    return maximum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    2      2

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = l[1]\n    for i in l[2:end]\n        if i > maximum\n            maximum =\
    \ i\n        end\n    end\n    return maximum\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    2      2

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    if length(l)\
    \ == 0 \n        throw(ArgumentError(\"Vector is empty\"))\n    end\n    maximum\
    \ = l[1]\n    for i in 2:length(l) \n        if l[i] > maximum \n            maximum\
    \ = l[i]\n        end\n    end\n    return maximum\nend\n</cell>\n<text>\nmax_element\n\
    using Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcqqm6x8n.jl:19\nin expression starting at\
    \ /tmp/tmpcqqm6x8n.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    if length(l)\
    \ == 0 \n        throw(ArgumentError(\"Vector is empty\"))\n    end\n    \n  \
    \  maximum = l[1]\n    for i in 2:length(l) \n        if l[i] > maximum \n   \
    \         maximum = l[i]\n        end\n    end\n    return maximum\nend\n</cell>\n\
    <text>\nmax_element()\nThis function returns the maximum element in a vector.\n\
    using Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6dhczqfk.jl:20\nin expression starting at\
    \ /tmp/tmp6dhczqfk.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    if length(l)\
    \ == 0 \n        throw(ArgumentError(\"Vector is empty\"))\n    end\n    maximum\
    \ = l[1]\n    for i in 2:length(l) \n        if l[i] > maximum \n            maximum\
    \ = l[i]\n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpbw4678xv.jl:19\nin expression starting at\
    \ /tmp/tmpbw4678xv.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = l[1]\n    for i in 2:length(l)\n        if l[i] > maximum\n            maximum\
    \ = l[i]\n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns the minimum element in the vector.\n    >>>\
    \ min_element([1, 2, 3])\n    1\n    >>> min_element([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n    -10\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3,\
    \ -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplqkc8ywo.jl:16\nin expression starting at\
    \ /tmp/tmplqkc8ywo.jl:16\n"
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    \n  \
    \  maximum = l[1]\n    for i in l[2:end]\n        if i > maximum\n           \
    \ maximum = i\n        end\n    end\n    return maximum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    2      2

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    if length(l)\
    \ == 0 \n        throw(ArgumentError(\"Vector is empty\"))\n    end\n    maximum\
    \ = l[1]\n    for i in 2:length(l) \n        if l[i] > maximum \n            maximum\
    \ = l[i]\n        end\n    end\n    return maximum\nend\n</cell>\n<text>\nmax_element()\n\
    using Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpot0wcixa.jl:19\nin expression starting at\
    \ /tmp/tmpot0wcixa.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = l[1]\n    for x in l[2:end]\n        if x > maximum\n            maximum =\
    \ x\n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the sum of the elements in the vector.\n  \
    \  >>> sum([1, 2, 3])\n    6\n    >>> sum([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    \    123\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpz8di4zp3.jl:16\nin expression starting at\
    \ /tmp/tmpz8di4zp3.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = l[1]\n    for x in l[2:end]\n        if x > maximum\n            maximum =\
    \ x\n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpsawzmlzr.jl:16\nin expression starting at\
    \ /tmp/tmpsawzmlzr.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    if length(l)\
    \ == 0 \n        throw(ArgumentError(\"Vector is empty\"))\n    end\n    maximum\
    \ = l[1]\n    for i in 2:length(l) \n        if l[i] > maximum \n            maximum\
    \ = l[i] \n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.3>\n\
    using Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmfu6sdnm.jl:19\nin expression starting at\
    \ /tmp/tmpmfu6sdnm.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    \n  \
    \  maximum = l[1]\n    for i in l[2:end]\n        if i > maximum\n           \
    \ maximum = i\n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the minimum element in the vector.\n    >>>\
    \ min_element([1, 2, 3])\n    1\n    >>> min_element([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n    -10\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3,\
    \ -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpr1a236rm.jl:17\nin expression starting at\
    \ /tmp/tmpr1a236rm.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    if length(l)\
    \ == 0 \n        throw(ArgumentError(\"Vector is empty\"))\n    end\n    maximum\
    \ = l[1]\n    for i in 2:length(l) \n        if l[i] > maximum \n            maximum\
    \ = l[i] \n        end\n    end\n    return maximum\nend\n</cell>\n<text>\nmax_element()\n\
    using Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp97h5s5a5.jl:19\nin expression starting at\
    \ /tmp/tmp97h5s5a5.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = l[1]\n    for i in 2:length(l)\n        if l[i] > maximum\n            maximum\
    \ = l[i]\n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n</cell>\n<text>\nmax_element!\n\
    max_element!() modifies the vector in place. \nIt returns the modified vector\
    \ and does not return anything.\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpj_lljgs4.jl:16\nin expression starting at\
    \ /tmp/tmpj_lljgs4.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    \n  \
    \  maximum = l[1]\n    for i in 2:length(l)\n        if l[i] > maximum\n     \
    \       maximum = l[i]\n        end\n    end\n    return maximum\nend\n</cell>\n\
    <code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpb1bkumwf.jl:17\nin expression starting at\
    \ /tmp/tmpb1bkumwf.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = l[1]\n    for i in 2:length(l)\n        if l[i] > maximum\n            maximum\
    \ = l[i]\n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the index of the maximum element in the vector.\n\
    using Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgvgy_lfk.jl:16\nin expression starting at\
    \ /tmp/tmpgvgy_lfk.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = l[1]\n    for i in 2:length(l)\n        if l[i] > maximum\n            maximum\
    \ = l[i]\n        end\n    end\n    return maximum\nend\n</code>\n<|/ a dscore=1\
    \ |>\n<| c |>\nThanks for your answer. Your code works fine but i was looking\
    \ for a more efficient solution. Thanks anyway\n<|/ c |>\n<| c |>\nI believe that\
    \ my solution is more efficient than yours. I believe that your solution uses\
    \ `sort` function which has O(n log n) complexity. My solution uses `maximum`\
    \ function which has O(n) complexity. My solution also uses `sort` function which\
    \ has O(n log n) complexity. My solution also uses `maximum` function which has\
    \ O(n) complexity. My solution also uses `sort` function which has O(n log n)\
    \ complexity. My solution also uses `maximum` function which has O(n) complexity.\
    \ My solution also uses `sort` function which has O(n log n) complexity. My solution\
    \ also uses `maximum` function which has O(n) complexity. My solution also uses\
    \ `sort` function which has O(n log n) complexity. My solution also uses `maximum`\
    \ function which has O(n) complexity.\n<|/ c |>\n<| c |>\nI believe that my solution\
    \ is more efficient than yours. I believe that your solution uses `sort` function\
    \ which has O(n log n) complexity. My solution uses `maximum` function which has\
    \ O(n) complexity. My solution also uses `sort` function which has O(n log n)\
    \ complexity. My solution also uses `maximum` function which has O(n) complexity.\
    \ My solution also uses `sort` function which has O(n log n) complexity. My solution\
    \ also uses `maximum` function which has O(n) complexity. My solution also uses\
    \ `sort` function which has O(n log n) complexity. My solution also uses `maximum`\
    \ function which has O(n) complexity.\n<|/ c |>\n<| c |>\nI believe that my solution\
    \ is more efficient than yours. I believe that your solution uses `sort` function\
    \ which has O(n log n) complexity. My solution uses `maximum` function which has\
    \ O(n) complexity. My solution also uses `sort` function which has O(n log n)\
    \ complexity. My solution also uses `maximum` \nusing Test\n\n@testset begin\n\
    \ncandidate = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5o_zh_f1.jl:16\nin expression starting at\
    \ /tmp/tmp5o_zh_f1.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    if length(l)\
    \ == 0 \n        throw(ArgumentError(\"Vector is empty\"))\n    end\n    maximum\
    \ = l[1]\n    for i in 2:length(l) \n        if l[i] > maximum \n            maximum\
    \ = l[i] \n        end\n    end\n    return maximum\nend\n</cell>\n<text>\nExercise\
    \ 3: Write a function that returns the sum of the elements in the vector.\n  \
    \  >>> sum_element([1, 2, 3])\n    6\n    >>> sum_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3,\
    \ -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmqwusdp9.jl:19\nin expression starting at\
    \ /tmp/tmpmqwusdp9.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    if l.length\
    \ == 1\n        return l[0]\n    end\n    maximum = l[1]\n    for i in 2:length(l)\n\
    \        if l[i] > maximum\n            maximum = l[i]\n        end\n    end\n\
    \    return maximum\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpvsnv7nlm.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpvsnv7nlm.jl:24\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 3]) == 3\n  type Array has no field length\n \
    \ Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] max_element(l::Vector{Int64})\n\
    \     @ Main /tmp/tmpvsnv7nlm.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpvsnv7nlm.jl:24 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpvsnv7nlm.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpvsnv7nlm.jl:25\n  Test threw exception\n  Expression:\
    \ candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n  type Array has\
    \ no field length\n  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n\
    \   [2] max_element(l::Vector{Int64})\n     @ Main /tmp/tmpvsnv7nlm.jl:8\n   [3]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpvsnv7nlm.jl:25 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpvsnv7nlm.jl:23\nTest Summary:\
    \ | Error  Total\ntest set      |     2      2\n"
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = l[1]\n    for i in l[2:end]\n        if i > maximum\n            maximum =\
    \ i\n        end\n    end\n    maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp17vu8vig.jl:16\nin expression starting at\
    \ /tmp/tmp17vu8vig.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = l[1]\n    for i in 2:length(l)\n        if l[i] > maximum\n            maximum\
    \ = l[i]\n        end\n    end\n    return maximum\nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns the minimum element in the vector.\n    >>>\
    \ min_element([1, 2, 3])\n    1\n    >>> min_element([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n    -10\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3,\
    \ -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdcht0x16.jl:16\nin expression starting at\
    \ /tmp/tmpdcht0x16.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    if l.length\
    \ == 1\n        return l[0]\n    end\n    \n    maximum = l[1]\n    for i in l[2:end]\n\
    \        if i > maximum\n            maximum = i\n        end\n    end\n    return\
    \ maximum\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmplwesw5hy.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmplwesw5hy.jl:25\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 3]) == 3\n  type Array has no field length\n \
    \ Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] max_element(l::Vector{Int64})\n\
    \     @ Main /tmp/tmplwesw5hy.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmplwesw5hy.jl:25 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmplwesw5hy.jl:24\ntest set:\
    \ Error During Test at /tmp/tmplwesw5hy.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n  type Array has\
    \ no field length\n  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n\
    \   [2] max_element(l::Vector{Int64})\n     @ Main /tmp/tmplwesw5hy.jl:8\n   [3]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmplwesw5hy.jl:26 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmplwesw5hy.jl:24\nTest Summary:\
    \ | Error  Total\ntest set      |     2      2\n"
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = l[1]\n    for i in l[2:end]\n        if i > maximum\n            maximum =\
    \ i\n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8vcov6fo.jl:16\nin expression starting at\
    \ /tmp/tmp8vcov6fo.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = max_element(l)\n    for e in l\n        if e > maximum\n            maximum\
    \ = e\n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2qtqkhdg.jl:16\nin expression starting at\
    \ /tmp/tmp2qtqkhdg.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = l[1]\n    for x in l[2:end]\n        if x > maximum\n            maximum =\
    \ x\n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpsawzmlzr.jl:16\nin expression starting at\
    \ /tmp/tmpsawzmlzr.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    if length(l)\
    \ == 0 \n        throw(ArgumentError(\"Vector is empty\"))\n    end\n    \n  \
    \  max = l[1]\n    for i in 2:length(l) \n        if l[i] > max \n           \
    \ max = l[i] \n        end\n    end\n    return max\nend\n</cell>\n<code language=julia-1.4>\n\
    using Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpi08z8xts.jl:20\nin expression starting at\
    \ /tmp/tmpi08z8xts.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = l[1]\n    for i in 2:length(l)\n        if l[i] > maximum\n            maximum\
    \ = l[i]\n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpv2khryq8.jl:16\nin expression starting at\
    \ /tmp/tmpv2khryq8.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    if length(l)\
    \ == 0 \n        throw(ArgumentError(\"Vector is empty\"))\n    end\n    maximum\
    \ = l[1]\n    for i in 2:length(l) \n        if l[i] > maximum \n            maximum\
    \ = l[i]\n        end\n    end\n    return maximum\nend\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the sum of the elements in the vector.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1, 2,\
    \ 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpoisy04ar.jl:19\nin expression starting at\
    \ /tmp/tmpoisy04ar.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    if length(l)\
    \ == 0 \n        throw(ArgumentError(\"Vector is empty\"))\n    end\n    max =\
    \ l[1]\n    for i in 2:length(l) \n        if l[i] > max \n            max = l[i]\n\
    \        end\n    end\n    return max\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwsv2sizg.jl:19\nin expression starting at\
    \ /tmp/tmpwsv2sizg.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    if length(l)\
    \ == 0 \n        return 0 \n    else \n        return l[argmax(l)]\n    end\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3,\
    \ -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjz1jeneu.jl:14\nin expression starting at\
    \ /tmp/tmpjz1jeneu.jl:14\n"
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    \n  \
    \  maximum = l[1]\n    for i in 2:length(l)\n        if l[i] > maximum\n     \
    \       maximum = l[i]\n        end\n    end\n    maximum\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\
    \t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    2      2

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = l[1]\n    for x in l[2:end]\n        if x > maximum\n            maximum =\
    \ x\n        end\n    end\n    return maximum\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    2      2

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    return\
    \ max(l)\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmp3wn1z_ji.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp3wn1z_ji.jl:15\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 3]) == 3\n  MethodError: no method matching max(::Vector{Int64})\n\
    \  Closest candidates are:\n    max(::Any, !Matched::Missing) at /shared/centos7/julia/1.7.3/share/julia/base/missing.jl:137\n\
    \    max(::Any, !Matched::Any) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:492\n\
    \    max(::Any, !Matched::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n\
    \    ...\n  Stacktrace:\n   [1] max_element(l::Vector{Int64})\n     @ Main /tmp/tmp3wn1z_ji.jl:8\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3wn1z_ji.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3wn1z_ji.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp3wn1z_ji.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n  MethodError: no\
    \ method matching max(::Vector{Int64})\n  Closest candidates are:\n    max(::Any,\
    \ !Matched::Missing) at /shared/centos7/julia/1.7.3/share/julia/base/missing.jl:137\n\
    \    max(::Any, !Matched::Any) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:492\n\
    \    max(::Any, !Matched::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n\
    \    ...\n  Stacktrace:\n   [1] max_element(l::Vector{Int64})\n     @ Main /tmp/tmp3wn1z_ji.jl:8\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3wn1z_ji.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3wn1z_ji.jl:14\nTest Summary:\
    \ | Error  Total\ntest set      |     2      2\n"
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    \n  \
    \  if length(l) == 0 \n        return 0 \n    else \n        return max(l) \n\
    end \n</cell>\n<code language=julia-1.3>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3,\
    \ -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpbqmfn64f.jl:14\nin expression starting at\
    \ /tmp/tmpbqmfn64f.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    if length(l)\
    \ == 0 \n        throw(ArgumentError(\"Vector is empty\"))\n    end\n    maximum\
    \ = l[1]\n    for i in 2:length(l) \n        if l[i] > maximum \n            maximum\
    \ = l[i] \n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.4>\n\
    max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns the sum of the elements of a vector.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1, 2,\
    \ 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpomwkrjy4.jl:19\nin expression starting at\
    \ /tmp/tmpomwkrjy4.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    if length(l)\
    \ == 0 \n        throw(ArgumentError(\"Vector is empty\"))\n    end\n    maximum\
    \ = l[1]\n    for i in 2:length(l) \n        if l[i] > maximum \n            maximum\
    \ = l[i]\n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the minimum element in the vector.\n    >>>\
    \ min_element([1, 2, 3])\n    1\n    >>> min_element([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n    -10\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3,\
    \ -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpk7wedyut.jl:19\nin expression starting at\
    \ /tmp/tmpk7wedyut.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = max_element(l)\n    return maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxmempw4z.jl:11\nin expression starting at\
    \ /tmp/tmpxmempw4z.jl:11\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    if length(l)\
    \ == 0 \n        throw(ArgumentError(\"Vector is empty\"))\n    end\n    return\
    \ l[end]\nend\n</cell>\n<text>\nExercise: Write a function that returns the minimum\
    \ element in the vector.\n    >>> min_element([1, 2, 3])\n    1\n    >>> min_element([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    -10\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjmm222vk.jl:13\nin expression starting at\
    \ /tmp/tmpjmm222vk.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = l[1]\n    for i in l[2:end]\n        if i > maximum\n            maximum =\
    \ i\n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the minimum element in the vector.\n    >>>\
    \ min_element([1, 2, 3])\n    1\n    >>> min_element([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n    -10\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3,\
    \ -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0kaqtq7b.jl:16\nin expression starting at\
    \ /tmp/tmp0kaqtq7b.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = l[1]\n    for i in 2:length(l)\n        if l[i] > maximum\n            maximum\
    \ = l[i]\n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpv2khryq8.jl:16\nin expression starting at\
    \ /tmp/tmpv2khryq8.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    return\
    \ max(l)\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmp3wn1z_ji.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp3wn1z_ji.jl:15\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 3]) == 3\n  MethodError: no method matching max(::Vector{Int64})\n\
    \  Closest candidates are:\n    max(::Any, !Matched::Missing) at /shared/centos7/julia/1.7.3/share/julia/base/missing.jl:137\n\
    \    max(::Any, !Matched::Any) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:492\n\
    \    max(::Any, !Matched::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n\
    \    ...\n  Stacktrace:\n   [1] max_element(l::Vector{Int64})\n     @ Main /tmp/tmp3wn1z_ji.jl:8\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3wn1z_ji.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3wn1z_ji.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp3wn1z_ji.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n  MethodError: no\
    \ method matching max(::Vector{Int64})\n  Closest candidates are:\n    max(::Any,\
    \ !Matched::Missing) at /shared/centos7/julia/1.7.3/share/julia/base/missing.jl:137\n\
    \    max(::Any, !Matched::Any) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:492\n\
    \    max(::Any, !Matched::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n\
    \    ...\n  Stacktrace:\n   [1] max_element(l::Vector{Int64})\n     @ Main /tmp/tmp3wn1z_ji.jl:8\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3wn1z_ji.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3wn1z_ji.jl:14\nTest Summary:\
    \ | Error  Total\ntest set      |     2      2\n"
- exit_code: 0
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = l[1]\n    for i in l[2:end]\n        if i > maximum\n            maximum =\
    \ i\n        end\n    end\n    return maximum\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    2      2

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    \n  \
    \  maximum = l[1]\n    for i in 2:length(l)\n        if l[i] > maximum\n     \
    \       maximum = l[i]\n        end\n    end\n    return maximum\nend\n</cell>\n\
    <code language=julia-1.5>\nmax_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the minimum element\
    \ in the vector.\n    >>> min_element([1, 2, 3])\n    1\n    >>> min_element([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    -10\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpt_iy5yy5.jl:17\nin expression starting at\
    \ /tmp/tmpt_iy5yy5.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = l[1]\n    for i in l[2:end]\n        if i > maximum\n            maximum =\
    \ i\n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8vcov6fo.jl:16\nin expression starting at\
    \ /tmp/tmp8vcov6fo.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    \n  \
    \  maximum = l[1]\n    for i in 2:length(l)\n        if l[i] > maximum\n     \
    \       maximum = l[i]\n        end\n    end\n    return maximum\nend\n</cell>\n\
    <code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpb1bkumwf.jl:17\nin expression starting at\
    \ /tmp/tmpb1bkumwf.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = l[1]\n    for i in 2:length(l)\n        if l[i] > maximum\n            maximum\
    \ = l[i]\n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpv2khryq8.jl:16\nin expression starting at\
    \ /tmp/tmpv2khryq8.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    return\
    \ max(l)\nend\n</cell>\n<code language=julia-1.5>\nmax_element([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the sum of the elements in the vector.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3,\
    \ -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptadtxa99.jl:10\nin expression starting at\
    \ /tmp/tmptadtxa99.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = l[1]\n    for i in l[2:end]\n        if i > maximum\n            maximum =\
    \ i\n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.3>\n\
    using Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpv8py8o78.jl:16\nin expression starting at\
    \ /tmp/tmpv8py8o78.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    if length(l)\
    \ == 0 \n        throw(ArgumentError(\"Vector is empty\"))\n    end\n    maximum\
    \ = l[1]\n    for i in 2:length(l) \n        if l[i] > maximum \n            maximum\
    \ = l[i]\n        end\n    end\n    return maximum\nend\n</cell>\n<text>\nmax_element()\n\
    The max_element() function returns the maximum element in a vector. \nIf the vector\
    \ is empty, an ArgumentError is thrown.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3,\
    \ -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0u8dtv_f.jl:19\nin expression starting at\
    \ /tmp/tmp0u8dtv_f.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    \n  \
    \  maximum = l[1]\n    for i in 2:length(l)\n        if l[i] > maximum\n     \
    \       maximum = l[i]\n        end\n    end\n    return maximum\nend\n</cell>\n\
    <code language=julia-1.5>\nmax_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    </cell>\n<text>\nThe function max_element returns the maximum element in the vector\
    \ l. \nThe function max_element has two arguments: l and an index. \nThe function\
    \ max_element returns the maximum element in the vector l at the index i. \nThe\
    \ function max_element has two return values: maximum and i. \nThe function max_element\
    \ has two arguments: l and an index. \nThe function max_element returns the maximum\
    \ element in the vector l at the index i. \nThe function max_element has two return\
    \ values: maximum and i. \nThe function max_element has two arguments: l and an\
    \ index. \nThe function max_element returns the maximum element in the vector\
    \ l at the index i. \nThe function max_element has two return values: maximum\
    \ and i. \nThe function max_element has two arguments: l and an index. \nThe function\
    \ max_element returns the maximum element in the vector l at the index i. \nThe\
    \ function max_element has two return values: maximum and i. \nThe function max_element\
    \ has two arguments: l and an index. \nThe function max_element returns the maximum\
    \ element in the vector l at the index i. \nThe function max_element has two return\
    \ values: maximum and i. \nThe function max_element has two arguments: l and an\
    \ index. \nThe function max_element returns the maximum element in the vector\
    \ l at the index i. \nThe function max_element has two return values: maximum\
    \ and i. \nThe function max_element has two arguments: l and an index. \nThe function\
    \ max_element returns the maximum element in the vector l at the index i. \nThe\
    \ function max_element has two return values: maximum and i. \nThe function max_element\
    \ has two arguments: l and an index. \nThe function max_element returns the maximum\
    \ element in the vector l at the index i. \nThe function max_element has two return\
    \ values: maximum and i. \nThe function max_element has two arguments: l and an\
    \ index. \nThe function max_element returns the maximum element in the vector\
    \ l at the index i. \nThe function max_element has two return values: maximum\
    \ and i. \nThe function max_element has two arguments: l and an index. \nThe function\
    \ max_element returns the maximum element in the vector l at the index i. \nThe\
    \ function max_element has two return values: maximum and i. \nThe function max_element\
    \ has two arguments: l and an index. \nusing Test\n\n@testset begin\n\ncandidate\
    \ = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3,\
    \ -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpaxb8fdg1.jl:17\nin expression starting at\
    \ /tmp/tmpaxb8fdg1.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    if length(l)\
    \ == 0 \n        throw(ArgumentError(\"Vector is empty\"))\n    end\n    \n  \
    \  maximum = l[1]\n    for i in 2:length(l) \n        if l[i] > maximum \n   \
    \         maximum = l[i]\n        end\n    end\n    return maximum\nend\n</cell>\n\
    <code language=julia-1.4>\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2uhmnpgf.jl:20\nin expression starting at\
    \ /tmp/tmp2uhmnpgf.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = l[1]\n    for i in l[2:end]\n        if i > maximum\n            maximum =\
    \ i\n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.4>\n\
    using Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp65cpx1a2.jl:16\nin expression starting at\
    \ /tmp/tmp65cpx1a2.jl:16\n"
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    if length(l)\
    \ == 0 \n        throw(ArgumentError(\"Vector is empty\"))\n    end\n    maximum\
    \ = l[1]\n    for i in 2:length(l) \n        if l[i] > maximum \n            maximum\
    \ = l[i]\n        end\n    end\n    return maximum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    2      2

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = l[1]\n    for i in l[2:end]\n        if i > maximum\n            maximum =\
    \ i\n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8vcov6fo.jl:16\nin expression starting at\
    \ /tmp/tmp8vcov6fo.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    return\
    \ max(l)\nend\n</cell>\n<code language=julia-1.5>\nmax_element([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the minimum element in the vector.\n    >>> min_element([1, 2, 3])\n    1\n\
    \    >>> min_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    -10\n    \"\
    \"\"\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpg_x3btq9.jl:10\nin expression starting at\
    \ /tmp/tmpg_x3btq9.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    return\
    \ maximum(l) \nend\n</cell>\n<code language=julia-1.3>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2fxqxug0.jl:10\nin expression starting at\
    \ /tmp/tmp2fxqxug0.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    if l.length\
    \ == 0\n        throw(ArgumentError(\"Cannot compute max element of empty vector\"\
    ))\n    end\n    max = l[1]\n    for i in 2:length(l)\n        if l[i] > max\n\
    \            max = l[i]\n        end\n    end\n    return max\nend\n</cell>\n\
    <code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpaof6blvh.jl:19\nin expression starting at\
    \ /tmp/tmpaof6blvh.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = l[1]\n    for i in l[2:end]\n        if i > maximum\n            maximum =\
    \ i\n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8vcov6fo.jl:16\nin expression starting at\
    \ /tmp/tmp8vcov6fo.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    \n  \
    \  maximum = l[1]\n    for element in l[2:end]\n        if element > maximum\n\
    \            maximum = element\n        end\n    end\n    return maximum\nend\n\
    </cell>\n<code language=julia-1.3>\nmax_element([5, 3, -5, 2, -3, 3, 9, 0, 123,\
    \ 1, -10])\n</cell>\n<text>\nExercise 3\nWrite a function that returns the index\
    \ of the maximum element in a vector.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3,\
    \ -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpz2q7ilpg.jl:17\nin expression starting at\
    \ /tmp/tmpz2q7ilpg.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = maximum(l) \n    for i in l\n        if i > maximum\n            maximum =\
    \ i\n        end\n    end\n    return maximum\nend\n</code>\n<|/ a tags=julia\
    \ |>\n<| a tags=julia |>\nI like to use this approach for vectors:\n<code>\nusing\
    \ Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1, 2,\
    \ 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpt5jtkqf6.jl:16\nin expression starting at\
    \ /tmp/tmpt5jtkqf6.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    if length(l)\
    \ == 0 \n        throw(ArgumentError(\"Vector is empty\"))\n    end\n    maximum\
    \ = l[1]\n    for i in 2:length(l) \n        if l[i] > maximum \n            maximum\
    \ = l[i]\n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpbw4678xv.jl:19\nin expression starting at\
    \ /tmp/tmpbw4678xv.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    if length(l)\
    \ == 0 \n        throw(ArgumentError(\"Vector is empty\"))\n    end\n    \n  \
    \  maximum = l[1]\n    for i in 2:length(l) \n        if l[i] > maximum \n   \
    \         maximum = l[i]\n        end\n    end\n    return maximum\nend\n</cell>\n\
    <code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpt6u_j5fc.jl:20\nin expression starting at\
    \ /tmp/tmpt6u_j5fc.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = l[1]\n    for i in l[2:end]\n        if i > maximum\n            maximum =\
    \ i\n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.4>\n\
    max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns the index of the maximum element in the vector.\n\
    using Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp64q9scn_.jl:16\nin expression starting at\
    \ /tmp/tmp64q9scn_.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = l[1]\n    for i in 2:length(l)\n        if l[i] > maximum\n            maximum\
    \ = l[i]\n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.4>\n\
    using Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjq35c5m_.jl:16\nin expression starting at\
    \ /tmp/tmpjq35c5m_.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = maximum(l) \n    for x in l \n        if x > maximum \n            maximum\
    \ = x \n        end \n    end \n    return maximum \nend \n</code>\n<|/ a dscore=1\
    \ |>\n<| a tags=julia,arrays |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3,\
    \ -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpeim6jh1f.jl:16\nin expression starting at\
    \ /tmp/tmpeim6jh1f.jl:16\n"
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    if length(l)\
    \ == 0 \n        throw(ArgumentError(\"Vector is empty\"))\n    end\n    \n  \
    \  maximum = l[1]\n    for i in 2:length(l) \n        if maximum < l[i] \n   \
    \         maximum = l[i]\n        end\n    end\n    return maximum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1, 2,\
    \ 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    2      2

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    if l.length==0\n\
    \        throw(ArgumentError(\"Vector is empty\"))\n    end\n    maximum = l[1]\n\
    \    for i in 2:length(l)\n        if l[i] > maximum\n            maximum = l[i]\n\
    \        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqc7h7gly.jl:19\nin expression starting at\
    \ /tmp/tmpqc7h7gly.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = l[1]\n    for i in 2:length(l)\n        if l[i] > maximum\n            maximum\
    \ = l[i]\n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n</cell>\n<text>\n4.3 Return\
    \ minimum element in the vector.\nReturn minimum element in the vector.\n    >>>\
    \ min_element([1, 2, 3])\n    1\n    >>> min_element([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n    -10\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3,\
    \ -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpv5la8ht6.jl:16\nin expression starting at\
    \ /tmp/tmpv5la8ht6.jl:16\n"
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    if length(l)\
    \ == 0 \n        throw(ArgumentError(\"Vector is empty\"))\n    end\n    return\
    \ maximum(l) \nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    2      2

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = l[1]\n    for i in l[2:end]\n        if i > maximum\n            maximum =\
    \ i\n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.3>\n\
    using Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpv8py8o78.jl:16\nin expression starting at\
    \ /tmp/tmpv8py8o78.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = l[1]\n    for i in l[2:end]\n        if i > maximum\n            maximum =\
    \ i\n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8vcov6fo.jl:16\nin expression starting at\
    \ /tmp/tmp8vcov6fo.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    \n  \
    \  maximum = l[1]\n    for e in l[2:end]\n        if e > maximum\n           \
    \ maximum = e\n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpv94n0id1.jl:17\nin expression starting at\
    \ /tmp/tmpv94n0id1.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = l[1]\n    for i in l[2:end]\n        if i > maximum\n            maximum =\
    \ i\n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8vcov6fo.jl:16\nin expression starting at\
    \ /tmp/tmp8vcov6fo.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    \n  \
    \  maximum = l[1]\n    for i in l[2:end]\n        if i > maximum\n           \
    \ maximum = i\n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgtxep2pr.jl:17\nin expression starting at\
    \ /tmp/tmpgtxep2pr.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = l[1]\n    for i in 2:length(l)\n        if l[i] > maximum\n            maximum\
    \ = l[i]\n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.4>\n\
    max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the index of the maximum element in the vector.\n\
    \    >>> max_element_index([1, 2, 3])\n    2\n    >>> max_element_index([5, 3,\
    \ -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    12\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp270k14jq.jl:16\nin expression starting at\
    \ /tmp/tmp270k14jq.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    if l.length\
    \ == 1\n        return l[0]\n    end\n    maximum = l[1]\n    for i in 2:length(l)\
    \ \n        if l[i] > maximum\n            maximum = l[i]\n        end\n    end\n\
    \    return maximum\nend\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThis is not the\
    \ fastest solution. `@time max_element([5,3,-5,2,-3,3,9,0,123,1,-10])` returns\
    \ `123` but `@time max_element([5,3,-5,2,-3,3,9,0,123,1,-10])` returns `123` as\
    \ well. `@time max_element([5,3,-5,2,-3,3,9,0,123,1,-10])` returns `123` as well.\
    \ `@time max_element([5,3,-5,2,-3,3,9,0,123,1,-10])` returns `123` as well. `@time\
    \ max_element([5,3,-5,2,-3,3,9,0,123,1,-10])` returns `123` as well. `@time max_element([5,3,-5,2,-3,3,9,0,123,1,-10])`\
    \ returns `123` as well. `@time max_element([5,3,-5,2,-3,3,9,0,123,1,-10])` returns\
    \ `123` as well. `@time max_element([5,3,-5,2,-3,3,9,0,123,1,-10])` returns `123`\
    \ as well. `@time max_element([5,3,-5,2,-3,3,9,0,123,1,-10])` returns `123` as\
    \ well. `@time max_element([5,3,-5,2,-3,3,9,0,123,1,-10])` returns `123` as well.\
    \ `@time max_element([5,3,-5,2,-3,3,9,0,123,1,-10])` returns `123` as well. `@time\
    \ max_element([5,3,-5,2,-3,3,9,0,123,1,-10])` returns `123` as well. `@time max_element([5,3,-5,2,-3,3,9,0,123,1,-10])`\
    \ returns `123` as well. `@time max_element([5,3,-5,2,-3,3,9,0,123,1,-10])` returns\
    \ `123` as well. `@time max_element([5,3,-5,2,-3,3,9,0,123,1,-10])` returns `123`\
    \ as well. `@time max_element([5,3,-5,2,-3,3,9,0,123,1,-10])` returns `123` as\
    \ well. `@time max_element([5,3,-5,2,-3,3,9,0,123,1,-10])` returns `123` as well.\
    \ `@time max_\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpet3m6dj8.jl:19\nin expression starting at\
    \ /tmp/tmpet3m6dj8.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    return\
    \ max(l)\nend\n</cell>\n<text>\nExercise 3\nWrite a function that returns the\
    \ minimum element in the vector.\n    >>> min_element([1, 2, 3])\n    1\n    >>>\
    \ min_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    -10\n    \"\"\"\n\
    using Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpslnkx085.jl:10\nin expression starting at\
    \ /tmp/tmpslnkx085.jl:10\n"
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = l[1]\n    for i in 2:length(l)\n        if l[i] > maximum\n            maximum\
    \ = l[i]\n        end\n    end\n    return maximum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    2      2

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = l[1]\n    for i in l[2:end]\n        if i > maximum\n            maximum =\
    \ i\n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8vcov6fo.jl:16\nin expression starting at\
    \ /tmp/tmp8vcov6fo.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = l[1]\n    for i in 2:length(l)\n        if l[i] > maximum\n            maximum\
    \ = l[i]\n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpv2khryq8.jl:16\nin expression starting at\
    \ /tmp/tmpv2khryq8.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = l[1]\n    for i in l[2:end]\n        if i > maximum\n            maximum =\
    \ i\n        end\n    end\n    maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp17vu8vig.jl:16\nin expression starting at\
    \ /tmp/tmp17vu8vig.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = maximum(l) \n    for x in l \n        if x > maximum \n            maximum\
    \ = x \n        end \n    end \n    return maximum \nend \n</code>\n<|/ a tags=julia\
    \ |>\n<| c |>\n`maximum` already does what you want, so you can just do `maximum(l)`.\n\
    <|/ c |>\n<| c |>\nYes, but `maximum` does not work on `Int64` vectors. I added\
    \ a version that does work on `Int64` vectors.\n<|/ c |>\n<| c |>\n`maximum` does\
    \ work on `Int64` vectors. Try `maximum(Int64[1,2,3])`.\n<|/ c |>\n<| c |>\nYes,\
    \ it does. Try `maximum(Int64[1,2,3])`.\n<|/ c |>\n<| c |>\nOh, I see what you\
    \ mean. Yes, `maximum` does work on `Int64` vectors. I thought you were talking\
    \ about `maximum` not working on `Int64` vectors. I guess I misunderstood your\
    \ question.\n<|/ c |>\n<| a dscore=1 |>\n<code>\nusing Test\n\n@testset begin\n\
    \ncandidate = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4l9i0owq.jl:16\nin expression starting at\
    \ /tmp/tmp4l9i0owq.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = max_element(l)\n    return maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxmempw4z.jl:11\nin expression starting at\
    \ /tmp/tmpxmempw4z.jl:11\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    if length(l)\
    \ == 0 \n        throw(ArgumentError(\"Vector is empty\"))\n    end\n    \n  \
    \  maximum = l[1]\n    for i in 2:length(l) \n        if l[i] > maximum \n   \
    \         maximum = l[i]\n        end\n    end\n    return maximum\nend\n</cell>\n\
    <code language=julia-1.3>\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpi2eckxpi.jl:20\nin expression starting at\
    \ /tmp/tmpi2eckxpi.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = maximum(l) \n    for x in l \n        if x > maximum \n            maximum\
    \ = x \n        end \n    end \n    return maximum \nend \n</code>\n<|/ a tags=julia\
    \ |>\n<| a dscore=1 |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfz_tkfi6.jl:16\nin expression starting at\
    \ /tmp/tmpfz_tkfi6.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = l[1]\n    for i in 2:length(l)\n        if l[i] > maximum\n            maximum\
    \ = l[i]\n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpv2khryq8.jl:16\nin expression starting at\
    \ /tmp/tmpv2khryq8.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = l[1]\n    for i in l[2:end]\n        if i > maximum\n            maximum =\
    \ i\n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8vcov6fo.jl:16\nin expression starting at\
    \ /tmp/tmp8vcov6fo.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    \n  \
    \  maximum = l[1]\n    for i in l[2:end]\n        if i > maximum\n           \
    \ maximum = i\n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgtxep2pr.jl:17\nin expression starting at\
    \ /tmp/tmpgtxep2pr.jl:17\n"
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    return\
    \ maximum(l)\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\t\
    @test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 124, 1, -10]) == 124)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    2      2

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    if length(l)\
    \ == 0 \n        throw(ArgumentError(\"Vector is empty\"))\n    end\n    maximum\
    \ = l[1]\n    for i in 2:length(l) \n        if l[i] > maximum \n            maximum\
    \ = l[i]\n        end\n    end\n    return maximum\nend\n</cell>\n<text>\nmax_element\n\
    using Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcqqm6x8n.jl:19\nin expression starting at\
    \ /tmp/tmpcqqm6x8n.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    if length(l)\
    \ == 0 \n        throw(ArgumentError(\"Vector is empty\"))\n    end\n    \n  \
    \  maximum = l[1]\n    for i in 2:length(l) \n        if l[i] > maximum \n   \
    \         maximum = l[i]\n        end\n    end\n    return maximum\nend\n</cell>\n\
    <text>\nExercise 10\nWrite a function that returns the sum of the elements in\
    \ the vector.\n    >>> sum_element([1, 2, 3])\n    6\n    >>> sum_element([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5ja__24c.jl:20\nin expression starting at\
    \ /tmp/tmp5ja__24c.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = l[1]\n    for i in 2:length(l)\n        if l[i] > maximum\n            maximum\
    \ = l[i]\n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns the minimum element in the vector.\n    >>>\
    \ min_element([1, 2, 3])\n    1\n    >>> min_element([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n    -10\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3,\
    \ -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplqkc8ywo.jl:16\nin expression starting at\
    \ /tmp/tmplqkc8ywo.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = l[1]\n    for i in l[2:end]\n        if i > maximum\n            maximum =\
    \ i\n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8vcov6fo.jl:16\nin expression starting at\
    \ /tmp/tmp8vcov6fo.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = l[1]\n    for i in 2:length(l)\n        if l[i] > maximum\n            maximum\
    \ = l[i]\n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n</cell>\n<text>\nExercise\
    \ 4\nWrite a function that returns the sum of the elements in the vector.\n  \
    \  >>> sum_element([1, 2, 3])\n    6\n    >>> sum_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3,\
    \ -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpbhmwimlf.jl:16\nin expression starting at\
    \ /tmp/tmpbhmwimlf.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = l[1]\n    for i in l[2:end]\n        if i > maximum\n            maximum =\
    \ i\n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8vcov6fo.jl:16\nin expression starting at\
    \ /tmp/tmp8vcov6fo.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    \n  \
    \  maximum = l[1]\n    for i in l[2:end]\n        if i > maximum\n           \
    \ maximum = i\n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgtxep2pr.jl:17\nin expression starting at\
    \ /tmp/tmpgtxep2pr.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    \n  \
    \  maximum = l[1]\n    for i in 2:length(l)\n        if l[i] > maximum\n     \
    \       maximum = l[i]\n        end\n    end\n    return maximum\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the sum of the elements in the\
    \ vector.\n    >>> sum_element([1, 2, 3])\n    6\n    >>> sum_element([5, 3, -5,\
    \ 2, -3, 3, 9, 0, 123, 1, -10])\n    10\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphaxgr9r3.jl:17\nin expression starting at\
    \ /tmp/tmphaxgr9r3.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = l[1]\n    for i in 2:length(l)\n        if l[i] > maximum\n            maximum\
    \ = l[i]\n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpv2khryq8.jl:16\nin expression starting at\
    \ /tmp/tmpv2khryq8.jl:16\n"
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = l[1]\n    for i in l[2:end]\n        if i > maximum\n            maximum =\
    \ i\n        end\n    end\n    return maximum\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    2      2

    '
  stdout: ''
- exit_code: -1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = max_element(l)\n    for el in l\n        if el > maximum\n            maximum\
    \ = el\n        end\n    end\n    return maximum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  status: Timeout
  stderr: None
  stdout: None
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = l[1]\n    for i in l[2:end]\n        if i > maximum\n            maximum =\
    \ i\n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.4>\n\
    max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the minimum element in the vector.\n    >>>\
    \ min_element([1, 2, 3])\n    1\n    >>> min_element([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n    -10\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3,\
    \ -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpbjf135nd.jl:16\nin expression starting at\
    \ /tmp/tmpbjf135nd.jl:16\n"
  stdout: ''
- exit_code: 0
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    if length(l)\
    \ == 0 \n        throw(ArgumentError(\"Empty vector\"))\n    end\n    maximum\
    \ = l[1]\n    for i in 2:length(l) \n        if l[i] > maximum \n            maximum\
    \ = l[i] \n        end\n    end\n    return maximum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    2      2

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = l[1]\n    for i in l[2:end]\n        if i > maximum\n            maximum =\
    \ i\n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8vcov6fo.jl:16\nin expression starting at\
    \ /tmp/tmp8vcov6fo.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = l[1]\n    for x in l[2:end]\n        if x > maximum\n            maximum =\
    \ x\n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpsawzmlzr.jl:16\nin expression starting at\
    \ /tmp/tmpsawzmlzr.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    maximum\
    \ = l[1]\n    for i in l[2:end]\n        if i > maximum\n            maximum =\
    \ i\n        end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
    \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8vcov6fo.jl:16\nin expression starting at\
    \ /tmp/tmp8vcov6fo.jl:16\n"
  stdout: ''

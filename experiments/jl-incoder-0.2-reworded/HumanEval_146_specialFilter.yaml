name: HumanEval_146_specialFilter
language: jl
prompt: "\"\"\"Write a function that takes a vector of numbers as input and returns\
  \ \n    the number of elements in the vector that are greater than 10 and both \n\
  \    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
  \    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33, -2,\
  \ -3, 45, 21, 109])\n    2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
  \ \n"
tests: "using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
  \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
  \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
  \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
  \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
completions: ["    count = 0\n    for n in nums\n        if n > 10\n            if\
    \ n % 2 == 1\n                if n % 4 == 1\n                    count += 1\n\
    \            end\n        end\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.5>\n@assert specialFilter([15, -73, 14, -15]) == 1 \"First\
    \ example\"\n@assert specialFilter([33, -2, -3, 45, 21, 109]) == 2 \"Second example\"\
    \n</cell>\n<text>\nExercise 3\nWrite a function that takes a vector of numbers\
    \ as input and returns \n    the number of elements in the vector that are greater\
    \ than 10 and both \n    first and last digits of a number are even (1, 3, 5,\
    \ 7, 9).\n    For example:\n    >>> specialFilter([15, -73, 14, -15])\n    1\n\
    \    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count\
    \ = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2 == 0\n    \
    \        count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.0>\n# Run this cell to test your function\n@assert specialFilter([15,\
    \ -73, 14, -15]) == 1 \n@assert specialFilter([33, -2, -3, 45, 21, 109]) == 2\
    \ \n</cell>\n<text>\nProblem 4\nWrite a function that takes a vector of numbers\
    \ as input and returns \n    the number of elements in the vector that are divisible\
    \ by 7 and \n    both first and last digits are even (1, 3, 5, 7, 9).\n    For\
    \ example:\n    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    1\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes a vector of numbers as input and returns \n \
    \   the number of elements in the vector that are greater than 10 and both \n\
    \    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10 && n % 2 == 1 && n % 2 == 0\n            count += 1\n     \
    \   end\n    end\n    return count\nend\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that takes a vector of numbers as input and returns \n    the number\
    \ of elements in the vector that are greater than 10 and both \n    first and\
    \ last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    >>>\
    \ specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3,\
    \ 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n     \
    \   if n > 10 && n % 2 == 1 && n % 2 == 0 && n % 1 == 1\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\n</cell>\n<text>\nExercise 4\n\
    Write a function that takes a vector of numbers as input and returns \n    the\
    \ number of elements in the vector that are greater than 10 and both \n    first\
    \ and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n   \
    \ >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n \
    \       if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes a vector of numbers as input and returns \n \
    \   the number of elements in the vector that are greater than 10 and both \n\
    \    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for num in nums\n\
    \        if num > 10\n            if num % 2 == 0\n                if num % 3\
    \ == 0\n                    if num % 5 == 0\n                        count +=\
    \ 1\n                    end\n                end\n            end\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\nspecialFilter([15,\
    \ -73, 14, -15])\n</cell>\n<text>\nExercise 2\nWrite a function that takes a vector\
    \ of numbers as input and returns \n    the number of elements in the vector that\
    \ are greater than 10 and both \n    first and last digits of a number are odd\
    \ (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15, -73, 14, -15])\n\
    \    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n    \"\"\"",
  "    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\n# Run this cell to test your function\
    \ above\n@assert specialFilter([15, -73, 14, -15]) == 1 \n@assert specialFilter([33,\
    \ -2, -3, 45, 21, 109]) == 2 \n</cell>\n<text>\n (b) Write a function that takes\
    \ a vector of numbers as input and returns \n    the number of elements in the\
    \ vector that are greater than 10 and both \n    first and last digits of a number\
    \ are even (2, 4, 6, 8, 10).\n    For example:\n    >>> specialFilter([15, -73,\
    \ 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n\
    \    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10 && n % 2 ==\
    \ 1 && n % 3 == 1 && n % 5 == 1\n            count += 1\n        end\n    end\n\
    \    return count\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ a vector of numbers as input and returns \n    the number of elements in the\
    \ vector that are greater than 10 and both \n    first and last digits of a number\
    \ are even (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15, -73,\
    \ 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n\
    \    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10 && n % 2 ==\
    \ 1 && n % 3 == 1 && n % 5 == 1\n            count += 1\n        end\n    end\n\
    \    return count\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ a vector of numbers as input and returns \n    the number of elements in the\
    \ vector that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15, -73,\
    \ 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n\
    \    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10 && n % 2 ==\
    \ 1 && n % 3 == 1 && n % 5 == 1\n            count += 1\n        end\n    end\n\
    \    return count\nend\n</cell>\n<code language=julia-1.5>\n@assert specialFilter([15,\
    \ -73, 14, -15]) == 1;\n@assert specialFilter([33, -2, -3, 45, 21, 109]) == 2;\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes a vector of numbers as\
    \ input and returns \n    the number of elements in the vector that are greater\
    \ than 10 and both \n    first and last digits of a number are even (1, 3, 5,\
    \ 7, 9).\n    For example:\n    >>> specialFilter([15, -73, 14, -15])\n    1\n\
    \    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    0\n    \"\"\"", "    count\
    \ = 0\n    for n in nums\n        if n > 10\n            count += 1\n        \
    \    if n % 2 == 1\n                count += 1\n                if n % 4 == 1\n\
    \                    count += 1\n            end\n        end\n    end\n    return\
    \ count\nend", "    count = 0\n    for n in nums\n        if n > 10\n        \
    \    if n % 2 == 1\n                if n % 4 == 1\n                    count +=\
    \ 1\n            end\n        end\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.5>", "    count = 0\n    for num in nums\n        if num >\
    \ 10\n            if num % 2 == 1\n                if num % 10 == 1\n        \
    \            count += 1\n                end\n            end\n        end\n \
    \   end\n    return count\nend\n</cell>\n<text>\nExercise 4\nWrite a function\
    \ that takes a vector of numbers as input and returns \n    the number of elements\
    \ in the vector that are greater than 10 and both \n    first and last digits\
    \ of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15,\
    \ -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n  \
    \  2\n    \"\"\"", "    count = 0\n    for num in nums\n        if num > 10\n\
    \            if num % 2 == 1\n                if num % 10 == 1\n             \
    \       count += 1\n                end\n            end\n        end\n    end\n\
    \    return count\nend\n</cell>\n<code language=julia-1.5>", "    count = 0\n\
    \    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2 == 0\n          \
    \  count += 1\n        end\n    end\n    return count\nend\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a vector of numbers as input and returns\
    \ \n    the number of elements in the vector that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10\n            count += 1\n            if n % 2 == 1\n      \
    \          count += 1\n                if n % 4 == 1\n                    count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-0.6>\n\
    specialFilter([15, -73, 14, -15])\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes a vector of numbers as input and returns \n    the number of elements\
    \ in the vector that are greater than 10 and both \n    first and last digits\
    \ of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15,\
    \ -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n  \
    \  2\n    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10\n    \
    \        if n % 2 == 1\n                count += 1\n            end\n        end\n\
    \    end\n    return count\nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes a vector of numbers as input and returns \n    the number of elements\
    \ in the vector that are greater than 10 and both \n    first and last digits\
    \ of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15,\
    \ -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n  \
    \  2\n    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10\n    \
    \        if n % 2 == 1\n                if n % 4 == 1\n                    count\
    \ += 1\n            end\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\n@assert specialFilter([15, -73, 14, -15]) == 1 \"Odd\
    \ first and last digit\"\n@assert specialFilter([33, -2, -3, 45, 21, 109]) ==\
    \ 2 \"Even first and last digit\"\n</cell>\n<text>\nExercise 4\nWrite a function\
    \ that takes a vector of numbers as input and returns \n    the number of elements\
    \ in the vector that are greater than 10 and both \n    first and last digits\
    \ of a number are even (2, 4, 6, 8, 10).\n    For example:\n    >>> specialFilter([15,\
    \ -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n  \
    \  2\n    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10\n    \
    \        count += 1\n            if n % 2 == 1\n                if n % 4 == 1\n\
    \                    count += 1\n            end\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.0>\n@assert specialFilter([15, -73,\
    \ 14, -15]) == 1 \n@assert specialFilter([33, -2, -3, 45, 21, 109]) == 2 \n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes a vector of numbers as input and\
    \ returns \n    the number of elements in the vector that are greater than 10\
    \ and both \n    first and last digits of a number are even (1, 3, 5, 7, 9).\n\
    \    For example:\n    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for num in nums\n\
    \        if num > 10 && num % 2 == 1 && num % 3 == 1 && num % 5 == 1 && num %\
    \ 7 == 1 && num % 9 == 1\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.0>\n@time filterSpecial([15, -73,\
    \ 14, -15])\n</cell>\n<code language=julia-1.0>\n@time filterSpecial([33, -2,\
    \ -3, 45, 21, 109])\n</cell>\n<text>\nExercise: Write a function that takes a\
    \ vector of numbers as input and returns \n    the number of elements in the vector\
    \ that are greater than 10 and both \n    first and last digits of a number are\
    \ odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15, -73, 14,\
    \ -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n    \"\
    \"\"", "    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n@time specialFilter([15, -73, 14, -15])\n\
    </cell>\n<code language=julia-1.5>\n@time specialFilter([33, -2, -3, 45, 21, 109])\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes a vector of numbers as\
    \ input and returns \n    the number of elements in the vector that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    >>> specialFilter([15, -73, 14, -15])\n    1\n  \
    \  >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count\
    \ = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2 == 0\n    \
    \        count += 1\n        end\n    end\n    return count\nend\n</cell>\n<text>\n\
    Exercise 3: Write a function that takes a vector of numbers as input and returns\
    \ \n    the number of elements in the vector that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for num in nums\n\
    \        if num > 10\n            if num % 2 == 1\n                if num % 10\
    \ == 1\n                    count += 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.0>\n\
    # Run this cell to load the solution and test your function against the solution.\n\
    @test specialFilter([15, -73, 14, -15]) == 1 # Passed\n@test specialFilter([33,\
    \ -2, -3, 45, 21, 109]) == 2 # Passed\n</cell>\n<text>\nProblem 3\nWrite a function\
    \ that takes a vector of numbers as input and returns \n    the number of elements\
    \ in the vector that are greater than 10 and both \n    first and last digits\
    \ of a number are even (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15,\
    \ -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n  \
    \  0\n    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10 && n %\
    \ 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n@time specialFilter([15,\
    \ -73, 14, -15])\n</cell>\n<code language=julia-1.5>\n@time specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a vector of numbers as input and returns \n    the number of elements in the\
    \ vector that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15, -73,\
    \ 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n\
    \    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10\n         \
    \   count += 1\n            if n % 2 == 1\n                count += 1\n      \
    \          if n % 4 == 1\n                    count += 1\n        end\n    end\n\
    \    return count\nend\n</cell>\n<code language=julia-1.4>\nspecialFilter([15,\
    \ -73, 14, -15])\n</cell>\n<text>\nExercise 3\nWrite a function that takes a vector\
    \ of numbers as input and returns \n    the number of elements in the vector that\
    \ are greater than 10 and both \n    first and last digits of a number are odd\
    \ (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15, -73, 14, -15])\n\
    \    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n    \"\"\"",
  "    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function that takes a vector of numbers\
    \ as input and returns \n    the number of elements in the vector that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    >>> specialFilter([15, -73, 14, -15])\n    1\n  \
    \  >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count\
    \ = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2 == 0\n    \
    \        count += 1\n        end\n    end\n    return count\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes a vector of numbers as input and returns\
    \ \n    the number of elements in the vector that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10 && n % 2 == 1 && n % 2 == 0\n            count += 1\n     \
    \   end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    specialFilter([15, -73, 14, -15])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a vector of numbers as input and returns \n    the number of elements\
    \ in the vector that are greater than 10 and both \n    first and last digits\
    \ of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15,\
    \ -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n  \
    \  2\n    \"\"\"", "    count = 0\n    for num in nums\n        if num > 10 &&\
    \ num % 2 == 1 && num % 2 == 0\n            count += 1\n        end\n    end\n\
    \    return count\nend\n</cell>\n<code language=julia-1.5>\n# Run this cell to\
    \ test your function\n@assert specialFilter([15, -73, 14, -15]) == 1 \n@assert\
    \ specialFilter([33, -2, -3, 45, 21, 109]) == 2 \n</cell>\n<text>\nQuestion 3\n\
    Write a function that takes a vector of numbers as input and returns \n    the\
    \ number of elements in the vector that are greater than 10 and both \n    first\
    \ and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n   \
    \ >>> specialFilter([15, -73, 14, -15]) == 1 \n    >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109]) == 2 \n    \"\"\"", "    count = 0\n    for n in nums\n  \
    \      if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes a vector of numbers as input and returns \n \
    \   the number of elements in the vector that are greater than 10 and both \n\
    \    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<text>\nExercise\
    \ 4\nWrite a function that takes a vector of numbers as input and returns \n \
    \   the number of elements in the vector that are greater than 10 and both \n\
    \    first and last digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n\
    \    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10 && n % 2 == 1 && n % 2 == 0 && n % 1 == 1\n            count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes a vector of numbers as input and returns \n \
    \   the number of elements in the vector that are greater than 10 and both \n\
    \    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10 && n % 2 == 1 && n % 2 == 0\n            count += 1\n     \
    \   end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.3>\n\
    # Run this cell to load the tests.\ninclude(\"Tests.jl\")\n</cell>\n<code language=julia-1.3>\n\
    @test specialFilter([15, -73, 14, -15]) == 1;\n@test specialFilter([33, -2, -3,\
    \ 45, 21, 109]) == 2;\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ a vector of numbers as input and returns \n    the number of elements in the\
    \ vector that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15, -73,\
    \ 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n\
    \    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10\n         \
    \   count += 1\n            if n % 2 == 1\n                count += 1\n      \
    \          if n % 4 == 1\n                    count += 1\n        end\n    end\n\
    \    return count\nend\n</cell>\n<code language=julia-1.0>\nspecialFilter([15,\
    \ -73, 14, -15])\n</cell>\n<text>\nExercise 3\nWrite a function that takes a vector\
    \ of numbers as input and returns \n    the number of elements in the vector that\
    \ are greater than 10 and both \n    first and last digits of a number are even\
    \ (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15, -73, 14, -15])\n\
    \    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n    \"\"\"",
  "    count = 0\n    for num in nums\n        if num > 10\n            if num % 2\
    \ == 0 && num % 2 == 1 && num % 2 != 0\n                count += 1\n         \
    \   end\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.3>\n\
    @time specialFilter([15, -73, 14, -15])\n</cell>\n<code language=julia-1.3>\n\
    @time specialFilter([33, -2, -3, 45, 21, 109])\n</cell>\n<text>\nExercise 3\n\
    Write a function that takes a vector of numbers as input and returns \n    the\
    \ number of elements in the vector that are greater than 10 and both \n    first\
    \ and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n   \
    \ >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for num in nums\n\
    \        if num > 10\n            count += 1\n            if num % 2 == 1 && num\
    \ % 3 == 1 && num % 5 == 1\n                count += 1\n            end\n    \
    \    end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    @time specialFilter([15, -73, 14, -15])\n</cell>\n<code language=julia-1.5>\n\
    @time specialFilter([33, -2, -3, 45, 21, 109])\n</cell>\n<text>\nExercise 3\n\
    Write a function that takes a vector of numbers as input and returns \n    the\
    \ number of elements in the vector that are greater than 10 and both \n    first\
    \ and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n   \
    \ >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for num in nums\n\
    \        if num > 10\n            count += 1\n            if num % 2 == 1 && num\
    \ % 3 == 1 && num % 5 == 1\n                count += 1\n        end\n    end\n\
    \    return count\nend\n</cell>\n<code language=julia-1.5>\n# Run this cell to\
    \ test your function\n@assert specialFilter([15, -73, 14, -15]) == 1 \n@assert\
    \ specialFilter([33, -2, -3, 45, 21, 109]) == 2 \n</cell>\n<text>\nQuestion 3\n\
    Write a function that takes a vector of numbers as input and returns \n    the\
    \ number of elements in the vector that are greater than 10 and both \n    first\
    \ and last digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n  \
    \  >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n \
    \       if n > 10 && n % 2 == 1 && n % 2 == 0\n            count += 1\n      \
    \  end\n    end\n    return count\nend\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a vector of numbers as input and returns \n    the number of elements\
    \ in the vector that are greater than 10 and both \n    first and last digits\
    \ of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15,\
    \ -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n  \
    \  2\n    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10 && n %\
    \ 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ takes a vector of numbers as input and returns \n    the number of elements\
    \ in the vector that are greater than 10 and both \n    first and last digits\
    \ of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15,\
    \ -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n  \
    \  2\n    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10\n    \
    \        count += 1\n            if n % 2 == 1\n                count += 1\n \
    \               if n % 4 == 1\n                    count += 1\n        end\n \
    \   end\n    return count\nend\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a vector of numbers as input and returns \n    the number of elements\
    \ in the vector that are greater than 10 and both \n    first and last digits\
    \ of a number are even (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15,\
    \ -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n  \
    \  2\n    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10 && n %\
    \ 2 == 1 && n % 2 == 0\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<text>\nExercise 2\nWrite a function that takes a vector\
    \ of numbers as input and returns \n    the number of elements in the vector that\
    \ are greater than 10 and both \n    first and last digits of a number are odd\
    \ (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15, -73, 14, -15])\n\
    \    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n    \"\"\"",
  "    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<text>\nExercise 4\nWrite a function that takes a vector of numbers\
    \ as input and returns \n    the number of elements in the vector that are greater\
    \ than 10 and both \n    first and last digits of a number are even (1, 3, 5,\
    \ 7, 9).\n    For example:\n    >>> specialFilter([15, -73, 14, -15])\n    1\n\
    \    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    0\n    \"\"\"", "    count\
    \ = 0\n    for n in nums\n        if n > 10\n            count += 1\n        \
    \    if n % 2 == 1 && n % 3 == 1 && n % 5 == 1\n                count += 1\n \
    \       end\n    end\n    return count\nend\n</cell>\n<code language=julia-0.6>\n\
    @time specialFilter([15, -73, 14, -15])\n</cell>\n<code language=julia-0.6>\n\
    @time specialFilter([33, -2, -3, 45, 21, 109])\n</cell>\n<text>\nExercise 2\n\
    Write a function that takes a vector of numbers as input and returns \n    the\
    \ number of elements in the vector that are greater than 10 and both \n    first\
    \ and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n   \
    \ >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n \
    \       if n > 10 && n % 2 == 1 && n % 2 == 0\n            count += 1\n      \
    \  end\n    end\n    return count\nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes a vector of numbers as input and returns \n    the number of elements\
    \ in the vector that are greater than 10 and both \n    first and last digits\
    \ of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15,\
    \ -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n  \
    \  2\n    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10\n    \
    \        count += 1\n            if n % 2 == 1\n                count += 1\n \
    \               if n % 4 == 1\n                    count += 1\n        end\n \
    \   end\n    return count\nend\n</cell>\n<code language=julia-1.4>", "    count\
    \ = 0\n    for num in nums\n        if num > 10\n            count += 1\n    \
    \        if num % 2 == 0 && num % 3 != 0\n                count += 1\n       \
    \     if num % 2 == 1 && num % 3 != 1\n                count += 1\n        end\n\
    \    end\n    return count\nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes a vector of numbers as input and returns \n    the number of elements\
    \ in the vector that are greater than 10 and both \n    first and last digits\
    \ of a number are even (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15,\
    \ -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n  \
    \  2\n    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10\n    \
    \        if n % 2 == 1\n                if n % 4 == 1\n                    count\
    \ += 1\n                end\n            end\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<text>\nExercise 4\nWrite a function that takes a vector\
    \ of numbers as input and returns \n    the number of elements in the vector that\
    \ are greater than 10 and both \n    first and last digits of a number are odd\
    \ (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15, -73, 14, -15])\n\
    \    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n    \"\"\"",
  "    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function that takes a vector of numbers\
    \ as input and returns \n    the number of elements in the vector that are greater\
    \ than 10 and both \n    first and last digits of a number are even (1, 3, 5,\
    \ 7, 9).\n    For example:\n    >>> specialFilter([15, -73, 14, -15])\n    1\n\
    \    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count\
    \ = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2 == 0\n    \
    \        count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.3>\n@time specialFilter([15, -73, 14, -15])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a vector of numbers as input and returns\
    \ \n    the number of elements in the vector that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10\n            count += 1\n            if n % 2 == 1\n      \
    \          count += 1\n                if n % 4 == 1\n                    count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.0>\n\
    @assert specialFilter([15, -73, 14, -15]) == 1 \n@assert specialFilter([33, -2,\
    \ -3, 45, 21, 109]) == 2 \n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ takes a vector of numbers as input and returns \n    the number of elements\
    \ in the vector that are greater than 10 and both \n    first and last digits\
    \ of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15,\
    \ -73, 14, -15]) == 1 \n    >>> specialFilter([33, -2, -3, 45, 21, 109]) == 2\
    \ \n    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10 && n % 2\
    \ == 1 && n % 2 == 0\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\n# TEST Write a function that\
    \ takes a vector of numbers as input and returns \n# the number of elements in\
    \ the vector that are greater than 10 and both \n# first and last digits of a\
    \ number are odd (1, 3, 5, 7, 9).\n# For example:\n# >>> specialFilter([15, -73,\
    \ 14, -15])\n# 1\n# >>> specialFilter([33, -2, -3, 45, 21, 109])\n# 2\n</cell>\n\
    <code language=julia-1.5>\n# Write a function that takes a vector of numbers as\
    \ input and returns \n# the number of elements in the vector that are greater\
    \ than 10 and both \n# first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n# For example:\n# >>> specialFilter([15, -73, 14, -15])\n# 1\n# >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n# 2\n</cell>\n<code language=julia-1.5>\n# TEST Write\
    \ a function that takes a vector of numbers as input and returns \n# the number\
    \ of elements in the vector that are greater than 10 and both \n# first and last\
    \ digits of a number are odd (1, 3, 5, 7, 9).\n# For example:\n# >>> specialFilter([15,\
    \ -73, 14, -15])\n# 1\n# >>> specialFilter([33, -2, -3, 45, 21, 109])\n# 2\n</cell>\n\
    <code language=julia-1.5>\n# Write a function that takes a vector of numbers as\
    \ input and returns \n# the number of elements in the vector that are greater\
    \ than 10 and both \n# first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n# For example:\n# >>> specialFilter([15, -73, 14, -15])\n# 1\n# >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n# 2\n</cell>\n<code language=julia-1.5>\n# TEST Write\
    \ a function that takes a vector of numbers as input and returns \n# the number\
    \ of elements in the vector that are greater than 10 and both \n# first and last\
    \ digits of a number are odd (1, 3, 5, 7, 9).\n# For example:\n# >>> specialFilter([15,\
    \ -73, 14, -15])\n# 1\n# >>> specialFilter([33, -2, -3, 45, 21, 109])\n# 2\n</cell>\n\
    <code language=julia-1.5>\n# Write a function that takes a vector of numbers as\
    \ input and returns \n# the number of elements in the vector that are greater\
    \ than 10 and both \n# first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n# For example:\n# >>> specialFilter([15, -73, 14, -15", "    count = 0\n\
    \    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2 == 0\n          \
    \  count += 1\n        end\n    end\n    return count\nend\n</cell>\n<text>\n\
    Exercise 4\nWrite a function that takes a vector of numbers as input and returns\
    \ \n    the number of elements in the vector that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for num in nums\n\
    \        if num > 10\n            count += 1\n            if num % 2 == 1 && num\
    \ % 3 == 1 && num % 5 == 1\n                count += 1\n            end\n    \
    \    end\n    end\n    return count\nend\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function that takes a vector of numbers as input and returns \n    the number\
    \ of elements in the vector that are greater than 10 and both \n    first and\
    \ last digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n    >>>\
    \ specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3,\
    \ 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n     \
    \   if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\n</cell>\n<text>\nExercise 3\n\
    Write a function that takes a vector of numbers as input and returns \n    the\
    \ number of elements in the vector that are greater than 10 and both \n    first\
    \ and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n   \
    \ >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n \
    \       if n > 10 && n % 2 == 1 && n % 2 == 0\n            count += 1\n      \
    \  end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n@assert\
    \ specialFilter([15, -73, 14, -15]) == 1 \n@assert specialFilter([33, -2, -3,\
    \ 45, 21, 109]) == 2 \n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ a vector of numbers as input and returns \n    the number of elements in the\
    \ vector that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15, -73,\
    \ 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n\
    \    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10\n         \
    \   count += 1\n            if n % 2 == 1\n                count += 1\n      \
    \          if n % 4 == 1\n                    count += 1\n        end\n    end\n\
    \    return count\nend\n</cell>\n<code language=julia-1.5>\n@assert specialFilter([15,\
    \ -73, 14, -15]) == 1 \n@assert specialFilter([33, -2, -3, 45, 21, 109]) == 2\
    \ \n</cell>\n<text>\nExercise 3\nWrite a function that takes a vector of numbers\
    \ as input and returns \n    the number of elements in the vector that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    >>> specialFilter([15, -73, 14, -15])\n    1\n  \
    \  >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count\
    \ = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1 && n %\
    \ 5 == 1\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.0>", "    count = 0\n    for n in nums\n     \
    \   if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.3>\n\
    specialFilter([15, -73, 14, -15])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a vector of numbers as input and returns \n    the number of elements\
    \ in the vector that are greater than 10 and both \n    first and last digits\
    \ of a number are even (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15,\
    \ -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n  \
    \  2\n    \"\"\"", "    count = 0\n    for num in nums\n        if num > 10\n\
    \            count += 1\n            if num % 2 == 1 && num % 3 == 1 && num %\
    \ 5 == 1\n                count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.0>\n# Run this cell to test your function\
    \ with the above example\n@test specialFilter([15, -73, 14, -15]) == 1 # should\
    \ be 1\n@test specialFilter([33, -2, -3, 45, 21, 109]) == 2 # should be 2\n</cell>\n\
    <text>\nQuestion 3\nWrite a function that takes a vector of numbers as input and\
    \ returns \n    the number of elements in the vector that are greater than 10\
    \ and both \n    first and last digits of a number are even (1, 3, 5, 7, 9).\n\
    \    For example:\n    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    1\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-0.6>\n\
    specialFilter([15, -73, 14, -15])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a vector of numbers as input and returns \n    the number of elements\
    \ in the vector that are greater than 10 and both \n    first and last digits\
    \ of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15,\
    \ -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n  \
    \  2\n    \"\"\"", "    count = 0\n    for num in nums\n        if num > 10\n\
    \            if num % 2 == 1\n                if num % 10 == 1\n             \
    \       count += 1\n                end\n            end\n        end\n    end\n\
    \    return count\nend\n</cell>\n<code language=julia-1.3>\n# Run this cell to\
    \ check your answer\nspecialFilter([15, -73, 14, -15])\n</cell>\n<text>\nQuestion\
    \ 4\nWrite a function that takes a vector of numbers as input and returns \n \
    \   the number of elements in the vector that are greater than 10 and both \n\
    \    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10\n            count += 1\n            if n % 2 == 1\n      \
    \          count += 1\n                if n % 4 == 1\n                    count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<text>\nExercise\
    \ 4\nWrite a function that takes a vector of numbers as input and returns \n \
    \   the number of elements in the vector that are greater than 10 and both \n\
    \    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes a vector of numbers as input and returns \n \
    \   the number of elements in the vector that are greater than 10 and both \n\
    \    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10 && n % 2 == 1 && n % 2 == 0\n            count += 1\n     \
    \   end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    specialFilter([15, -73, 14, -15])\n</cell>\n<code language=julia-1.5>\nspecialFilter([33,\
    \ -2, -3, 45, 21, 109])\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ a vector of numbers as input and returns \n    the number of elements in the\
    \ vector that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15, -73,\
    \ 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n\
    \    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10\n         \
    \   if n % 2 == 1\n                if n % 4 == 1\n                    count +=\
    \ 1\n            end\n        end\n    end\n    return count\nend\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a vector of numbers as input and returns\
    \ \n    the number of elements in the vector that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.3>\n\
    # Run this cell to check your answer\nspecialFilter([15, -73, 14, -15])\n</cell>\n\
    <text>\nQuestion 2.2\nWrite a function that takes a vector of numbers as input\
    \ and returns \n    the number of elements in the vector that are greater than\
    \ 10 and both \n    first and last digits of a number are even (2, 4, 6, 8, 10).\n\
    \    For example:\n    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10\n            count += 1\n            if n % 2 == 1\n      \
    \          count += 1\n                if n % 4 == 1\n                    count\
    \ += 1\n            end\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.0>\n@time specialFilter([15, -73, 14, -15])\n</cell>\n\
    <code language=julia-1.0>\n@time specialFilter([33, -2, -3, 45, 21, 109])\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a vector of numbers as input and\
    \ returns \n    the number of elements in the vector that are greater than 10\
    \ and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n\
    \    For example:\n    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for num in nums\n\
    \        if num > 10\n            count += 1\n            if num % 2 == 1 && num\
    \ % 3 == 1 && num % 5 == 1\n                count += 1\n            end\n    \
    \    end\n    end\n    return count\nend\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function that takes a vector of numbers as input and returns \n    the number\
    \ of elements in the vector that are greater than 10 and both \n    first and\
    \ last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    >>>\
    \ specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3,\
    \ 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for num in nums\n   \
    \     if num > 10\n            if num % 2 == 0\n                if num % 2 ==\
    \ 1\n                    count += 1\n                end\n            end\n  \
    \      end\n    end\n    return count\nend\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that takes a vector of numbers as input and returns \n    the number\
    \ of elements in the vector that are greater than 10 and both \n    first and\
    \ last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    >>>\
    \ specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3,\
    \ 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n     \
    \   if n > 10 && n % 2 == 1 && n % 2 == 0\n            count += 1\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\nspecialFilter([15,\
    \ -73, 14, -15])\n</cell>\n<text>\nExercise 3\nWrite a function that takes a vector\
    \ of numbers as input and returns \n    the number of elements in the vector that\
    \ are greater than 10 and both \n    first and last digits of a number are odd\
    \ (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15, -73, 14, -15])\n\
    \    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n    \"\"\"",
  "    count = 0\n    for num in nums\n        if num > 10\n            count += 1\n\
    \            if num % 2 == 1\n                if num % 10 == 1\n             \
    \       count += 1\n                    if num % 10 == 2\n                   \
    \     count += 1\n                        if num % 10 == 3\n                 \
    \           count += 1\n                            if num % 10 == 4\n       \
    \                         count += 1\n                                if num %\
    \ 10 == 5\n                                    count += 1\n                  \
    \                  if num % 10 == 6\n                                        count\
    \ += 1\n                                        if num % 10 == 7\n           \
    \                                 count += 1\n                               \
    \             if num % 10 == 8\n                                             \
    \   count += 1\n                                                if num % 10 ==\
    \ 9\n                                                    count += 1\n        \
    \    end\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>",
  "    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function that takes a vector of numbers\
    \ as input and returns \n    the number of elements in the vector that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    >>> specialFilter([15, -73, 14, -15])\n    1\n  \
    \  >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count\
    \ = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2 == 0\n    \
    \        count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.0>\n@time specialFilter([15, -73, 14, -15])\n</cell>\n<code\
    \ language=julia-1.0>\n@time specialFilter([33, -2, -3, 45, 21, 109])\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a vector of numbers as input and\
    \ returns \n    the number of elements in the vector that are greater than 10\
    \ and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n\
    \    For example:\n    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes a vector of numbers as input and returns \n \
    \   the number of elements in the vector that are greater than 10 and both \n\
    \    first and last digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n\
    \    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    0\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10 && n % 2 == 1 && n % 2 == 0\n            count += 1\n     \
    \   end\n    end\n    return count\nend\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function that takes a vector of numbers as input and returns \n    the number\
    \ of elements in the vector that are greater than 10 and both \n    first and\
    \ last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    >>>\
    \ specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3,\
    \ 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n     \
    \   if n > 10\n            if isOdd(n) && isOdd(floor(n/10))\n               \
    \ count += 1\n            end\n        end\n    end\n    return count\nend\n</cell>\n\
    <text>\nExercise 4\nWrite a function that takes a vector of numbers as input and\
    \ returns \n    the number of elements in the vector that are greater than 10\
    \ and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n\
    \    For example:\n    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10 && n % 2 == 1 && n % 2 == 0 && n % 1 == 1\n            count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes a vector of numbers as input and returns \n \
    \   the number of elements in the vector that are greater than 10 and both \n\
    \    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for num in nums\n\
    \        if num > 10\n            count += 1\n            if num % 2 == 1 && num\
    \ % 3 == 1 && num % 5 == 1\n                count += 1\n            end\n    \
    \    end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.0>\n\
    # Run this cell to load the tests.\ninclude(\"Tests.jl\")\n</cell>\n<code language=julia-1.0>\n\
    @test specialFilter([15, -73, 14, -15]) == 1 \n@test specialFilter([33, -2, -3,\
    \ 45, 21, 109]) == 2 \n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a vector of numbers as input and returns \n    the number of elements in the\
    \ vector that are greater than 10 and both \n    first and last digits of a number\
    \ are even (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15, -73,\
    \ 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n\
    \    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10 && n % 2 ==\
    \ 1 && n % 3 == 1 && n % 5 == 1\n            count += 1\n        end\n    end\n\
    \    return count\nend\n</cell>\n<code language=julia-1.5>\n@assert specialFilter([15,\
    \ -73, 14, -15]) == 1 \"Your function should return 1\"\n@assert specialFilter([33,\
    \ -2, -3, 45, 21, 109]) == 2 \"Your function should return 2\"\n</cell>\n<text>\n\
    Problem 4\nWrite a function that takes a vector of numbers as input and returns\
    \ \n    the number of elements in the vector that are greater than 10 and both\
    \ \n    first and last digits of a number are even (2, 4, 6, 8, 10, 12).\n   \
    \ For example:\n    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10 && n % 2 == 1 && n % 2 == 0\n            count += 1\n     \
    \   end\n    end\n    return count\nend\n</cell>\n<text>\nExercise 4\nWrite a\
    \ function that takes a vector of numbers as input and returns \n    the number\
    \ of elements in the vector that are greater than 10 and both \n    first and\
    \ last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    >>>\
    \ specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3,\
    \ 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n     \
    \   if n > 10\n            if isOdd(n) && isOdd(floor(n/10))\n               \
    \ count += 1\n            end\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\n@assert specialFilter([15, -73, 14, -15]) == 1 \n@assert\
    \ specialFilter([33, -2, -3, 45, 21, 109]) == 2 \n</cell>\n<text>\nExercise 3\n\
    Write a function that takes a vector of numbers as input and returns \n    the\
    \ number of elements in the vector that are greater than 10 and both \n    first\
    \ and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n   \
    \ >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for num in nums\n\
    \        if num > 10\n            if num % 2 == 1\n                if num % 3\
    \ == 0\n                    if num % 5 == 0\n                        count +=\
    \ 1\n                    end\n                end\n            end\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.0>\n@time specialFilter([15,\
    \ -73, 14, -15])\n</cell>\n<code language=julia-1.0>\n@time specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a vector of numbers as input and returns \n    the number of elements in the\
    \ vector that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15, -73,\
    \ 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n\
    \    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10 && n % 2 ==\
    \ 1 && n % 2 == 0 && n % 1 == 1\n            count += 1\n        end\n    end\n\
    \    return count\nend\n</cell>\n<text>\nExercise 4\nWrite a function that takes\
    \ a vector of numbers as input and returns \n    the number of elements in the\
    \ vector that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15, -73,\
    \ 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n\
    \    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10 && n % 2 ==\
    \ 1 && n % 2 == 0\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\n@assert specialFilter([15, -73, 14, -15])\
    \ == 1;\n@assert specialFilter([33, -2, -3, 45, 21, 109]) == 2;\n</cell>\n<text>\n\
    Exercise 4\nWrite a function that takes a vector of numbers as input and returns\
    \ \n    the number of elements in the vector that are greater than 10 and both\
    \ \n    first and last digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n\
    \    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for num in nums\n\
    \        if num > 10 && num % 2 == 1 && num % 2 == 0 && num > floor(num/10)*10\n\
    \            count += 1\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.0>\n@time specialFilter([15, -73, 14, -15])\n</cell>\n\
    <code language=julia-1.0>\n@time specialFilter([33, -2, -3, 45, 21, 109])\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a vector of numbers as input and\
    \ returns \n    the number of elements in the vector that are greater than 10\
    \ and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n\
    \    For example:\n    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for num in nums\n\
    \        if num > 10\n            if num % 2 == 1\n                if num % 10\
    \ == 1\n                    count += 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert specialFilter([15, -73, 14, -15]) == 1 \n@assert specialFilter([33, -2,\
    \ -3, 45, 21, 109]) == 2 \n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ takes a vector of numbers as input and returns \n    the number of elements\
    \ in the vector that are greater than 10 and both \n    first and last digits\
    \ of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15,\
    \ -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n  \
    \  2\n    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10 && n %\
    \ 2 == 1 && n % 3 == 1 && n % 5 == 1 && n % 7 == 1 && n % 9 == 1\n           \
    \ count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert specialFilter([15, -73, 14, -15]) == 1\n@assert specialFilter([33, -2,\
    \ -3, 45, 21, 109]) == 2\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ a vector of numbers as input and returns \n    the number of elements in the\
    \ vector that are greater than 10 and both \n    first and last digits of a number\
    \ are even (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15, -73,\
    \ 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n\
    \    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10\n         \
    \   count += 1\n            if n % 2 == 1\n                count += 1\n      \
    \          if n % 4 == 1\n                    count += 1\n        end\n    end\n\
    \    return count\nend\n</cell>\n<code language=julia-1.3>\n@assert specialFilter([15,\
    \ -73, 14, -15]) == 1 \n@assert specialFilter([33, -2, -3, 45, 21, 109]) == 2\
    \ \n</cell>\n<text>\nExercise 3\nWrite a function that takes a vector of numbers\
    \ as input and returns \n    the number of elements in the vector that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    >>> specialFilter([15, -73, 14, -15])\n    1\n  \
    \  >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count\
    \ = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2 == 0\n    \
    \        count += 1\n        end\n    end\n    return count\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes a vector of numbers as input and returns\
    \ \n    the number of elements in the vector that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes a vector of numbers as input and returns \n \
    \   the number of elements in the vector that are greater than 10 and both \n\
    \    first and last digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n\
    \    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10 && n % 2 == 1 && n % 2 == 0\n            count += 1\n     \
    \   end\n    end\n    return count\nend\n</cell>\n<text>\nExercise 4\nWrite a\
    \ function that takes a vector of numbers as input and returns \n    the number\
    \ of elements in the vector that are greater than 10 and both \n    first and\
    \ last digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n    >>>\
    \ specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3,\
    \ 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n     \
    \   if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\n</cell>\n<text>\nExercise 3\n\
    Write a function that takes a vector of numbers as input and returns \n    the\
    \ number of elements in the vector that are greater than 10 and both \n    first\
    \ and last digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n  \
    \  >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n    1\n    \"\"\"", "    count = 0\n    for n in nums\n \
    \       if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes a vector of numbers as input and returns \n \
    \   the number of elements in the vector that are greater than 10 and both \n\
    \    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1 && n % 7 == 1 &&\
    \ n % 9 == 1\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.0>\nspecialFilter([15, -73, 14, -15])\n</cell>\n\
    <code language=julia-1.0>\nspecialFilter([33, -2, -3, 45, 21, 109])\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a vector of numbers as input and\
    \ returns \n    the number of elements in the vector that are greater than 10\
    \ and both \n    first and last digits of a number are even (1, 3, 5, 7, 9).\n\
    \    For example:\n    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes a vector of numbers as input and returns \n \
    \   the number of elements in the vector that are greater than 10 and both \n\
    \    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes a vector of numbers as input and returns \n \
    \   the number of elements in the vector that are greater than 10 and both \n\
    \    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10 && n % 2 == 1 && n % 2 == 0\n            count += 1\n     \
    \   end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    specialFilter([15, -73, 14, -15])\n</cell>\n<code language=julia-1.5>\nspecialFilter([33,\
    \ -2, -3, 45, 21, 109])\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ a vector of numbers as input and returns \n    the number of elements in the\
    \ vector that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15, -73,\
    \ 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n\
    \    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10 && n % 2 ==\
    \ 1 && n % 2 == 0\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.3>\n@assert specialFilter([15, -73, 14, -15])\
    \ == 1 \n@assert specialFilter([33, -2, -3, 45, 21, 109]) == 2 \n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a vector of numbers as input and returns\
    \ \n    the number of elements in the vector that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    >>> specialFilter([15, -73, 14, -15]) == 1 \n    >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109]) == 2 \n    \"\"\"", "    count = 0\n    for n in nums\n  \
    \      if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes a vector of numbers as input and returns \n \
    \   the number of elements in the vector that are greater than 10 and both \n\
    \    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<text>\nExercise\
    \ 4\nWrite a function that takes a vector of numbers as input and returns \n \
    \   the number of elements in the vector that are greater than 10 and both \n\
    \    first and last digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n\
    \    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1 && n % 7 == 1 &&\
    \ n % 9 == 1\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\n@assert specialFilter([15, -73, 14, -15])\
    \ == 1 \n@assert specialFilter([33, -2, -3, 45, 21, 109]) == 2 \n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes a vector of numbers as input and returns\
    \ \n    the number of elements in the vector that are greater than 10 and both\
    \ \n    first and last digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n\
    \    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for num in nums\n\
    \        if num > 10\n            count += 1\n            if num % 2 == 0 && num\
    \ % 3 != 0\n                count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\n@assert specialFilter([15, -73, 14, -15])\
    \ == 1 \n@assert specialFilter([33, -2, -3, 45, 21, 109]) == 2 \n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes a vector of numbers as input and returns\
    \ \n    the number of elements in the vector that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.4>",
  "    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\n@assert specialFilter([15, -73, 14, -15])\
    \ == 1\n@assert specialFilter([33, -2, -3, 45, 21, 109]) == 2\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes a vector of numbers as input and returns\
    \ \n    the number of elements in the vector that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10\n            if n % 2 == 1\n                if n % 4 == 1\n\
    \                    count += 1\n                end\n            end\n      \
    \  end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.4>", " \
    \   count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 ==\
    \ 1 && n % 5 == 1\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<text>\nExercise 4\nWrite a function that takes a vector of numbers\
    \ as input and returns \n    the number of elements in the vector that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    >>> specialFilter([15, -73, 14, -15])\n    1\n  \
    \  >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count\
    \ = 0\n    for n in nums\n        if n > 10\n            if n % 2 == 1\n     \
    \           if n % 4 == 1\n                    count += 1\n            end\n \
    \       end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.4>\n\
    # Run this cell to test your function\n@test specialFilter([15, -73, 14, -15])\
    \ == 1 # 1 because the first and last digits are odd\n@test specialFilter([33,\
    \ -2, -3, 45, 21, 109]) == 2 # 2 because the first and last digits are odd\n</cell>\n\
    <text>\nQuestion 3\nWrite a function that takes a vector of numbers as input and\
    \ returns \n    the number of elements in the vector that are greater than 10\
    \ and both \n    first and last digits of a number are even (1, 3, 5, 7, 9).\n\
    \    For example:\n    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1 && n % 7 == 1 &&\
    \ n % 9 == 1\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.0>\n@time filterSpecial([15, -73, 14, -15])\n\
    </cell>\n<code language=julia-1.0>\n@time filterSpecial([33, -2, -3, 45, 21, 109])\n\
    </cell>\n<text>\nExercise: Write a function that takes a vector of numbers as\
    \ input and returns \n    the number of elements in the vector that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    >>> specialFilter([15, -73, 14, -15])\n    1\n  \
    \  >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count\
    \ = 0\n    for num in nums\n        if num > 10\n            if num % 2 == 0 &&\
    \ num % 2 != 1\n                count += 1\n            end\n        end\n   \
    \ end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n@assert specialFilter([15,\
    \ -73, 14, -15]) == 1\n@assert specialFilter([33, -2, -3, 45, 21, 109]) == 2\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes a vector of numbers as\
    \ input and returns \n    the number of elements in the vector that are greater\
    \ than 10 and both \n    first and last digits of a number are even (1, 3, 5,\
    \ 7, 9).\n    For example:\n    >>> specialFilter([15, -73, 14, -15])\n    1\n\
    \    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count\
    \ = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1 && n %\
    \ 5 == 1\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n@assert specialFilter([15, -73, 14, -15])\
    \ == 1 \n@assert specialFilter([33, -2, -3, 45, 21, 109]) == 2 \n</cell>\n<text>\n\
    Part II: Recursion\nA recursive function is a function that calls itself. A recursive\
    \ function is a function that calls itself. A recursive function is a function\
    \ that calls itself. A recursive function is a function that calls itself. A recursive\
    \ function is a function that calls itself. A recursive function is a function\
    \ that calls itself. A recursive function is a function that calls itself. A recursive\
    \ function is a function that calls itself. A recursive function is a function\
    \ that calls itself. A recursive function is a function that calls itself. A recursive\
    \ function is a function that calls itself. A recursive function is a function\
    \ that calls itself. A recursive function is a function that calls itself. A recursive\
    \ function is a function that calls itself. A recursive function is a function\
    \ that calls itself. A recursive function is a function that calls itself. A recursive\
    \ function is a function that calls itself. A recursive function is a function\
    \ that calls itself. A recursive function is a function that calls itself. A recursive\
    \ function is a function that calls itself. A recursive function is a function\
    \ that calls itself. A recursive function is a function that calls itself. A recursive\
    \ function is a function that calls itself. A recursive function is a function\
    \ that calls itself. A recursive function is a function that calls itself. A recursive\
    \ function is a function that calls itself. A recursive function is a function\
    \ that calls itself. A recursive function is a function that calls itself. A recursive\
    \ function is a function that calls itself. A recursive function is a function\
    \ that calls itself. A recursive function is a function that calls itself. A recursive\
    \ function is a function that calls itself. A recursive function is a function\
    \ that calls itself. A recursive function is a function that calls itself. A recursive\
    \ function is a function that calls itself. A recursive function is a function\
    \ that calls itself. A recursive function is a function that calls itself. A recursive\
    \ function is a function that calls itself. A recursive function is a function\
    \ that calls itself. A recursive function is a function that calls itself. A recursive\
    \ function is a function that calls itself. A recursive function is a function\
    \ that calls itself. A recursive function is a function that calls itself. A recursive\
    \ function is a function that calls itself. A recursive function is a function\
    \ that calls itself. A recursive function is a function that calls itself. A recursive\
    \ function is a function that calls itself. A recursive function is a function\
    \ that calls itself. A recursive function is a function that calls itself. A recursive\
    \ function is a function that calls itself. A recursive function is a function\
    \ that calls itself. A recursive function is a function that calls itself. A recursive\
    \ function is a function that calls itself. ", "    count = 0\n    for n in nums\n\
    \        if n > 10 && n % 2 == 1 && n % 2 == 0\n            count += 1\n     \
    \   end\n    end\n    return count\nend\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function that takes a vector of numbers as input and returns \n    the number\
    \ of elements in the vector that are greater than 10 and both \n    first and\
    \ last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    >>>\
    \ specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3,\
    \ 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n     \
    \   if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1 && n % 7 == 1 && n % 9\
    \ == 1\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n@assert specialFilter([15, -73, 14, -15])\
    \ == 1 \n@assert specialFilter([33, -2, -3, 45, 21, 109]) == 2 \n</cell>\n<text>\n\
    Problem 4\nWrite a function that takes a vector of numbers as input and returns\
    \ \n    the number of elements in the vector that are greater than 10 and both\
    \ \n    first and last digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n\
    \    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    0\n    \"\"\"", "    count = 0\n    for num in nums\n\
    \        if num > 10\n            count += 1\n            if num % 2 == 1 && num\
    \ % 3 == 1 && num % 5 == 1\n                count += 1\n            end\n    \
    \    end\n    end\n    return count\nend\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function that takes a vector of numbers as input and returns \n    the number\
    \ of elements in the vector that are greater than 10 and both \n    first and\
    \ last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    >>>\
    \ specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3,\
    \ 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n     \
    \   if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.4>\n\
    # Run this cell to test your function with the above example\n@assert specialFilter([15,\
    \ -73, 14, -15]) == 1 \n@assert specialFilter([33, -2, -3, 45, 21, 109]) == 2\
    \ \n</cell>\n<text>\nQuestion 3\nWrite a function that takes a vector of numbers\
    \ as input and returns \n    the number of elements in the vector that are greater\
    \ than 10 and both \n    first and last digits of a number are even (2, 4, 6,\
    \ 8, 10).\n    For example:\n    >>> specialFilter([15, -73, 14, -15])\n    1\n\
    \    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count\
    \ = 0\n    for num in nums\n        if num > 10\n            if num % 2 == 1 &&\
    \ num % 2 == 0\n                count += 1\n            end\n        end\n   \
    \ end\n    return count\nend\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ takes a vector of numbers as input and returns \n    the number of elements\
    \ in the vector that are greater than 10 and both \n    first and last digits\
    \ of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15,\
    \ -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n  \
    \  2\n    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10 && n %\
    \ 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.4>\n@time specialFilter([15,\
    \ -73, 14, -15])\n</cell>\n<text>\nExercise 2\nWrite a function that takes a vector\
    \ of numbers as input and returns \n    the number of elements in the vector that\
    \ are greater than 10 and both \n    first and last digits of a number are odd\
    \ (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15, -73, 14, -15])\n\
    \    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n    \"\"\"",
  "    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.0>\n@time specialFilter([15, -73, 14, -15])\n\
    </cell>\n<code language=julia-1.0>\n@time specialFilter([33, -2, -3, 45, 21, 109])\n\
    </cell>\n<text>\nExercise: Write a function that takes a vector of numbers as\
    \ input and returns \n    the number of elements in the vector that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    >>> specialFilter([15, -73, 14, -15])\n    1\n  \
    \  >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count\
    \ = 0\n    for num in nums\n        if num > 10\n            if num % 2 == 0 &&\
    \ num % 2 == 1 && num % 2 == 1\n                count += 1\n            end\n\
    \        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.0>\n\
    specialFilter([15, -73, 14, -15])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a vector of numbers as input and returns \n    the number of elements\
    \ in the vector that are greater than 10 and both \n    first and last digits\
    \ of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15,\
    \ -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n  \
    \  2\n    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10 && n %\
    \ 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.4>\n# Run this\
    \ cell to test your function\n@assert specialFilter([15, -73, 14, -15]) == 1 \n\
    @assert specialFilter([33, -2, -3, 45, 21, 109]) == 2 \n</cell>\n<text>\nQuestion\
    \ 3\nWrite a function that takes a vector of numbers as input and returns \n \
    \   the number of elements in the vector that are greater than 10 and both \n\
    \    first and last digits of a number are even (2, 4, 6, 8, 10).\n    For example:\n\
    \    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10\n            if n%2 == 1\n                if n%4 == 1\n   \
    \                 count += 1\n                end\n            end\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.0>\n@time specialFilter([15,\
    \ -73, 14, -15])\n</cell>\n<text>\nExercise 3\nWrite a function that takes a vector\
    \ of numbers as input and returns \n    the number of elements in the vector that\
    \ are greater than 10 and both \n    first and last digits of a number are odd\
    \ (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15, -73, 14, -15])\n\
    \    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n    \"\"\"",
  "    count = 0\n    for n in nums\n        if n > 10\n            if n % 2 == 1\n\
    \                if n % 4 == 1\n                    count += 1\n            end\n\
    \        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert specialFilter([15, -73, 14, -15]) == 1 \n@assert specialFilter([33, -2,\
    \ -3, 45, 21, 109]) == 2 \n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes a vector of numbers as input and returns \n    the number of elements\
    \ in the vector that are greater than 10 and both \n    first and last digits\
    \ of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15,\
    \ -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n  \
    \  2\n    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10 && n %\
    \ 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n@time specialFilter([15,\
    \ -73, 14, -15])\n</cell>\n<code language=julia-1.5>\n@time specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a vector of numbers as input and returns \n    the number of elements in the\
    \ vector that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15, -73,\
    \ 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n\
    \    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10 && n % 2 ==\
    \ 1 && n % 2 == 0\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\n@assert specialFilter([15, -73, 14, -15])\
    \ == 1 \n@assert specialFilter([33, -2, -3, 45, 21, 109]) == 2 \n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes a vector of numbers as input and returns\
    \ \n    the number of elements in the vector that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10\n            count += 1\n            if n % 2 == 1\n      \
    \          count += 1\n                if n % 4 == 1\n                    count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert specialFilter([15, -73, 14, -15]) == 1 \n@assert specialFilter([33, -2,\
    \ -3, 45, 21, 109]) == 2 \n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes a vector of numbers as input and returns \n    the number of elements\
    \ in the vector that are greater than 10 and both \n    first and last digits\
    \ of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15,\
    \ -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n  \
    \  2\n    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10 && n %\
    \ 2 == 1 && n % 2 == 0 && n % 1 == 1\n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<text>\nExercise 4\nWrite a function that\
    \ takes a vector of numbers as input and returns \n    the number of elements\
    \ in the vector that are greater than 10 and both \n    first and last digits\
    \ of a number are even (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15,\
    \ -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n  \
    \  2\n    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10\n    \
    \        if mod(n, 2) == 1\n                if mod(n, 3) == 1\n              \
    \      count += 1\n                end\n            end\n        end\n    end\n\
    \    return count\nend\n</cell>\n<code language=julia-1.3>\nspecialFilter([15,\
    \ -73, 14, -15])\n</cell>\n<text>\nExercise 2\nWrite a function that takes a vector\
    \ of numbers as input and returns \n    the number of elements in the vector that\
    \ are greater than 10 and both \n    first and last digits of a number are even\
    \ (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15, -73, 14, -15])\n\
    \    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n    \"\"\"",
  "    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1 && n % 7 == 1 && n % 9 == 1\n            count += 1\n        end\n\
    \    end\n    return count\nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes a vector of numbers as input and returns \n    the number of elements\
    \ in the vector that are greater than 10 and both \n    first and last digits\
    \ of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15,\
    \ -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n  \
    \  2\n    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10 && n %\
    \ 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n@time specialFilter([15,\
    \ -73, 14, -15])\n</cell>\n<code language=julia-1.5>\n@time specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a vector of numbers as input and returns \n    the number of elements in the\
    \ vector that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15, -73,\
    \ 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n\
    \    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10 && n % 2 ==\
    \ 1 && n % 3 == 1 && n % 5 == 1\n            count += 1\n        end\n    end\n\
    \    return count\nend\n</cell>\n<code language=julia-1.0>\n@time specialFilter([15,\
    \ -73, 14, -15])\n</cell>\n<code language=julia-1.0>\n@time specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n</cell>\n<text>\nExercise: Write a function that takes\
    \ a vector of numbers as input and returns \n    the number of elements in the\
    \ vector that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15, -73,\
    \ 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n\
    \    \"\"\"", "    count = 0\n    for num in nums\n        if num > 10\n     \
    \       if num % 2 == 0 && num % 2 != 1 && num % 2 != 3\n                count\
    \ += 1\n            end\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\n@assert specialFilter([15, -73, 14, -15]) == 1;\n@assert\
    \ specialFilter([33, -2, -3, 45, 21, 109]) == 2;\n</cell>\n<text>\nExercise 3\n\
    Write a function that takes a vector of numbers as input and returns \n    the\
    \ number of elements in the vector that are greater than 10 and both \n    first\
    \ and last digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n  \
    \  >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n    0\n    \"\"\"", "    count = 0\n    for n in nums\n \
    \       if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-0.6>\n\
    specialFilter([15, -73, 14, -15])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a vector of numbers as input and returns \n    the number of elements\
    \ in the vector that are greater than 10 and both \n    first and last digits\
    \ of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15,\
    \ -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n  \
    \  2\n    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10 && n %\
    \ 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes a vector of numbers as input and returns \n    the number of elements\
    \ in the vector that are greater than 10 and both \n    first and last digits\
    \ of a number are even (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15,\
    \ -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n  \
    \  0\n    \"\"\"", "    count = 0\n    for num in nums\n        if num > 10\n\
    \            count += 1\n            if num % 2 == 0 && num % 10 == 1 && num %\
    \ 100 != 11\n                count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\n@assert specialFilter([15, -73, 14, -15])\
    \ == 1 \"Your function should return 1\"\n@assert specialFilter([33, -2, -3, 45,\
    \ 21, 109]) == 2 \"Your function should return 2\"\n</cell>\n<text>\nProblem 3\n\
    Write a function that takes a vector of numbers as input and returns \n    the\
    \ number of elements in the vector that are greater than 10 and both \n    first\
    \ and last digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n  \
    \  >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n \
    \       if n > 10 && n % 2 == 1 && n % 2 == 0\n            count += 1\n      \
    \  end\n    end\n    return count\nend\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a vector of numbers as input and returns \n    the number of elements\
    \ in the vector that are greater than 10 and both \n    first and last digits\
    \ of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15,\
    \ -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n  \
    \  2\n    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10 && n %\
    \ 2 == 1 && n % 2 == 0\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes a vector\
    \ of numbers as input and returns \n    the number of elements in the vector that\
    \ are greater than 10 and both \n    first and last digits of a number are odd\
    \ (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15, -73, 14, -15])\n\
    \    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n    \"\"\"",
  "    count = 0\n    for num in nums\n        if num > 10\n            if num % 2\
    \ == 0 && num % 2 == 1\n                count += 1\n            end\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.4>\n# Run this\
    \ cell to check your answer\nspecialFilter([15, -73, 14, -15])\n</cell>\n<text>\n\
    Question 3\nWrite a function that takes a vector of numbers as input and returns\
    \ \n    the number of elements in the vector that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10 && n % 2 == 1 && n % 2 == 0\n            count += 1\n     \
    \   end\n    end\n    return count\nend\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function that takes a vector of numbers as input and returns \n    the number\
    \ of elements in the vector that are greater than 10 and both \n    first and\
    \ last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    >>>\
    \ specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3,\
    \ 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n     \
    \   if n > 10 && n % 2 == 1 && n % 2 == 0\n            count += 1\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n@assert specialFilter([15,\
    \ -73, 14, -15]) == 1 \n@assert specialFilter([33, -2, -3, 45, 21, 109]) == 2\
    \ \n</cell>\n<text>\nExercise 3\nWrite a function that takes a vector of numbers\
    \ as input and returns \n    the number of elements in the vector that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    >>> specialFilter([15, -73, 14, -15]) == 1 \n   \
    \ >>> specialFilter([33, -2, -3, 45, 21, 109]) == 2 \n    \"\"\"", "    count\
    \ = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1 && n %\
    \ 5 == 1\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n@time specialFilter([15, -73, 14, -15])\n\
    </cell>\n<code language=julia-1.5>\n@time specialFilter([33, -2, -3, 45, 21, 109])\n\
    </cell>\n<text>\nExercise: Write a function that takes a vector of numbers as\
    \ input and returns \n    the number of elements in the vector that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    >>> specialFilter([15, -73, 14, -15])\n    1\n  \
    \  >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count\
    \ = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2 == 0\n    \
    \        count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.5>\n@time specialFilter([15, -73, 14, -15])\n</cell>\n<code\
    \ language=julia-1.5>\n@time specialFilter([33, -2, -3, 45, 21, 109])\n</cell>\n\
    <text>\nExercise: Write a function that takes a vector of numbers as input and\
    \ returns \n    the number of elements in the vector that are greater than 10\
    \ and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n\
    \    For example:\n    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10 && n % 2 == 1 && n % 2 == 0\n            count += 1\n     \
    \   end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.4>\n\
    # TEST Write a function that takes a vector of numbers as input and returns \n\
    # the number of elements in the vector that are greater than 10 and both \n# first\
    \ and last digits of a number are odd (1, 3, 5, 7, 9).\n# For example:\n# >>>\
    \ specialFilter([15, -73, 14, -15])\n# 1\n# >>> specialFilter([33, -2, -3, 45,\
    \ 21, 109])\n# 2\n</cell>\n<text>\nWrite a function that takes a vector of numbers\
    \ as input and returns \nthe sum of the numbers in the vector that are greater\
    \ than 10 and both \nfirst and last digits of a number are odd (1, 3, 5, 7, 9).\n\
    For example:\n>>> specialSum([15, -73, 14, -15])\n-45\n>>> specialSum([33, -2,\
    \ -3, 45, 21, 109])\n-45\n</text>\n<code language=julia-1.4>", "    count = 0\n\
    \    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2 == 0\n          \
    \  count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.0>\n\
    @time specialFilter([15, -73, 14, -15])\n</cell>\n<code language=julia-1.0>\n\
    @time specialFilter([33, -2, -3, 45, 21, 109])\n</cell>\n<text>\nExercise 3\n\
    Write a function that takes a vector of numbers as input and returns \n    the\
    \ number of elements in the vector that are greater than 10 and both \n    first\
    \ and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n   \
    \ >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n \
    \       if n > 10 && n % 2 == 1 && n % 2 == 0\n            count += 1\n      \
    \  end\n    end\n    return count\nend\n</cell>\n<text>\nExercise 4\nWrite a function\
    \ that takes a vector of numbers as input and returns \n    the number of elements\
    \ in the vector that are greater than 10 and both \n    first and last digits\
    \ of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15,\
    \ -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n  \
    \  2\n    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10 && n %\
    \ 2 == 1 && n % 2 == 0\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<text>\nExercise 2\nWrite a function that takes a vector\
    \ of numbers as input and returns \n    the number of elements in the vector that\
    \ are greater than 10 and both \n    first and last digits of a number are even\
    \ (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15, -73, 14, -15])\n\
    \    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    0\n    \"\"\"",
  "    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2 == 0\n\
    \            count += 1\n        end\n    end\n    return count\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes a vector of numbers as input and\
    \ returns \n    the number of elements in the vector that are greater than 10\
    \ and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n\
    \    For example:\n    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1 && n % 7 == 1 &&\
    \ n % 9 == 1\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\n@assert specialFilter([15, -73, 14, -15])\
    \ == 1 \"Your function should return 1\"\n@assert specialFilter([33, -2, -3, 45,\
    \ 21, 109]) == 2 \"Your function should return 2\"\n</cell>\n<text>\nProblem 3\n\
    Write a function that takes a vector of numbers as input and returns \n    the\
    \ number of elements in the vector that are divisible by 3 or 5.\n    For example:\n\
    \    >>> specialDivisors([15, -73, 14, -15])\n    2\n    \"\"\"", "    count =\
    \ 0\n    for n in nums\n        if n > 10\n            if isOdd(n) && isOdd(n-1)\n\
    \                count += 1\n            end\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<text>\nExercise 4\nWrite a function that takes a vector\
    \ of numbers as input and returns \n    the number of elements in the vector that\
    \ are greater than 10 and both \n    first and last digits of a number are odd\
    \ (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15, -73, 14, -15])\n\
    \    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n    \"\"\"",
  "    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2 == 0\n\
    \            count += 1\n        end\n    end\n    return count\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes a vector of numbers as input and\
    \ returns \n    the number of elements in the vector that are greater than 10\
    \ and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n\
    \    For example:\n    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10\n            if n % 2 == 1\n                if n % 4 == 1\n\
    \                    count += 1\n                end\n            end\n      \
    \  end\n    end\n    return count\nend\n</cell>\n<text>\nExercise 4\nWrite a function\
    \ that takes a vector of numbers as input and returns \n    the number of elements\
    \ in the vector that are greater than 10 and both \n    first and last digits\
    \ of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15,\
    \ -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n  \
    \  2\n    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10 && n %\
    \ 2 == 1 && n % 2 == 0\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes a vector\
    \ of numbers as input and returns \n    the number of elements in the vector that\
    \ are greater than 10 and both \n    first and last digits of a number are odd\
    \ (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15, -73, 14, -15])\n\
    \    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n    \"\"\"",
  "    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2 == 0\n\
    \            count += 1\n        end\n    end\n    return count\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes a vector of numbers as input and\
    \ returns \n    the number of elements in the vector that are greater than 10\
    \ and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n\
    \    For example:\n    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for num in nums\n\
    \        if num > 10\n            if num % 2 == 1\n                if num % 10\
    \ == 1\n                    count += 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.0>\n\
    # Run this cell to test your function\n@assert specialFilter([15, -73, 14, -15])\
    \ == 1 \n@assert specialFilter([33, -2, -3, 45, 21, 109]) == 2 \n</cell>\n<text>\n\
    Problem 3\nWrite a function that takes a vector of numbers as input and returns\
    \ \n    the number of elements in the vector that are divisible by 7 and \n  \
    \  both first and last digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n\
    \    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    specialFilter([15, -73, 14, -15])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a vector of numbers as input and returns \n    the number of elements\
    \ in the vector that are greater than 10 and both \n    first and last digits\
    \ of a number are even (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15,\
    \ -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n  \
    \  2\n    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10 && n %\
    \ 2 == 1 && n % 3 == 1 && n % 5 == 1 && n % 7 == 1 && n % 9 == 1\n           \
    \ count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    @time specialFilter([15, -73, 14, -15])\n</cell>\n<code language=julia-1.5>\n\
    @time specialFilter([33, -2, -3, 45, 21, 109])\n</cell>\n<text>\nExercise 2\n\
    Write a function that takes a vector of numbers as input and returns \n    the\
    \ number of elements in the vector that are greater than 10 and both \n    first\
    \ and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n   \
    \ >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n \
    \       if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes a vector of numbers as input and returns \n \
    \   the number of elements in the vector that are greater than 10 and both \n\
    \    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10\n            count += 1\n            if n % 2 == 1\n      \
    \          count += 1\n                if n % 4 == 1\n                    count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes a vector of numbers as input and returns \n \
    \   the number of elements in the vector that are greater than 10 and both \n\
    \    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for num in nums\n\
    \        if num > 10\n            count += 1\n            if num % 2 == 0 && num\
    \ % 2 == 1\n                count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-0.6>\nspecialFilter([15, -73, 14, -15])\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes a vector of numbers as input and\
    \ returns \n    the number of elements in the vector that are greater than 10\
    \ and both \n    first and last digits of a number are even (1, 3, 5, 7, 9).\n\
    \    For example:\n    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for num in nums\n\
    \        if num > 10\n            if num % 2 == 1\n                if num % 10\
    \ == 1\n                    count += 1\n                else\n               \
    \     count += num % 10\n            else\n                count += num % 10\n\
    \        else\n            count += 1\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.0>\n@time specialFilter([15, -73, 14, -15])\n</cell>\n\
    <code language=julia-1.0>\n@time specialFilter([33, -2, -3, 45, 21, 109])\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes a vector of numbers as input and\
    \ returns \n    the number of elements in the vector that are greater than 10\
    \ and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n\
    \    For example:\n    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for num in nums\n\
    \        if num > 10\n            if num % 2 == 0\n                if num % 10\
    \ == 1\n                    count += 1\n                elseif num % 10 == 3\n\
    \                    count += 1\n                elseif num % 10 == 5\n      \
    \              count += 1\n                elseif num % 10 == 7\n            \
    \        count += 1\n                elseif num % 10 == 9\n                  \
    \  count += 1\n            end\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n@assert specialFilter([15, -73, 14, -15])\
    \ == 1 \n@assert specialFilter([33, -2, -3, 45, 21, 109]) == 2 \n</cell>\n<text>\n\
    Part II: Filtering Arrays\nNow let's write a function which filters a given array\
    \ according to a predicate (a function that returns a Boolean value).", "    count\
    \ = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1 && n %\
    \ 5 == 1\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.0>\n# Run this cell to test your function\n@assert\
    \ specialFilter([15, -73, 14, -15]) == 1 \n@assert specialFilter([33, -2, -3,\
    \ 45, 21, 109]) == 2 \n</cell>\n<text>\nQuestion 3\nWrite a function that takes\
    \ a vector of numbers as input and returns \n    the number of elements in the\
    \ vector that are greater than 10 and both \n    first and last digits of a number\
    \ are even (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15, -73,\
    \ 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n\
    \    \"\"\"", "    count = 0\n    for num in nums\n        if num > 10\n     \
    \       if num % 2 == 1\n                if num % 10 == 1\n                  \
    \  count += 1\n                end\n            end\n        end\n    end\n  \
    \  return count\nend\n</cell>\n<code language=julia-1.3>\n@time specialFilter([15,\
    \ -73, 14, -15])\n</cell>\n<code language=julia-1.3>\n@time specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a vector of numbers as input and returns \n    the number of elements in the\
    \ vector that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15, -73,\
    \ 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n\
    \    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10 && n % 2 ==\
    \ 1 && n % 2 == 0\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<text>\nExercise 4\nWrite a function that takes a vector of numbers\
    \ as input and returns \n    the number of elements in the vector that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    >>> specialFilter([15, -73, 14, -15])\n    1\n  \
    \  >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count\
    \ = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2 == 0\n    \
    \        count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.3>\n@assert specialFilter([15, -73, 14, -15]) == 1 \n@assert\
    \ specialFilter([33, -2, -3, 45, 21, 109]) == 2 \n</cell>\n<text>\nPart III. Vectorized\
    \ Functions\nJulia has several built-in functions that operate on arrays. These\
    \ include sum, max, min, mean, median, etc. as well as many others. In fact, Julia\
    \ also has several built-in functions that operate on vectors. These include sum,\
    \ max, min, mean, median, etc. as well as many others. In fact, Julia also has\
    \ several built-in functions that operate on matrices. These include sum, max,\
    \ min, mean, median, etc. as well as many others. In fact, Julia also has several\
    \ built-in functions that operate on tensors. These include sum, max, min, mean,\
    \ median, etc. as well as many others.", "    count = 0\n    for n in nums\n \
    \       if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    @time specialFilter([15, -73, 14, -15])\n</cell>\n<code language=julia-1.5>\n\
    @time specialFilter([33, -2, -3, 45, 21, 109])\n</cell>\n<text>\nExercise 3\n\
    Write a function that takes a vector of numbers as input and returns \n    the\
    \ number of elements in the vector that are greater than 10 and both \n    first\
    \ and last digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n  \
    \  >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n \
    \       if n > 10 && n % 2 == 1 && n % 2 == 0\n            count += 1\n      \
    \  end\n    end\n    return count\nend\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a vector of numbers as input and returns \n    the number of elements\
    \ in the vector that are greater than 10 and both \n    first and last digits\
    \ of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15,\
    \ -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n  \
    \  2\n    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10 && n %\
    \ 2 == 1 && n % 2 == 0\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\n@assert specialFilter([15, -73,\
    \ 14, -15]) == 1 \"The function should return 1\"\n@assert specialFilter([33,\
    \ -2, -3, 45, 21, 109]) == 2 \"The function should return 2\"\n</cell>\n<text>\n\
    Problem 4\nWrite a function that takes a vector of numbers as input and returns\
    \ \n    the number of elements in the vector that are greater than 10 and both\
    \ \n    first and last digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n\
    \    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    0\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10 && n % 2 == 1 && n % 2 == 0\n            count += 1\n     \
    \   end\n    end\n    return count\nend\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function that takes a vector of numbers as input and returns \n    the number\
    \ of elements in the vector that are greater than 10 and both \n    first and\
    \ last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    >>>\
    \ specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3,\
    \ 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n     \
    \   if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1 && n % 7 == 1 && n % 9\
    \ == 1\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n# Test your function with the above example\n\
    @assert specialFilter([15, -73, 14, -15]) == 1 \n@assert specialFilter([33, -2,\
    \ -3, 45, 21, 109]) == 2 \n</cell>\n<text>\n4.3 Vectorized String Manipulation\n\
    Julia has many built-in string processing functions. Here are a few that you will\
    \ use most often:", "    count = 0\n    for n in nums\n        if n > 10 && n\
    \ % 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count += 1\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-0.6>\nspecialFilter([15,\
    \ -73, 14, -15])\n</cell>\n<text>\nExercise 3\nWrite a function that takes a vector\
    \ of numbers as input and returns \n    the number of elements in the vector that\
    \ are greater than 10 and both \n    first and last digits of a number are odd\
    \ (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15, -73, 14, -15])\n\
    \    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n    \"\"\"",
  "    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2 == 0\n\
    \            count += 1\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\nspecialFilter([15, -73, 14, -15])\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes a vector of numbers as input and returns\
    \ \n    the number of elements in the vector that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for num in nums\n\
    \        if num > 10\n            count += 1\n            if num % 2 == 0 && num\
    \ % 10 == 1 && num % 100 != 11\n                count += 1\n        end\n    end\n\
    \    return count\nend\n</cell>\n<text>\nExercise 4\nWrite a function that takes\
    \ a vector of numbers as input and returns \n    the number of elements in the\
    \ vector that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15, -73,\
    \ 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n\
    \    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10\n         \
    \   count += 1\n            if n % 2 == 1\n                count += 1\n      \
    \          if n % 4 == 1\n                    count += 1\n        end\n    end\n\
    \    return count\nend\n</cell>\n<code language=julia-1.5>\n@time filterSpecial([15,\
    \ -73, 14, -15])\n</cell>\n<code language=julia-1.5>\n@time filterSpecial([33,\
    \ -2, -3, 45, 21, 109])\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a vector of numbers as input and returns \n    the number of elements in the\
    \ vector that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15, -73,\
    \ 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n\
    \    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10 && n % 2 ==\
    \ 1 && n % 3 == 1 && n % 5 == 1\n            count += 1\n        end\n    end\n\
    \    return count\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"Write a function\
    \ that takes a vector of numbers as input and returns \n    the number of elements\
    \ in the vector that are greater than 10 and both \n    first and last digits\
    \ of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15,\
    \ -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n  \
    \  2\n    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10\n    \
    \        count += 1\n            if n % 2 == 1\n                count += 1\n \
    \               if n % 4 == 1\n                    count += 1\n        end\n \
    \   end\n    return count\nend\n</cell>\n<code language=julia-1.5>\nspecialFilter([15,\
    \ -73, 14, -15])\n</cell>\n<text>\nExercise 3\nWrite a function that takes a vector\
    \ of numbers as input and returns \n    the number of elements in the vector that\
    \ are greater than 10 and both \n    first and last digits of a number are odd\
    \ (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15, -73, 14, -15])\n\
    \    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n    \"\"\"",
  "    count = 0\n    for n in nums\n        if n > 10\n            count += 1\n \
    \           if mod(n, 2) == 1 && mod(n, 3) == 1\n                count += 1\n\
    \        end\n    end\n    return count\nend\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that takes a vector of numbers as input and returns \n    the number\
    \ of elements in the vector that are greater than 10 and both \n    first and\
    \ last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    >>>\
    \ specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3,\
    \ 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n     \
    \   if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\n</cell>\n<text>\nExercise 3\n\
    Write a function that takes a vector of numbers as input and returns \n    the\
    \ number of elements in the vector that are greater than 10 and both \n    first\
    \ and last digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n  \
    \  >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n \
    \       if n > 10 && n % 2 == 1 && n % 2 == 0\n            count += 1\n      \
    \  end\n    end\n    return count\nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes a vector of numbers as input and returns \n    the number of elements\
    \ in the vector that are greater than 10 and both \n    first and last digits\
    \ of a number are even (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15,\
    \ -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n  \
    \  2\n    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10 && n %\
    \ 2 == 1 && n % 2 == 0\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes a vector\
    \ of numbers as input and returns \n    the number of elements in the vector that\
    \ are greater than 10 and both \n    first and last digits of a number are odd\
    \ (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15, -73, 14, -15])\n\
    \    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n    \"\"\"",
  "    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2 == 0\n\
    \            count += 1\n        end\n    end\n    return count\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes a vector of numbers as input and\
    \ returns \n    the number of elements in the vector that are greater than 10\
    \ and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n\
    \    For example:\n    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10 && n % 2 == 1 && n % 2 == 0 && n % 1 == 1\n            count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<text>\nExercise\
    \ 4\nWrite a function that takes a vector of numbers as input and returns \n \
    \   the number of elements in the vector that are greater than 10 and both \n\
    \    first and last digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n\
    \    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10\n            count += 1\n            if n % 2 == 1\n      \
    \          count += 1\n                if n % 4 == 1\n                    count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes a vector of numbers as input and returns \n \
    \   the number of elements in the vector that are greater than 10 and both \n\
    \    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for num in nums\n\
    \        if num > 10\n            count += 1\n            if num % 2 == 0 && num\
    \ % 3 != 0\n                count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function that takes a vector of numbers\
    \ as input and returns \n    the number of elements in the vector that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    >>> specialFilter([15, -73, 14, -15])\n    1\n  \
    \  >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count\
    \ = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1 && n %\
    \ 5 == 1\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes a vector of numbers as\
    \ input and returns \n    the number of elements in the vector that are greater\
    \ than 10 and both \n    first and last digits of a number are even (1, 3, 5,\
    \ 7, 9).\n    For example:\n    >>> specialFilter([15, -73, 14, -15])\n    1\n\
    \    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count\
    \ = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2 == 0\n    \
    \        count += 1\n        end\n    end\n    return count\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes a vector of numbers as input and returns\
    \ \n    the number of elements in the vector that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10 && n % 2 == 1 && n % 2 == 0\n            count += 1\n     \
    \   end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.3>\n\
    @time specialFilter([15, -73, 14, -15])\n</cell>\n<code language=julia-1.3>\n\
    @time specialFilter([33, -2, -3, 45, 21, 109])\n</cell>\n<text>\nExercise: Write\
    \ a function that takes a vector of numbers as input and returns \n    the number\
    \ of elements in the vector that are greater than 10 and both \n    first and\
    \ last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    >>>\
    \ specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3,\
    \ 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n     \
    \   if n > 10 && n % 2 == 1 && n % 2 == 0\n            count += 1\n        end\n\
    \    end\n    return count\nend\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a vector of numbers as input and returns \n    the number of elements\
    \ in the vector that are greater than 10 and both \n    first and last digits\
    \ of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15,\
    \ -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n  \
    \  2\n    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10 && n %\
    \ 2 == 1 && n % 2 == 0\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.3>\n@assert specialFilter([15, -73,\
    \ 14, -15]) == 1 \n@assert specialFilter([33, -2, -3, 45, 21, 109]) == 2 \n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes a vector of numbers as input and\
    \ returns \n    the number of elements in the vector that are greater than 10\
    \ and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n\
    \    For example:\n    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for num in nums\n\
    \        if num > 10\n            if num % 2 == 0 && num % 3 != 0\n          \
    \      count += 1\n            end\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.0>\n@time specialFilter([15, -73, 14, -15])\n\
    </cell>\n<code language=julia-1.0>\n@time specialFilter([33, -2, -3, 45, 21, 109])\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes a vector of numbers as\
    \ input and returns \n    the number of elements in the vector that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    >>> specialFilter([15, -73, 14, -15])\n    1\n  \
    \  >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count\
    \ = 0\n    for n in nums\n        if n > 10\n            count += 1\n        \
    \    if n % 2 == 1 && n % 3 == 1 && n % 5 == 1 && n % 7 == 1 && n % 9 == 1\n \
    \               count += 1\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\n@time filterSpecial([15, -73, 14, -15])\n</cell>\n\
    <code language=julia-1.5>\n@time filterSpecial([33, -2, -3, 45, 21, 109])\n</cell>\n\
    <text>\nExercise: Write a function that takes a vector of numbers as input and\
    \ returns \n    the number of elements in the vector that are greater than 10\
    \ and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n\
    \    For example:\n    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10 && n % 2 == 1 && n % 2 == 0\n            count += 1\n     \
    \   end\n    end\n    return count\nend\n</cell>\n<text>\nExercise 4\nWrite a\
    \ function that takes a vector of numbers as input and returns \n    the number\
    \ of elements in the vector that are greater than 10 and both \n    first and\
    \ last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    >>>\
    \ specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3,\
    \ 45, 21, 109])\n    2\n    \"\"\"", "    count = 0\n    for n in nums\n     \
    \   if n > 10 && n % 2 == 1 && n % 2 == 0\n            count += 1\n        end\n\
    \    end\n    return count\nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes a vector of numbers as input and returns \n    the number of elements\
    \ in the vector that are greater than 10 and both \n    first and last digits\
    \ of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15,\
    \ -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n  \
    \  2\n    \"\"\"", "    count = 0\n    for num in nums\n        if num > 10\n\
    \            count += 1\n            if num % 2 == 1 && num % 3 == 1 && num %\
    \ 5 == 1\n                count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\n# Run this cell to check your answer\n\
    specialFilter([15, -73, 14, -15])\n</cell>\n<text>\nQuestion 3\nWrite a function\
    \ that takes a vector of numbers as input and returns \n    the number of elements\
    \ in the vector that are greater than 10 and both \n    first and last digits\
    \ of a number are even (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15,\
    \ -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n  \
    \  2\n    \"\"\"", "    count = 0\n    for num in nums\n        if num > 10\n\
    \            if num % 2 == 1\n                if num % 10 == 1\n             \
    \       count += 1\n                else\n                    count += 1\n   \
    \         else\n                count += 1\n        else\n            count +=\
    \ 1\n    end\n    return count\nend\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a vector of numbers as input and returns \n    the number of elements\
    \ in the vector that are greater than 10 and both \n    first and last digits\
    \ of a number are even (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15,\
    \ -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n  \
    \  2\n    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10 && n %\
    \ 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.4>\n@time specialFilter([15,\
    \ -73, 14, -15])\n</cell>\n<code language=julia-1.4>\n@time specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a vector of numbers as input and returns \n    the number of elements in the\
    \ vector that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15, -73,\
    \ 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n\
    \    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10 && n % 2 ==\
    \ 1 && n % 2 == 0\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.3>\n@time specialFilter([15, -73, 14, -15])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a vector of numbers as\
    \ input and returns \n    the number of elements in the vector that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    >>> specialFilter([15, -73, 14, -15])\n    1\n  \
    \  >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n    \"\"\"", "    count\
    \ = 0\n    for n in nums\n        if n > 10\n            count += 1\n        \
    \    if n % 2 == 1\n                count += 1\n                if n % 4 == 1\n\
    \                    count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.4>\n@assert specialFilter([15, -73, 14, -15])\
    \ == 1 \"Odd numbers do not have first and last digits of odd numbers\"\n@assert\
    \ specialFilter([33, -2, -3, 45, 21, 109]) == 2 \"Even numbers do not have first\
    \ and last digits of odd numbers\"\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes a vector of numbers as input and returns \n    the number of elements\
    \ in the vector that are greater than 10 and both \n    first and last digits\
    \ of a number are even (2, 4, 6, 8, 10).\n    For example:\n    >>> specialFilter([15,\
    \ -73, 14, -15])\n    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n  \
    \  2\n    \"\"\"", "    count = 0\n    for n in nums\n        if n > 10 && n %\
    \ 2 == 1 && n % 2 == 0\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<text>\nExercise 2\nWrite a function that takes a vector\
    \ of numbers as input and returns \n    the number of elements in the vector that\
    \ are greater than 10 and both \n    first and last digits of a number are odd\
    \ (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15, -73, 14, -15])\n\
    \    1\n    >>> specialFilter([33, -2, -3, 45, 21, 109])\n    2\n    \"\"\"",
  "    count = 0\n    for num in nums\n        if num > 10\n            if num % 2\
    \ == 1 && num % 2 == 0\n                count += 1\n            end\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.5>", "    count\
    \ = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2 == 0\n    \
    \        count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.5>\nspecialFilter([15, -73, 14, -15])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes a vector of numbers as input and returns \n \
    \   the number of elements in the vector that are greater than 10 and both \n\
    \    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33,\
    \ -2, -3, 45, 21, 109])\n    2\n    \"\"\""]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

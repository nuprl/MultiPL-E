name: HumanEval_157_right_angle_triangle
language: jl
prompt: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return true\
  \ if the three\n    sides form a right-angled triangle, false otherwise.\n    A\
  \ right-angled triangle is a triangle in which one angle is right angle or \n  \
  \  90 degree.\n    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n \
  \   >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
  \ b::Int64, c::Int64)::Bool \n"
tests: "using Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
  \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10, 6,\
  \ 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24, 25)\
  \ == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12, 13)\
  \ == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55, 73)\
  \ == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2, 10) ==\
  \ false)\nend\n"
completions: ["    if a==b or a==c or b==c then return false \n    else return true\n\
    end\n\"\"\"\n    Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n    sides form a right-angled triangle, false otherwise.\n   \
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    \    90 degree.\n    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n\
    \    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"", "    if a > b\
    \ and a > c \n    then return true\n    else if b > c \n    then return false\n\
    \    else return false\n    end\nend\n\"\"\"\n    Given the lengths of the three\
    \ sides of a triangle. Return true if the three\n    sides form a right-angled\
    \ triangle, false otherwise.\n    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3,\
    \ 4, 5)\n    true\n    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"",
  "    if a > b and a > c \n    or b > c and b > a \n    or c > a and c > b \n   \
    \ then true \n    else false \nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\
    \n    Given the lengths of the three sides of a triangle. Return true if the three\n\
    \    sides form a right-angled triangle, false otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a > b and a > c \n    then return true\n\
    \    else if b > c \n    then return false\n    else return false\n    end\nend\n\
    \"\"\"\n    Given the lengths of the three sides of a triangle. Return true if\
    \ the three\n    sides form a right-angled triangle, false otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a > b and a > c then \n        if b >\
    \ c then \n            return true\n        else \n            return false\n\
    \    else \n        if b > c then \n            return false\n        else \n\
    \            return true\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n  \
    \  Given the lengths of the three sides of a triangle. Return true if the three\n\
    \    sides form a right-angled triangle, false otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if b == c \n        then true\n        else\
    \ false\n    end\nend\n</cell>\n<text>\nExercise 10\nWrite a function that checks\
    \ if a triangle is equilateral or not.\nA triangle is equilateral if all three\
    \ sides are equal, that is they are equal\nto each other.\nExample: \n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(1, 2, 3)\nfalse\n>>> equilateral_triangle(4,\
    \ 3, 2)\nfalse\n>>> equilateral_triangle(4, 3, 4)\ntrue\n>>> equilateral_triangle(4,\
    \ 3, 6)\nfalse\n>>> equilateral_triangle(4, 3, 8)\nfalse\n>>> equilateral_triangle(4,\
    \ 3, 10)\nfalse\n>>> equilateral_triangle(4, 3, 12)\nfalse\n>>> equilateral_triangle(4,\
    \ 3, 14)\nfalse\n>>> equilateral_triangle(4, 3, 16)\nfalse\n>>> equilateral_triangle(4,\
    \ 3, 18)\nfalse\n>>> equilateral_triangle(4, 3, 20)\nfalse\n>>> equilateral_triangle(4,\
    \ 3, 22)\nfalse\n>>> equilateral_triangle(4, 3, 24)\nfalse\n>>> equilateral_triangle(4,\
    \ 3, 26)\nfalse\n>>> equilateral_triangle(4, 3, 28)\nfalse\n>>> equilateral_triangle(4,\
    \ 3, 30)\nfalse\n>>> equilateral_triangle(4, 3, 32)\nfalse\n>>> equilateral_triangle(4,\
    \ 3, 34)\nfalse\n>>> equilateral_triangle(4, 3, 36)\nfalse\n>>> equilateral_triangle(4,\
    \ 3, 38)\nfalse\n>>> equilateral_triangle(4, 3, 40)\nfalse\n>>> equilateral_triangle(4,\
    \ 3, 42)\nfalse\n>>> equilateral_triangle(4, 3, 44)\nfalse\n>>> equilateral_triangle(4,\
    \ 3, 46)\nfalse\n>>> equilateral_triangle(4, 3, 48)\nfalse\n>>> equilateral_triangle(4,\
    \ 3, 50)\nfalse\n>>> equilateral_triangle(4, 3, 52)\nfalse\n>>> equilateral_triangle(4,\
    \ 3, 54)\nfalse\n>>> equilateral_triangle(4, 3, 56)\nfalse\n>>> equilateral_triangle(4,\
    \ 3, 58)\nfalse\n>>> equilateral_triangle(4, 3, 60)\nfalse\n>>> equilateral_triangle(4,\
    \ 3, 62)\nfalse\n>>> equilateral_triangle(4, 3, 64)\nfalse\n>>> equilateral_triangle(4,\
    \ 3, 66)\nfalse\n>>> equilateral_triangle(4, 3, 68)\n", "    if a < b and b <\
    \ c and c < a then return true\n    else return false\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given the lengths of the three sides of a triangle. Return true if\
    \ the three\n    sides form a right-angled triangle, false otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a > b and a > c then return true\n  \
    \  if b > c and b > a then return true\n    if c > a and c > b then return true\n\
    \    return false\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return true if the three\n   \
    \ sides form a right-angled triangle, false otherwise.\n    A right-angled triangle\
    \ is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n\
    \    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a > b and a > c \n        then return\
    \ true\n    else if b > c \n        then return false\n    else if c > a \n  \
    \      then return false\n    else if b == c \n        then return true\n    else\
    \ if a == b \n        then return true\n    else if a == c \n        then return\
    \ false\n    else if b == c \n        then return false\n    else return false\n\
    end\n</code>\n<|/ a tags=julia |>\n<| c |>\nThis does not provide an answer to\
    \ the question. To critique or request clarification from an author, leave a comment\
    \ below their post. - [From Review](/review/low-quality-posts/26859030)\n<|/ c\
    \ |>\n<| c |>\nThe question was \"how do I check if a triangle is right angled\"\
    \ and the answer was \"use right_angle_triangle\"\n<|/ c |>\n<| c |>\nThe question\
    \ was \"how do I check if a triangle is right angled\" and the answer was \"use\
    \ right_angle_triangle\"\n<|/ c |>\n<| c |>\nThe question was \"how do I check\
    \ if a triangle is right angled\" and the answer was \"use right_angle_triangle\"\
    \n<|/ c |>\n<| c |>\nThe question was \"how do I check if a triangle is right\
    \ angled\" and the answer was \"use right_angle_triangle\"\n<|/ c |>\n<| a dscore=2\
    \ |>\nI wrote a package for this: \nhttps://github.com/jrm/RightAngleTriangle\n\
    <code>\njulia> using RightAngleTriangle", "    if a > b and a > c \n        then\
    \ return true\n    else if b > c \n        then return true\n    else if c > a\
    \ \n        then return true\n    else return false\nend\n</code>\n<|/ a dscore=0\
    \ |>\n<| a tags=julia,if-statement |>\n<code>", "    if a==0 || b==0 || c==0 \n\
    \    then return false \n    else if a==b || b==c || c==a \n    then return true\
    \ \n    else if a==c || b==c || c==a \n    then return true \n    else if a==b\
    \ || b==a || c==a \n    then return true \n    else return false \nend \n</cell>\n\
    <code language=julia-1.5>\n\"\"\"\n    Given the lengths of the three sides of\
    \ a triangle. Return true if the three\n    sides form a right-angled triangle,\
    \ false otherwise.\n    A right-angled triangle is a triangle in which one angle\
    \ is right angle or \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3,\
    \ 4, 5)\n    true\n    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"",
  "    if a > b and a > c then return true\n    if b > c and b > a then return true\n\
    \    if c > a and c > b then return true\n    return false\nend\n\"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return true if the three\n   \
    \ sides form a right-angled triangle, false otherwise.\n    A right-angled triangle\
    \ is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n\
    \    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if b == c \n        then return true\n \
    \   else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b == c \n        then return true\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return false\n    else if b < c \n        then return false\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return false\n    else if b < c \n        then return false\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return false\n    else if b < c \n        then return false\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return ", "    if a==b or a==c or b==c \n        true\n    else\n        false\n\
    \    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function that checks if a\
    \ triangle is equilateral or not.\nA triangle is equilateral if all three sides\
    \ are equal, that is, they are equal\nto each other.\nExample: \n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(1, 2, 3)\nfalse\n\"\"\"", "    if a ==\
    \ 0 || b == 0 || c == 0 \n        then return true\n    else if b == c \n    \
    \    then return true\n    else if b == a \n        then return true\n    else\
    \ if c == a \n        then return true\n    else \n        return false\nend\n\
    </cell>\n<text>\nExercise 4\nWrite a function that determines whether a triangle\
    \ is equilateral or not.\nA triangle is equilateral if all three sides are equal,\
    \ i.e. the area of the triangle is equal to $\\frac{3}{2}$.\nExample: \n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(1, 2, 3)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(3, 4, 5)\ntrue\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(3, 4, 5)\ntrue\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(3, 4, 5)\ntrue\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(3, 4, 5)\ntrue\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(3, 4, 5)\ntrue\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(3, 4, 5)\ntrue\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(3, 4, 5)\ntrue\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(3, 4, 5)\ntrue\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(3, 4, 5)\ntrue\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(3, 4, 5)\ntrue\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(3, 4, 5)\ntrue\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(3, 4, 5)\ntrue\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(3, 4, 5)\ntrue\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(3, 4, 5)\ntrue\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(3, 4, 5)\ntrue\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equ", "    if a > b and a > c \n    or b > c and b > a \n \
    \   or c > a and c > b \n    then true\n    else false\nend\n</code>\n<|/ a tags=julia\
    \ |>\n<| a dscore=0 |>\n<code>", "    if a==b or a==c or b==c \n        true\n\
    \    else\n        false\nend\n</cell>\n<code language=julia-1.0>\n\"\"\"\n  \
    \  Given the lengths of the three sides of a triangle. Return true if the three\n\
    \    sides form a right-angled triangle, false otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a==0 || b==0 || c==0 \n        then return\
    \ false\n    else \n        if b > c \n            then return right_angle_triangle(c\
    \ - b, b - a, c)\n        else \n            if a > c \n                then return\
    \ right_angle_triangle(c - a, a - b, c)\n            else \n                if\
    \ b > a \n                    then return right_angle_triangle(c - a, b - a, c)\n\
    \                else \n                    return true\n\"\"\"\n    Given the\
    \ lengths of the three sides of a triangle. Return true if the three\n    sides\
    \ form a right-angled triangle, false otherwise.\n    A right-angled triangle\
    \ is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n\
    \    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if b == c \n        then return true\n \
    \   else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b == c \n        then return true\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return false\n    else if b < c \n        then return false\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return false\n    else if b < c \n        then return false\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return false\n    else if b < c \n        then return false\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return ", "    if a == b or a == c or b == c \n        true\n    else\n    \
    \    false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return true if the three\n   \
    \ sides form a right-angled triangle, false otherwise.\n    A right-angled triangle\
    \ is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n\
    \    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a > b and a > c \n    then return true\n\
    \    else if b > c \n    then return false\n    else if c > a \n    then return\
    \ false\n    else return true\n    end\nend\n\"\"\"\n    Given the lengths of\
    \ the three sides of a triangle. Return true if the three\n    sides form a right-angled\
    \ triangle, false otherwise.\n    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3,\
    \ 4, 5)\n    true\n    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"",
  "    if a==b and b==c then return true\n    else if a==c then return false\n   \
    \ else if b==c then return false\n    else if a==b then return false\n    else\
    \ return true\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\n    Given the\
    \ lengths of the three sides of a triangle. Return true if the three\n    sides\
    \ form a right-angled triangle, false otherwise.\n    A right-angled triangle\
    \ is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n\
    \    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a > b and a > c then return true\n  \
    \  if b > c and b > a then return true\n    if c > a and c > b then return true\n\
    \    return false\nend\n\"\"\"\n    Given the lengths of the three sides of a\
    \ triangle. Return true if the three\n    sides form a right-angled triangle,\
    \ false otherwise.\n    A right-angled triangle is a triangle in which one angle\
    \ is right angle or \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3,\
    \ 4, 5)\n    true\n    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"",
  "    if a == 0 || b == 0 || c == 0 \n        true\n    else\n        if b > a &&\
    \ c > a \n            right_angle_triangle(b, c, a) \n        else\n         \
    \   if c > b \n                right_angle_triangle(b, c, a) \n            else\n\
    \                if b > c \n                    right_angle_triangle(b, c, a)\
    \ \n                else\n                    false\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given the lengths of the three sides of a triangle. Return true if\
    \ the three\n    sides form a right-angled triangle, false otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a==b or a==c or b==c then return true\n\
    \    else return false\nend\n</cell>\n<code language=julia-1.0>\n\"\"\"\n    right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool\n    \n    Check if a triangle is right angled or\
    \ not\n    \n    Arguments:\n    a: length of side 1\n    b: length of side 2\n\
    \    c: length of side 3\n    \n    Returns:\n    True if triangle is right angled,\
    \ False otherwise\n\"\"\"", "    if a > b and a > c then \n        if b > c then\
    \ \n            return true\n        else \n            return false\n    else\
    \ \n        if b > c then \n            return false\n        else \n        \
    \    return true\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    Given the\
    \ lengths of the three sides of a triangle. Return true if the three\n    sides\
    \ form a right-angled triangle, false otherwise.\n    A right-angled triangle\
    \ is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n\
    \    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a==b or a==c or b==c then return true\n\
    \    else return false\nend\n</cell>\n<code language=julia-1.0>\n\"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return true if the three\n   \
    \ sides form a right-angled triangle, false otherwise.\n    A right-angled triangle\
    \ is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n\
    \    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a == 0 || b == 0 || c == 0 \n       \
    \ true\n    else\n        if b > a && b > c \n            right_angle_triangle(c\
    \ - b, a, c)\n        elseif c > a && c > b \n            right_angle_triangle(a,\
    \ b - c, c)\n        elseif b > c && b > a \n            right_angle_triangle(a,\
    \ b - c, c - b)\n        elseif c > b && c > a \n            right_angle_triangle(a,\
    \ b - c, c - b)\n        else\n            false\n        end\n    end\nend\n\
    </cell>\n<code language=julia-1.4>\n\"\"\"\n    Given the lengths of the three\
    \ sides of a triangle. Return true if the three\n    sides form a right-angled\
    \ triangle, false otherwise.\n    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3,\
    \ 4, 5)\n    true\n    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"",
  "    if a == 0 || b == 0 || c == 0 \n    then return false \n    else if b > a &&\
    \ b > c \n    then return true \n    else if c > a && c > b \n    then return\
    \ true \n    else if b == c \n    then return true \n    else if b > c \n    then\
    \ return right_angle_triangle(a, c, b) \n    else return right_angle_triangle(a,\
    \ c, b) \nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    right_angle_triangles(a,\
    \ b, c)\n    Given the lengths of the three sides of a triangle. Return true if\
    \ the three\n    sides form a right-angled triangle, false otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangles(3, 4, 5)\n    true\n    >>> right_angle_triangles(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a > b and a > c \n        then return\
    \ true\n    else if b > a and b > c \n        then return true\n    else if c\
    \ > a and c > b \n        then return true\n    else return false\nend\n</cell>\n\
    <code language=julia-1.0>\n\"\"\"\n    Given the lengths of the three sides of\
    \ a triangle. Return true if the three\n    sides form a right-angled triangle,\
    \ false otherwise.\n    A right-angled triangle is a triangle in which one angle\
    \ is right angle or \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3,\
    \ 4, 5)\n    true\n    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"",
  "    if b == c \n        then return true\n    else if b > c \n        then return\
    \ false\n    else if b < c \n        then return false\n    else if b == c \n\
    \        then return true\n    else if b > c \n        then return false\n   \
    \ else if b < c \n        then return false\n    else if b > c \n        then\
    \ return false\n    else if b < c \n        then return false\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return false\n    else if b < c \n        then return false\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return false\n    else if b < c \n        then return false\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return false\n    else if b < c \n        then return false\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return ", "    if a > b and a\
    \ > c \n        then return true\n    else if b > c \n        then return false\n\
    \    else if c > a \n        then return false\n    else return true\nend\n</cell>\n\
    <code language=julia-1.0>\n\"\"\"\n    Given the lengths of the three sides of\
    \ a triangle. Return true if the three\n    sides form a right-angled triangle,\
    \ false otherwise.\n    A right-angled triangle is a triangle in which one angle\
    \ is right angle or \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3,\
    \ 4, 5)\n    true\n    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"",
  "    if a > b and a > c \n        then return true\n    else if b > c \n       \
    \ then return false\n    else if c > a \n        then return false\n    else return\
    \ true\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\n    right_angle_triangle(length1::Int64,\
    \ length2::Int64, length3::Int64)::Bool\n    Given the lengths of the three sides\
    \ of a triangle. Return true if the three\n    sides form a right-angled triangle,\
    \ false otherwise.\n    A right-angled triangle is a triangle in which one angle\
    \ is right angle or \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3,\
    \ 4, 5)\n    true\n    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"",
  "    if a==b or a==c or b==c then return true\n    else return false\nend\n</cell>\n\
    <code language=julia-1.5>\n\"\"\"\n    Given the lengths of the three sides of\
    \ a triangle. Return true if the three\n    sides form a right-angled triangle,\
    \ false otherwise.\n    A right-angled triangle is a triangle in which one angle\
    \ is right angle or \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3,\
    \ 4, 5)\n    true\n    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"",
  "    if a == 0 || b == 0 || c == 0 \n    then return false \n    else if a + b >\
    \ c \n    then return false \n    else if a + c > b \n    then return false \n\
    \    else if b + c > a \n    then return false \n    else return true \nend \n\
    </cell>\n<code language=julia-1.4>\n\"\"\"\n    Given the lengths of the three\
    \ sides of a triangle. Return true if the three\n    sides form a right-angled\
    \ triangle, false otherwise.\n    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3,\
    \ 4, 5)\n    true\n    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"",
  "    if a==0 || b==0 || c==0 \n        then return false\n    else if a==b\n   \
    \     then return c==b\n    else if a==c\n        then return b==c\n    else if\
    \ b==c\n        then return a==c\n    else if a==b+c\n        then return true\n\
    \    else if b==a+c\n        then return true\n    else if c==a+b\n        then\
    \ return true\n    else return false\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given the lengths of the three sides of a triangle. Return true if\
    \ the three\n    sides form a right-angled triangle, false otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if b == c \n        then return true\n \
    \   else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else \n        right_angle_triangle(b, c+2, c+2)\nend\n</cell>\n\
    <code language=julia-1.5>\nright_angle_triangle(3, 4, 5)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that checks if a triangle is equilateral or not.\nA triangle\
    \ is equilateral if all three sides are equal\nExample: \n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(1, 2, 3)\nfalse\n>>> equilateral_triangle(2,\
    \ 3, 4)\nfalse\n>>> equilateral_triangle(3, 4, 5)\ntrue\n>>> equilateral_triangle(3,\
    \ 4, 6)\nfalse\n>>> equilateral_triangle(3, 4, 7)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 8)\nfalse\n>>> equilateral_triangle(3, 4, 9)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 10)\nfalse\n>>> equilateral_triangle(3, 4, 11)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 12)\nfalse\n>>> equilateral_triangle(3, 4, 13)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 14)\nfalse\n>>> equilateral_triangle(3, 4, 15)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 16)\nfalse\n>>> equilateral_triangle(3, 4, 17)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 18)\nfalse\n>>> equilateral_triangle(3, 4, 19)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 20)\nfalse\n>>> equilateral_triangle(3, 4, 21)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 22)\nfalse\n>>> equilateral_triangle(3, 4, 23)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 24)\nfalse\n>>> equilateral_triangle(3, 4, 25)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 26)\nfalse\n>>> equilateral_triangle(3, 4, 27)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 28)\nfalse\n>>> equilateral_triangle(3, 4, 29)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 30)\nfalse\n>>> equilateral_triangle(3, 4, 31)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 32)\nfalse\n>>> equilateral_triangle(3, 4, 33)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 34)", "    if a==0 || b==0 || c==0 \n    then return false\n    else if a==b\
    \ and b==c \n    then return true\n    else if a==c \n    then return true\n \
    \   else if b==c \n    then return true\n    else if a==b || b==c || c==a \n \
    \   then return true\n    else return false\nend\n\"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return true if the three\n    sides form a\
    \ right-angled triangle, false otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    false\n    \"\"\"", "    if a > b and a > c then \n        return true\n\
    \    else if a < b and a < c then \n        return false\n    else if b > c and\
    \ b > a then \n        return true\n    else if b < c and b < a then \n      \
    \  return false\n    else if c > a and c > b then \n        return true\n    else\
    \ if c < a and c < b then \n        return false\n    else \n        return false\n\
    end\n</cell>\n<code language=julia-1.0>\n\"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return true if the three\n    sides form a right-angled\
    \ triangle, false otherwise.\n    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3,\
    \ 4, 5)\n    true\n    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"",
  "    if a > b and a > c \n        then return true\n    else if b > c \n       \
    \ then return true\n    else if c > a \n        then return true\n    else return\
    \ false\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return true if the three\n    sides form a\
    \ right-angled triangle, false otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    false\n    \"\"\"", "    if a == 0 || b == 0 || c == 0 \n        then\
    \ return false\n    else if a + b > c \n        then return true\n    else if\
    \ b + c > a \n        then return true\n    else if c + a > b \n        then return\
    \ true\n    else return false\nend\n</cell>\n<code language=julia-1.0>\n\"\"\"\
    \n    Given the lengths of the three sides of a triangle. Return true if the three\n\
    \    sides form a right-angled triangle, false otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a == b or a == c or b == c \n       \
    \ then true\n        else false\n    end\nend\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\n    Given the lengths of the three sides of a triangle. Return true if\
    \ the three\n    sides form a right-angled triangle, false otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a > b and a > c \n        then return\
    \ true\n    else if b > c \n        then return false\n    else if c > a \n  \
    \      then return false\n    else return true\nend\n</code>\n<|/ a tags=julia\
    \ |>\n<| a dscore=0 |>\n<code>", "    if a > b and a > c \n        then return\
    \ true\n    else if b > c \n        then return true\n    else if c > a \n   \
    \     then return true\n    else return false\nend\n\"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return true if the three\n    sides form a\
    \ right-angled triangle, false otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    false\n    \"\"\"", "    if b > c \n        then return false\n    else\
    \ if c > a \n        then return false\n    else if b == c \n        then return\
    \ true\n    else if b == a \n        then return true\n    else if c == a \n \
    \       then return true\n    else return false\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given the lengths of the three sides of a triangle. Return true if\
    \ the three\n    sides form a right-angled triangle, false otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if b == c \n        then return true\n \
    \   else if b > c \n        then return false\n    else \n        right_angle_triangle(a\
    \ + 1, b, c - 1)\n</code>\n<|/ a dscore=0 |>\n<| a |>\n<code>", "    if a > b\
    \ and a > c \n    then return true\n    else if b > c \n    then return false\n\
    \    else if c > a \n    then return false\n    else return true\n    end\nend\n\
    \"\"\"\n    Given the lengths of the three sides of a triangle. Return true if\
    \ the three\n    sides form a right-angled triangle, false otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a > b and a > c \n    or b > c and b\
    \ > a \n    or c > a and c > b \n    then return true\n    else return false\n\
    end\n</code>\n<|/ a dscore=0 |>\n<| a tags=julia,if-statement |>\n<code>", " \
    \   if a == 0 || b == 0 || c == 0 \n        then return false\n    else if b >\
    \ a && b > c \n        then return true\n    else if c > a && c > b \n       \
    \ then return true\n    else if b == c \n        then return true\n    else if\
    \ b > c \n        then return false\n    else if c > b \n        then return false\n\
    \    else if b > a && c > a \n        then return false\n    else if c > a &&\
    \ b > a \n        then return false\n    else return true\nend\n</cell>\n<code\
    \ language=julia-1.5>\n\"\"\"\n    Given the lengths of the three sides of a triangle.\
    \ Return true if the three\n    sides form a right-angled triangle, false otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n\
    \    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"", "    if a > b\
    \ and a > c \n    then return true\n    else if b > c \n    then return false\n\
    \    else return false\n    end\nend\n\"\"\"\n    Given the lengths of the three\
    \ sides of a triangle. Return true if the three\n    sides form a right-angled\
    \ triangle, false otherwise.\n    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3,\
    \ 4, 5)\n    true\n    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"",
  "    if a > b and a > c then \n        return true\n    else if b > c and b > a\
    \ then \n        return true\n    else if c > a and c > b then \n        return\
    \ true\n    else \n        return false\n    end\nend\n</cell>\n<code language=julia-1.0>\n\
    \"\"\"\n    Given the lengths of the three sides of a triangle. Return true if\
    \ the three\n    sides form a right-angled triangle, false otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a == 0 || b == 0 || c == 0 \n    then\
    \ return false \n    else if b > a && b > c \n    then return true \n    else\
    \ if c > a && c > b \n    then return true \n    else if b == c \n    then return\
    \ true \n    else if b > c \n    then return false \n    else if c > b \n    then\
    \ return false \n    else return true \nend\n</code>\n<|/ a tags=julia |>\n<|\
    \ c |>\nThe `if` statement can be replaced with `return b > a && b > c`\n<|/ c\
    \ |>\n<| a tags=julia |>\n<code>", "    if a==b or a==c or b==c then return true\
    \ else return false \nend \n\"\"\"\n    Given the lengths of the three sides of\
    \ a triangle. Return true if the three\n    sides form a right-angled triangle,\
    \ false otherwise.\n    A right-angled triangle is a triangle in which one angle\
    \ is right angle or \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3,\
    \ 4, 5)\n    true\n    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"",
  "    if a==b or a==c or b==c \n    then return true\n    else return false\nend\n\
    </cell>\n<code language=julia-1.5>\n\"\"\"\n    Given the lengths of the three\
    \ sides of a triangle. Return true if the three\n    sides form a right-angled\
    \ triangle, false otherwise.\n    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3,\
    \ 4, 5)\n    true\n    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"",
  "    if a==b or a==c or b==c then return true else return false \nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that checks if a triangle is equilateral\
    \ or not.\nA triangle is equilateral if all three sides are equal, i.e. the sum\
    \ of all three sides is equal to the length of the side.\nExample: \n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(1, 2, 3)\nfalse\n\"\"\"", "    if a==b\
    \ and b==c then return true\n    else if a==c then return false\n    else if b==c\
    \ then return false\n    else if a==b or b==c or c==a then return false\n    else\
    \ return true\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    Given the\
    \ lengths of the three sides of a triangle. Return true if the three\n    sides\
    \ form a right-angled triangle, false otherwise.\n    A right-angled triangle\
    \ is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n\
    \    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a == 0 || b == 0 || c == 0 \n       \
    \ then return false \n    else \n        if b > c \n            then return right_angle_triangle(a\
    \ - 1, b, c) \n        else \n            if b < c \n                then return\
    \ right_angle_triangle(a, b - 1, c) \n            else \n                if a\
    \ > c \n                    then return right_angle_triangle(a, b, c-1) \n   \
    \             else \n                    if a < c \n                        then\
    \ return right_angle_triangle(a, b, c - 1) \n                    else \n     \
    \                   return true \n\"\"\"\n    Given the lengths of the three sides\
    \ of a triangle. Return true if the three\n    sides form a right-angled triangle,\
    \ false otherwise.\n    A right-angled triangle is a triangle in which one angle\
    \ is right angle or \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3,\
    \ 4, 5)\n    true\n    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"",
  "    if b == c || a == c || a == b\n        true\n    else\n        false\n    end\n\
    end\n</cell>\n<text>\nExercise 2\nWrite a function that checks if a triangle is\
    \ equilateral or not.\nExample: \n    >>> equilateral_triangle(3, 4, 5)\n    true\n\
    \    >>> equilateral_triangle(1, 2, 3)\n    false\n    \"\"\"", "    if a > b\
    \ and a > c \n    then return true\n    else if b > c \n    then return false\n\
    \    else return true\n    end\nend\n\"\"\"\n    Given the lengths of the three\
    \ sides of a triangle. Return true if the three\n    sides form a right-angled\
    \ triangle, false otherwise.\n    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3,\
    \ 4, 5)\n    true\n    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"",
  "    if a==b or a==c or b==c then return false \n    else return true\nend\n</cell>\n\
    <code language=julia-1.5>\n\"\"\"\n    Given the lengths of the three sides of\
    \ a triangle. Return true if the three\n    sides form a right-angled triangle,\
    \ false otherwise.\n    A right-angled triangle is a triangle in which one angle\
    \ is right angle or \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3,\
    \ 4, 5)\n    true\n    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"",
  "    if a==0 || b==0 || c==0 \n    then return false\n    else if a==b || b==c ||\
    \ c==a \n    then return true\n    else if a==c || b==c || c==a \n    then return\
    \ false\n    else if a==b || b==a || c==a \n    then return true\n    else return\
    \ false\nend\n</code>\n<|/ a tags=julia |>\n<| a dscore=2 |>\nA simple solution\
    \ is to use Julia's built-in function isrightangle:\n<code>\njulia> isrightangle(3,\
    \ 4, 5)\ntrue", "    if b == c && b == a \n        then true\n        else false\n\
    \    end\nend\n</cell>\n<code language=julia-1.4>\n\"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return true if the three\n    sides form a\
    \ right-angled triangle, false otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    false\n    \"\"\"", "    if a==b and b==c then return true\n    if a==b\
    \ or a==c or b==c then return false\n    else return (abs(a-b) <= 1 and abs(a-c)\
    \ <= 1 and abs(b-c) <= 1)\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n \
    \   Given the lengths of the three sides of a triangle. Return true if the three\n\
    \    sides form a right-angled triangle, false otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a==b and a==c then return true\n    if\
    \ a==c then return false\n    if b==c then return false\n    if a==b or b==c then\
    \ return false\n    if a==c or c==a then return false\n    return true\nend\n\"\
    \"\"\n    Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n    sides form a right-angled triangle, false otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a > b and a > c \n        then true\n\
    \        else false\n    end\nend\n\"\"\"\n    Given the lengths of the three\
    \ sides of a triangle. Return true if the three\n    sides form a right-angled\
    \ triangle, false otherwise.\n    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3,\
    \ 4, 5)\n    true\n    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"",
  "    if b > c \n        then return false\n    else if c > a \n        then return\
    \ false\n    else if b == c \n        then return true\n    else if b > a \n \
    \       then return right_angle_triangle(a, b, c) or right_angle_triangle(b, a,\
    \ c)\n    else return false\nend\n</cell>\n<code language=julia-1.5>\nright_angle_triangle(3,\
    \ 4, 5)\n</cell>\n<text>\nExercise 2\nWrite a function that checks if a triangle\
    \ is equilateral or not.\nExample: \n>>> equilateral_triangle(3, 4, 5)\ntrue\n\
    >>> equilateral_triangle(1, 2, 3)\nfalse\n>>> equilateral_triangle(3, 4, 6)\n\
    false\n>>> equilateral_triangle(3, 4, 7)\nfalse\n>>> equilateral_triangle(3, 4,\
    \ 8)\nfalse\n>>> equilateral_triangle(3, 4, 9)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 10)\nfalse\n>>> equilateral_triangle(3, 4, 11)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 12)\nfalse\n>>> equilateral_triangle(3, 4, 13)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 14)\nfalse\n>>> equilateral_triangle(3, 4, 15)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 16)\nfalse\n>>> equilateral_triangle(3, 4, 17)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 18)\nfalse\n>>> equilateral_triangle(3, 4, 19)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 20)\nfalse\n>>> equilateral_triangle(3, 4, 21)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 22)\nfalse\n>>> equilateral_triangle(3, 4, 23)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 24)\nfalse\n>>> equilateral_triangle(3, 4, 25)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 26)\nfalse\n>>> equilateral_triangle(3, 4, 27)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 28)\nfalse\n>>> equilateral_triangle(3, 4, 29)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 30)\nfalse\n>>> equilateral_triangle(3, 4, 31)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 32)\nfalse\n>>> equilateral_triangle(3, 4, 33)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 34)\nfalse\n>>> equilateral_triangle(3, 4, 35)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 36)", "    if a==b or a==c or b==c then return false \n    else return true\n\
    end\n</cell>\n<code language=julia-1.0>\n\"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return true if the three\n    sides form a right-angled\
    \ triangle, false otherwise.\n    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3,\
    \ 4, 5)\n    true\n    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"",
  "    if a == 0 || b == 0 || c == 0 \n        true\n    else\n        if b > a &&\
    \ c > a \n            right_angle_triangle(b, c, a)\n        else\n          \
    \  if c > b \n                right_angle_triangle(a, c, b)\n            else\n\
    \                if b > c \n                    right_angle_triangle(a, b, c)\n\
    \                else\n                    false\n</code>\n<|/ a dscore=0 |>\n\
    <| a |>\n<code>\ndef right_angle_triangle(a, b, c):\n    if a == 0 or b == 0 or\
    \ c == 0:\n        return True\n    if b > a and c > a:\n        return right_angle_triangle(b,\
    \ c, a)\n    if c > b:\n        return right_angle_triangle(a, c, b)\n    if b\
    \ > c:\n        return right_angle_triangle(a, b, c)\n    return False\n</code>\n\
    <|/ a tags=python,recursion dscore=0 |>\n<| a tags=python,recursion |>\n<code>\n\
    def right_angle_triangle(a, b, c):\n    if a == 0:\n        return True\n    if\
    \ b == 0:\n        return False\n    if c == 0:\n        return False\n    if\
    \ b > a and c > a:\n        return right_angle_triangle(b, c, a)\n    if c > b:\n\
    \        return right_angle_triangle(a, c, b)\n    if b > c:\n        return right_angle_triangle(a,\
    \ b, c)\n    return False\n</code>\n<|/ a dscore=0 |>\n<| a tags=python,recursion\
    \ |>\n<code>\ndef right_angle_triangle(a, b, c):\n    if a == 0:\n        return\
    \ True\n    if b == 0:\n        return False\n    if c == 0:\n        return False\n\
    \    if b > a and c > a:\n        return right_angle_triangle(b, c, a)\n    if\
    \ c > b:\n        return right_angle_triangle(a, c, b)\n    if b > c:\n      \
    \  return right_angle_triangle(a, b, c)\n    return False\n</code>\n<|/ a dscore=0\
    \ |>\n<| a dscore=0 |>\n<code>\ndef right_angle_triangle(a, b, c):\n    if a ==\
    \ 0:\n        return True\n    if b == 0:\n        return False\n    if c == 0:\n\
    \        return False\n    if b > a and c > a:\n        return right_angle_triangle(b,\
    \ c, a)\n    if c > b:\n        return right_angle_triangle(a, c, b)\n    if b\
    \ > c:\n        return right_angle_triangle(a, b, c)\n    return False\n</code>\n\
    <|/ a tags=python,recursion |>\n<| a |>\n<code>\ndef right_angle_triangle(a, b,\
    \ c):\n    if a == 0:\n        return True\n    if b == 0:\n        return False\n\
    \    if c == 0:\n        return False\n    if b > a and c > a:\n        return\
    \ right_angle_triangle(b, c, a)\n    if c > b:\n        return right_angle_triangle(a,\
    \ c, b)\n    if b > c:\n        return right_angle_triangle(a, b, c)\n    return\
    \ False\n</code>\n<|/", "    if a == 0 || b == 0 || c == 0 \n        true \n \
    \   else \n        if b > a \n            right_angle_triangle(b, a, c) \n   \
    \     else \n            if c > b \n                right_angle_triangle(a, b,\
    \ c) \n            else \n                if b > c \n                    right_angle_triangle(a,\
    \ b, c) \n                else \n                    right_angle_triangle(a, b,\
    \ a) \nend \n</cell>\n<code language=julia-1.5>\n\"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return true if the three\n    sides form a\
    \ right-angled triangle, false otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    false\n    \"\"\"", "    if a==b or a==c or b==c then return true else\
    \ return false \nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    Given the\
    \ lengths of the three sides of a triangle. Return true if the three\n    sides\
    \ form a right-angled triangle, false otherwise.\n    A right-angled triangle\
    \ is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n\
    \    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a==0 || b==0 || c==0 \n        then return\
    \ false\n    else \n        if abs(a-b)==abs(a-c) \n            then return true\n\
    \        else \n            if abs(a-b)>abs(a-c) \n                then return\
    \ false\n            else \n                if abs(a-c)>abs(a-b) \n          \
    \          then return true\n                else \n                    if abs(a-b)==abs(a-c)\
    \ \n                        then return true\n                    else \n    \
    \                    if abs(a-c)==abs(a-b) \n                            then\
    \ return true\n                        else \n                            if abs(a-b)==abs(a-c)\
    \ \n                                then return true\n                       \
    \     else \n                                if abs(a-c)==abs(a-b) \n        \
    \                            then return true\n                              \
    \  else \n                                    return false\n\"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return true if the three\n   \
    \ sides form a right-angled triangle, false otherwise.\n    A right-angled triangle\
    \ is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n\
    \    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a == 0 || b == 0 || c == 0 \n       \
    \ then return false\n    else \n        if b > a && b > c \n            then return\
    \ true\n        else if c > a && c > b \n            then return true\n      \
    \  else if b > c \n            then return false\n        else if c > b \n   \
    \         then return false\n        else return true\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\n\"\"\"\n    Given the lengths of the three sides of\
    \ a triangle. Return true if the three\n    sides form a right-angled triangle,\
    \ false otherwise.\n    A right-angled triangle is a triangle in which one angle\
    \ is right angle or \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3,\
    \ 4, 5)\n    true\n    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"",
  "    if a==b or a==c or b==c then return true\n    else return false\nend\n</cell>\n\
    <code language=julia-1.5>\n\"\"\"\n    Given the lengths of the three sides of\
    \ a triangle. Return true if the three\n    sides form a right-angled triangle,\
    \ false otherwise.\n    A right-angled triangle is a triangle in which one angle\
    \ is right angle or \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3,\
    \ 4, 5)\n    true\n    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"",
  "    if a > b and a > c then return true\n    if b > c and b > a then return true\n\
    \    if c > a and c > b then return true\n    return false\nend\n\"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return true if the three\n   \
    \ sides form a right-angled triangle, false otherwise.\n    A right-angled triangle\
    \ is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n\
    \    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a > b and a > c \n    then true\n   \
    \ else if b > c \n    then false\n    else if c > a \n    then false\n    else\
    \ false\n    end\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\n    right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool\n    Given the lengths of the three sides of a triangle.\
    \ Return true if the three\n    sides form a right-angled triangle, false otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n\
    \    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"", "    if a > b\
    \ and a > c \n        then return true\n    else if b > a and b > c \n       \
    \ then return true\n    else if c > a and c > b \n        then return true\n \
    \   else return false\nend\n</code>\n<|/ a tags=julia,if-statement |>\n<| a dscore=2\
    \ |>\nYou can use the following code:\n<code>", "    if a > b and a > c then \n\
    \        if b > c then \n            true\n        else \n            false\n\
    \    else \n        if b > c then \n            false\n        else \n       \
    \     true\nend\n</code>\n<|/ a dscore=2 |>\n<| a dscore=2 |>\n<code>", "    if\
    \ a > b and a > c \n    then return true\n    else if b > c \n    then return\
    \ false\n    else if c > a \n    then return false\n    else return true\nend\n\
    </code>\n<|/ a dscore=0 |>\n<| a tags=julia,if-statement |>\n<code>", "    if\
    \ a == b or a == c or b == c \n        then true\n    else false\nend\n</code>\n\
    <|/ a dscore=0 |>\n<| c |>\nThis doesn't answer the question. OP wants to know\
    \ if all three sides are equal, not if they are all equal in some particular order.\n\
    <|/ c |>\n<| a dscore=0 |>\n<code>", "    if a==0 || b==0 || c==0 \n        then\
    \ return false\n    else \n        if a>b and a>c \n            then return true\n\
    \        else if b>a and b>c \n            then return true\n        else if c>a\
    \ and c>b \n            then return true\n        else return false\n    end\n\
    end\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return true if the three\n    sides form a right-angled\
    \ triangle, false otherwise.\n    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3,\
    \ 4, 5)\n    true\n    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"",
  "    if a == 0 || b == 0 || c == 0 \n        true\n    else\n        if b > a &&\
    \ c > b \n            true\n        else\n            if a > c && b > c \n   \
    \             true\n            else\n                if b > a && c > a \n   \
    \                 true\n                else\n                    false\n</code>\n\
    <|/ a tags=julia,trigonometry |>\n<| c |>\nI like the `if` statements better than\
    \ `&&` statements.\n<|/ c |>\n<| c |>\nI agree, `if` statements are more readable\
    \ and easier to maintain.\n<|/ c |>\n<| a dscore=2 |>\nI like using if-else statements\
    \ because they make the code more readable. \n<code>", "    if a==b or a==c or\
    \ b==c \n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given the lengths of the three sides of a triangle. Return true if\
    \ the three\n    sides form a right-angled triangle, false otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a==b or a==c or b==c then return true\
    \ else return false \nend \n</cell>\n<code language=julia-1.0>\n\"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return true if the three\n   \
    \ sides form a right-angled triangle, false otherwise.\n    A right-angled triangle\
    \ is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n\
    \    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a == 0 || b == 0 || c == 0 \n    then\
    \ return true\n    else if b > a && c > b \n    then return false\n    else if\
    \ b > a && c < b \n    then return true\n    else if c > a && b < c \n    then\
    \ return true\n    else return false\n    end\nend\n</code>\n<|/ a |>\n<| c |>\n\
    This code doesn't work. Try it with `right_angle_triangle(3, 4, 5)`.\n<|/ c |>\n\
    <| c |>\nI tested it and it works. I edited the answer to include a test case.\n\
    <|/ c |>\n<| c |>\nI tested it and it works. I edited the answer to include a\
    \ test case.\n<|/ c |>\n<| c |>\nI tested it and it works. I edited the answer\
    \ to include a test case.\n<|/ c |>\n<| c |>\nI tested it and it works. I edited\
    \ the answer to include a test case.\n<|/ c |>\n<| a dscore=4 |>\n<code>", " \
    \   if a == 0 || b == 0 || c == 0 \n    then return false \n    else if b == c\
    \ \n    then return true \n    else if b == a \n    then return true \n    else\
    \ if c == a \n    then return true \n    else return false \nend \n\"\"\"\n  \
    \  Given the lengths of the three sides of a triangle. Return true if the three\n\
    \    sides form a right-angled triangle, false otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if b == c && b == a \n        true\n   \
    \ else\n        false\nend\n</cell>\n<code language=julia-1.0>\n\"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return true if the three\n   \
    \ sides form a right-angled triangle, false otherwise.\n    A right-angled triangle\
    \ is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n\
    \    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a == b or a == c or b == c then return\
    \ true else return false \nend\n</cell>\n<code language=julia-1.0>\n\"\"\"\n \
    \   Given the lengths of the three sides of a triangle. Return true if the three\n\
    \    sides form a right-angled triangle, false otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if b == c \n        then return true\n \
    \   else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else \n        right_angle_triangle(b, c+2, a) \n        right_angle_triangle(b+1,\
    \ c, a) \n        right_angle_triangle(b+1, c+1, a) \n        right_angle_triangle(b,\
    \ c+1, a) \n        right_angle_triangle(b+1, c, a) \n        right_angle_triangle(b+1,\
    \ c+1, a)\n    end\nend\n</code>\n<|/ a dscore=0 |>\n<| a tags=julia |>\n<code>",
  "    if a > b and a > c \n    then true\n    else if b > c \n    then false\n  \
    \  else if c > a \n    then false\n    else false\n    end\nend\n</code>\n<|/\
    \ a tags=julia,if-statement |>\n<| c |>\nThis doesn't work. `right_angle_triangle(3,\
    \ 4, 5)` returns `true` when it should return `false`.\n<|/ c |>\n<| c |>\nI tested\
    \ it and it works fine. Did you copy and paste it correctly? I tested it on Julia\
    \ 0.6.2\n<|/ c |>\n<| c |>\nI tested it on Julia 0.6.2 and it works fine. Did\
    \ you copy and paste it correctly? I tested it on Julia 0.6.2\n<|/ c |>\n<| c\
    \ |>\nI tested it on Julia 0.6.2 and it works fine. Did you copy and paste it\
    \ correctly? I tested it on Julia 0.6.2\n<|/ c |>\n<| c |>\nI tested it on Julia\
    \ 0.6.2 and it works fine. Did you copy and paste it correctly? I tested it on\
    \ Julia 0.6.2\n<|/ c |>\n<| a tags=julia,if-statement |>\n<code>", "    if a >\
    \ b and a > c \n        then return true\n    else if b > c \n        then return\
    \ true\n    else if c > a \n        then return true\n    else return false\n\
    end\n</code>\n<|/ a tags=julia,if-statement |>\n<| a tags=julia,if-statement |>\n\
    A more Julian way would be to use function composition:\n<code>\njulia> function\
    \ right_angle_triangle(a, b, c) a > b and a > c || b > c || c > a\n          \
    \ end\nright_angle_triangle (generic function with 1 method)", "    if a > b and\
    \ a > c then return true\n    if b > c and b > a then return true\n    if c >\
    \ a and c > b then return true\n    return false\nend\n\"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return true if the three\n    sides form a\
    \ right-angled triangle, false otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    false\n    \"\"\"", "    if a==0 || b==0 || c==0 \n        then return\
    \ false \n    else \n        if a>b and b>c \n            then return true \n\
    \        else \n            if a>c \n                then return true \n     \
    \       else \n                if b>c \n                    then return true \n\
    \                else \n                    return false \n\"\"\"\n    Given the\
    \ lengths of the three sides of a triangle. Return true if the three\n    sides\
    \ form a right-angled triangle, false otherwise.\n    A right-angled triangle\
    \ is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n\
    \    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a > b and a > c then return true\n  \
    \  if b > c and b > a then return true\n    if c > a and c > b then return true\n\
    \    return false\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return true if the three\n   \
    \ sides form a right-angled triangle, false otherwise.\n    A right-angled triangle\
    \ is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n\
    \    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a==b and b==c return true\n    if a==b\
    \ or b==c return false\n    if a==c return true\n    if b==c return false\n  \
    \  \n\"\"\"\n    Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n    sides form a right-angled triangle, false otherwise.\n   \
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    \    90 degree.\n    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n\
    \    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"", "    if b == c\
    \ \n        then return true\n    else if b == a + c \n        then return true\n\
    \    else if b == a - c \n        then return true\n    else if b == a - b \n\
    \        then return true\n    else return false\nend\n</code>\n<|/ a dscore=1\
    \ |>\n<| c |>\nThis does not provide an answer to the question. To critique or\
    \ request clarification from an author, leave a comment below their post. - [From\
    \ Review](/review/low-quality-posts/26817447)\n<|/ c |>\n<| c |>\nI believe this\
    \ does answer the question. He asked how to check if a triangle is right angled,\
    \ not how to check if a triangle is equilateral. He also asked how to check if\
    \ a triangle is right angled or equilateral. He also asked how to check if a triangle\
    \ is right angled or equilateral. He also asked how to check if a triangle is\
    \ right angled or equilateral. He also asked how to check if a triangle is right\
    \ angled or equilateral. He also asked how to check if a triangle is right angled\
    \ or equilateral. He also asked how to check if a triangle is right angled or\
    \ equilateral. He also asked how to check if a triangle is right angled or equilateral.\
    \ He also asked how to check if a triangle is right angled or equilateral. He\
    \ also asked how to check if a triangle is right angled or equilateral. He also\
    \ asked how to check if a triangle is right angled or equilateral. He also asked\
    \ how to check if a triangle is right angled or equilateral. He also asked how\
    \ to check if a triangle is right angled or equilateral. He also asked how to\
    \ check if a triangle is right angled or equilateral. He also asked how to check\
    \ if a triangle is right angled or equilateral. He also asked how to check if\
    \ a triangle is right angled or equilateral. He also asked how to check if a triangle\
    \ is right angled or equilateral. He also asked how to check if a triangle is\
    \ right angled or equilateral. He also asked how to check if a triangle is ",
  "    if a==b or a==c or b==c then return true\n    else return false\nend\n\"\"\"\
    \n    Given the lengths of the three sides of a triangle. Return true if the three\n\
    \    sides form a right-angled triangle, false otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a > b and a > c then return true\n  \
    \  if b > c and b > a then return true\n    if c > a and c > b then return true\n\
    \    return false\nend\n\"\"\"\n    Given the lengths of the three sides of a\
    \ triangle. Return true if the three\n    sides form a right-angled triangle,\
    \ false otherwise.\n    A right-angled triangle is a triangle in which one angle\
    \ is right angle or \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3,\
    \ 4, 5)\n    true\n    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"",
  "    if b > c \n        then return false\n    else if c > a \n        then return\
    \ false\n    else if b == c \n        then return true\n    else if b > a \n \
    \       then return right_angle_triangle(a, b, c) or right_angle_triangle(b, a,\
    \ c)\n    else if c > a \n        then return right_angle_triangle(a, b, c) or\
    \ right_angle_triangle(b, a, c)\n    else if b > c \n        then return right_angle_triangle(a,\
    \ b, c) or right_angle_triangle(b, a, c)\n    else return false\nend\n</cell>\n\
    <code language=julia-1.0>\nright_angle_triangle(3, 4, 5)\n</cell>\n<code language=julia-1.0>\n\
    right_angle_triangle(1, 2, 3)\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ checks if a triangle is equilateral or not.\nExample: \n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(1, 2, 3)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 6)\nfalse\n>>> equilateral_triangle(3, 4, 7)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 8)\nfalse\n>>> equilateral_triangle(3, 4, 9)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 10)\nfalse\n>>> equilateral_triangle(3, 4, 11)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 12)\nfalse\n>>> equilateral_triangle(3, 4, 13)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 14)\nfalse\n>>> equilateral_triangle(3, 4, 15)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 16)\nfalse\n>>> equilateral_triangle(3, 4, 17)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 18)\nfalse\n>>> equilateral_triangle(3, 4, 19)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 20)\nfalse\n>>> equilateral_triangle(3, 4, 21)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 22)\nfalse\n>>> equilateral_triangle(3, 4, 23)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 24)\nfalse\n>>> equilateral_triangle(3, 4, 25)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 26)\nfalse\n>>> equilateral_triangle(3, 4, 27)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 28)\nfalse\n>>> equilateral_triangle(3, 4, 29)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 30)\nfalse\n>>> equilateral_triangle(3, 4, 31)\nfalse", "    if a > b and\
    \ a > c \n        then return true\n    else if b > a and b > c \n        then\
    \ return true\n    else if c > a and c > b \n        then return true\n    else\
    \ return false\nend\n\"\"\"\n    Given the lengths of the three sides of a triangle.\
    \ Return true if the three\n    sides form a right-angled triangle, false otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n\
    \    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"", "    if a==b or\
    \ a==c or b==c then return true\n    else return false\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given the lengths of the three sides of a triangle. Return true if\
    \ the three\n    sides form a right-angled triangle, false otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a==b and a==c then return true\n    if\
    \ a==c then return false\n    if b==c then return false\n    if a==b or a==c or\
    \ b==c then return false\n    else return true\nend\n\"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return true if the three\n    sides form a\
    \ right-angled triangle, false otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    false\n    \"\"\"", "    if a > b and a > c \n        then true\n  \
    \      else false\n    end\nend\n\"\"\"\n    Given the lengths of the three sides\
    \ of a triangle. Return true if the three\n    sides form a right-angled triangle,\
    \ false otherwise.\n    A right-angled triangle is a triangle in which one angle\
    \ is right angle or \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3,\
    \ 4, 5)\n    true\n    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"",
  "    if a > b and a > c \n        then return true\n    else if b > c \n       \
    \ then return true\n    else if c > a \n        then return true\n    else return\
    \ false\nend\n\"\"\"\n    Given the lengths of the three sides of a triangle.\
    \ Return true if the three\n    sides form a right-angled triangle, false otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n\
    \    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"", "    if a==b or\
    \ a==c or b==c then return true else return false\nend\n\"\"\"\n    Given the\
    \ lengths of the three sides of a triangle. Return true if the three\n    sides\
    \ form a right-angled triangle, false otherwise.\n    A right-angled triangle\
    \ is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n\
    \    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a == b or a == c or b == c then return\
    \ true\n    else return false\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\
    \n    Given the lengths of the three sides of a triangle. Return true if the three\n\
    \    sides form a right-angled triangle, false otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a > b and a > c then return true\n  \
    \  if b > c and b > a then return true\n    if c > a and c > b then return true\n\
    \    return false\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return true if the three\n   \
    \ sides form a right-angled triangle, false otherwise.\n    A right-angled triangle\
    \ is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n\
    \    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a == 0 || b == 0 || c == 0 \n       \
    \ true\n    else\n        if b > a && b > c \n            right_angle_triangle(a,\
    \ c - b, c)\n        elseif c > a && c > b \n            right_angle_triangle(a,\
    \ c - b, c)\n        elseif b > c \n            right_angle_triangle(a, c - b,\
    \ c)\n        elseif c > b \n            right_angle_triangle(a, c - b, c)\n \
    \       else\n            true\n        end\n    end\nend\n</code>\n<|/ a dscore=0\
    \ |>\n<| a dscore=0 |>\n<code>", "    if a == 0 || b == 0 || c == 0 \n    then\
    \ return false \n    else if b == c \n    then return true \n    else if b ==\
    \ a \n    then return true \n    else if c == a \n    then return true \n    else\
    \ return false \nend\n</cell>\n<code language=julia-1.0>\n\"\"\"\n    Given the\
    \ lengths of the three sides of a triangle. Return true if the three\n    sides\
    \ form a right-angled triangle, false otherwise.\n    A right-angled triangle\
    \ is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n\
    \    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a > b and a > c \n    then true\n   \
    \ else if b > c \n    then true\n    else false\nend\n</code>\n<|/ a tags=julia,if-statement\
    \ |>\n<| a dscore=2 |>\n<code>", "    if a==b or a==c or b==c then return true\n\
    \    else return false\nend\n\"\"\"\n    Given the lengths of the three sides\
    \ of a triangle. Return true if the three\n    sides form a right-angled triangle,\
    \ false otherwise.\n    A right-angled triangle is a triangle in which one angle\
    \ is right angle or \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3,\
    \ 4, 5)\n    true\n    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"",
  "    if b == c && a > b\n        true\n    else\n        false\nend\n</cell>\n<code\
    \ language=julia-1.3>\n\"\"\"\n    Given the lengths of the three sides of a triangle.\
    \ Return true if the three\n    sides form a right-angled triangle, false otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n\
    \    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"", "    if b == c\
    \ \n        then return true\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b == c \n        then\
    \ return true\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return false\n    else if b < c \n        then return false\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return false\n    else if b < c \n        then return false\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return false\n    else if b < c \n        then return false\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return false\n    else if b < c \n        then return false\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return ", "    if a==b or a==c or b==c then\
    \ return true\n    else return false\nend\n</cell>\n<code language=julia-0.6>\n\
    \"\"\"\n    Given the lengths of the three sides of a triangle. Return true if\
    \ the three\n    sides form a right-angled triangle, false otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a==b or a==c or b==c then return true\n\
    \    else return false\nend\n\"\"\"\n    Given the lengths of the three sides\
    \ of a triangle. Return true if the three\n    sides form a right-angled triangle,\
    \ false otherwise.\n    A right-angled triangle is a triangle in which one angle\
    \ is right angle or \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3,\
    \ 4, 5)\n    true\n    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"",
  "    if a == 0 || b == 0 || c == 0 \n        then return false \n    else \n   \
    \     if b > c \n            then return right_angle_triangle(c - a, b - a, c)\
    \ \n        else \n            if a > c \n                then return right_angle_triangle(c\
    \ - a, c - b, c) \n            else \n                if b > a \n            \
    \        then return right_angle_triangle(c - a, c - b, a - b) \n            \
    \    else \n                    return true \n\"\"\"\n    Given the lengths of\
    \ the three sides of a triangle. Return true if the three\n    sides form a right-angled\
    \ triangle, false otherwise.\n    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3,\
    \ 4, 5)\n    true\n    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"",
  "    if a < b and a < c and b < c then \n        true\n    else \n        false\n\
    end\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return true if the three\n    sides form a right-angled\
    \ triangle, false otherwise.\n    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3,\
    \ 4, 5)\n    true\n    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"",
  "    if a > b and a > c \n        then return true\n    else if b > c \n       \
    \ then return false\n    else if c > a \n        then return false\n    else if\
    \ b == c \n        then return true\n    else if a == c \n        then return\
    \ true\n    else if b == a \n        then return false\n    else if c == a \n\
    \        then return false\n    else return false\nend\n</code>\n<|/ a dscore=1\
    \ |>\n<| a tags=julia,if-statement,function |>\n<code>", "    if a==b or a==c\
    \ or b==c then return true else return false \nend\n</cell>\n<code language=julia-1.1>\n\
    \"\"\"\n    Given the lengths of the three sides of a triangle. Return true if\
    \ the three\n    sides form a right-angled triangle, false otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a==b or a==c or b==c \n        then return\
    \ true\n    else \n        then return false\n    end\nend\n\"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return true if the three\n   \
    \ sides form a right-angled triangle, false otherwise.\n    A right-angled triangle\
    \ is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n\
    \    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a > b and a > c \n    then true\n   \
    \ else if b > c \n    then true\n    else false\nend\n</code>\n<|/ a dscore=0\
    \ |>\n<| c |>\nThis doesn't answer the question. He wants to know if three sides\
    \ form a right angled triangle, not if they are all equal (which would be a right\
    \ angled triangle).\n<|/ c |>\n<| c |>\nI guess I misunderstood the question.\
    \ I thought he wanted to know if all three sides were equal. I edited my answer\
    \ to reflect that.\n<|/ c |>\n<| c |>\nI guess I misunderstood the question. I\
    \ thought he wanted to know if all three sides were equal. I edited my answer\
    \ to reflect that.\n<|/ c |>\n<| a |>\n<code>", "    if a > b and a > c \n   \
    \ then return true\n    else if b > c \n    then return true\n    else return\
    \ false\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return true if the three\n    sides form a\
    \ right-angled triangle, false otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    false\n    \"\"\"", "    if a > b and a > c \n        then return true\n\
    \    else if b > c \n        then return false\n    else if c > a \n        then\
    \ return false\n    else if b == c \n        then return true\n    else if a ==\
    \ b or a == c \n        then return true\n    else \n        then return false\n\
    end\n</code>\n<|/ a dscore=1 |>\n<| a dscore=0 |>\n<code>", "    if a == 0 ||\
    \ b == 0 || c == 0 \n    then return false\n    else if b > a && b > c \n    then\
    \ return true\n    else if c > a && c > b \n    then return true\n    else if\
    \ b == c \n    then return true\n    else if b > c \n    then return false\n \
    \   else if c > b \n    then return false\n    else return true\nend\n</code>\n\
    <|/ a |>\n<| c |>\nThis doesn't answer the question, which is about how to determine\
    \ if a triangle is right angled.\n<|/ c |>\n<| c |>\nThis answer is wrong. `right_angle_triangle(3,\
    \ 4, 5)` returns `true` but `right_angle_triangle(1, 2, 3)` returns `false`\n\
    <|/ c |>\n<| c |>\nThe question was about how to determine if a triangle is right\
    \ angled, not how to determine if a triangle is right angled or not. Your answer\
    \ doesn't answer the question.\n<|/ c |>\n<| c |>\nThe question was about how\
    \ to determine if a triangle is right angled or not. Your answer doesn't answer\
    \ the question.\n<|/ c |>\n<| c |>\nThe question was about how to determine if\
    \ a triangle is right angled or not. Your answer doesn't answer the question.\n\
    <|/ c |>\n<| a dscore=5 |>\nThe question was about how to determine if a triangle\
    \ is right angled or not. Your answer doesn't answer the question.\nThe question\
    \ was about how to determine if a triangle is right angled or not. Your answer\
    \ doesn't answer the question.\nThe question was about how to determine if a triangle\
    \ is right angled or not. Your answer doesn't answer the question.\nThe question\
    \ was about how to determine if a triangle is right angled or not. Your answer\
    \ doesn't answer the question.\nThe question was about how to determine if a triangle\
    \ is right angled or not. Your answer doesn't answer the question.\nThe question\
    \ was about how to determine if a triangle is right angled or not. Your answer\
    \ doesn't answer the question.\nThe question was about how to determine if a triangle\
    \ is right angled or not. Your answer doesn't answer the question.\nThe question\
    \ was about how to determine if a triangle is right angled or not. Your answer\
    \ doesn't answer the question.\nThe question was about how to determine if a triangle\
    \ is right angled or not. Your answer doesn't answer the question.\nThe question\
    \ was about how to determine if a triangle is right angled or not. Your answer\
    \ doesn't answer the question.\nThe question was about how to determine if a triangle\
    \ is right angled or not. Your answer ", "    if a==0 || b==0 || c==0 \n     \
    \   true \n    else \n        if b > c \n            a > c \n        else \n \
    \           a > b \n    end\nend\n</cell>\n<code language=julia-1.0>\n\"\"\"\n\
    \    Given the lengths of the three sides of a triangle. Return true if the three\n\
    \    sides form a right-angled triangle, false otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a > b and a > c \n    then return true\n\
    \    else if b > c \n    then return false\n    else if c > a \n    then return\
    \ false\n    else return true\n    end\nend\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\n    Given the lengths of the three sides of a triangle. Return true if\
    \ the three\n    sides form a right-angled triangle, false otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a > b and a > c \n        then true\n\
    \        else false\n    end\nend\n</cell>\n<code language=julia-1.4>\n\"\"\"\n\
    \    Given the lengths of the three sides of a triangle. Return true if the three\n\
    \    sides form a right-angled triangle, false otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a == 0 || b == 0 || c == 0 \n       \
    \ true\n    else\n        if b > a && c > a \n            right_angle_triangle(b,\
    \ c, a)\n        else\n            if c > b \n                right_angle_triangle(a,\
    \ b, c)\n            else\n                if b > c \n                    right_angle_triangle(a,\
    \ b, c)\n                else\n                    false\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\n\"\"\"\n    Given the lengths of the three sides of\
    \ a triangle. Return true if the three\n    sides form a right-angled triangle,\
    \ false otherwise.\n    A right-angled triangle is a triangle in which one angle\
    \ is right angle or \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3,\
    \ 4, 5)\n    true\n    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"",
  "    if b == c \n        then return true\n    else if b > c \n        then return\
    \ false\n    else if b < c \n        then return false\n    else if b == c \n\
    \        then return true\n    else if b > c \n        then return true\n    else\
    \ if b < c \n        then return true\n    else return false\nend\n</code>\n<|/\
    \ a dscore=0 |>\n<| a dscore=0 |>\n<code>", "    if a > b and a > c \n    then\
    \ return true\n    else if b > c \n    then return false\n    else if c > a \n\
    \    then return false\n    else return true\n    end\nend\n\"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return true if the three\n   \
    \ sides form a right-angled triangle, false otherwise.\n    A right-angled triangle\
    \ is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n\
    \    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a==b or a==c or b==c then return true\
    \ else return false \nend \n</cell>\n<code language=julia-1.0>\n\"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return true if the three\n   \
    \ sides form a right-angled triangle, false otherwise.\n    A right-angled triangle\
    \ is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n\
    \    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a > b and a > c \n        then return\
    \ true\n    else if b > c \n        then return true\n    else if c > a \n   \
    \     then return true\n    else return false\nend\n</cell>\n<code language=julia-1.0>\n\
    \"\"\"\n    Given the lengths of the three sides of a triangle. Return true if\
    \ the three\n    sides form a right-angled triangle, false otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a > b and a > c then \n        if b >\
    \ c then \n            true\n        else \n            false\n    else \n   \
    \     if b > c then \n            false\n        else \n            true\nend\n\
    </cell>\n<code language=julia-1.5>\n\"\"\"\n    Given the lengths of the three\
    \ sides of a triangle. Return true if the three\n    sides form a right-angled\
    \ triangle, false otherwise.\n    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3,\
    \ 4, 5)\n    true\n    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"",
  "    if a==b and b==c then return true\n    if a==b or a==c or b==c then return\
    \ false\n    else return (abs(a-b)==abs(b-c)) or (abs(a-c)==abs(b-a))\nend\n</cell>\n\
    <code language=julia-1.5>\n\"\"\"\n    Given the lengths of the three sides of\
    \ a triangle. Return true if the three\n    sides form a right-angled triangle,\
    \ false otherwise.\n    A right-angled triangle is a triangle in which one angle\
    \ is right angle or \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3,\
    \ 4, 5)\n    true\n    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"",
  "    if a==b and b==c then return true\n    if a==b or a==c or b==c then return\
    \ false\n    else return right_angle_triangle(a-1, b, c) or right_angle_triangle(a,\
    \ b-1, c) or right_angle_triangle(a, b, c-1)\nend\n</cell>\n<code language=julia-1.0>\n\
    \"\"\"\n    Given the lengths of the three sides of a triangle. Return true if\
    \ the three\n    sides form a right-angled triangle, false otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a==0 || b==0 || c==0 \n        true \n\
    \    else \n        if a>b && b>c \n            true \n        else \n       \
    \     if a>c && c>b \n                true \n            else \n             \
    \   if a>b && c>a \n                    true \n                else \n       \
    \             if a>c && b>a \n                        true \n                \
    \    else \n                        false\n</code>\n<|/ a tags=julia,if-statement\
    \ |>\n<| c |>\nThis doesn't answer the question at all. OP asked how to write\
    \ an `if` statement that checks three numbers for equality. Your answer doesn't\
    \ do that. It just checks two numbers for equality.\n<|/ c |>\n<| c |>\nI agree\
    \ with you. My answer was to show how to write an if statement that checks three\
    \ numbers for equality. Your answer doesn't do that. It just checks two numbers\
    \ for equality.\n<|/ c |>\n<| c |>\nI agree with you. My answer was to show how\
    \ to write an if statement that checks three numbers for equality. Your answer\
    \ doesn't do that. It just checks two numbers for equality.\n<|/ c |>\n<| c |>\n\
    I agree with you. My answer was to show how to write an if statement that checks\
    \ three numbers for equality. Your answer doesn't do that. It just checks two\
    \ numbers for equality.\n<|/ c |>\n<| c |>\nI agree with you. My answer was to\
    \ show how to write an if statement that checks three numbers for equality. Your\
    \ answer doesn't do that. It just checks two numbers for equality.\n<|/ c |>\n\
    <| a dscore=3 |>\n<code>", "    if a > b and a > c \n    then return true\n  \
    \  else if b > c \n    then return false\n    else if c > a \n    then return\
    \ false\n    else return true\n    end\nend\n</cell>\n<code language=julia-1.0>\n\
    \"\"\"\n    Given the lengths of the three sides of a triangle. Return true if\
    \ the three\n    sides form a right-angled triangle, false otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a > b and a > c \n    then \n       \
    \ true\n    else \n        if b > c \n        then \n            true\n      \
    \  else \n            if a > c \n            then \n                true\n   \
    \         else \n                false\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0\
    \ |>\n<code>", "    if a > b and a > c \n        then return true\n    else if\
    \ b > c \n        then return false\n    else if c > a \n        then return false\n\
    \    else return true\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return true if the three\n   \
    \ sides form a right-angled triangle, false otherwise.\n    A right-angled triangle\
    \ is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n\
    \    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a == b or a == c or b == c then return\
    \ true\n    else return false\nend", "    if a==b or a==c or b==c then return\
    \ false \n    else if a>b and a>c then return true \n    else if b>a and b>c then\
    \ return true \n    else if c>a and c>b then return true \n    else return false\
    \ \nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    Given the lengths of\
    \ the three sides of a triangle. Return true if the three\n    sides form a right-angled\
    \ triangle, false otherwise.\n    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3,\
    \ 4, 5)\n    true\n    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"",
  "    if a==b and b==c then return true\n    if a==b or a==c or b==c then return\
    \ false\n    else return (abs(a-b) <= abs(b-c)) and (abs(a-c) <= abs(b-a))\nend\n\
    </cell>\n<code language=julia-1.3>\n\"\"\"\n    Given the lengths of the three\
    \ sides of a triangle. Return true if the three\n    sides form a right-angled\
    \ triangle, false otherwise.\n    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3,\
    \ 4, 5)\n    true\n    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"",
  "    if a == 0 || b == 0 || c == 0 \n    then return false\n    else if a + b >\
    \ c \n    then return false\n    else if b + c > a \n    then return false\n \
    \   else if c + a > b \n    then return false\n    else return true\nend\n</cell>\n\
    <code language=julia-1.5>\n\"\"\"\n    Given the lengths of the three sides of\
    \ a triangle. Return true if the three\n    sides form a right-angled triangle,\
    \ false otherwise.\n    A right-angled triangle is a triangle in which one angle\
    \ is right angle or \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3,\
    \ 4, 5)\n    true\n    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"",
  "    if a > b and a > c \n    or b > c and b > a \n    or c > a and c > b \n   \
    \ then true\n    else false\nend\n</code>\n<|/ a tags=julia,if-statement |>\n\
    <| c |>\nThis doesn't seem to work. `right_angle_triangle(3, 4, 5)` returns `false`\
    \ instead of `true`.\n<|/ c |>\n<| c |>\nI tested it and it works. I used Julia\
    \ 0.6.2\n<|/ c |>\n<| c |>\nI tested it again and it works. I used Julia 0.6.2\n\
    <|/ c |>\n<| c |>\nI tested it again and it works. I used Julia 0.6.2\n<|/ c |>\n\
    <| c |>\nI tested it again and it works. I used Julia 0.6.2\n<|/ c |>\n<| a dscore=3\
    \ |>\nThe accepted answer doesn't work for me. Here's a version that does:\n<code>",
  "    if a == 0 || b == 0 || c == 0 \n        then return true\n    else \n     \
    \   if b > a && c > a \n            then return false\n        else if b > a &&\
    \ c < a \n            then return true\n        else if b < a && c > a \n    \
    \        then return true\n        else if b < a && c < a \n            then return\
    \ false\n        else return false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given the lengths of the three sides of a triangle. Return true if\
    \ the three\n    sides form a right-angled triangle, false otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a == 0 || b == 0 || c == 0 \n       \
    \ then return false\n    else \n        if b > a && b > c \n            then return\
    \ true\n        else if c > a && c > b \n            then return true\n      \
    \  else if b > c \n            then return false\n        else if c > b \n   \
    \         then return false\n        else if b == c \n            then return\
    \ true\n        else \n            if a > c \n                then return false\n\
    \            else \n                if a > b \n                    then return\
    \ false\n                else \n                    if a > c \n              \
    \          then return true\n                    else \n                     \
    \   return false\nend\n\"\"\"\n    Given the lengths of the three sides of a triangle.\
    \ Return true if the three\n    sides form a right-angled triangle, false otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n\
    \    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"", "    if a > b\
    \ and a > c \n        then return true\n    else if b > c \n        then return\
    \ false\n    else if c > a \n        then return false\n    else return true\n\
    end\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return true if the three\n    sides form a right-angled\
    \ triangle, false otherwise.\n    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3,\
    \ 4, 5)\n    true\n    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"",
  "    if b == c \n        then return true\n    else if b > c \n        then return\
    \ false\n    else if b < c \n        then return false\n    else if b == c \n\
    \        then return true\n    else if b > c \n        then return false\n   \
    \ else if b < c \n        then return false\n    else if b > c \n        then\
    \ return false\n    else if b < c \n        then return false\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return false\n    else if b < c \n        then return false\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return false\n    else if b < c \n        then return false\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return false\n    else if b < c \n        then return false\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return ", "    if a > b and a\
    \ > c \n        then true\n        else false\n    end\nend\n</code>\n<|/ a |>\n\
    <| c |>\nThis doesn't answer the question. OP wants to know if three sides form\
    \ a right angled triangle, not if they are all equal (which would also be a right\
    \ angled triangle).\n<|/ c |>\n<| c |>\nThis doesn't answer the question. OP wants\
    \ to know if three sides form a right angled triangle, not if they are all equal\
    \ (which would also be a right angled triangle).\n<|/ c |>\n<| a dscore=2 |>\n\
    <code>", "    if a > b and a > c then return true\n    if b > c and b > a then\
    \ return true\n    if c > a and c > b then return true\n    return false\nend\n\
    </cell>\n<code language=julia-1.3>\n\"\"\"\n    Given the lengths of the three\
    \ sides of a triangle. Return true if the three\n    sides form a right-angled\
    \ triangle, false otherwise.\n    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3,\
    \ 4, 5)\n    true\n    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"",
  "    if b == c \n        then return true\n    else if b > c \n        then return\
    \ false\n    else if b < c \n        then return false\n    else if b == c \n\
    \        then return false\n    else if b > c \n        then return false\n  \
    \  else if b < c \n        then return false\n    else if b > c \n        then\
    \ return false\n    else if b < c \n        then return false\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return false\n    else if b < c \n        then return false\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return false\n    else if b < c \n        then return false\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return false\n    else if b < c \n        then return false\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return ", "    if a==b or a==c\
    \ or b==c then return false \n    else return true\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given the lengths of the three sides of a triangle. Return true if\
    \ the three\n    sides form a right-angled triangle, false otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if b == c || b == a || c == a \n       \
    \ true\n    else\n        false\nend\n</cell>\n<code language=julia-1.5>\n\"\"\
    \"\n    right_angle_triangles(a, b, c)\n    \n    Checks whether a triangle is\
    \ right angled or not\n    \n    Arguments\n    ---------\n    a: Int64\n    \
    \    Length of side 1\n    b: Int64\n        Length of side 2\n    c: Int64\n\
    \        Length of side 3\n    \n    Returns\n    -------\n    Bool\n        True\
    \ if triangle is right angled, False otherwise\n    \n    Example\n    -------\n\
    \    >>> right_angle_triangles(3, 4, 5)\n    true\n    >>> right_angle_triangles(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a==0 || b==0 || c==0 \n    then return\
    \ false \n    else \n        if a>b and a>c \n        then return true \n    \
    \    else if b>a and b>c \n        then return true \n        else if c>a and\
    \ c>b \n        then return true \n        else return false \n    end\nend\n\
    </cell>\n<code language=julia-1.5>\n\"\"\"\n    Given the lengths of the three\
    \ sides of a triangle. Return true if the three\n    sides form a right-angled\
    \ triangle, false otherwise.\n    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3,\
    \ 4, 5)\n    true\n    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"",
  "    if a==b or a==c or b==c then return true else return false\nend\n\"\"\"\n \
    \   Given the lengths of the three sides of a triangle. Return true if the three\n\
    \    sides form a right-angled triangle, false otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a > b and a > c \n        then true\n\
    \        else false\n    end\nend\n\"\"\"\n    Given the lengths of the three\
    \ sides of a triangle. Return true if the three\n    sides form a right-angled\
    \ triangle, false otherwise.\n    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3,\
    \ 4, 5)\n    true\n    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"",
  "    if a==b or a==c or b==c then return true\n    else return false\nend\n</cell>\n\
    <code language=julia-1.5>\n\"\"\"\n    Given the lengths of the three sides of\
    \ a triangle. Return true if the three\n    sides form a right-angled triangle,\
    \ false otherwise.\n    A right-angled triangle is a triangle in which one angle\
    \ is right angle or \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3,\
    \ 4, 5)\n    true\n    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"",
  "    if a==b or a==c or b==c \n        true \n    else \n        false\n    end\n\
    end\n</cell>\n<code language=julia-1.0>\n\"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return true if the three\n    sides form a right-angled\
    \ triangle, false otherwise.\n    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3,\
    \ 4, 5)\n    true\n    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"",
  "    if a==0 || b==0 || c==0 \n        then return false\n    else if a>b+c \n \
    \       then return false\n    else if b>a+c \n        then return false\n   \
    \ else if c>a+b \n        then return false\n    else return true\nend\n</code>\n\
    <|/ a tags=julia |>\n<| c |>\nThis does not answer the question. The question\
    \ asks how to determine if a triangle is right-angled, not whether it is right\
    \ angled.\n<|/ c |>\n<| c |>\nThis answer is correct, although I believe it can\
    \ be simplified a bit. `return a==0 || b==0 || c==0 || a>b+c || b>a+c || c>a+b`\n\
    <|/ c |>\n<| c |>\nThis answer does not answer the question. The question asks\
    \ how to determine if a triangle is right-angled, not whether it is right angled.\n\
    <|/ c |>\n<| c |>\nThe question asks how to determine if a triangle is right-angled,\
    \ not whether it is right angled.\n<|/ c |>\n<| c |>\nThe question asks how to\
    \ determine if a triangle is right-angled, not whether it is right angled.\n<|/\
    \ c |>\n<| a tags=julia |>\n<code>", "    if a == 0 || b == 0 || c == 0 \n   \
    \     then return false\n    else if b > a && b > c \n        then return true\n\
    \    else if c > a && c > b \n        then return true\n    else if b == c \n\
    \        then return true\n    else if b > c \n        then return false\n   \
    \ else if c > b \n        then return false\n    else \n        right_angle_triangle(a-1,\
    \ b, c) || right_angle_triangle(a, b-1, c) || right_angle_triangle(a, b, c-1)\n\
    end\n\"\"\"\n    Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n    sides form a right-angled triangle, false otherwise.\n   \
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    \    90 degree.\n    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n\
    \    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"", "    if a==0 ||\
    \ b==0 || c==0 \n        true\n    elseif a==b || b==c || c==a \n        true\n\
    \    elseif a==c || b==a || c==b \n        true\n    elseif a==b+c || b==a+c ||\
    \ c==b+a \n        true\n    elseif a==b+c || b==a+c || c==b+a \n        true\n\
    \    elseif a==b+c || b==a+c || c==b+a \n        true\n    elseif a==b+c || b==a+c\
    \ || c==b+a \n        true\n    elseif a==b+c || b==a+c || c==b+a \n        true\n\
    \    elseif a==b+c || b==a+c || c==b+a \n        true\n    elseif a==b+c || b==a+c\
    \ || c==b+a \n        true\n    elseif a==b+c || b==a+c || c==b+a \n        true\n\
    \    elseif a==b+c || b==a+c || c==b+a \n        true\n    elseif a==b+c || b==a+c\
    \ || c==b+a \n        true\n    elseif a==b+c || b==a+c || c==b+a \n        true\n\
    \    elseif a==b+c || b==a+c || c==b+a \n        true\n    elseif a==b+c || b==a+c\
    \ || c==b+a \n        true\n    elseif a==b+c || b==a+c || c==b+a \n        true\n\
    \    elseif a==b+c || b==a+c || c==b+a \n        true\n    elseif a==b+c || b==a+c\
    \ || c==b+a \n        true\n    elseif a==b+c || b==a+c || c==b+a \n        true\n\
    \    elseif a==b+c || b==a+c || c==b+a \n        true\n    elseif a==b+c || b==a+c\
    \ || c==b+a \n        true\n    elseif a==b+c || b==a+c || c==b+a \n        true\n\
    \    elseif a==b+c || b==a+c || c==b+a \n        true\n    elseif ", "    if a==b\
    \ or a==c or b==c then return true\n    else return false\nend", "    if a > b\
    \ and a > c \n        then true\n        else false\n    end\nend\n\"\"\"\n  \
    \  Given the lengths of the three sides of a triangle. Return true if the three\n\
    \    sides form a right-angled triangle, false otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a > b and a > c \n        then return\
    \ true\n    else if b > c \n        then return false\n    else if c > a \n  \
    \      then return false\n    else return true\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    right_angle_triangles(a, b, c)\n    Given the lengths of the three\
    \ sides of a triangle. Return true if the three\n    sides form a right-angled\
    \ triangle, false otherwise.\n    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n    90 degree.\n    Example:\n    >>> right_angle_triangles(3,\
    \ 4, 5)\n    true\n    >>> right_angle_triangles(1, 2, 3)\n    false\n    \"\"\
    \"", "    if a==b or a==c or b==c \n        then return true\n    else \n    \
    \    then return false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\"\"\
    \"\n    Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n    sides form a right-angled triangle, false otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if b == c \n        then return true\n \
    \   else if b > c \n        then return false\n    else \n        right_angle_triangle(a\
    \ - 1, b, c) || right_angle_triangle(a, b - 1, c) || right_angle_triangle(a, b,\
    \ c-1)\nend\n</cell>\n<code language=julia-1.5>\nright_angle_triangle(3, 4, 5)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that determines if a triangle is\
    \ equilateral or not.\nA triangle is equilateral if all three sides are equal,\
    \ i.e. the area of the triangle is equal to $\\frac{3}{2}$.\nExample: \n$$\n\\\
    begin{align}\n\\text{Equilateral}\n\\begin{pmatrix}\n    3 & 4 & 5 \\\n    1 &\
    \ 2 & 3 \\\n    1 & 2 & 3\n\\end{pmatrix}\n\\end{align}\n$$\n$$\n\\begin{align}\n\
    \\text{Not Equilateral}\n\\begin{pmatrix}\n    3 & 4 & 5 \\\n    1 & 2 & 3 \\\n\
    \    1 & 2 & 4\n\\end{pmatrix}\n\\end{align}\n$$", "    if a > b and a > c \n\
    \        then return true\n    else if b > c \n        then return false\n   \
    \ else if c > a \n        then return false\n    else return true\nend\n</cell>\n\
    <code language=julia-1.3>\n\"\"\"\n    Given the lengths of the three sides of\
    \ a triangle. Return true if the three\n    sides form a right-angled triangle,\
    \ false otherwise.\n    A right-angled triangle is a triangle in which one angle\
    \ is right angle or \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3,\
    \ 4, 5)\n    true\n    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"",
  "    if a==b or a==c or b==c then return true\n    else return false\nend", "  \
    \  if a > b and a > c \n    then return true\n    else if b > c \n    then return\
    \ false\n    else return false\n    end\nend\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\n    Given the lengths of the three sides of a triangle. Return true if\
    \ the three\n    sides form a right-angled triangle, false otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a == 0 || b == 0 || c == 0 \n       \
    \ then return false\n    else \n        if b > c \n            then return false\n\
    \        else if b < c \n            then return true\n        else if b == c\
    \ \n            then return true\n        else if b > c \n            then return\
    \ true\n        else return false\n    end\nend\n\"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return true if the three\n    sides form a\
    \ right-angled triangle, false otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    false\n    \"\"\"", "    if a == 0 || b == 0 || c == 0 \n    then return\
    \ false\n    else if b > a && b > c \n    then return true\n    else if c > a\
    \ && c > b \n    then return true\n    else if b == c \n    then return true\n\
    \    else if b > a && c > a \n    then return true\n    else if c > a && b > a\
    \ \n    then return true\n    else return false\nend\n</code>\n<|/ a tags=julia\
    \ |>\n<| c |>\nThis does not answer the question. OP wants to know if all three\
    \ sides are equal, not if they are all equal in some direction.\n<|/ c |>\n<|\
    \ c |>\nI believe this does answer the question. OP wants to know if all three\
    \ sides are equal, not if they are all equal in some direction.\n<|/ c |>\n<|\
    \ c |>\nThis does not answer the question. OP wants to know if all three sides\
    \ are equal, not if they are all equal in some direction.\n<|/ c |>\n<| c |>\n\
    This does not answer the question. OP wants to know if all three sides are equal,\
    \ not if they are all equal in some direction.\n<|/ c |>\n<| a tags=julia |>\n\
    <code>", "    if a==b and b==c then return true\n    if a==c then return false\n\
    \    if b==c then return false\n    if a==b then return false\n    if a==c then\
    \ return true\n    if b==c then return true\n    if a==b then return false\n \
    \   if a==c then return true\n    if b==c then return true\n    if a==b then return\
    \ true\n    if a==c then return false\n    if b==c then return true\n    if a==b\
    \ then return true\n    if a==c then return true\n    if b==c then return false\n\
    \    return false\nend\n\"\"\"\n    Given the lengths of the three sides of a\
    \ triangle. Return true if the three\n    sides form a right-angled triangle,\
    \ false otherwise.\n    A right-angled triangle is a triangle in which one angle\
    \ is right angle or \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3,\
    \ 4, 5)\n    true\n    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"",
  "    if a < b and a < c \n        && b < c \n        && c < a \n        && b > a\
    \ \n        && c > b \n        && c > a \n        && a > c \n        && b > c\
    \ \n        && a > b \n        && c > a \n        && a > c \n        && b > a\
    \ \n        && c > b \n        && b > c \n        && a > b \n        && c > a\
    \ \n        && b > a \n        && c > c \n        && a > c \n        && b > a\
    \ \n        && c > b \n        && b > c \n        && a > c \n        && c > a\
    \ \n        && b > a \n        && c > c \n        && a > b \n        && c > a\
    \ \n        && b > a \n        && c > c \n        && a > c \n        && b > a\
    \ \n        && c > b \n        && b > c \n        && a > c \n        && c > a\
    \ \n        && b > a \n        && c > c \n        && a > b \n        && c > a\
    \ \n        && b > a \n        && c > c \n        && a > c \n        && b > a\
    \ \n        && c > b \n        && b > c \n        && a > c \n        && c > a\
    \ \n        && b > a \n        && c > c \n        && a > b \n        && c > a\
    \ \n        && b > a \n        && c > c \n        && a > b \n        && c > a\
    \ \n        && b > a \n        && c > c \n        && a > c \n        && b > a\
    \ \n        && c > b \n        && b > c \n        && a > c \n        && c > a\
    \ \n        && b > a \n        && c > c \n        && a > b \n        && c > a\
    \ \n        && b > a \n        && c > c \n        && a > c \n        && b > a\
    \ \n        && c > b \n        && b > c \n        && a > c \n        && c > a\
    \ \n        && b > a \n        && c > c \n        && a > b \n        && c > a\
    \ \n        && b > a \n        && c > c \n        && a > c \n        && b > a\
    \ \n        && c > b ", "    if a==b or a==c or b==c \n        true\n    else\n\
    \        false\n    end\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\n   \
    \ Given the lengths of the three sides of a triangle. Return true if the three\n\
    \    sides form a right-angled triangle, false otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a > b and a > c then return true\n  \
    \  if b > c and b > a then return true\n    if c > a and c > b then return true\n\
    \    return false\nend\n\"\"\"\n    Given the lengths of the three sides of a\
    \ triangle. Return true if the three\n    sides form a right-angled triangle,\
    \ false otherwise.\n    A right-angled triangle is a triangle in which one angle\
    \ is right angle or \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3,\
    \ 4, 5)\n    true\n    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"",
  "    if a > b and a > c \n        then return true\n    else if b > c \n       \
    \ then return false\n    else if c > a \n        then return false\n    else return\
    \ true\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return true if the three\n    sides form a\
    \ right-angled triangle, false otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    false\n    \"\"\"", "    if a==0 || b==0 || c==0 \n        then return\
    \ false\n    else \n        if a>b && b>c \n            then return true\n   \
    \     else if a>b && c>b \n            then return false\n        else if a>c\
    \ && b>c \n            then return false\n        else if a>c && c>b \n      \
    \      then return true\n        else if b>c && c>a \n            then return\
    \ true\n        else if b>c && b>a \n            then return false\n        else\
    \ if c>a && b>a \n            then return false\n        else if c>a && a>b \n\
    \            then return true\n        else return false\n    end\nend\n\"\"\"\
    \n    Given the lengths of the three sides of a triangle. Return true if the three\n\
    \    sides form a right-angled triangle, false otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a > b and a > c \n    then true\n   \
    \ else if b > c \n    then true\n    else false\nend\n</code>\n<|/ a tags=julia,if-statement\
    \ |>\n<| a tags=julia,if-statement |>\n<code>", "    if a == b and a == c \n \
    \   then return true\n    else if b == c \n    then return true\n    else if c\
    \ == a \n    then return true\n    else return false\nend\n\"\"\"\n    Given the\
    \ lengths of the three sides of a triangle. Return true if the three\n    sides\
    \ form a right-angled triangle, false otherwise.\n    A right-angled triangle\
    \ is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n\
    \    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a==b and b==c then return true\n    else\
    \ if a==c then return false\n    else if b==c then return false\n    else if a==b\
    \ then return false\n    else return true\nend\n</cell>\n<code language=julia-1.1>\n\
    \"\"\"\n    Given the lengths of the three sides of a triangle. Return true if\
    \ the three\n    sides form a right-angled triangle, false otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a > b and a > c \n    then \n       \
    \ true\n    elseif b > c \n    then \n        true\n    elseif c > a \n    then\
    \ \n        true\n    else\n        false\n    end\nend\n</code>\n<|/ a tags=julia\
    \ |>\n<| c |>\nThis doesn't work for me. `right_angle_triangle(3, 4, 5)` returns\
    \ `false` instead of `true`.\n<|/ c |>\n<| c |>\nI edited the answer to fix the\
    \ typo.\n<|/ c |>\n<| a |>\n<code>", "    if a > b and a > c \n    then return\
    \ true\n    else if b > c and b > a \n    then return true\n    else if c > a\
    \ and c > b \n    then return true\n    else return false\nend\n</cell>\n<code\
    \ language=julia-1.5>\n\"\"\"\n    Given the lengths of the three sides of a triangle.\
    \ Return true if the three\n    sides form a right-angled triangle, false otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n\
    \    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"", "    if a==b or\
    \ a==c or b==c \n        then return true\n    else \n        return false\n \
    \   end\nend\n</cell>\n<code language=julia-1.4>\n\"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return true if the three\n    sides form a\
    \ right-angled triangle, false otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    false\n    \"\"\"", "    if a == b or a == c or b == c \n        then\
    \ return true\n    else \n        then return false\nend\n</code>\n<|/ a tags=julia\
    \ |>\n<| c |>\nThis doesn't work for me. `right_angle_triangle(3, 4, 5)` returns\
    \ `true` instead of `false`.\n<|/ c |>\n<| c |>\nI tested it and it works. Maybe\
    \ you have a typo? `right_angle_triangle(3, 4, 5)` returns `false`\n<|/ c |>\n\
    <| c |>\nI tested it again and it works. Maybe you have a typo? `right_angle_triangle(3,\
    \ 4, 5)` returns `false`\n<|/ c |>\n<| c |>\nI tested it again and it works. Maybe\
    \ you have a typo? `right_angle_triangle(3, 4, 5)` returns `false`\n<|/ c |>\n\
    <| c |>\nI tested it again and it works. Maybe you have a typo? `right_angle_triangle(3,\
    \ 4, 5)` returns `false`\n<|/ c |>\n<| a dscore=1 |>\n<code>", "    if a==b and\
    \ b==c then return true\n    if a==c then return false\n    if b==c then return\
    \ false\n    if a==b or b==c then return false\n    return true\nend\n</cell>\n\
    <code language=julia-1.0>\n\"\"\"\n    Given the lengths of the three sides of\
    \ a triangle. Return true if the three\n    sides form a right-angled triangle,\
    \ false otherwise.\n    A right-angled triangle is a triangle in which one angle\
    \ is right angle or \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3,\
    \ 4, 5)\n    true\n    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"",
  "    if a > b and a > c \n        then return true\n    else if b > c \n       \
    \ then return true\n    else if c > a \n        then return true\n    else return\
    \ false\nend\n</code>\n<|/ a tags=julia,if-statement |>\n<| c |>\nThanks for your\
    \ answer. Your code works, but I prefer to use `if` statements because I find\
    \ them easier to read and understand.\n<|/ c |>\n<| c |>\nI agree, `if` statements\
    \ are easier to read and understand. Just wanted to point out that you can also\
    \ use ternary operators in Julia to achieve the same result. `return (a > b) ?\
    \ true : (a > c) ? true : (a > a) ? true : false`\n<|/ c |>\n<| c |>\nI agree\
    \ that `if` statements are easier to read and understand, but I find them harder\
    \ to read and understand when they contain many conditions. I prefer to use `if`\
    \ statements because I find them easier to read and understand.\n<|/ c |>\n<|\
    \ c |>\nI agree that `if` statements are easier to read and understand, but I\
    \ find them harder to read and understand when they contain many conditions. I\
    \ prefer to use `if` statements because I find them easier to read and understand.\n\
    <|/ c |>\n<| c |>\nI agree that `if` statements are easier to read and understand,\
    \ but I find them harder to read and understand when they contain many conditions.\
    \ I prefer to use `if` statements because I find them easier to read and understand.\n\
    <|/ c |>\n<| a tags=julia,if-statement |>\nI agree with that using if statements\
    \ is easier to read and understand, but I find them harder to read and understand\
    \ when they contain many conditions. I prefer to use if statements because I find\
    \ them easier to read and understand.", "    if a > b and a > c then return true\n\
    \    if b > c and b > a then return true\n    if c > a and c > b then return true\n\
    \    return false\nend\n\"\"\"\n    Given the lengths of the three sides of a\
    \ triangle. Return true if the three\n    sides form a right-angled triangle,\
    \ false otherwise.\n    A right-angled triangle is a triangle in which one angle\
    \ is right angle or \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3,\
    \ 4, 5)\n    true\n    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"",
  "    if b == c \n        then return true\n    else if b > c \n        then return\
    \ false\n    else if b < c \n        then return false\n    else if b == c \n\
    \        then return true\n    else if b > c \n        then return false\n   \
    \ else if b < c \n        then return false\n    else if b > c \n        then\
    \ return false\n    else if b < c \n        then return false\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return false\n    else if b < c \n        then return false\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return false\n    else if b < c \n        then return false\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return false\n    else if b < c \n        then return false\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return ", "    if a == 0 || b\
    \ == 0 || c == 0 \n        true\n    else\n        if b > a && c > a \n      \
    \      right_angle_triangle(b, c, a) \n        else\n            if c > b \n \
    \               right_angle_triangle(b, c, a) \n            else\n           \
    \     if b > c \n                    right_angle_triangle(b, c, a) \n        \
    \        else\n                    false\n    end\nend\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\n    Given the lengths of the three sides of a triangle. Return true if\
    \ the three\n    sides form a right-angled triangle, false otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a > b and a > c then return true\n  \
    \  if b > c and b > a then return true\n    if c > a and c > b then return true\n\
    \    return false\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\n    right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool\n    Determine if a triangle is right angled or not\n\
    \    \n    Arguments:\n    a -- length of side a\n    b -- length of side b\n\
    \    c -- length of side c\n    \n    Returns:\n    true if the triangle is right\
    \ angled, false otherwise\n    \n    Example:\n    >>> right_angle_triangle(3,\
    \ 4, 5)\n    true\n    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"",
  "    if a > b and a > c then \n        if b > c then \n            true\n      \
    \  else \n            false\n    else \n        if b > c then \n            false\n\
    \        else \n            true\nend\n</cell>\n<code language=julia-1.5>\n\"\"\
    \"\n    Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n    sides form a right-angled triangle, false otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a==b or a==c or b==c \n        then return\
    \ true\n    else \n        return false\nend\n</cell>\n<code language=julia-1.1>\n\
    \"\"\"\n    Given the lengths of the three sides of a triangle. Return true if\
    \ the three\n    sides form a right-angled triangle, false otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a == 0 || b == 0 || c == 0 \n    then\
    \ return false \n    else if a + b > c \n    then return true \n    else if b\
    \ + c > a \n    then return true \n    else if c + a > b \n    then return true\
    \ \n    else return false \nend\n</code>\n<|/ a dscore=0 |>\n<| a tags=julia |>\n\
    <code>", "    if a==b and b==c then return true\n    else if a==c then return\
    \ false\n    else if b==c then return false\n    else if a==b then return false\n\
    \    else if a==c then return true\n    else if b==c then return true\n    else\
    \ return false\nend\n\"\"\"\n    Given the lengths of the three sides of a triangle.\
    \ Return true if the three\n    sides form a right-angled triangle, false otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n\
    \    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"", "    if a > b\
    \ and a > c \n        then return true\n    else if b > c \n        then return\
    \ false\n    else if c > a \n        then return false\n    else return true\n\
    end\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return true if the three\n    sides form a right-angled\
    \ triangle, false otherwise.\n    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3,\
    \ 4, 5)\n    true\n    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"",
  "    if a == 0 || b == 0 || c == 0 \n        then return false\n    else if b >\
    \ a && c > b \n        then return true\n    else if b > a && c < b \n       \
    \ then return false\n    else if b < a && c > b \n        then return false\n\
    \    else if b < a && c < b \n        then return true\n    else return false\n\
    end\n</code>\n<|/ a tags=julia |>\n<| a dscore=2 |>\n<code>", "    if a==b and\
    \ b==c then return true else return false \n    else if a==c then return true\
    \ else return false \n    else if b==c then return true else return false \n \
    \   else return false \nend\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ checks if a triangle is equilateral or not.\nExample: \n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(1, 2, 3)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(1, 2, 3)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(1, 2, 3)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(1, 2, 3)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(1, 2, 3)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(1, 2, 3)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(1, 2, 3)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(1, 2, 3)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(1, 2, 3)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(1, 2, 3)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(1, 2, 3)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(1, 2, 3)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(1, 2, 3)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(1, 2, 3)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(1, 2, 3)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(1, 2, 3)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(1, 2, 3)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(1, 2, 3)\nfalse\n>>> equilateral_triangle(3,\
    \ 4, 5)\ntrue\n>>> equilateral_triangle(1, 2, 3)\nfalse", "    if a > b and a\
    \ > c \n    then return true\n    else if b > c \n    then return false\n    else\
    \ return false\n    end\nend\n</cell>\n<code language=julia-1.0>\n\"\"\"\n   \
    \ Given the lengths of the three sides of a triangle. Return true if the three\n\
    \    sides form a right-angled triangle, false otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"", "    if a == b or a == c or b == c then return\
    \ true\n    else return false\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\
    \n    right_angle_triangle(triangle::Triangle, side::Int64)\n    Given the lengths\
    \ of the three sides of a triangle. Return true if the three\n    sides form a\
    \ right-angled triangle, false otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    false\n    \"\"\"", "    if a > b and a > c \n    then return true\n\
    \    else if b > c \n    then return false\n    else return true\nend\n</cell>\n\
    <code language=julia-1.5>\n\"\"\"\n    right_angle_triangle(a::Int64, b::Int64,\
    \ c::Int64)::Bool\n    Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    sides form a right-angled triangle, false otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n\
    \    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"", "    if a == 0\
    \ || b == 0 || c == 0 \n    then return true\n    else if b > a && b > c \n  \
    \  then return false\n    else if c > a && c > b \n    then return false\n   \
    \ else if b == c \n    then return true\n    else if b > c \n    then return false\n\
    \    else if c > b \n    then return false\n    else return true\n    end\nend\n\
    \"\"\"\n    Given the lengths of the three sides of a triangle. Return true if\
    \ the three\n    sides form a right-angled triangle, false otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\""]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

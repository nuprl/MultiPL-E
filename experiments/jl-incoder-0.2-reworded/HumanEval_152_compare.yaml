name: HumanEval_152_compare
language: jl
prompt: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
  \    event is finally known. The feelings and thoughts you have at that moment are\n\
  \    definitely worth noting down and comparing.\n    Your task is to determine\
  \ if a person correctly guessed the results of a number of matches.\n    You are\
  \ given two vectors of scores and guesses of equal length, where each index shows\
  \ a match. \n    Return a vector of the same length denoting how far off each guess\
  \ was. If they have guessed correctly,\n    the value is 0, and if not, the value\
  \ is the absolute difference between the guess and the score.\n    \n    \n    example:\n\
  \n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3,\
  \ 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0,\
  \ 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
  \ \n"
tests: "using Test\n\n@testset begin\n\ncandidate = compare;\n\t@test(candidate([1,\
  \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0,\
  \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1,\
  \ 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2, 3,\
  \ 4]) == [2, 0, 0, 1])\nend\n"
completions: ["    guess = sort(guess)\n    game = sort(game)\n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n", " \
    \   \n    guess = sort(guess)\n    game = sort(game)\n    \n    diff = zeros(length(guess),\
    \ 1)\n    \n    for i = 1:length(guess)\n        diff[i] = abs(guess[i] - game[i])\n\
    \    end\n    \n    return diff\nend\n</cell>\n<code language=julia-1.5>\n@test\
    \ compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n</cell>\n<code language=julia-1.5>\n\
    @test compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n</cell>\n<text>\nExercise:\
    \ Write a function that will take a vector of scores and a vector of guesses and\
    \ return the vector of differences between the guesses and the scores. \nThe function\
    \ should take two vectors of equal length and return an array of differences between\
    \ the guesses and the scores.", "    \n    \n    \n    \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n", "    \n    guess = sort(guess)\n    game = sort(game)\n    \n\
    \    diff = zeros(length(guess))\n    \n    for i = 1:length(guess)\n        if\
    \ guess[i] == game[i]\n            diff[i] = 0\n        else\n            diff[i]\
    \ = abs(guess[i] - game[i])\n        end\n    end\n    \n    return diff\nend\n\
    </cell>\n<code language=julia-1.5>\n@time compare([1,2,3,4,5,1], [1,2,3,4,2,-2])\n\
    </cell>\n<code language=julia-1.5>\n@time compare([0,5,0,0,0,4], [4,1,1,0,0,-2])\n\
    </cell>\n<text>\nExercise\nWrite a function that returns the number of matches\
    \ between two vectors of equal length. \nThe function should take two vectors\
    \ of equal length as arguments and return a vector of the same length as the first\
    \ argument denoting the number of matches.\nThe function should return 0 if the\
    \ two vectors are of different lengths.", "    \n    guesses = zeros(length(guess),\
    \ 1)\n    scores = zeros(length(game), 1)\n    \n    for i = 1:length(guess)\n\
    \        guesses[i] = guess[i]\n        scores[i] = game[i]\n    end\n    \n \
    \   guesses = sort(guesses)\n    scores = sort(scores)\n    \n    guesses = guesses[2:end]\n\
    \    scores = scores[2:end]\n    \n    guesses = guesses[guesses > 0]\n    scores\
    \ = scores[guesses > 0]\n    \n    guesses = guesses[guesses < length(game)]\n\
    \    scores = scores[guesses < length(game)]\n    \n    guesses = guesses[guesses\
    \ == length(game)]\n    scores = scores[guesses == length(game)]\n    \n    guesses\
    \ = guesses[guesses != 0]\n    scores = scores[guesses != 0]\n    \n    guesses\
    \ = guesses[guesses > 0]\n    scores = scores[guesses > 0]\n    \n    guesses\
    \ = guesses[guesses < length(game)]\n    scores = scores[guesses < length(game)]\n\
    \    \n    guesses = guesses[guesses == length(game)]\n    scores = scores[guesses\
    \ == length(game)]\n    \n    guesses = guesses[guesses != 0]\n    scores = scores[guesses\
    \ != 0]\n    \n    guesses = guesses[guesses > 0]\n    scores = scores[guesses\
    \ > 0]\n    \n    guesses = guesses[guesses < length(game)]\n    scores = scores[guesses\
    \ < length(game)]\n    \n    guesses = guesses[guesses == length(game)]\n    scores\
    \ = scores[guesses == length(game)]\n    \n    guesses = guesses[guesses != 0]\n\
    \    scores = scores[guesses != 0]\n    \n    guesses = guesses[guesses > 0]\n\
    \    scores = scores[guesses > 0]\n    \n    guesses = guesses[guesses < length(game)]\n\
    \    scores = scores[guesses < length(game)]\n    \n    guesses = guesses[guesses\
    \ == length(game)]\n    scores = scores[guesses == length(game)]\n    \n    guesses\
    \ = guesses[guesses != 0]\n    scores = scores[guesses != 0]\n    \n    guesses\
    \ = guesses[guesses > 0]\n    scores = scores[guesses > 0]\n    \n    guesses\
    \ = guesses[guesses < length(game)]\n    scores = scores[guesses < length(game)]\n\
    \    \n    ", "    \n    guesses = zeros(length(guess), length(game))\n    \n\
    \    for i = 1:length(guess)\n        guesses[i, :] = guess[i] - game\n    end\n\
    \    \n    guesses = guesses./sum(guesses, dims = 2)\n    \n    diff = zeros(length(guess))\n\
    \    \n    for i = 1:length(guess)\n        diff[i] = abs(guesses[i] - game[i])\n\
    \    end\n    \n    return diff\nend\n</cell>\n<code language=julia-1.5>\n@time\
    \ compare([1,2,3,4,5,1], [1,2,3,4,2,-2])\n</cell>\n<code language=julia-1.5>\n\
    @time compare([0,5,0,0,0,4], [4,1,1,0,0,-2])\n</cell>\n<code language=julia-1.5>\n\
    @time compare([1,2,3,4,5,1], [1,2,3,4,2,-2])\n</cell>\n<code language=julia-1.5>\n\
    @time compare([0,5,0,0,0,4], [4,1,1,0,0,-2])\n</cell>\n<code language=julia-1.5>\n\
    @time compare([1,2,3,4,5,1], [1,2,3,4,2,-2])\n</cell>\n<code language=julia-1.5>\n\
    @time compare([0,5,0,0,0,4], [4,1,1,0,0,-2])\n</cell>\n<code language=julia-1.5>\n\
    @time compare([1,2,3,4,5,1], [1,2,3,4,2,-2])\n</cell>\n<code language=julia-1.5>\n\
    @time compare([0,5,0,0,0,4], [4,1,1,0,0,-2])\n</cell>\n<code language=julia-1.5>\n\
    @time compare([1,2,3,4,5,1], [1,2,3,4,2,-2])\n</cell>\n<code language=julia-1.5>\n\
    @time compare([0,5,0,0,0,4], [4,1,1,0,0,-2])\n</cell>\n<code language=julia-1.5>\n\
    @time compare([1,2,3,4,5,1], [1,2,3,4,2,-2])\n</cell>\n<code language=julia-1.5>\n\
    @time compare([0,5,0,0,0,4], [4,1,1,0,0,-2])\n</cell>\n<code language=julia-1.5>\n\
    @time compare([1,2,3,4,5,1], [1,2,3,4,2,-2])\n</cell>\n<code language=julia-1.5>\n\
    @time compare([0,5,0,0,0,4], [4,1,1,0,0,-2])\n</cell>\n<code language=julia-1.5>\n\
    @time compare([1,2,3,4,5,1], [1,2,3,4,2,-2])\n</cell>\n<code language=julia-1.5>\n\
    @time compare([0,5,0,0,0,4], [4,1,1,0,0,-2])\n</cell>\n<code language=julia-1.5>\n\
    @time compare([1,2,3,4,5,1], [1,2,3,4,2,-2])\n</cell>\n<code language=juli", " \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    guess = sort(guess)\n\
    \    game = sort(game)\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n", "    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n", "    \n    guesses = zeros(length(guess), 1)\n    scores\
    \ = zeros(length(game), 1)\n    \n    for i = 1:length(guess)\n        guesses[i]\
    \ = guess[i]\n        scores[i] = game[i]\n    end\n    \n    guesses = sort(guesses)\n\
    \    scores = sort(scores)\n    \n    guesses = guesses[2:end]\n    scores = scores[2:end]\n\
    \    \n    guesses = guesses[guesses > 0]\n    scores = scores[guesses > 0]\n\
    \    \n    guesses = guesses[guesses < length(game)]\n    scores = scores[guesses\
    \ < length(game)]\n    \n    guesses = guesses[guesses == length(game)]\n    scores\
    \ = scores[guesses == length(game)]\n    \n    guesses = guesses[guesses > 0]\n\
    \    scores = scores[guesses > 0]\n    \n    guesses = guesses[guesses < length(game)]\n\
    \    scores = scores[guesses < length(game)]\n    \n    guesses = guesses[guesses\
    \ == length(game)]\n    scores = scores[guesses == length(game)]\n    \n    guesses\
    \ = guesses[guesses > 0]\n    scores = scores[guesses > 0]\n    \n    guesses\
    \ = guesses[guesses < length(game)]\n    scores = scores[guesses < length(game)]\n\
    \    \n    guesses = guesses[guesses == length(game)]\n    scores = scores[guesses\
    \ == length(game)]\n    \n    guesses = guesses[guesses > 0]\n    scores = scores[guesses\
    \ > 0]\n    \n    guesses = guesses[guesses < length(game)]\n    scores = scores[guesses\
    \ < length(game)]\n    \n    guesses = guesses[guesses == length(game)]\n    scores\
    \ = scores[guesses == length(game)]\n    \n    guesses = guesses[guesses > 0]\n\
    \    scores = scores[guesses > 0]\n    \n    guesses = guesses[guesses < length(game)]\n\
    \    scores = scores[guesses < length(game)]\n    \n    guesses = guesses[guesses\
    \ == length(game)]\n    scores = scores[guesses == length(game)]\n    \n    guesses\
    \ = guesses[guesses > 0]\n    scores = scores[guesses > 0]\n    \n    guesses\
    \ = guesses[guesses < length(game)]\n    scores = scores[guesses < length(game)]\n\
    \    \n    guesses = guesses[guesses == length(game)]\n    ", "    guesses = zeros(length(guess),\
    \ 1)\n    scores = zeros(length(game), 1)\n    for i = 1:length(guess)\n     \
    \   guesses[i] = guess[i]\n        scores[i] = game[i]\n    end\n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    ", "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \n\
    \    guesses = guess[:]\n    scores = game[:]\n    \n    guesses.sort()\n    scores.sort()\n\
    \    \n    guesses = guesses[2:end]\n    scores = scores[2:end]\n    \n    guesses\
    \ = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n    \n    guesses\
    \ = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n    \n    guesses\
    \ = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n    \n    guesses\
    \ = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n    \n    guesses\
    \ = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n    \n    guesses\
    \ = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n    \n    guesses\
    \ = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n    \n    guesses\
    \ = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n    \n    guesses\
    \ = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n    \n    guesses\
    \ = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n    \n    guesses\
    \ = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n    \n    guesses\
    \ = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n    \n    guesses\
    \ = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n    \n    guesses\
    \ = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n    \n    guesses\
    \ = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n    \n    guesses\
    \ = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n    \n    guesses\
    \ = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n    \n    guesses\
    \ = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n", "    guess\
    \ = sort(guess)\n    game = sort(game)\n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n", "    \n    guesses = zeros(length(guess),\
    \ 1)\n    scores = zeros(length(game), 1)\n    \n    for i = 1:length(guess)\n\
    \        guesses[i] = guess[i]\n        scores[i] = game[i]\n    end\n    \n \
    \   guesses = sort(guesses)\n    scores = sort(scores)\n    \n    guesses = guesses[2:end]\n\
    \    scores = scores[2:end]\n    \n    guesses = guesses[guesses > 0]\n    scores\
    \ = scores[guesses > 0]\n    \n    guesses = guesses[guesses < length(scores)]\n\
    \    scores = scores[guesses < length(scores)]\n    \n    guesses = guesses[guesses\
    \ == length(scores)]\n    scores = scores[guesses == length(scores)]\n    \n \
    \   guesses = guesses[guesses > 0]\n    scores = scores[guesses > 0]\n    \n \
    \   guesses = guesses[guesses < length(scores)]\n    scores = scores[guesses <\
    \ length(scores)]\n    \n    guesses = guesses[guesses == length(scores)]\n  \
    \  scores = scores[guesses == length(scores)]\n    \n    guesses = guesses[guesses\
    \ > 0]\n    scores = scores[guesses > 0]\n    \n    guesses = guesses[guesses\
    \ < length(scores)]\n    scores = scores[guesses < length(scores)]\n    \n   \
    \ guesses = guesses[guesses == length(scores)]\n    scores = scores[guesses ==\
    \ length(scores)]\n    \n    guesses = guesses[guesses > 0]\n    scores = scores[guesses\
    \ > 0]\n    \n    guesses = guesses[guesses < length(scores)]\n    scores = scores[guesses\
    \ < length(scores)]\n    \n    guesses = guesses[guesses == length(scores)]\n\
    \    scores = scores[guesses == length(scores)]\n    \n    guesses = guesses[guesses\
    \ > 0]\n    scores = scores[guesses > 0]\n    \n    guesses = guesses[guesses\
    \ < length(scores)]\n    scores = scores[guesses < length(scores)]\n    \n   \
    \ guesses = guesses[guesses == length(scores)]\n    scores = scores[guesses ==\
    \ length(scores)]\n    \n    guesses = guesses[guesses > 0]\n    scores = scores[guesses\
    \ > 0]\n    \n    guesses = guesses[guesses < length(scores)]\n    scores = scores[guesses\
    \ < length(scores)]\n    \n    guesses = guesses[guesses == length(scores)]\n\
    \    ", "    guesses = length(guess)\n    scores = length(game)\n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n",
  "    \n    guesses = zeros(length(guess), 1)\n    \n    for i = 1:length(guess)\n\
    \        guesses[i] = guess[i]\n    end\n    \n    scores = zeros(length(game),\
    \ length(guesses))\n    \n    for i = 1:length(game)\n        for j = 1:length(guesses)\n\
    \            scores[i, j] = abs(game[i] - guesses[j])\n        end\n    end\n\
    \    \n    return scores\nend\n</cell>\n<code language=julia-1.5>\n@time compare([1,2,3,4,5,1],\
    \ [1,2,3,4,2,-2])\n</cell>\n<text>\nExercise 3\nWrite a function that will take\
    \ in a vector of scores and a vector of guesses, and return a vector of the same\
    \ length denoting how far off each guess was. If they have guessed correctly,\
    \ the value is 0, and if not, the value is the absolute difference between the\
    \ guess and the score.", "    \n    \n    \n    \n    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n", "    \n    guesses = guess[:]\n    scores = game[:]\n    \n    guesses.sort!()\n\
    \    scores.sort!()\n    \n    guesses_sorted = guesses[:]\n    scores_sorted\
    \ = scores[:]\n    \n    guesses_sorted.sort!()\n    scores_sorted.sort!()\n \
    \   \n    guesses_sorted = guesses_sorted[guesses_sorted .!= 0]\n    scores_sorted\
    \ = scores_sorted[scores_sorted .!= 0]\n    \n    guesses_sorted = guesses_sorted[guesses_sorted\
    \ .!= 0]\n    scores_sorted = scores_sorted[scores_sorted .!= 0]\n    \n    guesses_sorted\
    \ = guesses_sorted[guesses_sorted .!= 0]\n    scores_sorted = scores_sorted[scores_sorted\
    \ .!= 0]\n    \n    guesses_sorted = guesses_sorted[guesses_sorted .!= 0]\n  \
    \  scores_sorted = scores_sorted[scores_sorted .!= 0]\n    \n    guesses_sorted\
    \ = guesses_sorted[guesses_sorted .!= 0]\n    scores_sorted = scores_sorted[scores_sorted\
    \ .!= 0]\n    \n    guesses_sorted = guesses_sorted[guesses_sorted .!= 0]\n  \
    \  scores_sorted = scores_sorted[scores_sorted .!= 0]\n    \n    guesses_sorted\
    \ = guesses_sorted[guesses_sorted .!= 0]\n    scores_sorted = scores_sorted[scores_sorted\
    \ .!= 0]\n    \n    guesses_sorted = guesses_sorted[guesses_sorted .!= 0]\n  \
    \  scores_sorted = scores_sorted[scores_sorted .!= 0]\n    \n    guesses_sorted\
    \ = guesses_sorted[guesses_sorted .!= 0]\n    scores_sorted = scores_sorted[scores_sorted\
    \ .!= 0]\n    \n    guesses_sorted = guesses_sorted[guesses_sorted .!= 0]\n  \
    \  scores_sorted = scores_sorted[scores_sorted .!= 0]\n    \n    guesses_sorted\
    \ = guesses_sorted[guesses_sorted .!= 0]\n    scores_sorted = scores_sorted[scores_sorted\
    \ .!= 0]\n    \n    guesses_sorted = guesses_sorted[guesses_sorted .!= 0]\n  \
    \  scores_sorted = scores_sorted[scores_sorted .!= 0]\n    \n    guesses_sorted\
    \ = guesses_sorted[guesses_sorted .!= 0]\n    scores_sorted = scores_sorted[scores_sorted\
    \ .!= 0]"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

name: HumanEval_152_compare
language: jl
prompt: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
  \    event is finally known. The feelings and thoughts you have at that moment are\n\
  \    definitely worth noting down and comparing.\n    Your task is to determine\
  \ if a person correctly guessed the results of a number of matches.\n    You are\
  \ given two vectors of scores and guesses of equal length, where each index shows\
  \ a match. \n    Return a vector of the same length denoting how far off each guess\
  \ was. If they have guessed correctly,\n    the value is 0, and if not, the value\
  \ is the absolute difference between the guess and the score.\n    \n    \n    example:\n\
  \n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3,\
  \ 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0,\
  \ 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
  \ \n"
tests: "using Test\n\n@testset begin\n\ncandidate = compare;\n\t@test(candidate([1,\
  \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0,\
  \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1,\
  \ 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2, 3,\
  \ 4]) == [2, 0, 0, 1])\nend\n"
completions: ["    guess = sort(guess)\n    game = sort(game)\n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n", " \
    \   \n    guess = sort(guess)\n    game = sort(game)\n    \n    diff = zeros(length(guess),\
    \ 1)\n    \n    for i = 1:length(guess)\n        diff[i] = abs(guess[i] - game[i])\n\
    \    end\n    \n    return diff\nend\n</cell>\n<code language=julia-1.5>\n@test\
    \ compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n</cell>\n<code language=julia-1.5>\n\
    @test compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n</cell>\n<text>\nExercise:\
    \ Write a function that will take a vector of scores and a vector of guesses and\
    \ return the vector of differences between the guesses and the scores. \nThe function\
    \ should take two vectors of equal length and return an array of differences between\
    \ the guesses and the scores.", "    \n    \n    \n    \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n", "    \n    guess = sort(guess)\n    game = sort(game)\n    \n\
    \    diff = zeros(length(guess))\n    \n    for i = 1:length(guess)\n        if\
    \ guess[i] == game[i]\n            diff[i] = 0\n        else\n            diff[i]\
    \ = abs(guess[i] - game[i])\n        end\n    end\n    \n    return diff\nend\n\
    </cell>\n<code language=julia-1.5>\n@time compare([1,2,3,4,5,1], [1,2,3,4,2,-2])\n\
    </cell>\n<code language=julia-1.5>\n@time compare([0,5,0,0,0,4], [4,1,1,0,0,-2])\n\
    </cell>\n<text>\nExercise\nWrite a function that returns the number of matches\
    \ between two vectors of equal length. \nThe function should take two vectors\
    \ of equal length as arguments and return a vector of the same length as the first\
    \ argument denoting the number of matches.\nThe function should return 0 if the\
    \ two vectors are of different lengths.", "    \n    guesses = zeros(length(guess),\
    \ 1)\n    scores = zeros(length(game), 1)\n    \n    for i = 1:length(guess)\n\
    \        guesses[i] = guess[i]\n        scores[i] = game[i]\n    end\n    \n \
    \   guesses = sort(guesses)\n    scores = sort(scores)\n    \n    guesses = guesses[2:end]\n\
    \    scores = scores[2:end]\n    \n    guesses = guesses[guesses > 0]\n    scores\
    \ = scores[guesses > 0]\n    \n    guesses = guesses[guesses < length(game)]\n\
    \    scores = scores[guesses < length(game)]\n    \n    guesses = guesses[guesses\
    \ == length(game)]\n    scores = scores[guesses == length(game)]\n    \n    guesses\
    \ = guesses[guesses != 0]\n    scores = scores[guesses != 0]\n    \n    guesses\
    \ = guesses[guesses > 0]\n    scores = scores[guesses > 0]\n    \n    guesses\
    \ = guesses[guesses < length(game)]\n    scores = scores[guesses < length(game)]\n\
    \    \n    guesses = guesses[guesses == length(game)]\n    scores = scores[guesses\
    \ == length(game)]\n    \n    guesses = guesses[guesses != 0]\n    scores = scores[guesses\
    \ != 0]\n    \n    guesses = guesses[guesses > 0]\n    scores = scores[guesses\
    \ > 0]\n    \n    guesses = guesses[guesses < length(game)]\n    scores = scores[guesses\
    \ < length(game)]\n    \n    guesses = guesses[guesses == length(game)]\n    scores\
    \ = scores[guesses == length(game)]\n    \n    guesses = guesses[guesses != 0]\n\
    \    scores = scores[guesses != 0]\n    \n    guesses = guesses[guesses > 0]\n\
    \    scores = scores[guesses > 0]\n    \n    guesses = guesses[guesses < length(game)]\n\
    \    scores = scores[guesses < length(game)]\n    \n    guesses = guesses[guesses\
    \ == length(game)]\n    scores = scores[guesses == length(game)]\n    \n    guesses\
    \ = guesses[guesses != 0]\n    scores = scores[guesses != 0]\n    \n    guesses\
    \ = guesses[guesses > 0]\n    scores = scores[guesses > 0]\n    \n    guesses\
    \ = guesses[guesses < length(game)]\n    scores = scores[guesses < length(game)]\n\
    \    \n    ", "    \n    guesses = zeros(length(guess), length(game))\n    \n\
    \    for i = 1:length(guess)\n        guesses[i, :] = guess[i] - game\n    end\n\
    \    \n    guesses = guesses./sum(guesses, dims = 2)\n    \n    diff = zeros(length(guess))\n\
    \    \n    for i = 1:length(guess)\n        diff[i] = abs(guesses[i] - game[i])\n\
    \    end\n    \n    return diff\nend\n</cell>\n<code language=julia-1.5>\n@time\
    \ compare([1,2,3,4,5,1], [1,2,3,4,2,-2])\n</cell>\n<code language=julia-1.5>\n\
    @time compare([0,5,0,0,0,4], [4,1,1,0,0,-2])\n</cell>\n<code language=julia-1.5>\n\
    @time compare([1,2,3,4,5,1], [1,2,3,4,2,-2])\n</cell>\n<code language=julia-1.5>\n\
    @time compare([0,5,0,0,0,4], [4,1,1,0,0,-2])\n</cell>\n<code language=julia-1.5>\n\
    @time compare([1,2,3,4,5,1], [1,2,3,4,2,-2])\n</cell>\n<code language=julia-1.5>\n\
    @time compare([0,5,0,0,0,4], [4,1,1,0,0,-2])\n</cell>\n<code language=julia-1.5>\n\
    @time compare([1,2,3,4,5,1], [1,2,3,4,2,-2])\n</cell>\n<code language=julia-1.5>\n\
    @time compare([0,5,0,0,0,4], [4,1,1,0,0,-2])\n</cell>\n<code language=julia-1.5>\n\
    @time compare([1,2,3,4,5,1], [1,2,3,4,2,-2])\n</cell>\n<code language=julia-1.5>\n\
    @time compare([0,5,0,0,0,4], [4,1,1,0,0,-2])\n</cell>\n<code language=julia-1.5>\n\
    @time compare([1,2,3,4,5,1], [1,2,3,4,2,-2])\n</cell>\n<code language=julia-1.5>\n\
    @time compare([0,5,0,0,0,4], [4,1,1,0,0,-2])\n</cell>\n<code language=julia-1.5>\n\
    @time compare([1,2,3,4,5,1], [1,2,3,4,2,-2])\n</cell>\n<code language=julia-1.5>\n\
    @time compare([0,5,0,0,0,4], [4,1,1,0,0,-2])\n</cell>\n<code language=julia-1.5>\n\
    @time compare([1,2,3,4,5,1], [1,2,3,4,2,-2])\n</cell>\n<code language=julia-1.5>\n\
    @time compare([0,5,0,0,0,4], [4,1,1,0,0,-2])\n</cell>\n<code language=julia-1.5>\n\
    @time compare([1,2,3,4,5,1], [1,2,3,4,2,-2])\n</cell>\n<code language=juli", " \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    guess = sort(guess)\n\
    \    game = sort(game)\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n", "    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n", "    \n    guesses = zeros(length(guess), 1)\n    scores\
    \ = zeros(length(game), 1)\n    \n    for i = 1:length(guess)\n        guesses[i]\
    \ = guess[i]\n        scores[i] = game[i]\n    end\n    \n    guesses = sort(guesses)\n\
    \    scores = sort(scores)\n    \n    guesses = guesses[2:end]\n    scores = scores[2:end]\n\
    \    \n    guesses = guesses[guesses > 0]\n    scores = scores[guesses > 0]\n\
    \    \n    guesses = guesses[guesses < length(game)]\n    scores = scores[guesses\
    \ < length(game)]\n    \n    guesses = guesses[guesses == length(game)]\n    scores\
    \ = scores[guesses == length(game)]\n    \n    guesses = guesses[guesses > 0]\n\
    \    scores = scores[guesses > 0]\n    \n    guesses = guesses[guesses < length(game)]\n\
    \    scores = scores[guesses < length(game)]\n    \n    guesses = guesses[guesses\
    \ == length(game)]\n    scores = scores[guesses == length(game)]\n    \n    guesses\
    \ = guesses[guesses > 0]\n    scores = scores[guesses > 0]\n    \n    guesses\
    \ = guesses[guesses < length(game)]\n    scores = scores[guesses < length(game)]\n\
    \    \n    guesses = guesses[guesses == length(game)]\n    scores = scores[guesses\
    \ == length(game)]\n    \n    guesses = guesses[guesses > 0]\n    scores = scores[guesses\
    \ > 0]\n    \n    guesses = guesses[guesses < length(game)]\n    scores = scores[guesses\
    \ < length(game)]\n    \n    guesses = guesses[guesses == length(game)]\n    scores\
    \ = scores[guesses == length(game)]\n    \n    guesses = guesses[guesses > 0]\n\
    \    scores = scores[guesses > 0]\n    \n    guesses = guesses[guesses < length(game)]\n\
    \    scores = scores[guesses < length(game)]\n    \n    guesses = guesses[guesses\
    \ == length(game)]\n    scores = scores[guesses == length(game)]\n    \n    guesses\
    \ = guesses[guesses > 0]\n    scores = scores[guesses > 0]\n    \n    guesses\
    \ = guesses[guesses < length(game)]\n    scores = scores[guesses < length(game)]\n\
    \    \n    guesses = guesses[guesses == length(game)]\n    ", "    guesses = zeros(length(guess),\
    \ 1)\n    scores = zeros(length(game), 1)\n    for i = 1:length(guess)\n     \
    \   guesses[i] = guess[i]\n        scores[i] = game[i]\n    end\n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    ", "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \n\
    \    guesses = guess[:]\n    scores = game[:]\n    \n    guesses.sort()\n    scores.sort()\n\
    \    \n    guesses = guesses[2:end]\n    scores = scores[2:end]\n    \n    guesses\
    \ = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n    \n    guesses\
    \ = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n    \n    guesses\
    \ = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n    \n    guesses\
    \ = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n    \n    guesses\
    \ = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n    \n    guesses\
    \ = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n    \n    guesses\
    \ = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n    \n    guesses\
    \ = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n    \n    guesses\
    \ = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n    \n    guesses\
    \ = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n    \n    guesses\
    \ = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n    \n    guesses\
    \ = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n    \n    guesses\
    \ = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n    \n    guesses\
    \ = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n    \n    guesses\
    \ = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n    \n    guesses\
    \ = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n    \n    guesses\
    \ = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n    \n    guesses\
    \ = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n", "    guess\
    \ = sort(guess)\n    game = sort(game)\n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n", "    \n    guesses = zeros(length(guess),\
    \ 1)\n    scores = zeros(length(game), 1)\n    \n    for i = 1:length(guess)\n\
    \        guesses[i] = guess[i]\n        scores[i] = game[i]\n    end\n    \n \
    \   guesses = sort(guesses)\n    scores = sort(scores)\n    \n    guesses = guesses[2:end]\n\
    \    scores = scores[2:end]\n    \n    guesses = guesses[guesses > 0]\n    scores\
    \ = scores[guesses > 0]\n    \n    guesses = guesses[guesses < length(scores)]\n\
    \    scores = scores[guesses < length(scores)]\n    \n    guesses = guesses[guesses\
    \ == length(scores)]\n    scores = scores[guesses == length(scores)]\n    \n \
    \   guesses = guesses[guesses > 0]\n    scores = scores[guesses > 0]\n    \n \
    \   guesses = guesses[guesses < length(scores)]\n    scores = scores[guesses <\
    \ length(scores)]\n    \n    guesses = guesses[guesses == length(scores)]\n  \
    \  scores = scores[guesses == length(scores)]\n    \n    guesses = guesses[guesses\
    \ > 0]\n    scores = scores[guesses > 0]\n    \n    guesses = guesses[guesses\
    \ < length(scores)]\n    scores = scores[guesses < length(scores)]\n    \n   \
    \ guesses = guesses[guesses == length(scores)]\n    scores = scores[guesses ==\
    \ length(scores)]\n    \n    guesses = guesses[guesses > 0]\n    scores = scores[guesses\
    \ > 0]\n    \n    guesses = guesses[guesses < length(scores)]\n    scores = scores[guesses\
    \ < length(scores)]\n    \n    guesses = guesses[guesses == length(scores)]\n\
    \    scores = scores[guesses == length(scores)]\n    \n    guesses = guesses[guesses\
    \ > 0]\n    scores = scores[guesses > 0]\n    \n    guesses = guesses[guesses\
    \ < length(scores)]\n    scores = scores[guesses < length(scores)]\n    \n   \
    \ guesses = guesses[guesses == length(scores)]\n    scores = scores[guesses ==\
    \ length(scores)]\n    \n    guesses = guesses[guesses > 0]\n    scores = scores[guesses\
    \ > 0]\n    \n    guesses = guesses[guesses < length(scores)]\n    scores = scores[guesses\
    \ < length(scores)]\n    \n    guesses = guesses[guesses == length(scores)]\n\
    \    ", "    guesses = length(guess)\n    scores = length(game)\n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n",
  "    \n    guesses = zeros(length(guess), 1)\n    \n    for i = 1:length(guess)\n\
    \        guesses[i] = guess[i]\n    end\n    \n    scores = zeros(length(game),\
    \ length(guesses))\n    \n    for i = 1:length(game)\n        for j = 1:length(guesses)\n\
    \            scores[i, j] = abs(game[i] - guesses[j])\n        end\n    end\n\
    \    \n    return scores\nend\n</cell>\n<code language=julia-1.5>\n@time compare([1,2,3,4,5,1],\
    \ [1,2,3,4,2,-2])\n</cell>\n<text>\nExercise 3\nWrite a function that will take\
    \ in a vector of scores and a vector of guesses, and return a vector of the same\
    \ length denoting how far off each guess was. If they have guessed correctly,\
    \ the value is 0, and if not, the value is the absolute difference between the\
    \ guess and the score.", "    \n    \n    \n    \n    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n", "    \n    guesses = guess[:]\n    scores = game[:]\n    \n    guesses.sort!()\n\
    \    scores.sort!()\n    \n    guesses_sorted = guesses[:]\n    scores_sorted\
    \ = scores[:]\n    \n    guesses_sorted.sort!()\n    scores_sorted.sort!()\n \
    \   \n    guesses_sorted = guesses_sorted[guesses_sorted .!= 0]\n    scores_sorted\
    \ = scores_sorted[scores_sorted .!= 0]\n    \n    guesses_sorted = guesses_sorted[guesses_sorted\
    \ .!= 0]\n    scores_sorted = scores_sorted[scores_sorted .!= 0]\n    \n    guesses_sorted\
    \ = guesses_sorted[guesses_sorted .!= 0]\n    scores_sorted = scores_sorted[scores_sorted\
    \ .!= 0]\n    \n    guesses_sorted = guesses_sorted[guesses_sorted .!= 0]\n  \
    \  scores_sorted = scores_sorted[scores_sorted .!= 0]\n    \n    guesses_sorted\
    \ = guesses_sorted[guesses_sorted .!= 0]\n    scores_sorted = scores_sorted[scores_sorted\
    \ .!= 0]\n    \n    guesses_sorted = guesses_sorted[guesses_sorted .!= 0]\n  \
    \  scores_sorted = scores_sorted[scores_sorted .!= 0]\n    \n    guesses_sorted\
    \ = guesses_sorted[guesses_sorted .!= 0]\n    scores_sorted = scores_sorted[scores_sorted\
    \ .!= 0]\n    \n    guesses_sorted = guesses_sorted[guesses_sorted .!= 0]\n  \
    \  scores_sorted = scores_sorted[scores_sorted .!= 0]\n    \n    guesses_sorted\
    \ = guesses_sorted[guesses_sorted .!= 0]\n    scores_sorted = scores_sorted[scores_sorted\
    \ .!= 0]\n    \n    guesses_sorted = guesses_sorted[guesses_sorted .!= 0]\n  \
    \  scores_sorted = scores_sorted[scores_sorted .!= 0]\n    \n    guesses_sorted\
    \ = guesses_sorted[guesses_sorted .!= 0]\n    scores_sorted = scores_sorted[scores_sorted\
    \ .!= 0]\n    \n    guesses_sorted = guesses_sorted[guesses_sorted .!= 0]\n  \
    \  scores_sorted = scores_sorted[scores_sorted .!= 0]\n    \n    guesses_sorted\
    \ = guesses_sorted[guesses_sorted .!= 0]\n    scores_sorted = scores_sorted[scores_sorted\
    \ .!= 0]", "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    guesses = guess[:]\n\
    \    scores = game[:]\n    \n    guesses.sort()\n    scores.sort()\n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n", "    guesses = Vector{Int64}(guess)\n\
    \    scores = Vector{Int64}(game)\n    \n    guesses = sort(guesses)\n    scores\
    \ = sort(scores)\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n", "    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n", "    \n    guesses = guess[:]\n    scores = game[:]\n  \
    \  \n    guesses.sort!()\n    scores.sort!()\n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    ", "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n", " \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    guess = sort(guess)\n\
    \    game = sort(game)\n    \n    diff = zeros(length(guess))\n    \n    for i\
    \ = 1:length(guess)\n        if guess[i] == game[i]\n            diff[i] = 0\n\
    \        else\n            diff[i] = abs(guess[i] - game[i])\n        end\n  \
    \  end\n    \n    return diff\nend\n</cell>\n<code language=julia-1.5>\n@time\
    \ compare([1,2,3,4,5,1], [1,2,3,4,2,-2])\n</cell>\n<code language=julia-1.5>\n\
    @time compare([0,5,0,0,0,4], [4,1,1,0,0,-2])\n</cell>\n<text>\nExercise: Write\
    \ a function that takes a vector of scores and a vector of guesses and returns\
    \ the number of matches.", "    \n    guesses = zeros(length(guess), 1)\n    scores\
    \ = zeros(length(game), 1)\n    \n    for i = 1:length(guess)\n        guesses[i]\
    \ = guess[i]\n        scores[i] = game[i]\n    end\n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    ", "    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n", "    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n", "    guess = sort(guess)\n    game = sort(game)\n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n", "    \n    guesses = zeros(length(guess), 1)\n    scores = zeros(length(game),\
    \ 1)\n    \n    for i = 1:length(guess)\n        guesses[i] = guess[i]\n     \
    \   scores[i] = game[i]\n    end\n    \n    guesses = sort(guesses)\n    scores\
    \ = sort(scores)\n    \n    diff = guesses - scores\n    \n    diff = sort(diff)\n\
    \    \n    diff = diff[1:length(diff)-1]\n    \n    diff = diff .- diff[1]\n \
    \   \n    diff = diff ./ diff[1]\n    \n    return diff\nend\n</cell>\n<code language=julia-1.5>\n\
    @test compare([1,2,3,4,5,1], [1,2,3,4,2,-2]) == [0,0,0,0,3,3]\n@test compare([0,5,0,0,0,4],\
    \ [4,1,1,0,0,-2]) == [4,4,1,0,0,6]\n</cell>\n<text>\nPart 2\nNow that you have\
    \ written your function, you will want to test it against a few examples. You\
    \ will start by writing a function that will generate random numbers between 0\
    \ and 10. Then, you'll write another function that will generate random numbers\
    \ between 0 and 10 and then compare them to the first function's output. Finally,\
    \ you'll write another function that will generate random numbers between 0 and\
    \ 10 and then compare them to the second function's output. Finally, you'll write\
    \ another function that will generate random numbers between 0 and 10 and then\
    \ compare them to the third function's output. Finally, you'll write another function\
    \ that will generate random numbers between 0 and 10 and then compare them to\
    \ the fourth function's output. Finally, you'll write another function that will\
    \ generate random numbers between 0 and 10 and then compare them to the fifth\
    \ function's output. Finally, you'll write another function that will generate\
    \ random numbers between 0 and 10 and then compare them to the sixth function's\
    \ output. Finally, you'll write another function that will generate random numbers\
    \ between 0 and 10 and then compare them to the seventh function's output. Finally,\
    \ you'll write another function that will generate random numbers between 0 and\
    \ 10 and then compare them to the eighth function's output. Finally, you'll write\
    \ another function that will generate random numbers between 0 and 10 and then\
    \ compare them to the ninth function's output. Finally, you'll write another function\
    \ that will generate random numbers between 0 and 10 and then compare them to\
    \ the tenth function's output. Finally, you'll write another function that will\
    \ generate random numbers between 0 and 10 and then compare them to the eleventh\
    \ function's output. Finally, you'll write another function that will generate\
    \ random numbers between 0 and 10 and then compare them to the twelfth function's\
    \ output. Finally, you'll write another function that will generate random numbers\
    \ between 0 and 10 and then compare them to the thirteenth function's output.\
    \ Finally, you'll write another function that will ", "    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n", "    \n    guesses = zeros(length(guess)) \n\
    \    scores = zeros(length(game))\n    \n    for i = 1:length(guess)\n       \
    \ guesses[i] = guess[i]\n        scores[i] = game[i]\n    end\n    \n    guesses\
    \ = sort(guesses)\n    scores = sort(scores)\n    \n    guesses = guesses[2:end]\n\
    \    scores = scores[2:end]\n    \n    guesses = guesses[guesses..<scores]\n \
    \   scores = scores[guesses..<scores]\n    \n    guesses = guesses[guesses..>scores]\n\
    \    scores = scores[guesses..>scores]\n    \n    guesses = guesses[guesses..<0]\n\
    \    scores = scores[guesses..<0]\n    \n    guesses = guesses[guesses..>0]\n\
    \    scores = scores[guesses..>0]\n    \n    guesses = guesses[guesses..<length(guesses)]\n\
    \    scores = scores[guesses..<length(guesses)]\n    \n    guesses = guesses[guesses..>length(guesses)]\n\
    \    scores = scores[guesses..>length(guesses)]\n    \n    guesses = guesses[guesses..<length(scores)]\n\
    \    scores = scores[guesses..<length(scores)]\n    \n    guesses = guesses[guesses..>length(scores)]\n\
    \    scores = scores[guesses..>length(scores)]\n    \n    guesses = guesses[guesses..<length(guesses)+1]\n\
    \    scores = scores[guesses..<length(guesses)+1]\n    \n    guesses = guesses[guesses..>length(guesses)+1]\n\
    \    scores = scores[guesses..>length(guesses)+1]\n    \n    guesses = guesses[guesses..<length(scores)+1]\n\
    \    scores = scores[guesses..<length(scores)+1]\n    \n    guesses = guesses[guesses..>length(scores)+1]\n\
    \    scores = scores[guesses..>length(scores)+1]\n    \n    guesses = guesses[guesses..<length(guesses)+length(scores)]\n\
    \    scores = scores[guesses..<length(guesses)+length(scores)]\n    \n    guesses\
    \ = guesses[guesses..>length(guesses)+length(scores)]\n    scores = scores[guesses..>length(guesses)",
  "    \n    guesses = guess[:]\n    scores = game[:]\n    \n    guesses.sort!()\n\
    \    scores.sort!()\n    \n    guesses = guesses[guesses..end-1]\n    scores =\
    \ scores[guesses..end-1]\n    \n    guesses.reverse!()\n    scores.reverse!()\n\
    \    \n    guesses = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n\
    \    \n    guesses.reverse!()\n    scores.reverse!()\n    \n    guesses = guesses[guesses..end-1]\n\
    \    scores = scores[guesses..end-1]\n    \n    guesses = guesses[guesses..end-1]\n\
    \    scores = scores[guesses..end-1]\n    \n    guesses = guesses[guesses..end-1]\n\
    \    scores = scores[guesses..end-1]\n    \n    guesses = guesses[guesses..end-1]\n\
    \    scores = scores[guesses..end-1]\n    \n    guesses = guesses[guesses..end-1]\n\
    \    scores = scores[guesses..end-1]\n    \n    guesses = guesses[guesses..end-1]\n\
    \    scores = scores[guesses..end-1]\n    \n    guesses = guesses[guesses..end-1]\n\
    \    scores = scores[guesses..end-1]\n    \n    guesses = guesses[guesses..end-1]\n\
    \    scores = scores[guesses..end-1]\n    \n    guesses = guesses[guesses..end-1]\n\
    \    scores = scores[guesses..end-1]\n    \n    guesses = guesses[guesses..end-1]\n\
    \    scores = scores[guesses..end-1]\n    \n    guesses = guesses[guesses..end-1]\n\
    \    scores = scores[guesses..end-1]\n    \n    guesses = guesses[guesses..end-1]\n\
    \    scores = scores[guesses..end-1]\n    \n    guesses = guesses[guesses..end-1]\n\
    \    scores = scores[guesses..end-1]\n    \n    guesses = guesses[guesses..end-1]\n\
    \    scores = scores[guesses..end-1]\n    \n    guesses = guesses[guesses..end-1]\n\
    \    scores = scores[guesses..end-1]\n    \n    guesses = gues", "    \n    guesses\
    \ = zeros(length(guess), 1)\n    scores = zeros(length(game), 1)\n    \n    for\
    \ i = 1:length(guess)\n        guesses[i] = guess[i]\n        scores[i] = game[i]\n\
    \    end\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    ", "    \n    guess = sort(guess)\n    game = sort(game)\n  \
    \  \n    guesses = zeros(length(guess), 1)\n    \n    for i = 1:length(guess)\n\
    \        guesses[i] = guess[i] - game[i]\n    end\n    \n    return guesses\n\
    end\n</cell>\n<code language=julia-1.5>\n@time compare([1,2,3,4,5,1], [1,2,3,4,2,-2])\n\
    </cell>\n<code language=julia-1.5>\n@time compare([0,5,0,0,0,4], [4,1,1,0,0,-2])\n\
    </cell>\n<text>\nExercise: Write a function that returns the number of matches\
    \ between two vectors of equal length. \n    \n    \n    example:", "    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    guesses = guess[:]\n\
    \    scores = game[:]\n    \n    guesses.sort!()\n    scores.sort!()\n    \n \
    \   guesses.reverse!()\n    scores.reverse!()\n    \n    guesses.reverse!()\n\
    \    scores.reverse!()\n    \n    guesses.reverse!()\n    scores.reverse!()\n\
    \    \n    guesses.reverse!()\n    scores.reverse!()\n    \n    guesses.reverse!()\n\
    \    scores.reverse!()\n    \n    guesses.reverse!()\n    scores.reverse!()\n\
    \    \n    guesses.reverse!()\n    scores.reverse!()\n    \n    guesses.reverse!()\n\
    \    scores.reverse!()\n    \n    guesses.reverse!()\n    scores.reverse!()\n\
    \    \n    guesses.reverse!()\n    scores.reverse!()\n    \n    guesses.reverse!()\n\
    \    scores.reverse!()\n    \n    guesses.reverse!()\n    scores.reverse!()\n\
    \    \n    guesses.reverse!()\n    scores.reverse!()\n    \n    guesses.reverse!()\n\
    \    scores.reverse!()\n    \n    guesses.reverse!()\n    scores.reverse!()\n\
    \    \n    guesses.reverse!()\n    scores.reverse!()\n    \n    guesses.reverse!()\n\
    \    scores.reverse!()\n    \n    guesses.reverse!()\n    scores.reverse!()\n\
    \    \n    guesses.reverse!()\n    scores.reverse!()\n    \n    guesses.reverse!()\n\
    \    scores.reverse!()\n    \n    guesses.reverse!()\n    scores.reverse!()\n\
    \    \n    guesses.reverse!()\n    scores.reverse!()\n    \n    guesses.reverse!()\n\
    \    scores.reverse!()\n    \n    guesses.reverse!()\n    scores.reverse!()\n\
    \    \n    guesses.reverse!()\n    scores.reverse!()\n    \n    guesses.reverse!()\n\
    \    scores.reverse!()\n    \n    guesses.reverse!()\n    scores.reverse!()\n\
    \    \n    guesses.reverse!()\n    scores.reverse!()\n    \n    guesses.reverse!()\n\
    \    scores.reverse!()\n    \n    guesses.reverse!()\n    scores.reverse!()\n\
    \    ", "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \n\
    \    guesses = guess[:]\n    scores = game[:]\n    \n    guesses.sort!()\n   \
    \ scores.sort!()\n    \n    guesses.reverse!()\n    scores.reverse!()\n    \n\
    \    guesses.reverse!()\n    scores.reverse!()\n    \n    guesses.reverse!()\n\
    \    scores.reverse!()\n    \n    guesses.reverse!()\n    scores.reverse!()\n\
    \    \n    guesses.reverse!()\n    scores.reverse!()\n    \n    guesses.reverse!()\n\
    \    scores.reverse!()\n    \n    guesses.reverse!()\n    scores.reverse!()\n\
    \    \n    guesses.reverse!()\n    scores.reverse!()\n    \n    guesses.reverse!()\n\
    \    scores.reverse!()\n    \n    guesses.reverse!()\n    scores.reverse!()\n\
    \    \n    guesses.reverse!()\n    scores.reverse!()\n    \n    guesses.reverse!()\n\
    \    scores.reverse!()\n    \n    guesses.reverse!()\n    scores.reverse!()\n\
    \    \n    guesses.reverse!()\n    scores.reverse!()\n    \n    guesses.reverse!()\n\
    \    scores.reverse!()\n    \n    guesses.reverse!()\n    scores.reverse!()\n\
    \    \n    guesses.reverse!()\n    scores.reverse!()\n    \n    guesses.reverse!()\n\
    \    scores.reverse!()\n    \n    guesses.reverse!()\n    scores.reverse!()\n\
    \    \n    guesses.reverse!()\n    scores.reverse!()\n    \n    guesses.reverse!()\n\
    \    scores.reverse!()\n    \n    guesses.reverse!()\n    scores.reverse!()\n\
    \    \n    guesses.reverse!()\n    scores.reverse!()\n    \n    guesses.reverse!()\n\
    \    scores.reverse!()\n    \n    guesses.reverse!()\n    scores.reverse!()\n\
    \    \n    guesses.reverse!()\n    scores.reverse!()\n    \n    guesses.reverse!()\n\
    \    scores.reverse!()\n    \n    guesses.reverse!()\n    scores.reverse!()\n\
    \    \n    guesses.reverse!()\n    scores.reverse!()\n    \n    guesses.reverse!()\n\
    \    scores.reverse!()\n    ", "    \n    guesses = zeros(length(guess), 1)\n\
    \    scores = zeros(length(game), 1)\n    \n    for i = 1:length(guess)\n    \
    \    guesses[i] = guess[i]\n        scores[i] = game[i]\n    end\n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    ", "  \
    \  \n    guesses = guess[:]\n    scores = game[:]\n    \n    guesses.sort!()\n\
    \    scores.sort!()\n    \n    \n    \n    \n    \n    \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    ", "    guess\
    \ = sort(guess)\n    game = sort(game)\n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    guesses =\
    \ guess[:]\n    scores = game[:]\n    \n    guesses.sort!()\n    scores.sort!()\n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    ", "    \n    guesses = guess[:]\n  \
    \  scores = game[:]\n    \n    guesses.sort!()\n    scores.sort!()\n    \n   \
    \ guesses.reverse!()\n    scores.reverse!()\n    \n    guesses.reverse!()\n  \
    \  scores.reverse!()\n    \n    guesses.reverse!()\n    scores.reverse!()\n  \
    \  \n    guesses.reverse!()\n    scores.reverse!()\n    \n    guesses.reverse!()\n\
    \    scores.reverse!()\n    \n    guesses.reverse!()\n    scores.reverse!()\n\
    \    \n    guesses.reverse!()\n    scores.reverse!()\n    \n    guesses.reverse!()\n\
    \    scores.reverse!()\n    \n    guesses.reverse!()\n    scores.reverse!()\n\
    \    \n    guesses.reverse!()\n    scores.reverse!()\n    \n    guesses.reverse!()\n\
    \    scores.reverse!()\n    \n    guesses.reverse!()\n    scores.reverse!()\n\
    \    \n    guesses.reverse!()\n    scores.reverse!()\n    \n    guesses.reverse!()\n\
    \    scores.reverse!()\n    \n    guesses.reverse!()\n    scores.reverse!()\n\
    \    \n    guesses.reverse!()\n    scores.reverse!()\n    \n    guesses.reverse!()\n\
    \    scores.reverse!()\n    \n    guesses.reverse!()\n    scores.reverse!()\n\
    \    \n    guesses.reverse!()\n    scores.reverse!()\n    \n    guesses.reverse!()\n\
    \    scores.reverse!()\n    \n    guesses.reverse!()\n    scores.reverse!()\n\
    \    \n    guesses.reverse!()\n    scores.reverse!()\n    \n    guesses.reverse!()\n\
    \    scores.reverse!()\n    \n    guesses.reverse!()\n    scores.reverse!()\n\
    \    \n    guesses.reverse!()\n    scores.reverse!()\n    \n    guesses.reverse!()\n\
    \    scores.reverse!()\n    \n    guesses.reverse!()\n    scores.reverse!()\n\
    \    \n    guesses.reverse!()\n    scores.reverse!()\n    \n    guesses.reverse!()\n\
    \    scores.reverse!()\n    \n    guesses.reverse!()\n    scores.reverse!()\n\
    \    ", "    \n    guesses = zeros(length(guess), 1)\n    scores = zeros(length(game),\
    \ 1)\n    \n    for i = 1:length(guess)\n        guesses[i] = guess[i]\n     \
    \   scores[i] = game[i]\n    end\n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    ", "    \n    \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n", "    \n    guesses = zeros(length(guess), 1)\n   \
    \ scores = zeros(length(game), 1)\n    \n    for i = 1:length(guess)\n       \
    \ guesses[i] = guess[i]\n        scores[i] = game[i]\n    end\n    \n    guesses\
    \ = sort(guesses)\n    scores = sort(scores)\n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    ", "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    guesses = zeros(length(guess),\
    \ 1)\n    scores = zeros(length(game), 1)\n    \n    for i = 1:length(guess)\n\
    \        guesses[i] = guess[i]\n        scores[i] = game[i]\n    end\n    \n \
    \   guesses = sort(guesses)\n    scores = sort(scores)\n    \n    guesses = guesses[2:end]\n\
    \    scores = scores[2:end]\n    \n    guesses = guesses[guesses > scores]\n \
    \   scores = scores[guesses > scores]\n    \n    guesses = guesses[guesses < scores]\n\
    \    scores = scores[guesses < scores]\n    \n    guesses = guesses[guesses ==\
    \ scores]\n    scores = scores[guesses == scores]\n    \n    guesses = guesses[guesses\
    \ != scores]\n    scores = scores[guesses != scores]\n    \n    guesses = guesses[guesses\
    \ != 0]\n    scores = scores[guesses != 0]\n    \n    guesses = guesses[guesses\
    \ > 0]\n    scores = scores[guesses > 0]\n    \n    guesses = guesses[guesses\
    \ < 0]\n    scores = scores[guesses < 0]\n    \n    guesses = guesses[guesses\
    \ == 0]\n    scores = scores[guesses == 0]\n    \n    guesses = guesses[guesses\
    \ > 0]\n    scores = scores[guesses > 0]\n    \n    guesses = guesses[guesses\
    \ < 0]\n    scores = scores[guesses < 0]\n    \n    guesses = guesses[guesses\
    \ == 0]\n    scores = scores[guesses == 0]\n    \n    guesses = guesses[guesses\
    \ != 0]\n    scores = scores[guesses != 0]\n    \n    guesses = guesses[guesses\
    \ != scores]\n    scores = scores[guesses != scores]\n    \n    guesses = guesses[guesses\
    \ != scores]\n    scores = scores[guesses != scores]\n    \n    guesses = guesses[guesses\
    \ != scores]\n    scores = scores[guesses != scores]\n    \n    guesses = guesses[guesses\
    \ != scores]\n    scores = scores[guesses != scores]\n    \n    guesses = guesses[guesses\
    \ != scores]\n    scores = scores[guesses != scores]\n    \n    guesses = guesses[guesses\
    \ != scores]\n    scores = scores[guesses != scores]\n    \n    guesses = guesses[guesses\
    \ != scores]\n    scores = scores[gues", "    \n    guesses = zeros(length(guess),\
    \ 1)\n    scores = zeros(length(game), 1)\n    \n    for i = 1:length(guess)\n\
    \        guesses[i] = guess[i]\n        scores[i] = game[i]\n    end\n    \n \
    \   guesses = sort(guesses)\n    scores = sort(scores)\n    \n    guesses = guesses[2:end]\n\
    \    scores = scores[2:end]\n    \n    guesses = guesses[guesses > scores]\n \
    \   scores = scores[guesses > scores]\n    \n    guesses = guesses[guesses < scores]\n\
    \    scores = scores[guesses < scores]\n    \n    guesses = guesses[guesses ==\
    \ scores]\n    scores = scores[guesses == scores]\n    \n    guesses = guesses[guesses\
    \ != scores]\n    scores = scores[guesses != scores]\n    \n    guesses = guesses[guesses\
    \ == 0]\n    scores = scores[guesses == 0]\n    \n    guesses = guesses[guesses\
    \ != 0]\n    scores = scores[guesses != 0]\n    \n    guesses = guesses[guesses\
    \ > 0]\n    scores = scores[guesses > 0]\n    \n    guesses = guesses[guesses\
    \ < 0]\n    scores = scores[guesses < 0]\n    \n    guesses = guesses[guesses\
    \ == 0]\n    scores = scores[guesses == 0]\n    \n    guesses = guesses[guesses\
    \ != 0]\n    scores = scores[guesses != 0]\n    \n    guesses = guesses[guesses\
    \ > 0]\n    scores = scores[guesses > 0]\n    \n    guesses = guesses[guesses\
    \ < 0]\n    scores = scores[guesses < 0]\n    \n    guesses = guesses[guesses\
    \ == 0]\n    scores = scores[guesses == 0]\n    \n    guesses = guesses[guesses\
    \ != 0]\n    scores = scores[guesses != 0]\n    \n    guesses = guesses[guesses\
    \ > 0]\n    scores = scores[guesses > 0]\n    \n    guesses = guesses[guesses\
    \ < 0]\n    scores = scores[guesses < 0]\n    \n    guesses = guesses[guesses\
    \ == 0]\n    scores = scores[guesses == 0]\n    \n    guesses = guesses[guesses\
    \ != 0]\n    scores = scores[guesses != 0]\n    \n    guesses = guesses[guesses\
    \ > 0]\n    scores = scores[guesses > 0]\n    \n    guesses = guesses[", "   \
    \ \n    guesses = zeros(length(guess), 1)\n    scores = zeros(length(game), 1)\n\
    \    \n    for i = 1:length(guess)\n        guesses[i] = guess[i]\n        scores[i]\
    \ = game[i]\n    end\n    \n    guesses = guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses.",
  "    \n    guesses = zeros(length(game))\n    \n    for i = 1:length(guess)\n  \
    \      guesses[i] = guess[i]\n    end\n    \n    guesses = guesses.-game\n   \
    \ \n    guesses = guesses..guesses\n    \n    guesses = guesses..guesses\n   \
    \ \n    guesses = guesses..guesses\n    \n    guesses = guesses..guesses\n   \
    \ \n    guesses = guesses..guesses\n    \n    guesses = guesses..guesses\n   \
    \ \n    guesses = guesses..guesses\n    \n    guesses = guesses..guesses\n   \
    \ \n    guesses = guesses..guesses\n    \n    guesses = guesses..guesses\n   \
    \ \n    guesses = guesses..guesses\n    \n    guesses = guesses..guesses\n   \
    \ \n    guesses = guesses..guesses\n    \n    guesses = guesses..guesses\n   \
    \ \n    guesses = guesses..guesses\n    \n    guesses = guesses..guesses\n   \
    \ \n    guesses = guesses..guesses\n    \n    guesses = guesses..guesses\n   \
    \ \n    guesses = guesses..guesses\n    \n    guesses = guesses..guesses\n   \
    \ \n    guesses = guesses..guesses\n    \n    guesses = guesses..guesses\n   \
    \ \n    guesses = guesses..guesses\n    \n    guesses = guesses..guesses\n   \
    \ \n    guesses = guesses..guesses\n    \n    guesses = guesses..guesses\n   \
    \ \n    guesses = guesses..guesses\n    \n    guesses = guesses..guesses\n   \
    \ \n    guesses = guesses..guesses\n    \n    guesses = guesses..guesses\n   \
    \ \n    guesses = guesses..guesses\n    \n    guesses = guesses..guesses\n   \
    \ \n    guesses = guesses..guesses\n    \n    guesses = guesses..guesses\n   \
    \ \n    guesses = guesses..guesses\n    \n    guesses = guesses..guesses\n   \
    \ \n    ", "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    guess\
    \ = sort(guess)\n    game = sort(game)\n    \n    diff = zeros(length(guess))\n\
    \    \n    for i = 1:length(guess)\n        if guess[i] == game[i]\n         \
    \   diff[i] = 0\n        else\n            diff[i] = abs(guess[i] - game[i])\n\
    \        end\n    end\n    \n    return diff\nend\n</cell>\n<code language=julia-1.5>\n\
    @time compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n</cell>\n<code language=julia-1.5>\n\
    @time compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n</cell>\n<text>\nExercise:\
    \ Write a function that returns the number of matches between two vectors of equal\
    \ length. \n    \n    \n    example:", "    guesses = length(guess)\n    scores\
    \ = length(game)\n    \n    guesses_correct = 0\n    \n    guesses_correct = guesses_correct\
    \ + guess[guesses_correct] == game[guesses_correct]\n    \n    guesses_correct\
    \ = guesses_correct + guess[guesses_correct] == game[guesses_correct]\n    \n\
    \    guesses_correct = guesses_correct + guess[guesses_correct] == game[guesses_correct]\n\
    \    \n    guesses_correct = guesses_correct + guess[guesses_correct] == game[guesses_correct]\n\
    \    \n    guesses_correct = guesses_correct + guess[guesses_correct] == game[guesses_correct]\n\
    \    \n    guesses_correct = guesses_correct + guess[guesses_correct] == game[guesses_correct]\n\
    \    \n    guesses_correct = guesses_correct + guess[guesses_correct] == game[guesses_correct]\n\
    \    \n    guesses_correct = guesses_correct + guess[guesses_correct] == game[guesses_correct]\n\
    \    \n    guesses_correct = guesses_correct + guess[guesses_correct] == game[guesses_correct]\n\
    \    \n    guesses_correct = guesses_correct + guess[guesses_correct] == game[guesses_correct]\n\
    \    \n    guesses_correct = guesses_correct + guess[guesses_correct] == game[guesses_correct]\n\
    \    \n    guesses_correct = guesses_correct + guess[guesses_correct] == game[guesses_correct]\n\
    \    \n    guesses_correct = guesses_correct + guess[guesses_correct] == game[guesses_correct]\n\
    \    \n    guesses_correct = guesses_correct + guess[guesses_correct] == game[guesses_correct]\n\
    \    \n    guesses_correct = guesses_correct + guess[guesses_correct] == game[guesses_correct]\n\
    \    \n    guesses_correct = guesses_correct + guess[guesses_correct] == game[guesses_correct]\n\
    \    \n    guesses_correct = guesses_correct + guess[guesses_correct] == game[guesses_correct]\n\
    \    \n    guesses_correct = guesses_correct + ", "    guesses = zeros(length(guess),\
    \ 1)\n    scores = zeros(length(game), 1)\n    \n    for i = 1:length(guess)\n\
    \        guesses[i] = guess[i]\n        scores[i] = game[i]\n    end\n    \n \
    \   guesses = sort(guesses)\n    scores = sort(scores)\n    \n    guesses = guesses[2:end]\n\
    \    scores = scores[2:end]\n    \n    guesses = guesses[guesses > scores]\n \
    \   scores = scores[guesses > scores]\n    \n    guesses = guesses[guesses < scores]\n\
    \    scores = scores[guesses < scores]\n    \n    guesses = guesses[guesses ==\
    \ scores]\n    scores = scores[guesses == scores]\n    \n    guesses = guesses[guesses\
    \ != scores]\n    scores = scores[guesses != scores]\n    \n    guesses = guesses[guesses\
    \ == 0]\n    scores = scores[guesses == 0]\n    \n    guesses = guesses[guesses\
    \ != 0]\n    scores = scores[guesses != 0]\n    \n    guesses = guesses[guesses\
    \ > 0]\n    scores = scores[guesses > 0]\n    \n    guesses = guesses[guesses\
    \ < 0]\n    scores = scores[guesses < 0]\n    \n    guesses = guesses[guesses\
    \ == 0]\n    scores = scores[guesses == 0]\n    \n    guesses = guesses[guesses\
    \ != 0]\n    scores = scores[guesses != 0]\n    \n    guesses = guesses[guesses\
    \ > 0]\n    scores = scores[guesses > 0]\n    \n    guesses = guesses[guesses\
    \ < 0]\n    scores = scores[guesses < 0]\n    \n    guesses = guesses[guesses\
    \ == 0]\n    scores = scores[guesses == 0]\n    \n    guesses = guesses[guesses\
    \ != 0]\n    scores = scores[guesses != 0]\n    \n    guesses = guesses[guesses\
    \ > 0]\n    scores = scores[guesses > 0]\n    \n    guesses = guesses[guesses\
    \ < 0]\n    scores = scores[guesses < 0]\n    \n    guesses = guesses[guesses\
    \ == 0]\n    scores = scores[guesses == 0]\n    \n    guesses = guesses[guesses\
    \ != 0]\n    scores = scores[guesses != 0]\n    \n    guesses = guesses[guesses\
    \ > 0]\n    scores = scores[guesses > 0]\n    \n    guesses = guesses[guesse",
  "    \n    guess = sort(guess)\n    game = sort(game)\n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    guesses\
    \ = zeros(length(guess), 1)\n    scores = zeros(length(game), 1)\n    \n    for\
    \ i = 1:length(guess)\n        guesses[i] = guess[i]\n        scores[i] = game[i]\n\
    \    end\n    \n    guesses = sort(guesses)\n    scores = sort(scores)\n    \n\
    \    guesses = guesses[2:end-1]\n    scores = scores[2:end-1]\n    \n    guesses\
    \ = guesses[guesses != 0]\n    scores = scores[guesses != 0]\n    \n    guesses\
    \ = guesses[guesses != scores]\n    scores = scores[guesses != scores]\n    \n\
    \    guesses = guesses[guesses == scores]\n    scores = scores[guesses == scores]\n\
    \    \n    guesses = guesses[guesses != 0]\n    scores = scores[guesses != 0]\n\
    \    \n    guesses = guesses[guesses != scores]\n    scores = scores[guesses !=\
    \ scores]\n    \n    guesses = guesses[guesses == scores]\n    scores = scores[guesses\
    \ == scores]\n    \n    guesses = guesses[guesses != 0]\n    scores = scores[guesses\
    \ != 0]\n    \n    guesses = guesses[guesses != scores]\n    scores = scores[guesses\
    \ != scores]\n    \n    guesses = guesses[guesses == scores]\n    scores = scores[guesses\
    \ == scores]\n    \n    guesses = guesses[guesses != 0]\n    scores = scores[guesses\
    \ != 0]\n    \n    guesses = guesses[guesses != scores]\n    scores = scores[guesses\
    \ != scores]\n    \n    guesses = guesses[guesses == scores]\n    scores = scores[guesses\
    \ == scores]\n    \n    guesses = guesses[guesses != 0]\n    scores = scores[guesses\
    \ != 0]\n    \n    guesses = guesses[guesses != scores]\n    scores = scores[guesses\
    \ != scores]\n    \n    guesses = guesses[guesses == scores]\n    scores = scores[guesses\
    \ == scores]\n    \n    guesses = guesses[guesses != 0]\n    scores = scores[guesses\
    \ != 0]\n    \n    guesses = guesses[guesses != scores]\n    scores = scores[guesses\
    \ != scores]\n    \n    guesses = guesses[guesses == scores]\n    scores = scores[guesses\
    \ == scores]\n    \n    guesses = guesses[guesses != 0]", "    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n", "    \n    guesses = zeros(length(guess),\
    \ 1)\n    scores = zeros(length(game), 1)\n    \n    for i = 1:length(guess)\n\
    \        guesses[i] = guess[i]\n        scores[i] = game[i]\n    end\n    \n \
    \   guesses = sort(guesses)\n    scores = sort(scores)\n    \n    diff = zeros(length(guess),\
    \ 1)\n    \n    for i = 1:length(guess)\n        if guesses[i] == scores[i]\n\
    \            diff[i] = 0\n        else\n            diff[i] = abs(guesses[i] -\
    \ scores[i])\n        end\n    end\n    \n    return diff\nend\n</cell>\n<code\
    \ language=julia-1.5>\n@time compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    </cell>\n<code language=julia-1.5>\n@time compare([0, 5, 0, 0, 0, 4], [4, 1, 1,\
    \ 0, 0, -2])\n</cell>\n<code language=julia-1.5>\n@time compare([0, 5, 0, 0, 0,\
    \ 4], [4, 1, 1, 0, 0, -2])\n</cell>\n<code language=julia-1.5>\n@time compare([0,\
    \ 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n</cell>\n<code language=julia-1.5>\n@time\
    \ compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n</cell>\n<code language=julia-1.5>\n\
    @time compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n</cell>\n<code language=julia-1.5>\n\
    @time compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n</cell>\n<code language=julia-1.5>\n\
    @time compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n</cell>\n<code language=julia-1.5>\n\
    @time compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n</cell>\n<code language=julia-1.5>\n\
    @time compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n</cell>\n<code language=julia-1.5>\n\
    @time compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n</cell>\n<code language=julia-1.5>\n\
    @time compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n</cell>\n<code language=julia-1.5>\n\
    @time compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n</cell>\n<code language=julia-1.5>\n\
    @time compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n</cell>\n<code language=julia-1.5>\n\
    @time compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n</cell>\n<code language=julia-1.5>\n\
    @time compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n", "    \n    guesses\
    \ = guess[:]\n    scores = game[:]\n    \n    guesses.sort!()\n    scores.sort!()\n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    ", "    \n    \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n", "    \n    guess = sort(guess)\n    score = sort(game)\n\
    \    \n    diff = zeros(length(guess), length(guess))\n    \n    for i = 1:length(guess)\n\
    \        for j = 1:length(guess)\n            diff[i,j] = abs(guess[i] - score[j])\n\
    \        end\n    end\n    \n    return diff\nend\n</cell>\n<code language=julia-1.0>\n\
    # test your code\n@test compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) == [0,0,0,0,3,3]\n\
    @test compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) == [4,4,1,0,0,6]\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the number of matches between two lists\
    \ of numbers. Your function should take two vectors of numbers as arguments and\
    \ return a single number.", "    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n", "    guesses = length(guess)\n    scores = length(game)\n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n",
  "    \n    guesses = Vector{Int64}(guess)\n    scores = Vector{Int64}(game)\n  \
    \  \n    guesses_sorted = sort(guesses)\n    scores_sorted = sort(scores)\n  \
    \  \n    guesses_sorted = guesses_sorted[guesses_sorted .!= 0]\n    scores_sorted\
    \ = scores_sorted[guesses_sorted .!= 0]\n    \n    guesses_sorted = guesses_sorted[guesses_sorted\
    \ .!= 0]\n    scores_sorted = scores_sorted[guesses_sorted .!= 0]\n    \n    guesses_sorted\
    \ = guesses_sorted[guesses_sorted .!= 0]\n    scores_sorted = scores_sorted[guesses_sorted\
    \ .!= 0]\n    \n    guesses_sorted = guesses_sorted[guesses_sorted .!= 0]\n  \
    \  scores_sorted = scores_sorted[guesses_sorted .!= 0]\n    \n    guesses_sorted\
    \ = guesses_sorted[guesses_sorted .!= 0]\n    scores_sorted = scores_sorted[guesses_sorted\
    \ .!= 0]\n    \n    guesses_sorted = guesses_sorted[guesses_sorted .!= 0]\n  \
    \  scores_sorted = scores_sorted[guesses_sorted .!= 0]\n    \n    guesses_sorted\
    \ = guesses_sorted[guesses_sorted .!= 0]\n    scores_sorted = scores_sorted[guesses_sorted\
    \ .!= 0]\n    \n    guesses_sorted = guesses_sorted[guesses_sorted .!= 0]\n  \
    \  scores_sorted = scores_sorted[guesses_sorted .!= 0]\n    \n    guesses_sorted\
    \ = guesses_sorted[guesses_sorted .!= 0]\n    scores_sorted = scores_sorted[guesses_sorted\
    \ .!= 0]\n    \n    guesses_sorted = guesses_sorted[guesses_sorted .!= 0]\n  \
    \  scores_sorted = scores_sorted[guesses_sorted .!= 0]\n    \n    guesses_sorted\
    \ = guesses_sorted[guesses_sorted .!= 0]\n    scores_sorted = scores_sorted[guesses_sorted\
    \ .!= 0]\n    \n    guesses_sorted = guesses_sorted[guesses_sorted .!= 0]\n  \
    \  scores_sorted = scores_sorted[guesses_sorted .!= 0]\n    \n    guesses_sorted\
    \ = guesses_sorted[guesses_sorted .!= 0]\n    scores_sorted = scores_sorted[guesses_sorted\
    \ .!= 0]\n", "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n", " \
    \   \n    guess = sort(guess)\n    game = sort(game)\n    \n    guesses = length(guess)\n\
    \    scores = length(game)\n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \n\
    \    guess = sort(guess)\n    game = sort(game)\n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    guesses =\
    \ guess[:]\n    scores = game[:]\n    \n    guesses.sort()\n    scores.sort()\n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    guesses =\
    \ guess[:]\n    scores = game[:]\n    \n    guesses.sort!()\n    scores.sort!()\n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    ", "    guesses = zeros(length(guess),\
    \ 1)\n    scores = zeros(length(game), 1)\n    for i = 1:length(guess)\n     \
    \   guesses[i] = guess[i]\n        scores[i] = game[i]\n    end\n    \n    guesses\
    \ = guesses[guesses > 0]\n    scores = scores[scores > 0]\n    \n    guesses =\
    \ guesses[guesses != 0]\n    scores = scores[scores != 0]\n    \n    guesses =\
    \ guesses[guesses == scores]\n    scores = scores[scores == scores]\n    \n  \
    \  guesses = guesses[guesses != scores]\n    scores = scores[scores != scores]\n\
    \    \n    guesses = guesses[guesses == scores]\n    scores = scores[scores ==\
    \ scores]\n    \n    guesses = guesses[guesses != scores]\n    scores = scores[scores\
    \ != scores]\n    \n    guesses = guesses[guesses == scores]\n    scores = scores[scores\
    \ == scores]\n    \n    guesses = guesses[guesses != scores]\n    scores = scores[scores\
    \ != scores]\n    \n    guesses = guesses[guesses == scores]\n    scores = scores[scores\
    \ == scores]\n    \n    guesses = guesses[guesses != scores]\n    scores = scores[scores\
    \ != scores]\n    \n    guesses = guesses[guesses == scores]\n    scores = scores[scores\
    \ == scores]\n    \n    guesses = guesses[guesses != scores]\n    scores = scores[scores\
    \ != scores]\n    \n    guesses = guesses[guesses == scores]\n    scores = scores[scores\
    \ == scores]\n    \n    guesses = guesses[guesses != scores]\n    scores = scores[scores\
    \ != scores]\n    \n    guesses = guesses[guesses == scores]\n    scores = scores[scores\
    \ == scores]\n    \n    guesses = guesses[guesses != scores]\n    scores = scores[scores\
    \ != scores]\n    \n    guesses = guesses[guesses == scores]\n    scores = scores[scores\
    \ == scores]\n    \n    guesses = guesses[guesses != scores]\n    scores = scores[scores\
    \ != scores]\n    \n    guesses = guesses[guesses == scores]\n    scores = scores[scores\
    \ == scores]\n    \n    guesses = guesses[guesses != scores]\n    scores = scores[scores\
    \ != scores]\n    \n    guesses = guesses[guesses == scores]\n    scores = ",
  "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    guesses =\
    \ guess[:]\n    scores = game[:]\n    \n    guesses.sort()\n    scores.sort()\n\
    \    \n    guesses = guesses[2:end]\n    scores = scores[2:end]\n    \n    guesses\
    \ = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n    \n    guesses\
    \ = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n    \n    guesses\
    \ = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n    \n    guesses\
    \ = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n    \n    guesses\
    \ = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n    \n    guesses\
    \ = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n    \n    guesses\
    \ = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n    \n    guesses\
    \ = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n    \n    guesses\
    \ = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n    \n    guesses\
    \ = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n    \n    guesses\
    \ = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n    \n    guesses\
    \ = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n    \n    guesses\
    \ = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n    \n    guesses\
    \ = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n    \n    guesses\
    \ = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n    \n    guesses\
    \ = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n    \n    guesses\
    \ = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n    \n    guesses\
    \ = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n", "    \n \
    \   guesses = guess[:]\n    scores = game[:]\n    \n    guesses.sort!()\n    scores.sort!()\n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    ", "    \n    \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n", "    \n    guesses = guess[:]\n    scores = game[:]\n\
    \    \n    guesses.sort!()\n    scores.sort!()\n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    ", "    \n    guesses = Vector{Int64}(guess)\n    scores = Vector{Int64}(game)\n\
    \    \n    guesses_sorted = sort(guesses)\n    scores_sorted = sort(scores)\n\
    \    \n    guesses_index = guesses_sorted\n    scores_index = scores_sorted\n\
    \    \n    guesses_index = guesses_index[guesses_index != 0]\n    scores_index\
    \ = scores_index[scores_index != 0]\n    \n    guesses_index = guesses_index -\
    \ 1\n    scores_index = scores_index - 1\n    \n    guesses_index = guesses_index\
    \ + 1\n    scores_index = scores_index + 1\n    \n    guesses_index = guesses_index\
    \ - 1\n    scores_index = scores_index - 1\n    \n    guesses_index = guesses_index\
    \ + 1\n    scores_index = scores_index + 1\n    \n    guesses_index = guesses_index\
    \ - 1\n    scores_index = scores_index - 1\n    \n    guesses_index = guesses_index\
    \ + 1\n    scores_index = scores_index + 1\n    \n    guesses_index = guesses_index\
    \ - 1\n    scores_index = scores_index - 1\n    \n    guesses_index = guesses_index\
    \ + 1\n    scores_index = scores_index + 1\n    \n    guesses_index = guesses_index\
    \ - 1\n    scores_index = scores_index - 1\n    \n    guesses_index = guesses_index\
    \ + 1\n    scores_index = scores_index + 1\n    \n    guesses_index = guesses_index\
    \ - 1\n    scores_index = scores_index - 1\n    \n    guesses_index = guesses_index\
    \ + 1\n    scores_index = scores_index + 1\n    \n    guesses_index = guesses_index\
    \ - 1\n    scores_index = scores_index - 1\n    \n    guesses_index = guesses_index\
    \ + 1\n    scores_index = scores_index + 1\n    \n    guesses_index = guesses_index\
    \ - 1\n    scores_index = scores_index - 1\n    \n    guesses_index = guesses_index\
    \ + 1\n    scores_index = scores_index + 1\n    \n    guesses_index = guesses_index\
    \ - 1\n    scores_index = scores_index - 1\n    \n    guesses_index = guesses_index\
    \ + 1\n    scores_index = scores_index + 1\n    \n    guesses_index = guesses_index\
    \ - 1\n    scores_index = scores_index - 1\n    \n    guesses_index = guesses_index\
    \ + 1\n    scores_index = scores_index + 1\n    \n    guesses_index = guesses_index\
    \ - 1\n    scores_index = scores_index - 1\n", "    guesses = guess[:]\n    scores\
    \ = game[:]\n    guesses.sort()\n    scores.sort()\n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n", "    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n", "    \n    guesses = Vector{Int64}(guess)\n    scores\
    \ = Vector{Int64}(game)\n    \n    guesses.sort!()\n    scores.sort!()\n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n", "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \n\
    \    guess = sort(guess)\n    game = sort(game)\n    \n    guesses = length(guess)\n\
    \    \n    guesses_correct = 0\n    \n    for g in guess\n        if g == game[guesses_correct]\n\
    \            guesses_correct += 1\n        end\n    end\n    \n    guesses_correct\
    \ = guesses_correct + 1\n    \n    guesses_correct = guesses_correct - 1\n   \
    \ \n    if guesses_correct == guesses\n        return zeros(guesses)\n    else\n\
    \        return abs(guess[guesses_correct] - game[guesses_correct])\n    end\n\
    end\n</cell>\n<code language=julia-1.5>\nguesses = length(guess)\nguesses_correct\
    \ = 0\nfor g in guess\n    if g == game[guesses_correct]\n        guesses_correct\
    \ += 1\n    end\nend\nguesses_correct = guesses_correct + 1\nguesses_correct =\
    \ guesses_correct - 1\nif guesses_correct == guesses\n    return zeros(guesses)\n\
    else\n    return abs(guess[guesses_correct] - game[guesses_correct])\nend\n</cell>\n\
    <code language=julia-1.5>\nguesses = length(guess)\nguesses_correct = 0\nfor g\
    \ in guess\n    if g == game[guesses_correct]\n        guesses_correct += 1\n\
    \    end\nend\nguesses_correct = guesses_correct + 1\nguesses_correct = guesses_correct\
    \ - 1\nif guesses_correct == guesses\n    return zeros(guesses)\nelse\n    return\
    \ abs(guess[guesses_correct] - game[guesses_correct])\nend\n</cell>\n<code language=julia-1.5>\n\
    guesses = length(guess)\nguesses_correct = 0\nfor g in guess\n    if g == game[guesses_correct]\n\
    \        guesses_correct += 1\n    end\nend\nguesses_correct = guesses_correct\
    \ + 1\nguesses_correct = guesses_correct - 1\nif guesses_correct == guesses\n\
    \    return zeros(guesses)\nelse\n    return abs(guess[guesses_correct] - game[guesses_correct])\n\
    end\n</cell>\n<code language=julia-1.5>\nguesses = length(guess)\nguesses_correct\
    \ = 0\nfor g in guess\n    if g == game[guesses_correct]\n        guesses_correct\
    \ += 1\n    end\nend\nguesses_correct = guesses_correct + 1\n", "    guesses =\
    \ guess[:]\n    scores = game[:]\n    \n    guesses.sort!()\n    scores.sort!()\n\
    \    \n    guesses_sorted = guesses[:]\n    scores_sorted = scores[:]\n    \n\
    \    guesses_sorted.sort!()\n    scores_sorted.sort!()\n    \n    guesses_sorted\
    \ = guesses_sorted[guesses_sorted .!= guesses_sorted]\n    scores_sorted = scores_sorted[scores_sorted\
    \ .!= scores_sorted]\n    \n    guesses_sorted = guesses_sorted[guesses_sorted\
    \ .!= guesses_sorted]\n    scores_sorted = scores_sorted[scores_sorted .!= scores_sorted]\n\
    \    \n    guesses_sorted = guesses_sorted[guesses_sorted .!= guesses_sorted]\n\
    \    scores_sorted = scores_sorted[scores_sorted .!= scores_sorted]\n    \n  \
    \  guesses_sorted = guesses_sorted[guesses_sorted .!= guesses_sorted]\n    scores_sorted\
    \ = scores_sorted[scores_sorted .!= scores_sorted]\n    \n    guesses_sorted =\
    \ guesses_sorted[guesses_sorted .!= guesses_sorted]\n    scores_sorted = scores_sorted[scores_sorted\
    \ .!= scores_sorted]\n    \n    guesses_sorted = guesses_sorted[guesses_sorted\
    \ .!= guesses_sorted]\n    scores_sorted = scores_sorted[scores_sorted .!= scores_sorted]\n\
    \    \n    guesses_sorted = guesses_sorted[guesses_sorted .!= guesses_sorted]\n\
    \    scores_sorted = scores_sorted[scores_sorted .!= scores_sorted]\n    \n  \
    \  guesses_sorted = guesses_sorted[guesses_sorted .!= guesses_sorted]\n    scores_sorted\
    \ = scores_sorted[scores_sorted .!= scores_sorted]\n    \n    guesses_sorted =\
    \ guesses_sorted[guesses_sorted .!= guesses_sorted]\n    scores_sorted = scores_sorted[scores_sorted\
    \ .!= scores_sorted]\n    \n    guesses_sorted = guesses_sorted[guesses_sorted\
    \ .!= guesses_sorted]\n    scores_sorted = scores_sorted[scores_sorted .!= scores_sorted]\n\
    \    \n    guesses_sorted = guesses_sorted[guesses_sorted .!= guesses_sorted]\n\
    \    scores_sorted = scores_sorted[scores_sorted .!= scores_sorted]\n    \n  \
    \  ", "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    guesses =\
    \ Vector{Int64}(guess)\n    scores = Vector{Int64}(game)\n    \n    guesses_sorted\
    \ = sort(guesses)\n    scores_sorted = sort(scores)\n    \n    guesses_sorted\
    \ = guesses_sorted[guesses_sorted .!= 0]\n    scores_sorted = scores_sorted[guesses_sorted\
    \ .!= 0]\n    \n    guesses_sorted = guesses_sorted[guesses_sorted .!= 0]\n  \
    \  scores_sorted = scores_sorted[guesses_sorted .!= 0]\n    \n    guesses_sorted\
    \ = guesses_sorted[guesses_sorted .!= 0]\n    scores_sorted = scores_sorted[guesses_sorted\
    \ .!= 0]\n    \n    guesses_sorted = guesses_sorted[guesses_sorted .!= 0]\n  \
    \  scores_sorted = scores_sorted[guesses_sorted .!= 0]\n    \n    guesses_sorted\
    \ = guesses_sorted[guesses_sorted .!= 0]\n    scores_sorted = scores_sorted[guesses_sorted\
    \ .!= 0]\n    \n    guesses_sorted = guesses_sorted[guesses_sorted .!= 0]\n  \
    \  scores_sorted = scores_sorted[guesses_sorted .!= 0]\n    \n    guesses_sorted\
    \ = guesses_sorted[guesses_sorted .!= 0]\n    scores_sorted = scores_sorted[guesses_sorted\
    \ .!= 0]\n    \n    guesses_sorted = guesses_sorted[guesses_sorted .!= 0]\n  \
    \  scores_sorted = scores_sorted[guesses_sorted .!= 0]\n    \n    guesses_sorted\
    \ = guesses_sorted[guesses_sorted .!= 0]\n    scores_sorted = scores_sorted[guesses_sorted\
    \ .!= 0]\n    \n    guesses_sorted = guesses_sorted[guesses_sorted .!= 0]\n  \
    \  scores_sorted = scores_sorted[guesses_sorted .!= 0]\n    \n    guesses_sorted\
    \ = guesses_sorted[guesses_sorted .!= 0]\n    scores_sorted = scores_sorted[guesses_sorted\
    \ .!= 0]\n    \n    guesses_sorted = guesses_sorted[guesses_sorted .!= 0]\n  \
    \  scores_sorted = scores_sorted[guesses_sorted .!= 0]\n    \n    guesses_sorted\
    \ = guesses_sorted[guesses_sorted .!= 0]\n    scores_sorted = scores_sorted[guesses_sorted\
    \ .!= 0]\n    \n", "    \n    \n    \n    \n    \n    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n",
  "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n", "    guesses = guess[:]\n    scores =\
    \ game[:]\n    guesses.sort()\n    scores.sort()\n    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n", "    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n", "    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n", "    \n    guess = sort(guess)\n    game = sort(game)\n    \n    guesses\
    \ = zeros(length(guess), 1)\n    \n    for i = 1:length(guess)\n        guesses[i]\
    \ = sum(guess == game[i])\n    end\n    \n    return guesses\nend\n</cell>\n<code\
    \ language=julia-1.5>\n@time compare([1,2,3,4,5,1], [1,2,3,4,2,-2])\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the number of matches between\
    \ two vectors of equal length. \nThe function should take two vectors of equal\
    \ length as input, and return an integer denoting the number of matches.\nThe\
    \ function should return -1 if the two vectors are of different lengths.\nThe\
    \ function should return 0 if the two vectors are of equal length, and 1 otherwise.\n\
    The function should return an error if the two vectors are of different lengths.",
  "    guesses = guess[:]\n    scores = game[:]\n    \n    guesses.sort!()\n    scores.sort!()\n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    ", "    \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n", "    \n    guess = sort(guess)\n    game = sort(game)\n\
    \    \n    guesses = zeros(length(guess), 1)\n    \n    for i = 1:length(guess)\n\
    \        guesses[i] = guess[i] - game[i]\n    end\n    \n    return guesses\n\
    end\n</cell>\n<code language=julia-1.5>\n@time compare([1,2,3,4,5,1], [1,2,3,4,2,-2])\n\
    </cell>\n<code language=julia-1.5>\n@time compare([0,5,0,0,0,4], [4,1,1,0,0,-2])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes in a vector of scores\
    \ and a vector of guesses and returns a vector of how far off each guess was.\
    \ \nThe function should return an array of length equal to the length of the guesses\
    \ vector, where each element is the absolute difference between the guess and\
    \ the score.\nThe function should also return an array of the same length as the\
    \ guesses vector, where each element is the absolute difference between the guess\
    \ and the score.\nThe function should return an array of the same length as the\
    \ guesses vector, where each element is the absolute difference between the guess\
    \ and the score.", "    guesses = zeros(length(guess), 1)\n    for i = 1:length(guess)\n\
    \        guesses[i] = guess[i]\n    end\n    scores = zeros(length(game), 1) \n\
    \    for i = 1:length(game)\n        scores[i] = game[i]\n    end\n    \n    guesses_sorted\
    \ = sort(guesses)\n    scores_sorted = sort(scores)\n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    ", "    \n    guess\
    \ = sort(guess)\n    game = sort(game)\n    \n    guesses = zeros(length(guess))\n\
    \    \n    for i = 1:length(guess)\n        guesses[i] = guess[i] - game[i]\n\
    \    end\n    \n    return guesses\nend\n</cell>\n<code language=julia-1.5>\n\
    @time compare([1,2,3,4,5,1], [1,2,3,4,2,-2])\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that will take two vectors of integers and return a new vector of\
    \ the same length\ndenoting how far off each guess was. If they have guessed correctly,\
    \ the value is 0, and if not, the value is the absolute difference between the\
    \ guess and the score.", "    \n    guess = sort(guess)\n    game = sort(game)\n\
    \    \n    guesses = zeros(length(guess), 1)\n    \n    for i = 1:length(guess)\n\
    \        guesses[i] = guess[i] - game[i]\n    end\n    \n    return guesses\n\
    end\n</cell>\n<code language=julia-1.5>\n@time compare([1,2,3,4,5,1], [1,2,3,4,2,-2])\n\
    </cell>\n<code language=julia-1.5>\n@time compare([0,5,0,0,0,4], [4,1,1,0,0,-2])\n\
    </cell>\n<text>\nExercise: Write a function that takes a vector of scores and\
    \ a vector of guesses and returns a vector of how far off each guess was. Your\
    \ function should return an array of length equal to the length of guesses, where\
    \ each element is the absolute difference between the guess and the score.", " \
    \   guesses = zeros(length(guess), 1)\n    scores = zeros(length(game), 1)\n \
    \   for i = 1:length(guess)\n        guesses[i] = guess[i]\n        scores[i]\
    \ = game[i]\n    end\n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    ", "    \n    \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n", "    \n    guess = sort(guess)\n    game = sort(game)\n\
    \    \n    diff = zeros(length(guess))\n    \n    for i = 1:length(guess)\n  \
    \      \n        if guess[i] == game[i]\n            diff[i] = 0\n        else\n\
    \            diff[i] = abs(guess[i] - game[i])\n        end\n    end\n    \n \
    \   return diff\nend\n</cell>\n<code language=julia-1.5>\n@time compare(game,\
    \ guess)\n</cell>\n<text>\nExercise: Write a function that takes a vector of scores\
    \ and a vector of guesses and returns the number of matches.", "    \n    guesses\
    \ = guess[:]\n    scores = game[:]\n    \n    guesses.sort!()\n    scores.sort!()\n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    ", "    guesses = guess[:]\n    scores\
    \ = game[:]\n    \n    guesses.sort!()\n    scores.sort!()\n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    ", "    \n    \n    \n    \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n", "    \n    guesses = zeros(length(guess), 1)\n    scores = zeros(length(game),\
    \ 1)\n    \n    for i = 1:length(guess)\n        guesses[i] = guess[i]\n     \
    \   scores[i] = game[i]\n    end\n    \n    guesses = sort(guesses)\n    scores\
    \ = sort(scores)\n    \n    guesses = guesses[1:length(guesses)]\n    scores =\
    \ scores[1:length(scores)]\n    \n    guesses = guesses[2:length(guesses)]\n \
    \   scores = scores[2:length(scores)]\n    \n    guesses = guesses[2:length(guesses)]\n\
    \    scores = scores[2:length(scores)]\n    \n    guesses = guesses[2:length(guesses)]\n\
    \    scores = scores[2:length(scores)]\n    \n    guesses = guesses[2:length(guesses)]\n\
    \    scores = scores[2:length(scores)]\n    \n    guesses = guesses[2:length(guesses)]\n\
    \    scores = scores[2:length(scores)]\n    \n    guesses = guesses[2:length(guesses)]\n\
    \    scores = scores[2:length(scores)]\n    \n    guesses = guesses[2:length(guesses)]\n\
    \    scores = scores[2:length(scores)]\n    \n    guesses = guesses[2:length(guesses)]\n\
    \    scores = scores[2:length(scores)]\n    \n    guesses = guesses[2:length(guesses)]\n\
    \    scores = scores[2:length(scores)]\n    \n    guesses = guesses[2:length(guesses)]\n\
    \    scores = scores[2:length(scores)]\n    \n    guesses = guesses[2:length(guesses)]\n\
    \    scores = scores[2:length(scores)]\n    \n    guesses = guesses[2:length(guesses)]\n\
    \    scores = scores[2:length(scores)]\n    \n    guesses = guesses[2:length(guesses)]\n\
    \    scores = scores[2:length(scores)]\n    \n    guesses = guesses[2:length(guesses)]\n\
    \    scores = scores[2:length(scores)]\n    \n    guesses = guesses[2:length(guesses)]\n\
    \    scores = scores[2:length(scores)]\n    \n    guesses = guesses[2:length(guesses)]\n\
    \    scores = scores[2:length(scores)]\n    \n    guesses = guesses[2:length(guesses)]\n\
    \    scores = scores[2:length(scores)]\n    \n    guesses = guesses[2:length(guesses)]\n\
    \    scores = scores[2:length(scores)]\n    \n    guesses = guesses[2:length(guesses)]\n\
    \    scores = ", "    guesses = length(guess)\n    scores = length(game)\n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n", "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n", " \
    \   \n    guesses = zeros(length(guess), length(game))\n    \n    for i = 1:length(guess)\n\
    \        guesses[i, :] = guess[i]\n    end\n    \n    for i = 1:length(game)\n\
    \        guesses[:, i] = guesses[:, i] - game[i]\n    end\n    \n    guesses =\
    \ guesses - maximum(guesses)\n    \n    return guesses\nend\n</cell>\n<code language=julia-1.0>\n\
    compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n</cell>\n<code language=julia-1.0>\n\
    compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n</cell>\n<text>\nExercise 2\n\
    Write a function that will take in a vector of scores and a vector of guesses,\
    \ and will return the number of correct guesses.", "    guesses = zeros(length(guess),\
    \ 1)\n    scores = zeros(length(game), 1)\n    for i = 1:length(guess)\n     \
    \   guesses[i] = guess[i]\n        scores[i] = game[i]\n    end\n    \n    guesses\
    \ = sort(guesses)\n    scores = sort(scores)\n    \n    guesses = guesses[2:end]\n\
    \    scores = scores[2:end]\n    \n    guesses = guesses[guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesse",
  "    \n    guesses = guess[:]\n    scores = game[:]\n    \n    guesses.sort()\n\
    \    scores.sort()\n    \n    guesses = guesses[2:end]\n    scores = scores[2:end]\n\
    \    \n    guesses = guesses[2:end]\n    scores = scores[2:end]\n    \n    guesses\
    \ = guesses[2:end]\n    scores = scores[2:end]\n    \n    guesses = guesses[2:end]\n\
    \    scores = scores[2:end]\n    \n    guesses = guesses[2:end]\n    scores =\
    \ scores[2:end]\n    \n    guesses = guesses[2:end]\n    scores = scores[2:end]\n\
    \    \n    guesses = guesses[2:end]\n    scores = scores[2:end]\n    \n    guesses\
    \ = guesses[2:end]\n    scores = scores[2:end]\n    \n    guesses = guesses[2:end]\n\
    \    scores = scores[2:end]\n    \n    guesses = guesses[2:end]\n    scores =\
    \ scores[2:end]\n    \n    guesses = guesses[2:end]\n    scores = scores[2:end]\n\
    \    \n    guesses = guesses[2:end]\n    scores = scores[2:end]\n    \n    guesses\
    \ = guesses[2:end]\n    scores = scores[2:end]\n    \n    guesses = guesses[2:end]\n\
    \    scores = scores[2:end]\n    \n    guesses = guesses[2:end]\n    scores =\
    \ scores[2:end]\n    \n    guesses = guesses[2:end]\n    scores = scores[2:end]\n\
    \    \n    guesses = guesses[2:end]\n    scores = scores[2:end]\n    \n    guesses\
    \ = guesses[2:end]\n    scores = scores[2:end]\n    \n    guesses = guesses[2:end]\n\
    \    scores = scores[2:end]\n    \n    guesses = guesses[2:end]\n    scores =\
    \ scores[2:end]\n    \n    guesses = guesses[2:end]\n    scores = scores[2:end]\n\
    \    \n    guesses = guesses[2:end]\n    scores = scores[2:end]\n    \n    guesses\
    \ = guesses[2:end]\n    scores = scores[2:end]\n    \n    guesses = guesses[2:end]\n\
    \    scores = scores[2:end]\n    \n    guesses = guesses[2:end]\n    scores =\
    \ scores[2:end]\n    \n    guesses = guesses[2:end]\n    scores = scores[2:end]\n\
    \    \n    guesses = guesses[2:end]\n    scores = scores[2:end]\n", "    \n  \
    \  guesses = Vector{Int64}(guess)\n    scores = Vector{Int64}(game)\n    \n  \
    \  guesses = sort(guesses)\n    scores = sort(scores)\n    \n    guesses = guesses[guesses..end]\n\
    \    scores = scores[scores..end]\n    \n    guesses = guesses..guesses.end\n\
    \    scores = scores..scores.end\n    \n    guesses = guesses..guesses.end\n \
    \   scores = scores..scores.end\n    \n    guesses = guesses..guesses.end\n  \
    \  scores = scores..scores.end\n    \n    guesses = guesses..guesses.end\n   \
    \ scores = scores..scores.end\n    \n    guesses = guesses..guesses.end\n    scores\
    \ = scores..scores.end\n    \n    guesses = guesses..guesses.end\n    scores =\
    \ scores..scores.end\n    \n    guesses = guesses..guesses.end\n    scores = scores..scores.end\n\
    \    \n    guesses = guesses..guesses.end\n    scores = scores..scores.end\n \
    \   \n    guesses = guesses..guesses.end\n    scores = scores..scores.end\n  \
    \  \n    guesses = guesses..guesses.end\n    scores = scores..scores.end\n   \
    \ \n    guesses = guesses..guesses.end\n    scores = scores..scores.end\n    \n\
    \    guesses = guesses..guesses.end\n    scores = scores..scores.end\n    \n \
    \   guesses = guesses..guesses.end\n    scores = scores..scores.end\n    \n  \
    \  guesses = guesses..guesses.end\n    scores = scores..scores.end\n    \n   \
    \ guesses = guesses..guesses.end\n    scores = scores..scores.end\n    \n    guesses\
    \ = guesses..guesses.end\n    scores = scores..scores.end\n    \n    guesses =\
    \ guesses..guesses.end\n    scores = scores..scores.end\n    \n    guesses = guesses..guesses.end\n\
    \    scores = scores..scores.end\n    \n    guesses = guesses..guesses.end\n \
    \   scores = scores..scores.end\n    \n    guesses = guesses..guesses.end\n  \
    \  scores = scores..scores.end\n    \n    guesses = guesses..", "    \n    guess\
    \ = sort(guess)\n    game = sort(game)\n    \n    diff = zeros(length(guess))\n\
    \    \n    for i = 1:length(guess)\n        diff[i] = abs(guess[i] - game[i])\n\
    \    end\n    \n    return diff\nend\n</cell>\n<code language=julia-1.5>\n@time\
    \ compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n</cell>\n<text>\nExercise: Write a function\
    \ that will take a vector of scores and a vector of guesses and return the number\
    \ of matches.", "    \n    guesses = zeros(length(game))\n    \n    for i = 1:length(guess)\n\
    \        guesses[i] = guess[i] - game[i]\n    end\n    \n    return guesses\n\
    end\n</cell>\n<code language=julia-1.5>\ncompare([1, 2, 3, 4, 5, 1], [1, 2, 3,\
    \ 4, 2, -2])\n</cell>\n<code language=julia-1.5>\ncompare([0, 5, 0, 0, 0, 4],\
    \ [4, 1, 1, 0, 0, -2])\n</cell>\n<text>\nExercise: Write a function that returns\
    \ the number of matches between two vectors of equal length. \n    \n    \n  \
    \  example:", "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n", " \
    \   guesses = guess[:]\n    scores = game[:]\n    guesses.sort!()\n    scores.sort!()\n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    ", "    \n    guess = sort(guess)\n\
    \    game = sort(game)\n    \n    diff = zeros(length(guess))\n    \n    for i\
    \ = 1:length(guess)\n        diff[i] = abs(guess[i] - game[i])\n    end\n    \n\
    \    return diff\nend\n</cell>\n<code language=julia-1.5>\n# test your code\n\
    @test compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n@test compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that returns the number of matches between two given vectors of scores and guesses.",
  "    guesses = guess[:]\n    scores = game[:]\n    \n    guesses.sort()\n    scores.sort()\n\
    \    \n    guesses = guesses[2:end]\n    scores = scores[2:end]\n    \n    guesses\
    \ = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n    \n    guesses\
    \ = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n    \n    guesses\
    \ = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n    \n    guesses\
    \ = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n    \n    guesses\
    \ = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n    \n    guesses\
    \ = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n    \n    guesses\
    \ = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n    \n    guesses\
    \ = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n    \n    guesses\
    \ = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n    \n    guesses\
    \ = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n    \n    guesses\
    \ = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n    \n    guesses\
    \ = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n    \n    guesses\
    \ = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n    \n    guesses\
    \ = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n    \n    guesses\
    \ = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n    \n    guesses\
    \ = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n    \n    guesses\
    \ = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n    \n    guesses\
    \ = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n    \n", " \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    guesses =\
    \ guess[:]\n    scores = game[:]\n    \n    guesses.sort!()\n    scores.sort!()\n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    ", "    \n    guesses = zeros(length(guess),\
    \ 1)\n    scores = zeros(length(game), 1)\n    \n    for i = 1:length(guess)\n\
    \        guesses[i] = guess[i]\n        scores[i] = game[i]\n    end\n    \n \
    \   guesses = guesses./sum(guesses)\n    scores = scores./sum(scores)\n    \n\
    \    diff = guesses - scores\n    \n    diff = abs.(diff)\n    \n    return diff\n\
    end\n</cell>\n<code language=julia-1.5>\n@time compare([1,2,3,4,5,1], [1,2,3,4,2,-2])\n\
    </cell>\n<code language=julia-1.5>\n@time compare([0,5,0,0,0,4], [4,1,1,0,0,-2])\n\
    </cell>\n<text>\nExercise: Write a function that takes as input a vector of scores\
    \ and a vector of guesses, and returns the number of matches.", "    \n    guess\
    \ = sort(guess)\n    game = sort(game)\n    \n    guesses = length(guess)\n  \
    \  scores = length(game)\n    \n    guesses_correct = 0\n    \n    for i = 1:guesses\n\
    \        if guess[i] == game[i]\n            guesses_correct += 1\n        end\n\
    \    end\n    \n    guesses_correct = guesses_correct / guesses\n    \n    return\
    \ guesses_correct\nend\n</cell>\n<code language=julia-1.5>\nguesses = compare([1,2,3,4,5,1],\
    \ [1,2,3,4,2,-2])\n</cell>\n<code language=julia-1.5>\nguesses\n</cell>\n<code\
    \ language=julia-1.5>\n@assert guesses == [0, 0, 0, 0, 3, 3]\n</cell>\n<text>\n\
    Exercise: Write a function that returns the number of matches between two vectors\
    \ of equal length. \n    \n    \n    example:", "    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n", "    guess = sort(guess)\n    game = sort(game)\n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n", "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n", " \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    guess = sort(guess)\n\
    \    game = sort(game)\n    \n    guesses = length(guess)\n    scores = length(game)\n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n", "    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n", "    \n    guess = sort(guess)\n    game = sort(game)\n\
    \    \n    guesses = length(guess)\n    scores = length(game)\n    \n    guesses_correct\
    \ = 0\n    \n    for i = 1:guesses\n        if guess[i] == game[i]\n         \
    \   guesses_correct += 1\n        end\n    end\n    \n    guesses_correct = guesses_correct\
    \ / guesses\n    \n    return guesses_correct\nend\n</cell>\n<code language=julia-1.5>\n\
    guesses_correct = compare([1,2,3,4,5,1], [1,2,3,4,2,-2])\n</cell>\n<code language=julia-1.5>\n\
    guesses_correct\n</cell>\n<code language=julia-1.5>", "    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n", "    \n    guesses = Vector{Int64}(guess)\n\
    \    scores = Vector{Int64}(game)\n    \n    guesses_sorted = sort(guesses)\n\
    \    scores_sorted = sort(scores)\n    \n    guesses_index = guesses_sorted.index\n\
    \    scores_index = scores_sorted.index\n    \n    guesses_index2 = guesses_index\
    \ + 1\n    scores_index2 = scores_index + 1\n    \n    guesses_index3 = guesses_index2\
    \ + 1\n    scores_index3 = scores_index2 + 1\n    \n    guesses_index4 = guesses_index3\
    \ + 1\n    scores_index4 = scores_index3 + 1\n    \n    guesses_index5 = guesses_index4\
    \ + 1\n    scores_index5 = scores_index4 + 1\n    \n    guesses_index6 = guesses_index5\
    \ + 1\n    scores_index6 = scores_index5 + 1\n    \n    guesses_index7 = guesses_index6\
    \ + 1\n    scores_index7 = scores_index6 + 1\n    \n    guesses_index8 = guesses_index7\
    \ + 1\n    scores_index8 = scores_index7 + 1\n    \n    guesses_index9 = guesses_index8\
    \ + 1\n    scores_index9 = scores_index8 + 1\n    \n    guesses_index10 = guesses_index9\
    \ + 1\n    scores_index10 = scores_index9 + 1\n    \n    guesses_index11 = guesses_index10\
    \ + 1\n    scores_index11 = scores_index10 + 1\n    \n    guesses_index12 = guesses_index11\
    \ + 1\n    scores_index12 = scores_index11 + 1\n    \n    guesses_index13 = guesses_index12\
    \ + 1\n    scores_index13 = scores_index12 + 1\n    \n    guesses_index14 = guesses_index13\
    \ + 1\n    scores_index14 = scores_index13 + 1\n    \n    guesses_index15 = guesses_index14\
    \ + 1\n    scores_index15 = scores_index14 + 1\n    \n    guesses_index16 = guesses_index15\
    \ + 1\n    scores_index16 = scores_index15 + 1\n    \n    guesses_index17 = guesses_index16\
    \ + 1\n    scores_index17 = scores_index16 + 1\n    \n    guesses_index18 = guesses_index17\
    \ + 1\n    scores_index18 = scores_index17 + 1\n    \n    guesses_index19 = guesses_index18\
    \ + 1\n    scores_index19 = scores_index18 + 1\n    \n", "    guesses = zeros(length(guess),\
    \ 1)\n    scores = zeros(length(game), 1)\n    for i = 1:length(guess)\n     \
    \   guesses[i] = guess[i]\n        scores[i] = game[i]\n    end\n    \n    guesses\
    \ = guesses..guesses..guesses..guesses..guesses..guesses\n    scores = scores..scores..scores..scores..scores..scores\n\
    \    \n    guesses = sort(guesses)\n    scores = sort(scores)\n    \n    guesses\
    \ = guesses..guesses..guesses..guesses..guesses..guesses\n    scores = scores..scores..scores..scores..scores..scores\n\
    \    \n    guesses = guesses..guesses..guesses..guesses..guesses..guesses\n  \
    \  scores = scores..scores..scores..scores..scores..scores\n    \n    guesses\
    \ = guesses..guesses..guesses..guesses..guesses..guesses\n    scores = scores..scores..scores..scores..scores..scores\n\
    \    \n    guesses = guesses..guesses..guesses..guesses..guesses..guesses\n  \
    \  scores = scores..scores..scores..scores..scores..scores\n    \n    guesses\
    \ = guesses..guesses..guesses..guesses..guesses..guesses\n    scores = scores..scores..scores..scores..scores..scores\n\
    \    \n    guesses = guesses..guesses..guesses..guesses..guesses..guesses\n  \
    \  scores = scores..scores..scores..scores..scores..scores\n    \n    guesses\
    \ = guesses..guesses..guesses..guesses..guesses..guesses\n    scores = scores..scores..scores..scores..scores..scores\n\
    \    \n    guesses = guesses..guesses..guesses..guesses..guesses..guesses\n  \
    \  scores = scores..scores..scores..scores..scores..scores\n    \n    guesses\
    \ = guesses..guesses..guesses..guesses..guesses..guesses\n    scores = scores..scores..scores..scores..scores..scores\n\
    \    \n    guesses = guesses..guesses..guesses..guesses..guesses..gues", "   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n", "    guesses = zeros(length(guess), 1)\n\
    \    scores = zeros(length(game), 1)\n    for i = 1:length(guess)\n        guesses[i]\
    \ = guess[i]\n        scores[i] = game[i]\n    end\n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    ", "  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    guess = sort(guess)\n\
    \    game = sort(game)\n    \n    diff = zeros(length(guess), length(game))\n\
    \    for i = 1:length(guess)\n        for j = 1:length(game)\n            if guess[i]\
    \ == game[j]\n                diff[i,j] = 0\n            else\n              \
    \  diff[i,j] = abs(guess[i] - game[j])\n            end\n        end\n    end\n\
    \    \n    return diff\nend\n</cell>\n<code language=julia-1.5>\n@time compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n\
    </cell>\n<code language=julia-1.5>\n@time compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n\
    </cell>\n<text>\nExercise\nWrite a function that takes a vector of scores and\
    \ a vector of guesses, and returns a vector of how far off each guess was. \n\
    The function should return an array of length equal to the length of the guesses\
    \ vector, where each element is the absolute difference between the guess and\
    \ the score.", "    \n    guess = sort(guess)\n    game = sort(game)\n    \n \
    \   guesses = length(guess)\n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n", "    guesses = guess[:]\n    scores = game[:]\n    guesses.sort!()\n\
    \    scores.sort!()\n    \n    \n    \n    \n    \n    \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    ",
  "    \n    guesses = zeros(length(guess)) \n    \n    for i = 1:length(guess)\n\
    \        guesses[i] = guess[i] - game[i]\n    end\n    \n    guesses = guesses[guesses\
    \ > 0]\n    \n    guesses = guesses[guesses < length(game)]\n    \n    guesses\
    \ = guesses[guesses != 0]\n    \n    return guesses\nend\n</cell>\n<code language=julia-1.5>\n\
    compare([1,2,3,4,5,1], [1,2,3,4,2,-2])\n</cell>\n<code language=julia-1.5>\ncompare([0,5,0,0,0,4],\
    \ [4,1,1,0,0,-2])\n</cell>\n<code language=julia-1.5>\ncompare([1,2,3,4,5,1],\
    \ [1,2,3,4,2,-2])\n</cell>\n<code language=julia-1.5>\ncompare([0,5,0,0,0,4],\
    \ [4,1,1,0,0,-2])\n</cell>\n<code language=julia-1.5>\ncompare([1,2,3,4,5,1],\
    \ [1,2,3,4,2,-2])\n</cell>\n<code language=julia-1.5>\ncompare([0,5,0,0,0,4],\
    \ [4,1,1,0,0,-2])\n</cell>\n<code language=julia-1.5>\ncompare([1,2,3,4,5,1],\
    \ [1,2,3,4,2,-2])\n</cell>\n<code language=julia-1.5>\ncompare([0,5,0,0,0,4],\
    \ [4,1,1,0,0,-2])\n</cell>\n<code language=julia-1.5>\ncompare([1,2,3,4,5,1],\
    \ [1,2,3,4,2,-2])\n</cell>\n<code language=julia-1.5>\ncompare([0,5,0,0,0,4],\
    \ [4,1,1,0,0,-2])\n</cell>\n<code language=julia-1.5>\ncompare([1,2,3,4,5,1],\
    \ [1,2,3,4,2,-2])\n</cell>\n<code language=julia-1.5>\ncompare([0,5,0,0,0,4],\
    \ [4,1,1,0,0,-2])\n</cell>\n<code language=julia-1.5>\ncompare([1,2,3,4,5,1],\
    \ [1,2,3,4,2,-2])\n</cell>\n<code language=julia-1.5>\ncompare([0,5,0,0,0,4],\
    \ [4,1,1,0,0,-2])\n</cell>\n<code language=julia-1.5>\ncompare([1,2,3,4,5,1],\
    \ [1,2,3,4,2,-2])\n</cell>\n<code language=julia-1.5>\ncompare([0,5,0,0,0,4],\
    \ [4,1,1,0,0,-2])\n</cell>\n<code language=julia-1.5>\ncompare([1,2,3,4,5,1],\
    \ [1,2,3,4,2,-2])\n</cell>\n<code language=julia-1.5>\ncompare([0,5,0,0,0,4],\
    \ [4,1,1,0,0,-2])\n</cell>\n<code language=julia-1.5>\ncompare([1,2,3,4,5,1],\
    \ [1,2,3,4,2,-2])\n", "    \n    guesses = guess[:]\n    scores = game[:]\n  \
    \  \n    guesses.sort()\n    scores.sort()\n    \n    guesses = guesses[2:end]\n\
    \    scores = scores[2:end]\n    \n    guesses = guesses[guesses..end-1]\n   \
    \ scores = scores[guesses..end-1]\n    \n    guesses = guesses[guesses..end-2]\n\
    \    scores = scores[guesses..end-2]\n    \n    guesses = guesses[guesses..end-3]\n\
    \    scores = scores[guesses..end-3]\n    \n    guesses = guesses[guesses..end-4]\n\
    \    scores = scores[guesses..end-4]\n    \n    guesses = guesses[guesses..end-5]\n\
    \    scores = scores[guesses..end-5]\n    \n    guesses = guesses[guesses..end-6]\n\
    \    scores = scores[guesses..end-6]\n    \n    guesses = guesses[guesses..end-7]\n\
    \    scores = scores[guesses..end-7]\n    \n    guesses = guesses[guesses..end-8]\n\
    \    scores = scores[guesses..end-8]\n    \n    guesses = guesses[guesses..end-9]\n\
    \    scores = scores[guesses..end-9]\n    \n    guesses = guesses[guesses..end-10]\n\
    \    scores = scores[guesses..end-10]\n    \n    guesses = guesses[guesses..end-11]\n\
    \    scores = scores[guesses..end-11]\n    \n    guesses = guesses[guesses..end-12]\n\
    \    scores = scores[guesses..end-12]\n    \n    guesses = guesses[guesses..end-13]\n\
    \    scores = scores[guesses..end-13]\n    \n    guesses = guesses[guesses..end-14]\n\
    \    scores = scores[guesses..end-14]\n    \n    guesses = guesses[guesses..end-15]\n\
    \    scores = scores[guesses..end-15]\n    \n    guesses = guesses[guesses..end-16]\n\
    \    scores = scores[guesses..end-16]\n    \n    guesses = guesses[guesses..end-17]\n\
    \    scores = scores[guesses..", "    guess = sort(guess)\n    game = sort(game)\n\
    \    guess = guess[guess[2] .== 0]\n    game = game[game[2] .== 0]\n    guess\
    \ = guess[guess[1] .== 0]\n    game = game[game[1] .== 0]\n    guess = guess[guess[1]\
    \ .!= 0]\n    game = game[game[1] .!= 0]\n    guess = guess[guess[1] .!= 0]\n\
    \    game = game[game[1] .!= 0]\n    guess = guess[guess[1] .!= 0]\n    game =\
    \ game[game[1] .!= 0]\n    guess = guess[guess[1] .!= 0]\n    game = game[game[1]\
    \ .!= 0]\n    guess = guess[guess[1] .!= 0]\n    game = game[game[1] .!= 0]\n\
    \    guess = guess[guess[1] .!= 0]\n    game = game[game[1] .!= 0]\n    guess\
    \ = guess[guess[1] .!= 0]\n    game = game[game[1] .!= 0]\n    guess = guess[guess[1]\
    \ .!= 0]\n    game = game[game[1] .!= 0]\n    guess = guess[guess[1] .!= 0]\n\
    \    game = game[game[1] .!= 0]\n    guess = guess[guess[1] .!= 0]\n    game =\
    \ game[game[1] .!= 0]\n    guess = guess[guess[1] .!= 0]\n    game = game[game[1]\
    \ .!= 0]\n    guess = guess[guess[1] .!= 0]\n    game = game[game[1] .!= 0]\n\
    \    guess = guess[guess[1] .!= 0]\n    game = game[game[1] .!= 0]\n    guess\
    \ = guess[guess[1] .!= 0]\n    game = game[game[1] .!= 0]\n    guess = guess[guess[1]\
    \ .!= 0]\n    game = game[game[1] .!= 0]\n    guess = guess[guess[1] .!= 0]\n\
    \    game = game[game[1] .!= 0]\n    guess = guess[guess[1] .!= 0]\n    game =\
    \ game[game[1] .!= 0]\n    guess = guess[guess[1] .!= 0]\n    game = game[game[1]\
    \ .!= 0]\n    guess = guess[guess[1] .!= 0]\n    game = game[game[1] .!= 0]\n\
    \    guess = guess[guess[1] .!= 0]\n    game = game[game[1] .!= 0]\n    guess\
    \ = guess[guess[1] .!= 0]\n    game", "    \n    guesses = guess[:]\n    scores\
    \ = game[:]\n    \n    guesses.sort!()\n    scores.sort!()\n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    ", "    \n    \n    \n    \n    \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n", "    \n    guesses = zeros(length(guess), 1)\n    \n    for i = 1:length(guess)\n\
    \        guesses[i] = guess[i]\n    end\n    \n    scores = zeros(length(game),\
    \ 1)\n    \n    for i = 1:length(game)\n        scores[i] = game[i]\n    end\n\
    \    \n    guesses = guesses./sum(guesses)\n    scores = scores./sum(scores)\n\
    \    \n    diff = guesses - scores\n    \n    diff = abs.(diff)\n    \n    return\
    \ diff\nend\n</cell>\n<code language=julia-1.5>\n@time compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n\
    </cell>\n<code language=julia-1.5>\n@time compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n\
    </cell>\n<text>\nExercise: Write a function that returns the number of matches\
    \ between two vectors of equal length. \n    \n    \n    example:", "    guesses\
    \ = guess[:]\n    scores = game[:]\n    guesses.sort!()\n    scores.sort!()\n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    ", "    guess = sort(guess)\n\
    \    game = sort(game)\n    \n    guesses = zeros(length(guess))\n    \n    for\
    \ i = 1:length(guess)\n        guesses[i] = guess[i] - game[i]\n    end\n    \n\
    \    return guesses\nend\n</cell>\n<code language=julia-1.0>\n@time compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n\
    </cell>\n<code language=julia-1.0>\n@time compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n\
    </cell>\n<text>\nExercise: Write a function that takes a vector of scores and\
    \ a vector of guesses, and returns the number of correct guesses.", "    guesses\
    \ = zeros(length(guess), 1)\n    scores = zeros(length(game), 1)\n    \n    for\
    \ i = 1:length(guess)\n        guesses[i] = guess[i]\n        scores[i] = game[i]\n\
    \    end\n    \n    guesses = guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..gues",
  "    \n    guess = sort(guess)\n    game = sort(game)\n    \n    guesses = zeros(length(guess),\
    \ 1)\n    \n    for i = 1:length(guess)\n        guesses[i] = guess[i] - game[i]\n\
    \    end\n    \n    return guesses\nend\n</cell>\n<code language=julia-1.0>\n\
    @test compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n</cell>\n<code language=julia-1.0>\n\
    @test compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n</cell>\n<text>\nExercise:\
    \ Write a function that returns the number of matches between two vectors of equal\
    \ length. \n    \n    \n    example:", "    \n    guess = sort(guess)\n    game\
    \ = sort(game)\n    \n    guesses = zeros(length(guess), 1)\n    \n    for i =\
    \ 1:length(guess)\n        guesses[i] = guess[i] - game[i]\n    end\n    \n  \
    \  return guesses\nend\n</cell>\n<code language=julia-1.5>\n@time compare([1,2,3,4,5,1],\
    \ [1,2,3,4,2,-2])\n</cell>\n<code language=julia-1.5>\n@time compare([0,5,0,0,0,4],\
    \ [4,1,1,0,0,-2])\n</cell>\n<text>\nExercise 2\nWrite a function that takes a\
    \ vector of scores and a vector of guesses, and returns a vector of how far off\
    \ each guess was. \nThe function should return an array of length length(guesses),\
    \ where each element is the absolute difference between the guess and the score.",
  "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n", "    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n", "    \n    guesses = guess[:]\n    scores = game[:]\n  \
    \  \n    guesses.sort!()\n    scores.sort!()\n    \n    guesses.reverse!()\n \
    \   scores.reverse!()\n    \n    guesses.reverse!()\n    scores.reverse!()\n \
    \   \n    guesses.reverse!()\n    scores.reverse!()\n    \n    guesses.reverse!()\n\
    \    scores.reverse!()\n    \n    guesses.reverse!()\n    scores.reverse!()\n\
    \    \n    guesses.reverse!()\n    scores.reverse!()\n    \n    guesses.reverse!()\n\
    \    scores.reverse!()\n    \n    guesses.reverse!()\n    scores.reverse!()\n\
    \    \n    guesses.reverse!()\n    scores.reverse!()\n    \n    guesses.reverse!()\n\
    \    scores.reverse!()\n    \n    guesses.reverse!()\n    scores.reverse!()\n\
    \    \n    guesses.reverse!()\n    scores.reverse!()\n    \n    guesses.reverse!()\n\
    \    scores.reverse!()\n    \n    guesses.reverse!()\n    scores.reverse!()\n\
    \    \n    guesses.reverse!()\n    scores.reverse!()\n    \n    guesses.reverse!()\n\
    \    scores.reverse!()\n    \n    guesses.reverse!()\n    scores.reverse!()\n\
    \    \n    guesses.reverse!()\n    scores.reverse!()\n    \n    guesses.reverse!()\n\
    \    scores.reverse!()\n    \n    guesses.reverse!()\n    scores.reverse!()\n\
    \    \n    guesses.reverse!()\n    scores.reverse!()\n    \n    guesses.reverse!()\n\
    \    scores.reverse!()\n    \n    guesses.reverse!()\n    scores.reverse!()\n\
    \    \n    guesses.reverse!()\n    scores.reverse!()\n    \n    guesses.reverse!()\n\
    \    scores.reverse!()\n    \n    guesses.reverse!()\n    scores.reverse!()\n\
    \    \n    guesses.reverse!()\n    scores.reverse!()\n    \n    guesses.reverse!()\n\
    \    scores.reverse!()\n    \n    guesses.reverse!()\n    scores.reverse!()\n\
    \    \n    guesses.reverse!()\n    scores.reverse!()\n    ", "    guesses = guess[:]\n\
    \    scores = game[:]\n    guesses.sort!()\n    scores.sort!()\n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    ", "    \n    guesses = zeros(length(guess),\
    \ 1)\n    scores = zeros(length(game), 1)\n    \n    for i = 1:length(guess)\n\
    \        guesses[i] = guess[i]\n        scores[i] = game[i]\n    end\n    \n \
    \   guesses = sort(guesses)\n    scores = sort(scores)\n    \n    guesses = guesses[2:end]\n\
    \    scores = scores[2:end]\n    \n    guesses = guesses[guesses > 0]\n    scores\
    \ = scores[guesses > 0]\n    \n    guesses = guesses[guesses < length(game)]\n\
    \    scores = scores[guesses < length(game)]\n    \n    guesses = guesses[guesses\
    \ == length(game)]\n    scores = scores[guesses == length(game)]\n    \n    guesses\
    \ = guesses[guesses != 0]\n    scores = scores[guesses != 0]\n    \n    guesses\
    \ = guesses[guesses > 0]\n    scores = scores[guesses > 0]\n    \n    guesses\
    \ = guesses[guesses < length(game)]\n    scores = scores[guesses < length(game)]\n\
    \    \n    guesses = guesses[guesses == length(game)]\n    scores = scores[guesses\
    \ == length(game)]\n    \n    guesses = guesses[guesses != 0]\n    scores = scores[guesses\
    \ != 0]\n    \n    guesses = guesses[guesses > 0]\n    scores = scores[guesses\
    \ > 0]\n    \n    guesses = guesses[guesses < length(game)]\n    scores = scores[guesses\
    \ < length(game)]\n    \n    guesses = guesses[guesses == length(game)]\n    scores\
    \ = scores[guesses == length(game)]\n    \n    guesses = guesses[guesses != 0]\n\
    \    scores = scores[guesses != 0]\n    \n    guesses = guesses[guesses > 0]\n\
    \    scores = scores[guesses > 0]\n    \n    guesses = guesses[guesses < length(game)]\n\
    \    scores = scores[guesses < length(game)]\n    \n    guesses = guesses[guesses\
    \ == length(game)]\n    scores = scores[guesses == length(game)]\n    \n    guesses\
    \ = guesses[guesses != 0]\n    scores = scores[guesses != 0]\n    \n    guesses\
    \ = guesses[guesses > 0]\n    scores = scores[guesses > 0]\n    \n    guesses\
    \ = guesses[guesses < length(game)]\n    scores = scores[guesses < length(game)]\n\
    \    \n    ", "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n", " \
    \   \n    guess = sort(guess)\n    game = sort(game)\n    \n    diff = zeros(length(guess))\n\
    \    \n    for i = 1:length(guess)\n        \n        if guess[i] == game[i]\n\
    \            diff[i] = 0\n        else\n            diff[i] = abs(guess[i] - game[i])\n\
    \        end\n    end\n    \n    return diff\nend\n</cell>\n<code language=julia-1.5>\n\
    @test compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n</cell>\n<code language=julia-1.5>\n\
    @test compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n</cell>\n<text>\nExercise:\
    \ Write a function that will return the number of matches between two vectors\
    \ of equal length. \n    \n    \n    example:", "    \n    guesses = guess[:]\n\
    \    scores = game[:]\n    \n    guesses.sort()\n    scores.sort()\n    \n   \
    \ guesses = guesses[2:end]\n    scores = scores[2:end]\n    \n    guesses = guesses[guesses..end-1]\n\
    \    scores = scores[guesses..end-1]\n    \n    guesses = guesses[guesses..end-1]\n\
    \    scores = scores[guesses..end-1]\n    \n    guesses = guesses[guesses..end-1]\n\
    \    scores = scores[guesses..end-1]\n    \n    guesses = guesses[guesses..end-1]\n\
    \    scores = scores[guesses..end-1]\n    \n    guesses = guesses[guesses..end-1]\n\
    \    scores = scores[guesses..end-1]\n    \n    guesses = guesses[guesses..end-1]\n\
    \    scores = scores[guesses..end-1]\n    \n    guesses = guesses[guesses..end-1]\n\
    \    scores = scores[guesses..end-1]\n    \n    guesses = guesses[guesses..end-1]\n\
    \    scores = scores[guesses..end-1]\n    \n    guesses = guesses[guesses..end-1]\n\
    \    scores = scores[guesses..end-1]\n    \n    guesses = guesses[guesses..end-1]\n\
    \    scores = scores[guesses..end-1]\n    \n    guesses = guesses[guesses..end-1]\n\
    \    scores = scores[guesses..end-1]\n    \n    guesses = guesses[guesses..end-1]\n\
    \    scores = scores[guesses..end-1]\n    \n    guesses = guesses[guesses..end-1]\n\
    \    scores = scores[guesses..end-1]\n    \n    guesses = guesses[guesses..end-1]\n\
    \    scores = scores[guesses..end-1]\n    \n    guesses = guesses[guesses..end-1]\n\
    \    scores = scores[guesses..end-1]\n    \n    guesses = guesses[guesses..end-1]\n\
    \    scores = scores[guesses..end-1]\n    \n    guesses = guesses[guesses..end-1]\n\
    \    scores = scores[guesses..end-1]\n    \n    guesses = guesses[guesses..end-1]\n\
    \    scores = scores[guesses..end-1]\n", "    \n    guesses = guess[:]\n    scores\
    \ = game[:]\n    \n    guesses.sort!()\n    scores.sort!()\n    \n    guesses.reverse!()\n\
    \    scores.reverse!()\n    \n    guesses = guesses[:]\n    scores = scores[:]\n\
    \    \n    guesses.sort!()\n    scores.sort!()\n    \n    guesses.reverse!()\n\
    \    scores.reverse!()\n    \n    guesses = guesses[:]\n    scores = scores[:]\n\
    \    \n    guesses.sort!()\n    scores.sort!()\n    \n    guesses.reverse!()\n\
    \    scores.reverse!()\n    \n    guesses = guesses[:]\n    scores = scores[:]\n\
    \    \n    guesses.sort!()\n    scores.sort!()\n    \n    guesses.reverse!()\n\
    \    scores.reverse!()\n    \n    guesses = guesses[:]\n    scores = scores[:]\n\
    \    \n    guesses.sort!()\n    scores.sort!()\n    \n    guesses.reverse!()\n\
    \    scores.reverse!()\n    \n    guesses = guesses[:]\n    scores = scores[:]\n\
    \    \n    guesses.sort!()\n    scores.sort!()\n    \n    guesses.reverse!()\n\
    \    scores.reverse!()\n    \n    guesses = guesses[:]\n    scores = scores[:]\n\
    \    \n    guesses.sort!()\n    scores.sort!()\n    \n    guesses.reverse!()\n\
    \    scores.reverse!()\n    \n    guesses = guesses[:]\n    scores = scores[:]\n\
    \    \n    guesses.sort!()\n    scores.sort!()\n    \n    guesses.reverse!()\n\
    \    scores.reverse!()\n    \n    guesses = guesses[:]\n    scores = scores[:]\n\
    \    \n    guesses.sort!()\n    scores.sort!()\n    \n    guesses.reverse!()\n\
    \    scores.reverse!()\n    \n    guesses = guesses[:]\n    scores = scores[:]\n\
    \    \n    guesses.sort!()\n    scores.sort!()\n    \n    guesses.reverse!()\n\
    \    scores.reverse!()\n    \n    guesses = guesses[:]\n    scores = scores[:]\n\
    \    \n    guesses.sort!()\n    scores.sort!()\n    ", "    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n", "    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n", "    \n    guesses = zeros(length(guess), 1)\n    scores\
    \ = zeros(length(game), 1)\n    \n    for i = 1:length(guess)\n        guesses[i]\
    \ = guess[i]\n        scores[i] = game[i]\n    end\n    \n    guesses = guesses./sum(guesses)\n\
    \    scores = scores./sum(scores)\n    \n    guesses = guesses.*length(game)\n\
    \    scores = scores.*length(game)\n    \n    guesses = sum(guesses, 2)\n    scores\
    \ = sum(scores, 2)\n    \n    guesses = guesses./length(guesses)\n    scores =\
    \ scores./length(scores)\n    \n    guesses = guesses.*length(game)\n    scores\
    \ = scores.*length(game)\n    \n    guesses = sum(guesses, 1)\n    scores = sum(scores,\
    \ 1)\n    \n    guesses = guesses./length(guesses)\n    scores = scores./length(scores)\n\
    \    \n    guesses = guesses.*length(game)\n    scores = scores.*length(game)\n\
    \    \n    guesses = sum(guesses, 1)\n    scores = sum(scores, 1)\n    \n    guesses\
    \ = guesses./length(guesses)\n    scores = scores./length(scores)\n    \n    guesses\
    \ = guesses.*length(game)\n    scores = scores.*length(game)\n    \n    guesses\
    \ = sum(guesses, 1)\n    scores = sum(scores, 1)\n    \n    guesses = guesses./length(guesses)\n\
    \    scores = scores./length(scores)\n    \n    guesses = guesses.*length(game)\n\
    \    scores = scores.*length(game)\n    \n    guesses = sum(guesses, 1)\n    scores\
    \ = sum(scores, 1)\n    \n    guesses = guesses./length(guesses)\n    scores =\
    \ scores./length(scores)\n    \n    guesses = guesses.*length(game)\n    scores\
    \ = scores.*length(game)\n    \n    guesses = sum(guesses, 1)\n    scores = sum(scores,\
    \ 1)\n    \n    guesses = guesses./length(guesses)\n    scores = scores./length(scores)\n\
    \    \n    guesses = guesses.*length(game)\n    scores = scores.*length(game)\n\
    \    \n    guesses = sum(guesses, 1)\n    scores = sum(scores, 1)\n    \n    guesses\
    \ = guesses./length(guesses)\n    scores = scores./length(scores)\n    \n    guesses\
    \ = guesses.*length(game)", "    \n    guesses = zeros(length(guess), 1)\n   \
    \ scores = zeros(length(game), 1)\n    \n    for i = 1:length(guess)\n       \
    \ guesses[i] = guess[i]\n        scores[i] = game[i]\n    end\n    \n    guesses\
    \ = guesses[guesses > 0]\n    scores = scores[scores > 0]\n    \n    guesses =\
    \ guesses[guesses != 0]\n    scores = scores[scores != 0]\n    \n    guesses =\
    \ guesses./length(guesses)\n    scores = scores./length(scores)\n    \n    guesses\
    \ = guesses.*scores\n    \n    guesses = guesses.+scores\n    \n    guesses =\
    \ guesses./length(guesses)\n    \n    return guesses\nend\n</cell>\n<code language=julia-1.5>\n\
    compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n</cell>\n<code language=julia-1.5>\n\
    compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n</cell>\n<code language=julia-1.5>\n\
    compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n</cell>\n<code language=julia-1.5>\n\
    compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n</cell>\n<code language=julia-1.5>\n\
    compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n</cell>\n<code language=julia-1.5>\n\
    compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n</cell>\n<code language=julia-1.5>\n\
    compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n</cell>\n<code language=julia-1.5>\n\
    compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n</cell>\n<code language=julia-1.5>\n\
    compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n</cell>\n<code language=julia-1.5>\n\
    compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n</cell>\n<code language=julia-1.5>\n\
    compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n</cell>\n<code language=julia-1.5>\n\
    compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n</cell>\n<code language=julia-1.5>\n\
    compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n</cell>\n<code language=julia-1.5>\n\
    compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n</cell>\n<code language=julia-1.5>\n\
    compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n</cell>\n<code language=julia-1.5>\n\
    compare([0, 5, 0, 0, 0, 4", "    \n    guesses = Vector{Int64}(guess)\n    scores\
    \ = Vector{Int64}(game)\n    \n    guesses = sort(guesses)\n    scores = sort(scores)\n\
    \    \n    guesses = guesses..guesses..guesses..guesses\n    scores = scores..scores..scores..scores\n\
    \    \n    guesses = guesses..guesses..guesses..guesses\n    scores = scores..scores..scores..scores\n\
    \    \n    guesses = guesses..guesses..guesses..guesses\n    scores = scores..scores..scores..scores\n\
    \    \n    guesses = guesses..guesses..guesses..guesses\n    scores = scores..scores..scores..scores\n\
    \    \n    guesses = guesses..guesses..guesses..guesses\n    scores = scores..scores..scores..scores\n\
    \    \n    guesses = guesses..guesses..guesses..guesses\n    scores = scores..scores..scores..scores\n\
    \    \n    guesses = guesses..guesses..guesses..guesses\n    scores = scores..scores..scores..scores\n\
    \    \n    guesses = guesses..guesses..guesses..guesses\n    scores = scores..scores..scores..scores\n\
    \    \n    guesses = guesses..guesses..guesses..guesses\n    scores = scores..scores..scores..scores\n\
    \    \n    guesses = guesses..guesses..guesses..guesses\n    scores = scores..scores..scores..scores\n\
    \    \n    guesses = guesses..guesses..guesses..guesses\n    scores = scores..scores..scores..scores\n\
    \    \n    guesses = guesses..guesses..guesses..guesses\n    scores = scores..scores..scores..scores\n\
    \    \n    guesses = guesses..guesses..guesses..guesses\n    scores = scores..scores..scores..scores\n\
    \    \n    guesses = guesses..guesses..guesses..guesses\n    scores = scores..scores..scores..scores\n\
    \    \n    guesses = guesses..guesses..guesses..guesses\n    scores = scores..scores..scores..scores\n\
    \    \n    guesses = gues", "    \n    guesses = guess[:]\n    scores = game[:]\n\
    \    \n    guesses.sort!()\n    scores.sort!()\n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    ", "    \n    guesses = zeros(length(guess), 1)\n    scores = zeros(length(game),\
    \ 1)\n    \n    for i = 1:length(guess)\n        guesses[i] = guess[i]\n     \
    \   scores[i] = game[i]\n    end\n    \n    guesses = guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses.",
  "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    guess = sort(guess)\n\
    \    game = sort(game)\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n", "    \n    guess = sort(guess)\n    game = sort(game)\n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n", "    \n    guesses = guess[:]\n    scores = game[:]\n    \n    guesses.sort()\n\
    \    scores.sort()\n    \n    guesses_sorted = guesses[:]\n    scores_sorted =\
    \ scores[:]\n    \n    guesses_sorted.reverse()\n    scores_sorted.reverse()\n\
    \    \n    guesses_sorted = guesses_sorted[guesses_sorted .!= 0]\n    scores_sorted\
    \ = scores_sorted[scores_sorted .!= 0]\n    \n    guesses_sorted = guesses_sorted[guesses_sorted\
    \ .!= 0]\n    scores_sorted = scores_sorted[scores_sorted .!= 0]\n    \n    guesses_sorted\
    \ = guesses_sorted[guesses_sorted .!= 0]\n    scores_sorted = scores_sorted[scores_sorted\
    \ .!= 0]\n    \n    guesses_sorted = guesses_sorted[guesses_sorted .!= 0]\n  \
    \  scores_sorted = scores_sorted[scores_sorted .!= 0]\n    \n    guesses_sorted\
    \ = guesses_sorted[guesses_sorted .!= 0]\n    scores_sorted = scores_sorted[scores_sorted\
    \ .!= 0]\n    \n    guesses_sorted = guesses_sorted[guesses_sorted .!= 0]\n  \
    \  scores_sorted = scores_sorted[scores_sorted .!= 0]\n    \n    guesses_sorted\
    \ = guesses_sorted[guesses_sorted .!= 0]\n    scores_sorted = scores_sorted[scores_sorted\
    \ .!= 0]\n    \n    guesses_sorted = guesses_sorted[guesses_sorted .!= 0]\n  \
    \  scores_sorted = scores_sorted[scores_sorted .!= 0]\n    \n    guesses_sorted\
    \ = guesses_sorted[guesses_sorted .!= 0]\n    scores_sorted = scores_sorted[scores_sorted\
    \ .!= 0]\n    \n    guesses_sorted = guesses_sorted[guesses_sorted .!= 0]\n  \
    \  scores_sorted = scores_sorted[scores_sorted .!= 0]\n    \n    guesses_sorted\
    \ = guesses_sorted[guesses_sorted .!= 0]\n    scores_sorted = scores_sorted[scores_sorted\
    \ .!= 0]\n    \n    guesses_sorted = guesses_sorted[guesses_sorted .!= 0]\n  \
    \  scores_sorted = scores_sorted[scores_sorted .!= 0]\n    \n    guesses_sorted\
    \ = guesses_sorted[guesses_sorted .!= 0]\n    scores_sorted = scores_sorted[scores_sorted\
    \ .!= 0]\n    \n    guesses_", "    guesses = guess[:]\n    scores = game[:]\n\
    \    \n    guesses.sort!()\n    scores.sort!()\n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    ", "    guesses = guess[:]\n    scores = game[:]\n    guesses.sort()\n\
    \    scores.sort()\n    \n    \n    \n    \n    \n    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n", "    \n    guesses = zeros(length(game))\n    \n    for i = 1:length(guess)\n\
    \        guesses[i] = guess[i]\n    end\n    \n    guesses = sort(guesses)\n \
    \   \n    guesses = guesses[guesses > 0]\n    \n    guesses = guesses[guesses\
    \ < length(game)]\n    \n    guesses = guesses[guesses != 0]\n    \n    guesses\
    \ = guesses[guesses != length(game)]\n    \n    guesses = guesses[guesses != length(guesses)]\n\
    \    \n    guesses = guesses[guesses != length(guesses)]\n    \n    guesses =\
    \ guesses[guesses != length(guesses)]\n    \n    guesses = guesses[guesses !=\
    \ length(guesses)]\n    \n    guesses = guesses[guesses != length(guesses)]\n\
    \    \n    guesses = guesses[guesses != length(guesses)]\n    \n    guesses =\
    \ guesses[guesses != length(guesses)]\n    \n    guesses = guesses[guesses !=\
    \ length(guesses)]\n    \n    guesses = guesses[guesses != length(guesses)]\n\
    \    \n    guesses = guesses[guesses != length(guesses)]\n    \n    guesses =\
    \ guesses[guesses != length(guesses)]\n    \n    guesses = guesses[guesses !=\
    \ length(guesses)]\n    \n    guesses = guesses[guesses != length(guesses)]\n\
    \    \n    guesses = guesses[guesses != length(guesses)]\n    \n    guesses =\
    \ guesses[guesses != length(guesses)]\n    \n    guesses = guesses[guesses !=\
    \ length(guesses)]\n    \n    guesses = guesses[guesses != length(guesses)]\n\
    \    \n    guesses = guesses[guesses != length(guesses)]\n    \n    guesses =\
    \ guesses[guesses != length(guesses)]\n    \n    guesses = guesses[guesses !=\
    \ length(guesses)]\n    \n    guesses = guesses[guesses != length(guesses)]\n\
    \    \n    guesses = guesses[guesses != length(guesses)]\n    \n    guesses =\
    \ guesses[guesses != length(guesses)]\n    \n    guesses = guesses[guesses !=\
    \ length(guesses)]\n    \n    gues", "    \n    guess = sort(guess)\n    game\
    \ = sort(game)\n    \n    guesses = zeros(length(guess), 1)\n    \n    for i =\
    \ 1:length(guess)\n        guesses[i] = guess[i] - game[i]\n    end\n    \n  \
    \  return guesses\nend\n</cell>\n<code language=julia-1.5>\ncompare([1,2,3,4,5,1],\
    \ [1,2,3,4,2,-2])\n</cell>\n<code language=julia-1.5>\ncompare([0,5,0,0,0,4],\
    \ [4,1,1,0,0,-2])\n</cell>\n<text>\nExercise: Write a function that takes in two\
    \ vectors of scores and guesses of equal length and returns the number of correct\
    \ guesses.", "    \n    guesses = guess[:]\n    scores = game[:]\n    \n    guesses.sort!()\n\
    \    scores.sort!()\n    \n    guesses.reverse!()\n    scores.reverse!()\n   \
    \ \n    guesses.reverse!()\n    scores.reverse!()\n    \n    guesses.reverse!()\n\
    \    scores.reverse!()\n    \n    guesses.reverse!()\n    scores.reverse!()\n\
    \    \n    guesses.reverse!()\n    scores.reverse!()\n    \n    guesses.reverse!()\n\
    \    scores.reverse!()\n    \n    guesses.reverse!()\n    scores.reverse!()\n\
    \    \n    guesses.reverse!()\n    scores.reverse!()\n    \n    guesses.reverse!()\n\
    \    scores.reverse!()\n    \n    guesses.reverse!()\n    scores.reverse!()\n\
    \    \n    guesses.reverse!()\n    scores.reverse!()\n    \n    guesses.reverse!()\n\
    \    scores.reverse!()\n    \n    guesses.reverse!()\n    scores.reverse!()\n\
    \    \n    guesses.reverse!()\n    scores.reverse!()\n    \n    guesses.reverse!()\n\
    \    scores.reverse!()\n    \n    guesses.reverse!()\n    scores.reverse!()\n\
    \    \n    guesses.reverse!()\n    scores.reverse!()\n    \n    guesses.reverse!()\n\
    \    scores.reverse!()\n    \n    guesses.reverse!()\n    scores.reverse!()\n\
    \    \n    guesses.reverse!()\n    scores.reverse!()\n    \n    guesses.reverse!()\n\
    \    scores.reverse!()\n    \n    guesses.reverse!()\n    scores.reverse!()\n\
    \    \n    guesses.reverse!()\n    scores.reverse!()\n    \n    guesses.reverse!()\n\
    \    scores.reverse!()\n    \n    guesses.reverse!()\n    scores.reverse!()\n\
    \    \n    guesses.reverse!()\n    scores.reverse!()\n    \n    guesses.reverse!()\n\
    \    scores.reverse!()\n    \n    guesses.reverse!()\n    scores.reverse!()\n\
    \    \n    guesses.reverse!()\n    scores.reverse!()\n    \n    guesses.reverse!()\n\
    \    scores.reverse!()\n    ", "    \n    guesses = zeros(length(guess), 1)\n\
    \    scores = zeros(length(game), 1)\n    \n    for i = 1:length(guess)\n    \
    \    guesses[i] = guess[i]\n        scores[i] = game[i]\n    end\n    \n    guesses\
    \ = guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses..guesses.",
  "    guess = sort(guess)\n    game = sort(game)\n    guess = guess[guess[2:end]\
    \ .== game[2:end]]\n    game = game[guess[2:end] .== guess[2:end]]\n    guess\
    \ = guess[guess[2:end] .== game[2:end]]\n    game = game[guess[2:end] .== guess[2:end]]\n\
    \    guess = guess[guess[2:end] .== game[2:end]]\n    game = game[guess[2:end]\
    \ .== guess[2:end]]\n    guess = guess[guess[2:end] .== game[2:end]]\n    game\
    \ = game[guess[2:end] .== guess[2:end]]\n    guess = guess[guess[2:end] .== game[2:end]]\n\
    \    game = game[guess[2:end] .== guess[2:end]]\n    guess = guess[guess[2:end]\
    \ .== game[2:end]]\n    game = game[guess[2:end] .== guess[2:end]]\n    guess\
    \ = guess[guess[2:end] .== game[2:end]]\n    game = game[guess[2:end] .== guess[2:end]]\n\
    \    guess = guess[guess[2:end] .== game[2:end]]\n    game = game[guess[2:end]\
    \ .== guess[2:end]]\n    guess = guess[guess[2:end] .== game[2:end]]\n    game\
    \ = game[guess[2:end] .== guess[2:end]]\n    guess = guess[guess[2:end] .== game[2:end]]\n\
    \    game = game[guess[2:end] .== guess[2:end]]\n    guess = guess[guess[2:end]\
    \ .== game[2:end]]\n    game = game[guess[2:end] .== guess[2:end]]\n    guess\
    \ = guess[guess[2:end] .== game[2:end]]\n    game = game[guess[2:end] .== guess[2:end]]\n\
    \    guess = guess[guess[2:end] .== game[2:end]]\n    game = game[guess[2:end]\
    \ .== guess[2:end]]\n    guess = guess[guess[2:end] .== game[2:end]]\n    game\
    \ = game[guess[2:end] .== guess[2:end]]\n    guess = guess[guess[2:", "    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    guess = sort(guess)\n\
    \    game = sort(game)\n    \n    diff = zeros(length(guess))\n    \n    for i\
    \ = 1:length(guess)\n        diff[i] = abs(guess[i] - game[i])\n    end\n    \n\
    \    return diff\nend\n</cell>\n<code language=julia-1.5>\n@time compare([1,2,3,4,5,1],\
    \ [1,2,3,4,2,-2])\n</cell>\n<text>\nExercise: Write a function that takes a vector\
    \ of scores and a vector of guesses and returns a vector of how far off each guess\
    \ was. \n    \n    \n    example:", "    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n", "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n", " \
    \   \n    guesses = guess[:]\n    scores = game[:]\n    \n    guesses.sort!()\n\
    \    scores.sort!()\n    \n    guesses_sorted = guesses[:]\n    scores_sorted\
    \ = scores[:]\n    \n    guesses_sorted.sort!()\n    scores_sorted.sort!()\n \
    \   \n    guesses_sorted = guesses[:]\n    scores_sorted = scores[:]\n    \n \
    \   guesses_sorted.sort!()\n    scores_sorted.sort!()\n    \n    guesses_sorted\
    \ = guesses[:]\n    scores_sorted = scores[:]\n    \n    guesses_sorted.sort!()\n\
    \    scores_sorted.sort!()\n    \n    guesses_sorted = guesses[:]\n    scores_sorted\
    \ = scores[:]\n    \n    guesses_sorted.sort!()\n    scores_sorted.sort!()\n \
    \   \n    guesses_sorted = guesses[:]\n    scores_sorted = scores[:]\n    \n \
    \   guesses_sorted.sort!()\n    scores_sorted.sort!()\n    \n    guesses_sorted\
    \ = guesses[:]\n    scores_sorted = scores[:]\n    \n    guesses_sorted.sort!()\n\
    \    scores_sorted.sort!()\n    \n    guesses_sorted = guesses[:]\n    scores_sorted\
    \ = scores[:]\n    \n    guesses_sorted.sort!()\n    scores_sorted.sort!()\n \
    \   \n    guesses_sorted = guesses[:]\n    scores_sorted = scores[:]\n    \n \
    \   guesses_sorted.sort!()\n    scores_sorted.sort!()\n    \n    guesses_sorted\
    \ = guesses[:]\n    scores_sorted = scores[:]\n    \n    guesses_sorted.sort!()\n\
    \    scores_sorted.sort!()\n    \n    guesses_sorted = guesses[:]\n    scores_sorted\
    \ = scores[:]\n    \n    guesses_sorted.sort!()\n    scores_sorted.sort!()\n \
    \   \n    guesses_sorted = guesses[:]\n    scores_sorted = scores[:]\n    \n \
    \   guesses_sorted.sort!()\n    scores_sorted.sort!()\n    \n    guesses_sorted\
    \ = guesses[:]\n    scores_sorted = scores[:]\n    \n    guesses_sorted.sort!()\n\
    \    scores_sorted.sort!()\n    ", "    \n    guess = sort(guess)\n    game =\
    \ sort(game)\n    \n    diff = zeros(length(guess))\n    \n    for i = 1:length(guess)\n\
    \        \n        if guess[i] == game[i]\n            diff[i] = 0\n        else\n\
    \            diff[i] = abs(guess[i] - game[i])\n        end\n    end\n    \n \
    \   return diff\nend\n</cell>\n<code language=julia-1.5>\n@time compare([1,2,3,4,5,1],\
    \ [1,2,3,4,2,-2])\n</cell>\n<text>\nExercise 2\nWrite a function that takes a\
    \ vector of scores and a vector of guesses and returns the number of matches.",
  "    \n    guesses = guess[:]\n    scores = game[:]\n    \n    guesses.sort!()\n\
    \    scores.sort!()\n    \n    guesses = guesses[2:end]\n    scores = scores[2:end]\n\
    \    \n    guesses.sort!()\n    scores.sort!()\n    \n    guesses = guesses[2:end]\n\
    \    scores = scores[2:end]\n    \n    guesses = guesses[2:end]\n    scores =\
    \ scores[2:end]\n    \n    guesses = guesses[2:end]\n    scores = scores[2:end]\n\
    \    \n    guesses = guesses[2:end]\n    scores = scores[2:end]\n    \n    guesses\
    \ = guesses[2:end]\n    scores = scores[2:end]\n    \n    guesses = guesses[2:end]\n\
    \    scores = scores[2:end]\n    \n    guesses = guesses[2:end]\n    scores =\
    \ scores[2:end]\n    \n    guesses = guesses[2:end]\n    scores = scores[2:end]\n\
    \    \n    guesses = guesses[2:end]\n    scores = scores[2:end]\n    \n    guesses\
    \ = guesses[2:end]\n    scores = scores[2:end]\n    \n    guesses = guesses[2:end]\n\
    \    scores = scores[2:end]\n    \n    guesses = guesses[2:end]\n    scores =\
    \ scores[2:end]\n    \n    guesses = guesses[2:end]\n    scores = scores[2:end]\n\
    \    \n    guesses = guesses[2:end]\n    scores = scores[2:end]\n    \n    guesses\
    \ = guesses[2:end]\n    scores = scores[2:end]\n    \n    guesses = guesses[2:end]\n\
    \    scores = scores[2:end]\n    \n    guesses = guesses[2:end]\n    scores =\
    \ scores[2:end]\n    \n    guesses = guesses[2:end]\n    scores = scores[2:end]\n\
    \    \n    guesses = guesses[2:end]\n    scores = scores[2:end]\n    \n    guesses\
    \ = guesses[2:end]\n    scores = scores[2:end]\n    \n    guesses = guesses[2:end]\n\
    \    scores = scores[2:end]\n    \n    guesses = guesses[2:end]\n    scores =\
    \ scores[2:end]\n    \n    guesses = guesses[2:end]\n    scores = scores[2:end]\n\
    \    \n    guesses = guesses[2:end]\n    scores = scores[2:end]\n    \n    guesses\
    \ = guesses[2:end]\n    scores = scores", "    \n    guess = sort(guess)\n   \
    \ game = sort(game)\n    \n    guesses = zeros(length(guess), 1)\n    \n    for\
    \ i = 1:length(guess)\n        guesses[i] = guess[i] - game[i]\n    end\n    \n\
    \    return guesses\nend\n</cell>\n<code language=julia-1.5>\nguesses = compare([1,2,3,4,5,1],\
    \ [1,2,3,4,2,-2])\n</cell>\n<code language=julia-1.5>\nguesses\n</cell>\n<code\
    \ language=julia-1.5>", "    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n",
  "    \n    guesses = guess[:]\n    scores = game[:]\n    \n    guesses.sort()\n\
    \    scores.sort()\n    \n    guesses = guesses[2:end]\n    scores = scores[2:end]\n\
    \    \n    guesses = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n\
    \    \n    guesses = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n\
    \    \n    guesses = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n\
    \    \n    guesses = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n\
    \    \n    guesses = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n\
    \    \n    guesses = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n\
    \    \n    guesses = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n\
    \    \n    guesses = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n\
    \    \n    guesses = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n\
    \    \n    guesses = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n\
    \    \n    guesses = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n\
    \    \n    guesses = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n\
    \    \n    guesses = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n\
    \    \n    guesses = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n\
    \    \n    guesses = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n\
    \    \n    guesses = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n\
    \    \n    guesses = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n\
    \    \n    guesses = guesses[guesses..end-1]\n    scores = scores[guesses..end-1]\n",
  "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    guesses = guess[:]\n\
    \    scores = game[:]\n    guesses.sort!()\n    scores.sort!()\n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    ", "    guesses = guess[:]\n    scores\
    \ = game[:]\n    \n    guesses.sort!()\n    scores.sort!()\n    \n    guesses.reverse!()\n\
    \    scores.reverse!()\n    \n    guesses.reverse!()\n    scores.reverse!()\n\
    \    \n    guesses.reverse!()\n    scores.reverse!()\n    \n    guesses.reverse!()\n\
    \    scores.reverse!()\n    \n    guesses.reverse!()\n    scores.reverse!()\n\
    \    \n    guesses.reverse!()\n    scores.reverse!()\n    \n    guesses.reverse!()\n\
    \    scores.reverse!()\n    \n    guesses.reverse!()\n    scores.reverse!()\n\
    \    \n    guesses.reverse!()\n    scores.reverse!()\n    \n    guesses.reverse!()\n\
    \    scores.reverse!()\n    \n    guesses.reverse!()\n    scores.reverse!()\n\
    \    \n    guesses.reverse!()\n    scores.reverse!()\n    \n    guesses.reverse!()\n\
    \    scores.reverse!()\n    \n    guesses.reverse!()\n    scores.reverse!()\n\
    \    \n    guesses.reverse!()\n    scores.reverse!()\n    \n    guesses.reverse!()\n\
    \    scores.reverse!()\n    \n    guesses.reverse!()\n    scores.reverse!()\n\
    \    \n    guesses.reverse!()\n    scores.reverse!()\n    \n    guesses.reverse!()\n\
    \    scores.reverse!()\n    \n    guesses.reverse!()\n    scores.reverse!()\n\
    \    \n    guesses.reverse!()\n    scores.reverse!()\n    \n    guesses.reverse!()\n\
    \    scores.reverse!()\n    \n    guesses.reverse!()\n    scores.reverse!()\n\
    \    \n    guesses.reverse!()\n    scores.reverse!()\n    \n    guesses.reverse!()\n\
    \    scores.reverse!()\n    \n    guesses.reverse!()\n    scores.reverse!()\n\
    \    \n    guesses.reverse!()\n    scores.reverse!()\n    \n    guesses.reverse!()\n\
    \    scores.reverse!()\n    \n    guesses.reverse!()\n    scores.reverse!()\n\
    \    \n    guesses.reverse!()\n    scores.reverse!()\n    \n    ", "    \n   \
    \ guess = sort(guess)\n    game = sort(game)\n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    guesses = zeros(length(guess),\
    \ length(game))\n    for i = 1:length(guess)\n        guesses[i, :] = guess[i]\
    \ - game\n    end\n    return guesses\nend\n</cell>\n<code language=julia-1.0>\n\
    compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n</cell>\n<code language=julia-1.0>\n\
    compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n</cell>\n<text>\nExercise: Write\
    \ a function that calculates the number of matches between two vectors of equal\
    \ length. \n    Your function should take two vectors of equal length and return\
    \ an integer denoting the number of matches.\n    \n    \n    example:", "   \
    \ \n    guess = sort(guess)\n    game = sort(game)\n    \n    diff = zeros(length(guess))\n\
    \    \n    for i = 1:length(guess)\n        if guess[i] == game[i]\n         \
    \   diff[i] = 0\n        else\n            diff[i] = abs(guess[i] - game[i])\n\
    \        end\n    end\n    \n    return diff\nend\n</cell>\n<code language=julia-1.5>\n\
    @time compare([1,2,3,4,5,1], [1,2,3,4,2,-2])\n</cell>\n<code language=julia-1.5>\n\
    @time compare([0,5,0,0,0,4], [4,1,1,0,0,-2])\n</cell>\n<text>\nExercise\nWrite\
    \ a function that takes in two vectors of scores and guesses of equal length,\
    \ and returns the number of matches.", "    guesses = guess[:]\n    scores = game[:]\n\
    \    \n    guesses.sort!()\n    scores.sort!()\n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    "]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

language: jl
name: HumanEval_52_below_threshold
results:
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"Return\
    \ true if all numbers in the vector l are above threshold t.\n    >>> above_threshold([1,\
    \ 2, 4, 10], 100)\n    true\n    >>> above_threshold([1, 20, 4, 10], 5)\n    false\n\
    \    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\t\
    @test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpciiltrxd.jl:14\nin expression starting at\
    \ /tmp/tmpciiltrxd.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \        end\n    end\n    return true\nend\n</cell>\n<code language=julia-1.4>\n\
    \"\"\"Return true if all numbers in the vector l are above threshold t.\n    >>>\
    \ above_threshold([1, 2, 4, 10], 100)\n    true\n    >>> above_threshold([1, 20,\
    \ 4, 10], 5)\n    false\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = below_threshold;\n\t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t\
    @test(candidate([1, 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10],\
    \ 11) == true)\n\t@test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpff6j9jek.jl:15\nin expression starting at\
    \ /tmp/tmpff6j9jek.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"Return\
    \ true if all numbers in the vector l are above threshold t.\n    >>> above_threshold([1,\
    \ 2, 4, 10], 100)\n    true\n    >>> above_threshold([1, 20, 4, 10], 5)\n    false\n\
    \    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\t\
    @test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpciiltrxd.jl:14\nin expression starting at\
    \ /tmp/tmpciiltrxd.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for n in l\n        if n < t\n            return false\n\
    \    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\
    \t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpcornvv0j.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpcornvv0j.jl:1\n\
    in expression starting at /tmp/tmpcornvv0j.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\n</cell>\n<code language=julia-1.5>\n@assert below_threshold([1,\
    \ 2, 4, 10], 100) == true\n@assert below_threshold([1, 20, 4, 10], 5) == false\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the number of elements\
    \ in a vector that are less than a given threshold.\nusing Test\n\n@testset begin\n\
    \ncandidate = below_threshold;\n\t@test(candidate([1, 2, 4, 10], 100) == true)\n\
    \t@test(candidate([1, 20, 4, 10], 5) == false)\n\t@test(candidate([1, 20, 4, 10],\
    \ 21) == true)\n\t@test(candidate([1, 20, 4, 10], 22) == true)\n\t@test(candidate([1,\
    \ 8, 4, 10], 11) == true)\n\t@test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkkvwgzh0.jl:14\nin expression starting at\
    \ /tmp/tmpkkvwgzh0.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that returns true if the vector l contains at least two numbers that are both\
    \ below threshold t and above threshold t.\nHint: Use the function below_threshold.\n\
    using Test\n\n@testset begin\n\ncandidate = below_threshold;\n\t@test(candidate([1,\
    \ 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10], 5) == false)\n\t\
    @test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t@test(candidate([1,\
    \ 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwwfstnj9.jl:14\nin expression starting at\
    \ /tmp/tmpwwfstnj9.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\n</cell>\n<text>\nExercise 4\nWrite a function\
    \ that returns true if all numbers in the vector l are above threshold t.\n  \
    \  >>> above_threshold([1, 2, 4, 10], 100)\n    true\n    >>> above_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = below_threshold;\n\t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t\
    @test(candidate([1, 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10],\
    \ 11) == true)\n\t@test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpv6u857vh.jl:14\nin expression starting at\
    \ /tmp/tmpv6u857vh.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\
    \t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpyl8apve_.jl:8\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpyl8apve_.jl:1\n\
    in expression starting at /tmp/tmpyl8apve_.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\
    \t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpyl8apve_.jl:8\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpyl8apve_.jl:1\n\
    in expression starting at /tmp/tmpyl8apve_.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l \n        if x < t \n            return false\
    \ \n    end \n    return true \nend \n</cell>\n<code language=julia-1.5>\n\"\"\
    \"Return true if all numbers in the vector l are above threshold t.\n    >>> above_threshold([1,\
    \ 2, 4, 10], 100)\n    true\n    >>> above_threshold([1, 20, 4, 10], 5)\n    false\n\
    \    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\t\
    @test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpw1x61q21.jl:14\nin expression starting at\
    \ /tmp/tmpw1x61q21.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"Return\
    \ true if all numbers in the vector l are above threshold t.\n    >>> above_threshold([1,\
    \ 2, 4, 10], 100)\n    true\n    >>> above_threshold([1, 20, 4, 10], 5)\n    false\n\
    \    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\t\
    @test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpia2v0v53.jl:14\nin expression starting at\
    \ /tmp/tmpia2v0v53.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l \n        if x < t \n            return false\
    \ \n    return true \nend\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ returns true if all numbers in the vector l are greater than threshold t.\n\
    \    >>> above_threshold([1, 2, 4, 10], 100)\n    true\n    >>> above_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = below_threshold;\n\t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t\
    @test(candidate([1, 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10],\
    \ 11) == true)\n\t@test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1hx_tggx.jl:13\nin expression starting at\
    \ /tmp/tmp1hx_tggx.jl:13\n"
  stdout: ''
- exit_code: -1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    l .< t \nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = below_threshold;\n\t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t\
    @test(candidate([1, 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10],\
    \ 11) == true)\n\t@test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp7zzsry72.jl:15\n  Test threw
    exception\n  Expression: candidate([1, 2, 4, 10], 100) == true\n  MethodError:
    Cannot `convert` an object of type BitVector to an object of type Bool\n  Closest
    candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n    convert(::Type{T},
    !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n    convert(::Type{T},
    !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n    ...\n  Stacktrace:\n   [1]
    below_threshold(l::Vector{Int64}, t::Int64)\n     @ Main /tmp/tmp7zzsry72.jl:8\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7zzsry72.jl:15 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7zzsry72.jl:14\ntest set: Error
    During Test at /tmp/tmp7zzsry72.jl:16\n  Test threw exception\n  Expression: candidate([1,
    20, 4, 10], 5) == false\n  MethodError: Cannot `convert` an object of type BitVector
    to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)
    where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n    convert(::Type{T},
    !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n    convert(::Type{T},
    !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n    ...\n  Stacktrace:\n   [1]
    below_threshold(l::Vector{Int64}, t::Int64)\n     @ Main /tmp/tmp7zzsry72.jl:8\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7zzsry72.jl:16 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.'
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for n in l\n        if n < t\n            return false\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\
    \t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpup5qxwiq.jl:8\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpup5qxwiq.jl:1\n\
    in expression starting at /tmp/tmpup5qxwiq.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l \n        if x < t \n            return false\
    \ \n    end \n    return true \nend \nusing Test\n\n@testset begin\n\ncandidate\
    \ = below_threshold;\n\t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t\
    @test(candidate([1, 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10],\
    \ 11) == true)\n\t@test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpzt9wwerv.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpzt9wwerv.jl:1\n\
    in expression starting at /tmp/tmpzt9wwerv.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"Return\
    \ true if all numbers in the vector l are above threshold t.\n    >>> above_threshold([1,\
    \ 2, 4, 10], 100)\n    true\n    >>> above_threshold([1, 20, 4, 10], 5)\n    false\n\
    \    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\t\
    @test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpciiltrxd.jl:14\nin expression starting at\
    \ /tmp/tmpciiltrxd.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\
    \t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmppvxez3bk.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmppvxez3bk.jl:1\n\
    in expression starting at /tmp/tmppvxez3bk.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l \n        if x < t \n            return false\
    \ \n    end \n    return true \nend \n</cell>\n<code language=julia-1.5>\nbelow_threshold([1,\
    \ 2, 4, 10], 100)\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ true if all numbers in the vector l are greater than threshold t.\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = below_threshold;\n\t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t\
    @test(candidate([1, 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10],\
    \ 11) == true)\n\t@test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzehy084q.jl:14\nin expression starting at\
    \ /tmp/tmpzehy084q.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\
    \t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpyl8apve_.jl:8\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpyl8apve_.jl:1\n\
    in expression starting at /tmp/tmpyl8apve_.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that returns true if the vector l contains any numbers that are divisible by\
    \ 3\nHint: use below_threshold(l, 3) to test each element of l\nusing Test\n\n\
    @testset begin\n\ncandidate = below_threshold;\n\t@test(candidate([1, 2, 4, 10],\
    \ 100) == true)\n\t@test(candidate([1, 20, 4, 10], 5) == false)\n\t@test(candidate([1,\
    \ 20, 4, 10], 21) == true)\n\t@test(candidate([1, 20, 4, 10], 22) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 11) == true)\n\t@test(candidate([1, 8, 4, 10],\
    \ 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0g99lpk7.jl:14\nin expression starting at\
    \ /tmp/tmp0g99lpk7.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that returns true if all numbers in the vector l are greater than threshold\
    \ t.\n    >>> above_threshold([1, 2, 4, 10], 100)\n    true\n    >>> above_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = below_threshold;\n\t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t\
    @test(candidate([1, 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10],\
    \ 11) == true)\n\t@test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpeet9c3rv.jl:14\nin expression starting at\
    \ /tmp/tmpeet9c3rv.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l \n        if x < t \n            return false\
    \ \n    end \n    return true \nend \n</cell>\n<text>\nExercise 4\nWrite a function\
    \ that returns true if all numbers in the vector l are above threshold t.\n  \
    \  >>> above_threshold([1, 2, 4, 10], 100)\n    true\n    >>> above_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = below_threshold;\n\t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t\
    @test(candidate([1, 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10],\
    \ 11) == true)\n\t@test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpiblfx19x.jl:14\nin expression starting at\
    \ /tmp/tmpiblfx19x.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for i in l\n        if i < t\n            return false\n\
    \    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\
    \t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwrhuggob.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwrhuggob.jl:1\n\
    in expression starting at /tmp/tmpwrhuggob.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\
    \t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmppvxez3bk.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmppvxez3bk.jl:1\n\
    in expression starting at /tmp/tmppvxez3bk.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that returns true if the vector l has at least two elements that are both below\
    \ threshold t.\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\
    \t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0w4i3zec.jl:14\nin expression starting at\
    \ /tmp/tmp0w4i3zec.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    l <= t\nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that returns true if the vector l is sorted from smallest to largest.\nHint:\
    \ use the function sorted.\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\
    \t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0cakr9jm.jl:10\nin expression starting at\
    \ /tmp/tmp0cakr9jm.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l \n        if x < t \n            return false\
    \ \n    end \n    return true \nend \n</cell>\n<code language=julia-1.5>\n@assert\
    \ below_threshold([1, 2, 4, 10], 100) == true\n@assert below_threshold([1, 20,\
    \ 4, 10], 5) == false\n</cell>\n<text>\nExercise 3\nWrite a function is_positive_definite(v::Vector{Int64})\
    \ that returns true if the vector v is positive definite and false otherwise.\n\
    using Test\n\n@testset begin\n\ncandidate = below_threshold;\n\t@test(candidate([1,\
    \ 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10], 5) == false)\n\t\
    @test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t@test(candidate([1,\
    \ 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpbo2q6dq9.jl:14\nin expression starting at\
    \ /tmp/tmpbo2q6dq9.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    below_threshold = false\n    for x in l\n        if x\
    \ < t\n            below_threshold = true\n            break\n    end\n    return\
    \ below_threshold\nend\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the number of elements in a vector that are below a threshold.\nusing Test\n\
    \n@testset begin\n\ncandidate = below_threshold;\n\t@test(candidate([1, 2, 4,\
    \ 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10], 5) == false)\n\t@test(candidate([1,\
    \ 20, 4, 10], 21) == true)\n\t@test(candidate([1, 20, 4, 10], 22) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 11) == true)\n\t@test(candidate([1, 8, 4, 10],\
    \ 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0218hjib.jl:16\nin expression starting at\
    \ /tmp/tmp0218hjib.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l \n        if x < t \n            return false\
    \ \n    return true \nend \n</cell>\n<text>\nExercise: Write a function that returns\
    \ true if all numbers in the vector l are above threshold t.\n    >>> above_threshold([1,\
    \ 2, 4, 10], 100)\n    true\n    >>> above_threshold([1, 20, 4, 10], 5)\n    false\n\
    \    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\t\
    @test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmh8cqk1j.jl:13\nin expression starting at\
    \ /tmp/tmpmh8cqk1j.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l \n        if x < t \n            return false\
    \ \n    end \n    return true \nend \n</cell>\n<code language=julia-1.5>\n@assert\
    \ below_threshold([1, 2, 4, 10], 100) == true\n@assert below_threshold([1, 20,\
    \ 4, 10], 5) == false\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ true if the vector l has at least two non-zero elements.\nHint: Use a for loop.\n\
    using Test\n\n@testset begin\n\ncandidate = below_threshold;\n\t@test(candidate([1,\
    \ 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10], 5) == false)\n\t\
    @test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t@test(candidate([1,\
    \ 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvznttkcl.jl:14\nin expression starting at\
    \ /tmp/tmpvznttkcl.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    below_threshold = l .< t\n    return below_threshold\n\
    end\n</cell>\n<text>\nExercise\nWrite a function that returns true if the vector\
    \ l contains any numbers that are greater than or equal to threshold t.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = below_threshold;\n\t@test(candidate([1,\
    \ 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10], 5) == false)\n\t\
    @test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t@test(candidate([1,\
    \ 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxsg_1dgj.jl:11\nin expression starting at\
    \ /tmp/tmpxsg_1dgj.jl:11\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\n\
    candidate = below_threshold;\n\t@test(candidate([1, 2, 4, 10], 100) == true)\n\
    \t@test(candidate([1, 20, 4, 10], 5) == false)\n\t@test(candidate([1, 20, 4, 10],\
    \ 21) == true)\n\t@test(candidate([1, 20, 4, 10], 22) == true)\n\t@test(candidate([1,\
    \ 8, 4, 10], 11) == true)\n\t@test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmph3ckfull.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmph3ckfull.jl:20\n  Expression: candidate([1,\
    \ 2, 4, 10], 100) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph3ckfull.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph3ckfull.jl:19\ntest set: Test\
    \ Failed at /tmp/tmph3ckfull.jl:22\n  Expression: candidate([1, 20, 4, 10], 21)\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmph3ckfull.jl:22 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph3ckfull.jl:19\ntest set: Test\
    \ Failed at /tmp/tmph3ckfull.jl:23\n  Expression: candidate([1, 20, 4, 10], 22)\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmph3ckfull.jl:23 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph3ckfull.jl:19\ntest set: Test\
    \ Failed at /tmp/tmph3ckfull.jl:24\n  Expression: candidate([1, 8, 4, 10], 11)\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmph3ckfull.jl:24 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph3ckfull.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     4      6\n"
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    l <= t\nend\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that returns true if all numbers in the vector l are above threshold t.\n  \
    \  >>> above_threshold([1, 2, 4, 10], 100)\n    true\n    >>> above_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = below_threshold;\n\t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t\
    @test(candidate([1, 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10],\
    \ 11) == true)\n\t@test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_mz9rai8.jl:10\nin expression starting at\
    \ /tmp/tmp_mz9rai8.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"Return\
    \ true if all numbers in the vector l are above threshold t.\n    >>> above_threshold([1,\
    \ 2, 4, 10], 100)\n    true\n    >>> above_threshold([1, 20, 4, 10], 5)\n    false\n\
    \    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\t\
    @test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpciiltrxd.jl:14\nin expression starting at\
    \ /tmp/tmpciiltrxd.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\
    \t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmppvxez3bk.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmppvxez3bk.jl:1\n\
    in expression starting at /tmp/tmppvxez3bk.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    return true\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"Return true if\
    \ all numbers in the vector l are above threshold t.\n    >>> above_threshold([1,\
    \ 2, 4, 10], 100)\n    true\n    >>> above_threshold([1, 20, 4, 10], 5)\n    false\n\
    \    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\t\
    @test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptig69fq7.jl:13\nin expression starting at\
    \ /tmp/tmptig69fq7.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"Return\
    \ true if all numbers in the vector l are above threshold t.\n    >>> above_threshold([1,\
    \ 2, 4, 10], 100)\n    true\n    >>> above_threshold([1, 20, 4, 10], 5)\n    false\n\
    \    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\t\
    @test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpciiltrxd.jl:14\nin expression starting at\
    \ /tmp/tmpciiltrxd.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\
    \t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmppvxez3bk.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmppvxez3bk.jl:1\n\
    in expression starting at /tmp/tmppvxez3bk.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\
    \t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpyl8apve_.jl:8\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpyl8apve_.jl:1\n\
    in expression starting at /tmp/tmpyl8apve_.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for n in l\n        if n < t\n            return false\n\
    \    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\
    \t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpcornvv0j.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpcornvv0j.jl:1\n\
    in expression starting at /tmp/tmpcornvv0j.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    l .< t\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = below_threshold;\n\t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t\
    @test(candidate([1, 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10],\
    \ 11) == true)\n\t@test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpasu0r1w1.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpasu0r1w1.jl:15\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 10], 100) == true\n  MethodError: Cannot `convert`\
    \ an object of type BitVector to an object of type Bool\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] below_threshold(l::Vector{Int64}, t::Int64)\n\
    \     @ Main /tmp/tmpasu0r1w1.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpasu0r1w1.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpasu0r1w1.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpasu0r1w1.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([1, 20, 4, 10], 5) == false\n  MethodError: Cannot `convert` an object\
    \ of type BitVector to an object of type Bool\n  Closest candidates are:\n   \
    \ convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] below_threshold(l::Vector{Int64}, t::Int64)\n\
    \     @ Main /tmp/tmpasu0r1w1.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpasu0r1w1.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test"
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that returns true if all numbers in the vector l are above threshold t.\n  \
    \  >>> above_threshold([1, 2, 4, 10], 100)\n    true\n    >>> above_threshold([1,\
    \ 20, 4, 10], 5)\n    true\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = below_threshold;\n\t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t\
    @test(candidate([1, 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10],\
    \ 11) == true)\n\t@test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9sbwu6hu.jl:14\nin expression starting at\
    \ /tmp/tmp9sbwu6hu.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\n\
    candidate = below_threshold;\n\t@test(candidate([1, 2, 4, 10], 100) == true)\n\
    \t@test(candidate([1, 20, 4, 10], 5) == false)\n\t@test(candidate([1, 20, 4, 10],\
    \ 21) == true)\n\t@test(candidate([1, 20, 4, 10], 22) == true)\n\t@test(candidate([1,\
    \ 8, 4, 10], 11) == true)\n\t@test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmph3ckfull.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmph3ckfull.jl:20\n  Expression: candidate([1,\
    \ 2, 4, 10], 100) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph3ckfull.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph3ckfull.jl:19\ntest set: Test\
    \ Failed at /tmp/tmph3ckfull.jl:22\n  Expression: candidate([1, 20, 4, 10], 21)\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmph3ckfull.jl:22 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph3ckfull.jl:19\ntest set: Test\
    \ Failed at /tmp/tmph3ckfull.jl:23\n  Expression: candidate([1, 20, 4, 10], 22)\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmph3ckfull.jl:23 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph3ckfull.jl:19\ntest set: Test\
    \ Failed at /tmp/tmph3ckfull.jl:24\n  Expression: candidate([1, 8, 4, 10], 11)\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmph3ckfull.jl:24 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph3ckfull.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     4      6\n"
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for n in l\n        if n < t\n            return false\n\
    \    end\n    return true\nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that returns true if the vector l has at least two non-zero elements.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = below_threshold;\n\t@test(candidate([1,\
    \ 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10], 5) == false)\n\t\
    @test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t@test(candidate([1,\
    \ 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpx5gq2321.jl:14\nin expression starting at\
    \ /tmp/tmpx5gq2321.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for i in l\n        if i < t\n            return false\n\
    \        end\n    end\n    return true\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"Return true if all numbers in the vector l are above threshold t.\n    >>>\
    \ above_threshold([1, 2, 4, 10], 100)\n    true\n    >>> above_threshold([1, 20,\
    \ 4, 10], 5)\n    false\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = below_threshold;\n\t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t\
    @test(candidate([1, 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10],\
    \ 11) == true)\n\t@test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpntl5wjay.jl:15\nin expression starting at\
    \ /tmp/tmpntl5wjay.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that returns true if all numbers in the vector l are greater than threshold\
    \ t.\n    >>> above_threshold([1, 2, 4, 10], 100)\n    true\n    >>> above_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = below_threshold;\n\t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t\
    @test(candidate([1, 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10],\
    \ 11) == true)\n\t@test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpeet9c3rv.jl:14\nin expression starting at\
    \ /tmp/tmpeet9c3rv.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    return true\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"Return true if\
    \ all numbers in the vector l are above threshold t.\n    >>> above_threshold([1,\
    \ 2, 4, 10], 100)\n    true\n    >>> above_threshold([1, 20, 4, 10], 5)\n    false\n\
    \    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\t\
    @test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp25jmuvjq.jl:13\nin expression starting at\
    \ /tmp/tmp25jmuvjq.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \        end\n    end\n    return true\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"Return true if all numbers in the vector l are above threshold t.\n    >>>\
    \ above_threshold([1, 2, 4, 10], 100)\n    true\n    >>> above_threshold([1, 20,\
    \ 4, 10], 5)\n    false\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = below_threshold;\n\t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t\
    @test(candidate([1, 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10],\
    \ 11) == true)\n\t@test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3je99gfp.jl:15\nin expression starting at\
    \ /tmp/tmp3je99gfp.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    return true\nend\n</cell>\n<code language=julia-1.5>\n@assert below_threshold([1,\
    \ 2, 4, 10], 100) == true\n@assert below_threshold([1, 20, 4, 10], 5) == false\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the number of elements\
    \ in a vector that are less than a given value.\nusing Test\n\n@testset begin\n\
    \ncandidate = below_threshold;\n\t@test(candidate([1, 2, 4, 10], 100) == true)\n\
    \t@test(candidate([1, 20, 4, 10], 5) == false)\n\t@test(candidate([1, 20, 4, 10],\
    \ 21) == true)\n\t@test(candidate([1, 20, 4, 10], 22) == true)\n\t@test(candidate([1,\
    \ 8, 4, 10], 11) == true)\n\t@test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpq08jydk9.jl:13\nin expression starting at\
    \ /tmp/tmpq08jydk9.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    l .< t\nend\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that returns the number of elements in the vector l that are greater than threshold\
    \ t.\n    >>> count_greater_than([10, 20, 30, 40, 50], 50)\n    2\n    >>> count_greater_than([10,\
    \ 20, 30, 40, 50], 10)\n    1\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = below_threshold;\n\t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t\
    @test(candidate([1, 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10],\
    \ 11) == true)\n\t@test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpz9qacuf7.jl:10\nin expression starting at\
    \ /tmp/tmpz9qacuf7.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"Return\
    \ true if all numbers in the vector l are above threshold t.\n    >>> above_threshold([1,\
    \ 2, 4, 10], 100)\n    true\n    >>> above_threshold([1, 20, 4, 10], 5)\n    false\n\
    \    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\t\
    @test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpciiltrxd.jl:14\nin expression starting at\
    \ /tmp/tmpciiltrxd.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"Return\
    \ true if all numbers in the vector l are above threshold t.\n    >>> above_threshold([1,\
    \ 2, 4, 10], 100)\n    true\n    >>> above_threshold([1, 20, 4, 10], 5)\n    false\n\
    \    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\t\
    @test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpciiltrxd.jl:14\nin expression starting at\
    \ /tmp/tmpciiltrxd.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    l <= t\nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that returns true if all numbers in the vector l are above threshold t.\n  \
    \  >>> above_threshold([1, 2, 4, 10], 100)\n    true\n    >>> above_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = below_threshold;\n\t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t\
    @test(candidate([1, 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10],\
    \ 11) == true)\n\t@test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpu2xveyrj.jl:10\nin expression starting at\
    \ /tmp/tmpu2xveyrj.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\
    \t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpyl8apve_.jl:8\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpyl8apve_.jl:1\n\
    in expression starting at /tmp/tmpyl8apve_.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\
    \t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmppvxez3bk.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmppvxez3bk.jl:1\n\
    in expression starting at /tmp/tmppvxez3bk.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    return true\nend\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ true if all numbers in the vector l are greater than threshold t.\n    >>> below_threshold([1,\
    \ 2, 4, 10], 100)\n    true\n    >>> below_threshold([1, 20, 4, 10], 5)\n    false\n\
    \    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\t\
    @test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1jjocw6d.jl:13\nin expression starting at\
    \ /tmp/tmp1jjocw6d.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for i in l\n        if i < t\n            return false\n\
    \    return true\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"Return true if\
    \ all numbers in the vector l are above threshold t.\n    >>> above_threshold([1,\
    \ 2, 4, 10], 100)\n    true\n    >>> above_threshold([1, 20, 4, 10], 5)\n    false\n\
    \    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\t\
    @test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpe_aplc81.jl:13\nin expression starting at\
    \ /tmp/tmpe_aplc81.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l \n        if x < t \n            return false\
    \ \n    return true \nend \nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\
    \t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpci_95hzb.jl:8\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpci_95hzb.jl:1\n\
    in expression starting at /tmp/tmpci_95hzb.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\
    \t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpyl8apve_.jl:8\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpyl8apve_.jl:1\n\
    in expression starting at /tmp/tmpyl8apve_.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that returns true if all numbers in the vector l are above threshold t.\n  \
    \  >>> above_threshold([1, 2, 4, 10], 100)\n    true\n    >>> above_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = below_threshold;\n\t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t\
    @test(candidate([1, 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10],\
    \ 11) == true)\n\t@test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_5wqk956.jl:14\nin expression starting at\
    \ /tmp/tmp_5wqk956.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l \n        if x < t \n            return false\
    \ \n    return true \nend \nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\
    \t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpci_95hzb.jl:8\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpci_95hzb.jl:1\n\
    in expression starting at /tmp/tmpci_95hzb.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"Return\
    \ true if all numbers in the vector l are above threshold t.\n    >>> above_threshold([1,\
    \ 2, 4, 10], 100)\n    true\n    >>> above_threshold([1, 20, 4, 10], 5)\n    false\n\
    \    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\t\
    @test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpciiltrxd.jl:14\nin expression starting at\
    \ /tmp/tmpciiltrxd.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\
    \t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmppvxez3bk.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmppvxez3bk.jl:1\n\
    in expression starting at /tmp/tmppvxez3bk.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\
    \t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmppvxez3bk.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmppvxez3bk.jl:1\n\
    in expression starting at /tmp/tmppvxez3bk.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\
    \t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmppvxez3bk.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmppvxez3bk.jl:1\n\
    in expression starting at /tmp/tmppvxez3bk.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\
    \t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpyl8apve_.jl:8\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpyl8apve_.jl:1\n\
    in expression starting at /tmp/tmpyl8apve_.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for n in l\n        if n < t\n            return false\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\
    \t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpup5qxwiq.jl:8\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpup5qxwiq.jl:1\n\
    in expression starting at /tmp/tmpup5qxwiq.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    l <= t\nend\n</cell>\n<code language=julia-1.5>\n@assert\
    \ below_threshold([1, 2, 4, 10], 100) == true\n@assert below_threshold([1, 20,\
    \ 4, 10], 5) == false\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ true if the vector l has exactly one element that is greater than threshold\
    \ t.\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\t@test(candidate([1,\
    \ 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10], 5) == false)\n\t\
    @test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t@test(candidate([1,\
    \ 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1rf60vrw.jl:10\nin expression starting at\
    \ /tmp/tmp1rf60vrw.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\n\
    candidate = below_threshold;\n\t@test(candidate([1, 2, 4, 10], 100) == true)\n\
    \t@test(candidate([1, 20, 4, 10], 5) == false)\n\t@test(candidate([1, 20, 4, 10],\
    \ 21) == true)\n\t@test(candidate([1, 20, 4, 10], 22) == true)\n\t@test(candidate([1,\
    \ 8, 4, 10], 11) == true)\n\t@test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmph3ckfull.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmph3ckfull.jl:20\n  Expression: candidate([1,\
    \ 2, 4, 10], 100) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph3ckfull.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph3ckfull.jl:19\ntest set: Test\
    \ Failed at /tmp/tmph3ckfull.jl:22\n  Expression: candidate([1, 20, 4, 10], 21)\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmph3ckfull.jl:22 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph3ckfull.jl:19\ntest set: Test\
    \ Failed at /tmp/tmph3ckfull.jl:23\n  Expression: candidate([1, 20, 4, 10], 22)\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmph3ckfull.jl:23 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph3ckfull.jl:19\ntest set: Test\
    \ Failed at /tmp/tmph3ckfull.jl:24\n  Expression: candidate([1, 8, 4, 10], 11)\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmph3ckfull.jl:24 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph3ckfull.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     4      6\n"
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    return true\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"Return true if\
    \ all numbers in the vector l are above threshold t.\n    >>> above_threshold([1,\
    \ 2, 4, 10], 100)\n    true\n    >>> above_threshold([1, 20, 4, 10], 5)\n    false\n\
    \    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\t\
    @test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptig69fq7.jl:13\nin expression starting at\
    \ /tmp/tmptig69fq7.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l \n        if x < t \n            return false\
    \ \n    end \n    return true \nend \n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that returns the number of elements in a vector that are less than a given threshold\
    \ t.\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\t@test(candidate([1,\
    \ 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10], 5) == false)\n\t\
    @test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t@test(candidate([1,\
    \ 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpn0__fv52.jl:14\nin expression starting at\
    \ /tmp/tmpn0__fv52.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"Return\
    \ true if all numbers in the vector l are above threshold t.\n    >>> above_threshold([1,\
    \ 2, 4, 10], 100)\n    true\n    >>> above_threshold([1, 20, 4, 10], 5)\n    false\n\
    \    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\t\
    @test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpciiltrxd.jl:14\nin expression starting at\
    \ /tmp/tmpciiltrxd.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l \n        if x < t \n            return false\
    \ \n    end \n    return true \nend \nusing Test\n\n@testset begin\n\ncandidate\
    \ = below_threshold;\n\t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t\
    @test(candidate([1, 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10],\
    \ 11) == true)\n\t@test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpzt9wwerv.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpzt9wwerv.jl:1\n\
    in expression starting at /tmp/tmpzt9wwerv.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for n in l\n        if n < t\n            return false\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\
    \t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpup5qxwiq.jl:8\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpup5qxwiq.jl:1\n\
    in expression starting at /tmp/tmpup5qxwiq.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l \n        if x < t \n            return false\
    \ \n    end \n    return true \nend \n</cell>\n<code language=julia-1.5>\nbelow_threshold([1,\
    \ 2, 4, 10], 100)\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the number of elements in a vector that are less than a given threshold.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = below_threshold;\n\t@test(candidate([1,\
    \ 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10], 5) == false)\n\t\
    @test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t@test(candidate([1,\
    \ 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0k2piiyj.jl:14\nin expression starting at\
    \ /tmp/tmp0k2piiyj.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\
    \t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmppvxez3bk.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmppvxez3bk.jl:1\n\
    in expression starting at /tmp/tmppvxez3bk.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l \n        if x < t \n            return false\
    \ \n    end \n    return true \nend \nusing Test\n\n@testset begin\n\ncandidate\
    \ = below_threshold;\n\t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t\
    @test(candidate([1, 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10],\
    \ 11) == true)\n\t@test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpzt9wwerv.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpzt9wwerv.jl:1\n\
    in expression starting at /tmp/tmpzt9wwerv.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"Return\
    \ true if all numbers in the vector l are above threshold t.\n    >>> above_threshold([1,\
    \ 2, 4, 10], 100)\n    true\n    >>> above_threshold([1, 20, 4, 10], 5)\n    false\n\
    \    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\t\
    @test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpciiltrxd.jl:14\nin expression starting at\
    \ /tmp/tmpciiltrxd.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\
    \t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmppvxez3bk.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmppvxez3bk.jl:1\n\
    in expression starting at /tmp/tmppvxez3bk.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that returns true if all numbers in the vector l are equal to threshold t.\n\
    \    >>> all_equal([1, 2, 4, 10], 100)\n    true\n    >>> all_equal([1, 20, 4,\
    \ 10], 5)\n    false\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate =\
    \ below_threshold;\n\t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t\
    @test(candidate([1, 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10],\
    \ 11) == true)\n\t@test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp787q4cgn.jl:14\nin expression starting at\
    \ /tmp/tmp787q4cgn.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\n\
    candidate = below_threshold;\n\t@test(candidate([1, 2, 4, 10], 100) == true)\n\
    \t@test(candidate([1, 20, 4, 10], 5) == false)\n\t@test(candidate([1, 20, 4, 10],\
    \ 21) == true)\n\t@test(candidate([1, 20, 4, 10], 22) == true)\n\t@test(candidate([1,\
    \ 8, 4, 10], 11) == true)\n\t@test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmph3ckfull.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmph3ckfull.jl:20\n  Expression: candidate([1,\
    \ 2, 4, 10], 100) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph3ckfull.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph3ckfull.jl:19\ntest set: Test\
    \ Failed at /tmp/tmph3ckfull.jl:22\n  Expression: candidate([1, 20, 4, 10], 21)\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmph3ckfull.jl:22 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph3ckfull.jl:19\ntest set: Test\
    \ Failed at /tmp/tmph3ckfull.jl:23\n  Expression: candidate([1, 20, 4, 10], 22)\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmph3ckfull.jl:23 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph3ckfull.jl:19\ntest set: Test\
    \ Failed at /tmp/tmph3ckfull.jl:24\n  Expression: candidate([1, 8, 4, 10], 11)\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmph3ckfull.jl:24 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph3ckfull.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     4      6\n"
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\
    \t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmppvxez3bk.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmppvxez3bk.jl:1\n\
    in expression starting at /tmp/tmppvxez3bk.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for i in l\n        if i < t\n            return false\n\
    \        end\n    end\n    return true\nend\n</cell>\n<code language=julia-1.4>\n\
    \"\"\"Return true if all numbers in the vector l are above threshold t.\n    >>>\
    \ above_threshold([1, 2, 4, 10], 100)\n    true\n    >>> above_threshold([1, 20,\
    \ 4, 10], 5)\n    false\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = below_threshold;\n\t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t\
    @test(candidate([1, 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10],\
    \ 11) == true)\n\t@test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprm_7tvdf.jl:15\nin expression starting at\
    \ /tmp/tmprm_7tvdf.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that returns true if the vector l contains all numbers in the vector u below\
    \ threshold t.\n    >>> below_threshold([1, 2, 4, 10], [1, 20, 4, 10])\n    true\n\
    \    >>> below_threshold([1, 20, 4, 10], [1, 2, 4, 10])\n    false\n    \"\"\"\
    \nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\t@test(candidate([1,\
    \ 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10], 5) == false)\n\t\
    @test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t@test(candidate([1,\
    \ 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgbtd5wov.jl:14\nin expression starting at\
    \ /tmp/tmpgbtd5wov.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\n</cell>\n<code language=julia-1.5>\n@assert below_threshold([1,\
    \ 2, 4, 10], 100) == true\n@assert below_threshold([1, 20, 4, 10], 5) == false\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns true if the vector\
    \ l has at least two elements that are both below threshold t.\nusing Test\n\n\
    @testset begin\n\ncandidate = below_threshold;\n\t@test(candidate([1, 2, 4, 10],\
    \ 100) == true)\n\t@test(candidate([1, 20, 4, 10], 5) == false)\n\t@test(candidate([1,\
    \ 20, 4, 10], 21) == true)\n\t@test(candidate([1, 20, 4, 10], 22) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 11) == true)\n\t@test(candidate([1, 8, 4, 10],\
    \ 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2sley2r3.jl:14\nin expression starting at\
    \ /tmp/tmp2sley2r3.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\
    \t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmppvxez3bk.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmppvxez3bk.jl:1\n\
    in expression starting at /tmp/tmppvxez3bk.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\n</cell>\n<code language=julia-1.5>\n@assert below_threshold([1,\
    \ 2, 4, 10], 100) == true\n@assert below_threshold([1, 20, 4, 10], 5) == false\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns true if the vector\
    \ l contains any numbers that are not in the vector u. For example, if the vector\
    \ l is [10, 20, 30] and the vector u is [10, 20, 30], your function should return\
    \ true.\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\t@test(candidate([1,\
    \ 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10], 5) == false)\n\t\
    @test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t@test(candidate([1,\
    \ 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpj61xx4uj.jl:14\nin expression starting at\
    \ /tmp/tmpj61xx4uj.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for i in l\n        if i < t\n            return false\n\
    \        end\n    end\n    return true\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"Return true if all numbers in the vector l are above threshold t.\n    >>>\
    \ above_threshold([1, 2, 4, 10], 100)\n    true\n    >>> above_threshold([1, 20,\
    \ 4, 10], 5)\n    false\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = below_threshold;\n\t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t\
    @test(candidate([1, 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10],\
    \ 11) == true)\n\t@test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpntl5wjay.jl:15\nin expression starting at\
    \ /tmp/tmpntl5wjay.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \        end\n    end\n    return true\nend\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that returns true if all numbers in the vector l are above threshold\
    \ t.\n    >>> above_threshold([1, 2, 4, 10], 100)\n    true\n    >>> above_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = below_threshold;\n\t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t\
    @test(candidate([1, 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10],\
    \ 11) == true)\n\t@test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpq87_4g65.jl:15\nin expression starting at\
    \ /tmp/tmpq87_4g65.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\
    \t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmppvxez3bk.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmppvxez3bk.jl:1\n\
    in expression starting at /tmp/tmppvxez3bk.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\n</cell>\n<text>\nExercise 4\nWrite a function\
    \ that returns true if all numbers in the vector l are above threshold t.\n  \
    \  >>> above_threshold([1, 2, 4, 10], 100)\n    true\n    >>> above_threshold([1,\
    \ 20, 4, 10], 5)\n    true\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = below_threshold;\n\t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t\
    @test(candidate([1, 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10],\
    \ 11) == true)\n\t@test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpszotkf3d.jl:14\nin expression starting at\
    \ /tmp/tmpszotkf3d.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    l <= t\nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that returns the number of elements in a vector that are greater than a specified\
    \ value.\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\t@test(candidate([1,\
    \ 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10], 5) == false)\n\t\
    @test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t@test(candidate([1,\
    \ 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpra71x_o_.jl:10\nin expression starting at\
    \ /tmp/tmpra71x_o_.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\
    \t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmppvxez3bk.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmppvxez3bk.jl:1\n\
    in expression starting at /tmp/tmppvxez3bk.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    return true\nend\n</cell>\n<code language=julia-1.5>\n@assert below_threshold([1,\
    \ 2, 4, 10], 100) == true\n@assert below_threshold([1, 20, 4, 10], 5) == false\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns true if the vector\
    \ l has at least two elements that are both below threshold t.\nusing Test\n\n\
    @testset begin\n\ncandidate = below_threshold;\n\t@test(candidate([1, 2, 4, 10],\
    \ 100) == true)\n\t@test(candidate([1, 20, 4, 10], 5) == false)\n\t@test(candidate([1,\
    \ 20, 4, 10], 21) == true)\n\t@test(candidate([1, 20, 4, 10], 22) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 11) == true)\n\t@test(candidate([1, 8, 4, 10],\
    \ 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwnswt5g9.jl:13\nin expression starting at\
    \ /tmp/tmpwnswt5g9.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that returns true if all numbers in the vector l are greater than threshold\
    \ t.\n    >>> below_threshold([1, 2, 4, 10], 5)\n    false\n    >>> below_threshold([1,\
    \ 20, 4, 10], 100)\n    true\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = below_threshold;\n\t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t\
    @test(candidate([1, 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10],\
    \ 11) == true)\n\t@test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8r349idy.jl:14\nin expression starting at\
    \ /tmp/tmp8r349idy.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\n</cell>\n<code language=julia-1.5>\nbelow_threshold([1,\
    \ 2, 4, 10], 100)\n</cell>\n<code language=julia-1.5>\nbelow_threshold([1, 20,\
    \ 4, 10], 5)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the number\
    \ of elements in a vector that are greater than a given threshold t.\nusing Test\n\
    \n@testset begin\n\ncandidate = below_threshold;\n\t@test(candidate([1, 2, 4,\
    \ 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10], 5) == false)\n\t@test(candidate([1,\
    \ 20, 4, 10], 21) == true)\n\t@test(candidate([1, 20, 4, 10], 22) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 11) == true)\n\t@test(candidate([1, 8, 4, 10],\
    \ 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp464ah9rv.jl:14\nin expression starting at\
    \ /tmp/tmp464ah9rv.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    l <= t\nend\n</cell>\n<text>\nExercise\nWrite a function\
    \ that returns true if all numbers in the vector l are greater than threshold\
    \ t.\nWrite a function that returns true if all numbers in the vector l are greater\
    \ than or equal to threshold t.\nWrite a function that returns true if all numbers\
    \ in the vector l are less than threshold t.\nWrite a function that returns true\
    \ if all numbers in the vector l are less than or equal to threshold t.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = below_threshold;\n\t@test(candidate([1,\
    \ 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10], 5) == false)\n\t\
    @test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t@test(candidate([1,\
    \ 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpb63q84b7.jl:10\nin expression starting at\
    \ /tmp/tmpb63q84b7.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\n</cell>\n<code language=julia-1.5>\n@assert below_threshold([1,\
    \ 2, 4, 10], 100) == true\n@assert below_threshold([1, 20, 4, 10], 5) == false\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the number of elements\
    \ in a vector that are less than a specified threshold.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = below_threshold;\n\t@test(candidate([1, 2, 4, 10], 100)\
    \ == true)\n\t@test(candidate([1, 20, 4, 10], 5) == false)\n\t@test(candidate([1,\
    \ 20, 4, 10], 21) == true)\n\t@test(candidate([1, 20, 4, 10], 22) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 11) == true)\n\t@test(candidate([1, 8, 4, 10],\
    \ 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0y50b38z.jl:14\nin expression starting at\
    \ /tmp/tmp0y50b38z.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\
    \t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmppvxez3bk.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmppvxez3bk.jl:1\n\
    in expression starting at /tmp/tmppvxez3bk.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\n</cell>\n<code language=julia-1.5>\nbelow_threshold([1,\
    \ 2, 4, 10], 100)\n</cell>\n<code language=julia-1.5>\nbelow_threshold([1, 20,\
    \ 4, 10], 5)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the number\
    \ of elements in a vector that are less than a given threshold t.\nusing Test\n\
    \n@testset begin\n\ncandidate = below_threshold;\n\t@test(candidate([1, 2, 4,\
    \ 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10], 5) == false)\n\t@test(candidate([1,\
    \ 20, 4, 10], 21) == true)\n\t@test(candidate([1, 20, 4, 10], 22) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 11) == true)\n\t@test(candidate([1, 8, 4, 10],\
    \ 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqmxalcyl.jl:14\nin expression starting at\
    \ /tmp/tmpqmxalcyl.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    return true\nend\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ true if all numbers in the vector l are greater than threshold t.\n    >>> above_threshold([1,\
    \ 2, 4, 10], 100)\n    true\n    >>> above_threshold([1, 20, 4, 10], 5)\n    false\n\
    \    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\t\
    @test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzkj25867.jl:13\nin expression starting at\
    \ /tmp/tmpzkj25867.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for n in l\n        if n < t\n            return false\n\
    \    end\n    return true\nend\n</cell>\n<code language=julia-1.5>\nbelow_threshold([1,\
    \ 2, 4, 10], 100)\n</cell>\n<code language=julia-1.5>\nbelow_threshold([1, 20,\
    \ 4, 10], 5)\n</cell>\n<text>\nExercise: Write a function that returns the number\
    \ of elements in a vector that are below a certain threshold. Test it on some\
    \ vectors.\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\t@test(candidate([1,\
    \ 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10], 5) == false)\n\t\
    @test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t@test(candidate([1,\
    \ 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp75bn3_l_.jl:14\nin expression starting at\
    \ /tmp/tmp75bn3_l_.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \        end\n    end\n    return true\nend\n</cell>\n<text>\nExercise 4\nWrite\
    \ a function that returns true if all numbers in the vector l are greater than\
    \ threshold t.\n    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>>\
    \ below_threshold([1, 20, 4, 10], 5)\n    false\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = below_threshold;\n\t@test(candidate([1, 2, 4, 10], 100)\
    \ == true)\n\t@test(candidate([1, 20, 4, 10], 5) == false)\n\t@test(candidate([1,\
    \ 20, 4, 10], 21) == true)\n\t@test(candidate([1, 20, 4, 10], 22) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 11) == true)\n\t@test(candidate([1, 8, 4, 10],\
    \ 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxup3ioum.jl:15\nin expression starting at\
    \ /tmp/tmpxup3ioum.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l \n        if x < t \n            return false\
    \ \n    end \n    return true \nend \nusing Test\n\n@testset begin\n\ncandidate\
    \ = below_threshold;\n\t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t\
    @test(candidate([1, 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10],\
    \ 11) == true)\n\t@test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpzt9wwerv.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpzt9wwerv.jl:1\n\
    in expression starting at /tmp/tmpzt9wwerv.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\n</cell>\n<code language=julia-1.4>\n\"\"\"Return\
    \ true if all numbers in the vector l are above threshold t.\n    >>> above_threshold([1,\
    \ 2, 4, 10], 100)\n    true\n    >>> above_threshold([1, 20, 4, 10], 5)\n    false\n\
    \    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\t\
    @test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplfa3dwg0.jl:14\nin expression starting at\
    \ /tmp/tmplfa3dwg0.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l \n        if x < t \n            return false\
    \ \n    return true \nend\n</cell>\n<text>\nExercise 4\nWrite a function that\
    \ returns true if the vector l contains at least two numbers that are both below\
    \ threshold t and above threshold t.\nHint: Use the function below_threshold.\n\
    using Test\n\n@testset begin\n\ncandidate = below_threshold;\n\t@test(candidate([1,\
    \ 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10], 5) == false)\n\t\
    @test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t@test(candidate([1,\
    \ 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2ht0xmkl.jl:13\nin expression starting at\
    \ /tmp/tmp2ht0xmkl.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    return true\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"Return true if\
    \ all numbers in the vector l are above threshold t.\n    >>> above_threshold([1,\
    \ 2, 4, 10], 100)\n    true\n    >>> above_threshold([1, 20, 4, 10], 5)\n    false\n\
    \    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\t\
    @test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptig69fq7.jl:13\nin expression starting at\
    \ /tmp/tmptig69fq7.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    return true\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"Return true if\
    \ all numbers in the vector l are above threshold t.\n    >>> above_threshold([1,\
    \ 2, 4, 10], 100)\n    true\n    >>> above_threshold([1, 20, 4, 10], 5)\n    false\n\
    \    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\t\
    @test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptig69fq7.jl:13\nin expression starting at\
    \ /tmp/tmptig69fq7.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"Return\
    \ true if all numbers in the vector l are above threshold t.\n    >>> above_threshold([1,\
    \ 2, 4, 10], 100)\n    true\n    >>> above_threshold([1, 20, 4, 10], 5)\n    false\n\
    \    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\t\
    @test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpciiltrxd.jl:14\nin expression starting at\
    \ /tmp/tmpciiltrxd.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\
    \t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmppvxez3bk.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmppvxez3bk.jl:1\n\
    in expression starting at /tmp/tmppvxez3bk.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for i in l\n        if i < t\n            return false\n\
    \        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\n\
    candidate = below_threshold;\n\t@test(candidate([1, 2, 4, 10], 100) == true)\n\
    \t@test(candidate([1, 20, 4, 10], 5) == false)\n\t@test(candidate([1, 20, 4, 10],\
    \ 21) == true)\n\t@test(candidate([1, 20, 4, 10], 22) == true)\n\t@test(candidate([1,\
    \ 8, 4, 10], 11) == true)\n\t@test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp7521gxnf.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmp7521gxnf.jl:20\n  Expression: candidate([1,\
    \ 2, 4, 10], 100) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7521gxnf.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7521gxnf.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp7521gxnf.jl:22\n  Expression: candidate([1, 20, 4, 10], 21)\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp7521gxnf.jl:22 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7521gxnf.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp7521gxnf.jl:23\n  Expression: candidate([1, 20, 4, 10], 22)\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp7521gxnf.jl:23 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7521gxnf.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp7521gxnf.jl:24\n  Expression: candidate([1, 8, 4, 10], 11)\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp7521gxnf.jl:24 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7521gxnf.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     4      6\n"
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\
    \t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpyl8apve_.jl:8\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpyl8apve_.jl:1\n\
    in expression starting at /tmp/tmpyl8apve_.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"Return\
    \ true if all numbers in the vector l are above threshold t.\n    >>> above_threshold([1,\
    \ 2, 4, 10], 100)\n    true\n    >>> above_threshold([1, 20, 4, 10], 5)\n    false\n\
    \    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\t\
    @test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpciiltrxd.jl:14\nin expression starting at\
    \ /tmp/tmpciiltrxd.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l \n        if x < t \n            return false\
    \ \n    return true \nend \nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\
    \t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpci_95hzb.jl:8\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpci_95hzb.jl:1\n\
    in expression starting at /tmp/tmpci_95hzb.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for i in l\n        if i < t\n            return false\n\
    \    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\
    \t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwrhuggob.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwrhuggob.jl:1\n\
    in expression starting at /tmp/tmpwrhuggob.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that returns true if all numbers in the vector l are greater than threshold\
    \ t.\n    >>> below_threshold([1, 2, 4, 10], 5)\n    false\n    >>> below_threshold([1,\
    \ 20, 4, 10], 100)\n    true\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = below_threshold;\n\t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t\
    @test(candidate([1, 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10],\
    \ 11) == true)\n\t@test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8r349idy.jl:14\nin expression starting at\
    \ /tmp/tmp8r349idy.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\
    \t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpyl8apve_.jl:8\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpyl8apve_.jl:1\n\
    in expression starting at /tmp/tmpyl8apve_.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l \n        if x < t \n            return false\
    \ \n    end \n    return true \nend \n</cell>\n<text>\nExercise 4\nWrite a function\
    \ that returns true if all numbers in the vector l are greater than threshold\
    \ t.\n    >>> above_threshold([1, 2, 4, 10], 100)\n    true\n    >>> above_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = below_threshold;\n\t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t\
    @test(candidate([1, 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10],\
    \ 11) == true)\n\t@test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp99qfa0e_.jl:14\nin expression starting at\
    \ /tmp/tmp99qfa0e_.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\
    \t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpyl8apve_.jl:8\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpyl8apve_.jl:1\n\
    in expression starting at /tmp/tmpyl8apve_.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\
    \t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpyl8apve_.jl:8\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpyl8apve_.jl:1\n\
    in expression starting at /tmp/tmpyl8apve_.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\n</cell>\n<code language=julia-1.5>\n@assert below_threshold([1,\
    \ 2, 4, 10], 100) == true\n@assert below_threshold([1, 20, 4, 10], 5) == false\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns true if the vector\
    \ l contains at least one number that is greater than or equal to threshold t.\n\
    using Test\n\n@testset begin\n\ncandidate = below_threshold;\n\t@test(candidate([1,\
    \ 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10], 5) == false)\n\t\
    @test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t@test(candidate([1,\
    \ 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpx296l1x2.jl:14\nin expression starting at\
    \ /tmp/tmpx296l1x2.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l \n        if x < t \n            return false\
    \ \n    end \n    return true \nend \n</cell>\n<code language=julia-1.3>\n\"\"\
    \"Return true if all numbers in the vector l are above threshold t.\n    >>> above_threshold([1,\
    \ 2, 4, 10], 100)\n    true\n    >>> above_threshold([1, 20, 4, 10], 5)\n    false\n\
    \    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\t\
    @test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpatzncyw0.jl:14\nin expression starting at\
    \ /tmp/tmpatzncyw0.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\
    \t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmppvxez3bk.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmppvxez3bk.jl:1\n\
    in expression starting at /tmp/tmppvxez3bk.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\n</cell>\n<code language=julia-1.4>\n\"\"\"Return\
    \ true if all numbers in the vector l are above threshold t.\n    >>> above_threshold([1,\
    \ 2, 4, 10], 100)\n    true\n    >>> above_threshold([1, 20, 4, 10], 5)\n    false\n\
    \    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\t\
    @test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplfa3dwg0.jl:14\nin expression starting at\
    \ /tmp/tmplfa3dwg0.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\
    \t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmppvxez3bk.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmppvxez3bk.jl:1\n\
    in expression starting at /tmp/tmppvxez3bk.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\n</cell>\n<code language=julia-1.5>\n@assert below_threshold([1,\
    \ 2, 4, 10], 100) == true\n@assert below_threshold([1, 20, 4, 10], 5) == false\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns true if the vector\
    \ l contains at least two numbers that are both below threshold t.\nusing Test\n\
    \n@testset begin\n\ncandidate = below_threshold;\n\t@test(candidate([1, 2, 4,\
    \ 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10], 5) == false)\n\t@test(candidate([1,\
    \ 20, 4, 10], 21) == true)\n\t@test(candidate([1, 20, 4, 10], 22) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 11) == true)\n\t@test(candidate([1, 8, 4, 10],\
    \ 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3s2v5yy9.jl:14\nin expression starting at\
    \ /tmp/tmp3s2v5yy9.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    return true\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"Return true if\
    \ all numbers in the vector l are above threshold t.\n    >>> above_threshold([1,\
    \ 2, 4, 10], 100)\n    true\n    >>> above_threshold([1, 20, 4, 10], 5)\n    false\n\
    \    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\t\
    @test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptig69fq7.jl:13\nin expression starting at\
    \ /tmp/tmptig69fq7.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that returns true if all numbers in the vector l are above threshold t.\n  \
    \  >>> above_threshold([1, 2, 4, 10], 100)\n    true\n    >>> above_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = below_threshold;\n\t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t\
    @test(candidate([1, 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10],\
    \ 11) == true)\n\t@test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_5wqk956.jl:14\nin expression starting at\
    \ /tmp/tmp_5wqk956.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for n in l \n        if n < t \n            return false\
    \ \n    return true \nend\n</cell>\n<code language=julia-1.5>\n@assert below_threshold([1,\
    \ 2, 4, 10], 100) == true\n@assert below_threshold([1, 20, 4, 10], 5) == false\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the number of times\
    \ the value t appears in the vector l.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = below_threshold;\n\t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t\
    @test(candidate([1, 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10],\
    \ 11) == true)\n\t@test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpi4nwekvo.jl:13\nin expression starting at\
    \ /tmp/tmpi4nwekvo.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\n</cell>\n<text>\nExercise 4\nWrite a function\
    \ that returns true if the vector l has at least two non-negative numbers in it.\n\
    using Test\n\n@testset begin\n\ncandidate = below_threshold;\n\t@test(candidate([1,\
    \ 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10], 5) == false)\n\t\
    @test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t@test(candidate([1,\
    \ 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpowd8ssz3.jl:14\nin expression starting at\
    \ /tmp/tmpowd8ssz3.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    below_threshold = false\n    for n in l\n        if n\
    \ < t\n            below_threshold = true\n            break\n        end\n  \
    \  end\n    return below_threshold\nend\n</cell>\n<text>\nExercise 4\nWrite a\
    \ function that returns true if the vector l contains any numbers that are not\
    \ in the vector u. For example, if the vector l is [4, 6, 10] and u is [4, 6,\
    \ 10, 15], the function should return true.\nusing Test\n\n@testset begin\n\n\
    candidate = below_threshold;\n\t@test(candidate([1, 2, 4, 10], 100) == true)\n\
    \t@test(candidate([1, 20, 4, 10], 5) == false)\n\t@test(candidate([1, 20, 4, 10],\
    \ 21) == true)\n\t@test(candidate([1, 20, 4, 10], 22) == true)\n\t@test(candidate([1,\
    \ 8, 4, 10], 11) == true)\n\t@test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1vgi9l41.jl:17\nin expression starting at\
    \ /tmp/tmp1vgi9l41.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\n</cell>\n<code language=julia-1.5>\n@assert below_threshold([1,\
    \ 2, 4, 10], 100) == true\n@assert below_threshold([1, 20, 4, 10], 5) == false\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns true if all numbers\
    \ in the vector l are greater than threshold t.\n    >>> above_threshold([1, 2,\
    \ 4, 10], 100)\n    true\n    >>> above_threshold([1, 20, 4, 10], 5)\n    false\n\
    \    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\t\
    @test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjoullhco.jl:14\nin expression starting at\
    \ /tmp/tmpjoullhco.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    below_threshold = false\n    for x in l\n        if x\
    \ < t\n            below_threshold = true\n            break\n        end\n  \
    \  end\n    return below_threshold\nend\n</cell>\n<text>\nExercise 7: Write a\
    \ function that returns true if all numbers in the vector l are above threshold\
    \ t.\n    >>> above_threshold([1, 2, 4, 10], 100)\n    true\n    >>> above_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = below_threshold;\n\t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t\
    @test(candidate([1, 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10],\
    \ 11) == true)\n\t@test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4wpz_yog.jl:17\nin expression starting at\
    \ /tmp/tmp4wpz_yog.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    return true\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"Return true if\
    \ all numbers in the vector l are above threshold t.\n    >>> above_threshold([1,\
    \ 2, 4, 10], 100)\n    true\n    >>> above_threshold([1, 20, 4, 10], 5)\n    false\n\
    \    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\t\
    @test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptig69fq7.jl:13\nin expression starting at\
    \ /tmp/tmptig69fq7.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for n in l \n        if n < t \n            return false\
    \ \n    end \n    return true \nend \n</cell>\n<text>\nExercise\nWrite a function\
    \ that returns true if all numbers in the vector l are below threshold t.\nWrite\
    \ a function that returns true if all numbers in the vector l are above threshold\
    \ t.\nWrite a function that returns true if all numbers in the vector l are between\
    \ threshold t and threshold t+1.\nWrite a function that returns true if all numbers\
    \ in the vector l are between threshold t and threshold t+2.\nWrite a function\
    \ that returns true if all numbers in the vector l are between threshold t and\
    \ threshold t+3.\nWrite a function that returns true if all numbers in the vector\
    \ l are between threshold t and threshold t+4.\nusing Test\n\n@testset begin\n\
    \ncandidate = below_threshold;\n\t@test(candidate([1, 2, 4, 10], 100) == true)\n\
    \t@test(candidate([1, 20, 4, 10], 5) == false)\n\t@test(candidate([1, 20, 4, 10],\
    \ 21) == true)\n\t@test(candidate([1, 20, 4, 10], 22) == true)\n\t@test(candidate([1,\
    \ 8, 4, 10], 11) == true)\n\t@test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpj7krs0iv.jl:14\nin expression starting at\
    \ /tmp/tmpj7krs0iv.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for n in l\n        if n < t\n            return false\n\
    \    end\n    return true\nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that returns true if all numbers in the vector l are greater than threshold\
    \ t.\n    >>> below_threshold([1, 2, 4, 10], 5)\n    false\n    >>> below_threshold([1,\
    \ 20, 4, 10], 100)\n    true\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = below_threshold;\n\t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t\
    @test(candidate([1, 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10],\
    \ 11) == true)\n\t@test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmergu0yv.jl:14\nin expression starting at\
    \ /tmp/tmpmergu0yv.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\
    \t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmppvxez3bk.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmppvxez3bk.jl:1\n\
    in expression starting at /tmp/tmppvxez3bk.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \        end\n    end\n    return true\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"Return true if all numbers in the vector l are above threshold t.\n    >>>\
    \ above_threshold([1, 2, 4, 10], 100)\n    true\n    >>> above_threshold([1, 20,\
    \ 4, 10], 5)\n    false\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = below_threshold;\n\t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t\
    @test(candidate([1, 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10],\
    \ 11) == true)\n\t@test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3je99gfp.jl:15\nin expression starting at\
    \ /tmp/tmp3je99gfp.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\
    \t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpyl8apve_.jl:8\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpyl8apve_.jl:1\n\
    in expression starting at /tmp/tmpyl8apve_.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"Return\
    \ true if all numbers in the vector l are above threshold t.\n    >>> above_threshold([1,\
    \ 2, 4, 10], 100)\n    true\n    >>> above_threshold([1, 20, 4, 10], 5)\n    false\n\
    \    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\t\
    @test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpciiltrxd.jl:14\nin expression starting at\
    \ /tmp/tmpciiltrxd.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\n</cell>\n<text>\nExercise 4\nWrite a function\
    \ that returns true if all numbers in the vector l are equal to threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = below_threshold;\n\t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t\
    @test(candidate([1, 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10],\
    \ 11) == true)\n\t@test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphidmg2lr.jl:14\nin expression starting at\
    \ /tmp/tmphidmg2lr.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that returns true if the vector l contains any numbers that are not in the vector\
    \ u.\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\t@test(candidate([1,\
    \ 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10], 5) == false)\n\t\
    @test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t@test(candidate([1,\
    \ 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxj1ntifo.jl:14\nin expression starting at\
    \ /tmp/tmpxj1ntifo.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l \n        if x < t \n            return false\
    \ \n    end \n    return true \nend \n</cell>\n<code language=julia-1.5>\n\"\"\
    \"Return true if all numbers in the vector l are above threshold t.\n    >>> above_threshold([1,\
    \ 2, 4, 10], 100)\n    true\n    >>> above_threshold([1, 20, 4, 10], 5)\n    false\n\
    \    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\t\
    @test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpw1x61q21.jl:14\nin expression starting at\
    \ /tmp/tmpw1x61q21.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\
    \t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmppvxez3bk.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmppvxez3bk.jl:1\n\
    in expression starting at /tmp/tmppvxez3bk.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l \n        if x < t \n            return false\
    \ \n    end \n    return true \nend \n</cell>\n<text>\nExercise: Write a function\
    \ that returns true if all numbers in the vector l are greater than threshold\
    \ t.\nHint: Use a for loop.\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\
    \t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp82mt3ap0.jl:14\nin expression starting at\
    \ /tmp/tmp82mt3ap0.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \        end\n    end\n    return true\nend\n</cell>\n<text>\nExercise 4\nWrite\
    \ a function that returns true if all numbers in the vector l are greater than\
    \ threshold t.\n    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>>\
    \ below_threshold([1, 20, 4, 10], 5)\n    false\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = below_threshold;\n\t@test(candidate([1, 2, 4, 10], 100)\
    \ == true)\n\t@test(candidate([1, 20, 4, 10], 5) == false)\n\t@test(candidate([1,\
    \ 20, 4, 10], 21) == true)\n\t@test(candidate([1, 20, 4, 10], 22) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 11) == true)\n\t@test(candidate([1, 8, 4, 10],\
    \ 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxup3ioum.jl:15\nin expression starting at\
    \ /tmp/tmpxup3ioum.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\n\
    candidate = below_threshold;\n\t@test(candidate([1, 2, 4, 10], 100) == true)\n\
    \t@test(candidate([1, 20, 4, 10], 5) == false)\n\t@test(candidate([1, 20, 4, 10],\
    \ 21) == true)\n\t@test(candidate([1, 20, 4, 10], 22) == true)\n\t@test(candidate([1,\
    \ 8, 4, 10], 11) == true)\n\t@test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmph3ckfull.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmph3ckfull.jl:20\n  Expression: candidate([1,\
    \ 2, 4, 10], 100) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph3ckfull.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph3ckfull.jl:19\ntest set: Test\
    \ Failed at /tmp/tmph3ckfull.jl:22\n  Expression: candidate([1, 20, 4, 10], 21)\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmph3ckfull.jl:22 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph3ckfull.jl:19\ntest set: Test\
    \ Failed at /tmp/tmph3ckfull.jl:23\n  Expression: candidate([1, 20, 4, 10], 22)\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmph3ckfull.jl:23 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph3ckfull.jl:19\ntest set: Test\
    \ Failed at /tmp/tmph3ckfull.jl:24\n  Expression: candidate([1, 8, 4, 10], 11)\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmph3ckfull.jl:24 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph3ckfull.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     4      6\n"
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l \n        if x < t \n            return false\
    \ \n    return true \nend\n</cell>\n<code language=julia-1.5>\n\"\"\"Return true\
    \ if all numbers in the vector l are above threshold t.\n    >>> above_threshold([1,\
    \ 2, 4, 10], 100)\n    true\n    >>> above_threshold([1, 20, 4, 10], 5)\n    false\n\
    \    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\t\
    @test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpv4c2qand.jl:13\nin expression starting at\
    \ /tmp/tmpv4c2qand.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    return true\nend\n</cell>\n<code language=julia-1.4>\n\"\"\"Return true if\
    \ all numbers in the vector l are above threshold t.\n    >>> above_threshold([1,\
    \ 2, 4, 10], 100)\n    true\n    >>> above_threshold([1, 20, 4, 10], 5)\n    false\n\
    \    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\t\
    @test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpbcobtwza.jl:13\nin expression starting at\
    \ /tmp/tmpbcobtwza.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l \n        if x < t \n            return false\
    \ \n    end \n    return true \nend \n</cell>\n<code language=julia-1.5>\n\"\"\
    \"Return true if all numbers in the vector l are above threshold t.\n    >>> above_threshold([1,\
    \ 2, 4, 10], 100)\n    true\n    >>> above_threshold([1, 20, 4, 10], 5)\n    false\n\
    \    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\t\
    @test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpw1x61q21.jl:14\nin expression starting at\
    \ /tmp/tmpw1x61q21.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    l = sort(l)\n    l = l[l .< t]\n    length(l) == 0 ||\
    \ t == 0\nend\n</cell>\n<code language=julia-1.5>\n@assert below_threshold([1,\
    \ 2, 4, 10], 100) == true\n@assert below_threshold([1, 20, 4, 10], 5) == false\n\
    </cell>\n<text>\nExercise 2\nWrite a function below that takes a list of numbers\
    \ and returns the sum of the numbers in the list that are below the threshold\
    \ t.\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\t@test(candidate([1,\
    \ 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10], 5) == false)\n\t\
    @test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t@test(candidate([1,\
    \ 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpasuf3v0u.jl:12\nin expression starting at\
    \ /tmp/tmpasuf3v0u.jl:12\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    return true\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"Return true if\
    \ all numbers in the vector l are above threshold t.\n    >>> above_threshold([1,\
    \ 2, 4, 10], 100)\n    true\n    >>> above_threshold([1, 20, 4, 10], 5)\n    false\n\
    \    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\t\
    @test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptig69fq7.jl:13\nin expression starting at\
    \ /tmp/tmptig69fq7.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\n</cell>\n<code language=julia-1.5>\nbelow_threshold([1,\
    \ 2, 4, 10], 100)\n</cell>\n<code language=julia-1.5>\nbelow_threshold([1, 20,\
    \ 4, 10], 5)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the number\
    \ of elements in a vector that are less than a given threshold.\nusing Test\n\n\
    @testset begin\n\ncandidate = below_threshold;\n\t@test(candidate([1, 2, 4, 10],\
    \ 100) == true)\n\t@test(candidate([1, 20, 4, 10], 5) == false)\n\t@test(candidate([1,\
    \ 20, 4, 10], 21) == true)\n\t@test(candidate([1, 20, 4, 10], 22) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 11) == true)\n\t@test(candidate([1, 8, 4, 10],\
    \ 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcbg7x9tb.jl:14\nin expression starting at\
    \ /tmp/tmpcbg7x9tb.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l \n        if x < t \n            return false\
    \ \n    end \n    return true \nend \n</cell>\n<code language=julia-1.5>\n@assert\
    \ below_threshold([1, 2, 4, 10], 100) == true\n@assert below_threshold([1, 20,\
    \ 4, 10], 5) == false\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ true if all numbers in the vector l are less than or equal to threshold t.\n\
    Hint: use the function below_threshold.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = below_threshold;\n\t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t\
    @test(candidate([1, 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10],\
    \ 11) == true)\n\t@test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmvwip33f.jl:14\nin expression starting at\
    \ /tmp/tmpmvwip33f.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l \n        if x < t \n            return false\
    \ \n    end \n    return true \nend \n</cell>\n<text>\nExercise 4\nWrite a function\
    \ that returns true if all numbers in the vector l are above threshold t.\n  \
    \  >>> above_threshold([1, 2, 4, 10], 100)\n    true\n    >>> above_threshold([1,\
    \ 20, 4, 10], 5)\n    true\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = below_threshold;\n\t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t\
    @test(candidate([1, 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10],\
    \ 11) == true)\n\t@test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxpc4d0v6.jl:14\nin expression starting at\
    \ /tmp/tmpxpc4d0v6.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\
    \t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpyl8apve_.jl:8\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpyl8apve_.jl:1\n\
    in expression starting at /tmp/tmpyl8apve_.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l \n        if x < t \n            return false\
    \ \n    return true \nend\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ returns true if all numbers in the vector l are above threshold t.\n    >>>\
    \ above_threshold([1, 2, 4, 10], 100)\n    true\n    >>> above_threshold([1, 20,\
    \ 4, 10], 5)\n    false\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = below_threshold;\n\t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t\
    @test(candidate([1, 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10],\
    \ 11) == true)\n\t@test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5csub3wd.jl:13\nin expression starting at\
    \ /tmp/tmp5csub3wd.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for i in l\n        if i < t\n            return false\n\
    \    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\
    \t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwrhuggob.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwrhuggob.jl:1\n\
    in expression starting at /tmp/tmpwrhuggob.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l \n        if x < t \n            return false\
    \ \n    return true \nend\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ returns true if all numbers in the vector l are above threshold t.\n    >>>\
    \ above_threshold([1, 2, 4, 10], 100)\n    true\n    >>> above_threshold([1, 20,\
    \ 4, 10], 5)\n    false\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = below_threshold;\n\t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t\
    @test(candidate([1, 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10],\
    \ 11) == true)\n\t@test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5csub3wd.jl:13\nin expression starting at\
    \ /tmp/tmp5csub3wd.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \        end\n    end\n    return true\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"Return true if all numbers in the vector l are above threshold t.\n    >>>\
    \ above_threshold([1, 2, 4, 10], 100)\n    true\n    >>> above_threshold([1, 20,\
    \ 4, 10], 5)\n    false\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = below_threshold;\n\t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t\
    @test(candidate([1, 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10],\
    \ 11) == true)\n\t@test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3je99gfp.jl:15\nin expression starting at\
    \ /tmp/tmp3je99gfp.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\n</cell>\n<code language=julia-1.5>\n@assert below_threshold([1,\
    \ 2, 4, 10], 100) == true\n@assert below_threshold([1, 20, 4, 10], 5) == false\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the number of elements\
    \ in a vector that are less than a given threshold t.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = below_threshold;\n\t@test(candidate([1, 2, 4, 10], 100)\
    \ == true)\n\t@test(candidate([1, 20, 4, 10], 5) == false)\n\t@test(candidate([1,\
    \ 20, 4, 10], 21) == true)\n\t@test(candidate([1, 20, 4, 10], 22) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 11) == true)\n\t@test(candidate([1, 8, 4, 10],\
    \ 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpm5o3i0sb.jl:14\nin expression starting at\
    \ /tmp/tmpm5o3i0sb.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\
    \t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpyl8apve_.jl:8\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpyl8apve_.jl:1\n\
    in expression starting at /tmp/tmpyl8apve_.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\n\
    candidate = below_threshold;\n\t@test(candidate([1, 2, 4, 10], 100) == true)\n\
    \t@test(candidate([1, 20, 4, 10], 5) == false)\n\t@test(candidate([1, 20, 4, 10],\
    \ 21) == true)\n\t@test(candidate([1, 20, 4, 10], 22) == true)\n\t@test(candidate([1,\
    \ 8, 4, 10], 11) == true)\n\t@test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmph3ckfull.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmph3ckfull.jl:20\n  Expression: candidate([1,\
    \ 2, 4, 10], 100) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph3ckfull.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph3ckfull.jl:19\ntest set: Test\
    \ Failed at /tmp/tmph3ckfull.jl:22\n  Expression: candidate([1, 20, 4, 10], 21)\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmph3ckfull.jl:22 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph3ckfull.jl:19\ntest set: Test\
    \ Failed at /tmp/tmph3ckfull.jl:23\n  Expression: candidate([1, 20, 4, 10], 22)\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmph3ckfull.jl:23 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph3ckfull.jl:19\ntest set: Test\
    \ Failed at /tmp/tmph3ckfull.jl:24\n  Expression: candidate([1, 8, 4, 10], 11)\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmph3ckfull.jl:24 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph3ckfull.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     4      6\n"
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l \n        if x < t \n            return false\
    \ \n    end \n    return true \nend \n</cell>\n<text>\nExercise 7\nWrite a function\
    \ that returns true if all numbers in the vector l are above threshold t.\n  \
    \  >>> above_threshold([1, 2, 4, 10], 100)\n    true\n    >>> above_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = below_threshold;\n\t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t\
    @test(candidate([1, 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10],\
    \ 11) == true)\n\t@test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpiglxzd94.jl:14\nin expression starting at\
    \ /tmp/tmpiglxzd94.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"Return\
    \ true if all numbers in the vector l are above threshold t.\n    >>> above_threshold([1,\
    \ 2, 4, 10], 100)\n    true\n    >>> above_threshold([1, 20, 4, 10], 5)\n    false\n\
    \    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\t\
    @test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpciiltrxd.jl:14\nin expression starting at\
    \ /tmp/tmpciiltrxd.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for n in l\n        if n < t\n            return false\n\
    \    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\
    \t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpcornvv0j.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpcornvv0j.jl:1\n\
    in expression starting at /tmp/tmpcornvv0j.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\
    \t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmppvxez3bk.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmppvxez3bk.jl:1\n\
    in expression starting at /tmp/tmppvxez3bk.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\
    \t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmppvxez3bk.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmppvxez3bk.jl:1\n\
    in expression starting at /tmp/tmppvxez3bk.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for n in l \n        if n < t \n            return false\
    \ \n    end \n    return true \nend \nusing Test\n\n@testset begin\n\ncandidate\
    \ = below_threshold;\n\t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t\
    @test(candidate([1, 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10],\
    \ 11) == true)\n\t@test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpo4bpehyu.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpo4bpehyu.jl:1\n\
    in expression starting at /tmp/tmpo4bpehyu.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\
    \t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmppvxez3bk.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmppvxez3bk.jl:1\n\
    in expression starting at /tmp/tmppvxez3bk.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l \n        if x < t \n            return false\
    \ \n    end \n    return true \nend \n</cell>\n<code language=julia-1.3>\n\"\"\
    \"Return true if all numbers in the vector l are above threshold t.\n    >>> above_threshold([1,\
    \ 2, 4, 10], 100)\n    true\n    >>> above_threshold([1, 20, 4, 10], 5)\n    false\n\
    \    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\t\
    @test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpatzncyw0.jl:14\nin expression starting at\
    \ /tmp/tmpatzncyw0.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\
    \t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmppvxez3bk.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmppvxez3bk.jl:1\n\
    in expression starting at /tmp/tmppvxez3bk.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l \n        if x < t \n            return false\
    \ \n    end \n    return true \nend \n</cell>\n<code language=julia-1.5>\n\"\"\
    \"Return true if all numbers in the vector l are above threshold t.\n    >>> above_threshold([1,\
    \ 2, 4, 10], 100)\n    true\n    >>> above_threshold([1, 20, 4, 10], 5)\n    false\n\
    \    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\t\
    @test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpw1x61q21.jl:14\nin expression starting at\
    \ /tmp/tmpw1x61q21.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\n</cell>\n<code language=julia-1.4>\n\"\"\"Return\
    \ true if all numbers in the vector l are above threshold t.\n    >>> above_threshold([1,\
    \ 2, 4, 10], 100)\n    true\n    >>> above_threshold([1, 20, 4, 10], 5)\n    false\n\
    \    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\t\
    @test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplfa3dwg0.jl:14\nin expression starting at\
    \ /tmp/tmplfa3dwg0.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that returns true if the vector l has at least two numbers that are both below\
    \ threshold t.\n    >>> below_threshold_two([1,2,4,10], 100)\n    true\n    >>>\
    \ below_threshold_two([1,20,4,10], 5)\n    false\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = below_threshold;\n\t@test(candidate([1, 2, 4, 10], 100)\
    \ == true)\n\t@test(candidate([1, 20, 4, 10], 5) == false)\n\t@test(candidate([1,\
    \ 20, 4, 10], 21) == true)\n\t@test(candidate([1, 20, 4, 10], 22) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 11) == true)\n\t@test(candidate([1, 8, 4, 10],\
    \ 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpr067kas0.jl:14\nin expression starting at\
    \ /tmp/tmpr067kas0.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"Return\
    \ true if all numbers in the vector l are above threshold t.\n    >>> above_threshold([1,\
    \ 2, 4, 10], 100)\n    true\n    >>> above_threshold([1, 20, 4, 10], 5)\n    false\n\
    \    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\t\
    @test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpciiltrxd.jl:14\nin expression starting at\
    \ /tmp/tmpciiltrxd.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that returns true if all numbers in the vector l are greater than threshold\
    \ t.\n    >>> below_threshold([1, 2, 4, 10], 5)\n    false\n    >>> below_threshold([1,\
    \ 20, 4, 10], 100)\n    true\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = below_threshold;\n\t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t\
    @test(candidate([1, 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10],\
    \ 11) == true)\n\t@test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpt1qf13ra.jl:14\nin expression starting at\
    \ /tmp/tmpt1qf13ra.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\n</cell>\n<code language=julia-1.5>\n@assert below_threshold([1,\
    \ 2, 4, 10], 100) == true\n@assert below_threshold([1, 20, 4, 10], 5) == false\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the number of times\
    \ the value t appears in the vector l.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = below_threshold;\n\t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t\
    @test(candidate([1, 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10],\
    \ 11) == true)\n\t@test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxxkyru5h.jl:14\nin expression starting at\
    \ /tmp/tmpxxkyru5h.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    return true\nend\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the number of elements in a vector that are less than a given threshold t.\n\
    using Test\n\n@testset begin\n\ncandidate = below_threshold;\n\t@test(candidate([1,\
    \ 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10], 5) == false)\n\t\
    @test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t@test(candidate([1,\
    \ 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjlothv9i.jl:13\nin expression starting at\
    \ /tmp/tmpjlothv9i.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l \n        if x < t \n            return false\
    \ \n    end \n    return true \nend \nusing Test\n\n@testset begin\n\ncandidate\
    \ = below_threshold;\n\t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t\
    @test(candidate([1, 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10],\
    \ 11) == true)\n\t@test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpzt9wwerv.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpzt9wwerv.jl:1\n\
    in expression starting at /tmp/tmpzt9wwerv.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that returns true if all numbers in the vector l are above threshold t.\n  \
    \  >>> above_threshold([1, 2, 4, 10], 100)\n    true\n    >>> above_threshold([1,\
    \ 20, 4, 10], 5)\n    true\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = below_threshold;\n\t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t\
    @test(candidate([1, 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10],\
    \ 11) == true)\n\t@test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvhyq4ibl.jl:14\nin expression starting at\
    \ /tmp/tmpvhyq4ibl.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that returns true if all numbers in the vector l are greater than threshold\
    \ t.\n    >>> below_threshold([1, 2, 4, 10], 5)\n    false\n    >>> below_threshold([1,\
    \ 20, 4, 10], 100)\n    true\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = below_threshold;\n\t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t\
    @test(candidate([1, 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10],\
    \ 11) == true)\n\t@test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpt1qf13ra.jl:14\nin expression starting at\
    \ /tmp/tmpt1qf13ra.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\
    \t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmppvxez3bk.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmppvxez3bk.jl:1\n\
    in expression starting at /tmp/tmppvxez3bk.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    l .< t\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = below_threshold;\n\t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t\
    @test(candidate([1, 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10],\
    \ 11) == true)\n\t@test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpasu0r1w1.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpasu0r1w1.jl:15\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 10], 100) == true\n  MethodError: Cannot `convert`\
    \ an object of type BitVector to an object of type Bool\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] below_threshold(l::Vector{Int64}, t::Int64)\n\
    \     @ Main /tmp/tmpasu0r1w1.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpasu0r1w1.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpasu0r1w1.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpasu0r1w1.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([1, 20, 4, 10], 5) == false\n  MethodError: Cannot `convert` an object\
    \ of type BitVector to an object of type Bool\n  Closest candidates are:\n   \
    \ convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] below_threshold(l::Vector{Int64}, t::Int64)\n\
    \     @ Main /tmp/tmpasu0r1w1.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpasu0r1w1.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test"
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\
    \t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmppvxez3bk.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmppvxez3bk.jl:1\n\
    in expression starting at /tmp/tmppvxez3bk.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    return true\nend\n</cell>\n<code language=julia-1.5>\n@assert below_threshold([1,\
    \ 2, 4, 10], 100) == true\n@assert below_threshold([1, 20, 4, 10], 5) == false\n\
    </cell>\n<text>\nExercise 2\nWrite a function is_positive(l::Vector{Int64}) that\
    \ returns true if all numbers in the vector l are positive.\nWrite a function\
    \ is_negative(l::Vector{Int64}) that returns true if all numbers in the vector\
    \ l are negative.\nWrite a function is_zero(l::Vector{Int64}) that returns true\
    \ if all numbers in the vector l are zero.\nWrite a function is_positive(l::Vector{Int64},\
    \ threshold::Int64) that returns true if all numbers in the vector l are above\
    \ threshold and below zero.\nWrite a function is_negative(l::Vector{Int64}, threshold::Int64)\
    \ that returns true if all numbers in the vector l are above threshold and below\
    \ zero.\nWrite a function is_zero(l::Vector{Int64}, threshold::Int64) that returns\
    \ true if all numbers in the vector l are above threshold and below zero.\nWrite\
    \ a function is_positive(l::Vector{Int64}, threshold::Int64) that returns true\
    \ if all numbers in the vector l are above threshold and below zero.\nWrite a\
    \ function is_negative(l::Vector{Int64}, threshold::Int64) that returns true if\
    \ all numbers in the vector l are above threshold and below zero.\nWrite a function\
    \ is_zero(l::Vector{Int64}, threshold::Int64) that returns true if all numbers\
    \ in the vector l are above threshold and below zero.\nWrite a function is_positive(l::Vector{Int64},\
    \ threshold::Int64) that returns true if all numbers in the vector l are above\
    \ threshold and below zero.\nWrite a function is_negative(l::Vector{Int64}, threshold::Int64)\
    \ that returns true if all numbers in the vector l are above threshold and below\
    \ zero.\nWrite a function is_zero(l::Vector{Int64}, threshold::Int64) that returns\
    \ true if all numbers in the vector l are above threshold and below zero.\nWrite\
    \ a function is_positive(l::Vector{Int64}, threshold::Int64) that returns true\
    \ if all numbers in the vector l are above threshold and below zero.\nWrite a\
    \ function is_negative(l::Vector{Int64}, threshold::Int64) that returns true if\
    \ all numbers in the vector l are above threshold and below zero.\nWrite a function\
    \ is_zero(l::Vector{Int64}, threshold::Int64) that returns true if all numbers\
    \ in the vector l are above threshold and below zero.\nWrite a function is_positive(l::Vector{Int64},\
    \ threshold::Int64) that returns true if all \nusing Test\n\n@testset begin\n\n\
    candidate = below_threshold;\n\t@test(candidate([1, 2, 4, 10], 100) == true)\n\
    \t@test(candidate([1, 20, 4, 10], 5) == false)\n\t@test(candidate([1, 20, 4, 10],\
    \ 21) == true)\n\t@test(candidate([1, 20, 4, 10], 22) == true)\n\t@test(candidate([1,\
    \ 8, 4, 10], 11) == true)\n\t@test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmeferztu.jl:13\nin expression starting at\
    \ /tmp/tmpmeferztu.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for n in l\n        if n < t\n            return false\n\
    \    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\
    \t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpcornvv0j.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpcornvv0j.jl:1\n\
    in expression starting at /tmp/tmpcornvv0j.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\
    \t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpyl8apve_.jl:8\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpyl8apve_.jl:1\n\
    in expression starting at /tmp/tmpyl8apve_.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\n</cell>\n<text>\nExercise 4\nWrite a function\
    \ that returns true if all numbers in the vector l are above threshold t.\n  \
    \  >>> above_threshold([1, 2, 4, 10], 100)\n    true\n    >>> above_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = below_threshold;\n\t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t\
    @test(candidate([1, 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10],\
    \ 11) == true)\n\t@test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpv6u857vh.jl:14\nin expression starting at\
    \ /tmp/tmpv6u857vh.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\n</cell>\n<code language=julia-1.5>\nbelow_threshold([1,\
    \ 2, 4, 10], 100)\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ true if all numbers in the vector l are greater than threshold t.\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = below_threshold;\n\t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t\
    @test(candidate([1, 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10],\
    \ 11) == true)\n\t@test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpi19ck1nz.jl:14\nin expression starting at\
    \ /tmp/tmpi19ck1nz.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l \n        if x < t \n            return false\
    \ \n    end \n    return true \nend \n</cell>\n<code language=julia-1.5>\n@assert\
    \ below_threshold([1, 2, 4, 10], 100) == true\n@assert below_threshold([1, 20,\
    \ 4, 10], 5) == false\n</cell>\n<text>\nExercise 3\nWrite a function called below_threshold_v2\
    \ that does the same thing as below_threshold except that it does not use an explicit\
    \ for loop.\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\t\
    @test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpoq7_b169.jl:14\nin expression starting at\
    \ /tmp/tmpoq7_b169.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that returns true if all numbers in the vector l are above threshold t.\n  \
    \  >>> above_threshold([1, 2, 4, 10], 100)\n    true\n    >>> above_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = below_threshold;\n\t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t\
    @test(candidate([1, 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10],\
    \ 11) == true)\n\t@test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_5wqk956.jl:14\nin expression starting at\
    \ /tmp/tmp_5wqk956.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\
    \t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmppvxez3bk.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmppvxez3bk.jl:1\n\
    in expression starting at /tmp/tmppvxez3bk.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for i in l\n        if i < t\n            return false\n\
    \    end\n    return true\nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that returns true if all numbers in the vector l are greater than threshold\
    \ t.\n    >>> above_threshold([1, 2, 4, 10], 100)\n    true\n    >>> above_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = below_threshold;\n\t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t\
    @test(candidate([1, 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10],\
    \ 11) == true)\n\t@test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfoknkhul.jl:14\nin expression starting at\
    \ /tmp/tmpfoknkhul.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    l .< t\nend\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that returns true if all numbers in the vector l are above threshold t.\n  \
    \  >>> above_threshold([1, 2, 4, 10], 100)\n    true\n    >>> above_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = below_threshold;\n\t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t\
    @test(candidate([1, 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10],\
    \ 11) == true)\n\t@test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp69n9h_3q.jl:10\nin expression starting at\
    \ /tmp/tmp69n9h_3q.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    return true\nend\n</cell>\n<code language=julia-1.5>\n@assert below_threshold([1,\
    \ 2, 4, 10], 100) == true\n@assert below_threshold([1, 20, 4, 10], 5) == false\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns true if all numbers\
    \ in the vector l are above threshold t.\n    >>> above_threshold([1, 2, 4, 10],\
    \ 100)\n    true\n    >>> above_threshold([1, 20, 4, 10], 5)\n    false\n    \"\
    \"\"\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\t@test(candidate([1,\
    \ 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10], 5) == false)\n\t\
    @test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t@test(candidate([1,\
    \ 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9wrlz2l4.jl:13\nin expression starting at\
    \ /tmp/tmp9wrlz2l4.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\
    \t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpyl8apve_.jl:8\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpyl8apve_.jl:1\n\
    in expression starting at /tmp/tmpyl8apve_.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = below_threshold;\n\
    \t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10],\
    \ 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10], 11) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpyl8apve_.jl:8\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpyl8apve_.jl:1\n\
    in expression starting at /tmp/tmpyl8apve_.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l \n        if x < t \n            return false\
    \ \n    end \n    return true \nend \nusing Test\n\n@testset begin\n\ncandidate\
    \ = below_threshold;\n\t@test(candidate([1, 2, 4, 10], 100) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10], 5) == false)\n\t@test(candidate([1, 20, 4, 10], 21) == true)\n\t\
    @test(candidate([1, 20, 4, 10], 22) == true)\n\t@test(candidate([1, 8, 4, 10],\
    \ 11) == true)\n\t@test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpzt9wwerv.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpzt9wwerv.jl:1\n\
    in expression starting at /tmp/tmpzt9wwerv.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
    \ t::Int64)::Bool \n    for x in l\n        if x < t\n            return false\n\
    \        end\n    end\n    return true\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert below_threshold([1, 2, 4, 10], 100) == true\n@assert below_threshold([1,\
    \ 20, 4, 10], 5) == false\n</cell>\n<text>\nExercise 2\nWrite a function below\
    \ that takes a vector of numbers and a threshold and returns a vector of booleans\
    \ indicating which numbers are below the threshold. For example, below([10, 20,\
    \ 30, 40], 30) should return a vector [false, true, false, true].\nusing Test\n\
    \n@testset begin\n\ncandidate = below_threshold;\n\t@test(candidate([1, 2, 4,\
    \ 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10], 5) == false)\n\t@test(candidate([1,\
    \ 20, 4, 10], 21) == true)\n\t@test(candidate([1, 20, 4, 10], 22) == true)\n\t\
    @test(candidate([1, 8, 4, 10], 11) == true)\n\t@test(candidate([1, 8, 4, 10],\
    \ 10) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpy_1h8xeb.jl:15\nin expression starting at\
    \ /tmp/tmpy_1h8xeb.jl:15\n"
  stdout: ''

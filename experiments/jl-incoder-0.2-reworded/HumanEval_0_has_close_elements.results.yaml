language: jl
name: HumanEval_0_has_close_elements
results:
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    i =\
    \ 2\n    while i < length(numbers)\n        if numbers[i] - numbers[i-1] > threshold\n\
    \            return true\n        end\n        i += 1\n    end\n    return false\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = has_close_elements;\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == false)\n\
    \t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0)\
    \ == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_bi1fqeq.jl:21\nin expression starting at\
    \ /tmp/tmp_bi1fqeq.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    i =\
    \ 0\n    while i < length(numbers)\n        if numbers[i] - numbers[i - 1] > threshold\n\
    \            return true\n        end\n        i = i + 1\n    end\n    return\
    \ false\nend\n</cell>\n<text>\nExercise 2\nWrite a function that checks if a vector\
    \ has all elements equal, given threshold.\n    >>> has_all_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_all_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n    true\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\
    \t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9,\
    \ 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8)\
    \ == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\
    \t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0) == true)\n\t@test(candidate([1.1,\
    \ 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpws7dyn3a.jl:21\nin expression starting at\
    \ /tmp/tmpws7dyn3a.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers_sorted = sort(numbers)\n    \n\
    \    i = 0\n    \n    while i < length(numbers_sorted)\n        if numbers_sorted[i]\
    \ == numbers_sorted[i+1]\n            i += 1\n        else\n            if abs(numbers_sorted[i]\
    \ - numbers_sorted[i+1]) < threshold\n                return true\n          \
    \  else\n                i += 1\n            end\n        end\n    end\n    \n\
    \    return false\nend\n</cell>\n<text>\nhas_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers_sorted = sort(numbers)\n    \n\
    \    i = 0\n    \n    while i < length(numbers_sorted)\n        if numbers_sorted[i]\
    \ == numbers_sorted[i+1]\n            i += 1\n        else\n            if abs(numbers_sorted[i]\
    \ - numbers_sorted[i+1]) < threshold\n                return true\n          \
    \  else\n                i += 1\n            end\n        end\n    end\n    \n\
    \    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\
    \t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9,\
    \ 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8)\
    \ == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\
    \t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0) == true)\n\t@test(candidate([1.1,\
    \ 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcnl1rffs.jl:28\nin expression starting at\
    \ /tmp/tmpcnl1rffs.jl:28\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    i =\
    \ length(numbers)\n    \n    while i > 1\n        \n        if numbers[i-1] -\
    \ numbers[i] > threshold\n            return true\n        end\n        \n   \
    \     i -= 1\n    end\n    \n    return false\nend\n</cell>\n<code language=julia-1.4>\n\
    using Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmnhv0b4l.jl:25\nin expression starting at\
    \ /tmp/tmpmnhv0b4l.jl:25\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    i =\
    \ 0\n    j = length(numbers) - 1\n    \n    while i < j\n        if numbers[i]\
    \ == numbers[j]\n            i += 1\n            j --\n        elseif abs(numbers[i]\
    \ - numbers[j]) <= threshold\n            i += 1\n        else\n            j\
    \ --\n        end\n    end\n    \n    return i == j\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: invalid operator \"--\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpcjkbh58g.jl:18\nin expression starting at /tmp/tmpcjkbh58g.jl:18\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    for\
    \ n in numbers\n        if abs(n - numbers[1]) < threshold\n            return\
    \ true\n        end\n    end\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpih42le6t.jl:19\nin expression starting at\
    \ /tmp/tmpih42le6t.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    for n in numbers\n        if abs(n - threshold)\
    \ < threshold\n            return true\n        end\n    end\n    return false\n\
    end\n</cell>\n<code language=julia-1.3>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = has_close_elements;\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == false)\n\
    \t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0)\
    \ == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpr0lyvzlj.jl:17\nin expression starting at\
    \ /tmp/tmpr0lyvzlj.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    for\
    \ n in numbers\n        if abs(n - numbers[end-1]) < threshold\n            return\
    \ true\n        end\n    end\n    \n    return false\nend\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that checks if a vector contains any element that is equal\
    \ to given value.\n    >>> has_element_equal_to(Vector{Float64}([1.0, 2.0, 3.0]),\
    \ 2.0)\n    true\n    >>> has_element_equal_to(Vector{Float64}([1.0, 2.0, 3.0]),\
    \ 3.0)\n    false\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\
    \t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9,\
    \ 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8)\
    \ == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\
    \t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0) == true)\n\t@test(candidate([1.1,\
    \ 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcw4y85hu.jl:20\nin expression starting at\
    \ /tmp/tmpcw4y85hu.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    distances = Vector{Float64}(length(numbers))\n\
    \    for i in 1:length(numbers)\n        distances[i] = abs(numbers[i] - threshold)\n\
    \    end\n    \n    return any(distances <= 0)\nend\n</cell>\n<code language=julia-1.3>\n\
    using Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9mkjshy0.jl:17\nin expression starting at\
    \ /tmp/tmp9mkjshy0.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers_sorted = sort(numbers)\n    \n\
    \    index_of_closest = findfirst(x -> abs(x - threshold) < abs(numbers_sorted[end]\
    \ - threshold), numbers_sorted)\n    \n    if index_of_closest == length(numbers_sorted)\n\
    \        return false\n    else\n        return true\n    end\nend\n</cell>\n\
    <text>\nThe function above checks if any two numbers are closer to each other\
    \ than the given threshold. If so, it returns true. Otherwise, it returns false.\n\
    using Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpeghc7k4l.jl:20\nin expression starting at\
    \ /tmp/tmpeghc7k4l.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\nusing Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp38t00c8y.jl:8\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp38t00c8y.jl:1\n\
    in expression starting at /tmp/tmp38t00c8y.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers_sorted = sort(numbers)\n    \n\
    \    for number in numbers_sorted\n        if number - threshold < numbers_sorted[1]\n\
    \            return true\n        end\n    end\n    \n    return false\nend\n\
    </cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = has_close_elements;\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == false)\n\
    \t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0)\
    \ == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgne4o177.jl:20\nin expression starting at\
    \ /tmp/tmpgne4o177.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    i =\
    \ 2\n    while i <= length(numbers)\n        if numbers[i] - numbers[i - 1] <\
    \ threshold\n            return true\n        end\n        i += 1\n    end\n \
    \   return false\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0, 2.0, 3.9,\
    \ 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2],\
    \ 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) == true)\n\
    \t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqplxnp14.jl:21\nin expression starting at\
    \ /tmp/tmpqplxnp14.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    if\
    \ length(numbers) < 2\n        return false\n    end\n    \n    idx1 = 1\n   \
    \ idx2 = length(numbers)\n    \n    while idx1 < idx2\n        if numbers[idx1]\
    \ - numbers[idx2] < threshold\n            return true\n        end\n        \n\
    \        if numbers[idx1] - numbers[idx2] > threshold\n            return false\n\
    \        end\n        \n        idx1 += 1\n        idx2 -= 1\n    end\n    \n\
    \    return false\nend\n</cell>\n<text>\nhas_close_elements\nusing Test\n\n@testset\
    \ begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0, 2.0, 3.9,\
    \ 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2],\
    \ 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) == true)\n\
    \t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8je6x1ni.jl:34\nin expression starting at\
    \ /tmp/tmp8je6x1ni.jl:34\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    i =\
    \ 2\n    while i < length(numbers)\n        if numbers[i] - numbers[i-1] > threshold\n\
    \            return true\n        end\n        i += 1\n    end\n    return false\n\
    end\n</cell>\n<text>\nProblem 3\nWrite a function that takes in a vector of numbers\
    \ and returns the sum of the squares of the numbers.\n>>> sum_square_elements([1.0,\
    \ 2.0, 3.0])\n25.0\n>>> sum_square_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0])\n\
    144.8\n>>> sum_square_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0])\n144.8\n>>> sum_square_elements([1.0,\
    \ 2.8, 3.0, 4.0, 5.0, 2.0])\n144.8\n>>> sum_square_elements([1.0, 2.8, 3.0, 4.0,\
    \ 5.0, 2.0])\n144.8\n>>> sum_square_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0])\n\
    144.8\n>>> sum_square_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0])\n144.8\n>>> sum_square_elements([1.0,\
    \ 2.8, 3.0, 4.0, 5.0, 2.0])\n144.8\n>>> sum_square_elements([1.0, 2.8, 3.0, 4.0,\
    \ 5.0, 2.0])\n144.8\n>>> sum_square_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0])\n\
    144.8\n>>> sum_square_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0])\n144.8\n>>> sum_square_elements([1.0,\
    \ 2.8, 3.0, 4.0, 5.0, 2.0])\n144.8\n>>> sum_square_elements([1.0, 2.8, 3.0, 4.0,\
    \ 5.0, 2.0])\n144.8\n>>> sum_square_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0])\n\
    144.8\n>>> sum_square_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0])\n144.8\n>>> sum_square_elements([1.0,\
    \ 2.8, 3.0, 4.0, 5.0, 2.0])\n144.8\n>>> sum_square_elements([1.0, 2.8, 3.0, 4.0,\
    \ 5.0, 2.0])\n144.8\n>>> sum_square_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0])\n\
    144.8\n>>> sum_square_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0])\n144.8\n>>> sum_square_elements([1.0,\
    \ 2.8, 3.0, 4.0, 5.0, 2.0])\n144.8\n>>> sum_square_elements([1.0, 2.8, 3.0, 4.0,\
    \ 5.0, 2.0])\n144.8\n>>> sum_square_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0])\n\
    144.8\n>>> sum_square_elements([1.0, 2.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = has_close_elements;\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == false)\n\
    \t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0)\
    \ == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpd2admk2x.jl:21\nin expression starting at\
    \ /tmp/tmpd2admk2x.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers_sorted = sort(numbers)\n    \n\
    \    i = numbers_sorted.length - 1\n    \n    while i >= 0\n        if numbers_sorted[i]\
    \ == numbers_sorted[i + 1]\n            return true\n        i -= 1\n    end\n\
    \    \n    return false\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\
    \n@testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0, 2.0,\
    \ 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) ==\
    \ true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7q_l6668.jl:22\nin expression starting at\
    \ /tmp/tmp7q_l6668.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    for\
    \ n in numbers[2:end]\n        if abs(numbers[1] - n) < threshold\n          \
    \  return true\n        end\n    end\n    return false\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns true if a number is evenly divisible\
    \ by another number.\nusing Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\
    \t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9,\
    \ 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8)\
    \ == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\
    \t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0) == true)\n\t@test(candidate([1.1,\
    \ 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0619tf9o.jl:19\nin expression starting at\
    \ /tmp/tmp0619tf9o.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers_sorted = sort(numbers)\n    \n\
    \    closest_number = numbers_sorted[1]\n    \n    for number in numbers_sorted[2:end]\n\
    \        if abs(number - closest_number) < threshold\n            return true\n\
    \        else\n            closest_number = number\n        end\n    end\n   \
    \ \n    return false\nend\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes a vector of numbers and a threshold and returns a vector of booleans indicating\
    \ whether each number in the vector is closer to its neighbors than the threshold.\n\
    using Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp35_c4o5p.jl:24\nin expression starting at\
    \ /tmp/tmp35_c4o5p.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    for\
    \ n in numbers[2:end]\n        if abs(numbers[1] - n) < threshold\n          \
    \  return true\n        end\n    end\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvzgkas13.jl:19\nin expression starting at\
    \ /tmp/tmpvzgkas13.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers_sorted = sort(numbers)\n    \n\
    \    closest_index = findfirst(x -> abs(x - threshold) < abs(numbers_sorted[end]\
    \ - threshold), numbers_sorted)\n    \n    return closest_index != nothing\nend\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the number of elements\
    \ in a vector that are less than a given threshold.\nusing Test\n\n@testset begin\n\
    \ncandidate = has_close_elements;\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.05)\
    \ == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0)\
    \ == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpndnsxgcq.jl:16\nin expression starting at\
    \ /tmp/tmpndnsxgcq.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    distances = Vector{Float64}(length(numbers))\n\
    \    for i in 1:length(numbers)\n        distances[i] = abs(numbers[i] - threshold)\n\
    \    end\n    \n    return distances[1] < distances[2]\nend\n</cell>\n<text>\n\
    Exercise 4\nWrite a function that takes a list of numbers and a threshold and\
    \ returns a list of numbers that have a distance of less than the threshold.\n\
    using Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1bzq3o56.jl:17\nin expression starting at\
    \ /tmp/tmp1bzq3o56.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    i =\
    \ 0\n    \n    while i < length(numbers)\n        if numbers[i] - numbers[i-1]\
    \ > threshold\n            return true\n        end\n        i += 1\n    end\n\
    \    \n    return false\nend\n</cell>\n<text>\nThe function has_close_elements\
    \ checks if there are any two numbers in the vector numbers that are closer to\
    \ each other than the given threshold (0.5 in this case).\nusing Test\n\n@testset\
    \ begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0, 2.0, 3.9,\
    \ 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2],\
    \ 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) == true)\n\
    \t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvmbkarpu.jl:23\nin expression starting at\
    \ /tmp/tmpvmbkarpu.jl:23\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers_sorted = sort(numbers)\n    \n\
    \    index_of_first_element = findfirst(numbers_sorted .< threshold)\n    index_of_last_element\
    \ = findlast(numbers_sorted .> threshold)\n    \n    if index_of_first_element\
    \ == index_of_last_element\n        return true\n    else\n        return false\n\
    \    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function that checks if a\
    \ vector has all elements of a given set. \nFor example, given [1,2,3], return\
    \ true.\nGiven [1,2,3], return false.\nGiven [1,2,3], return true.\nGiven [1,2,3],\
    \ return false.\nGiven [1,2,3], return true.\nGiven [1,2,3], return false.\nGiven\
    \ [1,2,3], return true.\nGiven [1,2,3], return false.\nGiven [1,2,3], return true.\n\
    Given [1,2,3], return false.\nGiven [1,2,3], return true.\nGiven [1,2,3], return\
    \ false.\nGiven [1,2,3], return true.\nGiven [1,2,3], return false.\nGiven [1,2,3],\
    \ return true.\nGiven [1,2,3], return false.\nGiven [1,2,3], return true.\nGiven\
    \ [1,2,3], return false.\nGiven [1,2,3], return true.\nGiven [1,2,3], return false.\n\
    Given [1,2,3], return true.\nGiven [1,2,3], return false.\nGiven [1,2,3], return\
    \ true.\nGiven [1,2,3], return false.\nGiven [1,2,3], return true.\nGiven [1,2,3],\
    \ return false.\nGiven [1,2,3], return true.\nGiven [1,2,3], return false.\nGiven\
    \ [1,2,3], return true.\nGiven [1,2,3], return false.\nGiven [1,2,3], return true.\n\
    Given [1,2,3], return false.\nGiven [1,2,3], return true.\nGiven [1,2,3], return\
    \ false.\nGiven [1,2,3], return true.\nGiven [1,2,3], return false.\nGiven [1,2,3],\
    \ return true.\nGiven [1,2,3], return false.\nGiven [1,2,3], return true.\nGiven\
    \ [1,2,3], return false.\nGiven [1,2,3], return true.\nGiven [1,2,3], return false.\n\
    Given [1,2,3], return true.\nGiven [1,2,3], return false.\nGiven [1,2,3], return\
    \ true.\nGiven [1,2,3], return false.\nGiven [1,2,3], return true.\nGiven [1,2,3],\
    \ return false.\nGiven [1,2,3], return true.\nGiven [1,2,3], return false.\nGiven\
    \ [1,2,3], return true.\nGiven [1,2,3], return false.\nGiven [1,2,3], return true.\n\
    Given [1,2,3], return false.\nGiven [1,2,3], return true.\nGiven [1,2,3], return\
    \ \nusing Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxw1qkfqk.jl:21\nin expression starting at\
    \ /tmp/tmpxw1qkfqk.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\nusing Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp38t00c8y.jl:8\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp38t00c8y.jl:1\n\
    in expression starting at /tmp/tmp38t00c8y.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers_sorted = sort(numbers)\n    \n\
    \    index_of_closest = findfirst(numbers_sorted .< threshold)\n    \n    if index_of_closest\
    \ == nothing\n        return false\n    else\n        return true\n    end\nend\n\
    </cell>\n<text>\nExercise 2\nWrite a function that checks if a vector has all\
    \ elements of a given set. \nFor example, given vector = [1, 2, 3, 4] and set\
    \ = [1, 2, 3], the function should return true.\nGiven vector = [1, 2, 3, 4] and\
    \ set = [1, 2, 4], the function should return false.\nusing Test\n\n@testset begin\n\
    \ncandidate = has_close_elements;\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.05)\
    \ == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0)\
    \ == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmhgivds1.jl:20\nin expression starting at\
    \ /tmp/tmpmhgivds1.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    i =\
    \ 0\n    \n    while i < length(numbers)\n        \n        if numbers[i] - numbers[i-1]\
    \ > threshold\n            return true\n        end\n        \n        i = i +\
    \ 1\n    end\n    \n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpsfcmcmug.jl:25\nin expression starting at\
    \ /tmp/tmpsfcmcmug.jl:25\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    i =\
    \ 0\n    j = length(numbers)\n    \n    while i < j\n        if numbers[i] ==\
    \ numbers[j]\n            i += 1\n            j += 1\n        elseif abs(numbers[i]\
    \ - numbers[j]) < threshold\n            i += 1\n        else\n            j +=\
    \ 1\n        end\n    end\n    \n    return i == j\nend\n</cell>\n<text>\nProblem\
    \ 3\nWrite a function that takes an array of numbers and returns the sum of the\
    \ squares of the numbers.\n    >>> square_sum([1.0, 2.0, 3.0])\n    25.0\n   \
    \ >>> square_sum([1.0, 2.8, 3.0, 4.0, 5.0, 2.0])\n    25.0\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8vyietk8.jl:28\nin expression starting at\
    \ /tmp/tmp8vyietk8.jl:28\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    distances = Vector{Float64}(undef, length(numbers))\n\
    \    for i in 1:length(numbers)\n        distances[i] = abs(numbers[i] - threshold)\n\
    \    end\n    \n    return any(distances <= 0)\nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes in a list of numbers and a threshold and returns\
    \ a list of numbers that exceed the threshold.\nFor example, given a list of numbers\
    \ and a threshold of 0.2, your function should return [2.0, 3.0].\nHint: Use a\
    \ for loop and a conditional statement.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = has_close_elements;\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == false)\n\
    \t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0)\
    \ == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppzf77ub8.jl:17\nin expression starting at\
    \ /tmp/tmppzf77ub8.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    i =\
    \ 0\n    j = length(numbers)\n    \n    while i < j\n        if numbers[i] ==\
    \ numbers[j] \n            i += 1\n            j += 1\n        elseif abs(numbers[i]\
    \ - numbers[j]) < threshold\n            i += 1\n        else\n            j +=\
    \ 1\n        end\n    end\n    \n    return i == j\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpeycz6z9z.jl:28\nin expression starting at\
    \ /tmp/tmpeycz6z9z.jl:28\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    for\
    \ n in numbers[1:end-1]\n        if abs(numbers[n] - numbers[n-1]) < threshold\n\
    \            return true\n        end\n    end\n    return false\nend\n</cell>\n\
    <code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\
    \t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9,\
    \ 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8)\
    \ == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\
    \t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0) == true)\n\t@test(candidate([1.1,\
    \ 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpz0dg6p5t.jl:19\nin expression starting at\
    \ /tmp/tmpz0dg6p5t.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    for\
    \ n in numbers\n        if abs(n - numbers[1]) < threshold\n            return\
    \ true\n        end\n    end\n    return false\nend\n</cell>\n<text>\nProblem\
    \ 7\nWrite a function that takes in a list of numbers and returns the sum of the\
    \ numbers in the list. \nIf the list is empty, return 0.\nIf the list has one\
    \ number, return that number.\nIf the list has two numbers, return the sum of\
    \ the two numbers.\nIf the list has three numbers, return the sum of the first\
    \ two numbers, then add the third.\nIf the list has four numbers, return the sum\
    \ of the first three numbers, then add the third.\nIf the list has five numbers,\
    \ return the sum of the first four numbers, then add the third.\nIf the list has\
    \ six numbers, return the sum of the first five numbers, then add the third.\n\
    If the list has seven numbers, return the sum of the first six numbers, then add\
    \ the third.\nIf the list has eight numbers, return the sum of the first seven\
    \ numbers, then add the third.\nIf the list has nine numbers, return the sum of\
    \ the first eight numbers, then add the third.\nIf the list has ten numbers, return\
    \ the sum of the first nine numbers, then add the third.\nIf the list has eleven\
    \ numbers, return the sum of the first ten numbers, then add the third.\nIf the\
    \ list has twelve numbers, return the sum of the first eleven numbers, then add\
    \ the third.\nIf the list has thirteen numbers, return the sum of the first twelve\
    \ numbers, then add the third.\nIf the list has fourteen numbers, return the sum\
    \ of the first thirteen numbers, then add the third.\nIf the list has fifteen\
    \ numbers, return the sum of the first fourteen numbers, then add the third.\n\
    If the list has sixteen numbers, return the sum of the first fifteen numbers,\
    \ then add the third.\nIf the list has seventeen numbers, return the sum of the\
    \ first sixteen numbers, then add the third.\nIf the list has eighteen numbers,\
    \ return the sum of the first seventeen numbers, then add the third.\nIf the list\
    \ has nineteen numbers, return the sum of the first eighteen numbers, then add\
    \ the third.\nIf the list has twenty numbers, return the sum of the first nineteen\
    \ numbers, then add the third.\nIf the list has thirty numbers, return the sum\
    \ of the first twenty numbers, then add the third.\nIf the list has fourty numbers,\
    \ return the sum of the first thirty numbers, then add the third.\nIf the list\
    \ has fifty numbers, return the sum of the first fourty numbers, then add the\
    \ third.\nIf the list has sixty number\nusing Test\n\n@testset begin\n\ncandidate\
    \ = has_close_elements;\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == false)\n\
    \t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0)\
    \ == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpe8klxyrx.jl:19\nin expression starting at\
    \ /tmp/tmpe8klxyrx.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\nusing Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp38t00c8y.jl:8\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp38t00c8y.jl:1\n\
    in expression starting at /tmp/tmp38t00c8y.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    for\
    \ n in numbers\n        if abs(n - numbers[1]) < threshold\n            return\
    \ true\n        end\n    end\n    return false\nend\n</cell>\n<text>\nProblem\
    \ 7\nWrite a function that takes a vector of numbers and returns the sum of the\
    \ squares of the numbers.\n>>> sumsq([1,2,3])\n25\n>>> sumsq([1,2,3])\n25\n>>>\
    \ sumsq([1,2,3])\n25\n>>> sumsq([1,2,3])\n25\n>>> sumsq([1,2,3])\n25\n>>> sumsq([1,2,3])\n\
    25\n>>> sumsq([1,2,3])\n25\n>>> sumsq([1,2,3])\n25\n>>> sumsq([1,2,3])\n25\n>>>\
    \ sumsq([1,2,3])\n25\n>>> sumsq([1,2,3])\n25\n>>> sumsq([1,2,3])\n25\n>>> sumsq([1,2,3])\n\
    25\n>>> sumsq([1,2,3])\n25\n>>> sumsq([1,2,3])\n25\n>>> sumsq([1,2,3])\n25\n>>>\
    \ sumsq([1,2,3])\n25\n>>> sumsq([1,2,3])\n25\n>>> sumsq([1,2,3])\n25\n>>> sumsq([1,2,3])\n\
    25\n>>> sumsq([1,2,3])\n25\n>>> sumsq([1,2,3])\n25\n>>> sumsq([1,2,3])\n25\n>>>\
    \ sumsq([1,2,3])\n25\n>>> sumsq([1,2,3])\n25\n>>> sumsq([1,2,3])\n25\n>>> sumsq([1,2,3])\n\
    25\n>>> sumsq([1,2,3])\n25\n>>> sumsq([1,2,3])\n25\n>>> sumsq([1,2,3])\n25\n>>>\
    \ sumsq([1,2,3])\n25\n>>> sumsq([1,2,3])\n25\n>>> sumsq([1,2,3])\n25\n>>> sumsq([1,2,3])\n\
    25\n>>> sumsq([1,2,3])\n25\n>>> sumsq([1,2,3])\n25\n>>> sumsq([1,2,3])\n25\n>>>\
    \ sumsq([1,2,3])\n25\n>>> sumsq([1,2,3])\n25\n>>> sumsq([1,2,3])\n25\n>>> sumsq([1,2,3])\n\
    25\n>>> sumsq([1,2,3])\n25\n>>> sumsq([1,2,3])\n25\n>>> sumsq([1,2,3])\n25\n>>>\
    \ sumsq([1,2,3])\n25\n>>> sumsq([1,2,3])\n25\n>>> sumsq([1,2,3])\n25\n>>> sumsq([1,2,3])\n\
    25\n>>> sumsq([1,2,3])\n25\n>>> sumsq([1,2,3])\n25\n>>> sumsq([\nusing Test\n\n\
    @testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0, 2.0,\
    \ 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) ==\
    \ true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprcwv_wvd.jl:19\nin expression starting at\
    \ /tmp/tmprcwv_wvd.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers_sorted = sort(numbers)\n    \n\
    \    idx = 0\n    while idx < length(numbers_sorted)\n        if numbers_sorted[idx]\
    \ - numbers_sorted[idx - 1] > threshold\n            return true\n        else\n\
    \            idx += 1\n        end\n    end\n    return false\nend\n</cell>\n\
    <code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\
    \t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9,\
    \ 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8)\
    \ == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\
    \t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0) == true)\n\t@test(candidate([1.1,\
    \ 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphxys4634.jl:22\nin expression starting at\
    \ /tmp/tmphxys4634.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    for\
    \ n in numbers[2:end]\n        if abs(numbers[1] - n) < threshold\n          \
    \  return true\n        end\n    end\n    return false\nend\n</cell>\n<text>\n\
    Let's test our function with some examples:\nusing Test\n\n@testset begin\n\n\
    candidate = has_close_elements;\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2],\
    \ 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == false)\n\
    \t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0)\
    \ == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphxuwlvil.jl:19\nin expression starting at\
    \ /tmp/tmphxuwlvil.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    for n in numbers\n        if abs(n - threshold)\
    \ < threshold\n            return true\n        end\n    end\n    return false\n\
    end\n</cell>\n<text>\nNow let's test our function\nusing Test\n\n@testset begin\n\
    \ncandidate = has_close_elements;\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.05)\
    \ == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0)\
    \ == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdizzsm7l.jl:17\nin expression starting at\
    \ /tmp/tmpdizzsm7l.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    for\
    \ n in numbers[2:end]\n        if abs(numbers[1] - n) < threshold\n          \
    \  return true\n        end\n    end\n    return false\nend\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a vector of numbers and a threshold and\
    \ returns a vector of booleans indicating which numbers are closer to each other\
    \ than the threshold.\nusing Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\
    \t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9,\
    \ 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8)\
    \ == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\
    \t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0) == true)\n\t@test(candidate([1.1,\
    \ 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppp8jzljx.jl:19\nin expression starting at\
    \ /tmp/tmppp8jzljx.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    i =\
    \ length(numbers)\n    \n    while i > 1\n        if numbers[i-1] == numbers[i-2]\n\
    \            return true\n        end\n        i = i-1\n    end\n    \n    return\
    \ false\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\
    \ncandidate = has_close_elements;\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.05)\
    \ == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0)\
    \ == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4qtw6bqh.jl:23\nin expression starting at\
    \ /tmp/tmp4qtw6bqh.jl:23\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    i =\
    \ 0\n    j = length(numbers)\n    \n    while i < j\n        if numbers[i] ==\
    \ numbers[j] \n            i += 1\n            j += 1\n        else\n        \
    \    if abs(numbers[i] - numbers[j]) < threshold\n                i += 1\n   \
    \         else\n                j += 1\n            end\n        end\n    end\n\
    \    \n    return i == j\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\
    \n@testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0, 2.0,\
    \ 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) ==\
    \ true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpczdasmsu.jl:30\nin expression starting at\
    \ /tmp/tmpczdasmsu.jl:30\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers_sorted = sort(numbers)\n    \n\
    \    index_of_closest = find_closest_index(numbers_sorted, threshold)\n    \n\
    \    if index_of_closest == length(numbers_sorted)\n        return true\n    else\n\
    \        return false\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes in a list of numbers and a threshold and returns the number of numbers\
    \ in the list that are less than the threshold.\nusing Test\n\n@testset begin\n\
    \ncandidate = has_close_elements;\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.05)\
    \ == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0)\
    \ == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpx0vet25r.jl:20\nin expression starting at\
    \ /tmp/tmpx0vet25r.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    i =\
    \ 0\n    \n    while i < length(numbers)\n        if numbers[i] - numbers[i-1]\
    \ < threshold\n            return true\n        end\n        i += 1\n    end\n\
    \    \n    return false\nend\n</cell>\n<text>\nProblem 7\nImplement the function\
    \ is_palindrome(numbers::Vector{Float64})::Bool that checks if a given vector\
    \ of numbers is palindrome. \nA palindrome is a word, number, or other sequence\
    \ of characters that reads the same backward as forward.\nA palindrome is a word,\
    \ number, or other sequence of characters that reads the same backward as forward.\n\
    A palindrome is a word, number, or other sequence of characters that reads the\
    \ same backward as forward.\nA palindrome is a word, number, or other sequence\
    \ of characters that reads the same backward as forward.\nA palindrome is a word,\
    \ number, or other sequence of characters that reads the same backward as forward.\n\
    A palindrome is a word, number, or other sequence of characters that reads the\
    \ same backward as forward.\nA palindrome is a word, number, or other sequence\
    \ of characters that reads the same backward as forward.\nA palindrome is a word,\
    \ number, or other sequence of characters that reads the same backward as forward.\n\
    A palindrome is a word, number, or other sequence of characters that reads the\
    \ same backward as forward.\nA palindrome is a word, number, or other sequence\
    \ of characters that reads the same backward as forward.\nA palindrome is a word,\
    \ number, or other sequence of characters that reads the same backward as forward.\n\
    A palindrome is a word, number, or other sequence of characters that reads the\
    \ same backward as forward.\nA palindrome is a word, number, or other sequence\
    \ of characters that reads the same backward as forward.\nA palindrome is a word,\
    \ number, or other sequence of characters that reads the same backward as forward.\n\
    A palindrome is a word, number, or other sequence of characters that reads the\
    \ same backward as forward.\nA palindrome is a word, number, or other sequence\
    \ of characters that reads the same backward as forward.\nA palindrome is a word,\
    \ number, or other sequence of characters that reads the same backward as forward.\n\
    A palindrome is a word, number, or other sequence of characters that reads the\
    \ same backward as forward.\nA palindrome is a word, number, or other sequence\
    \ of characters that reads the same backward as forward.\nA palindrome is a word,\
    \ number, or other sequence of characters that reads the same backward as forward.\n\
    A palindrome is a word, number, or other sequence of characters that reads the\
    \ same backward as forward.\nA p\nusing Test\n\n@testset begin\n\ncandidate =\
    \ has_close_elements;\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == false)\n\
    \t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0)\
    \ == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkdow29uz.jl:23\nin expression starting at\
    \ /tmp/tmpkdow29uz.jl:23\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    if\
    \ length(numbers) < 2\n        return false\n    end\n    \n    idx1 = 1\n   \
    \ idx2 = length(numbers)\n    \n    while idx1 < idx2\n        if abs(numbers[idx1]\
    \ - numbers[idx2]) < threshold\n            return true\n        end\n       \
    \ \n        if numbers[idx1] > numbers[idx2]\n            idx1 += 1\n        else\n\
    \            idx2 -= 1\n        end\n    end\n    \n    return false\nend\n</cell>\n\
    <code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\
    \t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9,\
    \ 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8)\
    \ == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\
    \t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0) == true)\n\t@test(candidate([1.1,\
    \ 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpygue1mgn.jl:33\nin expression starting at\
    \ /tmp/tmpygue1mgn.jl:33\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    for\
    \ n in numbers\n        if abs(n - numbers[end-1]) < threshold\n            return\
    \ true\n        end\n    end\n    return false\nend\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that checks if a vector has all unique elements. \nFor example\
    \ [1, 1, 2] has all unique elements and returns true.\nFor example [1, 2, 3] has\
    \ all unique elements and returns false.\nFor example [1, 2, 3, 3] has all unique\
    \ elements and returns true.\nFor example [1, 1, 2, 3] has all unique elements\
    \ and returns false.\nFor example [1, 1, 2, 2, 3] has all unique elements and\
    \ returns false.\nFor example [1, 1, 2, 2, 3, 3] has all unique elements and returns\
    \ false.\nFor example [1, 1, 2, 2, 3, 3, 3] has all unique elements and returns\
    \ false.\nFor example [1, 1, 2, 2, 3, 3, 3, 3] has all unique elements and returns\
    \ true.\nFor example [1, 1, 2, 2, 3, 3, 3, 3, 3] has all unique elements and returns\
    \ false.\nFor example [1, 1, 2, 2, 3, 3, 3, 3, 3, 3] has all unique elements and\
    \ returns false.\nFor example [1, 1, 2, 2, 3, 3, 3, 3, 3, 3, 3] has all unique\
    \ elements and returns false.\nFor example [1, 1, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3]\
    \ has all unique elements and returns false.\nFor example [1, 1, 2, 2, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3] has all unique elements and returns false.\nFor example [1,\
    \ 1, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3] has all unique elements and returns\
    \ false.\nFor example [1, 1, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3] has\
    \ all unique elements and returns false.\nFor example [1, 1, 2, 2, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3] has all unique elements and returns false.\n\
    For example [1, 1, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3] has\
    \ all unique elements and returns false.\nFor example [1, 1, 2, 2, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3] has all unique elements and returns\
    \ false.\nFor example [1, 1, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3] has all unique elements and returns false.\nFor example\
    \ [1, 1, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3] has all unique elements and returns false.\nFor example [1,\
    \ 1, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3] has all unique elements and returns false.\nFor example [1,\
    \ 1, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3] has all unique elements and returns false.\nFor example\
    \ [1, 1, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3] has all unique elements and returns\
    \ false.\nFor example [1, 1, 2, 2, 3, 3, \nusing Test\n\n@testset begin\n\ncandidate\
    \ = has_close_elements;\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == false)\n\
    \t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0)\
    \ == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqavq_jda.jl:19\nin expression starting at\
    \ /tmp/tmpqavq_jda.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    i =\
    \ 0\n    j = length(numbers) - 1\n    \n    while i < j\n        if numbers[i]\
    \ + threshold < numbers[j] + threshold\n            i += 1\n        elseif numbers[j]\
    \ + threshold < numbers[i] + threshold\n            j -= 1\n        else\n   \
    \         return true\n        end\n    end\n    \n    return false\nend\n</cell>\n\
    <text>\nNow let's test our function with some examples:\nusing Test\n\n@testset\
    \ begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0, 2.0, 3.9,\
    \ 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2],\
    \ 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) == true)\n\
    \t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmauojge5.jl:27\nin expression starting at\
    \ /tmp/tmpmauojge5.jl:27\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    for n in numbers\n        if abs(n - threshold)\
    \ < threshold\n            return true\n        end\n    end\n    return false\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function that will take in a vector\
    \ of numbers and a threshold and will return a vector of booleans indicating which\
    \ numbers are closer to each other than the given threshold.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0, 2.0, 3.9,\
    \ 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2],\
    \ 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) == true)\n\
    \t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_7gxga15.jl:17\nin expression starting at\
    \ /tmp/tmp_7gxga15.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    for\
    \ n in numbers\n        if abs(n - numbers[1]) < threshold\n            return\
    \ true\n        end\n    end\n    return false\nend\n</cell>\n<code language=julia-1.3>\n\
    using Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphe8otm6z.jl:19\nin expression starting at\
    \ /tmp/tmphe8otm6z.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    i =\
    \ 0\n    j = length(numbers)\n    \n    while i < j\n        if numbers[i] ==\
    \ numbers[j] \n            i += 1\n            j += 1\n        else\n        \
    \    if abs(numbers[i] - numbers[j]) < threshold\n                i += 1\n   \
    \         else\n                j += 1\n            end\n        end\n    end\n\
    \    \n    return i == j\nend\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ checks if a number is in a given vector of numbers.\nThe function should return\
    \ true if the number is in the vector and false otherwise.\nThe function should\
    \ work for any type of vector and any type of number.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0, 2.0, 3.9,\
    \ 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2],\
    \ 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) == true)\n\
    \t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptke3vhlg.jl:30\nin expression starting at\
    \ /tmp/tmptke3vhlg.jl:30\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    for\
    \ n in numbers\n        if abs(n - numbers[1]) < threshold\n            return\
    \ true\n        end\n    end\n    return false\nend\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes in a list of numbers and a threshold and returns\
    \ the number of elements in the list that are greater than or equal to the threshold.\n\
    using Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwimwsw73.jl:19\nin expression starting at\
    \ /tmp/tmpwimwsw73.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    for\
    \ n in numbers[2:end]\n        if abs(numbers[1] - n) < threshold\n          \
    \  return true\n        end\n    end\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvzgkas13.jl:19\nin expression starting at\
    \ /tmp/tmpvzgkas13.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    i =\
    \ 0\n    j = length(numbers)\n    \n    while i < j\n        if numbers[i] ==\
    \ numbers[j] \n            i += 1\n            j += 1\n        else\n        \
    \    if abs(numbers[i] - numbers[j]) < threshold\n                return true\n\
    \            else\n                i += 1\n            end\n        end\n    end\n\
    \    \n    return false\nend\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ returns true if a number is evenly divisible by another number. \nFor example,\
    \ 5 is evenly divisible by 3, because 3 goes into 5 evenly. \nWrite a function\
    \ that returns true if a number is evenly divisible by another number. \nFor example,\
    \ 5 is evenly divisible by 3, because 3 goes into 5 evenly. \nWrite a function\
    \ that returns true if a number is evenly divisible by another number. \nFor example,\
    \ 5 is evenly divisible by 3, because 3 goes into 5 evenly. \nWrite a function\
    \ that returns true if a number is evenly divisible by another number. \nFor example,\
    \ 5 is evenly divisible by 3, because 3 goes into 5 evenly. \nWrite a function\
    \ that returns true if a number is evenly divisible by another number. \nFor example,\
    \ 5 is evenly divisible by 3, because 3 goes into 5 evenly. \nWrite a function\
    \ that returns true if a number is evenly divisible by another number. \nFor example,\
    \ 5 is evenly divisible by 3, because 3 goes into 5 evenly. \nWrite a function\
    \ that returns true if a number is evenly divisible by another number. \nFor example,\
    \ 5 is evenly divisible by 3, because 3 goes into 5 evenly. \nWrite a function\
    \ that returns true if a number is evenly divisible by another number. \nFor example,\
    \ 5 is evenly divisible by 3, because 3 goes into 5 evenly. \nWrite a function\
    \ that returns true if a number is evenly divisible by another number. \nFor example,\
    \ 5 is evenly divisible by 3, because 3 goes into 5 evenly. \nWrite a function\
    \ that returns true if a number is evenly divisible by another number. \nFor example,\
    \ 5 is evenly divisible by 3, because 3 goes into 5 evenly. \nWrite a function\
    \ that returns true if a number is evenly divisible by another number. \nFor example,\
    \ 5 is evenly divisible by 3, because 3 goes into 5 evenly. \nWrite a function\
    \ that returns true if a number is evenly divisible by another number. \nFor example,\
    \ 5 is evenly divisible by 3, because 3 goes into 5 evenly. \nWrite a function\
    \ that returns true if a number is evenly divisible by another number. \nFor example,\
    \ 5\nusing Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfn_qkvit.jl:30\nin expression starting at\
    \ /tmp/tmpfn_qkvit.jl:30\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers_sorted = sort(numbers)\n    \n\
    \    for index in 1:length(numbers_sorted)\n        if numbers_sorted[index] -\
    \ numbers_sorted[index-1] > threshold\n            return true\n        end\n\
    \    end\n    return false\nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes in a vector of numbers and a threshold and returns the number of\
    \ numbers in the vector that are less than the threshold.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0, 2.0, 3.9,\
    \ 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2],\
    \ 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) == true)\n\
    \t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcxj45laf.jl:19\nin expression starting at\
    \ /tmp/tmpcxj45laf.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    for\
    \ n in numbers[2:end]\n        if abs(numbers[1] - n) < threshold\n          \
    \  return true\n        end\n    end\n    \n    return false\nend\n</cell>\n<code\
    \ language=julia-1.5>\n@test has_close_elements([1.0, 2.0, 3.0], 0.5)\n@test has_close_elements([1.0,\
    \ 2.8, 3.0, 4.0, 5.0, 2.0], 0.3)\n</cell>\n<text>\nExercise\nWrite a function\
    \ that calculates the mean of a vector of numbers.\nusing Test\n\n@testset begin\n\
    \ncandidate = has_close_elements;\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.05)\
    \ == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0)\
    \ == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdek4aw_e.jl:20\nin expression starting at\
    \ /tmp/tmpdek4aw_e.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    for\
    \ n in numbers\n        if abs(n - numbers[1]) < threshold\n            return\
    \ true\n        end\n    end\n    return false\nend\n</cell>\n<text>\nExercise\
    \ 4\nWrite a function that takes in a list of numbers and returns the sum of the\
    \ numbers in the list. \nIf the list is empty, return 0.\nIf the list has one\
    \ element, return that element.\nIf the list has two or more elements, return\
    \ the sum of the two elements in the list.\nIf the list has more than two elements,\
    \ raise an error.\nusing Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\
    \t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9,\
    \ 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8)\
    \ == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\
    \t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0) == true)\n\t@test(candidate([1.1,\
    \ 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjcwq0pr8.jl:19\nin expression starting at\
    \ /tmp/tmpjcwq0pr8.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\nusing Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp38t00c8y.jl:8\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp38t00c8y.jl:1\n\
    in expression starting at /tmp/tmp38t00c8y.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    i =\
    \ 0\n    \n    while i < length(numbers)\n        \n        if numbers[i] - numbers[i-1]\
    \ > threshold\n            return true\n        end\n        \n        i = i +\
    \ 1\n    end\n    \n    return false\nend\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that checks if a vector has all unique elements. \nFor example [1,\
    \ 1, 2] has all unique elements.\nusing Test\n\n@testset begin\n\ncandidate =\
    \ has_close_elements;\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == false)\n\
    \t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0)\
    \ == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpx0_s3zj7.jl:25\nin expression starting at\
    \ /tmp/tmpx0_s3zj7.jl:25\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers_sorted = sort(numbers)\n    \n\
    \    index_of_first_element = findfirst(numbers_sorted .< threshold)\n    \n \
    \   if index_of_first_element == nothing\n        return false\n    end\n    \n\
    \    index_of_second_element = findfirst(numbers_sorted .> threshold)\n    \n\
    \    if index_of_second_element == nothing\n        return false\n    end\n  \
    \  \n    if index_of_first_element == index_of_second_element\n        return\
    \ false\n    end\n    \n    return true\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphzf901z5.jl:30\nin expression starting at\
    \ /tmp/tmphzf901z5.jl:30\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    i =\
    \ 0\n    \n    while i < length(numbers)-1 do\n        if numbers[i+1] - numbers[i]\
    \ < threshold then\n            return true\n        end\n        i = i + 1\n\
    \    end\n    \n    return false\nend\n</cell>\n<code language=julia-1.5>\nusing\
    \ Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp2o323ye4.jl:14\nin expression starting at /tmp/tmp2o323ye4.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    for\
    \ n in numbers\n        if abs(n - numbers[end]) > (threshold * length(numbers))\n\
    \            return true\n        end\n    end\n    return false\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that will return the number of elements in\
    \ a vector that are greater than a given threshold.\nusing Test\n\n@testset begin\n\
    \ncandidate = has_close_elements;\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.05)\
    \ == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0)\
    \ == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpy8gm40is.jl:19\nin expression starting at\
    \ /tmp/tmpy8gm40is.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    i =\
    \ 0\n    \n    while i < length(numbers)\n        if numbers[i] - numbers[i-1]\
    \ > threshold\n            return true\n        end\n        i = i + 1\n    end\n\
    \    \n    return false\nend\n</cell>\n<text>\nProblem 3\nWrite a function that\
    \ takes a vector of numbers and returns the sum of the squares of the numbers.\n\
    \    >>> square_sum([1.0, 2.0, 3.0])\n    25.0\n    >>> square_sum([1.0, 2.8,\
    \ 3.0, 4.0, 5.0, 2.0])\n    25.0\n    \"\"\"\nusing Test\n\n@testset begin\n\n\
    candidate = has_close_elements;\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2],\
    \ 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == false)\n\
    \t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0)\
    \ == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprtmmdrn5.jl:23\nin expression starting at\
    \ /tmp/tmprtmmdrn5.jl:23\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\nusing Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp38t00c8y.jl:8\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp38t00c8y.jl:1\n\
    in expression starting at /tmp/tmp38t00c8y.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers_sorted = sort(numbers)\n    \n\
    \    for number in numbers_sorted\n        if number - threshold < numbers_sorted[1]\n\
    \            return true\n        end\n    end\n    return false\nend\n</cell>\n\
    <code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\
    \t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9,\
    \ 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8)\
    \ == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\
    \t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0) == true)\n\t@test(candidate([1.1,\
    \ 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8qvcu9x1.jl:19\nin expression starting at\
    \ /tmp/tmp8qvcu9x1.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    distances = zeros(Float64, length(numbers))\n\
    \    for (i,n) in enumerate(numbers)\n        distances[i] = abs(n - threshold)\n\
    \    end\n    \n    return any(distances <= 1)\nend\n</cell>\n<text>\nExercise\
    \ 3: Write a function that takes a vector of numbers and a threshold and returns\
    \ a vector of booleans indicating which numbers are closer to each other than\
    \ the threshold.\nHint: Use has_close_elements(numbers, threshold) to solve this\
    \ problem.\nusing Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\t\
    @test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9,\
    \ 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8)\
    \ == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\
    \t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0) == true)\n\t@test(candidate([1.1,\
    \ 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmph_1u6fsf.jl:17\nin expression starting at\
    \ /tmp/tmph_1u6fsf.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\nusing Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp38t00c8y.jl:8\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp38t00c8y.jl:1\n\
    in expression starting at /tmp/tmp38t00c8y.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    i =\
    \ 0\n    while i < length(numbers)\n        if numbers[i] - numbers[i - 1] < threshold\n\
    \            return true\n        end\n        i = i + 1\n    end\n    return\
    \ false\nend\n</cell>\n<text>\nExercise 7\nWrite a function that takes in a list\
    \ of numbers and returns the number of elements in the list that are less than\
    \ or equal to 5\nusing Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\
    \t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9,\
    \ 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8)\
    \ == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\
    \t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0) == true)\n\t@test(candidate([1.1,\
    \ 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3fok_3dl.jl:21\nin expression starting at\
    \ /tmp/tmp3fok_3dl.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers_sorted = sort(numbers)\n    \n\
    \    i = 0\n    \n    while i < length(numbers_sorted)\n        \n        if numbers_sorted[i]\
    \ == numbers_sorted[i+1]\n            i += 1\n        else\n            \n   \
    \         if abs(numbers_sorted[i] - numbers_sorted[i+1]) < threshold\n      \
    \          return true\n            else\n                i += 1\n           \
    \ end\n        end\n    end\n    \n    return false\nend\n</cell>\n<text>\nLet's\
    \ try it out on some examples:\nusing Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\
    \t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9,\
    \ 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8)\
    \ == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\
    \t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0) == true)\n\t@test(candidate([1.1,\
    \ 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpyewwh22e.jl:30\nin expression starting at\
    \ /tmp/tmpyewwh22e.jl:30\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    i =\
    \ 0\n    j = length(numbers)\n    \n    while i < j\n        if numbers[i] ==\
    \ numbers[j] \n            i += 1\n            j += 1\n        elseif numbers[i]\
    \ - threshold < numbers[j] - threshold\n            i += 1\n        else\n   \
    \         j += 1\n        end\n    end\n    \n    return i == j\nend\n</cell>\n\
    <code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\
    \t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9,\
    \ 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8)\
    \ == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\
    \t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0) == true)\n\t@test(candidate([1.1,\
    \ 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpe_rk2nqb.jl:28\nin expression starting at\
    \ /tmp/tmpe_rk2nqb.jl:28\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    for\
    \ n in numbers\n        if abs(n - numbers[end-1]) < threshold\n            return\
    \ true\n        end\n    end\n    return false\nend\n</cell>\n<text>\nNow let's\
    \ try it out on some random vectors:\nusing Test\n\n@testset begin\n\ncandidate\
    \ = has_close_elements;\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == false)\n\
    \t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0)\
    \ == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7aqnskg4.jl:19\nin expression starting at\
    \ /tmp/tmp7aqnskg4.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    for\
    \ n in numbers\n        if abs(n - numbers[1]) < threshold\n            return\
    \ true\n        end\n    end\n    return false\nend\n</cell>\n<text>\nThe function\
    \ above is called in the following cell to check whether a vector has any two\
    \ numbers closer to each other than the given threshold.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0, 2.0, 3.9,\
    \ 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2],\
    \ 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) == true)\n\
    \t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphekswxyt.jl:19\nin expression starting at\
    \ /tmp/tmphekswxyt.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    distances = Vector{Float64}(undef, length(numbers))\n\
    \    for i in 1:length(numbers)\n        distances[i] = abs(numbers[i] - threshold)\n\
    \    end\n    \n    has_close_elements = false\n    for i in 1:length(numbers)\n\
    \        if distances[i] <= distances[i - 1]\n            has_close_elements =\
    \ true\n            break\n        end\n    end\n    \n    return has_close_elements\n\
    end\n</cell>\n<text>\nNow let's test our function\nusing Test\n\n@testset begin\n\
    \ncandidate = has_close_elements;\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.05)\
    \ == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0)\
    \ == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpph1lze_o.jl:25\nin expression starting at\
    \ /tmp/tmpph1lze_o.jl:25\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers_sorted = sort(numbers)\n    \n\
    \    index_of_closest = findfirst(numbers_sorted .< threshold)\n    \n    if index_of_closest\
    \ == nothing\n        return false\n    else\n        return true\n    end\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that checks if a vector has all\
    \ elements of a given set. For example, given [1,2,3], return true.\nusing Test\n\
    \n@testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0, 2.0,\
    \ 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) ==\
    \ true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmow5v1ih.jl:20\nin expression starting at\
    \ /tmp/tmpmow5v1ih.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    i =\
    \ length(numbers)\n    \n    while i > 1\n        \n        if numbers[i-1] ==\
    \ numbers[i-2]\n            return true\n        end\n        \n        i -= 1\n\
    \    end\n    \n    return false\nend\n</cell>\n<code language=julia-1.5>\nusing\
    \ Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp11ewsf3_.jl:25\nin expression starting at\
    \ /tmp/tmp11ewsf3_.jl:25\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    i =\
    \ 0\n    \n    while i < length(numbers)\n        \n        j = i + 1\n      \
    \  \n        while j < length(numbers)\n            \n            if abs(numbers[i]\
    \ - numbers[j]) < threshold\n                return true\n            \n     \
    \       j += 1\n        end\n        \n        i += 1\n    end\n    \n    return\
    \ false\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes a vector\
    \ of numbers and a threshold and returns a vector of booleans indicating whether\
    \ each element in the vector is closer to each other than the given threshold.\n\
    using Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2fszhcc4.jl:31\nin expression starting at\
    \ /tmp/tmp2fszhcc4.jl:31\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    i =\
    \ 0\n    \n    while i < length(numbers)\n        \n        if numbers[i] > threshold\n\
    \            \n            if numbers[i + 1] > threshold\n                \n \
    \               return true\n            \n            else\n                \n\
    \                return false\n            \n            end\n            \n \
    \       else\n            \n            if numbers[i + 1] < threshold\n      \
    \          \n                return true\n            \n            else\n   \
    \             \n                return false\n            \n            end\n\
    \            \n        end\n        \n        i = i + 1\n        \n    end\n \
    \   \n    return false\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n\
    @testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0, 2.0,\
    \ 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) ==\
    \ true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp84sjy1wn.jl:48\nin expression starting at\
    \ /tmp/tmp84sjy1wn.jl:48\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    for n in numbers\n        if abs(n - threshold)\
    \ < threshold\n            return true\n        end\n    end\n    return false\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = has_close_elements;\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == false)\n\
    \t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0)\
    \ == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1bclp71q.jl:17\nin expression starting at\
    \ /tmp/tmp1bclp71q.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\nusing Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp38t00c8y.jl:8\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp38t00c8y.jl:1\n\
    in expression starting at /tmp/tmp38t00c8y.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    i =\
    \ 0\n    \n    while i < length(numbers)\n        if numbers[i] - numbers[i-1]\
    \ > threshold\n            return true\n        end\n        i = i + 1\n    end\n\
    \    \n    return false\nend\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ will return the median of a given vector of numbers.\nThe median is the number\
    \ in the middle of a sorted list of numbers.\nThe median is defined as the value\
    \ separating the higher half of a sorted list of numbers from the lower half.\n\
    The median is defined as the value that exists between the two middle values of\
    \ two sorted lists of numbers.\nThe median is defined as the value that exists\
    \ between the two middle values of two sorted lists of numbers.\nThe median is\
    \ defined as the value that exists between the two middle values of two sorted\
    \ lists of numbers.\nThe median is defined as the value that exists between the\
    \ two middle values of two sorted lists of numbers.\nThe median is defined as\
    \ the value that exists between the two middle values of two sorted lists of numbers.\n\
    The median is defined as the value that exists between the two middle values of\
    \ two sorted lists of numbers.\nThe median is defined as the value that exists\
    \ between the two middle values of two sorted lists of numbers.\nThe median is\
    \ defined as the value that exists between the two middle values of two sorted\
    \ lists of numbers.\nThe median is defined as the value that exists between the\
    \ two middle values of two sorted lists of numbers.\nThe median is defined as\
    \ the value that exists between the two middle values of two sorted lists of numbers.\n\
    The median is defined as the value that exists between the two middle values of\
    \ two sorted lists of numbers.\nThe median is defined as the value that exists\
    \ between the two middle values of two sorted lists of numbers.\nThe median is\
    \ defined as the value that exists between the two middle values of two sorted\
    \ lists of numbers.\nThe median is defined as the value that exists between the\
    \ two middle values of two sorted lists of numbers.\nThe median is defined as\
    \ the value that exists between the two middle values of two sorted lists of numbers.\n\
    The median is defined as the value that exists between the two middle values of\
    \ two sorted lists of numbers.\nThe median is defined as the value that exists\
    \ between the two middle values of two sorted lists of numbers.\nThe median is\
    \ defined as the value that exists between the two middle values of two sorted\
    \ lists of numbers.\nThe median is defined as the value that exists between the\
    \ two middle values of two sorted lists of numbers.\nThe median is defined as\
    \ the value that exists between the two middle values of two sorted lists of numbers.\n\
    The median is defined as the value that exists between the two middle values of\
    \ two sorted lists of numbers.\nThe median is defined as the value that exists\
    \ between the two middle values of two sorted lists of numbers.\nThe median is\
    \ defined as the value that exists between the two middle values of two sorted\
    \ lists of \nusing Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\
    \t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9,\
    \ 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8)\
    \ == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\
    \t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0) == true)\n\t@test(candidate([1.1,\
    \ 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpeaov0ci5.jl:23\nin expression starting at\
    \ /tmp/tmpeaov0ci5.jl:23\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    for\
    \ n in numbers\n        if abs(n - numbers[end]) > (threshold * length(numbers))\n\
    \            return true\n        end\n    end\n    return false\nend\n</cell>\n\
    <code language=julia-1.4>\nusing Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\
    \t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9,\
    \ 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8)\
    \ == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\
    \t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0) == true)\n\t@test(candidate([1.1,\
    \ 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplcd8iw0v.jl:19\nin expression starting at\
    \ /tmp/tmplcd8iw0v.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    distances = Vector{Float64}(undef, length(numbers))\n\
    \    for i in 1:length(numbers)\n        distances[i] = abs(numbers[i] - threshold)\n\
    \    end\n    \n    return any(distances <= distances[end])\nend\n</cell>\n<text>\n\
    The function has_close_elements checks if any two numbers are closer to each other\
    \ than the given threshold. For example, if the threshold is 0.5, then any two\
    \ numbers that are closer to each other than the threshold will be considered\
    \ as true.\nusing Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\t\
    @test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9,\
    \ 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8)\
    \ == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\
    \t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0) == true)\n\t@test(candidate([1.1,\
    \ 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmps3bl8dwd.jl:17\nin expression starting at\
    \ /tmp/tmps3bl8dwd.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers_sorted = sort(numbers)\n    \n\
    \    if length(numbers_sorted) < 2\n        return false\n    end\n    \n    threshold\
    \ = sort(threshold)\n    \n    if length(threshold) < 2\n        return false\n\
    \    end\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\nusing Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_92w5wxy.jl:8\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_92w5wxy.jl:1\n\
    in expression starting at /tmp/tmp_92w5wxy.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers_sorted = sort(numbers)\n    \n\
    \    index_of_closest = findfirst(numbers_sorted .< threshold)\n    \n    if index_of_closest\
    \ == nothing\n        return false\n    else\n        return true\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = has_close_elements;\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == false)\n\
    \t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0)\
    \ == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpv8k6vcpo.jl:20\nin expression starting at\
    \ /tmp/tmpv8k6vcpo.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    if\
    \ length(numbers) < 2\n        return false\n    end\n    \n    idx1 = 1\n   \
    \ idx2 = length(numbers)\n    \n    while idx1 < idx2\n        if numbers[idx1]\
    \ - numbers[idx2] < threshold\n            return true\n        end\n        \n\
    \        if numbers[idx1] - numbers[idx2] > threshold\n            return false\n\
    \        end\n        \n        idx1 += 1\n        idx2 -= 1\n    end\n    \n\
    \    return false\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0, 2.0, 3.9,\
    \ 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2],\
    \ 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) == true)\n\
    \t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2ni0bqfq.jl:34\nin expression starting at\
    \ /tmp/tmp2ni0bqfq.jl:34\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers_sorted = sort(numbers)\n    \n\
    \    for index in 1:length(numbers_sorted)\n        if numbers_sorted[index] -\
    \ numbers_sorted[index-1] < threshold\n            return true\n        end\n\
    \    end\n    return false\nend\n</cell>\n<text>\nProblem 3\nWrite a function\
    \ that takes a vector of numbers and a threshold and returns a vector of booleans\
    \ indicating whether each number in the vector is greater than or equal to the\
    \ threshold.\nusing Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\
    \t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9,\
    \ 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8)\
    \ == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\
    \t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0) == true)\n\t@test(candidate([1.1,\
    \ 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptbv9f8ob.jl:19\nin expression starting at\
    \ /tmp/tmptbv9f8ob.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers_sorted = sort(numbers)\n    \n\
    \    index_of_closest = findfirst(x -> abs(x - threshold) < abs(numbers_sorted[end]\
    \ - threshold), numbers_sorted)\n    \n    return index_of_closest != nothing\n\
    end\n</cell>\n<text>\nProblem 7\nWrite a function that takes in a vector of numbers\
    \ and a threshold and returns a vector of booleans indicating whether each number\
    \ in the vector is greater than or equal to the threshold.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0, 2.0, 3.9,\
    \ 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2],\
    \ 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) == true)\n\
    \t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpu0i1y15e.jl:16\nin expression starting at\
    \ /tmp/tmpu0i1y15e.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\nusing Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp38t00c8y.jl:8\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp38t00c8y.jl:1\n\
    in expression starting at /tmp/tmp38t00c8y.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    i =\
    \ 0\n    j = length(numbers)\n    \n    while i < j\n        if numbers[i] ==\
    \ numbers[j] \n            i += 1\n            j += 1\n        elseif numbers[i]\
    \ - numbers[j] < threshold\n            i += 1\n        else\n            j +=\
    \ 1\n        end\n    end\n    \n    return i == j\nend\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes in a list of numbers and returns the number of\
    \ elements that are less than or equal to each other.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0, 2.0, 3.9,\
    \ 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2],\
    \ 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) == true)\n\
    \t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwynybtgi.jl:28\nin expression starting at\
    \ /tmp/tmpwynybtgi.jl:28\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    i =\
    \ length(numbers)\n    \n    while i > 1\n        if numbers[i-1] - numbers[i]\
    \ > threshold\n            return true\n        end\n        i = i - 1\n    end\n\
    \    return false\nend\n</cell>\n<text>\nExercise 2\nWrite a function that will\
    \ return the number of elements in a vector that are less than a given threshold.\n\
    using Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvhnm0u6b.jl:22\nin expression starting at\
    \ /tmp/tmpvhnm0u6b.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers_sorted = sort(numbers)\n    \n\
    \    index_of_closest = findfirst(numbers_sorted .< threshold)\n    \n    if index_of_closest\
    \ == nothing\n        return false\n    else\n        return index_of_closest\
    \ == 1\n    end\nend\n</cell>\n<text>\nExercise 2\nWrite a function that checks\
    \ if a number is in a given vector.\n    >>> is_in_vector([1.0, 2.0, 3.0], 2.0)\n\
    \    true\n    >>> is_in_vector([1.0, 2.0, 3.0], 4.0)\n    false\n    \"\"\"\n\
    using Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpiw5coejl.jl:20\nin expression starting at\
    \ /tmp/tmpiw5coejl.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    for\
    \ n in numbers\n        if abs(n - numbers[1]) < threshold\n            return\
    \ true\n        end\n    end\n    return false\nend\n</cell>\n<text>\nExercise\
    \ 2: Implement the function has_close_elements!\nImplement the function has_close_elements!\
    \ which modifies the given vector in-place to return true if the given vector\
    \ has any two numbers closer to each other than the given threshold.\nusing Test\n\
    \n@testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0, 2.0,\
    \ 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) ==\
    \ true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvwj5shtc.jl:19\nin expression starting at\
    \ /tmp/tmpvwj5shtc.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\nusing Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp38t00c8y.jl:8\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp38t00c8y.jl:1\n\
    in expression starting at /tmp/tmp38t00c8y.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    for\
    \ n in numbers[2:end]\n        if abs(numbers[1] - n) < threshold\n          \
    \  return true\n        end\n    end\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvzgkas13.jl:19\nin expression starting at\
    \ /tmp/tmpvzgkas13.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    for\
    \ n in numbers\n        if abs(n - numbers[1]) < threshold\n            return\
    \ true\n        end\n    end\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpih42le6t.jl:19\nin expression starting at\
    \ /tmp/tmpih42le6t.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    i =\
    \ 0\n    \n    while i < length(numbers)\n        \n        if numbers[i] - numbers[i-1]\
    \ > threshold\n            return true\n        end\n        \n        i = i +\
    \ 1\n    end\n    \n    return false\nend\n</cell>\n<text>\nThe function above\
    \ checks if any two numbers in the vector are closer to each other than the given\
    \ threshold. Let's test it on a few examples:\nusing Test\n\n@testset begin\n\n\
    candidate = has_close_elements;\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2],\
    \ 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == false)\n\
    \t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0)\
    \ == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0wnpq_0b.jl:25\nin expression starting at\
    \ /tmp/tmp0wnpq_0b.jl:25\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers_sorted = sort(numbers)\n    \n\
    \    index_of_closest = findfirst(x -> abs(x - threshold) < abs(numbers_sorted[end]\
    \ - threshold), numbers_sorted)\n    \n    return index_of_closest == nothing\n\
    end\n</cell>\n<text>\nProblem 3\nWrite a function that takes in a vector of numbers\
    \ and returns the mean of the numbers. If the vector is empty return 0.0.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpp_1o7ufz.jl:16\nin expression starting at\
    \ /tmp/tmpp_1o7ufz.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    i =\
    \ 2\n    while i < length(numbers)\n        if numbers[i] - numbers[i - 1] < threshold\n\
    \            return true\n        else\n            i += 1\n        end\n    end\n\
    \    return false\nend\n</cell>\n<text>\nThe function has_close_elements checks\
    \ if there are any two numbers in the given vector that are closer to each other\
    \ than the given threshold. If so, it returns true. Otherwise, it returns false.\n\
    using Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpw7_sfwv5.jl:22\nin expression starting at\
    \ /tmp/tmpw7_sfwv5.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\nusing Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp38t00c8y.jl:8\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp38t00c8y.jl:1\n\
    in expression starting at /tmp/tmp38t00c8y.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    i =\
    \ 0\n    j = length(numbers)\n    while i < j\n        if numbers[i] == numbers[j]\
    \ \n            i += 1\n            j += 1\n        else\n            if abs(numbers[i]\
    \ - numbers[j]) < threshold\n                return true\n            else\n \
    \               i += 1\n                j += 1\n            end\n        end\n\
    \    end\n    return false\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\
    \n@testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0, 2.0,\
    \ 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) ==\
    \ true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxcx9vy3n.jl:29\nin expression starting at\
    \ /tmp/tmpxcx9vy3n.jl:29\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers_sorted = sort(numbers)\n    \n\
    \    for index in 2:length(numbers_sorted)\n        if numbers_sorted[index-1]\
    \ - numbers_sorted[index] < threshold\n            return true\n        end\n\
    \    end\n    return false\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\
    \n@testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0, 2.0,\
    \ 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) ==\
    \ true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdp6xdrud.jl:19\nin expression starting at\
    \ /tmp/tmpdp6xdrud.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    i =\
    \ 2\n    while i < length(numbers)\n        if numbers[i] - numbers[i-1] > threshold\n\
    \            return true\n        end\n        i += 1\n    end\n    return false\n\
    end\n</cell>\n<text>\nLet's test our function by checking if any two numbers are\
    \ closer to each other than 0.5:\nusing Test\n\n@testset begin\n\ncandidate =\
    \ has_close_elements;\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == false)\n\
    \t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0)\
    \ == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpl0fhnp91.jl:21\nin expression starting at\
    \ /tmp/tmpl0fhnp91.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\nusing Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp38t00c8y.jl:8\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp38t00c8y.jl:1\n\
    in expression starting at /tmp/tmp38t00c8y.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    for\
    \ n in numbers[2:end]\n        if abs(numbers[1] - n) < threshold\n          \
    \  return true\n        end\n    end\n    \n    return false\nend\n</cell>\n<code\
    \ language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\
    \t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9,\
    \ 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8)\
    \ == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\
    \t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0) == true)\n\t@test(candidate([1.1,\
    \ 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppvazwr8i.jl:20\nin expression starting at\
    \ /tmp/tmppvazwr8i.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    i =\
    \ 0\n    j = length(numbers) - 1\n    \n    while i < j\n        if numbers[i]\
    \ + threshold < numbers[j] + threshold\n            return true\n        end\n\
    \        if numbers[j] + threshold < numbers[i] + threshold\n            return\
    \ false\n        end\n        i += 1\n        j -= 1\n    end\n    \n    return\
    \ false\nend\n</cell>\n<text>\nExercise 3\nWrite a function that checks if a vector\
    \ has all elements equal, given threshold.\n    >>> has_all_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_all_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n    true\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\
    \t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9,\
    \ 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8)\
    \ == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\
    \t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0) == true)\n\t@test(candidate([1.1,\
    \ 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpernhx8vp.jl:28\nin expression starting at\
    \ /tmp/tmpernhx8vp.jl:28\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers_sorted = sort(numbers)\n    \n\
    \    i = 0\n    \n    while i < length(numbers_sorted)\n        \n        j =\
    \ i + 1\n        \n        while j < length(numbers_sorted)\n            \n  \
    \          if numbers_sorted[j] - numbers_sorted[i] < threshold\n            \
    \    return false\n            \n            j += 1\n        end\n        \n \
    \       i += 1\n    end\n    \n    return true\nend\n</cell>\n<text>\nExercise\
    \ 4\nWrite a function that takes in a vector of numbers and a threshold and returns\
    \ the number of numbers in the vector that are closer to each other than the threshold.\n\
    using Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp631ccsyu.jl:31\nin expression starting at\
    \ /tmp/tmp631ccsyu.jl:31\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    i =\
    \ 0\n    while i < length(numbers)-1 do\n        if numbers[i+1] - numbers[i]\
    \ < threshold then\n            return true\n        end\n        i = i + 1\n\
    \    end\n    return false\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\
    \n@testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0, 2.0,\
    \ 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) ==\
    \ true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp8hvm8_ne.jl:13\nin expression starting at /tmp/tmp8hvm8_ne.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    i =\
    \ 0\n    \n    while i < length(numbers)\n        \n        j = i + 1\n      \
    \  \n        while j < length(numbers)\n            \n            if abs(numbers[i]\
    \ - numbers[j]) < threshold\n                return true\n            \n     \
    \       j += 1\n            \n        end\n        \n        i += 1\n        \n\
    \    end\n    \n    return false\nend\n</cell>\n<code language=julia-1.3>\nusing\
    \ Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8opuf2du.jl:33\nin expression starting at\
    \ /tmp/tmp8opuf2du.jl:33\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers_sorted = sort(numbers)\n    \n\
    \    for index in 1:length(numbers_sorted)\n        if numbers_sorted[index] -\
    \ numbers_sorted[index-1] > threshold\n            return true\n        end\n\
    \    end\n    return false\nend\n</cell>\n<text>\nProblem 7\nWrite a function\
    \ that takes in a vector of numbers and returns the sum of the squares of the\
    \ numbers.\nThe function should only take in vectors of numbers and return a number.\n\
    using Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptoo1vcdw.jl:19\nin expression starting at\
    \ /tmp/tmptoo1vcdw.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    i =\
    \ 2\n    while i < length(numbers)\n        if numbers[i] - numbers[i-1] > threshold\n\
    \            return true\n        end\n        i += 1\n    end\n    return false\n\
    end\n</cell>\n<text>\nNow let's test our function\nusing Test\n\n@testset begin\n\
    \ncandidate = has_close_elements;\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.05)\
    \ == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0)\
    \ == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcx_ad87g.jl:21\nin expression starting at\
    \ /tmp/tmpcx_ad87g.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    i =\
    \ 0\n    \n    while i < length(numbers)\n        \n        j = i + 1\n      \
    \  \n        while j < length(numbers)\n            \n            if numbers[j]\
    \ - numbers[i] <= threshold\n                return true\n            \n     \
    \       j += 1\n        end\n        \n        i += 1\n    end\n    \n    return\
    \ false\nend\n</cell>\n<text>\nProblem 3\nWrite a function that takes in a list\
    \ of numbers and returns the sum of the numbers in the list.\n    >>> sum([1,\
    \ 2, 3, 4])\n    10\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\
    \t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9,\
    \ 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8)\
    \ == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\
    \t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0) == true)\n\t@test(candidate([1.1,\
    \ 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpt1_le5ex.jl:31\nin expression starting at\
    \ /tmp/tmpt1_le5ex.jl:31\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    for\
    \ n in numbers\n        if abs(n - numbers[end-1]) < threshold\n            return\
    \ true\n        end\n    end\n    return false\nend\n</cell>\n<text>\nLet's try\
    \ it out!\nusing Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\t\
    @test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9,\
    \ 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8)\
    \ == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\
    \t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0) == true)\n\t@test(candidate([1.1,\
    \ 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmps4ltk8hm.jl:19\nin expression starting at\
    \ /tmp/tmps4ltk8hm.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    i =\
    \ 0\n    j = length(numbers) - 1\n    \n    while i < j\n        if numbers[i]\
    \ + threshold < numbers[j] + threshold\n            return true\n        else\n\
    \            i += 1\n            j = i\n        end\n    end\n    \n    return\
    \ false\nend\n</cell>\n<text>\nProblem 7\nWrite a function that takes in a list\
    \ of numbers and returns the number of elements in the list that are greater than\
    \ or equal to 50. \n>>> count_greater_than_or_equal_to(numbers::Vector{Float64})\n\
    3\n>>> count_greater_than_or_equal_to([10, 20, 30, 40, 50, 60, 70, 80, 90])\n\
    5\n>>> count_greater_than_or_equal_to([10, 20, 30, 40, 50, 60, 70, 80, 90, 100])\n\
    0\n>>> count_greater_than_or_equal_to([10, 20, 30, 40, 50, 60, 70, 80, 90, 100,\
    \ 110])\n1\n>>> count_greater_than_or_equal_to([10, 20, 30, 40, 50, 60, 70, 80,\
    \ 90, 100, 110, 120])\n2\n>>> count_greater_than_or_equal_to([10, 20, 30, 40,\
    \ 50, 60, 70, 80, 90, 100, 110, 120, 130])\n3\n>>> count_greater_than_or_equal_to([10,\
    \ 20, 30, 40, 50, 60, 70, 80, 90, 100, 110, 120, 130, 140])\n4\n>>> count_greater_than_or_equal_to([10,\
    \ 20, 30, 40, 50, 60, 70, 80, 90, 100, 110, 120, 130, 140, 150])\n5\n>>> count_greater_than_or_equal_to([10,\
    \ 20, 30, 40, 50, 60, 70, 80, 90, 100, 110, 120, 130, 140, 150, 160])\n6\n>>>\
    \ count_greater_than_or_equal_to([10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110,\
    \ 120, 130, 140, 150, 160, 170])\n7\n>>> count_greater_than_or_equal_to([10, 20,\
    \ 30, 40, 50, 60, 70, 80, 90, 100, 110, 120, 130, 140, 150, 160, 170, 180])\n\
    8\n>>> count_greater_than_or_equal_to([10, 20, 30, 40, 50, 60, 70, 80, 90, 100,\
    \ 110, 120, 130, 140, 150, 160, 170, 180, 190])\n9\n>>> count_greater_than_or_equal_to([10,\
    \ 20, 30, 40, 50, 60, 70, 80, 90, 100, 110, 120, 130, 140, 150, 160, 170, 180,\
    \ 190, 200])\n10\n>>> count_greater_than_or_equal_to([10, 20, 30, 40, 50, 60,\
    \ 70, 80, 90, 100, 110, 120, 130, 140, 150, 160, 170, 180, 190, 200, 210\nusing\
    \ Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9jd0c2eu.jl:26\nin expression starting at\
    \ /tmp/tmp9jd0c2eu.jl:26\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    for\
    \ n in numbers[2:end]\n        if abs(numbers[1] - n) < threshold\n          \
    \  return true\n        end\n    end\n    return false\nend\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a vector of numbers and a threshold and\
    \ returns a vector of booleans indicating which numbers are closer to each other\
    \ than the given threshold.\nusing Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\
    \t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9,\
    \ 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8)\
    \ == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\
    \t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0) == true)\n\t@test(candidate([1.1,\
    \ 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpud7f_cgw.jl:19\nin expression starting at\
    \ /tmp/tmpud7f_cgw.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    idx\
    \ = 0\n    \n    while idx < length(numbers)\n        if abs(numbers[idx] - numbers[idx+1])\
    \ < threshold\n            return true\n        end\n        idx += 1\n    end\n\
    \    return false\nend\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the number of elements in a vector that are less than a given threshold.\nFor\
    \ example, if the threshold is 0.5, then the following should return 2:\nusing\
    \ Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgtme81md.jl:22\nin expression starting at\
    \ /tmp/tmpgtme81md.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers_sorted = sort(numbers)\n    \n\
    \    i = 0\n    while i < length(numbers_sorted)\n        if numbers_sorted[i]\
    \ == numbers_sorted[i+1]\n            i += 1\n        else\n            if abs(numbers_sorted[i]\
    \ - numbers_sorted[i+1]) < threshold\n                return true\n          \
    \  end\n        end\n    end\n    \n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprufo2u0e.jl:25\nin expression starting at\
    \ /tmp/tmprufo2u0e.jl:25\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    distances = zeros(length(numbers))\n \
    \   for i = 1:length(numbers)\n        distances[i] = abs(numbers[i] - threshold)\n\
    \    end\n    \n    return any(distances <= 1)\nend\n</cell>\n<text>\nLet's test\
    \ it on some examples:\nusing Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\
    \t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9,\
    \ 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8)\
    \ == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\
    \t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0) == true)\n\t@test(candidate([1.1,\
    \ 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5spgdyf_.jl:17\nin expression starting at\
    \ /tmp/tmp5spgdyf_.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers_sorted = sort(numbers)\n    \n\
    \    i = 0\n    \n    while i < length(numbers_sorted)\n        if numbers_sorted[i]\
    \ == numbers_sorted[i+1]\n            i += 1\n        else\n            if abs(numbers_sorted[i]\
    \ - numbers_sorted[i+1]) < threshold\n                return true\n          \
    \  else\n                i += 1\n            end\n        end\n    end\n    \n\
    \    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\
    \t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9,\
    \ 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8)\
    \ == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\
    \t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0) == true)\n\t@test(candidate([1.1,\
    \ 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpjqwjvqzq.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmpjqwjvqzq.jl:33\n  Test threw exception\n\
    \  Expression: candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true\n  BoundsError:\
    \ attempt to access 6-element Vector{Float64} at index [0]\n  Stacktrace:\n  \
    \ [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)\n     @ Main /tmp/tmpjqwjvqzq.jl:15\n   [3] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpjqwjvqzq.jl:33 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpjqwjvqzq.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpjqwjvqzq.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == false\n  BoundsError: attempt\
    \ to access 6-element Vector{Float64} at index [0]\n  Stacktrace:\n   [1] getindex\n\
    \     @ ./array.jl:861 [inlined]\n   [2] has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)\n     @ Main /tmp/tmpjqwjvqzq.jl:15\n   [3] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpjqwjvqzq.jl:34 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpjqwjvqzq.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpjqwjvqzq.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) == true\n  BoundsError: attempt to\
    \ access 5-element Vector{Float64} at index [0]\n  Stacktrace:\n   [1] getindex\n\
    \     @ ./array.jl:861 [inlined]\n   [2] has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)\n     @ Main /tmp/tmpjqwjvqzq.jl:15\n   [3] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpjqwjvqzq.jl:35 [inlined]\n\
    \   [5] macro expansion\n    "
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers_sorted = sort(numbers)\n    \n\
    \    index_of_closest = findfirst(abs(numbers_sorted - threshold) < 1e-6)\n  \
    \  \n    if index_of_closest == nothing\n        return false\n    else\n    \
    \    return true\n    end\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\
    \n@testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0, 2.0,\
    \ 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) ==\
    \ true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpamruxd9h.jl:20\nin expression starting at\
    \ /tmp/tmpamruxd9h.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers_sorted = sort(numbers)\n    \n\
    \    index_of_closest = findfirst(x -> abs(x - threshold) < abs(numbers_sorted[end]\
    \ - threshold), numbers_sorted)\n    \n    if index_of_closest == length(numbers_sorted)\n\
    \        return false\n    else\n        return true\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\
    \t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9,\
    \ 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8)\
    \ == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\
    \t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0) == true)\n\t@test(candidate([1.1,\
    \ 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqqukmye3.jl:20\nin expression starting at\
    \ /tmp/tmpqqukmye3.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    i =\
    \ 2\n    while i < length(numbers)\n        if numbers[i] - numbers[i-1] > threshold\n\
    \            return true\n        end\n        i += 1\n    end\n    return false\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = has_close_elements;\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == false)\n\
    \t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0)\
    \ == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_bi1fqeq.jl:21\nin expression starting at\
    \ /tmp/tmp_bi1fqeq.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    for\
    \ n in numbers[2:end]\n        if abs(numbers[1] - n) < threshold\n          \
    \  return true\n        end\n    end\n    return false\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the number of elements in a given vector\
    \ that are greater than a given threshold.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = has_close_elements;\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == false)\n\
    \t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0)\
    \ == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpp46an9hv.jl:19\nin expression starting at\
    \ /tmp/tmpp46an9hv.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers_sorted = sort(numbers)\n    \n\
    \    index_of_closest = findfirst(x -> abs(x - threshold) < abs(numbers_sorted[end]\
    \ - threshold), numbers_sorted)\n    \n    if index_of_closest == nothing\n  \
    \      return false\n    else\n        return true\n    end\nend\n</cell>\n<code\
    \ language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\
    \t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9,\
    \ 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8)\
    \ == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\
    \t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0) == true)\n\t@test(candidate([1.1,\
    \ 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqneo23fs.jl:20\nin expression starting at\
    \ /tmp/tmpqneo23fs.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    idx\
    \ = 0\n    while idx < length(numbers)\n        if numbers[idx] - numbers[idx\
    \ - 1] > threshold\n            return true\n        end\n        idx += 1\n \
    \   end\n    return false\nend\n</cell>\n<text>\nThe function has_close_elements\
    \ takes in a list of numbers and a threshold and returns a boolean indicating\
    \ whether or not any two numbers in the list are closer to each other than the\
    \ given threshold.\nusing Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\
    \t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9,\
    \ 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8)\
    \ == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\
    \t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0) == true)\n\t@test(candidate([1.1,\
    \ 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptrpnh908.jl:21\nin expression starting at\
    \ /tmp/tmptrpnh908.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    i =\
    \ 0\n    \n    while i < length(numbers)-1 do\n        if numbers[i+1] - numbers[i]\
    \ < threshold then\n            return true\n        end\n        i = i + 1\n\
    \    end\n    \n    return false\nend\n</cell>\n<text>\nThe function has_close_elements\
    \ takes two arguments: numbers and threshold. The first argument is a vector of\
    \ numbers, the second argument is a threshold value. Let's see how it works.\n\
    using Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp7o48_17a.jl:14\nin expression starting at /tmp/tmp7o48_17a.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    i =\
    \ 0\n    \n    while i < length(numbers)\n        if numbers[i] - numbers[i-1]\
    \ < threshold\n            return true\n        end\n        i = i + 1\n    end\n\
    \    \n    return false\nend\n</cell>\n<text>\nThe function has_close_elements\
    \ checks if any two numbers are closer to each other than the given threshold.\
    \ For example, if the given threshold is 0.3, then any two numbers that are closer\
    \ to each other than the threshold will be considered as true.\nusing Test\n\n\
    @testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0, 2.0,\
    \ 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) ==\
    \ true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpup8r2el3.jl:23\nin expression starting at\
    \ /tmp/tmpup8r2el3.jl:23\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    threshold\
    \ = sort(threshold)\n    \n    i = length(numbers)\n    \n    while i > 0\n  \
    \      \n        if numbers[i-1] == numbers[i]\n            return true\n    \
    \    end\n        \n        i -= 1\n    end\n    \n    return false\nend\n</cell>\n\
    <text>\nThe function has_close_elements checks if any two numbers are closer to\
    \ each other than the given threshold. In the case where two numbers are equally\
    \ close to each other, the function returns true.\nusing Test\n\n@testset begin\n\
    \ncandidate = has_close_elements;\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.05)\
    \ == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0)\
    \ == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpc2j3trva.jl:27\nin expression starting at\
    \ /tmp/tmpc2j3trva.jl:27\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    for n in numbers\n        if abs(n - threshold)\
    \ < threshold\n            return true\n        end\n    end\n    return false\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = has_close_elements;\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == false)\n\
    \t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0)\
    \ == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1bclp71q.jl:17\nin expression starting at\
    \ /tmp/tmp1bclp71q.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers_sorted = sort(numbers)\n    \n\
    \    i = 0\n    \n    while i < length(numbers_sorted)\n        \n        if numbers_sorted[i]\
    \ > threshold\n            \n            i += 1\n            \n        else\n\
    \            \n            if numbers_sorted[i+1] - numbers_sorted[i] < threshold\n\
    \                \n                return true\n            \n            else\n\
    \                \n                i += 1\n            \n            end\n   \
    \         \n        end\n        \n    end\n    \n    return false\nend\n</cell>\n\
    <code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\
    \t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9,\
    \ 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8)\
    \ == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\
    \t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0) == true)\n\t@test(candidate([1.1,\
    \ 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3rldsk6v.jl:38\nin expression starting at\
    \ /tmp/tmp3rldsk6v.jl:38\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    i =\
    \ 0\n    j = length(numbers)\n    \n    while i < j\n        if numbers[i] ==\
    \ numbers[j] \n            i += 1\n            j += 1\n        elseif abs(numbers[i]\
    \ - numbers[j]) < threshold\n            i += 1\n        else\n            j +=\
    \ 1\n        end\n    end\n    \n    return j == length(numbers)\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that checks if a number is in a given vector.\n\
    using Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8ps6orqh.jl:28\nin expression starting at\
    \ /tmp/tmp8ps6orqh.jl:28\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\nusing Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp38t00c8y.jl:8\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp38t00c8y.jl:1\n\
    in expression starting at /tmp/tmp38t00c8y.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    i =\
    \ length(numbers)\n    \n    while i > 1\n        if numbers[i-1] - numbers[i]\
    \ > threshold\n            return true\n        end\n        i = i - 1\n    end\n\
    \    return false\nend\n</cell>\n<text>\nProblem 7\nWrite a function that takes\
    \ in a list of numbers and returns the sum of the numbers in the list. \nIf the\
    \ list is empty, return 0.\nusing Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\
    \t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9,\
    \ 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8)\
    \ == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\
    \t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0) == true)\n\t@test(candidate([1.1,\
    \ 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzu_zr3pz.jl:22\nin expression starting at\
    \ /tmp/tmpzu_zr3pz.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    for\
    \ n in numbers[2:end]\n        if abs(numbers[1] - n) < threshold\n          \
    \  return true\n        end\n    end\n    \n    return false\nend\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a vector of numbers and a threshold and\
    \ returns a new vector with only the numbers that have a value greater than the\
    \ threshold.\nusing Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\
    \t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9,\
    \ 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8)\
    \ == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\
    \t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0) == true)\n\t@test(candidate([1.1,\
    \ 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpbkb1ne9i.jl:20\nin expression starting at\
    \ /tmp/tmpbkb1ne9i.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    for\
    \ n in numbers\n        if n == numbers[1]\n            return true\n        end\n\
    \    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\
    \t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9,\
    \ 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8)\
    \ == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\
    \t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0) == true)\n\t@test(candidate([1.1,\
    \ 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmppkiohxad.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmppkiohxad.jl:25\n  Expression: candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppkiohxad.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppkiohxad.jl:23\ntest set: Test\
    \ Failed at /tmp/tmppkiohxad.jl:27\n  Expression: candidate([1.0, 2.0, 5.9, 4.0,\
    \ 5.0], 0.8) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppkiohxad.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppkiohxad.jl:23\ntest set: Test\
    \ Failed at /tmp/tmppkiohxad.jl:30\n  Expression: candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 0.5) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppkiohxad.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppkiohxad.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    for\
    \ n in numbers[2:end]\n        if abs(numbers[1] - n) < threshold\n          \
    \  return true\n        end\n    end\n    \n    return false\nend\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns true if the given vector has all elements\
    \ equal, false otherwise.\nHint: use all?\nusing Test\n\n@testset begin\n\ncandidate\
    \ = has_close_elements;\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == false)\n\
    \t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0)\
    \ == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpff7wdnxg.jl:20\nin expression starting at\
    \ /tmp/tmpff7wdnxg.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    for\
    \ n in numbers\n        if abs(n - numbers[end-1]) < threshold\n            return\
    \ true\n        end\n    end\n    \n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpk01vnibq.jl:20\nin expression starting at\
    \ /tmp/tmpk01vnibq.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers_sorted = sort(numbers)\n    \n\
    \    index_of_closest = findfirst(numbers_sorted .< threshold)\n    \n    if index_of_closest\
    \ == nothing\n        return false\n    else\n        return true\n    end\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that checks if a vector has all\
    \ elements equal, given that all elements are unique.\n    >>> has_all_elements([1,\
    \ 2, 3])\n    true\n    >>> has_all_elements([1, 2, 3, 1])\n    false\n    >>>\
    \ has_all_elements([1, 2, 3, 1])\n    false\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0, 2.0, 3.9,\
    \ 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2],\
    \ 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) == true)\n\
    \t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpodin7npa.jl:20\nin expression starting at\
    \ /tmp/tmpodin7npa.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    i =\
    \ 2\n    \n    while i < length(numbers)\n        if abs(numbers[i] - numbers[i-1])\
    \ < threshold\n            return true\n        end\n        i += 1\n    end\n\
    \    return false\nend\n</cell>\n<text>\nExercise 2\nWrite a function that checks\
    \ if a vector has any elements equal to given value.\n    >>> has_any_element([1.0,\
    \ 2.0, 3.0], 2.0)\n    true\n    >>> has_any_element([1.0, 2.0, 3.0], 3.0)\n \
    \   false\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\
    \t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9,\
    \ 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8)\
    \ == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\
    \t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0) == true)\n\t@test(candidate([1.1,\
    \ 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpl_tynzk0.jl:22\nin expression starting at\
    \ /tmp/tmpl_tynzk0.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    for\
    \ n in numbers[2:end]\n        if abs(numbers[1] - n) < threshold\n          \
    \  return true\n        end\n    end\n    return false\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that checks if a vector has all unique elements.\
    \ \nThe function should return true if the vector has all unique elements and\
    \ false otherwise.\nThe function should work for both vectors of numbers and vectors\
    \ of strings.\nThe function should work for vectors of any length.\nusing Test\n\
    \n@testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0, 2.0,\
    \ 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) ==\
    \ true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfkx3ej6e.jl:19\nin expression starting at\
    \ /tmp/tmpfkx3ej6e.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\nusing Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp38t00c8y.jl:8\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp38t00c8y.jl:1\n\
    in expression starting at /tmp/tmp38t00c8y.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers_sorted = sort(numbers)\n    \n\
    \    i = 0\n    \n    while i < length(numbers_sorted)\n        \n        if numbers_sorted[i]\
    \ == numbers_sorted[i+1]\n            i += 1\n        else\n            \n   \
    \         if abs(numbers_sorted[i] - numbers_sorted[i+1]) < threshold\n      \
    \          return true\n            end\n        end\n    end\n    \n    return\
    \ false\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes a vector\
    \ of numbers and a threshold and returns a vector of booleans indicating whether\
    \ each number is closer to each other than the given threshold.\nusing Test\n\n\
    @testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0, 2.0,\
    \ 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) ==\
    \ true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphukusm6k.jl:28\nin expression starting at\
    \ /tmp/tmphukusm6k.jl:28\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    i =\
    \ 0\n    \n    while i < length(numbers)\n        \n        if numbers[i] > threshold\n\
    \            return false\n        end\n        \n        if numbers[i] < threshold\n\
    \            return true\n        end\n        \n        i = i + 1\n    end\n\
    \    \n    return true\nend\n</cell>\n<text>\nThe function has_close_elements\
    \ takes two arguments: a vector of numbers and a threshold. The function returns\
    \ true if the vector has any two numbers closer to each other than the given threshold.\
    \ Otherwise, it returns false.\nusing Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\
    \t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9,\
    \ 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8)\
    \ == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\
    \t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0) == true)\n\t@test(candidate([1.1,\
    \ 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxwevl91l.jl:29\nin expression starting at\
    \ /tmp/tmpxwevl91l.jl:29\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    distances = Vector{Float64}(undef, length(numbers))\n\
    \    for i in 1:length(numbers)\n        distances[i] = abs(numbers[i] - threshold)\n\
    \    end\n    \n    return distances.min < distances.max\nend\n</cell>\n<text>\n\
    Exercise 3: Implement the function has_close_elements!() which modifies the given\
    \ vector of numbers in place. \n    \n    has_close_elements!(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool\n    \n    numbers[2] = 2.0\n    numbers[3] = 4.0\n\
    \    numbers[4] = 5.0\n    numbers[5] = 2.0\n    \n    return true\nend\nTest\
    \ your function using some example numbers and thresholds.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0, 2.0, 3.9,\
    \ 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2],\
    \ 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) == true)\n\
    \t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpg5yqu13t.jl:17\nin expression starting at\
    \ /tmp/tmpg5yqu13t.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    i =\
    \ 0\n    \n    while i < length(numbers)\n        if numbers[i] - numbers[i-1]\
    \ < threshold\n            return false\n        end\n        i += 1\n    end\n\
    \    \n    return true\nend\n</cell>\n<text>\nThe function above checks if any\
    \ two numbers are closer to each other than the given threshold. Let's see how\
    \ it works.\nusing Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\
    \t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9,\
    \ 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8)\
    \ == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\
    \t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0) == true)\n\t@test(candidate([1.1,\
    \ 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0rn6z4r3.jl:23\nin expression starting at\
    \ /tmp/tmp0rn6z4r3.jl:23\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers_sorted = sort(numbers)\n    \n\
    \    index_of_first_element = findfirst(numbers_sorted .< threshold)\n    index_of_last_element\
    \ = findlast(numbers_sorted .> threshold)\n    \n    if index_of_first_element\
    \ == index_of_last_element\n        return true\n    else\n        return false\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\
    \ncandidate = has_close_elements;\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.05)\
    \ == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0)\
    \ == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp72fc3qol.jl:21\nin expression starting at\
    \ /tmp/tmp72fc3qol.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\nusing Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp38t00c8y.jl:8\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp38t00c8y.jl:1\n\
    in expression starting at /tmp/tmp38t00c8y.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    for\
    \ n in numbers[2:end]\n        if abs(numbers[1] - n) < threshold\n          \
    \  return true\n        end\n    end\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvzgkas13.jl:19\nin expression starting at\
    \ /tmp/tmpvzgkas13.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    for\
    \ n in numbers\n        if n == numbers[1]\n            return true\n        end\n\
    \    end\n    \n    return false\nend\n</cell>\n<text>\nProblem 4\nWrite a function\
    \ that returns the number of elements in a vector that satisfy a given condition.\n\
    using Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpig62n2kx.jl:20\nin expression starting at\
    \ /tmp/tmpig62n2kx.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    i =\
    \ 0\n    \n    while i < length(numbers)\n        if numbers[i] - numbers[i-1]\
    \ < threshold\n            return false\n        end\n        i += 1\n    end\n\
    \    \n    return true\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n\
    @testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0, 2.0,\
    \ 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) ==\
    \ true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9jb92bh4.jl:23\nin expression starting at\
    \ /tmp/tmp9jb92bh4.jl:23\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    if\
    \ length(numbers) < 2\n        return false\n    end\n    \n    idx = 1\n    while\
    \ idx <= length(numbers)\n        if numbers[idx] - numbers[idx - 1] > threshold\n\
    \            return true\n        end\n        idx += 1\n    end\n    return false\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp0ydlmltq.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmp0ydlmltq.jl:30\n  Test threw exception\n\
    \  Expression: candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true\n  BoundsError:\
    \ attempt to access 6-element Vector{Float64} at index [0]\n  Stacktrace:\n  \
    \ [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)\n     @ Main /tmp/tmp0ydlmltq.jl:18\n   [3] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp0ydlmltq.jl:30 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp0ydlmltq.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp0ydlmltq.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == false\n  BoundsError: attempt\
    \ to access 6-element Vector{Float64} at index [0]\n  Stacktrace:\n   [1] getindex\n\
    \     @ ./array.jl:861 [inlined]\n   [2] has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)\n     @ Main /tmp/tmp0ydlmltq.jl:18\n   [3] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp0ydlmltq.jl:31 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp0ydlmltq.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp0ydlmltq.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) == true\n  BoundsError: attempt to\
    \ access 5-element Vector{Float64} at index [0]\n  Stacktrace:\n   [1] getindex\n\
    \     @ ./array.jl:861 [inlined]\n   [2] has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)\n     @ Main /tmp/tmp0ydlmltq.jl:18\n   [3] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp0ydlmltq.jl:32 [inlined]\n\
    \   [5] macro expansion\n    "
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers_sorted = sort(numbers)\n    \n\
    \    closest_number = numbers_sorted[1]\n    \n    for number in numbers_sorted[2:end]\n\
    \        if abs(number - closest_number) < threshold\n            return true\n\
    \        else\n            closest_number = number\n        end\n    end\n   \
    \ return false\nend\n</cell>\n<text>\nThe function above checks if any two numbers\
    \ are closer to each other than the given threshold. Let's see how it works.\n\
    using Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6qarjj20.jl:23\nin expression starting at\
    \ /tmp/tmp6qarjj20.jl:23\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers_sorted = sort(numbers)\n    \n\
    \    index_of_closest = findfirst(x -> abs(x - numbers_sorted[1]) < threshold,\
    \ numbers_sorted)\n    \n    if index_of_closest == length(numbers_sorted)\n \
    \       return true\n    else\n        return false\n    end\nend\n</cell>\n<code\
    \ language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\
    \t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9,\
    \ 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8)\
    \ == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\
    \t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0) == true)\n\t@test(candidate([1.1,\
    \ 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpla_oxvy5.jl:20\nin expression starting at\
    \ /tmp/tmpla_oxvy5.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    i =\
    \ 0\n    while i < length(numbers)\n        if numbers[i] - numbers[i-1] > threshold\n\
    \            return true\n        else\n            i += 1\n        end\n    end\n\
    \    return false\nend\n</cell>\n<text>\nNow let's test our function with some\
    \ numbers:\nusing Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\t\
    @test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9,\
    \ 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8)\
    \ == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\
    \t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0) == true)\n\t@test(candidate([1.1,\
    \ 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_e5zg4s8.jl:22\nin expression starting at\
    \ /tmp/tmp_e5zg4s8.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    for n in numbers\n        if abs(n - threshold)\
    \ < threshold\n            return true\n        end\n    end\n    return false\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpyf9c0m8t.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpyf9c0m8t.jl:22\n  Expression: candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyf9c0m8t.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyf9c0m8t.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpyf9c0m8t.jl:25\n  Expression: candidate([1.0, 2.0, 5.9, 4.0,\
    \ 5.0], 0.8) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyf9c0m8t.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyf9c0m8t.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpyf9c0m8t.jl:26\n  Expression: candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0], 0.1) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyf9c0m8t.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyf9c0m8t.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    i =\
    \ 0\n    \n    while i < length(numbers)\n        \n        if numbers[i] - numbers[i-1]\
    \ > threshold\n            return true\n        end\n        \n        i = i +\
    \ 1\n    end\n    \n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = has_close_elements;\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == false)\n\
    \t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0)\
    \ == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpt25u_sgb.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmpt25u_sgb.jl:30\n  Test threw exception\n\
    \  Expression: candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true\n  BoundsError:\
    \ attempt to access 6-element Vector{Float64} at index [0]\n  Stacktrace:\n  \
    \ [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)\n     @ Main /tmp/tmpt25u_sgb.jl:16\n   [3] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpt25u_sgb.jl:30 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpt25u_sgb.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpt25u_sgb.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == false\n  BoundsError: attempt\
    \ to access 6-element Vector{Float64} at index [0]\n  Stacktrace:\n   [1] getindex\n\
    \     @ ./array.jl:861 [inlined]\n   [2] has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)\n     @ Main /tmp/tmpt25u_sgb.jl:16\n   [3] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpt25u_sgb.jl:31 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpt25u_sgb.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpt25u_sgb.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) == true\n  BoundsError: attempt to\
    \ access 5-element Vector{Float64} at index [0]\n  Stacktrace:\n   [1] getindex\n\
    \     @ ./array.jl:861 [inlined]\n   [2] has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)\n     @ Main /tmp/tmpt25u_sgb.jl:16\n   [3] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpt25u_sgb.jl:32 [inlined]\n\
    \   [5] macro expansion\n    "
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    i =\
    \ 0\n    \n    while i < length(numbers)\n        \n        j = i + 1\n      \
    \  \n        while j < length(numbers)\n            \n            if numbers[j]\
    \ - numbers[i] < threshold\n                return false\n            \n     \
    \       j += 1\n            \n        end\n        \n        i += 1\n    end\n\
    \    \n    return true\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n\
    @testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0, 2.0,\
    \ 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) ==\
    \ true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpilb_21yl.jl:32\nin expression starting at\
    \ /tmp/tmpilb_21yl.jl:32\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\nusing Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp38t00c8y.jl:8\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp38t00c8y.jl:1\n\
    in expression starting at /tmp/tmp38t00c8y.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    i =\
    \ 0\n    \n    while i < length(numbers)\n        if numbers[i] - numbers[i-1]\
    \ > threshold\n            return true\n        end\n        i = i + 1\n    end\n\
    \    return false\nend\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the number of elements in a vector that are less than a given threshold.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2bthuiq6.jl:22\nin expression starting at\
    \ /tmp/tmp2bthuiq6.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers_sorted = sort(numbers)\n    \n\
    \    index_of_first_element = findfirst(numbers_sorted .< threshold)\n    \n \
    \   if index_of_first_element == nothing\n        return false\n    end\n    \n\
    \    index_of_last_element = findlast(numbers_sorted .> threshold)\n    \n   \
    \ if index_of_last_element == nothing\n        return false\n    end\n    \n \
    \   if index_of_first_element > index_of_last_element\n        return true\n \
    \   else\n        return false\n    end\nend\n</cell>\n<text>\nExercise 4\nWrite\
    \ a function that checks if a vector contains any element that is closer to zero\
    \ than a given threshold.\nThe function should return true if the vector contains\
    \ any element that is closer to zero than a given threshold, and false otherwise.\n\
    The function should work for any type of vector, for example a vector of numbers\
    \ or a vector of strings.\nThe function should work for vectors of any length\
    \ (including zero).\nThe function should work for vectors of any type (including\
    \ strings).\nusing Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\
    \t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9,\
    \ 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8)\
    \ == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\
    \t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0) == true)\n\t@test(candidate([1.1,\
    \ 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6iu7pofg.jl:30\nin expression starting at\
    \ /tmp/tmp6iu7pofg.jl:30\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    idx\
    \ = 0\n    while idx < length(numbers)\n        if abs(numbers[idx] - numbers[idx\
    \ + 1]) < threshold\n            return true\n        else\n            idx +=\
    \ 1\n        end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = has_close_elements;\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.05)\
    \ == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0)\
    \ == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpqb3gfbt8.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmpqb3gfbt8.jl:27\n  Test threw exception\n\
    \  Expression: candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true\n  BoundsError:\
    \ attempt to access 6-element Vector{Float64} at index [0]\n  Stacktrace:\n  \
    \ [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)\n     @ Main /tmp/tmpqb3gfbt8.jl:14\n   [3] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpqb3gfbt8.jl:27 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpqb3gfbt8.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpqb3gfbt8.jl:28\n  Test threw exception\n  Expression:\
    \ candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == false\n  BoundsError: attempt\
    \ to access 6-element Vector{Float64} at index [0]\n  Stacktrace:\n   [1] getindex\n\
    \     @ ./array.jl:861 [inlined]\n   [2] has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)\n     @ Main /tmp/tmpqb3gfbt8.jl:14\n   [3] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpqb3gfbt8.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpqb3gfbt8.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpqb3gfbt8.jl:29\n  Test threw exception\n  Expression:\
    \ candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) == true\n  BoundsError: attempt to\
    \ access 5-element Vector{Float64} at index [0]\n  Stacktrace:\n   [1] getindex\n\
    \     @ ./array.jl:861 [inlined]\n   [2] has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)\n     @ Main /tmp/tmpqb3gfbt8.jl:14\n   [3] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpqb3gfbt8.jl:29 [inlined]\n\
    \   [5] macro expansion\n    "
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    threshold\
    \ = sort(threshold)\n    \n    if length(numbers) < length(threshold) \n     \
    \   return false\n    end\n    \n    i = 0\n    \n    while i < length(numbers)\n\
    \        if numbers[i] - threshold[i] < threshold[i+1]\n            return true\n\
    \        end\n        i += 1\n    end\n    \n    return false\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a function that checks if a vector has all elements\
    \ equal, given threshold.\n    >>> has_all_elements([1.0, 2.0, 3.0], 0.5)\n  \
    \  false\n    >>> has_all_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0], 0.3)\n    true\n\
    \    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\
    \t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9,\
    \ 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8)\
    \ == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\
    \t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0) == true)\n\t@test(candidate([1.1,\
    \ 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdghbz1v7.jl:29\nin expression starting at\
    \ /tmp/tmpdghbz1v7.jl:29\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers_sorted = sort(numbers)\n    \n\
    \    i = 0\n    \n    while i < length(numbers_sorted)\n        if numbers_sorted[i]\
    \ == numbers_sorted[i+1]\n            i += 1\n        else\n            if abs(numbers_sorted[i]\
    \ - numbers_sorted[i+1]) < threshold\n                return true\n          \
    \  end\n        end\n    end\n    \n    return false\nend\n</cell>\n<text>\nExercise\
    \ 2.2\nWrite a function that takes in a vector of numbers and a threshold and\
    \ returns a vector of booleans indicating whether each number in the vector is\
    \ closer to each other than the given threshold.\nusing Test\n\n@testset begin\n\
    \ncandidate = has_close_elements;\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.05)\
    \ == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0)\
    \ == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppgfq4l7v.jl:26\nin expression starting at\
    \ /tmp/tmppgfq4l7v.jl:26\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    i =\
    \ 2\n    while i < length(numbers)\n        if numbers[i] - numbers[i-1] > threshold\n\
    \            return true\n        end\n        i += 1\n    end\n    return false\n\
    end\n</cell>\n<text>\nExercise 4\nWrite a function that takes a vector of numbers\
    \ and a threshold and returns a vector of booleans indicating whether each number\
    \ in the vector is closer to its neighbors than the threshold.\nusing Test\n\n\
    @testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0, 2.0,\
    \ 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) ==\
    \ true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp20i6antw.jl:21\nin expression starting at\
    \ /tmp/tmp20i6antw.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    for n in numbers\n        if abs(n - threshold)\
    \ < threshold\n            return true\n        end\n    end\n    return false\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = has_close_elements;\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == false)\n\
    \t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0)\
    \ == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1bclp71q.jl:17\nin expression starting at\
    \ /tmp/tmp1bclp71q.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    i =\
    \ 0\n    \n    while i < length(numbers)\n        \n        if numbers[i] - numbers[i-1]\
    \ > threshold\n            return true\n        end\n        \n        i = i +\
    \ 1\n    end\n    \n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpsfcmcmug.jl:25\nin expression starting at\
    \ /tmp/tmpsfcmcmug.jl:25\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    i =\
    \ 0\n    \n    while i < length(numbers)\n        \n        j = i + 1\n      \
    \  \n        while j < length(numbers)\n            \n            if numbers[j]\
    \ - numbers[i] < threshold\n                return false\n            \n     \
    \       j += 1\n        end\n        \n        i += 1\n    end\n    \n    return\
    \ true\nend\n</cell>\n<text>\nExercise 3\nWrite a function that checks if a vector\
    \ has all elements of a given set. \nFor example the set [1,2,3] has all elements\
    \ of the vector [1,2,3,4,5,6,7,8,9,10].\nThe set [1,2,3] has all elements of the\
    \ vector [1,2,3,4,5,6,7,8,9,10,11].\nThe set [1,2,3] has all elements of the vector\
    \ [1,2,3,4,5,6,7,8,9,10,11,12].\nThe set [1,2,3] has all elements of the vector\
    \ [1,2,3,4,5,6,7,8,9,10,11,12,13].\nThe set [1,2,3] has all elements of the vector\
    \ [1,2,3,4,5,6,7,8,9,10,11,12,13,14].\nThe set [1,2,3] has all elements of the\
    \ vector [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15].\nThe set [1,2,3] has all elements\
    \ of the vector [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16].\nThe set [1,2,3] has\
    \ all elements of the vector [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17].\nThe\
    \ set [1,2,3] has all elements of the vector [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18].\n\
    The set [1,2,3] has all elements of the vector [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19].\n\
    The set [1,2,3] has all elements of the vector [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20].\n\
    The set [1,2,3] has all elements of the vector [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21].\n\
    The set [1,2,3] has all elements of the vector [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22].\n\
    The set [1,2,3] has all elements of the vector [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23].\n\
    The set [1,2,3] has all elements of the vector [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,\n\
    using Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvufovtcv.jl:31\nin expression starting at\
    \ /tmp/tmpvufovtcv.jl:31\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers_sorted = sort(numbers)\n    \n\
    \    index_of_closest = findfirst(x -> abs(x - threshold) < abs(numbers_sorted[end]\
    \ - threshold), numbers_sorted)\n    \n    return index_of_closest == nothing\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function that checks if a vector has\
    \ all elements equal to given value.\n    >>> has_all_elements([1.0, 2.0, 3.0],\
    \ 2.0)\n    true\n    >>> has_all_elements([1.0, 2.0, 3.0], 3.0)\n    false\n\
    \    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\
    \t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9,\
    \ 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8)\
    \ == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\
    \t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0) == true)\n\t@test(candidate([1.1,\
    \ 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp440x0th7.jl:16\nin expression starting at\
    \ /tmp/tmp440x0th7.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    for\
    \ n in numbers[1:end-1]\n        if abs(numbers[1] - n) < threshold\n        \
    \    return true\n        end\n    end\n    \n    return false\nend\n</cell>\n\
    <code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\
    \t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9,\
    \ 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8)\
    \ == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\
    \t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0) == true)\n\t@test(candidate([1.1,\
    \ 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpt4ebs6mm.jl:20\nin expression starting at\
    \ /tmp/tmpt4ebs6mm.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    i =\
    \ 0\n    \n    while i < length(numbers)\n        if numbers[i] - numbers[i-1]\
    \ > threshold\n            return true\n        end\n        i = i + 1\n    end\n\
    \    return false\nend\n</cell>\n<text>\nProblem 7\nImplement a function that\
    \ takes in a list of numbers and returns the sum of the numbers in the list.\n\
    \    >>> sum([1, 2, 3, 4])\n    10\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = has_close_elements;\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.05)\
    \ == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0)\
    \ == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnokojq81.jl:22\nin expression starting at\
    \ /tmp/tmpnokojq81.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers_sorted = sort(numbers)\n    \n\
    \    for n in numbers_sorted\n        if abs(n - numbers_sorted[1]) < threshold\n\
    \            return true\n        end\n    end\n    return false\nend\n</cell>\n\
    <code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\
    \t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9,\
    \ 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8)\
    \ == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\
    \t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0) == true)\n\t@test(candidate([1.1,\
    \ 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdccucg5i.jl:19\nin expression starting at\
    \ /tmp/tmpdccucg5i.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    for\
    \ n in numbers\n        if abs(n - numbers[end-1]) < threshold\n            return\
    \ true\n        end\n    end\n    \n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpk01vnibq.jl:20\nin expression starting at\
    \ /tmp/tmpk01vnibq.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    i =\
    \ 0\n    j = length(numbers) - 1\n    \n    while i < j\n        if numbers[i]\
    \ == numbers[j] \n            i += 1\n            j -- \n        elseif abs(numbers[i]\
    \ - numbers[j]) < threshold\n            i += 1\n        else\n            j --\
    \ \n        end\n    end\n    \n    return i == j\nend\n</cell>\n<text>\nExercise\
    \ 7\nWrite a function that checks if a vector has all elements equal, given threshold.\n\
    \    >>> has_all_elements([1.0, 2.0, 3.0], 0.5)\n    false\n    >>> has_all_elements([1.0,\
    \ 2.8, 3.0, 4.0, 5.0, 2.0], 0.3)\n    true\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0, 2.0, 3.9,\
    \ 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2],\
    \ 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) == true)\n\
    \t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: invalid operator \"--\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp8stgk7r9.jl:18\nin expression starting at /tmp/tmp8stgk7r9.jl:18\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    i =\
    \ 2\n    while i <= length(numbers)\n        if numbers[i] - numbers[i-1] > threshold\n\
    \            return true\n        end\n        i += 1\n    end\n    return false\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = has_close_elements;\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == false)\n\
    \t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0)\
    \ == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2gs8kmhu.jl:21\nin expression starting at\
    \ /tmp/tmp2gs8kmhu.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    i =\
    \ 2\n    while i < length(numbers)\n        if numbers[i] - numbers[i - 1] > threshold\n\
    \            return true\n        end\n        i = i + 1\n    end\n    return\
    \ false\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\
    \ncandidate = has_close_elements;\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.05)\
    \ == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0)\
    \ == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0zhf_eq2.jl:21\nin expression starting at\
    \ /tmp/tmp0zhf_eq2.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    i =\
    \ 0\n    while i < length(numbers)\n        if numbers[i] - numbers[i-1] > threshold\n\
    \            return true\n        end\n        i = i + 1\n    end\n    return\
    \ false\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\
    \ncandidate = has_close_elements;\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.05)\
    \ == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0)\
    \ == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppz9gmfjt.jl:21\nin expression starting at\
    \ /tmp/tmppz9gmfjt.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    i =\
    \ length(numbers)\n    \n    while i > 1\n        if numbers[i-1] - numbers[i]\
    \ > threshold\n            return true\n        end\n        i = i - 1\n    end\n\
    \    return false\nend\n</cell>\n<text>\nThe function has_close_elements takes\
    \ two arguments: numbers and threshold. numbers is a vector of numbers and threshold\
    \ is a number that defines a threshold for two numbers to be considered close\
    \ to each other. has_close_elements returns true if the given vector has any two\
    \ numbers that are closer to each other than the given threshold, otherwise it\
    \ returns false. For example, has_close_elements([1.0, 2.0, 3.0], 0.5) returns\
    \ false because there is no number in the given vector that is closer to 0.5 than\
    \ any other number. has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0], 0.3) returns\
    \ true because there is a number in the given vector that is closer to 0.3 than\
    \ any other number.\nusing Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\
    \t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9,\
    \ 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8)\
    \ == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\
    \t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0) == true)\n\t@test(candidate([1.1,\
    \ 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpm_3el9ck.jl:22\nin expression starting at\
    \ /tmp/tmpm_3el9ck.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    distances = zeros(length(numbers))\n \
    \   for n in numbers\n        distances[n] = abs(n - threshold)\n    end\n   \
    \ \n    return any(distances <= 1)\nend\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function that takes a vector of numbers and a threshold and returns a vector\
    \ of booleans indicating which numbers are closer to each other than the threshold.\n\
    using Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptfduszm2.jl:17\nin expression starting at\
    \ /tmp/tmptfduszm2.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    i =\
    \ 2\n    while i < length(numbers)\n        if abs(numbers[i] - numbers[i-1])\
    \ < threshold\n            return true\n        end\n        i += 1\n    end\n\
    \    return false\nend\n</cell>\n<text>\nExercise 3: Implement the function has_close_elements!()\
    \ which modifies the given vector in-place to return true if the given vector\
    \ has any two numbers closer to each other than the given threshold.\nusing Test\n\
    \n@testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0, 2.0,\
    \ 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) ==\
    \ true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7ie7or8a.jl:21\nin expression starting at\
    \ /tmp/tmp7ie7or8a.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    i =\
    \ 0\n    while i < length(numbers)\n        if numbers[i] - numbers[i-1] > threshold\n\
    \            return true\n        end\n        i += 1\n    end\n    return false\n\
    end\n</cell>\n<code language=julia-1.3>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = has_close_elements;\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == false)\n\
    \t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0)\
    \ == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpi_0rune7.jl:21\nin expression starting at\
    \ /tmp/tmpi_0rune7.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    for\
    \ n in numbers\n        if abs(n - numbers[1]) < threshold\n            return\
    \ true\n        end\n    end\n    \n    return false\nend\n</cell>\n<text>\nProblem\
    \ 3\nWrite a function that takes in a vector of numbers and a threshold and returns\
    \ the number of numbers in the vector that are closer to each other than the threshold.\n\
    using Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpg3712zvl.jl:20\nin expression starting at\
    \ /tmp/tmpg3712zvl.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\nusing Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp38t00c8y.jl:8\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp38t00c8y.jl:1\n\
    in expression starting at /tmp/tmp38t00c8y.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\nusing Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp38t00c8y.jl:8\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp38t00c8y.jl:1\n\
    in expression starting at /tmp/tmp38t00c8y.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    i =\
    \ length(numbers)\n    \n    while i > 0\n        if numbers[i-1] == numbers[i]\n\
    \            i -= 1\n        else\n            return true\n        end\n    end\n\
    \    \n    return false\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\
    \n@testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0, 2.0,\
    \ 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) ==\
    \ true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwsblus54.jl:24\nin expression starting at\
    \ /tmp/tmpwsblus54.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    for\
    \ n in numbers\n        if abs(n - numbers[end-1]) < threshold\n            return\
    \ true\n        end\n    end\n    return false\nend\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that checks if a vector contains any element that is closer\
    \ to zero than a given threshold.\nusing Test\n\n@testset begin\n\ncandidate =\
    \ has_close_elements;\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == false)\n\
    \t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0)\
    \ == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp00v_qbo9.jl:19\nin expression starting at\
    \ /tmp/tmp00v_qbo9.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers_sorted = sort(numbers)\n    \n\
    \    for index in 1:length(numbers_sorted)\n        if numbers_sorted[index] -\
    \ numbers_sorted[index-1] < threshold\n            return true\n        end\n\
    \    end\n    return false\nend\n</cell>\n<text>\nNow let's test our function\
    \ with some examples:\nusing Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\
    \t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9,\
    \ 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8)\
    \ == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\
    \t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0) == true)\n\t@test(candidate([1.1,\
    \ 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplr20zrlr.jl:19\nin expression starting at\
    \ /tmp/tmplr20zrlr.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers_sorted = sort(numbers)\n    \n\
    \    index_of_closest = findfirst(x -> abs(x - threshold) < abs(numbers_sorted[end]\
    \ - threshold), numbers_sorted)\n    \n    if index_of_closest == nothing\n  \
    \      return false\n    else\n        return true\n    end\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes in a vector of numbers and a threshold\
    \ and returns a vector of booleans indicating whether each element in the vector\
    \ is greater than the threshold.\nHint: use the has_close_elements function you\
    \ created earlier.\nusing Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\
    \t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9,\
    \ 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8)\
    \ == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\
    \t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0) == true)\n\t@test(candidate([1.1,\
    \ 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmph7aq_ngz.jl:20\nin expression starting at\
    \ /tmp/tmph7aq_ngz.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    i =\
    \ 0\n    while i < length(numbers)\n        if numbers[i] - numbers[i-1] < threshold\n\
    \            return true\n        end\n        i = i + 1\n    end\n    return\
    \ false\nend\nusing Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\
    \t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9,\
    \ 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8)\
    \ == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\
    \t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0) == true)\n\t@test(candidate([1.1,\
    \ 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpy_ad79y_.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmpy_ad79y_.jl:26\n  Test threw exception\n\
    \  Expression: candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true\n  BoundsError:\
    \ attempt to access 6-element Vector{Float64} at index [0]\n  Stacktrace:\n  \
    \ [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)\n     @ Main /tmp/tmpy_ad79y_.jl:14\n   [3] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpy_ad79y_.jl:26 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpy_ad79y_.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpy_ad79y_.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == false\n  BoundsError: attempt\
    \ to access 6-element Vector{Float64} at index [0]\n  Stacktrace:\n   [1] getindex\n\
    \     @ ./array.jl:861 [inlined]\n   [2] has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)\n     @ Main /tmp/tmpy_ad79y_.jl:14\n   [3] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpy_ad79y_.jl:27 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpy_ad79y_.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpy_ad79y_.jl:28\n  Test threw exception\n  Expression:\
    \ candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) == true\n  BoundsError: attempt to\
    \ access 5-element Vector{Float64} at index [0]\n  Stacktrace:\n   [1] getindex\n\
    \     @ ./array.jl:861 [inlined]\n   [2] has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)\n     @ Main /tmp/tmpy_ad79y_.jl:14\n   [3] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpy_ad79y_.jl:28 [inlined]\n\
    \   [5] macro expansion\n    "
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    for\
    \ n in numbers\n        if abs(n - numbers[1]) < threshold\n            return\
    \ true\n        end\n    end\n    return false\nend\n</cell>\n<text>\nLet's test\
    \ the function by comparing it to our previous results:\nusing Test\n\n@testset\
    \ begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0, 2.0, 3.9,\
    \ 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2],\
    \ 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) == true)\n\
    \t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnb549tsq.jl:19\nin expression starting at\
    \ /tmp/tmpnb549tsq.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    i =\
    \ 0\n    \n    while i < length(numbers)\n        \n        if numbers[i] - numbers[i-1]\
    \ > threshold\n            return true\n        end\n        \n        i = i +\
    \ 1\n    end\n    \n    return false\nend\n</cell>\n<text>\nExercise 1\nWrite\
    \ a function that takes in a list of numbers and a threshold and returns a new\
    \ list containing only the numbers that have a difference greater than the threshold.\n\
    using Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjqbz5uyz.jl:25\nin expression starting at\
    \ /tmp/tmpjqbz5uyz.jl:25\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    i =\
    \ length(numbers)\n    \n    while i >= 2\n        if numbers[i] - numbers[i-1]\
    \ < threshold\n            return true\n        end\n        i -= 1\n    end\n\
    \    return false\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ a vector of numbers and returns the sum of the squares of the numbers.\nWrite\
    \ a function that takes a vector of numbers and returns the sum of the squares\
    \ of the numbers, ignoring any numbers that are less than 0.\nWrite a function\
    \ that takes a vector of numbers and returns the sum of the squares of the numbers,\
    \ ignoring any numbers that are less than 0 and that are greater than or equal\
    \ to 0.\nWrite a function that takes a vector of numbers and returns the sum of\
    \ the squares of the numbers, ignoring any numbers that are less than 0 and that\
    \ are greater than or equal to 0 and that are equal to 0.\nWrite a function that\
    \ takes a vector of numbers and returns the sum of the squares of the numbers,\
    \ ignoring any numbers that are less than 0 and that are greater than or equal\
    \ to 0 and that are equal to 0 and that are less than 0.\nWrite a function that\
    \ takes a vector of numbers and returns the sum of the squares of the numbers,\
    \ ignoring any numbers that are less than 0 and that are greater than or equal\
    \ to 0 and that are equal to 0 and that are less than 0 and that are greater than\
    \ or equal to 0.\nWrite a function that takes a vector of numbers and returns\
    \ the sum of the squares of the numbers, ignoring any numbers that are less than\
    \ 0 and that are greater than or equal to 0 and that are equal to 0 and that are\
    \ less than 0 and that are greater than or equal to 0 and that are equal to 0.\n\
    Write a function that takes a vector of numbers and returns the sum of the squares\
    \ of the numbers, ignoring any numbers that are less than 0 and that are greater\
    \ than or equal to 0 and that are equal to 0 and that are less than 0 and that\
    \ are greater than or equal to 0 and that are equal to 0 and that are less than\
    \ 0 and that are greater than or equal to 0.\nWrite a function that takes a vector\
    \ of numbers and returns the sum of the squares of the numbers, ignoring any numbers\
    \ that are less than 0 and that are greater than or equal to 0 and that are equal\
    \ to 0 and that are less than 0 and that are greater than or equal to 0 and that\
    \ are equal to 0 and that are less than 0 and that are greater than or equal to\
    \ 0 and that are equal to 0.\nWrite a function that takes a vector of numbers\
    \ and returns the sum of the squares of the numbers, ignoring any numbers that\
    \ are less than 0 and that are greater than or equal to 0 and that are equal to\
    \ 0 and that are less than 0 and that are greater than or equal to 0 and that\
    \ are equal to 0 and that are less than 0 and that are greater than or equal to\
    \ 0 and that are equal to 0 and that are less than 0 and that are greater than\
    \ or equal to 0.\nWrite a function that takes a vector of numbers and returns\
    \ the sum of the squares of the numbers, ignoring any numbers that are less than\
    \ 0 and that are greater than or equal to 0 and that are equal to 0 and that are\
    \ less than 0 and that are greater than or equal to 0 and that are equal to 0\
    \ and that are less than 0 and that are greater than or equal to 0 and that are\
    \ equal to 0 and that are less than 0 and that are greater than or equal to 0.\n\
    Write a function that takes a vector of numbers and returns the sum of the squares\
    \ of the numbers, ignoring any numbers that are less than 0 and that are greater\
    \ than or equal to 0 and that are \nusing Test\n\n@testset begin\n\ncandidate\
    \ = has_close_elements;\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == false)\n\
    \t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0)\
    \ == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxyzza8ml.jl:22\nin expression starting at\
    \ /tmp/tmpxyzza8ml.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    for\
    \ n in numbers[2:end]\n        if abs(numbers[1] - n) < threshold\n          \
    \  return true\n        end\n    end\n    \n    return false\nend\n</cell>\n<text>\n\
    Now let's test our function with some test cases:\nusing Test\n\n@testset begin\n\
    \ncandidate = has_close_elements;\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.05)\
    \ == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0)\
    \ == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpiezvyylf.jl:20\nin expression starting at\
    \ /tmp/tmpiezvyylf.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    i =\
    \ 0\n    \n    while i < length(numbers)\n        \n        j = i + 1\n      \
    \  \n        while j < length(numbers)\n            \n            if numbers[j]\
    \ - numbers[i] < threshold\n                return false\n            \n     \
    \       j += 1\n        end\n        \n        i += 1\n    end\n    \n    return\
    \ true\nend\n</cell>\n<text>\nProblem 3\nWrite a function that returns true if\
    \ the given vector has all elements equal, false otherwise.\n>>> all_elements_equal([1.0,\
    \ 2.0, 3.0])\ntrue\n>>> all_elements_equal([1.0, 2.0, 3.0, 4.0])\nfalse\n>>> all_elements_equal([1.0,\
    \ 2.0, 3.0, 4.0, 5.0])\ntrue\n>>> all_elements_equal([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0])\nfalse\n>>> all_elements_equal([1.0, 2.8, 3.0, 4.0, 5.0, 2.1, 2.2])\n\
    false\n>>> all_elements_equal([1.0, 2.8, 3.0, 4.0, 5.0, 2.1, 2.2, 2.3])\nfalse\n\
    >>> all_elements_equal([1.0, 2.8, 3.0, 4.0, 5.0, 2.1, 2.2, 2.3, 2.4])\nfalse\n\
    >>> all_elements_equal([1.0, 2.8, 3.0, 4.0, 5.0, 2.1, 2.2, 2.3, 2.4, 2.5])\nfalse\n\
    >>> all_elements_equal([1.0, 2.8, 3.0, 4.0, 5.0, 2.1, 2.2, 2.3, 2.4, 2.5, 2.6])\n\
    false\n>>> all_elements_equal([1.0, 2.8, 3.0, 4.0, 5.0, 2.1, 2.2, 2.3, 2.4, 2.5,\
    \ 2.6, 2.7])\nfalse\n>>> all_elements_equal([1.0, 2.8, 3.0, 4.0, 5.0, 2.1, 2.2,\
    \ 2.3, 2.4, 2.5, 2.6, 2.7, 2.8])\nfalse\n>>> all_elements_equal([1.0, 2.8, 3.0,\
    \ 4.0, 5.0, 2.1, 2.2, 2.3, 2.4, 2.5, 2.6, 2.7, 2.8, 2.9])\nfalse\n>>> all_elements_equal([1.0,\
    \ 2.8, 3.0, 4.0, 5.0, 2.1, 2.2, 2.3, 2.4, 2.5, 2.6, 2.7, 2.8, 2.9, 3.0])\nfalse\n\
    >>> all_elements_equal([1.0, 2.8, 3.0, 4.0, 5.0, 2.1, 2.2, 2.3, 2.4, 2.5, 2.6,\
    \ 2.7, 2.8, 2.9, 3.0, 3.1])\nfalse\n>>> all_elements_equal([1.0, 2.8, 3.0, 4.0,\
    \ 5.0, 2.1, 2.2, 2.3, 2.4, 2.5, 2.6, 2.7, 2.8, 2.9, 3.0, 3.1, 3.2])\nfalse\n>>>\
    \ all_elements_equal([1.0, 2.8, 3.0, 4.0, 5.0, 2.1, 2.2, 2.3, 2.4, 2.5, 2.6, \n\
    using Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpuxvuktn9.jl:31\nin expression starting at\
    \ /tmp/tmpuxvuktn9.jl:31\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    if\
    \ length(numbers) < 2\n        return false\n    end\n    \n    idx1 = 1\n   \
    \ idx2 = length(numbers)\n    \n    while idx1 < idx2\n        if numbers[idx1]\
    \ == numbers[idx2]\n            idx1 += 1\n            idx2 -= 1\n        elseif\
    \ numbers[idx1] > numbers[idx2]\n            idx2 -= 1\n        else\n       \
    \     idx1 += 1\n            idx2 -= 1\n        end\n    end\n    \n    return\
    \ numbers[idx1] < threshold\nend\n</cell>\n<text>\nThe function has_close_elements\
    \ checks if two numbers are closer to each other than the given threshold. Let's\
    \ test it with the function has_close_elements:\nusing Test\n\n@testset begin\n\
    \ncandidate = has_close_elements;\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.05)\
    \ == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0)\
    \ == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpenbcmjzg.jl:33\nin expression starting at\
    \ /tmp/tmpenbcmjzg.jl:33\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    i =\
    \ 0\n    j = length(numbers)\n    \n    while i < j\n        if numbers[i] ==\
    \ numbers[j] \n            i += 1\n            j += 1\n        elseif numbers[i]\
    \ - threshold < numbers[j] \n            i += 1\n        elseif numbers[i] - threshold\
    \ > numbers[j] \n            j += 1\n        else\n            return true\n \
    \       end\n    end\n    \n    return false\nend\n</cell>\n<text>\nExercise 2\n\
    Write a function that takes a vector of numbers and a threshold and returns the\
    \ number of numbers in the vector that are closer to each other than the threshold.\n\
    using Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpeblf6mpi.jl:30\nin expression starting at\
    \ /tmp/tmpeblf6mpi.jl:30\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    i =\
    \ 0\n    \n    while i < length(numbers)\n        \n        if numbers[i] > threshold\
    \ \n            \n            if numbers[i + 1] > threshold \n               \
    \ \n                return true\n            \n            end\n            \n\
    \        elseif numbers[i] < threshold \n            \n            if numbers[i\
    \ - 1] < threshold \n                \n                return true\n         \
    \   \n            end\n            \n        end\n        \n        i = i + 1\n\
    \        \n    end\n    \n    return false\nend\n</cell>\n<code language=julia-1.4>\n\
    using Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpblzaekkt.jl:40\nin expression starting at\
    \ /tmp/tmpblzaekkt.jl:40\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    i =\
    \ length(numbers)\n    \n    while i > 1\n        \n        if numbers[i-1] -\
    \ numbers[i] > threshold\n            return true\n        end\n        \n   \
    \     i = i - 1\n    end\n    \n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpiglx2qhh.jl:25\nin expression starting at\
    \ /tmp/tmpiglx2qhh.jl:25\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\nusing Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp38t00c8y.jl:8\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp38t00c8y.jl:1\n\
    in expression starting at /tmp/tmp38t00c8y.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    i =\
    \ 0\n    \n    while i < length(numbers)\n        \n        if numbers[i] - numbers[i-1]\
    \ > threshold\n            return true\n        end\n        \n        i = i +\
    \ 1\n    end\n    \n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpsfcmcmug.jl:25\nin expression starting at\
    \ /tmp/tmpsfcmcmug.jl:25\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    for n in numbers\n        if abs(n - threshold)\
    \ < threshold\n            return true\n        end\n    end\n    return false\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = has_close_elements;\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == false)\n\
    \t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0)\
    \ == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1bclp71q.jl:17\nin expression starting at\
    \ /tmp/tmp1bclp71q.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers_sorted = sort(numbers)\n    \n\
    \    for index in 1:length(numbers_sorted)\n        if numbers_sorted[index] -\
    \ numbers_sorted[index-1] > threshold\n            return true\n        end\n\
    \    end\n    return false\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\
    \n@testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0, 2.0,\
    \ 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) ==\
    \ true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpk_3km18j.jl:19\nin expression starting at\
    \ /tmp/tmpk_3km18j.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    i =\
    \ length(numbers)\n    while i > 1\n        if numbers[i-1] - numbers[i] > threshold\n\
    \            return true\n        end\n        i -= 1\n    end\n    return false\n\
    end\n</cell>\n<text>\nhas_close_elements\nusing Test\n\n@testset begin\n\ncandidate\
    \ = has_close_elements;\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == false)\n\
    \t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0)\
    \ == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpk7mtv88p.jl:21\nin expression starting at\
    \ /tmp/tmpk7mtv88p.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    i =\
    \ 0\n    \n    while i < length(numbers)\n        \n        j = i + 1\n      \
    \  \n        while j < length(numbers)\n            \n            if abs(numbers[i]\
    \ - numbers[j]) < threshold\n                return true\n            \n     \
    \       j += 1\n        end\n        \n        i += 1\n    end\n    \n    return\
    \ false\nend\n</cell>\n<text>\nProblem 4\nWrite a function that takes in a vector\
    \ of numbers and a threshold and returns the number of elements in the vector\
    \ that are greater than or equal to the threshold.\nusing Test\n\n@testset begin\n\
    \ncandidate = has_close_elements;\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.05)\
    \ == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0)\
    \ == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpa_9fr1gu.jl:31\nin expression starting at\
    \ /tmp/tmpa_9fr1gu.jl:31\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    i =\
    \ 0\n    j = length(numbers)\n    \n    while i < j\n        if numbers[i] ==\
    \ numbers[j] \n            i += 1\n            j += 1\n        elseif numbers[i]\
    \ - numbers[j] < threshold\n            i += 1\n        else\n            j +=\
    \ 1\n        end\n    end\n    \n    return i == j\nend\n</cell>\n<text>\nProblem\
    \ 4\nImplement the function find_closest_element which takes as input a vector\
    \ of numbers and a threshold and returns the closest element in the vector to\
    \ the given threshold.\nusing Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\
    \t@test(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9,\
    \ 4.0, 5.0], 0.95) == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8)\
    \ == false)\n\t@test(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\
    \t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0) == true)\n\t@test(candidate([1.1,\
    \ 2.2, 3.1, 4.1, 5.1], 0.5) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp34q3j4sw.jl:28\nin expression starting at\
    \ /tmp/tmp34q3j4sw.jl:28\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Check if in given vector of numbers, are any two numbers closer\
    \ to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n    false\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3)\n    true\n    \"\"\"\nfunction has_close_elements(numbers::Vector{Float64},\
    \ threshold::Float64)::Bool \n    \n    numbers = sort(numbers)\n    \n    i =\
    \ length(numbers)\n    \n    while i > 1\n        \n        if numbers[i-1] -\
    \ numbers[i] > threshold\n            return true\n        end\n        \n   \
    \     i -= 1\n    end\n    \n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = has_close_elements;\n\t@test(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true)\n\t@test(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2], 0.05) == false)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95)\
    \ == true)\n\t@test(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1,\
    \ 5.1], 1.0) == true)\n\t@test(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphu44cs_2.jl:25\nin expression starting at\
    \ /tmp/tmphu44cs_2.jl:25\n"
  stdout: ''

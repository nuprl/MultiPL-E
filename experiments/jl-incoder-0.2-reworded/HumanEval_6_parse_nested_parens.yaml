name: HumanEval_6_parse_nested_parens
language: jl
prompt: "\"\"\" Input to this function is a string represented multiple groups for\
  \ nested parentheses separated by spaces.\n    For each of the group, output the\
  \ deepest level of nesting of parentheses.\n    E.g. (()()) has maximum two levels\
  \ of nesting while ((())) has three.\n\n    >>> parse_nested_parens(\"(()()) ((()))\
  \ () ((())()())\")\n    [2, 3, 1, 3]\n    \"\"\"\nfunction parse_nested_parens(paren_string::String)::Vector{Int64}\
  \ \n"
tests: "using Test\n\n@testset begin\n\ncandidate = parse_nested_parens;\n\t@test(candidate(\"\
  (()()) ((())) () ((())()())\") == [2, 3, 1, 3])\n\t@test(candidate(\"() (()) ((()))\
  \ (((())))\") == [1, 2, 3, 4])\n\t@test(candidate(\"(()(())((())))\") == [4])\n\
  end\n"
completions: ["    paren_string = paren_string.strip\n    paren_string = paren_string.strip(\"\
    ()\")\n    paren_string = paren_string.strip(\"[]\")\n    paren_string = paren_string.strip(\"\
    {}\")\n    paren_string = paren_string.strip(\"()[]{}\")\n    paren_string = paren_string.strip(\"\
    (){}[]\")\n    paren_string = paren_string.strip(\"{}[]()\")\n    paren_string\
    \ = paren_string.strip(\"[]{}()\")\n    paren_string = paren_string.strip(\"{}()[]\"\
    )\n    paren_string = paren_string.strip(\"[][]()\")\n    paren_string = paren_string.strip(\"\
    ()[][]\")\n    paren_string = paren_string.strip(\"{}[][]\")\n    paren_string\
    \ = paren_string.strip(\"[][]{}\")\n    paren_string = paren_string.strip(\"(){}{}[]\"\
    )\n    paren_string = paren_string.strip(\"{}{}[]()\")\n    paren_string = paren_string.strip(\"\
    []{}()[]\")\n    paren_string = paren_string.strip(\"{}[](){}\")\n    paren_string\
    \ = paren_string.strip(\"[][](){}\")\n    paren_string = paren_string.strip(\"\
    ()[]{}[]\")\n    paren_string = paren_string.strip(\"{}[]{}[]\")\n    paren_string\
    \ = paren_string.strip(\"[][]{}[]\")\n    paren_string = paren_string.strip(\"\
    (){}[][]\")\n    paren_string = paren_string.strip(\"{}[][]{}\")\n    paren_string\
    \ = paren_string.strip(\"[][][]{}\")\n    paren_string = paren_string.strip(\"\
    (){}{}[][]\")\n    paren_string = paren_string.strip(\"{}{}[][]{}\")\n    paren_string\
    \ = paren_string.strip(\"[]{}[][]{}\")\n    paren_string = paren_string.strip(\"\
    ()[][][][]\")\n    paren_string = paren_string.strip(\"{}[][][]{}\")\n    paren_string\
    \ = paren_string.strip(\"[][][][]{}\")\n    paren_string = paren_string.strip(\"\
    (){}[][][]\")\n    paren_string = paren_string.strip(\"{}[][][]{}\")\n    paren_string\
    \ = paren_string.strip(\"[][][][]{}\")\n    paren_string = paren_string.strip(\"\
    (){}{}[][][]\")\n    paren_string = paren_string.strip(\"{}{}[][][]{}", "    paren_string\
    \ = paren_string.strip\n    paren_string = paren_string.strip(\"()\")\n    paren_string\
    \ = paren_string.strip(\"[]\")\n    paren_string = paren_string.strip(\"{}\")\n\
    \    paren_string = paren_string.strip(\"{}[]\")\n    paren_string = paren_string.strip(\"\
    {}[]()\")\n    paren_string = paren_string.strip(\"{}[]()()\")\n    paren_string\
    \ = paren_string.strip(\"{}[]()()()\")\n    paren_string = paren_string.strip(\"\
    {}[]()()()()\")\n    paren_string = paren_string.strip(\"{}[]()()()()()\")\n \
    \   paren_string = paren_string.strip(\"{}[]()()()()()()\")\n    paren_string\
    \ = paren_string.strip(\"{}[]()()()()()()()\")\n    paren_string = paren_string.strip(\"\
    {}[]()()()()()()()()\")\n    paren_string = paren_string.strip(\"{}[]()()()()()()()()()\"\
    )\n    paren_string = paren_string.strip(\"{}[]()()()()()()()()()()\")\n    paren_string\
    \ = paren_string.strip(\"{}[]()()()()()()()()()()()\")\n    paren_string = paren_string.strip(\"\
    {}[]()()()()()()()()()()()()\")\n    paren_string = paren_string.strip(\"{}[]()()()()()()()()()()()()\"\
    )\n    paren_string = paren_string.strip(\"{}[]()()()()()()()()()()()()()\")\n\
    \    paren_string = paren_string.strip(\"{}[]()()()()()()()()()()()()()()\")\n\
    \    paren_string = paren_string.strip(\"{}[]()()()()()()()()()()()()()()()\"\
    )\n    paren_string = paren_string.strip(\"{}[]()()()()()()()()()()()()()()()\"\
    )\n    paren_string = paren_string.strip(\"{}[]()()()()()()()()()()()()()()()\"\
    )\n    paren_string = paren_string.strip(\"{}[]()()()()()()()()()()()()()()()()\"\
    )\n    paren_string = paren_string.strip(\"{}[]()()()()()()()()()()()()()()()()\"\
    )\n", "    paren_string = paren_string.strip\n    paren_stack = Vector{Int64}()\n\
    \    paren_stack = paren_stack + paren_string.count(\"(\")\n    paren_stack =\
    \ paren_stack + paren_string.count(\")\")\n    paren_stack = paren_stack + paren_string.count(\"\
    )\")\n    paren_stack = paren_stack + paren_string.count(\")\")\n    paren_stack\
    \ = paren_stack + paren_string.count(\")\")\n    paren_stack = paren_stack + paren_string.count(\"\
    )\")\n    paren_stack = paren_stack + paren_string.count(\")\")\n    paren_stack\
    \ = paren_stack + paren_string.count(\")\")\n    paren_stack = paren_stack + paren_string.count(\"\
    )\")\n    paren_stack = paren_stack + paren_string.count(\")\")\n    paren_stack\
    \ = paren_stack + paren_string.count(\")\")\n    paren_stack = paren_stack + paren_string.count(\"\
    )\")\n    paren_stack = paren_stack + paren_string.count(\")\")\n    paren_stack\
    \ = paren_stack + paren_string.count(\")\")\n    paren_stack = paren_stack + paren_string.count(\"\
    )\")\n    paren_stack = paren_stack + paren_string.count(\")\")\n    paren_stack\
    \ = paren_stack + paren_string.count(\")\")\n    paren_stack = paren_stack + paren_string.count(\"\
    )\")\n    paren_stack = paren_stack + paren_string.count(\")\")\n    paren_stack\
    \ = paren_stack + paren_string.count(\")\")\n    paren_stack = paren_stack + paren_string.count(\"\
    )\")\n    paren_stack = paren_stack + paren_string.count(\")\")\n    paren_stack\
    \ = paren_stack + paren_string.count(\")\")\n    paren_stack = paren_stack + paren_string.count(\"\
    )\")\n    paren_stack = paren_stack + paren_string.count(\")\")\n    paren_stack\
    \ = paren_stack + paren_string.count(\")\")\n    paren_stack = paren_stack + paren_string.count(\"\
    )\")\n    paren_stack = paren_stack + paren_string.count(\")\")\n    paren_stack\
    \ = paren_stack + paren_string.count(\")\")\n    paren_stack = paren_stack + paren_string.count(\"\
    )\")\n    paren_stack = paren_stack + paren", "    paren_string = paren_string.strip\n\
    \    paren_string = paren_string.strip(\"()\")\n    paren_string = paren_string.strip(\"\
    []\")\n    paren_string = paren_string.strip(\"{}\")\n    paren_string = paren_string.strip(\"\
    {}[]\")\n    paren_string = paren_string.strip(\"{}[]()\")\n    paren_string =\
    \ paren_string.strip(\"{}[]()()\")\n    paren_string = paren_string.strip(\"{}[]()()()\"\
    )\n    paren_string = paren_string.strip(\"{}[]()()()()\")\n    paren_string =\
    \ paren_string.strip(\"{}[]()()()()()\")\n    paren_string = paren_string.strip(\"\
    {}[]()()()()()()\")\n    paren_string = paren_string.strip(\"{}[]()()()()()()()\"\
    )\n    paren_string = paren_string.strip(\"{}[]()()()()()()()()\")\n    paren_string\
    \ = paren_string.strip(\"{}[]()()()()()()()()\")\n    paren_string = paren_string.strip(\"\
    {}[]()()()()()()()()()\")\n    paren_string = paren_string.strip(\"{}[]()()()()()()()()()()\"\
    )\n    paren_string = paren_string.strip(\"{}[]()()()()()()()()()()\")\n    paren_string\
    \ = paren_string.strip(\"{}[]()()()()()()()()()()\")\n    paren_string = paren_string.strip(\"\
    {}[]()()()()()()()()()()\")\n    paren_string = paren_string.strip(\"{}[]()()()()()()()()()()()\"\
    )\n    paren_string = paren_string.strip(\"{}[]()()()()()()()()()()()\")\n   \
    \ paren_string = paren_string.strip(\"{}[]()()()()()()()()()()()\")\n    paren_string\
    \ = paren_string.strip(\"{}[]()()()()()()()()()()()\")\n    paren_string = paren_string.strip(\"\
    {}[]()()()()()()()()()()()\")\n    paren_string = paren_string.strip(\"{}[]()()()()()()()()()()()\"\
    )\n    paren_string = paren_string.strip(\"{}[]()()()()()()()()()()()()\")\n \
    \   paren_string = paren_string.strip(\"{}", "    paren_stack = Vector{Int64}()\n\
    \    paren_stack = paren_stack + paren_string.count(\"(\")\n    paren_stack =\
    \ paren_stack + paren_string.count(\")\")\n    paren_stack = paren_stack + paren_string.count(\"\
    )\")\n    paren_stack = paren_stack + paren_string.count(\")\")\n    paren_stack\
    \ = paren_stack + paren_string.count(\")\")\n    paren_stack = paren_stack + paren_string.count(\"\
    )\")\n    paren_stack = paren_stack + paren_string.count(\")\")\n    paren_stack\
    \ = paren_stack + paren_string.count(\")\")\n    paren_stack = paren_stack + paren_string.count(\"\
    )\")\n    paren_stack = paren_stack + paren_string.count(\")\")\n    paren_stack\
    \ = paren_stack + paren_string.count(\")\")\n    paren_stack = paren_stack + paren_string.count(\"\
    )\")\n    paren_stack = paren_stack + paren_string.count(\")\")\n    paren_stack\
    \ = paren_stack + paren_string.count(\")\")\n    paren_stack = paren_stack + paren_string.count(\"\
    )\")\n    paren_stack = paren_stack + paren_string.count(\")\")\n    paren_stack\
    \ = paren_stack + paren_string.count(\")\")\n    paren_stack = paren_stack + paren_string.count(\"\
    )\")\n    paren_stack = paren_stack + paren_string.count(\")\")\n    paren_stack\
    \ = paren_stack + paren_string.count(\")\")\n    paren_stack = paren_stack + paren_string.count(\"\
    )\")\n    paren_stack = paren_stack + paren_string.count(\")\")\n    paren_stack\
    \ = paren_stack + paren_string.count(\")\")\n    paren_stack = paren_stack + paren_string.count(\"\
    )\")\n    paren_stack = paren_stack + paren_string.count(\")\")\n    paren_stack\
    \ = paren_stack + paren_string.count(\")\")\n    paren_stack = paren_stack + paren_string.count(\"\
    )\")\n    paren_stack = paren_stack + paren_string.count(\")\")\n    paren_stack\
    \ = paren_stack + paren_string.count(\")\")\n    paren_stack = paren_stack + paren_string.count(\"\
    )\")\n    paren_stack = paren_stack + paren_string.count(\")\")\n    paren_",
  "    paren_string = paren_string.strip\n    paren_string = paren_string.strip(\"\
    ()\")\n    paren_string = paren_string.strip(\"[]\")\n    paren_string = paren_string.strip(\"\
    {}\")\n    paren_string = paren_string.strip(\"{}[]\")\n    paren_string = paren_string.strip(\"\
    {}[]{}\")\n    paren_string = paren_string.strip(\"{}[]{}()\")\n    paren_string\
    \ = paren_string.strip(\"{}[]{}()[]\")\n    paren_string = paren_string.strip(\"\
    {}[]{}()[]{}\")\n    paren_string = paren_string.strip(\"{}[]{}()[]{}()\")\n \
    \   paren_string = paren_string.strip(\"{}[]{}()[]{}()[]\")\n    paren_string\
    \ = paren_string.strip(\"{}[]{}()[]{}()[]{}\")\n    paren_string = paren_string.strip(\"\
    {}[]{}()[]{}()[]{}()\")\n    paren_string = paren_string.strip(\"{}[]{}()[]{}()[]{}()[]\"\
    )\n    paren_string = paren_string.strip(\"{}[]{}()[]{}()[]{}()[]{}\")\n    paren_string\
    \ = paren_string.strip(\"{}[]{}()[]{}()[]{}()[]{}()\")\n    paren_string = paren_string.strip(\"\
    {}[]{}()[]{}()[]{}()[]{}()[]\")\n    paren_string = paren_string.strip(\"{}[]{}()[]{}()[]{}()[]{}()[]{}\"\
    )\n    paren_string = paren_string.strip(\"{}[]{}()[]{}()[]{}()[]{}()[]{}()\"\
    )\n    paren_string = paren_string.strip(\"{}[]{}()[]{}()[]{}()[]{}()[]{}()[]\"\
    )\n    paren_string = paren_string.strip(\"{}[]{}()[]{}()[]{}()[]{}()[]{}()[]{}\"\
    )\n    paren_string = paren_string.strip(\"{}[]{}()[]{}()[]{}()[]{}()[]{}()[]{}()\"\
    )\n    paren_string = paren_string.strip(\"{}[]{}()[]{}()[]{}()[]{}()[]{}()[]{}()[]\"\
    )\n    paren_string = paren_string.strip(\"{}[]{}()[]{}()[]{}()[]{}()[]{}()[]{}()[]{}\"\
    )\n    paren_string = paren_string.strip(\"{}[]{}()[]{}()[]", "    paren_string\
    \ = paren_string.trim()\n    paren_string = paren_string.strip(\"()\")\n    paren_string\
    \ = paren_string.strip(\"[]\")\n    paren_string = paren_string.strip(\"{}\")\n\
    \    paren_string = paren_string.strip(\",\")\n    paren_string = paren_string.strip(\"\
    ;\")\n    paren_string = paren_string.strip(\":\")\n    paren_string = paren_string.strip(\"\
    =\")\n    paren_string = paren_string.strip(\";\")\n    paren_string = paren_string.strip(\"\
    ,\")\n    paren_string = paren_string.strip(\";\")\n    paren_string = paren_string.strip(\"\
    :\")\n    paren_string = paren_string.strip(\"=\")\n    paren_string = paren_string.strip(\"\
    ;\")\n    paren_string = paren_string.strip(\",\")\n    paren_string = paren_string.strip(\"\
    ;\")\n    paren_string = paren_string.strip(\":\")\n    paren_string = paren_string.strip(\"\
    =\")\n    paren_string = paren_string.strip(\";\")\n    paren_string = paren_string.strip(\"\
    ,\")\n    paren_string = paren_string.strip(\";\")\n    paren_string = paren_string.strip(\"\
    :\")\n    paren_string = paren_string.strip(\"=\")\n    paren_string = paren_string.strip(\"\
    ;\")\n    paren_string = paren_string.strip(\",\")\n    paren_string = paren_string.strip(\"\
    ;\")\n    paren_string = paren_string.strip(\":\")\n    paren_string = paren_string.strip(\"\
    =\")\n    paren_string = paren_string.strip(\";\")\n    paren_string = paren_string.strip(\"\
    ,\")\n    paren_string = paren_string.strip(\";\")\n    paren_string = paren_string.strip(\"\
    :\")\n    paren_string = paren_string.strip(\"=\")\n    paren_string = paren_string.strip(\"\
    ;\")\n    paren_string = paren_string.strip(\",\")\n    paren_string = paren_string.strip(\"\
    ;\")\n    paren_string = paren_string.strip(\":\")\n    paren_string = paren_string.strip(\"\
    =\")\n    paren_string = paren_string.strip(\";\")\n    paren_string = paren_string.strip(\"\
    ,\")\n    paren_string = paren_string.strip(\";\")\n    paren_string = paren_string.strip(\"\
    :\")\n    paren_string = paren_string.strip(\"=\")\n    paren_string = paren_string.strip(\"\
    ;\")\n    paren", "    paren_string = paren_string.strip\n    paren_string = paren_string.strip(\"\
    ()\")\n    paren_string = paren_string.strip(\"[]\")\n    paren_string = paren_string.strip(\"\
    {}\")\n    paren_string = paren_string.strip(\"{}[]\")\n    paren_string = paren_string.strip(\"\
    {}[]{}\")\n    paren_string = paren_string.strip(\"{}[]{}[]\")\n    paren_string\
    \ = paren_string.strip(\"{}[]{}[]{}\")\n    paren_string = paren_string.strip(\"\
    {}[]{}[]{}[]\")\n    paren_string = paren_string.strip(\"{}[]{}[]{}[]{}\")\n \
    \   paren_string = paren_string.strip(\"{}[]{}[]{}[]{}[]\")\n    paren_string\
    \ = paren_string.strip(\"{}[]{}[]{}[]{}[]{}\")\n    paren_string = paren_string.strip(\"\
    {}[]{}[]{}[]{}[]{}[]\")\n    paren_string = paren_string.strip(\"{}[]{}[]{}[]{}[]{}[]\"\
    )\n    paren_string = paren_string.strip(\"{}[]{}[]{}[]{}[]{}[]{}\")\n    paren_string\
    \ = paren_string.strip(\"{}[]{}[]{}[]{}[]{}[]{}[]\")\n    paren_string = paren_string.strip(\"\
    {}[]{}[]{}[]{}[]{}[]{}[]{}\")\n    paren_string = paren_string.strip(\"{}[]{}[]{}[]{}[]{}[]{}[]{}[]\"\
    )\n    paren_string = paren_string.strip(\"{}[]{}[]{}[]{}[]{}[]{}[]{}[]\")\n \
    \   paren_string = paren_string.strip(\"{}[]{}[]{}[]{}[]{}[]{}[]{}[]{}\")\n  \
    \  paren_string = paren_string.strip(\"{}[]{}[]{}[]{}[]{}[]{}[]{}[]{}[]\")\n \
    \   paren_string = paren_string.strip(\"{}[]{}[]{}[]{}[]{}[]{}[]{}[]{}[]{}\")\n\
    \    paren_string = paren_string.strip(\"{}[]{}[]{}[]{}[]{}[]{}[]{}[]{}[]{}\"\
    )\n    paren_string = paren_string.strip(\"{}[]{}[]{}[]{}[]{}[]{}[]{}[]{}[]{}[]\"\
    )\n    paren_string = paren_string.strip(\"{}[]{}[]{}[]{}[]{}[]{}[]{}[]{}[]{}[]{}\"\
    )\n    paren_string = paren_string", "    paren_string = paren_string.strip\n\
    \    paren_string = paren_string.strip(\"()\")\n    paren_string = paren_string.strip(\"\
    []\")\n    paren_string = paren_string.strip(\"{}\")\n    paren_string = paren_string.strip(\"\
    ()[]{}\")\n    paren_string = paren_string.strip(\"(){}[]\")\n    paren_string\
    \ = paren_string.strip(\"{}[]()\")\n    paren_string = paren_string.strip(\"{}()[]\"\
    )\n    paren_string = paren_string.strip(\"[]{}()\")\n    paren_string = paren_string.strip(\"\
    [](){}\")\n    paren_string = paren_string.strip(\"()[]{}()\")\n    paren_string\
    \ = paren_string.strip(\"(){}[]()\")\n    paren_string = paren_string.strip(\"\
    (){}()[]\")\n    paren_string = paren_string.strip(\"[][]{}()\")\n    paren_string\
    \ = paren_string.strip(\"[]{}()()\")\n    paren_string = paren_string.strip(\"\
    {}[][]()\")\n    paren_string = paren_string.strip(\"{}[]()()\")\n    paren_string\
    \ = paren_string.strip(\"[][]{}()()\")\n    paren_string = paren_string.strip(\"\
    []{}()()()\")\n    paren_string = paren_string.strip(\"{}[][]()()()\")\n    paren_string\
    \ = paren_string.strip(\"{}[]()()()()\")\n    paren_string = paren_string.strip(\"\
    [][]{}()()()()\")\n    paren_string = paren_string.strip(\"[]{}()()()()()\")\n\
    \    paren_string = paren_string.strip(\"{}[][]()()()()()\")\n    paren_string\
    \ = paren_string.strip(\"{}[]()()()()()()\")\n    paren_string = paren_string.strip(\"\
    [][]{}()()()()()()\")\n    paren_string = paren_string.strip(\"[]{}()()()()()()\"\
    )\n    paren_string = paren_string.strip(\"{}[][]()()()()()()\")\n    paren_string\
    \ = paren_string.strip(\"{}[]()()()()()()()\")\n    paren_string = paren_string.strip(\"\
    [][]{}()()()()()()()\")\n    paren_string = paren_string.strip(\"[]{}()()()()()()()()\"\
    )\n    paren_string = paren_string.strip(\"{}[][]()()()()()", "    paren_string\
    \ = paren_string.strip\n    paren_array = paren_string.split(\" \")\n    paren_array_size\
    \ = length(paren_array)\n    paren_array_max = 0\n    for paren_array_index in\
    \ 1:paren_array_size\n        if paren_array[paren_array_index] != \"()\"\n  \
    \          paren_array_max = max(paren_array_max, length(paren_array[paren_array_index+1:end]))\n\
    \        end\n    end\n    paren_array_max = paren_array_max + 1\n    paren_array_vector\
    \ = Vector{Int64}(paren_array_max)\n    for paren_array_index in 1:paren_array_size\n\
    \        if paren_array[paren_array_index] != \"()\"\n            paren_array_vector[paren_array_index]\
    \ = length(paren_array[paren_array_index+1:end])\n        end\n    end\n    return\
    \ paren_array_vector\nend\n</cell>\n<code language=julia-1.5>", "    paren_string\
    \ = paren_string.strip\n    paren_string = paren_string.strip(\"()\")\n    paren_string\
    \ = paren_string.strip(\"[]\")\n    paren_string = paren_string.strip(\"{}\")\n\
    \    paren_string = paren_string.strip(\"{}[]\")\n    paren_string = paren_string.strip(\"\
    {}[]{}\")\n    paren_string = paren_string.strip(\"{}[]{}[]\")\n    paren_string\
    \ = paren_string.strip(\"{}[]{}[]{}\")\n    paren_string = paren_string.strip(\"\
    {}[]{}[]{}[]\")\n    paren_string = paren_string.strip(\"{}[]{}[]{}[]{}\")\n \
    \   paren_string = paren_string.strip(\"{}[]{}[]{}[]{}[]\")\n    paren_string\
    \ = paren_string.strip(\"{}[]{}[]{}[]{}[]{}\")\n    paren_string = paren_string.strip(\"\
    {}[]{}[]{}[]{}[]{}[]\")\n    paren_string = paren_string.strip(\"{}[]{}[]{}[]{}[]{}[]{}\"\
    )\n    paren_string = paren_string.strip(\"{}[]{}[]{}[]{}[]{}[]{}[]\")\n    paren_string\
    \ = paren_string.strip(\"{}[]{}[]{}[]{}[]{}[]{}[]{}\")\n    paren_string = paren_string.strip(\"\
    {}[]{}[]{}[]{}[]{}[]{}[]{}[]\")\n    paren_string = paren_string.strip(\"{}[]{}[]{}[]{}[]{}[]{}[]{}[]{}\"\
    )\n    paren_string = paren_string.strip(\"{}[]{}[]{}[]{}[]{}[]{}[]{}[]{}[]\"\
    )\n    paren_string = paren_string.strip(\"{}[]{}[]{}[]{}[]{}[]{}[]{}[]{}[]{}\"\
    )\n    paren_string = paren_string.strip(\"{}[]{}[]{}[]{}[]{}[]{}[]{}[]{}[]{}[]\"\
    )\n    paren_string = paren_string.strip(\"{}[]{}[]{}[]{}[]{}[]{}[]{}[]{}[]{}[]{}\"\
    )\n    paren_string = paren_string.strip(\"{}[]{}[]{}[]{}[]{}[]{}[]{}[]{}[]{}[]{}[]\"\
    )\n    paren_string = paren_string.strip(\"{}[]{}[]{}[]{}[]{}[]{}[]{}[]{}[]{}[]{}[]{}\"\
    )\n    paren_string = paren_string.strip(\"{}[]{}[]{}[]{}[]", "    paren_string\
    \ = paren_string.strip\n    paren_string = paren_string.strip(\"()\")\n    paren_string\
    \ = paren_string.strip(\"[]\")\n    paren_string = paren_string.strip(\"{}\")\n\
    \    paren_string = paren_string.strip(\"{}[]\")\n    paren_string = paren_string.strip(\"\
    {}[]()\")\n    paren_string = paren_string.strip(\"{}[]()()\")\n    paren_string\
    \ = paren_string.strip(\"{}[]()()()\")\n    paren_string = paren_string.strip(\"\
    {}[]()()()()\")\n    paren_string = paren_string.strip(\"{}[]()()()()()\")\n \
    \   paren_string = paren_string.strip(\"{}[]()()()()()()\")\n    paren_string\
    \ = paren_string.strip(\"{}[]()()()()()()()\")\n    paren_string = paren_string.strip(\"\
    {}[]()()()()()()()()\")\n    paren_string = paren_string.strip(\"{}[]()()()()()()()()\"\
    )\n    paren_string = paren_string.strip(\"{}[]()()()()()()()()()\")\n    paren_string\
    \ = paren_string.strip(\"{}[]()()()()()()()()()()\")\n    paren_string = paren_string.strip(\"\
    {}[]()()()()()()()()()()\")\n    paren_string = paren_string.strip(\"{}[]()()()()()()()()()()\"\
    )\n    paren_string = paren_string.strip(\"{}[]()()()()()()()()()()\")\n    paren_string\
    \ = paren_string.strip(\"{}[]()()()()()()()()()()()\")\n    paren_string = paren_string.strip(\"\
    {}[]()()()()()()()()()()()\")\n    paren_string = paren_string.strip(\"{}[]()()()()()()()()()()()\"\
    )\n    paren_string = paren_string.strip(\"{}[]()()()()()()()()()()()\")\n   \
    \ paren_string = paren_string.strip(\"{}[]()()()()()()()()()()()\")\n    paren_string\
    \ = paren_string.strip(\"{}[]()()()()()()()()()()()\")\n    paren_string = paren_string.strip(\"\
    {}[]()()()()()()()()()()()()\")\n    paren_string = paren_string.strip(\"{}",
  "    paren_array = paren_string.split(\" \")\n    paren_array_size = length(paren_array)\n\
    \    paren_array_max_size = paren_array_size\n    paren_array_max_size[1] = 1\n\
    \    paren_array_max_size[2] = paren_array_size[2]\n    paren_array_max_size[3]\
    \ = paren_array_size[3]\n    paren_array_max_size[4] = paren_array_size[4]\n \
    \   paren_array_max_size[5] = paren_array_size[5]\n    paren_array_max_size[6]\
    \ = paren_array_size[6]\n    paren_array_max_size[7] = paren_array_size[7]\n \
    \   paren_array_max_size[8] = paren_array_size[8]\n    paren_array_max_size[9]\
    \ = paren_array_size[9]\n    paren_array_max_size[10] = paren_array_size[10]\n\
    \    paren_array_max_size[11] = paren_array_size[11]\n    paren_array_max_size[12]\
    \ = paren_array_size[12]\n    paren_array_max_size[13] = paren_array_size[13]\n\
    \    paren_array_max_size[14] = paren_array_size[14]\n    paren_array_max_size[15]\
    \ = paren_array_size[15]\n    paren_array_max_size[16] = paren_array_size[16]\n\
    \    paren_array_max_size[17] = paren_array_size[17]\n    paren_array_max_size[18]\
    \ = paren_array_size[18]\n    paren_array_max_size[19] = paren_array_size[19]\n\
    \    paren_array_max_size[20] = paren_array_size[20]\n    paren_array_max_size[21]\
    \ = paren_array_size[21]\n    paren_array_max_size[22] = paren_array_size[22]\n\
    \    paren_array_max_size[23] = paren_array_size[23]\n    paren_array_max_size[24]\
    \ = paren_array_size[24]\n    paren_array_max_size[25] = paren_array_size[25]\n\
    \    paren_array_max_size[26] = paren_array_size[26]\n    paren_array_max_size[27]\
    \ = paren_array_size[27]\n    paren_array_max_size[28] = paren_array_size[28]\n\
    \    paren_array_max_size[29] = paren_array_size[29]\n    paren_array_max_size[30]\
    \ = paren_array_size[30]\n    paren_array_max_size[31] = paren_", "    paren_stack\
    \ = Vector{Int64}()\n    paren_stack = paren_stack + paren_string.count(\"(\"\
    )\n    paren_stack = paren_stack + paren_string.count(\")\")\n    paren_stack\
    \ = paren_stack + paren_string.count(\")\")\n    paren_stack = paren_stack + paren_string.count(\"\
    )\")\n    paren_stack = paren_stack + paren_string.count(\")\")\n    paren_stack\
    \ = paren_stack + paren_string.count(\")\")\n    paren_stack = paren_stack + paren_string.count(\"\
    )\")\n    paren_stack = paren_stack + paren_string.count(\")\")\n    paren_stack\
    \ = paren_stack + paren_string.count(\")\")\n    paren_stack = paren_stack + paren_string.count(\"\
    )\")\n    paren_stack = paren_stack + paren_string.count(\")\")\n    paren_stack\
    \ = paren_stack + paren_string.count(\")\")\n    paren_stack = paren_stack + paren_string.count(\"\
    )\")\n    paren_stack = paren_stack + paren_string.count(\")\")\n    paren_stack\
    \ = paren_stack + paren_string.count(\")\")\n    paren_stack = paren_stack + paren_string.count(\"\
    )\")\n    paren_stack = paren_stack + paren_string.count(\")\")\n    paren_stack\
    \ = paren_stack + paren_string.count(\")\")\n    paren_stack = paren_stack + paren_string.count(\"\
    )\")\n    paren_stack = paren_stack + paren_string.count(\")\")\n    paren_stack\
    \ = paren_stack + paren_string.count(\")\")\n    paren_stack = paren_stack + paren_string.count(\"\
    )\")\n    paren_stack = paren_stack + paren_string.count(\")\")\n    paren_stack\
    \ = paren_stack + paren_string.count(\")\")\n    paren_stack = paren_stack + paren_string.count(\"\
    )\")\n    paren_stack = paren_stack + paren_string.count(\")\")\n    paren_stack\
    \ = paren_stack + paren_string.count(\")\")\n    paren_stack = paren_stack + paren_string.count(\"\
    )\")\n    paren_stack = paren_stack + paren_string.count(\")\")\n    paren_stack\
    \ = paren_stack + paren_string.count(\")\")\n    paren_stack = paren_stack + paren_string.count(\"\
    )\")\n    paren_", "    paren_string = paren_string.trim()\n    paren_string =\
    \ paren_string.strip(\"()\")\n    paren_string = paren_string.strip(\"[]\")\n\
    \    paren_string = paren_string.strip(\"{}\")\n    paren_string = paren_string.strip(\"\
    {}[]\")\n    paren_string = paren_string.strip(\"{}[]()\")\n    paren_string =\
    \ paren_string.strip(\"{}[]()()\")\n    paren_string = paren_string.strip(\"{}[]()()()\"\
    )\n    paren_string = paren_string.strip(\"{}[]()()()()\")\n    paren_string =\
    \ paren_string.strip(\"{}[]()()()()()\")\n    paren_string = paren_string.strip(\"\
    {}[]()()()()()()\")\n    paren_string = paren_string.strip(\"{}[]()()()()()()()\"\
    )\n    paren_string = paren_string.strip(\"{}[]()()()()()()()\")\n    paren_string\
    \ = paren_string.strip(\"{}[]()()()()()()()()\")\n    paren_string = paren_string.strip(\"\
    {}[]()()()()()()()()()\")\n    paren_string = paren_string.strip(\"{}[]()()()()()()()()()()\"\
    )\n    paren_string = paren_string.strip(\"{}[]()()()()()()()()()()\")\n    paren_string\
    \ = paren_string.strip(\"{}[]()()()()()()()()()()\")\n    paren_string = paren_string.strip(\"\
    {}[]()()()()()()()()()()\")\n    paren_string = paren_string.strip(\"{}[]()()()()()()()()()()()\"\
    )\n    paren_string = paren_string.strip(\"{}[]()()()()()()()()()()()\")\n   \
    \ paren_string = paren_string.strip(\"{}[]()()()()()()()()()()()\")\n    paren_string\
    \ = paren_string.strip(\"{}[]()()()()()()()()()()()\")\n    paren_string = paren_string.strip(\"\
    {}[]()()()()()()()()()()()\")\n    paren_string = paren_string.strip(\"{}[]()()()()()()()()()()()\"\
    )\n    paren_string = paren_string.strip(\"{}[]()()()()()()()()()()()()\")\n \
    \   paren_string = paren_string.strip(\"{}", "    paren_string = paren_string.trim()\n\
    \    paren_string = paren_string.strip(\"()\")\n    paren_string = paren_string.strip(\"\
    []\")\n    paren_string = paren_string.strip(\"{}\")\n    paren_string = paren_string.strip(\"\
    {}[]\")\n    paren_string = paren_string.strip(\"{}[]{}\")\n    paren_string =\
    \ paren_string.strip(\"{}[]{}[]\")\n    paren_string = paren_string.strip(\"{}[]{}[]{}\"\
    )\n    paren_string = paren_string.strip(\"{}[]{}[]{}[]\")\n    paren_string =\
    \ paren_string.strip(\"{}[]{}[]{}[]{}\")\n    paren_string = paren_string.strip(\"\
    {}[]{}[]{}[]{}[]\")\n    paren_string = paren_string.strip(\"{}[]{}[]{}[]{}[]{}\"\
    )\n    paren_string = paren_string.strip(\"{}[]{}[]{}[]{}[]{}[]\")\n    paren_string\
    \ = paren_string.strip(\"{}[]{}[]{}[]{}[]{}[]\")\n    paren_string = paren_string.strip(\"\
    {}[]{}[]{}[]{}[]{}[]{}\")\n    paren_string = paren_string.strip(\"{}[]{}[]{}[]{}[]{}[]{}[]\"\
    )\n    paren_string = paren_string.strip(\"{}[]{}[]{}[]{}[]{}[]{}[]{}\")\n   \
    \ paren_string = paren_string.strip(\"{}[]{}[]{}[]{}[]{}[]{}[]{}[]\")\n    paren_string\
    \ = paren_string.strip(\"{}[]{}[]{}[]{}[]{}[]{}[]{}[]\")\n    paren_string = paren_string.strip(\"\
    {}[]{}[]{}[]{}[]{}[]{}[]{}[]{}\")\n    paren_string = paren_string.strip(\"{}[]{}[]{}[]{}[]{}[]{}[]{}[]{}[]\"\
    )\n    paren_string = paren_string.strip(\"{}[]{}[]{}[]{}[]{}[]{}[]{}[]{}[]{}\"\
    )\n    paren_string = paren_string.strip(\"{}[]{}[]{}[]{}[]{}[]{}[]{}[]{}[]{}\"\
    )\n    paren_string = paren_string.strip(\"{}[]{}[]{}[]{}[]{}[]{}[]{}[]{}[]{}[]\"\
    )\n    paren_string = paren_string.strip(\"{}[]{}[]{}[]{}[]{}[]{}[]{}[]{}[]{}[]{}\"\
    )\n    paren_string = paren", "    paren_string = paren_string.trim()\n    paren_array\
    \ = paren_string.split(\")\")\n    paren_array_size = length(paren_array)\n  \
    \  paren_array_size = paren_array_size - 1\n    paren_array_size = paren_array_size\
    \ - 1\n    paren_array_size = paren_array_size - 1\n    paren_array_size = paren_array_size\
    \ - 1\n    paren_array_size = paren_array_size - 1\n    paren_array_size = paren_array_size\
    \ - 1\n    paren_array_size = paren_array_size - 1\n    paren_array_size = paren_array_size\
    \ - 1\n    paren_array_size = paren_array_size - 1\n    paren_array_size = paren_array_size\
    \ - 1\n    paren_array_size = paren_array_size - 1\n    paren_array_size = paren_array_size\
    \ - 1\n    paren_array_size = paren_array_size - 1\n    paren_array_size = paren_array_size\
    \ - 1\n    paren_array_size = paren_array_size - 1\n    paren_array_size = paren_array_size\
    \ - 1\n    paren_array_size = paren_array_size - 1\n    paren_array_size = paren_array_size\
    \ - 1\n    paren_array_size = paren_array_size - 1\n    paren_array_size = paren_array_size\
    \ - 1\n    paren_array_size = paren_array_size - 1\n    paren_array_size = paren_array_size\
    \ - 1\n    paren_array_size = paren_array_size - 1\n    paren_array_size = paren_array_size\
    \ - 1\n    paren_array_size = paren_array_size - 1\n    paren_array_size = paren_array_size\
    \ - 1\n    paren_array_size = paren_array_size - 1\n    paren_array_size = paren_array_size\
    \ - 1\n    paren_array_size = paren_array_size - 1\n    paren_array_size = paren_array_size\
    \ - 1\n    paren_array_size = paren_array_size - 1\n    paren_array_size = paren_array_size\
    \ - 1\n    paren_array_size = paren_array_size - 1\n    paren_array_size = paren_array_size\
    \ - 1\n    paren_array_size = paren_array_size - 1\n    paren_array_size = paren_array_size\
    \ - 1\n    paren_array_size = paren_array_size - 1\n    paren_array_size = paren_array_size\
    \ - 1\n    paren_array_size = paren_array_size - 1\n    paren_array_size = paren_array_size\
    \ - 1\n    paren_array_size = paren_array_size - 1\n    paren_array_size = paren_array_size\
    \ - 1\n    paren_array_size = paren_array_size - 1\n    paren_array_size = paren_array_size\
    \ - ", "    paren_stack = Vector{Int64}()\n    paren_stack = paren_stack + paren_string.count(\"\
    (\")\n    paren_stack = paren_stack + paren_string.count(\")\")\n    paren_stack\
    \ = paren_stack + paren_string.count(\")\")\n    paren_stack = paren_stack + paren_string.count(\"\
    )\")\n    paren_stack = paren_stack + paren_string.count(\")\")\n    paren_stack\
    \ = paren_stack + paren_string.count(\")\")\n    paren_stack = paren_stack + paren_string.count(\"\
    )\")\n    paren_stack = paren_stack + paren_string.count(\")\")\n    paren_stack\
    \ = paren_stack + paren_string.count(\")\")\n    paren_stack = paren_stack + paren_string.count(\"\
    )\")\n    paren_stack = paren_stack + paren_string.count(\")\")\n    paren_stack\
    \ = paren_stack + paren_string.count(\")\")\n    paren_stack = paren_stack + paren_string.count(\"\
    )\")\n    paren_stack = paren_stack + paren_string.count(\")\")\n    paren_stack\
    \ = paren_stack + paren_string.count(\")\")\n    paren_stack = paren_stack + paren_string.count(\"\
    )\")\n    paren_stack = paren_stack + paren_string.count(\")\")\n    paren_stack\
    \ = paren_stack + paren_string.count(\")\")\n    paren_stack = paren_stack + paren_string.count(\"\
    )\")\n    paren_stack = paren_stack + paren_string.count(\")\")\n    paren_stack\
    \ = paren_stack + paren_string.count(\")\")\n    paren_stack = paren_stack + paren_string.count(\"\
    )\")\n    paren_stack = paren_stack + paren_string.count(\")\")\n    paren_stack\
    \ = paren_stack + paren_string.count(\")\")\n    paren_stack = paren_stack + paren_string.count(\"\
    )\")\n    paren_stack = paren_stack + paren_string.count(\")\")\n    paren_stack\
    \ = paren_stack + paren_string.count(\")\")\n    paren_stack = paren_stack + paren_string.count(\"\
    )\")\n    paren_stack = paren_stack + paren_string.count(\")\")\n    paren_stack\
    \ = paren_stack + paren_string.count(\")\")\n    paren_stack = paren_stack + paren_string.count(\"\
    )\")\n    paren_", "    paren_string = paren_string.strip\n    paren_string =\
    \ paren_string.strip(\"()\")\n    paren_string = paren_string.strip(\"[]\")\n\
    \    paren_string = paren_string.strip(\"{}\")\n    paren_string = paren_string.strip(\"\
    {}[]\")\n    paren_string = paren_string.strip(\"{}[]()\")\n    paren_string =\
    \ paren_string.strip(\"{}[]()()\")\n    paren_string = paren_string.strip(\"{}[]()()()\"\
    )\n    paren_string = paren_string.strip(\"{}[]()()()()\")\n    paren_string =\
    \ paren_string.strip(\"{}[]()()()()()\")\n    paren_string = paren_string.strip(\"\
    {}[]()()()()()()()\")\n    paren_string = paren_string.strip(\"{}[]()()()()()()()()\"\
    )\n    paren_string = paren_string.strip(\"{}[]()()()()()()()()()\")\n    paren_string\
    \ = paren_string.strip(\"{}[]()()()()()()()()()()\")\n    paren_string = paren_string.strip(\"\
    {}[]()()()()()()()()()()()\")\n    paren_string = paren_string.strip(\"{}[]()()()()()()()()()()()()\"\
    )\n    paren_string = paren_string.strip(\"{}[]()()()()()()()()()()()()\")\n \
    \   paren_string = paren_string.strip(\"{}[]()()()()()()()()()()()()\")\n    paren_string\
    \ = paren_string.strip(\"{}[]()()()()()()()()()()()()()\")\n    paren_string =\
    \ paren_string.strip(\"{}[]()()()()()()()()()()()()()\")\n    paren_string = paren_string.strip(\"\
    {}[]()()()()()()()()()()()()()\")\n    paren_string = paren_string.strip(\"{}[]()()()()()()()()()()()()()\"\
    )\n    paren_string = paren_string.strip(\"{}[]()()()()()()()()()()()()()\")\n\
    \    paren_string = paren_string.strip(\"{}[]()()()()()()()()()()()()()()\")\n\
    \    paren_string = paren_string.strip(\"{}[]()()()()()()()()()()()()()()\")\n\
    \    paren_string = paren", "    paren_string = paren_string.strip\n    paren_string\
    \ = paren_string.strip(\"()\")\n    paren_string = paren_string.strip(\"[]\")\n\
    \    paren_string = paren_string.strip(\"{}\")\n    paren_string = paren_string.strip(\"\
    ()[]{}\")\n    paren_string = paren_string.strip(\"(){}[]\")\n    paren_string\
    \ = paren_string.strip(\"[](){}\")\n    paren_string = paren_string.strip(\"{}[]()\"\
    )\n    paren_string = paren_string.strip(\"[]{}()\")\n    paren_string = paren_string.strip(\"\
    ()[](){}\")\n    paren_string = paren_string.strip(\"(){}[]()\")\n    paren_string\
    \ = paren_string.strip(\"[]()(){}\")\n    paren_string = paren_string.strip(\"\
    {}[]()()\")\n    paren_string = paren_string.strip(\"[]{}()()\")\n    paren_string\
    \ = paren_string.strip(\"()[]()(){}\")\n    paren_string = paren_string.strip(\"\
    (){}[]()()\")\n    paren_string = paren_string.strip(\"[]()()(){}\")\n    paren_string\
    \ = paren_string.strip(\"{}[]()()()\")\n    paren_string = paren_string.strip(\"\
    []{}()()()\")\n    paren_string = paren_string.strip(\"()[]()()(){}\")\n    paren_string\
    \ = paren_string.strip(\"(){}[]()()()\")\n    paren_string = paren_string.strip(\"\
    []()()()(){}\")\n    paren_string = paren_string.strip(\"{}[]()()()()\")\n   \
    \ paren_string = paren_string.strip(\"[]{}()()()()\")\n    paren_string = paren_string.strip(\"\
    ()[]()()()(){}\")\n    paren_string = paren_string.strip(\"(){}[]()()()()\")\n\
    \    paren_string = paren_string.strip(\"[]()()()()(){}\")\n    paren_string =\
    \ paren_string.strip(\"{}[]()()()()()\")\n    paren_string = paren_string.strip(\"\
    []{}()()()()()\")\n    paren_string = paren_string.strip(\"()[]()()()()(){}\"\
    )\n    paren_string = paren_string.strip(\"(){}[]()()()()()\")\n    paren_string\
    \ = paren_string.strip(\"[]()()()()()(){}\")\n    paren_string = paren_string.strip(\"\
    {}"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

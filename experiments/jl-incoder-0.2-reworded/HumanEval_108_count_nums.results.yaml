language: jl
name: HumanEval_108_count_nums
results:
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count_nums =\
    \ sum(a < 0 for a in arr)\n    return count_nums\nend\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -4, -6, -10, -12, -14, -16, -18, -20, -22, -24])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function count_nums which takes a vector of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1,\
    \ 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmbxmkmuy.jl:17\nin expression starting at\
    \ /tmp/tmpmbxmkmuy.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 0, 2, -10, -5, -7, -9, -12, -14, -16, -20, -24, -26, -27, -29, -32, -34,\
    \ -36, -38, -39, -44, -47, -49, -50, -52, -53, -54, -55, -57, -58, -59, -62, -64,\
    \ -66, -68, -71, -73, -74, -76, -78, -79, -84, -86, -88, -91, -93, -95, -97, -99,\
    \ -100, -102, -103, -105, -106, -108, -110, -111, -112, -114, -115, -116, -117,\
    \ -119, -121, -123, -125, -126, -128, -129, -130, -132, -133, -134, -135, -136,\
    \ -137, -138, -139, -140, -141, -142, -143, -144, -145, -146, -147, -148, -149,\
    \ -150, -151, -152, -153, -154, -155, -156, -157, -158, -159, -160, -161, -162,\
    \ -163, -164, -165, -166, -167, -168, -169, -170, -171, -172, -173, -174, -175,\
    \ -176, -177, -178, -179, -180, -181, -182, -183, -184, -185, -186, -187, -188,\
    \ -189, -190, -191, -192, -193, -194, -195, -196, -197, -198, -199, -200, -201,\
    \ -202, -203, -204, -205, -206, -207, -208, -209, -210, -211, -212, -213, -214,\
    \ -215, -216, -217, -218, -219, -220, -221, -222, -223, -224, -226, -227, -228,\
    \ -229, -230, -231, -232, -233, -234, -235, -236, -237, -238, -240, -241, -242,\
    \ -243, -244, -245, -246, -247, -248, -249, -250, -251, -252, -253, -254, -255,\
    \ -256, -257, -258, -259, -260, -261, -262, -263, -264, -265, -266, -267, -268,\
    \ -269, -270, -271, -272, -273, -274, -275, -276, -277, -278, \nusing Test\n\n\
    @testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpw9ft7bga.jl:22\nin expression starting at\
    \ /tmp/tmpw9ft7bga.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<text>\nExercise 3\nWrite a function count_nums\
    \ which takes a vector of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpumqun98q.jl:22\nin expression starting at\
    \ /tmp/tmpumqun98q.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ takes a vector of integers and returns the number of elements which has a sum\
    \ of digits > 0.\nIf a number is negative, then its first signed digit will be\
    \ negative:\ne.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums([])\n0\n\
    >>> count_nums([-1, 11, -11])\n1\n>>> count_nums([1, 1, 2])\n3\n\"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmskgck3b.jl:22\nin expression starting at\
    \ /tmp/tmpmskgck3b.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count_nums =\
    \ 0 \n    for x in arr \n        if x > 0 \n            count_nums += 1 \n   \
    \     else \n            count_nums -= 1 \n    count_nums \nend \n</cell>\n<code\
    \ language=julia-1.0>\ncount_nums([-2, -1, 0, 2, -4, -6, -7, -8])\n</cell>\n<text>\n\
    Exercise 3\nWrite a function count_nums which takes a vector of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1,\
    \ 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpv876gi4_.jl:22\nin expression starting at\
    \ /tmp/tmpv876gi4_.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, -10, -100, -1000, -1000000000])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ count_nums which takes a vector of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppin_c1ds.jl:22\nin expression starting at\
    \ /tmp/tmppin_c1ds.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, -10, -100, -1000, -1000000000000])\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function that takes a vector of integers and returns the number of elements\
    \ which has a sum of digits > 0.\nIf a number is negative, then its first signed\
    \ digit will be negative:\ne.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums([])\n\
    0\n>>> count_nums([-1, 11, -11])\n1\n>>> count_nums([1, 1, 2])\n3\n>>> count_nums([1,\
    \ 2, 3, -4, -5, -6, -7, -8])\n4\n>>> count_nums([1, 2, 3, -4, -5, -6, -7, -8,\
    \ 9])\n4\n>>> count_nums([1, 2, 3, -4, -5, -6, -7, -8, 9, 10])\n4\n>>> count_nums([1,\
    \ 2, 3, -4, -5, -6, -7, -8, 9, 10, 11])\n4\n>>> count_nums([1, 2, 3, -4, -5, -6,\
    \ -7, -8, 9, 10, 11, 12])\n4\n>>> count_nums([1, 2, 3, -4, -5, -6, -7, -8, 9,\
    \ 10, 11, 12, 13])\n4\n>>> count_nums([1, 2, 3, -4, -5, -6, -7, -8, 9, 10, 11,\
    \ 12, 13, 14])\n4\n>>> count_nums([1, 2, 3, -4, -5, -6, -7, -8, 9, 10, 11, 12,\
    \ 13, 14, 15])\n4\n>>> count_nums([1, 2, 3, -4, -5, -6, -7, -8, 9, 10, 11, 12,\
    \ 13, 14, 15, 16])\n4\n>>> count_nums([1, 2, 3, -4, -5, -6, -7, -8, 9, 10, 11,\
    \ 12, 13, 14, 15, 16, 17])\n4\n>>> count_nums([1, 2, 3, -4, -5, -6, -7, -8, 9,\
    \ 10, 11, 12, 13, 14, 15, 16, 17, 18])\n4\n>>> count_nums([1, 2, 3, -4, -5, -6,\
    \ -7, -8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19])\n4\n>>> count_nums([1, 2,\
    \ 3, -4, -5, -6, -7, -8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20])\n4\n\
    >>> count_nums([1, 2, 3, -4, -5, -6, -7, -8, 9, 10, 11, 12, 13, 14, 15, 16, 17,\
    \ 18, 19, 20, 21])\n4\n>>> count_nums([1, 2, 3, -4, -5, -6, -7, \nusing Test\n\
    \n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkumwn8hg.jl:22\nin expression starting at\
    \ /tmp/tmpkumwn8hg.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.3>\ncount_nums([-1,11,-11])\n\
    </cell>\n<text>\nExercise 2\nWrite a function count_nums which takes a vector\
    \ of integers and returns\n    the number of elements which has a sum of digits\
    \ > 0.\n    If a number is negative, then its first signed digit will be negative:\n\
    \    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n\
    \    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n   \
    \ 3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1hrq95pm.jl:22\nin expression starting at\
    \ /tmp/tmp1hrq95pm.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.4>\ncount_nums([-1,\
    \ 1, -2, 3, -4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ count_nums which takes a vector of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpu2gv2pz1.jl:22\nin expression starting at\
    \ /tmp/tmpu2gv2pz1.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ takes a vector of integers and returns the number of elements which has a sum\
    \ of digits < 0.\nIf a number is negative, then its first signed digit will be\
    \ negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n\
    \    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n\
    \    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t\
    @test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\
    \t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6,\
    \ 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1])\
    \ == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp82nrqbmu.jl:22\nin expression starting at\
    \ /tmp/tmp82nrqbmu.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<text>\nExercise 4\nWrite a function that\
    \ takes a vector of integers and returns the number of elements which has a sum\
    \ of digits > 0.\nIf no number is negative, then its first signed digit will be\
    \ negative:\ne.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums([])\n0\n\
    >>> count_nums([-1, 11, -11])\n1\n>>> count_nums([1, 1, 2])\n3\n>>> count_nums([1,\
    \ 2, 3])\n0\n>>> count_nums([1, 2, -3, 4])\n2\n>>> count_nums([-1, -2, 3, -4,\
    \ 5])\n3\n>>> count_nums([-1, -2, 3, -4, -5, 6])\n0\n>>> count_nums([-1, -2, 3,\
    \ -4, -5, -6, 7])\n1\n>>> count_nums([-1, -2, 3, -4, -5, -6, -7, 8])\n2\n>>> count_nums([-1,\
    \ -2, 3, -4, -5, -6, -7, -8])\n3\n>>> count_nums([-1, -2, 3, -4, -5, -6, -7, -8,\
    \ 9])\n0\n>>> count_nums([-1, -2, 3, -4, -5, -6, -7, -8, -9, 10])\n1\n>>> count_nums([-1,\
    \ -2, 3, -4, -5, -6, -7, -8, -9, -10, 11])\n2\n>>> count_nums([-1, -2, 3, -4,\
    \ -5, -6, -7, -8, -9, -10, -10, 12])\n3\n>>> count_nums([-1, -2, 3, -4, -5, -6,\
    \ -7, -8, -9, -10, -10, -10, 13])\n0\n>>> count_nums([-1, -2, 3, -4, -5, -6, -7,\
    \ -8, -9, -10, -10, -10, -10, 14])\n1\n>>> count_nums([-1, -2, 3, -4, -5, -6,\
    \ -7, -8, -9, -10, -10, -10, -10, -10, 15])\n2\n>>> count_nums([-1, -2, 3, -4,\
    \ -5, -6, -7, -8, -9, -10, -10, -10, -10, -10, -10, 16])\n3\n>>> count_nums([-1,\
    \ -2, 3, -4, -5, -6, -7, -8, -9, -10, -10, -10, -10, -10, -10, 17])\n0\n>>> count_nums([-1,\
    \ -2, 3, -4, -5, -6, -7, -8, -9, -10, -10, -10, -10, -10, -10, -10, 18])\n1\n\
    >>> count_nums([-1, -2, 3, -4, \nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3_pgvy3t.jl:22\nin expression starting at\
    \ /tmp/tmp3_pgvy3t.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        else\n \
    \           if x < 0\n                count += abs(x)\n            else\n    \
    \            count += x\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\ncount_nums([-1, 11, -11])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function count_nums which takes a vector of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1,\
    \ 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp006tbs64.jl:27\nin expression starting at\
    \ /tmp/tmp006tbs64.jl:27\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.0>\ncount_nums([-2,\
    \ -4, -6, -8])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums which\
    \ takes a vector of integers and returns\n    the number of elements which has\
    \ a sum of digits > 0.\n    If a number is negative, then its first signed digit\
    \ will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n\
    \    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n\
    \    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t\
    @test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\
    \t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6,\
    \ 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1])\
    \ == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkqa20__2.jl:22\nin expression starting at\
    \ /tmp/tmpkqa20__2.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for n in arr\n        if n > 0\n            count += 1\n        end\n   \
    \ end\n    return count\nend\n</cell>\n<code language=julia-1.0>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ count_nums which takes a vector of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpao9i049c.jl:22\nin expression starting at\
    \ /tmp/tmpao9i049c.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0\n            count += 1\n        end\n   \
    \ end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -5, -7, -9, -10, -12, -14, -16, -17, -19, -20, -21])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes a vector of integers and returns the number of\
    \ elements which has a sum of digits > 0.\nIf a number is negative, then its first\
    \ signed digit will be negative:\ne.g. -123 has signed digits -1, 2, and 3.\n\
    >>> count_nums([])\n0\n>>> count_nums([-1, 11, -11])\n1\n>>> count_nums([1, 1,\
    \ 2])\n3\n</text>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqrjkni89.jl:22\nin expression starting at\
    \ /tmp/tmpqrjkni89.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<text>\nExercise 4\nWrite a function that\
    \ takes a vector of integers and returns the number of elements which has a sum\
    \ of digits > 0.\nIf a number is negative, then its first signed digit will be\
    \ negative:\ne.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums([])\n0\n\
    >>> count_nums([-1, 11, -11])\n1\n>>> count_nums([1, 1, 2])\n3\n</text>\n<cell>\n\
    using Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp11jb0qlv.jl:22\nin expression starting at\
    \ /tmp/tmp11jb0qlv.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ takes a vector of integers and returns the number of elements which has a sum\
    \ of digits < 0.\nIf a number is negative, then its first signed digit will be\
    \ negative:\ne.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums([])\n0\n\
    >>> count_nums([-1, 11, -11])\n1\n>>> count_nums([1, 1, 2])\n3\n\"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpyxm_kf8t.jl:22\nin expression starting at\
    \ /tmp/tmpyxm_kf8t.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ takes a vector of integers and returns the number of elements which has a sum\
    \ of digits > 0.\nIf a number is negative, then its first signed digit will be\
    \ negative:\ne.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums([])\n0\n\
    >>> count_nums([-1, 11, -11])\n1\n>>> count_nums([1, 1, 2])\n3\n>>> count_nums([1,\
    \ 2, -2, -4, -5, -6, -7, -8])\n2\n>>> count_nums([-1, -4, -5, -6, -7, -8])\n2\n\
    >>> count_nums([-1, -4, -5, -6, -7, -8, 1])\n2\n>>> count_nums([-1, -4, -5, -6,\
    \ -7, -8, 1])\n2\n>>> count_nums([-1, -4, -5, -6, -7, -8, 1])\n2\n>>> count_nums([-1,\
    \ -4, -5, -6, -7, -8, 1])\n2\n>>> count_nums([-1, -4, -5, -6, -7, -8, 1])\n2\n\
    >>> count_nums([-1, -4, -5, -6, -7, -8, 1])\n2\n>>> count_nums([-1, -4, -5, -6,\
    \ -7, -8, 1])\n2\n>>> count_nums([-1, -4, -5, -6, -7, -8, 1])\n2\n>>> count_nums([-1,\
    \ -4, -5, -6, -7, -8, 1])\n2\n>>> count_nums([-1, -4, -5, -6, -7, -8, 1])\n2\n\
    >>> count_nums([-1, -4, -5, -6, -7, -8, 1])\n2\n>>> count_nums([-1, -4, -5, -6,\
    \ -7, -8, 1])\n2\n>>> count_nums([-1, -4, -5, -6, -7, -8, 1])\n2\n>>> count_nums([-1,\
    \ -4, -5, -6, -7, -8, 1])\n2\n>>> count_nums([-1, -4, -5, -6, -7, -8, 1])\n2\n\
    >>> count_nums([-1, -4, -5, -6, -7, -8, 1])\n2\n>>> count_nums([-1, -4, -5, -6,\
    \ -7, -8, 1])\n2\n>>> count_nums([-1, -4, -5, -6, -7, -8, 1])\n2\n>>> count_nums([-1,\
    \ -4, -5, -6, -7, -8, 1])\n2\n>>> count_nums([-1, -4, -5, -6, -\nusing Test\n\n\
    @testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprqu5qm2w.jl:22\nin expression starting at\
    \ /tmp/tmprqu5qm2w.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        else\n \
    \           count += x\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -1, 0, 1, 2])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums\
    \ which takes a vector of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpm0xuvcyd.jl:23\nin expression starting at\
    \ /tmp/tmpm0xuvcyd.jl:23\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 1, 2, -4, -5, -6, -7, -8])\n</cell>\n<code language=julia-1.5>\ncount_nums([-1,\
    \ 11, -11])\n</cell>\n<code language=julia-1.5>\ncount_nums([1, 1, 2])\n</cell>\n\
    <text>\nExercise\nWrite a function that takes a vector of integers and returns\
    \ the number of elements which has a sum of digits > 0.\nIf any number is negative,\
    \ then its first signed digit will be negative:\ne.g. -123 has signed digits -1,\
    \ 2, and 3.\ne.g. -12 has signed digits -1, -2, and -3 \ne.g. -13 has signed digits\
    \ -1, -2, -3, and -4\ne.g. -14 has signed digits -1, -2, -3, -4, and -5\ne.g.\
    \ -15 has signed digits -1, -2, -3, -4, -5, and -6\ne.g. -16 has signed digits\
    \ -1, -2, -3, -4, -5, -6, and -7\ne.g. -17 has signed digits -1, -2, -3, -4, -5,\
    \ -6, -7, and -8\ne.g. -18 has signed digits -1, -2, -3, -4, -5, -6, -7, -8, and\
    \ -9\ne.g. -19 has signed digits -1, -2, -3, -4, -5, -6, -7, -8, 9\ne.g. -20 has\
    \ signed digits -1, -2, -3, -4, -5, -6, -7, -8, 9, and 10\ne.g. -21 has signed\
    \ digits -1, -2, -3, -4, -5, -6, -7, -8, 9, and 10, and 11\ne.g. -22 has signed\
    \ digits -1, -2, -3, -4, -5, -6, -7, -8, 9, and 10, and 11 and 12\ne.g. -23 has\
    \ signed digits -1, -2, -3, -4, -5, -6, -7, -8, 9, and 10, and 11 and 12 and 13\n\
    e.g. -24 has signed digits -1, -2, -3, -4, -5, -6, -7, -8, 9, and 10, and 11 and\
    \ 12 and 13 and 14\ne.g. -25 has signed digits -1, -2, -3, -4, -5, -6, -7, -8,\
    \ 9, and 10, and 11 and 12 and 13 and 14 and 15\ne.g. -26 has signed digits -1,\
    \ -2, -3, -4, -5, -6, -7, -8, 9, and 10, and 11 and 12 and 13 and 14 and 15 and\
    \ 16\ne.g. -27 has signed digits -1, -2, -3, -4, -5, -6, -7, -8, 9, and 10, and\
    \ 11 and 12 and 13 and 14 and 15 and 16 and 17\ne.g. -\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp94_ng3lq.jl:22\nin expression starting at\
    \ /tmp/tmp94_ng3lq.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x < 0\n            count += count_nums(-x)\n   \
    \     else\n            count += 1\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\ncount_nums([-2, -1, 0, 1, 2])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes a vector of integers and returns the number of\
    \ elements which has a sum of digits < 0.\nIf a number is negative, then its first\
    \ signed digit will be negative:\ne.g. -123 has signed digits -1, 2, and 3.\n\
    >>> count_nums([])\n0\n>>> count_nums([-1, 11, -11])\n1\n>>> count_nums([1, 1,\
    \ 2])\n3\n>>> count_nums([-1, -1, 1, -1])\n2\n>>> count_nums([-1, -1, 1, -1, -1,\
    \ 1, -1])\n4\n>>> count_nums([-1, -1, 1, -1, -1, 1, -1, -1, 1, -1])\n8\n>>> count_nums([-1,\
    \ -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1])\n16\n>>> count_nums([-1, -1, 1,\
    \ -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1])\n32\n>>> count_nums([-1, -1,\
    \ 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1])\n64\n>>> count_nums([-1,\
    \ -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1])\n\
    128\n>>> count_nums([-1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1,\
    \ -1, 1, -1, -1, 1, -1, -1, 1, -1])\n256\n>>> count_nums([-1, -1, 1, -1, -1, 1,\
    \ -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1,\
    \ -1])\n512\n>>> count_nums([-1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1,\
    \ 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1])\n1024\n>>> count_nums([-1,\
    \ -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1,\
    \ -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1,\
    \ -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1,\
    \ -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1,\
    \ -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1,\
    \ -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1,\
    \ -1, 1, -1, -1, 1, -1, \nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpezbstrus.jl:23\nin expression starting at\
    \ /tmp/tmpezbstrus.jl:23\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        else\n \
    \           count += x\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -1, 0, 2, -4, -5, -6, -7, -8, -9, -10, -12, -13, -14, -15, -16,\
    \ -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -27, -28, -29, -30, -31, -32,\
    \ -33, -34, -35, -36, -37, -38, -39, -40, -41, -42, -43, -44, -45])\n</cell>\n\
    <code language=julia-1.5>\ncount_nums([-2, -1, 0, 2, -4, -5, -6, -7, -8, -9, -10,\
    \ -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -27,\
    \ -28, -29, -30, -31, -32, -33, -34, -35, -36, -37, -38, -39, -40, -41, -42, -43,\
    \ -44, -45])\n</cell>\n<code language=julia-1.5>\ncount_nums([-2, -1, 0, 2, -4,\
    \ -5, -6, -7, -8, -9, -10, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22,\
    \ -23, -24, -25, -26, -27, -28, -29, -30, -31, -32, -33, -34, -35, -36, -37, -38,\
    \ -39, -40, -41, -42, -43, -44, -45])\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 0, 2, -4, -5, -6, -7, -8, -9, -10, -12, -13, -14, -15, -16, -17, -18, -19,\
    \ -20, -21, -22, -23, -24, -25, -26, -27, -28, -29, -30, -31, -32, -33, -34, -35,\
    \ -36, -37, -38, -39, -40, -41, -42, -43, -44, -45])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -1, 0, 2, -4, -5, -6, -7, -8, -9, -10, -12, -13, -14, -15, -16,\
    \ -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -27, -28, -29, -30, -31, -32,\
    \ -33, -34, -35, -36, -37, -38\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5p94x77v.jl:23\nin expression starting at\
    \ /tmp/tmp5p94x77v.jl:23\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-1,\
    \ 1, -2, 3, -4, -5, -6, -7, -8, -9])\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ count_nums which takes a vector of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnoiiy4zd.jl:22\nin expression starting at\
    \ /tmp/tmpnoiiy4zd.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += x\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-1,\
    \ 1, -2, 2, -3, 3, -4, 4, -5, 5])\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ count_nums which takes a vector of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp13em6pd2.jl:22\nin expression starting at\
    \ /tmp/tmp13em6pd2.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.3>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ count_nums which takes a vector of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7zc_8mh6.jl:22\nin expression starting at\
    \ /tmp/tmp7zc_8mh6.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -4, -6, -10, -12, -14, -16, -18, -21])\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function count_nums which takes a vector of integers and returns\n    the number\
    \ of elements which has a sum of digits > 0.\n    If a number is negative, then\
    \ its first signed digit will be negative:\n    e.g. -123 has signed digits -1,\
    \ 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n\
    \    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwf_mhcfx.jl:22\nin expression starting at\
    \ /tmp/tmpwf_mhcfx.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 0, 2, -4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ count_nums which takes a vector of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpyrzgt7u3.jl:22\nin expression starting at\
    \ /tmp/tmpyrzgt7u3.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        else\n \
    \           if x < 0\n                count += abs(x)\n            else\n    \
    \            count += 1\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\ncount_nums([-1, 1, -2, 2, -3, 3, -4, 4])\n</cell>\n\
    <text>\nExercise 3\nWrite a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7amr6l44.jl:27\nin expression starting at\
    \ /tmp/tmp7amr6l44.jl:27\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        else\n \
    \           count += abs(x)\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -1, 1, 2, -3, 4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 2\n\
    Write a function count_nums which takes a vector of integers and returns\n   \
    \ the number of elements which has a sum of digits > 0.\n    If a number is negative,\
    \ then its first signed digit will be negative:\n    e.g. -123 has signed digits\
    \ -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n\
    \    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3yfhldge.jl:23\nin expression starting at\
    \ /tmp/tmp3yfhldge.jl:23\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += count_nums(div(x, 10))\n\
    \        else\n            count += x\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.3>\ncount_nums([-2, -1, 1, 2, -3, 4, -5, -6, -7, -8])\n\
    </cell>\n<text>\nExercise 2\nWrite a function count_nums which takes a vector\
    \ of integers and returns\n    the number of elements which has a sum of digits\
    \ > 0.\n    If a number is negative, then its first signed digit will be negative:\n\
    \    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n\
    \    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n   \
    \ 3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4sxdypml.jl:23\nin expression starting at\
    \ /tmp/tmp4sxdypml.jl:23\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 1, 4, -5, 6])\n</cell>\n<text>\nExercise 3\nWrite a function count_nums\
    \ which takes a vector of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpikfx231m.jl:22\nin expression starting at\
    \ /tmp/tmpikfx231m.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.0>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 3, -4, 4])\n</cell>\n<text>\nExercise 3\nWrite a function count_nums\
    \ which takes a vector of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpt0vwa9i6.jl:22\nin expression starting at\
    \ /tmp/tmpt0vwa9i6.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += count_nums(digits(x))\n\
    \        else\n            count += count_nums(digits(-x))\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.3>\ncount_nums([-2, -4, -6, -10,\
    \ -12, -14, -16, -18, -21])\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ takes a vector of integers and returns the number of elements which has a sum\
    \ of digits > 0.\nIf a number is negative, then its first signed digit will be\
    \ negative:\ne.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums([])\n0\n\
    >>> count_nums([-1, 11, -11])\n1\n>>> count_nums([1, 1, 2])\n3\n>>> count_nums([1,\
    \ 2, -3, 4])\n2\n>>> count_nums([1, 2, -3, 4, 5])\n4\n>>> count_nums([1, 2, -3,\
    \ 4, -5, 6])\n3\n>>> count_nums([1, 2, -3, 4, -5, 6, -7, 8])\n2\n>>> count_nums([1,\
    \ 2, -3, 4, -5, 6, -7, 8, -9])\n1\n>>> count_nums([1, 2, -3, 4, -5, 6, -7, 8,\
    \ -9, 10])\n1\n>>> count_nums([1, 2, -3, 4, -5, 6, -7, 8, -9, 10, -11])\n2\n>>>\
    \ count_nums([1, 2, -3, 4, -5, 6, -7, 8, -9, 10, -11, 12])\n3\n>>> count_nums([1,\
    \ 2, -3, 4, -5, 6, -7, 8, -9, 10, -11, 12, 13])\n4\n>>> count_nums([1, 2, -3,\
    \ 4, -5, 6, -7, 8, -9, 10, -11, 12, 13, 14])\n5\n>>> count_nums([1, 2, -3, 4,\
    \ -5, 6, -7, 8, -9, 10, -11, 12, 13, 14, 15])\n6\n>>> count_nums([1, 2, -3, 4,\
    \ -5, 6, -7, 8, -9, 10, -11, 12, 13, 14, 15, 16])\n7\n>>> count_nums([1, 2, -3,\
    \ 4, -5, 6, -7, 8, -9, 10, -11, 12, 13, 14, 15, 16, 17])\n8\n>>> count_nums([1,\
    \ 2, -3, 4, -5, 6, -7, 8, -9, 10, -11, 12, 13, 14, 15, 16, 17, 18])\n9\n>>> count_nums([1,\
    \ 2, -3, 4, -5, 6, -7, 8, -9, 10, -11, 12, 13, 14, 15, 16, 17, 18, 19])\n10\n\
    >>> count_nums([1, 2, -3, 4, -5, 6, -7, 8, -9, 10, -11, 12, 13, 14, 15, 16, 17,\
    \ 18, 19, 20])\n11\n>>> count_nums([1, 2, -3, 4, \nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpe68uq5t_.jl:23\nin expression starting at\
    \ /tmp/tmpe68uq5t_.jl:23\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ takes a vector of integers and returns the number of elements which has a sum\
    \ of digits < 0.\nIf a number is negative, then its first signed digit will be\
    \ negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n\
    \    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n\
    \    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t\
    @test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\
    \t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6,\
    \ 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1])\
    \ == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp82nrqbmu.jl:22\nin expression starting at\
    \ /tmp/tmp82nrqbmu.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count_nums(arr,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmphwgqokjq.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmphwgqokjq.jl:21\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == 0\n  MethodError: no method matching\
    \ count_nums(::Vector{Int64}, ::Int64)\n  Closest candidates are:\n    count_nums(::Vector{Int64})\
    \ at /tmp/tmphwgqokjq.jl:13\n  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmphwgqokjq.jl:14\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmphwgqokjq.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmphwgqokjq.jl:20\ntest set:\
    \ Error During Test at /tmp/tmphwgqokjq.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([-1, -2, 0]) == 0\n  MethodError: no method matching count_nums(::Vector{Int64},\
    \ ::Int64)\n  Closest candidates are:\n    count_nums(::Vector{Int64}) at /tmp/tmphwgqokjq.jl:13\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmphwgqokjq.jl:14\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmphwgqokjq.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmphwgqokjq.jl:20\ntest set:\
    \ Error During Test at /tmp/tmphwgqokjq.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  MethodError: no method matching count_nums(::Vector{Int64},\
    \ ::Int64)\n  Closest candidates are:\n    count_nums(::Vector{Int64}) at /tmp/tmphwgqokjq.jl:13\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmphwgqokjq.jl:14\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmphwgqokjq.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test"
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count_nums(arr,\
    \ 0)\nend\n</code>\n<|/ a tags=julia |>\n<| a |>\n<code>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxm3axs0v.jl:16\nin expression starting at\
    \ /tmp/tmpxm3axs0v.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 0, 2, -4, -6, -7, -8])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums\
    \ which takes a vector of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptlw08kdu.jl:22\nin expression starting at\
    \ /tmp/tmptlw08kdu.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ count_nums which takes a vector of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmps7xxxpwf.jl:22\nin expression starting at\
    \ /tmp/tmps7xxxpwf.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0\n            count += 1\n        end\n   \
    \ end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 0, 2, -10, -4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ count_nums which takes a vector of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpar6qvg7i.jl:22\nin expression starting at\
    \ /tmp/tmpar6qvg7i.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for n in arr\n        if n > 0\n            count += 1\n        end\n   \
    \ end\n    return count\nend\n</cell>\n<code language=julia-1.0>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ count_nums which takes a vector of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkosagtrq.jl:22\nin expression starting at\
    \ /tmp/tmpkosagtrq.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.0>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums\
    \ which takes a vector of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpiloeagie.jl:22\nin expression starting at\
    \ /tmp/tmpiloeagie.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-1,\
    \ 1, -2, 2, 3, -3, 4, -4, 5, -5, 6])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a vector of integers and returns the number of elements which has\
    \ a sum of digits < 0.\nIf a number is negative, then its first signed digit will\
    \ be negative:\ne.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums([])\n\
    0\n>>> count_nums([-1, 11, -11])\n1\n>>> count_nums([1, 1, 2])\n3\n>>> count_nums([-1,\
    \ -1, 1, -2, 2, 3, -3, 4, -4, 5, -5, 6])\n4\n\"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0i00hgjv.jl:22\nin expression starting at\
    \ /tmp/tmp0i00hgjv.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.4>\ncount_nums([-2,\
    \ -4, -6, -7, -8])\n</cell>\n<text>\nExercise 3\nWrite a function count_nums which\
    \ takes a vector of integers and returns\n    the number of elements which has\
    \ a sum of digits > 0.\n    If a number is negative, then its first signed digit\
    \ will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n\
    \    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n\
    \    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t\
    @test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\
    \t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6,\
    \ 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1])\
    \ == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppfiidqcp.jl:22\nin expression starting at\
    \ /tmp/tmppfiidqcp.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count_nums =\
    \ sum(x -> x > 0, arr)\n    return count_nums\nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function count_nums which takes a vector of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1,\
    \ 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxgu_jxb0.jl:17\nin expression starting at\
    \ /tmp/tmpxgu_jxb0.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ takes a vector of integers and returns the number of elements which has a sum\
    \ of digits > 0.\nIf a number is negative, then its first signed digit will be\
    \ negative:\ne.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums([])\n0\n\
    >>> count_nums([-1, 11, -11])\n1\n>>> count_nums([1, 1, 2])\n3\n\"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmskgck3b.jl:22\nin expression starting at\
    \ /tmp/tmpmskgck3b.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        elseif x\
    \ < 0\n            count += abs(x)\n        else\n            count += 1\n   \
    \     end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.3>\n\
    count_nums([-2, -4, -6, -10, -12, -14, -16, -18, -21])\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes a vector of integers and returns the number of\
    \ elements which has a sum of digits > 0.\nIf a number is negative, then its first\
    \ signed digit will be negative:\ne.g. -123 has signed digits -1, 2, and 3.\n\
    >>> count_nums([])\n0\n>>> count_nums([-1, 11, -11])\n1\n>>> count_nums([1, 1,\
    \ 2])\n3\n>>> count_nums([1, 2, -3, 4])\n2\n>>> count_nums([-1, -2, -4, -6, -10,\
    \ -12, -14, -16, -18, -21])\n4\n>>> count_nums([-1, -2, -4, -6, -10, -12, -14,\
    \ -16, -18, -21, -24])\n4\n>>> count_nums([-1, -2, -4, -6, -10, -12, -14, -16,\
    \ -18, -21, -24, -26])\n4\n>>> count_nums([-1, -2, -4, -6, -10, -12, -14, -16,\
    \ -18, -21, -24, -26, -28])\n4\n>>> count_nums([-1, -2, -4, -6, -10, -12, -14,\
    \ -16, -18, -21, -24, -26, -28, -32])\n4\n>>> count_nums([-1, -2, -4, -6, -10,\
    \ -12, -14, -16, -18, -21, -24, -26, -28, -32, -34])\n4\n>>> count_nums([-1, -2,\
    \ -4, -6, -10, -12, -14, -16, -18, -21, -24, -26, -28, -32, -34, -36])\n4\n>>>\
    \ count_nums([-1, -2, -4, -6, -10, -12, -14, -16, -18, -21, -24, -26, -28, -32,\
    \ -34, -36, -38])\n4\n>>> count_nums([-1, -2, -4, -6, -10, -12, -14, -16, -18,\
    \ -21, -24, -26, -28, -32, -34, -36, -38, -42])\n4\n>>> count_nums([-1, -2, -4,\
    \ -6, -10, -12, -14, -16, -18, -21, -24, -26, -28, -32, -34, -36, -38, -42, -44])\n\
    4\n>>> count_\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpa916czln.jl:26\nin expression starting at\
    \ /tmp/tmpa916czln.jl:26\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 0, 2, -4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ count_nums which takes a vector of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprhw7vhia.jl:22\nin expression starting at\
    \ /tmp/tmprhw7vhia.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -3, 4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums\
    \ which takes a vector of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpds1f8rp_.jl:22\nin expression starting at\
    \ /tmp/tmpds1f8rp_.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, -10, -100, -1000, -1000000000000])\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function count_nums which takes a vector of integers and returns\n    the number\
    \ of elements which has a sum of digits > 0.\n    If a number is negative, then\
    \ its first signed digit will be negative:\n    e.g. -123 has signed digits -1,\
    \ 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n\
    \    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp02muaa0f.jl:22\nin expression starting at\
    \ /tmp/tmp02muaa0f.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes a vector of integers and returns the number of elements which has a sum\
    \ of digits < 0.\nIf a number is negative, then its first signed digit will be\
    \ negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n\
    \    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n\
    \    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t\
    @test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\
    \t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6,\
    \ 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1])\
    \ == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprbpy5b5m.jl:22\nin expression starting at\
    \ /tmp/tmprbpy5b5m.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count_nums(arr,\
    \ 0)\nend\n</code>\n<|/ a tags=julia |>\n<| c |>\nThis does not work if you have\
    \ a negative number with more than one digit.\n<|/ c |>\n<| c |>\nI added a solution\
    \ that works for negative numbers with more than one digit.\n<|/ c |>\n<| a tags=julia\
    \ |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpyeogj6u_.jl:16\nin expression starting at\
    \ /tmp/tmpyeogj6u_.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -5, -10, -15, -20, -25, -27, -29, -32, -35, -38, -39, -44, -47, -48, -49, -54,\
    \ -55, -57, -58, -59, -62, -64, -66, -68, -71, -73, -74, -76, -78, -79, -84, -87,\
    \ -88, -91, -93, -94, -96])\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ takes a vector of integers and returns the number of elements which has a sum\
    \ of digits < 0.\nIf a number is negative, then its first signed digit will be\
    \ negative:\ne.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums([])\n0\n\
    >>> count_nums([-1, 11, -11])\n1\n>>> count_nums([1, 1, 2])\n3\n\"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpma1vcuc1.jl:22\nin expression starting at\
    \ /tmp/tmpma1vcuc1.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -4, -6, -10, -12, -14, -16, -18])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ count_nums which takes a vector of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphkoxh8x1.jl:22\nin expression starting at\
    \ /tmp/tmphkoxh8x1.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        else\n \
    \           count += x\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -1, 1, 2, -4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 2\n\
    Write a function count_nums which takes a vector of integers and returns\n   \
    \ the number of elements which has a sum of digits > 0.\n    If a number is negative,\
    \ then its first signed digit will be negative:\n    e.g. -123 has signed digits\
    \ -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n\
    \    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpe837fmgc.jl:23\nin expression starting at\
    \ /tmp/tmpe837fmgc.jl:23\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-1,\
    \ 1, -2, 2, 3, -3, 4, -4, 5])\n</cell>\n<text>\nExercise 3\nWrite a function count_nums\
    \ which takes a vector of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpbt3wupig.jl:22\nin expression starting at\
    \ /tmp/tmpbt3wupig.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 3, -4, 4])\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes a vector of integers and returns the number of elements which has a sum\
    \ of digits < 0.\nIf a number is negative, then its first signed digit will be\
    \ negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n\
    \    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n\
    \    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t\
    @test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\
    \t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6,\
    \ 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1])\
    \ == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdua4outh.jl:22\nin expression starting at\
    \ /tmp/tmpdua4outh.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0\n            count += 1\n        end\n   \
    \ end\n    return count\nend\n</cell>\n<code language=julia-1.3>\ncount_nums([-2,\
    \ -1, 0, 2, -4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ count_nums which takes a vector of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgf6ur1zp.jl:22\nin expression starting at\
    \ /tmp/tmpgf6ur1zp.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.4>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ count_nums which takes a vector of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpr17u7pnh.jl:22\nin expression starting at\
    \ /tmp/tmpr17u7pnh.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<text>\nExercise 3\nWrite a function count_nums\
    \ which takes a vector of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpumqun98q.jl:22\nin expression starting at\
    \ /tmp/tmpumqun98q.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 0, 1, 2])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums which\
    \ takes a vector of integers and returns\n    the number of elements which has\
    \ a sum of digits > 0.\n    If a number is negative, then its first signed digit\
    \ will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n\
    \    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n\
    \    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t\
    @test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\
    \t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6,\
    \ 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1])\
    \ == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7t1rm2rl.jl:22\nin expression starting at\
    \ /tmp/tmp7t1rm2rl.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<text>\nExercise 2\nWrite a function count_nums\
    \ which takes a vector of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpbwatab98.jl:22\nin expression starting at\
    \ /tmp/tmpbwatab98.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.3>\ncount_nums([-1,\
    \ 1, -2, 2, 3, -3, 4, -4, 5, -5, 6, -6, 7])\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function count_nums which takes a vector of integers and returns\n    the\
    \ number of elements which has a sum of digits > 0.\n    If a number is negative,\
    \ then its first signed digit will be negative:\n    e.g. -123 has signed digits\
    \ -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n\
    \    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpx3eqji87.jl:22\nin expression starting at\
    \ /tmp/tmpx3eqji87.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.3>\ncount_nums([-1,\
    \ 11, -11])\n</cell>\n<text>\nExercise 3\nWrite a function count_nums which takes\
    \ a vector of integers and returns\n    the number of elements which has a sum\
    \ of digits > 0.\n    If a number is negative, then its first signed digit will\
    \ be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n\
    \    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n\
    \    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t\
    @test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\
    \t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6,\
    \ 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1])\
    \ == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8s0fcdf3.jl:22\nin expression starting at\
    \ /tmp/tmp8s0fcdf3.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-1,\
    \ 1, -2, 2, -3, 3, -4, 4, -5, 5])\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ count_nums which takes a vector of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpi5677q5u.jl:22\nin expression starting at\
    \ /tmp/tmpi5677q5u.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-1,11,-11])\n\
    </cell>\n<text>\nExercise 2\nWrite a function count_nums which takes a vector\
    \ of integers and returns\n    the number of elements which has a sum of digits\
    \ > 0.\n    If a number is negative, then its first signed digit will be negative:\n\
    \    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n\
    \    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n   \
    \ 3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpaftspphp.jl:22\nin expression starting at\
    \ /tmp/tmpaftspphp.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 0, 2, -4, -5, -6, -7, -8, -9, -10, -12, -13, -14, -15, -16, -17, -18])\n\
    </cell>\n<text>\nExercise 2\nWrite a function count_nums which takes a vector\
    \ of integers and returns\n    the number of elements which has a sum of digits\
    \ > 0.\n    If a number is negative, then its first signed digit will be negative:\n\
    \    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n\
    \    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n   \
    \ 3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwgsdad9s.jl:22\nin expression starting at\
    \ /tmp/tmpwgsdad9s.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.0>\ncount_nums([-2,\
    \ -5, -10, -15, -20, -25, -27, -29, -32, -35, -38, -39, -44, -49, -50, -51])\n\
    </cell>\n<text>\nExercise 2\nWrite a function count_nums which takes a vector\
    \ of integers and returns\n    the number of elements which has a sum of digits\
    \ > 0.\n    If a number is negative, then its first signed digit will be negative:\n\
    \    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n\
    \    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n   \
    \ 3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxfwaxp45.jl:22\nin expression starting at\
    \ /tmp/tmpxfwaxp45.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for n in arr\n        if n > 0\n            count += n\n        end\n   \
    \ end\n    return count\nend\n</cell>\n<code language=julia-1.0>\ncount_nums([-1,\
    \ 1, -2, 2, 3, -3, 4, -4, 5, -5, 6])\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ count_nums which takes a vector of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqqwog_ft.jl:22\nin expression starting at\
    \ /tmp/tmpqqwog_ft.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ takes a vector of integers and returns the number of elements which has a sum\
    \ of digits < 0.\nIf a number is negative, then its first signed digit will be\
    \ negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n\
    \    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n\
    \    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t\
    @test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\
    \t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6,\
    \ 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1])\
    \ == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp82nrqbmu.jl:22\nin expression starting at\
    \ /tmp/tmp82nrqbmu.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0\n            count += 1\n        end\n   \
    \ end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-1,\
    \ 1, -2, 2, 3, -3, 4, -4, 5, -5, 6, -6, 7])\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function count_nums which takes a vector of integers and returns\n    the\
    \ number of elements which has a sum of digits > 0.\n    If a number is negative,\
    \ then its first signed digit will be negative:\n    e.g. -123 has signed digits\
    \ -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n\
    \    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3zji5qu1.jl:22\nin expression starting at\
    \ /tmp/tmp3zji5qu1.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 3, -4, 4])\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes a vector of integers and returns the number of elements which has a sum\
    \ of digits < 0.\nIf a number is negative, then its first signed digit will be\
    \ negative:\ne.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums([])\n0\n\
    >>> count_nums([-1, 11, -11])\n1\n>>> count_nums([1, 1, 2])\n3\n>>> count_nums([-1,\
    \ -1, 1, 2, -3, 3, -4, 4])\n4\n\"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp33fb3xjv.jl:22\nin expression starting at\
    \ /tmp/tmp33fb3xjv.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x < 0\n            count += abs(x)\n        else\n\
    \            count += 1\n    end\n    return count\nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes a vector of integers and returns the number of\
    \ elements which has a sum of digits > 0.\nIf no number is positive, then the\
    \ function should return 0.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1,\
    \ 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n    >>> count_nums([1,\
    \ 2, 3])\n    0\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpsrn3pu80.jl:23\nin expression starting at\
    \ /tmp/tmpsrn3pu80.jl:23\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        else\n \
    \           count += x\n    end\n    return count\nend\n</cell>\n<code language=julia-1.0>\n\
    count_nums([-2, -1, 1, 2, -3, 4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 2\n\
    Write a function count_nums which takes a vector of integers and returns\n   \
    \ the number of elements which has a sum of digits > 0.\n    If a number is negative,\
    \ then its first signed digit will be negative:\n    e.g. -123 has signed digits\
    \ -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n\
    \    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpg8q7lg_u.jl:23\nin expression starting at\
    \ /tmp/tmpg8q7lg_u.jl:23\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 0, 2, -4, -6, -7, -8])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums\
    \ which takes a vector of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptlw08kdu.jl:22\nin expression starting at\
    \ /tmp/tmptlw08kdu.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        else\n \
    \           count += count_nums(x::Vector{Int64})\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-1,11,-11])\n</cell>\n\
    <text>\nExercise 2\nWrite a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppg_mzls0.jl:24\nin expression starting at\
    \ /tmp/tmppg_mzls0.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<text>\nExercise 3\nWrite a function count_nums\
    \ which takes a vector of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpumqun98q.jl:22\nin expression starting at\
    \ /tmp/tmpumqun98q.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-1,\
    \ 1, -2, 2, -3, 3, -4, 4, -5, 5])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a vector of integers and returns the number of elements which has\
    \ a sum of digits < 0.\nIf a number is negative, then its first signed digit will\
    \ be negative:\ne.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums([])\n\
    0\n>>> count_nums([-1, 11, -11])\n1\n>>> count_nums([1, 1, 2])\n3\n>>> count_nums([1,\
    \ 2, -3, 4, -5, 6])\n2\n>>> count_nums([1, 2, -3, 4, -5, 6, -7, 8])\n2\n>>> count_nums([1,\
    \ 2, -3, 4, -5, 6, -7, 8, -9])\n2\n>>> count_nums([1, 2, -3, 4, -5, 6, -7, 8,\
    \ -9, 10])\n2\n>>> count_nums([1, 2, -3, 4, -5, 6, -7, 8, -9, 10, -11])\n2\n>>>\
    \ count_nums([1, 2, -3, 4, -5, 6, -7, 8, -9, 10, -11, 12])\n2\n>>> count_nums([1,\
    \ 2, -3, 4, -5, 6, -7, 8, -9, 10, -11, 12, -13])\n2\n>>> count_nums([1, 2, -3,\
    \ 4, -5, 6, -7, 8, -9, 10, -11, 12, -13, -14])\n2\n>>> count_nums([1, 2, -3, 4,\
    \ -5, 6, -7, 8, -9, 10, -11, 12, -13, -14, -15])\n2\n>>> count_nums([1, 2, -3,\
    \ 4, -5, 6, -7, 8, -9, 10, -11, 12, -13, -14, -15, -16])\n2\n>>> count_nums([1,\
    \ 2, -3, 4, -5, 6, -7, 8, -9, 10, -11, 12, -13, -14, -15, -16, -17])\n2\n>>> count_nums([1,\
    \ 2, -3, 4, -5, 6, -7, 8, -9, 10, -11, 12, -13, -14, -15, -16, -17, -18])\n2\n\
    >>> count_nums([1, 2, -3, 4, -5, 6, -7, 8, -9, 10, -11, 12, -13, -14, -15, -16,\
    \ -17, -18, -19])\n2\n>>> count_nums([1, 2, -3, 4, -5, 6, -7, 8, -9, 10, -11,\
    \ 12, -13, -14, -15, -16, -17, -18, -19, -20])\n2\n>>> count_nums([1, 2, -3, 4,\
    \ -5, 6, -7, 8, -9, 10, -11, 12, -13, -14, -15, -\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxgrhmyuo.jl:22\nin expression starting at\
    \ /tmp/tmpxgrhmyuo.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ takes a vector of integers and returns the number of elements which has a sum\
    \ of digits > 0.\nIf a number is negative, then its first signed digit will be\
    \ negative:\ne.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums([])\n0\n\
    >>> count_nums([-1, 11, -11])\n1\n>>> count_nums([1, 1, 2])\n3\n\"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmskgck3b.jl:22\nin expression starting at\
    \ /tmp/tmpmskgck3b.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for n in arr\n        if n > 0\n            count += 1\n        end\n   \
    \ end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-1,\
    \ 1, -2, 3, -4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ count_nums which takes a vector of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpugpp_pt_.jl:22\nin expression starting at\
    \ /tmp/tmpugpp_pt_.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -4, -6, -10, -12, -14, -16, -18, -21])\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that takes a vector of integers and returns the number of elements\
    \ which has a sum of digits < 0.\nIf a number is negative, then its first signed\
    \ digit will be negative:\ne.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums([])\n\
    0\n>>> count_nums([-1, 11, -11])\n1\n>>> count_nums([1, 1, 2])\n3\n>>> count_nums([1,\
    \ 2, 3])\n0\n>>> count_nums([-1, 2, -3])\n2\n>>> count_nums([-1, 2, -3, 4])\n\
    2\n>>> count_nums([-1, 2, -3, 4, 5])\n3\n>>> count_nums([-1, 2, -3, 4, 5, 6])\n\
    4\n>>> count_nums([-1, 2, -3, 4, 5, 6, 7])\n5\n>>> count_nums([-1, 2, -3, 4, 5,\
    \ 6, 7, 8])\n6\n>>> count_nums([-1, 2, -3, 4, 5, 6, 7, 8, 9])\n7\n>>> count_nums([-1,\
    \ 2, -3, 4, 5, 6, 7, 8, 9, 10])\n8\n>>> count_nums([-1, 2, -3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11])\n9\n>>> count_nums([-1, 2, -3, 4, 5, 6, 7, 8, 9, 10, 11, 12])\n\
    10\n>>> count_nums([-1, 2, -3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13])\n11\n>>> count_nums([-1,\
    \ 2, -3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14])\n12\n>>> count_nums([-1, 2, -3,\
    \ 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15])\n13\n>>> count_nums([-1, 2, -3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16])\n14\n>>> count_nums([-1, 2, -3,\
    \ 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17])\n15\n>>> count_nums([-1,\
    \ 2, -3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18])\n16\n>>> count_nums([-1,\
    \ 2, -3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19])\n17\n>>> count_nums([-1,\
    \ 2, -3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20])\n18\n\
    >>> count_nums([-1, 2, -3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\
    \ 19, 20, 21])\n19\n>>> count_nums([-1, 2, -3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13,\
    \ 14, 15, 16, 17, 18, 19, 20, 21, 22])\n20\n>>> count_nums([-1, 2, -3, 4, 5, \n\
    using Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2dl39sak.jl:22\nin expression starting at\
    \ /tmp/tmp2dl39sak.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<text>\nExercise 2\nWrite a function count_nums\
    \ which takes a vector of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpbwatab98.jl:22\nin expression starting at\
    \ /tmp/tmpbwatab98.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        else\n \
    \           count += x\n    end\n    return count\nend\n</cell>\n<code language=julia-1.0>\n\
    count_nums([-2, -1, 0, 2, -4, -6, -7, -8])\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function count_nums which takes a vector of integers and returns\n    the\
    \ number of elements which has a sum of digits > 0.\n    If a number is negative,\
    \ then its first signed digit will be negative:\n    e.g. -123 has signed digits\
    \ -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n\
    \    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4kzsd20v.jl:23\nin expression starting at\
    \ /tmp/tmp4kzsd20v.jl:23\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for n in arr\n        if n > 0\n            count += 1\n        end\n   \
    \ end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -4, -6, -10, -12, -14, -16, -18, -21])\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function count_nums which takes a vector of integers and returns\n    the number\
    \ of elements which has a sum of digits > 0.\n    If a number is negative, then\
    \ its first signed digit will be negative:\n    e.g. -123 has signed digits -1,\
    \ 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n\
    \    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpced8g568.jl:22\nin expression starting at\
    \ /tmp/tmpced8g568.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 0, 1, 2])\n</cell>\n<text>\nExercise 3\nWrite a function that takes a vector\
    \ of integers and returns the number of elements which has a sum of digits < 0.\n\
    If a number is negative, then its first signed digit will be negative:\ne.g. -123\
    \ has signed digits -1, 2, and 3.\n>>> count_nums([])\n0\n>>> count_nums([-1,\
    \ 11, -11])\n1\n>>> count_nums([1, 1, 2])\n3\n\"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5vqy__bb.jl:22\nin expression starting at\
    \ /tmp/tmp5vqy__bb.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -4, -6, -8])\n</cell>\n<code language=julia-1.5>\ncount_nums([-2, -4, -6, -8,\
    \ 10])\n</cell>\n<code language=julia-1.5>\ncount_nums([-2, -4, -6, -8, 10, -20,\
    \ -30])\n</cell>\n<text>\nExercise\nWrite a function count_nums which takes a\
    \ vector of integers and returns\n    the number of elements which has a sum of\
    \ digits > 0.\n    If a number is negative, then its first signed digit will be\
    \ negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n\
    \    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n\
    \    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t\
    @test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\
    \t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6,\
    \ 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1])\
    \ == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4ixl59rl.jl:22\nin expression starting at\
    \ /tmp/tmp4ixl59rl.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x < 0\n            count += count_nums(abs(x))\n\
    \        else\n            count += 1\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\ncount_nums([-1,11,-11])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes a vector of integers and returns the number of\
    \ elements which has a sum of digits > 0.\nIf a number is negative, then its first\
    \ signed digit will be negative:\ne.g. -123 has signed digits -1, 2, and 3.\n\
    e.g. -12 has signed digits -1, -2, and -3.\ne.g. -13 has signed digits -1, -2,\
    \ -3, and 4.\ne.g. -14 has signed digits -1, -2, -3, -4, and 5.\ne.g. -15 has\
    \ signed digits -1, -2, -3, -4, -5, and 6.\ne.g. -16 has signed digits -1, -2,\
    \ -3, -4, -5, -6, and 7.\ne.g. -17 has signed digits -1, -2, -3, -4, -5, -6, -7,\
    \ and 8.\ne.g. -18 has signed digits -1, -2, -3, -4, -5, -6, -7, -8, and 9.\n\
    e.g. -19 has signed digits -1, -2, -3, -4, -5, -6, -7, -8, -9, and 10.\ne.g. -20\
    \ has signed digits -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, and 11.\ne.g. -21\
    \ has signed digits -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, and 12.\ne.g.\
    \ -22 has signed digits -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, and 13.\n\
    e.g. -23 has signed digits -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12,\
    \ and 14.\ne.g. -24 has signed digits -1, -2, -3, -4, -5, -6, -7, -8, -9, -10,\
    \ -11, -12, and -13.\ne.g. -25 has signed digits -1, -2, -3, -4, -5, -6, -7, -8,\
    \ -9, -10, -11, -12, and -14.\ne.g. -26 has signed digits -1, -2, -3, -4, -5,\
    \ -6, -7, -8, -9, -10, -11, -12, and -15.\ne.g. -27 has signed digits -1, -2,\
    \ -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, and -16.\ne.g. -28 has signed digits\
    \ -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, and -17.\ne.g. -29 has signed\
    \ digits -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpuv4fbeh0.jl:23\nin expression starting at\
    \ /tmp/tmpuv4fbeh0.jl:23\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.3>\ncount_nums([-1,11,-11])\n\
    </cell>\n<text>\nExercise 2\nWrite a function count_nums which takes a vector\
    \ of integers and returns\n    the number of elements which has a sum of digits\
    \ > 0.\n    If a number is negative, then its first signed digit will be negative:\n\
    \    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n\
    \    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n   \
    \ 3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1hrq95pm.jl:22\nin expression starting at\
    \ /tmp/tmp1hrq95pm.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 0, 1, 2])\n</cell>\n<text>\nExercise 2\nWrite a function that takes a vector\
    \ of integers and returns the number of elements which has a sum of digits > 0.\n\
    If a number is negative, then its first signed digit will be negative:\ne.g. -123\
    \ has signed digits -1, 2, and 3.\n>>> count_nums([])\n0\n>>> count_nums([-1,\
    \ 11, -11])\n1\n>>> count_nums([1, 1, 2])\n3\n</text>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpn9fpksck.jl:22\nin expression starting at\
    \ /tmp/tmpn9fpksck.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x < 0\n            count += abs(x)\n        else\n\
    \            count += 1\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -5, -7, -9, -10, -12, -15, -16, -17, -18])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function count_nums which takes a vector of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1,\
    \ 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmtxq_kae.jl:23\nin expression starting at\
    \ /tmp/tmpmtxq_kae.jl:23\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 0, 1, 2])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums which\
    \ takes a vector of integers and returns\n    the number of elements which has\
    \ a sum of digits > 0.\n    If a number is negative, then its first signed digit\
    \ will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n\
    \    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n\
    \    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t\
    @test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\
    \t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6,\
    \ 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1])\
    \ == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7t1rm2rl.jl:22\nin expression starting at\
    \ /tmp/tmp7t1rm2rl.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0\n            count += 1\n        end\n   \
    \ end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-1,11,-11])\n\
    </cell>\n<text>\nExercise 3\nWrite a function count_nums which takes a vector\
    \ of integers and returns\n    the number of elements which has a sum of digits\
    \ > 0.\n    If a number is negative, then its first signed digit will be negative:\n\
    \    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n\
    \    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n   \
    \ 3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8k751s__.jl:22\nin expression starting at\
    \ /tmp/tmp8k751s__.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.4>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ count_nums which takes a vector of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzj4m8697.jl:22\nin expression starting at\
    \ /tmp/tmpzj4m8697.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.4>\ncount_nums([-2,\
    \ -4, -6, -10, -12, -14, -16, -18, -20, -22, -24])\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function count_nums which takes a vector of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1,\
    \ 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvx01hb11.jl:22\nin expression starting at\
    \ /tmp/tmpvx01hb11.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<text>\nExercise 4\nWrite a function count_nums\
    \ which takes a vector of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4xs2sk30.jl:22\nin expression starting at\
    \ /tmp/tmp4xs2sk30.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4, -5, 6])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums\
    \ which takes a vector of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppn6wr1rp.jl:22\nin expression starting at\
    \ /tmp/tmppn6wr1rp.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ count_nums which takes a vector of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpycijd5dc.jl:22\nin expression starting at\
    \ /tmp/tmpycijd5dc.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        else\n \
    \           if x < 0\n                count += abs(x)\n            else\n    \
    \            count += x\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\ncount_nums([-1, 11, -11])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function count_nums which takes a vector of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1,\
    \ 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp006tbs64.jl:27\nin expression starting at\
    \ /tmp/tmp006tbs64.jl:27\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-1,\
    \ 1, -2, 3, -4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ count_nums which takes a vector of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpe01p62m4.jl:22\nin expression starting at\
    \ /tmp/tmpe01p62m4.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<text>\nExercise 3\nWrite a function count_nums\
    \ which takes a vector of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpumqun98q.jl:22\nin expression starting at\
    \ /tmp/tmpumqun98q.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        else\n \
    \           count += count_nums(x::Vector{Int64})\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2, -1, 0, 2, -10,\
    \ -12, -13, -14, -15, -16, -17, 18])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ count_nums which takes a vector of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwpcy8klf.jl:24\nin expression starting at\
    \ /tmp/tmpwpcy8klf.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -4, -6, -10, -12, -14, -16, -18, -21])\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function count_nums which takes a vector of integers and returns\n    the number\
    \ of elements which has a sum of digits > 0.\n    If a number is negative, then\
    \ its first signed digit will be negative:\n    e.g. -123 has signed digits -1,\
    \ 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n\
    \    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwf_mhcfx.jl:22\nin expression starting at\
    \ /tmp/tmpwf_mhcfx.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        else\n \
    \           count += count_nums(x::Vector{Int64})\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2, -1, 1, 2, -3,\
    \ 4, -5, 6])\n</cell>\n<text>\nExercise 2\nWrite a function that takes a vector\
    \ of integers and returns the number of elements which has a sum of digits < 0.\n\
    If a number is negative, then its first signed digit will be negative:\ne.g. -123\
    \ has signed digits -1, 2, and 3.\n>>> count_nums([])\n0\n>>> count_nums([-1,\
    \ 11, -11])\n1\n>>> count_nums([1, 1, 2])\n3\n\"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvz2__9st.jl:24\nin expression starting at\
    \ /tmp/tmpvz2__9st.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<text>\nExercise 3\nWrite a function count_nums\
    \ which takes a vector of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpumqun98q.jl:22\nin expression starting at\
    \ /tmp/tmpumqun98q.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0\n            count += 1\n        end\n   \
    \ end\n    return count\nend\n</cell>\n<code language=julia-1.0>\ncount_nums([-1,11,-11])\n\
    </cell>\n<text>\nExercise 3\nWrite a function count_nums which takes a vector\
    \ of integers and returns\n    the number of elements which has a sum of digits\
    \ > 0.\n    If a number is negative, then its first signed digit will be negative:\n\
    \    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n\
    \    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n   \
    \ 3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7j84z0no.jl:22\nin expression starting at\
    \ /tmp/tmp7j84z0no.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<text>\nExercise 3: Write a function that\
    \ takes a vector of integers and returns the number of elements which has a sum\
    \ of digits < 0.\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n\
    \    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n\
    \    2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t\
    @test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\
    \t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6,\
    \ 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1])\
    \ == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5ozk17l5.jl:22\nin expression starting at\
    \ /tmp/tmp5ozk17l5.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -3, 4, -5, -6, -7, -8, 9, -10, -12, -13, -14, -15, -16, -17, -18, -19, -20,\
    \ -21])\n</cell>\n<text>\nExercise 3\nWrite a function count_nums which takes\
    \ a vector of integers and returns\n    the number of elements which has a sum\
    \ of digits > 0.\n    If a number is negative, then its first signed digit will\
    \ be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n\
    \    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n\
    \    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t\
    @test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\
    \t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6,\
    \ 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1])\
    \ == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5gi_d13g.jl:22\nin expression starting at\
    \ /tmp/tmp5gi_d13g.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x < 0\n            count += count_nums(x::Vector{Int64})\n\
    \        else\n            count += 1\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\ncount_nums([-1, 1, -2, 3, -4, 5, -6, -7, -8, -9])\n\
    </cell>\n<text>\nExercise 3\nWrite a function count_nums which takes a vector\
    \ of integers and returns\n    the number of elements which has a sum of digits\
    \ > 0.\n    If a number is negative, then its first signed digit will be negative:\n\
    \    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n\
    \    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n   \
    \ 3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7iisx8_z.jl:23\nin expression starting at\
    \ /tmp/tmp7iisx8_z.jl:23\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 0, 2, -4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes a vector of integers and returns the number of elements which has\
    \ a sum of digits < 0.\nIf a number is negative, then its first signed digit will\
    \ be negative:\ne.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums([])\n\
    0\n>>> count_nums([-1, 11, -11])\n1\n>>> count_nums([1, 1, 2])\n3\n\"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp002i7num.jl:22\nin expression starting at\
    \ /tmp/tmp002i7num.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-1,11,-11])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([1,1,2])\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns the number of elements in a vector which has\
    \ a sum of digits > 0.\nIf no number has a sum of digits > 0, then return 0.\n\
    e.g. [1, 1, 2] has 3 elements with a sum of digits > 0.\n[1, 1, 0] has 0 elements\
    \ with a sum of digits > 0.\n[1, 1, -1] has 1 elements with a sum of digits >\
    \ 0.\n[1, 1, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,\
    \ -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,\
    \ -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,\
    \ -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,\
    \ -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,\
    \ -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,\
    \ -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,\
    \ -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,\
    \ -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,\
    \ -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,\
    \ -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,\
    \ -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, \n\
    using Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6wddm3ng.jl:22\nin expression starting at\
    \ /tmp/tmp6wddm3ng.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -4, -6, -7, -8])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums which\
    \ takes a vector of integers and returns\n    the number of elements which has\
    \ a sum of digits > 0.\n    If a number is negative, then its first signed digit\
    \ will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n\
    \    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n\
    \    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t\
    @test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\
    \t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6,\
    \ 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1])\
    \ == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpyasm9nak.jl:22\nin expression starting at\
    \ /tmp/tmpyasm9nak.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 1, 2, -4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ count_nums which takes a vector of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkh141ghx.jl:22\nin expression starting at\
    \ /tmp/tmpkh141ghx.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x < 0\n            sign = -sign(x)\n           \
    \ x = abs(x)\n        end\n        if x > 0\n            count += 1\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.3>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4, -5, -6, -7, -8, -9])\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function count_nums which takes a vector of integers and returns\n    the number\
    \ of elements which has a sum of digits > 0.\n    If a number is negative, then\
    \ its first signed digit will be negative:\n    e.g. -123 has signed digits -1,\
    \ 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n\
    \    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdiuatvp0.jl:26\nin expression starting at\
    \ /tmp/tmpdiuatvp0.jl:26\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums\
    \ which takes a vector of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphi7wn27m.jl:22\nin expression starting at\
    \ /tmp/tmphi7wn27m.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.0>\ncount_nums([-2,\
    \ -1, 0, 2, -4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ count_nums which takes a vector of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphdg2vtzp.jl:22\nin expression starting at\
    \ /tmp/tmphdg2vtzp.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.3>\ncount_nums([-2,\
    \ -1, 1, 2, -10, -100, -1000, -1001])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ count_nums which takes a vector of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkplaxij1.jl:22\nin expression starting at\
    \ /tmp/tmpkplaxij1.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 0, 1, 2])\n</cell>\n<text>\nExercise 3\nWrite a function count_nums which\
    \ takes a vector of integers and returns\n    the number of elements which has\
    \ a sum of digits > 0.\n    If a number is negative, then its first signed digit\
    \ will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n\
    \    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n\
    \    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t\
    @test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\
    \t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6,\
    \ 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1])\
    \ == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpn2_hb1ff.jl:22\nin expression starting at\
    \ /tmp/tmpn2_hb1ff.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        else\n \
    \           count += x\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -1, 0, 1, 2])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums\
    \ which takes a vector of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpm0xuvcyd.jl:23\nin expression starting at\
    \ /tmp/tmpm0xuvcyd.jl:23\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-1,\
    \ 1, -2, 3, -4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ count_nums which takes a vector of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpe01p62m4.jl:22\nin expression starting at\
    \ /tmp/tmpe01p62m4.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<text>\nExercise 2\nWrite a function count_nums\
    \ which takes a vector of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpbwatab98.jl:22\nin expression starting at\
    \ /tmp/tmpbwatab98.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += count_nums(digits(x))\n\
    \        else\n            count += count_nums(digits(-x))\n    end\n    return\
    \ count\nend\n</cell>\n<text>\nExercise 2\nWrite a function count_nums which takes\
    \ a vector of integers and returns\n    the number of elements which has a sum\
    \ of digits > 0.\n    If a number is negative, then its first signed digit will\
    \ be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n\
    \    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n\
    \    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t\
    @test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\
    \t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6,\
    \ 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1])\
    \ == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpp8opv_8n.jl:23\nin expression starting at\
    \ /tmp/tmpp8opv_8n.jl:23\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 0, 1, 2])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums which\
    \ takes a vector of integers and returns\n    the number of elements which has\
    \ a sum of digits > 0.\n    If a number is negative, then its first signed digit\
    \ will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n\
    \    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n\
    \    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t\
    @test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\
    \t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6,\
    \ 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1])\
    \ == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7t1rm2rl.jl:22\nin expression starting at\
    \ /tmp/tmp7t1rm2rl.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0\n            count += 1\n        end\n   \
    \ end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 0, 1, 2])\n</cell>\n<text>\nExercise 3\nWrite a function count_nums which\
    \ takes a vector of integers and returns\n    the number of elements which has\
    \ a sum of digits > 0.\n    If a number is negative, then its first signed digit\
    \ will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n\
    \    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n\
    \    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t\
    @test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\
    \t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6,\
    \ 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1])\
    \ == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpp4qeeoa3.jl:22\nin expression starting at\
    \ /tmp/tmpp4qeeoa3.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 0, 2, -4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a vector of integers and returns the number of elements which has\
    \ a sum of digits > 0.\nIf no number is negative, then the function should return\
    \ 0.\ne.g. [1, 1, 2] has signed digits 1, 2, and 3.\n>>> count_nums([1, 1, 2])\n\
    3\n>>> count_nums([])\n0\n>>> count_nums([-1, 11, -11])\n1\n>>> count_nums([-1,\
    \ 11, -12, -13, -14, -15, -16, -17, -18])\n4\n>>> count_nums([-1, 11, -12, -13,\
    \ -14, -15, -16, -17, -18, -19])\n5\n>>> count_nums([-1, 11, -12, -13, -14, -15,\
    \ -16, -17, -18, -19, -20, -21])\n6\n>>> count_nums([-1, 11, -12, -13, -14, -15,\
    \ -16, -17, -18, -19, -20, -21, -22])\n7\n>>> count_nums([-1, 11, -12, -13, -14,\
    \ -15, -16, -17, -18, -19, -20, -21, -22, -23])\n8\n>>> count_nums([-1, 11, -12,\
    \ -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24])\n9\n>>> count_nums([-1,\
    \ 11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25])\n\
    10\n>>> count_nums([-1, 11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21,\
    \ -22, -23, -24, -25, -26])\n11\n>>> count_nums([-1, 11, -12, -13, -14, -15, -16,\
    \ -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -27])\n12\n>>> count_nums([-1,\
    \ 11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26,\
    \ -27, -28])\n13\n>>> count_nums([-1, 11, -12, -13, -14, -15, -16, -17, -18, -19,\
    \ -20, -21, -22, -23, -24, -25, -26, -27, -28, -29])\n14\n>>> count_num\nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpe9w0qgso.jl:22\nin expression starting at\
    \ /tmp/tmpe9w0qgso.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x < 0\n            sign = sign(x)\n            x\
    \ = abs(x)\n        end\n        if x > 0\n            count += 1\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.3>\ncount_nums([-1,\
    \ 1, -2, 2, 3, -3, 4, -4, 5])\n</cell>\n<text>\nExercise 3\nWrite a function count_nums\
    \ which takes a vector of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgwk8hfc1.jl:26\nin expression starting at\
    \ /tmp/tmpgwk8hfc1.jl:26\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 3, -4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function count_nums which takes a vector of integers and returns\n    the number\
    \ of elements which has a sum of digits > 0.\n    If a number is negative, then\
    \ its first signed digit will be negative:\n    e.g. -123 has signed digits -1,\
    \ 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n\
    \    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7ki3b_xc.jl:22\nin expression starting at\
    \ /tmp/tmp7ki3b_xc.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += count_nums(x::Vector{Int64})\n\
    \        else\n            count += count_nums(x::Vector{Int64}) + count_nums(-x::Vector{Int64})\n\
    \        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.4>\n\
    count_nums([-2, -1, 1, 2, -3, 4, -5, 6])\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that takes a vector of integers and returns the number of elements\
    \ which has a sum of digits > 0.\nIf a number is negative, then its first signed\
    \ digit will be negative:\ne.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums([])\n\
    0\n>>> count_nums([-1, 11, -11])\n1\n>>> count_nums([1, 1, 2])\n3\n</text>\n<code\
    \ language=julia-1.4>\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpb3_a12g6.jl:24\nin expression starting at\
    \ /tmp/tmpb3_a12g6.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4, -5, 6])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums\
    \ which takes a vector of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppn6wr1rp.jl:22\nin expression starting at\
    \ /tmp/tmppn6wr1rp.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        else\n \
    \           count += x\n    end\n    return count\nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes a vector of integers and returns the number of\
    \ elements which has a sum of digits > 0.\nIf a number is negative, then its first\
    \ signed digit will be negative:\ne.g. -123 has signed digits -1, 2, and 3.\n\
    >>> count_nums([])\n0\n>>> count_nums([-1, 11, -11])\n1\n>>> count_nums([1, 1,\
    \ 2])\n3\n</text>\n<text>\nExercise 4\nWrite a function that takes a vector of\
    \ integers and returns the number of elements which has a sum of digits > 0.\n\
    If a number is negative, then its first signed digit will be negative:\ne.g. -123\
    \ has signed digits -1, 2, and 3.\n>>> count_nums([])\n0\n>>> count_nums([-1,\
    \ 11, -11])\n1\n>>> count_nums([1, 1, 2])\n3\n</text>\n<text>\nExercise 5\nWrite\
    \ a function that takes a vector of integers and returns the number of elements\
    \ which has a sum of digits > 0.\nIf a number is negative, then its first signed\
    \ digit will be negative:\ne.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums([])\n\
    0\n>>> count_nums([-1, 11, -11])\n1\n>>> count_nums([1, 1, 2])\n3\n</text>\n<text>\n\
    Exercise 6\nWrite a function that takes a vector of integers and returns the number\
    \ of elements which has a sum of digits > 0.\nIf a number is negative, then its\
    \ first signed digit will be negative:\ne.g. -123 has signed digits -1, 2, and\
    \ 3.\n>>> count_nums([])\n0\n>>> count_nums([-1, 11, -11])\n1\n>>> count_nums([1,\
    \ 1, 2])\n3\n</text>\n<text>\nExercise 7\nWrite a function that takes a vector\
    \ of integers and returns the number of elements which has a sum of digits > 0.\n\
    If a number is negative, then its first signed digit will be negative:\ne.g. -123\
    \ has signed digits -1, 2, and 3.\n>>> count_nums([])\n0\n>>> count_nums([-1,\
    \ 11, -11])\n1\n>>> count_nums([1, 1, 2])\n3\n</text>\n<text>\nExercise 8\nWrite\
    \ a function that takes a vector of integers and returns the number of elements\
    \ which has a sum of digits > 0.\nIf a number is negative, then its first signed\
    \ digit will be negative:\ne.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums([])\n\
    0\n>>> count_nums([-1, 11, -11])\n1\n>>> count_nums([1, 1, 2])\n3\n</text>\n<text>\n\
    Exercise 9\nWrite a function that takes a vector of integers and returns the number\
    \ of elements which has a \nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpt73u4w_0.jl:23\nin expression starting at\
    \ /tmp/tmpt73u4w_0.jl:23\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 0, 1, 2])\n</cell>\n<text>\nExercise 3\nWrite a function count_nums which\
    \ takes a vector of integers and returns\n    the number of elements which has\
    \ a sum of digits > 0.\n    If a number is negative, then its first signed digit\
    \ will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n\
    \    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n\
    \    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t\
    @test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\
    \t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6,\
    \ 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1])\
    \ == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpn2_hb1ff.jl:22\nin expression starting at\
    \ /tmp/tmpn2_hb1ff.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes a vector of integers and returns the number of elements which has a sum\
    \ of digits < 0.\nIf a number is negative, then its first signed digit will be\
    \ negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n\
    \    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n\
    \    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t\
    @test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\
    \t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6,\
    \ 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1])\
    \ == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprbpy5b5m.jl:22\nin expression starting at\
    \ /tmp/tmprbpy5b5m.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count_nums =\
    \ 0 \n    for x in arr \n        if x > 0 \n            count_nums += 1 \n   \
    \     else \n            count_nums += count_nums(x::Vector{Int64}) - 1 \n   \
    \ end\n    return count_nums\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -3, 4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 3\nWrite a function count_nums\
    \ which takes a vector of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprv4ku4l6.jl:23\nin expression starting at\
    \ /tmp/tmprv4ku4l6.jl:23\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count_nums(arr,\
    \ 0, 0)\nend\n</code>\n<|/ a tags=julia,arrays |>\n<| c |>\nThanks for your answer.\
    \ I am not allowed to use any packages other than Base.\n<|/ c |>\n<| c |>\nI\
    \ edited my answer to include a solution that does not use any packages.\n<|/\
    \ c |>\n<| c |>\nThanks for your answer. I tried your solution and it works. But\
    \ I still don't understand why my code doesn't work. Could you please explain\
    \ to me why my code doesn't work?\n<|/ c |>\n<| c |>\nI added some explanation\
    \ to the answer.\n<|/ c |>\n<| c |>\nThanks for your answer. I tried your solution\
    \ and it works. But I still don't understand why my code doesn't work. Could you\
    \ please explain to me why my code doesn't work?\n<|/ c |>\n<| a dscore=0 |>\n\
    The reason your code doesn't work is that you are trying to use an anonymous function\
    \ as a parameter to count_nums. In Julia, functions are first-class objects. That\
    \ means that you can pass them around as parameters. In your case, you need to\
    \ pass a function which takes one parameter and returns another function, which\
    \ takes one parameter and returns another function, which takes one parameter\
    \ and returns another function, which takes one parameter and returns another\
    \ function, which takes one parameter and returns another function, which takes\
    \ one parameter and returns another function, which takes one parameter and returns\
    \ another function, which takes one parameter and returns another function, which\
    \ takes one parameter and returns another function, which takes one parameter\
    \ and returns another function, which takes one parameter and returns another\
    \ function, which takes one parameter and returns another function, which takes\
    \ one parameter and returns another function, which takes one parameter and returns\
    \ another function, which takes one parameter and returns another function, which\
    \ takes one parameter and returns another function, which takes one parameter\
    \ and returns another function, which takes one parameter and returns another\
    \ function, which takes one parameter and returns another function, which takes\
    \ one parameter and returns another function, which takes one parameter and returns\
    \ another function, which takes one parameter and returns another function, which\
    \ takes one parameter and returns another function, which takes one parameter\
    \ and returns another function, which takes one parameter and returns another\
    \ function, which takes one parameter and returns another function, which takes\
    \ one parameter and returns another function, which takes one parameter and returns\
    \ another function, which takes one parameter and returns another function, which\
    \ takes one parameter and returns another function, which takes one parameter\
    \ and returns another function, which takes one parameter and returns another\
    \ function, which takes one parameter and returns another function, which takes\
    \ one parameter and returns another function, which takes one \nusing Test\n\n\
    @testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcop0ia6v.jl:16\nin expression starting at\
    \ /tmp/tmpcop0ia6v.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<text>\nExercise 2\nWrite a function count_nums\
    \ which takes a vector of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpbwatab98.jl:22\nin expression starting at\
    \ /tmp/tmpbwatab98.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-1,11,-11])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a vector of integers\
    \ and returns the number of elements which has a sum of digits > 0.\nIf a number\
    \ is negative, then its first signed digit will be negative:\ne.g. -123 has signed\
    \ digits -1, 2, and 3.\n>>> count_nums([])\n0\n>>> count_nums([-1, 11, -11])\n\
    1\n>>> count_nums([1, 1, 2])\n3\n>>> count_nums([1, 2, -10, -100, -1000, -1000])\n\
    2\n>>> count_nums([1, 2, -10, -100, -1000, -1001, -1002])\n4\n>>> count_nums([1,\
    \ 2, -10, -100, -1000, -1001, -1002, -1003])\n5\n>>> count_nums([1, 2, -10, -100,\
    \ -1000, -1001, -1002, -1003, -1004])\n6\n>>> count_nums([1, 2, -10, -100, -1000,\
    \ -1001, -1002, -1003, -1004, -1005])\n7\n>>> count_nums([1, 2, -10, -100, -1000,\
    \ -1001, -1002, -1003, -1004, -1005, -1006])\n8\n>>> count_nums([1, 2, -10, -100,\
    \ -1000, -1001, -1002, -1003, -1004, -1005, -1006, -1007])\n9\n>>> count_nums([1,\
    \ 2, -10, -100, -1000, -1001, -1002, -1003, -1004, -1005, -1006, -1007, -1008])\n\
    10\n>>> count_nums([1, 2, -10, -100, -1000, -1001, -1002, -1003, -1004, -1005,\
    \ -1006, -1007, -1008, -1009])\n11\n>>> count_nums([1, 2, -10, -100, -1000, -1001,\
    \ -1002, -1003, -1004, -1005, -1006, -1007, -1008, -1009, -1010])\n12\n>>> count_nums([1,\
    \ 2, -10, -100, -1000, -1001, -1002, -1003, -1004, -1005, -1006, -1007, -1008,\
    \ -1009, -1010, -1011])\n13\n>>> count_nums([1, 2, -10, -100, -1000, -1001, -1002,\
    \ -1003, -1004, -1005, -1006, -1007, -1008, -1009, -1010, -1011, -110])\n14\n\
    >>> count_nums([1, 2, -10, -100, -1000, -1001, -1002, -1003, -1004, -1005, -1006,\
    \ -1007, -1008, -1009, -1010, -1011, -110, -109])\n15\n>>> count_nums([1, 2, -10,\
    \ -100, -1000, -1001, -1002, -1003, -1004, -1005, -1006, \nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9rqqfku8.jl:22\nin expression starting at\
    \ /tmp/tmp9rqqfku8.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.3>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ count_nums which takes a vector of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7zc_8mh6.jl:22\nin expression starting at\
    \ /tmp/tmp7zc_8mh6.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count_nums =\
    \ Int64(0)\n    for n in arr\n        if n > 0\n            count_nums += 1\n\
    \        end\n    end\n    return count_nums\nend\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-1,11,-11])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums\
    \ which takes a vector of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpg0mj7acy.jl:22\nin expression starting at\
    \ /tmp/tmpg0mj7acy.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        else\n \
    \           count += x\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -1, 1, 2, -3, 4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 3\n\
    Write a function count_nums which takes a vector of integers and returns\n   \
    \ the number of elements which has a sum of digits > 0.\n    If a number is negative,\
    \ then its first signed digit will be negative:\n    e.g. -123 has signed digits\
    \ -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n\
    \    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9ij8bf3g.jl:23\nin expression starting at\
    \ /tmp/tmp9ij8bf3g.jl:23\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes an array of integers and returns the number of elements which has a sum\
    \ of digits > 0.\nIf any number is negative, then its first signed digit will\
    \ be negative:\ne.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums([])\n\
    0\n>>> count_nums([-1, 11, -11])\n1\n>>> count_nums([1, 1, 2])\n3\n>>> count_nums([-1,\
    \ -1, 1, 1])\n2\n>>> count_nums([-1, -1, 1, -1, 1])\n3\n>>> count_nums([-1, -1,\
    \ 1, -1, 2, 1])\n4\n>>> count_nums([-1, -1, 1, -1, 2, -1, 1])\n5\n>>> count_nums([-1,\
    \ -1, 1, -1, 2, -1, 2, 1])\n6\n>>> count_nums([-1, -1, 1, -1, 2, -1, 2, -1, 1])\n\
    7\n>>> count_nums([-1, -1, 1, -1, 2, -1, 2, -1, 2, 1])\n8\n>>> count_nums([-1,\
    \ -1, 1, -1, 2, -1, 2, -1, 2, -1, 1])\n9\n>>> count_nums([-1, -1, 1, -1, 2, -1,\
    \ 2, -1, 2, -1, 2, 1])\n10\n>>> count_nums([-1, -1, 1, -1, 2, -1, 2, -1, 2, -1,\
    \ 2, -1, 1])\n11\n>>> count_nums([-1, -1, 1, -1, 2, -1, 2, -1, 2, -1, 2, -1, 2,\
    \ 1])\n12\n>>> count_nums([-1, -1, 1, -1, 2, -1, 2, -1, 2, -1, 2, -1, 2, -1, 1])\n\
    13\n>>> count_nums([-1, -1, 1, -1, 2, -1, 2, -1, 2, -1, 2, -1, 2, -1, 2, 1])\n\
    14\n>>> count_nums([-1, -1, 1, -1, 2, -1, 2, -1, 2, -1, 2, -1, 2, -1, 2, -1, 1])\n\
    15\n>>> count_nums([-1, -1, 1, -1, 2, -1, 2, -1, 2, -1, 2, -1, 2, -1, 2, -1, 2,\
    \ 1])\n16\n>>> count_nums([-1, -1, 1, -1, 2, -1, 2, -1, 2, -1, 2, -1, 2, -1, 2,\
    \ -1, 2, -1, 1])\n17\n>>> count_nums([-1, -1, 1, -1, 2, -1, 2, -1, 2, -1, 2, -1,\
    \ 2, -1, 2, -1, 2, -1, 2, 1])\n18\n>>> count_nums([-1, -1, 1, -1, 2, -1, 2, -1,\
    \ 2, -1, 2, -1, 2, -1, 2, -1, 2, -1, 2, 1])\n19\n>>> count_nums([-1, -1, 1, -1,\
    \ 2, -1, 2, -1, 2, -1, 2, -1, 2, -1, 2, -1, 2, -1, 2, -1, 1])\n20\n>>> count_nums([-1,\
    \ -1, 1, -1, 2, -1, 2, -1, 2, -1, 2, -1, 2, -1, 2, -1, 2, -1, 2, -1, 2, 1])\n\
    21\n>>> count_\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpbg5fq3oz.jl:22\nin expression starting at\
    \ /tmp/tmpbg5fq3oz.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for n in arr\n        if n > 0\n            count += 1\n        end\n   \
    \ end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4, -5, -6, -7, -8])\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ count_nums which takes a vector of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppb_t9oet.jl:22\nin expression starting at\
    \ /tmp/tmppb_t9oet.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x < 0\n            count += count_nums(x::Vector{Int64})\n\
    \        else\n            count += 1\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\ncount_nums([-12, -13, -14, -15, -16, -17, 18, 19, 20])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a vector of integers\
    \ and returns the number of elements which has a sum of digits > 0.\nIf a number\
    \ is negative, then its first signed digit will be negative:\ne.g. -123 has signed\
    \ digits -1, 2, and 3.\ne.g. -12 has signed digits -1, -2, and -3.\ne.g. -13 has\
    \ signed digits -1, -2, -3, and -4.\ne.g. -14 has signed digits -1, -2, -3, -4,\
    \ and -5.\ne.g. -15 has signed digits -1, -2, -3, -4, -5, and -6.\ne.g. -16 has\
    \ signed digits -1, -2, -3, -4, -5, -6, and -7.\ne.g. -17 has signed digits -1,\
    \ -2, -3, -4, -5, -6, -7, and -8.\ne.g. 18 has signed digits 1, 2, 3, and 4.\n\
    e.g. 19 has signed digits 1, 2, 3, and 4.\ne.g. 20 has signed digits 1, 2, 3,\
    \ and 4.\ne.g. -12 has signed digits -1, -2, -3, -4, -5, -6, -7, and -8.\ne.g.\
    \ -13 has signed digits -1, -2, -3, -4, -5, -6, -7, and -8.\ne.g. -14 has signed\
    \ digits -1, -2, -3, -4, -5, -6, -7, and -8.\ne.g. -15 has signed digits -1, -2,\
    \ -3, -4, -5, -6, -7, and -8.\ne.g. -16 has signed digits -1, -2, -3, -4, -5,\
    \ -6, -7, and -8.\ne.g. -17 has signed digits -1, -2, -3, -4, -5, -6, -7, and\
    \ -8.\ne.g. 18 has signed digits 1, 2, 3, and 4.\ne.g. 19 has signed digits 1,\
    \ 2, 3, and 4.\ne.g. 20 has signed digits 1, 2, 3, and 4.\ne.g. -12 has signed\
    \ digits -1, -2, -3, -4, -5, -6, -7, and -8.\ne.g. -13 has signed digits -1, -2,\
    \ -3, -4, -5, -6, -7, and -8.\ne.g. -14 has signed digits -1, -2, -3, -4, -5,\
    \ -6, -7, and -8.\ne.g. -15 has signed digits -1, -2, -3, -4, -5, -6, -7, and\
    \ -8.\ne.g. -16 has signed digits -1, -2, -3, -4, -5, -6, -7, and -8.\ne.g. -17\
    \ has signed digits -1, -2, -3, -\nusing Test\n\n@testset begin\n\ncandidate =\
    \ count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxxhtsbp4.jl:23\nin expression starting at\
    \ /tmp/tmpxxhtsbp4.jl:23\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for n in arr\n        if n > 0\n            count += 1\n        end\n   \
    \ end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ count_nums which takes a vector of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpl43z93df.jl:22\nin expression starting at\
    \ /tmp/tmpl43z93df.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0\n            count += 1\n        end\n   \
    \ end\n    return count\nend\n</cell>\n<code language=julia-1.3>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ count_nums which takes a vector of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpz8jupet2.jl:22\nin expression starting at\
    \ /tmp/tmpz8jupet2.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<text>\nExercise 3\nWrite a function count_nums\
    \ which takes a vector of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpumqun98q.jl:22\nin expression starting at\
    \ /tmp/tmpumqun98q.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x < 0\n            count += count_nums(-x)\n   \
    \     else\n            count += 1\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\ncount_nums([-2, -1, 1, 2, -3, 4, -5, -6, -7, -8])\n\
    </cell>\n<text>\nExercise 3\nWrite a function count_nums which takes a vector\
    \ of integers and returns\n    the number of elements which has a sum of digits\
    \ > 0.\n    If a number is negative, then its first signed digit will be negative:\n\
    \    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n\
    \    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n   \
    \ 3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpa97a6p3z.jl:23\nin expression starting at\
    \ /tmp/tmpa97a6p3z.jl:23\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count_nums(arr,\
    \ 0)\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2, -4, -6, -8])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the number of elements\
    \ in a vector whose sum is greater than 0.\nIf an element in the vector is negative,\
    \ then its first signed digit will be negative:\ne.g. -123 has signed digits -1,\
    \ 2, and 3.\n>>> count_nums([])\n0\n>>> count_nums([-1, 11, -11])\n1\n>>> count_nums([1,\
    \ 1, 2])\n3\n>>> count_nums([1, 2, 3, -4, -5, -6, -7, -8, -9])\n4\n>>> count_nums([1,\
    \ 2, 3, -4, -5, -6, -7, -8, -9, -10])\n5\n>>> count_nums([1, 2, 3, -4, -5, -6,\
    \ -7, -8, -9, -10, -11])\n6\n>>> count_nums([1, 2, 3, -4, -5, -6, -7, -8, -9,\
    \ -10, -11, -12])\n7\n>>> count_nums([1, 2, 3, -4, -5, -6, -7, -8, -9, -10, -11,\
    \ -12, -13])\n8\n>>> count_nums([1, 2, 3, -4, -5, -6, -7, -8, -9, -10, -11, -12,\
    \ -13, -14])\n9\n>>> count_nums([1, 2, 3, -4, -5, -6, -7, -8, -9, -10, -11, -12,\
    \ -13, -14, -15])\n10\n>>> count_nums([1, 2, 3, -4, -5, -6, -7, -8, -9, -10, -11,\
    \ -12, -13, -14, -15, -16])\n11\n>>> count_nums([1, 2, 3, -4, -5, -6, -7, -8,\
    \ -9, -10, -11, -12, -13, -14, -15, -16, -17])\n12\n>>> count_nums([1, 2, 3, -4,\
    \ -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18])\n13\n>>> count_nums([1,\
    \ 2, 3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19])\n\
    14\n>>> count_nums([1, 2, 3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14,\
    \ -15, -16, -17, -18, -19, -20])\n15\n>>> count_nums([1, 2, 3, -4, -5, -6, -7,\
    \ -8, -9, -10, -11, -12, -13, -14, -15, -\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjshi73ar.jl:16\nin expression starting at\
    \ /tmp/tmpjshi73ar.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 0, 1, 2])\n</cell>\n<text>\nExercise 2\nWrite a function that takes a vector\
    \ of integers and returns the number of elements which has a sum of digits < 0.\n\
    If a number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>>\
    \ count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n   \
    \ \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplyct2ean.jl:22\nin expression starting at\
    \ /tmp/tmplyct2ean.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -3, 4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 3\nWrite a function count_nums\
    \ which takes a vector of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpstckvoxl.jl:22\nin expression starting at\
    \ /tmp/tmpstckvoxl.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums\
    \ which takes a vector of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphi7wn27m.jl:22\nin expression starting at\
    \ /tmp/tmphi7wn27m.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.3>\ncount_nums([-1,11,-11])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a vector of integers\
    \ and returns the number of elements which has a sum of digits > 0.\nIf a number\
    \ is negative, then its first signed digit will be negative:\ne.g. -123 has signed\
    \ digits -1, 2, and 3.\n>>> count_nums([])\n0\n>>> count_nums([-1, 11, -11])\n\
    1\n>>> count_nums([1, 1, 2])\n3\n>>> count_nums([1, 2, -3, 4])\n2\n>>> count_nums([-1,\
    \ -4, -5, -6, -7, -8])\n4\n>>> count_nums([-1, -4, -5, -6, -7, -8, -9])\n0\n>>>\
    \ count_nums([-1, -4, -5, -6, -7, -8, -9, -10])\n0\n>>> count_nums([-1, -4, -5,\
    \ -6, -7, -8, -9, -10, -11])\n0\n>>> count_nums([-1, -4, -5, -6, -7, -8, -9, -10,\
    \ -11, -12])\n0\n>>> count_nums([-1, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13])\n\
    0\n>>> count_nums([-1, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14])\n0\n\
    >>> count_nums([-1, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15])\n0\n\
    >>> count_nums([-1, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16])\n\
    0\n>>> count_nums([-1, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16,\
    \ -17])\n0\n>>> count_nums([-1, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14,\
    \ -15, -16, -17, -18])\n0\n>>> count_nums([-1, -4, -5, -6, -7, -8, -9, -10, -11,\
    \ -12, -13, -14, -15, -16, -17, -18, -19])\n0\n>>> count_nums([-1, -4, -5, -6,\
    \ -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20])\n0\n>>>\
    \ \nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwimj8_01.jl:22\nin expression starting at\
    \ /tmp/tmpwimj8_01.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        else\n \
    \           count += x\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -1, 0, 1, 2])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums\
    \ which takes a vector of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpm0xuvcyd.jl:23\nin expression starting at\
    \ /tmp/tmpm0xuvcyd.jl:23\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.0>\ncount_nums([-2,\
    \ -1, 1, 2, -10, -100, -1000, -1000])\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ count_nums which takes a vector of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgfueojzj.jl:22\nin expression starting at\
    \ /tmp/tmpgfueojzj.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes a vector of integers and returns the number of elements which has a sum\
    \ of digits < 0.\nIf a number is negative, then its first signed digit will be\
    \ negative:\ne.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums([])\n0\n\
    >>> count_nums([-1, 11, -11])\n1\n>>> count_nums([1, 1, 2])\n3\n\"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpd4p8pjin.jl:22\nin expression starting at\
    \ /tmp/tmpd4p8pjin.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ takes a vector of integers and returns the number of elements which has a sum\
    \ of digits < 0.\nIf a number is negative, then its first signed digit will be\
    \ negative:\ne.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums([])\n0\n\
    >>> count_nums([-1, 11, -11])\n1\n>>> count_nums([1, 1, 2])\n3\n\"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpyxm_kf8t.jl:22\nin expression starting at\
    \ /tmp/tmpyxm_kf8t.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<text>\nExercise 3\nWrite a function count_nums\
    \ which takes a vector of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpumqun98q.jl:22\nin expression starting at\
    \ /tmp/tmpumqun98q.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.4>\ncount_nums([-1,\
    \ 1, -2, 2, 3, -3, 4, -4, 5])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums\
    \ which takes a vector of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpu17mwe12.jl:22\nin expression starting at\
    \ /tmp/tmpu17mwe12.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count_nums(arr,\
    \ 0)\nend\n</code>\n<|/ a dscore=2 |>\n<| a tags=julia,function,arrays |>\nThe\
    \ answer by is correct but can be improved.\nThe function count_nums has two recursive\
    \ calls, one in the function itself and one in the function body. These two calls\
    \ are redundant. \nThe function can be rewritten as:\n<code>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpuszi_hxd.jl:16\nin expression starting at\
    \ /tmp/tmpuszi_hxd.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-1,\
    \ 1, -2, 2, -3, 3, -4, 4])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums\
    \ which takes a vector of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpln19jkcl.jl:22\nin expression starting at\
    \ /tmp/tmpln19jkcl.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        else\n \
    \           count += count_nums(x::Vector{Int64})\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2, -4, -6, -10,\
    \ -12, -14, -16, -18, -21])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums\
    \ which takes a vector of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzhblubmd.jl:24\nin expression starting at\
    \ /tmp/tmpzhblubmd.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        else\n \
    \           count += count_nums(x::Vector{Int64})\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-1, 1, -2, 2, 3,\
    \ -3, 3, -4, 4, -5, 5])\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a vector of integers and returns the number of elements which has a sum of digits\
    \ < 0.\nIf a number is negative, then its first signed digit will be negative:\n\
    \    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n\
    \    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n   \
    \ 3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpaxc1o2j2.jl:24\nin expression starting at\
    \ /tmp/tmpaxc1o2j2.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a vector of integers and returns the number of elements which has\
    \ a sum of digits < 0.\nIf a number is negative, then its first signed digit will\
    \ be negative:\ne.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums([])\n\
    0\n>>> count_nums([-1, 11, -11])\n1\n>>> count_nums([1, 1, 2])\n3\n\"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpx64ycyrr.jl:22\nin expression starting at\
    \ /tmp/tmpx64ycyrr.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -5, -7, -9, -10, -12, -14, -16, -17, -19, -20, -21])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function count_nums which takes a vector of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1,\
    \ 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7y0z1r9_.jl:22\nin expression starting at\
    \ /tmp/tmp7y0z1r9_.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -4, -6, -10, -12, -14, -16, -18, -20, -22, -24])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function count_nums which takes a vector of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1,\
    \ 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvnit87ot.jl:22\nin expression starting at\
    \ /tmp/tmpvnit87ot.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        else\n \
    \           count += x\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -5, -10, -15, -20, -25, -27, -29, -32, -35, -38, -39, -44, -47,\
    \ -49, -50, -51, -52, -53, -54, -55, -57, -58, -59, -61, -62, -63, -64, -66, -67,\
    \ -68, -69, -71, -72, -73, -74, -75, -77, -78, -79, -80, -81, -82, -83, -84, -86,\
    \ -87, -88, -89, -91, -92, -93, -94, -95, -96, -97, -98, -99, -100, -101, -102,\
    \ -103, -104, -105, -106, -107, -108, -109, -110, -111, -112, -113, -114, -115,\
    \ -116, -117, -118, -119, -120, -121, -122, -123, -124, -125, -126, -127, -128,\
    \ -129, -130, -131, -132, -133, -134, -135, -136, -137, -138, -139, -140, -141,\
    \ -142, -143, -144, -145, -146, -147, -148, -149, -150, -151, -152, -153, -154,\
    \ -155, -156, -157, -158, -159, -160, -161, -162, -163, -164, -165, -166, -167,\
    \ -168, -169, -170, -171, -172, -173, -174, -175, -176, -177, -178, -179, -180,\
    \ -181, -182, -183, -184, -185, -186, -187, -188, -189, -190, -191, -192, -193,\
    \ -194, -195, -196, -197, -198, -199, -200, -201, -202, -203, -204, -205, -206,\
    \ -207, -208, -209, -210, -211, -212, -213, -214, -215, -216, -217, -218, -219,\
    \ -220, -221, -222, -223, -224, -225, -226, -227, -228, -229, -230, -231, -232,\
    \ -233, -234, -234, -235, -236, -237, -240, -241, -242, -243, -244, -245, -246,\
    \ -247, -248, -249, -250, -251, -252, -253, -254, -255, -256, -257, -258, -259,\
    \ -264, -265, -2\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t\
    @test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\
    \t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6,\
    \ 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1])\
    \ == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpp396cqy4.jl:23\nin expression starting at\
    \ /tmp/tmpp396cqy4.jl:23\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.3>\ncount_nums([-2,\
    \ -1, 0, 2, -4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a vector of integers and returns the number of elements which has\
    \ a sum of digits < 0.\nIf a number is negative, then its first signed digit will\
    \ be negative:\ne.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums([])\n\
    0\n>>> count_nums([-1, 11, -11])\n1\n>>> count_nums([1, 1, 2])\n3\n\"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprhb8mvon.jl:22\nin expression starting at\
    \ /tmp/tmprhb8mvon.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x < 0\n            count += count_nums(x::Vector{Int64})\n\
    \        else\n            count += 1\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\ncount_nums([-2, -1, 1, 2, -4, -5, -6, -7, -8])\n</cell>\n\
    <text>\nExercise 2\nWrite a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp20hj1cfq.jl:23\nin expression starting at\
    \ /tmp/tmp20hj1cfq.jl:23\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.3>\ncount_nums([-2,\
    \ -1, 1, 2, -4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ count_nums which takes a vector of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_t0qmnyv.jl:22\nin expression starting at\
    \ /tmp/tmp_t0qmnyv.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<text>\nExercise 2\nWrite a function count_nums\
    \ which takes a vector of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpbwatab98.jl:22\nin expression starting at\
    \ /tmp/tmpbwatab98.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.3>\ncount_nums([-2,\
    \ -1, 0, 1])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums which takes\
    \ a vector of integers and returns\n    the number of elements which has a sum\
    \ of digits > 0.\n    If a number is negative, then its first signed digit will\
    \ be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n\
    \    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n\
    \    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t\
    @test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\
    \t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6,\
    \ 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1])\
    \ == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp23964c9e.jl:22\nin expression starting at\
    \ /tmp/tmp23964c9e.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ takes a vector of integers and returns the number of elements which has a sum\
    \ of digits > 0.\nIf any number is negative, then its first signed digit will\
    \ be negative:\ne.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums([])\n\
    0\n>>> count_nums([-1, 11, -11])\n1\n>>> count_nums([1, 1, 2])\n3\n>>> count_nums([1,\
    \ 2, -3, 4, -5, -6, -7, -8])\n4\n>>> count_nums([1, 2, -3, 4, -5, -6, -7, -8,\
    \ 9])\n4\n>>> count_nums([1, 2, -3, 4, -5, -6, -7, -8, 9, 10])\n4\n>>> count_nums([1,\
    \ 2, -3, 4, -5, -6, -7, -8, 9, 10, 11])\n4\n>>> count_nums([1, 2, -3, 4, -5, -6,\
    \ -7, -8, 9, 10, 11, 12])\n4\n>>> count_nums([1, 2, -3, 4, -5, -6, -7, -8, 9,\
    \ 10, 11, 12, 13])\n4\n>>> count_nums([1, 2, -3, 4, -5, -6, -7, -8, 9, 10, 11,\
    \ 12, 13, 14])\n4\n>>> count_nums([1, 2, -3, 4, -5, -6, -7, -8, 9, 10, 11, 12,\
    \ 13, 14, 15])\n4\n>>> count_nums([1, 2, -3, 4, -5, -6, -7, -8, 9, 10, 11, 12,\
    \ 13, 14, 15, 16])\n4\n>>> count_nums([1, 2, -3, 4, -5, -6, -7, -8, 9, 10, 11,\
    \ 12, 13, 14, 15, 16, 17])\n4\n>>> count_nums([1, 2, -3, 4, -5, -6, -7, -8, 9,\
    \ 10, 11, 12, 13, 14, 15, 16, 17, 18])\n4\n>>> count_nums([1, 2, -3, 4, -5, -6,\
    \ -7, -8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19])\n4\n>>> count_nums([1, 2,\
    \ -3, 4, -5, -6, -7, -8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20])\n4\n\
    >>> count_nums([1, 2, -3, 4, -5, -6, -7, -8, 9, 10, 11, 12, 13, 14, 15, 16, 17,\
    \ 18, 19, 20, 21])\n4\n>>> count_nums([1, 2, -3, 4, -5, -6, -7, -8, 9, 10, 11,\
    \ 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22])\n4\n>>> count_nums([1, 2, -3, 4,\
    \ -5, -6, -7, -8, 9, 10, 11, 12, 13, 14, 15, \nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpbk4zhapo.jl:22\nin expression starting at\
    \ /tmp/tmpbk4zhapo.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-1,\
    \ 1, -2, 2, -3, 3, -4, 4, -5, 5])\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ count_nums which takes a vector of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpi5677q5u.jl:22\nin expression starting at\
    \ /tmp/tmpi5677q5u.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count_nums(arr,\
    \ 0)\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-1, 1, -2, 3, -4, -5,\
    \ -6, -7, -8, -9, -10])\n</cell>\n<text>\nExercise 3\nWrite a function count_nums\
    \ which takes a vector of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6frea5n4.jl:16\nin expression starting at\
    \ /tmp/tmp6frea5n4.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.4>\ncount_nums([-2,\
    \ -1, 1, 2, -4, -5, -6, -7, -8, -9])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ count_nums which takes a vector of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpe67o2ib_.jl:22\nin expression starting at\
    \ /tmp/tmpe67o2ib_.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.3>\ncount_nums([-1,11,-11])\n\
    </cell>\n<text>\nExercise 3\nWrite a function count_nums which takes a vector\
    \ of integers and returns\n    the number of elements which has a sum of digits\
    \ > 0.\n    If a number is negative, then its first signed digit will be negative:\n\
    \    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n\
    \    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n   \
    \ 3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp76uvqusc.jl:22\nin expression starting at\
    \ /tmp/tmp76uvqusc.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ count_nums which takes a vector of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmps7xxxpwf.jl:22\nin expression starting at\
    \ /tmp/tmps7xxxpwf.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0\n            count += 1\n        end\n   \
    \ end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-1,\
    \ 1, -2, 3, -4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ count_nums which takes a vector of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpq251acv6.jl:22\nin expression starting at\
    \ /tmp/tmpq251acv6.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for n in arr\n        if n > 0\n            count += 1\n        end\n   \
    \ end\n    return count\nend\n</cell>\n<code language=julia-1.0>\ncount_nums([-2,\
    \ -1, 0, 2, -4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise: Write a function\
    \ that takes a vector of integers and returns the number of elements which has\
    \ a sum of digits > 0.\n    If a number is negative, then its first signed digit\
    \ will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n\
    \    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n\
    \    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t\
    @test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\
    \t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6,\
    \ 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1])\
    \ == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwdgs_tm3.jl:22\nin expression starting at\
    \ /tmp/tmpwdgs_tm3.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ count_nums which takes a vector of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmps7xxxpwf.jl:22\nin expression starting at\
    \ /tmp/tmps7xxxpwf.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0\n            count += 1\n        end\n   \
    \ end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 0, 1])\n</cell>\n<text>\nExercise 3\nWrite a function count_nums which takes\
    \ a vector of integers and returns\n    the number of elements which has a sum\
    \ of digits > 0.\n    If a number is negative, then its first signed digit will\
    \ be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n\
    \    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n\
    \    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t\
    @test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\
    \t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6,\
    \ 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1])\
    \ == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpm6b259se.jl:22\nin expression starting at\
    \ /tmp/tmpm6b259se.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count_nums(arr,\
    \ 0)\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2, -4, -6, -10, -12,\
    \ -14, -16, -18, -21])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums\
    \ which takes a vector of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpd6fhk2t1.jl:16\nin expression starting at\
    \ /tmp/tmpd6fhk2t1.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 0, 2, -4, -5, -6, -7, -8, -9, -10, -12, -13, -14, -15, -16, -17, -18, -19,\
    \ -20, -21, -22, -23, -24, -25, -26, -27, -28, -29, -30, -31, -32, -33, -34, -35,\
    \ -36, -37, -38, -39, -40, -41, -42, -43, -44, -45])\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function count_nums which takes a vector of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1,\
    \ 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmph9fxw2v_.jl:22\nin expression starting at\
    \ /tmp/tmph9fxw2v_.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.3>\ncount_nums([-2,\
    \ -4, -6, -10, -12, -14, -16, -18])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ count_nums which takes a vector of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8ymsg4ep.jl:22\nin expression starting at\
    \ /tmp/tmp8ymsg4ep.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 0, 1])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums which takes\
    \ a vector of integers and returns\n    the number of elements which has a sum\
    \ of digits > 0.\n    If a number is negative, then its first signed digit will\
    \ be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n\
    \    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n\
    \    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t\
    @test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\
    \t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6,\
    \ 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1])\
    \ == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp287jtabk.jl:22\nin expression starting at\
    \ /tmp/tmp287jtabk.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.3>\ncount_nums([-2,\
    \ -5, -10, -15, -20, -25])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums\
    \ which takes a vector of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpb5kdttcp.jl:22\nin expression starting at\
    \ /tmp/tmpb5kdttcp.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ takes a vector of integers and returns the number of elements which has a sum\
    \ of digits < 0.\nIf a number is negative, then its first signed digit will be\
    \ negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n\
    \    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n\
    \    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t\
    @test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\
    \t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6,\
    \ 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1])\
    \ == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp82nrqbmu.jl:22\nin expression starting at\
    \ /tmp/tmp82nrqbmu.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0\n            count += 1\n        end\n   \
    \ end\n    return count\nend\n</cell>\n<code language=julia-1.3>\ncount_nums([-1,11,-11])\n\
    </cell>\n<text>\nExercise 2\nWrite a function count_nums which takes a vector\
    \ of integers and returns\n    the number of elements which has a sum of digits\
    \ > 0.\n    If a number is negative, then its first signed digit will be negative:\n\
    \    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n\
    \    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n   \
    \ 3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7upqd7ye.jl:22\nin expression starting at\
    \ /tmp/tmp7upqd7ye.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.4>\ncount_nums([-2,\
    \ -1, 0, 1, 2])\n</cell>\n<text>\nExercise 3\nWrite a function that takes a vector\
    \ of integers and returns the number of elements which has a sum of digits > 0.\n\
    If a number is negative, then its first signed digit will be negative:\ne.g. -123\
    \ has signed digits -1, 2, and 3.\n>>> count_nums([])\n0\n>>> count_nums([-1,\
    \ 11, -11])\n1\n>>> count_nums([1, 1, 2])\n3\n>>> count_nums([1, 2, -10, 0, 1])\n\
    2\n>>> count_nums([1, 2, -10, 0, 1])\n2\n>>> count_nums([1, 2, -10, 0, 1])\n2\n\
    >>> count_nums([1, 2, -10, 0, 1])\n2\n>>> count_nums([1, 2, -10, 0, 1])\n2\n>>>\
    \ count_nums([1, 2, -10, 0, 1])\n2\n>>> count_nums([1, 2, -10, 0, 1])\n2\n>>>\
    \ count_nums([1, 2, -10, 0, 1])\n2\n>>> count_nums([1, 2, -10, 0, 1])\n2\n>>>\
    \ count_nums([1, 2, -10, 0, 1])\n2\n>>> count_nums([1, 2, -10, 0, 1])\n2\n>>>\
    \ count_nums([1, 2, -10, 0, 1])\n2\n>>> count_nums([1, 2, -10, 0, 1])\n2\n>>>\
    \ count_nums([1, 2, -10, 0, 1])\n2\n>>> count_nums([1, 2, -10, 0, 1])\n2\n>>>\
    \ count_nums([1, 2, -10, 0, 1])\n2\n>>> count_nums([1, 2, -10, 0, 1])\n2\n>>>\
    \ count_nums([1, 2, -10, 0, 1])\n2\n>>> count_nums([1, 2, -10, 0, 1])\n2\n>>>\
    \ count_nums([1, 2, -10, 0, 1])\n2\n>>> count_nums([1, 2, -10, 0, 1])\n2\n>>>\
    \ count_nums([1, 2, -10, 0, 1])\n2\n>>> count_nums([1, 2, -10, 0, 1])\n2\n>>>\
    \ count_nums([1, 2, -10, 0, 1])\n2\n>>> count_nums([1, 2, -10, 0, 1])\n2\n>>>\
    \ count_nums([1, 2, -10, 0, 1])\n2\n>>> count_nums([1, 2, -10, 0, 1])\n2\n>>>\
    \ count_nums([1, 2, -10, 0, 1])\n2\n>>> count_nums([1, 2, -10, 0, 1])\n2\n>>>\
    \ count_nums([1, 2, -10, 0, 1])\n2\n>>> count_nums([1, 2, -10, 0, 1])\n2\n>>>\
    \ count_nums([1, 2, -10, 0, 1])\n2\n>>> count_nums([1, 2, -10, \nusing Test\n\n\
    @testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2cz0imre.jl:22\nin expression starting at\
    \ /tmp/tmp2cz0imre.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-1,\
    \ 1, -2, 2, 3, -3, 4, -4, 5])\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes an array of integers and returns the number of elements which has a sum\
    \ of digits > 0.\nIf a number is negative, then its first signed digit will be\
    \ negative:\ne.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums([])\n0\n\
    >>> count_nums([-1, 11, -11])\n1\n>>> count_nums([1, 1, 2])\n3\n>>> count_nums([1,\
    \ 2, -3, 4, -4, 5])\n2\n>>> count_nums([1, 2, -3, 4, -4, -5, 5])\n2\n>>> count_nums([1,\
    \ 2, -3, 4, -4, -5, -6, 5])\n2\n>>> count_nums([1, 2, -3, 4, -4, -5, -6, -7, 5])\n\
    2\n>>> count_nums([1, 2, -3, 4, -4, -5, -6, -7, -8, 5])\n2\n>>> count_nums([1,\
    \ 2, -3, 4, -4, -5, -6, -7, -8, -9, 5])\n2\n>>> count_nums([1, 2, -3, 4, -4, -5,\
    \ -6, -7, -8, -9, -10, 5])\n2\n>>> count_nums([1, 2, -3, 4, -4, -5, -6, -7, -8,\
    \ -9, -10, -11, 5])\n2\n>>> count_nums([1, 2, -3, 4, -4, -5, -6, -7, -8, -9, -10,\
    \ -10, -10, -10, 5])\n2\n>>> count_nums([1, 2, -3, 4, -4, -5, -6, -7, -8, -9,\
    \ -10, -10, -10, -10, -10, -10, 5])\n2\n>>> count_nums([1, 2, -3, 4, -4, -5, -6,\
    \ -7, -8, -9, -10, -10, -10, -10, -10, -10, -10, -10, 5])\n2\n>>> count_nums([1,\
    \ 2, -3, 4, -4, -5, -6, -7, -8, -9, -10, -10, -10, -10, -10, -10, -10, -10, -10,\
    \ 5])\n2\n>>> count_nums([1, 2, -3, 4, -4, -5, -6, -7, -8, -9, -10, -10, -10,\
    \ -10, -10, -10, -10, -10, -10, -10, 5])\n2\n>>> count_nums([1, 2, -3, 4, -4,\
    \ -5, -6, -7, -8, -9, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, 5])\n\
    2\n\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmph_hywsrj.jl:22\nin expression starting at\
    \ /tmp/tmph_hywsrj.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.3>\ncount_nums([-2,\
    \ -1, 0, 1])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums which takes\
    \ a vector of integers and returns\n    the number of elements which has a sum\
    \ of digits > 0.\n    If a number is negative, then its first signed digit will\
    \ be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n\
    \    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n\
    \    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t\
    @test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\
    \t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6,\
    \ 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1])\
    \ == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp23964c9e.jl:22\nin expression starting at\
    \ /tmp/tmp23964c9e.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-1,11,-11])\n\
    </cell>\n<text>\nExercise 3\nWrite a function count_nums which takes a vector\
    \ of integers and returns\n    the number of elements which has a sum of digits\
    \ > 0.\n    If a number is negative, then its first signed digit will be negative:\n\
    \    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n\
    \    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n   \
    \ 3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpiv4nwh1q.jl:22\nin expression starting at\
    \ /tmp/tmpiv4nwh1q.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-1,11,-11])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([1, 1, 2])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function count_nums which takes a vector of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1,\
    \ 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppq79hbc8.jl:22\nin expression starting at\
    \ /tmp/tmppq79hbc8.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -4, -6, -10, -12, -14, -16, -18, -20, -22, -24])\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes a vector of integers and returns the number of\
    \ elements which has a sum of digits > 0.\nIf a number is negative, then its first\
    \ signed digit will be negative:\ne.g. -123 has signed digits -1, 2, and 3.\n\
    >>> count_nums([])\n0\n>>> count_nums([-1, 11, -11])\n1\n>>> count_nums([1, 1,\
    \ 2])\n3\n>>> count_nums([1, 2, 3, -4, -6, -10, -12, -14, -16, -18, -20, -22,\
    \ -24])\n4\n>>> count_nums([1, 2, 3, -4, -6, -10, -12, -14, -16, -18, -20, -22,\
    \ -24, -23, -25])\n5\n>>> count_nums([1, 2, 3, -4, -6, -10, -12, -14, -16, -18,\
    \ -20, -22, -24, -23, -25, -26])\n6\n>>> count_nums([1, 2, 3, -4, -6, -10, -12,\
    \ -14, -16, -18, -20, -22, -24, -23, -25, -26, -27])\n7\n>>> count_nums([1, 2,\
    \ 3, -4, -6, -10, -12, -14, -16, -18, -20, -22, -24, -23, -25, -26, -27, -28])\n\
    8\n>>> count_nums([1, 2, 3, -4, -6, -10, -12, -14, -16, -18, -20, -22, -24, -23,\
    \ -25, -26, -27, -28, -29])\n9\n>>> count_nums([1, 2, 3, -4, -6, -10, -12, -14,\
    \ -16, -18, -20, -22, -24, -23, -25, -26, -27, -28, -29, -30])\n10\n>>> count_nums([1,\
    \ 2, 3, -4, -6, -10, -12, -14, -16, -18, -20, -22, -24, -23, -25, -26, -27, -28,\
    \ -29, -30, -31])\n11\n>>> count_nums([1, 2, 3, -4, -6, -10, -12, -14, -16, -18,\
    \ -20, -22, -24, -23, -25, -26, -27, -28, -29, -30, -31, -32])\n12\n>>> count_nums([1,\
    \ 2, 3, -4, -6, -10, -12, -14, -16, -18, -20, -22, -24, -2\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6o6u0_kh.jl:22\nin expression starting at\
    \ /tmp/tmp6o6u0_kh.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.0>\ncount_nums([-2,\
    \ -1, 0, 2, -4, -6, -7, -8])\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes a vector of integers and returns the number of elements which has a sum\
    \ of digits < 0.\nIf a number is negative, then its first signed digit will be\
    \ negative:\ne.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums([])\n0\n\
    >>> count_nums([-1, 11, -11])\n1\n>>> count_nums([1, 1, 2])\n3\n>>> count_nums([-1,\
    \ -1, 1, -2, 2, -3, 3, -4, -5, -6, -7, -8, -9])\n4\n>>> count_nums([-1, -1, 1,\
    \ -2, 2, -3, 3, -4, -5, -6, -7, -8, -9, -10])\n5\n>>> count_nums([-1, -1, 1, -2,\
    \ 2, -3, 3, -4, -5, -6, -7, -8, -9, -10, -11])\n6\n>>> count_nums([-1, -1, 1,\
    \ -2, 2, -3, 3, -4, -5, -6, -7, -8, -9, -10, -11, -12])\n7\n>>> count_nums([-1,\
    \ -1, 1, -2, 2, -3, 3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13])\n8\n>>> count_nums([-1,\
    \ -1, 1, -2, 2, -3, 3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14])\n9\n\
    >>> count_nums([-1, -1, 1, -2, 2, -3, 3, -4, -5, -6, -7, -8, -9, -10, -11, -12,\
    \ -13, -14, -15])\n10\n>>> count_nums([-1, -1, 1, -2, 2, -3, 3, -4, -5, -6, -7,\
    \ -8, -9, -10, -11, -12, -13, -14, -15, -16])\n11\n>>> count_nums([-1, -1, 1,\
    \ -2, 2, -3, 3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17])\n\
    12\n>>> count_nums([-1, -1, 1, -2, 2, -3, 3, -4, -5, -6, -7, -8, -9, -10, -11,\
    \ -12, -13, -14, -15, -16, -17, -18])\n13\n>>> count_nums([-1, -1, 1, -2, 2, -3,\
    \ 3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19])\n\
    using Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5oyh5qny.jl:22\nin expression starting at\
    \ /tmp/tmp5oyh5qny.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.0>\ncount_nums([-2,\
    \ -4, -6, -10, -12, -14, -16, -18, -21])\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function count_nums which takes a vector of integers and returns\n    the number\
    \ of elements which has a sum of digits > 0.\n    If a number is negative, then\
    \ its first signed digit will be negative:\n    e.g. -123 has signed digits -1,\
    \ 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n\
    \    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9eagx56j.jl:22\nin expression starting at\
    \ /tmp/tmp9eagx56j.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -4, -6, -10, -12, -14, -16, -18, -21])\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function count_nums which takes a vector of integers and returns\n    the number\
    \ of elements which has a sum of digits > 0.\n    If a number is negative, then\
    \ its first signed digit will be negative:\n    e.g. -123 has signed digits -1,\
    \ 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n\
    \    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2wrdgl06.jl:22\nin expression starting at\
    \ /tmp/tmp2wrdgl06.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.4>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 3, -4, 4])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums\
    \ which takes a vector of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>>\
    \ count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp88b2s2u9.jl:22\nin expression starting at\
    \ /tmp/tmp88b2s2u9.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4, -5, -6, -7, -8])\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ count_nums which takes a vector of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n   \
    \ >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9ad4hx7b.jl:22\nin expression starting at\
    \ /tmp/tmp9ad4hx7b.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.0>\ncount_nums([-1,11,-11])\n\
    </cell>\n<text>\nExercise 3\nWrite a function count_nums which takes a vector\
    \ of integers and returns\n    the number of elements which has a sum of digits\
    \ > 0.\n    If a number is negative, then its first signed digit will be negative:\n\
    \    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n\
    \    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n   \
    \ 3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpm2brx4g_.jl:22\nin expression starting at\
    \ /tmp/tmpm2brx4g_.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-1,\
    \ 1, -10, -100, -1000, -1000000000])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a vector of integers and returns the number of elements which has\
    \ a sum of digits > 0.\nIf any number is negative, then its first signed digit\
    \ will be negative:\ne.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums([])\n\
    0\n>>> count_nums([-1, 11, -11])\n1\n>>> count_nums([1, 1, 2])\n3\n>>> count_nums([1,\
    \ 2, 3, -4, -5, -6, -7, -8])\n4\n>>> count_nums([1, 2, 3, -4, -5, -6, -7, -8,\
    \ 9])\n4\n>>> count_nums([1, 2, 3, -4, -5, -6, -7, -8, 9, 10])\n4\n>>> count_nums([1,\
    \ 2, 3, -4, -5, -6, -7, -8, 9, 10, 11])\n4\n>>> count_nums([1, 2, 3, -4, -5, -6,\
    \ -7, -8, 9, 10, 11, 12])\n4\n>>> count_nums([1, 2, 3, -4, -5, -6, -7, -8, 9,\
    \ 10, 11, 12, 13])\n4\n>>> count_nums([1, 2, 3, -4, -5, -6, -7, -8, 9, 10, 11,\
    \ 12, 13, 14])\n4\n>>> count_nums([1, 2, 3, -4, -5, -6, -7, -8, 9, 10, 11, 12,\
    \ 13, 14, 15])\n4\n>>> count_nums([1, 2, 3, -4, -5, -6, -7, -8, 9, 10, 11, 12,\
    \ 13, 14, 15, 16])\n4\n>>> count_nums([1, 2, 3, -4, -5, -6, -7, -8, 9, 10, 11,\
    \ 12, 13, 14, 15, 16, 17])\n4\n>>> count_nums([1, 2, 3, -4, -5, -6, -7, -8, 9,\
    \ 10, 11, 12, 13, 14, 15, 16, 17, 18])\n4\n>>> count_nums([1, 2, 3, -4, -5, -6,\
    \ -7, -8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19])\n4\n>>> count_nums([1, 2,\
    \ 3, -4, -5, -6, -7, -8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20])\n4\n\
    >>> count_nums([1, 2, 3, -4, -5, -6, -7, -8, 9, 10, 11, 12, 13, 14, 15, 16, 17,\
    \ 18, 19, 20, 21])\n4\n>>> count_nums([1, 2, 3, -4, -5, -6, -7, -8, \nusing Test\n\
    \n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptj_628g1.jl:22\nin expression starting at\
    \ /tmp/tmptj_628g1.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 0, 1, 2])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums which\
    \ takes a vector of integers and returns\n    the number of elements which has\
    \ a sum of digits > 0.\n    If a number is negative, then its first signed digit\
    \ will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n\
    \    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n\
    \    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t\
    @test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\
    \t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6,\
    \ 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1])\
    \ == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7t1rm2rl.jl:22\nin expression starting at\
    \ /tmp/tmp7t1rm2rl.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4, -5, 6])\n</cell>\n<code language=julia-1.5>\ncount_nums([1,\
    \ 2, -3, 4, -5, 6])\n</cell>\n<code language=julia-1.5>\ncount_nums([1, 2, -3,\
    \ 4, -5, 6, -7, 8])\n</cell>\n<code language=julia-1.5>\ncount_nums([1, 2, -3,\
    \ 4, -5, 6, -7, 8, -9])\n</cell>\n<code language=julia-1.5>\ncount_nums([1, 2,\
    \ -3, 4, -5, 6, -7, 8, -9, 10])\n</cell>\n<code language=julia-1.5>\ncount_nums([1,\
    \ 2, -3, 4, -5, 6, -7, 8, -9, 10, 11])\n</cell>\n<code language=julia-1.5>\ncount_nums([1,\
    \ 2, -3, 4, -5, 6, -7, 8, -9, 10, 11, 12])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([1, 2, -3, 4, -5, 6, -7, 8, -9, 10, 11, 12, 13])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([1, 2, -3, 4, -5, 6, -7, 8, -9, 10, 11, 12, 13, 14])\n</cell>\n<code\
    \ language=julia-1.5>\ncount_nums([1, 2, -3, 4, -5, 6, -7, 8, -9, 10, 11, 12,\
    \ 13, 14, 15])\n</cell>\n<code language=julia-1.5>\ncount_nums([1, 2, -3, 4, -5,\
    \ 6, -7, 8, -9, 10, 11, 12, 13, 14, 15, 16])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([1, 2, -3, 4, -5, 6, -7, 8, -9, 10, 11, 12, 13, 14, 15, 16, 17])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([1, 2, -3, 4, -5, 6, -7, 8, -9,\
    \ 10, 11, 12, 13, 14, 15, 16, 17, 18])\n</cell>\n<code language=julia-1.5>\ncount_nums([1,\
    \ 2, -3, 4, -5, 6, -7, 8, -9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19])\n</cell>\n\
    <code language=julia-1.5>\ncount_nums([1, 2, -3, 4, -5, 6, -7, 8, -9, 10, 11,\
    \ 12, 13, 14, 15, 16, 17, 18, 19, 20])\n</cell>\n<code language=julia-1.5>\ncount_nums([1,\
    \ 2, -3, 4, -5, 6, -7, 8, -9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21])\n\
    </cell>\n<code language=julia-\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6wvqlmnp.jl:22\nin expression starting at\
    \ /tmp/tmp6wvqlmnp.jl:22\n"
  stdout: ''

name: HumanEval_138_is_equal_to_sum_even
language: jl
prompt: "\"\"\"Evaluate whether the given number n can be written as the sum of exactly\
  \ 4 positive even numbers\n    Example\n    >>> is_equal_to_sum_even(4)\n    false\n\
  \    >>> is_equal_to_sum_even(6)\n    false\n    >>> is_equal_to_sum_even(8)\n \
  \   true\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n"
tests: "using Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4)\
  \ == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
  \ == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t\
  @test(candidate(13) == false)\n\t@test(candidate(16) == true)\nend\n"
completions: ["    if n==0 then return true\n    else if n==1 then return true\n \
    \   else if n==2 then return true\n    else if n==3 then return true\n    else\
    \ if n==4 then return true\n    else if n==5 then return true\n    else if n==6\
    \ then return true\n    else if n==7 then return true\n    else if n==8 then return\
    \ true\n    else if n==9 then return true\n    else if n==10 then return true\n\
    \    else if n==11 then return true\n    else if n==12 then return true\n    else\
    \ if n==13 then return true\n    else if n==14 then return true\n    else if n==15\
    \ then return true\n    else if n==16 then return true\n    else if n==17 then\
    \ return true\n    else if n==18 then return true\n    else if n==19 then return\
    \ true\n    else if n==20 then return true\n    else if n==21 then return true\n\
    \    else if n==22 then return true\n    else if n==23 then return true\n    else\
    \ if n==24 then return true\n    else if n==25 then return true\n    else if n==26\
    \ then return true\n    else if n==27 then return true\n    else if n==28 then\
    \ return true\n    else if n==29 then return true\n    else if n==30 then return\
    \ true\n    else if n==31 then return true\n    else if n==32 then return true\n\
    \    else if n==33 then return true\n    else if n==34 then return true\n    else\
    \ if n==35 then return true\n    else if n==36 then return true\n    else if n==37\
    \ then return true\n    else if n==38 then return true\n    else if n==39 then\
    \ return true\n    else if n==40 then return true\n    else if n==41 then return\
    \ true\n    else if n==42 then return true\n    else if n==43 then return true\n\
    \    else if n==44 then return true\n    else if n==45 then return true\n    else\
    \ if n==46 then return true\n    else if n==47 then return true\n    else if n==48\
    \ then return true\n    else if n==49 then return true\n    else if n", "    if\
    \ is_equal_to_sum_even_helper(n,4)\n    else \n        false\n    end\nend\n</cell>\n\
    <code language=julia-1.5>", "    if is_equal_to_sum_even(n-1) == true \n    then\
    \ return true \n    else return false \n    end\nend\n\"\"\"Evaluate whether the\
    \ given number n can be written as the sum of exactly 4 positive odd numbers\n\
    \    Example\n    >>> is_equal_to_sum_odd(4)\n    false\n    >>> is_equal_to_sum_odd(6)\n\
    \    false\n    >>> is_equal_to_sum_odd(8)\n    true\n    \"\"\"", "    if n==0\
    \ then return true\n    if n==1 then return true\n    if n==2 then return true\n\
    \    if n==3 then return true\n    if n==4 then return true\n    if n==5 then\
    \ return true\n    if n==6 then return true\n    if n==7 then return true\n  \
    \  if n==8 then return true\n    if n==9 then return true\n    if n==10 then return\
    \ true\n    if n==11 then return true\n    if n==12 then return true\n    if n==13\
    \ then return true\n    if n==14 then return true\n    if n==15 then return true\n\
    \    if n==16 then return true\n    if n==17 then return true\n    if n==18 then\
    \ return true\n    if n==19 then return true\n    if n==20 then return true\n\
    \    if n==21 then return true\n    if n==22 then return true\n    if n==23 then\
    \ return true\n    if n==24 then return true\n    if n==25 then return true\n\
    \    if n==26 then return true\n    if n==27 then return true\n    if n==28 then\
    \ return true\n    if n==29 then return true\n    if n==30 then return true\n\
    \    if n==31 then return true\n    if n==32 then return true\n    if n==33 then\
    \ return true\n    if n==34 then return true\n    if n==35 then return true\n\
    \    if n==36 then return true\n    if n==37 then return true\n    if n==38 then\
    \ return true\n    if n==39 then return true\n    if n==40 then return true\n\
    \    if n==41 then return true\n    if n==42 then return true\n    if n==43 then\
    \ return true\n    if n==44 then return true\n    if n==45 then return true\n\
    \    if n==46 then return true\n    if n==47 then return true\n    if n==48 then\
    \ return true\n    if n==49 then return true\n    if n==50 then return true\n\
    \    if n==51 then return true\n    if n==52 then return true\n    if n==53 then\
    \ return true\n    if n==54 then return true\n    if n==55 then return true\n\
    \    if n==56 then return true\n    if n==57 then return true\n    if n==58 then\
    \ return true\n    if n==59 then return true\n    if n==60 then return true\n\
    \    if n==61 ", "    if n==0 then return true\n    if n==1 then return true\n\
    \    if n==2 then return true\n    if n==3 then return true\n    if n==4 then\
    \ return true\n    if n==5 then return true\n    if n==6 then return true\n  \
    \  if n==7 then return true\n    if n==8 then return true\n    if n==9 then return\
    \ true\n    if n==10 then return true\n    if n==11 then return true\n    if n==12\
    \ then return true\n    if n==13 then return true\n    if n==14 then return true\n\
    \    if n==15 then return true\n    if n==16 then return true\n    if n==17 then\
    \ return true\n    if n==18 then return true\n    if n==19 then return true\n\
    \    if n==20 then return true\n    if n==21 then return true\n    if n==22 then\
    \ return true\n    if n==23 then return true\n    if n==24 then return true\n\
    \    if n==25 then return true\n    if n==26 then return true\n    if n==27 then\
    \ return true\n    if n==28 then return true\n    if n==29 then return true\n\
    \    if n==30 then return true\n    if n==31 then return true\n    if n==32 then\
    \ return true\n    if n==33 then return true\n    if n==34 then return true\n\
    \    if n==35 then return true\n    if n==36 then return true\n    if n==37 then\
    \ return true\n    if n==38 then return true\n    if n==39 then return true\n\
    \    if n==40 then return true\n    if n==41 then return true\n    if n==42 then\
    \ return true\n    if n==43 then return true\n    if n==44 then return true\n\
    \    if n==45 then return true\n    if n==46 then return true\n    if n==47 then\
    \ return true\n    if n==48 then return true\n    if n==49 then return true\n\
    \    if n==50 then return true\n    if n==51 then return true\n    if n==52 then\
    \ return true\n    if n==53 then return true\n    if n==54 then return true\n\
    \    if n==55 then return true\n    if n==56 then return true\n    if n==57 then\
    \ return true\n    if n==58 then return true\n    if n==59 then return true\n\
    \    if n==60 then return true\n    if n==61 ", "    if is_equal_to_sum_even_helper(n,4)\n\
    \    else \n        false\n    end\nend", "    if n <= 0 \n        then return\
    \ false\n    else if n % 2 == 0\n        then return true\n    else if n % 4 ==\
    \ 0\n        then return true\n    else if n % 8 == 0\n        then return true\n\
    \    else if n % 16 == 0\n        then return true\n    else if n % 32 == 0\n\
    \        then return true\n    else if n % 64 == 0\n        then return true\n\
    \    else return false\nend\n</cell>\n<code language=julia-1.5>\n@assert is_equal_to_sum_even(10)\
    \ == false\n@assert is_equal_to_sum_even(11) == false\n@assert is_equal_to_sum_even(12)\
    \ == true\n@assert is_equal_to_sum_even(13) == true\n@assert is_equal_to_sum_even(14)\
    \ == true\n@assert is_equal_to_sum_even(15) == true\n@assert is_equal_to_sum_even(16)\
    \ == true\n@assert is_equal_to_sum_even(17) == true\n@assert is_equal_to_sum_even(18)\
    \ == true\n@assert is_equal_to_sum_even(19) == true\n@assert is_equal_to_sum_even(20)\
    \ == true\n@assert is_equal_to_sum_even(21) == true\n@assert is_equal_to_sum_even(22)\
    \ == true\n@assert is_equal_to_sum_even(23) == true\n@assert is_equal_to_sum_even(24)\
    \ == true\n@assert is_equal_to_sum_even(25) == true\n@assert is_equal_to_sum_even(26)\
    \ == true\n@assert is_equal_to_sum_even(27) == true\n@assert is_equal_to_sum_even(28)\
    \ == true\n@assert is_equal_to_sum_even(29) == true\n@assert is_equal_to_sum_even(30)\
    \ == true\n@assert is_equal_to_sum_even(31) == true\n@assert is_equal_to_sum_even(32)\
    \ == true\n@assert is_equal_to_sum_even(33) == true\n@assert is_equal_to_sum_even(34)\
    \ == true\n@assert is_equal_to_sum_even(35) == true\n@assert is_equal_to_sum_even(36)\
    \ == true\n@assert is_equal_to_sum_even(37) == true\n@assert is_equal_to_sum_even(38)\
    \ == true\n@assert is_equal_to_sum_even(39) == true\n@assert is_equal_to_sum_even(40)\
    \ == true\n@assert is_equal_to_sum_even(41) == true\n@assert is_equal_to_sum_even(42)\
    \ == true\n@assert is_equal_to_sum_even(43) == true\n@assert is_equal_to_sum_even(44)\
    \ == true\n@assert is_equal_to_sum_even(45) == true\n@assert is_equal_to_sum_even(46)\
    \ == true\n@assert is_equal_to_sum_", "    if is_sum_of_even(n) == true\n    \
    \    return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert is_equal_to_sum_even(10) == false\n@assert is_equal_to_sum_even(11) ==\
    \ false\n@assert is_equal_to_sum_even(12) == true\n@assert is_equal_to_sum_even(13)\
    \ == true\n@assert is_equal_to_sum_even(14) == true\n@assert is_equal_to_sum_even(15)\
    \ == true\n@assert is_equal_to_sum_even(16) == true\n@assert is_equal_to_sum_even(17)\
    \ == true\n@assert is_equal_to_sum_even(18) == true\n@assert is_equal_to_sum_even(19)\
    \ == true\n@assert is_equal_to_sum_even(20) == true\n@assert is_equal_to_sum_even(21)\
    \ == true\n@assert is_equal_to_sum_even(22) == true\n@assert is_equal_to_sum_even(23)\
    \ == true\n@assert is_equal_to_sum_even(24) == true\n@assert is_equal_to_sum_even(25)\
    \ == true\n@assert is_equal_to_sum_even(26) == true\n@assert is_equal_to_sum_even(27)\
    \ == true\n@assert is_equal_to_sum_even(28) == true\n@assert is_equal_to_sum_even(29)\
    \ == true\n@assert is_equal_to_sum_even(30) == true\n@assert is_equal_to_sum_even(31)\
    \ == true\n@assert is_equal_to_sum_even(32) == true\n@assert is_equal_to_sum_even(33)\
    \ == true\n@assert is_equal_to_sum_even(34) == true\n@assert is_equal_to_sum_even(35)\
    \ == true\n@assert is_equal_to_sum_even(36) == true\n@assert is_equal_to_sum_even(37)\
    \ == true\n@assert is_equal_to_sum_even(38) == true\n@assert is_equal_to_sum_even(39)\
    \ == true\n@assert is_equal_to_sum_even(40) == true\n@assert is_equal_to_sum_even(41)\
    \ == true\n@assert is_equal_to_sum_even(42) == true\n@assert is_equal_to_sum_even(43)\
    \ == true\n@assert is_equal_to_sum_even(44) == true\n@assert is_equal_to_sum_even(45)\
    \ == true\n@assert is_equal_to_sum_even(46) == true\n@assert is_equal_to_sum_even(47)\
    \ == true\n@assert is_equal_to_sum_even(48) == true\n@assert is_equal_to_sum_even(49)\
    \ == true\n@assert is_equal_to_sum_even(50) == true\n@assert is_equal_to_sum_even(51)\
    \ == true\n@assert is_equal_to_sum_even(52) == true\n@assert is_equal_to_sum_even(53)\
    \ == true\n@assert ", "    if is_sum_even(n) == true\n    else false\nend\n</cell>\n\
    <code language=julia-1.5>\n\"\"\"Evaluate whether the given number n can be written\
    \ as the sum of exactly 4 positive odd numbers\n    Example\n    >>> is_equal_to_sum_odd(4)\n\
    \    false\n    >>> is_equal_to_sum_odd(6)\n    false\n    >>> is_equal_to_sum_odd(8)\n\
    \    true\n    \"\"\"", "    if is_sum_even(n) == true\n    else false\nend\n\
    </cell>\n<code language=julia-1.5>\n@assert is_equal_to_sum_even(2) == false\n\
    @assert is_equal_to_sum_even(6) == false\n@assert is_equal_to_sum_even(8) == true\n\
    </cell>\n<text>\nExercise 2\nWrite a function that checks whether a given number\
    \ n is equal to the sum of exactly 4 positive odd numbers.", "    if is_equal_to_sum_even_helper(n,4)\n\
    \    else \n        false\nend\n</cell>\n<code language=julia-1.3>\n@assert is_equal_to_sum_even(8)\
    \ == true\n@assert is_equal_to_sum_even(10) == false\n@assert is_equal_to_sum_even(11)\
    \ == false\n@assert is_equal_to_sum_even(12) == false\n@assert is_equal_to_sum_even(13)\
    \ == false\n@assert is_equal_to_sum_even(14) == false\n@assert is_equal_to_sum_even(15)\
    \ == false\n@assert is_equal_to_sum_even(16) == false\n@assert is_equal_to_sum_even(17)\
    \ == false\n@assert is_equal_to_sum_even(18) == false\n@assert is_equal_to_sum_even(19)\
    \ == false\n@assert is_equal_to_sum_even(20) == false\n@assert is_equal_to_sum_even(21)\
    \ == false\n@assert is_equal_to_sum_even(22) == false\n@assert is_equal_to_sum_even(23)\
    \ == false\n@assert is_equal_to_sum_even(24) == false\n@assert is_equal_to_sum_even(25)\
    \ == false\n@assert is_equal_to_sum_even(26) == false\n@assert is_equal_to_sum_even(27)\
    \ == false\n@assert is_equal_to_sum_even(28) == false\n@assert is_equal_to_sum_even(29)\
    \ == false\n@assert is_equal_to_sum_even(30) == false\n@assert is_equal_to_sum_even(31)\
    \ == false\n@assert is_equal_to_sum_even(32) == false\n@assert is_equal_to_sum_even(33)\
    \ == false\n@assert is_equal_to_sum_even(34) == false\n@assert is_equal_to_sum_even(35)\
    \ == false\n@assert is_equal_to_sum_even(36) == false\n@assert is_equal_to_sum_even(37)\
    \ == false\n@assert is_equal_to_sum_even(38) == false\n@assert is_equal_to_sum_even(39)\
    \ == false\n@assert is_equal_to_sum_even(40) == false\n@assert is_equal_to_sum_even(41)\
    \ == false\n@assert is_equal_to_sum_even(42) == false\n@assert is_equal_to_sum_even(43)\
    \ == false\n@assert is_equal_to_sum_even(44) == false\n@assert is_equal_to_sum_even(45)\
    \ == false\n@assert is_equal_to_sum_even(46) == false\n@assert is_equal_to_sum_even(47)\
    \ == false\n@assert is_equal_to_sum_even(48) == false\n@assert is_equal_to_sum_even(49)\
    \ == false\n@assert is_equal_to_sum_even(50) == false\n@assert is_equal_to_sum_even(51)\
    \ == false\n@assert is_equal_to_sum_even(52) == false", "    if is_equal_to_sum_even_helper(n,4)\n\
    \    else \n        false\n    end\nend\n\"\"\"Evaluate whether the given number\
    \ n can be written as the sum of exactly 4 positive odd numbers\n    Example\n\
    \    >>> is_equal_to_sum_odd(4)\n    false\n    >>> is_equal_to_sum_odd(6)\n \
    \   false\n    >>> is_equal_to_sum_odd(8)\n    true\n    \"\"\"", "    if is_equal_to_sum_even(n-1)\
    \ == true\n        true\n    else\n        false\n    end\nend\n</cell>\n<code\
    \ language=julia-1.5>\nis_equal_to_sum_even(8)\n</cell>\n<text>\nExercise 2\n\
    Write a function is_equal_to_sum_odd(n) that returns true if the given number\
    \ n can be written as the sum of exactly 4 positive odd numbers\nExample\n>>>\
    \ is_equal_to_sum_odd(4)\nfalse\n>>> is_equal_to_sum_odd(6)\nfalse\n>>> is_equal_to_sum_odd(8)\n\
    true\n</text>\n<code language=julia-1.5>", "    if is_sum_even(n) == true\n  \
    \  else false\nend\n</cell>\n<code language=julia-1.5>\n@assert is_equal_to_sum_even(10)\
    \ == false\n@assert is_equal_to_sum_even(12) == true\n@assert is_equal_to_sum_even(13)\
    \ == true\n@assert is_equal_to_sum_even(14) == true\n@assert is_equal_to_sum_even(15)\
    \ == true\n@assert is_equal_to_sum_even(16) == true\n@assert is_equal_to_sum_even(17)\
    \ == true\n@assert is_equal_to_sum_even(18) == true\n@assert is_equal_to_sum_even(19)\
    \ == true\n@assert is_equal_to_sum_even(20) == true\n@assert is_equal_to_sum_even(21)\
    \ == true\n@assert is_equal_to_sum_even(22) == true\n@assert is_equal_to_sum_even(23)\
    \ == true\n@assert is_equal_to_sum_even(24) == true\n@assert is_equal_to_sum_even(25)\
    \ == true\n@assert is_equal_to_sum_even(26) == true\n@assert is_equal_to_sum_even(27)\
    \ == true\n@assert is_equal_to_sum_even(28) == true\n@assert is_equal_to_sum_even(29)\
    \ == true\n@assert is_equal_to_sum_even(30) == true\n@assert is_equal_to_sum_even(31)\
    \ == true\n@assert is_equal_to_sum_even(32) == true\n@assert is_equal_to_sum_even(33)\
    \ == true\n@assert is_equal_to_sum_even(34) == true\n@assert is_equal_to_sum_even(35)\
    \ == true\n@assert is_equal_to_sum_even(36) == true\n@assert is_equal_to_sum_even(37)\
    \ == true\n@assert is_equal_to_sum_even(38) == true\n@assert is_equal_to_sum_even(39)\
    \ == true\n@assert is_equal_to_sum_even(40) == true\n@assert is_equal_to_sum_even(41)\
    \ == true\n@assert is_equal_to_sum_even(42) == true\n@assert is_equal_to_sum_even(43)\
    \ == true\n@assert is_equal_to_sum_even(44) == true\n@assert is_equal_to_sum_even(45)\
    \ == true\n@assert is_equal_to_sum_even(46) == true\n@assert is_equal_to_sum_even(47)\
    \ == true\n@assert is_equal_to_sum_even(48) == true\n@assert is_equal_to_sum_even(49)\
    \ == true\n@assert is_equal_to_sum_even(50) == true\n@assert is_equal_to_sum_even(51)\
    \ == true\n@assert is_equal_to_sum_even(52) == true\n@assert is_equal_to_sum_even(53)\
    \ == true\n@assert is_equal_to_sum_even(54) == true\n@assert is_equal_to_", " \
    \   if n <= 0\n        error(\"n must be positive\")\n    else if n % 2 == 0\n\
    \        error(\"n must be even\")\n    else if n < 4\n        true\n    else\n\
    \        false\n    end\nend\n</cell>\n<code language=julia-1.4>\n\"\"\"Evaluate\
    \ whether the given number n can be written as the sum of exactly 4 positive odd\
    \ numbers\n    Example\n    >>> is_equal_to_sum_odd(4)\n    false\n    >>> is_equal_to_sum_odd(6)\n\
    \    false\n    >>> is_equal_to_sum_odd(8)\n    true\n    \"\"\"", "    if is_equal_to_sum_even_helper(n,4)\n\
    \    else \n        false\nend\n</cell>\n<code language=julia-1.5>\n@assert is_equal_to_sum_even(10)\
    \ == true\n@assert is_equal_to_sum_even(11) == false\n@assert is_equal_to_sum_even(12)\
    \ == false\n@assert is_equal_to_sum_even(13) == false\n@assert is_equal_to_sum_even(14)\
    \ == true\n@assert is_equal_to_sum_even(15) == false\n@assert is_equal_to_sum_even(16)\
    \ == false\n@assert is_equal_to_sum_even(17) == false\n@assert is_equal_to_sum_even(18)\
    \ == false\n@assert is_equal_to_sum_even(19) == false\n@assert is_equal_to_sum_even(20)\
    \ == false\n@assert is_equal_to_sum_even(21) == false\n@assert is_equal_to_sum_even(22)\
    \ == false\n@assert is_equal_to_sum_even(23) == false\n@assert is_equal_to_sum_even(24)\
    \ == false\n@assert is_equal_to_sum_even(25) == false\n@assert is_equal_to_sum_even(26)\
    \ == false\n@assert is_equal_to_sum_even(27) == false\n@assert is_equal_to_sum_even(28)\
    \ == false\n@assert is_equal_to_sum_even(29) == false\n@assert is_equal_to_sum_even(30)\
    \ == false\n@assert is_equal_to_sum_even(31) == false\n@assert is_equal_to_sum_even(32)\
    \ == false\n@assert is_equal_to_sum_even(33) == false\n@assert is_equal_to_sum_even(34)\
    \ == false\n@assert is_equal_to_sum_even(35) == false\n@assert is_equal_to_sum_even(36)\
    \ == false\n@assert is_equal_to_sum_even(37) == false\n@assert is_equal_to_sum_even(38)\
    \ == false\n@assert is_equal_to_sum_even(39) == false\n@assert is_equal_to_sum_even(40)\
    \ == false\n@assert is_equal_to_sum_even(41) == false\n@assert is_equal_to_sum_even(42)\
    \ == false\n@assert is_equal_to_sum_even(43) == false\n@assert is_equal_to_sum_even(44)\
    \ == false\n@assert is_equal_to_sum_even(45) == false\n@assert is_equal_to_sum_even(46)\
    \ == false\n@assert is_equal_to_sum_even(47) == false\n@assert is_equal_to_sum_even(48)\
    \ == false\n@assert is_equal_to_sum_even(49) == false\n@assert is_equal_to_sum_even(50)\
    \ == false\n@assert is_equal_to_sum_even(51) == false\n@assert is_equal_to_sum_even(52)\
    \ == false\n@assert is_equal_to_sum_even(53) == false", "    if n == 0\n     \
    \   true\n    else\n        n % 2 == 0 && is_equal_to_sum_even(n - 1) || is_equal_to_sum_even(n\
    \ - 2)\nend\n</cell>\n<code language=julia-1.4>\n\"\"\"Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive odd numbers\n    Example\n\
    \    >>> is_equal_to_sum_odd(4)\n    false\n    >>> is_equal_to_sum_odd(6)\n \
    \   false\n    >>> is_equal_to_sum_odd(8)\n    true\n    \"\"\"", "    if is_equal_to_sum_even(n-1)\n\
    \    else \n        true\nend\n</cell>\n<code language=julia-1.4>\nis_equal_to_sum_even(10)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns true if the given number\
    \ n is equal to the sum of exactly 4 positive odd numbers\nExample\n>>> is_equal_to_sum_odd(4)\n\
    true\n>>> is_equal_to_sum_odd(6)\nfalse\n>>> is_equal_to_sum_odd(8)\ntrue\n\"\"\
    \"", "    if n < 4 \n        return false\n    else if n % 2 == 0 \n        return\
    \ false\n    else if n % 3 == 0 \n        return false\n    else if n % 5 == 0\
    \ \n        return false\n    else \n        return true\nend\n</cell>\n<code\
    \ language=julia-1.5>\n@assert is_equal_to_sum_even(10) == false\n@assert is_equal_to_sum_even(11)\
    \ == false\n@assert is_equal_to_sum_even(12) == false\n@assert is_equal_to_sum_even(13)\
    \ == true\n@assert is_equal_to_sum_even(14) == true\n@assert is_equal_to_sum_even(15)\
    \ == true\n@assert is_equal_to_sum_even(16) == true\n@assert is_equal_to_sum_even(17)\
    \ == true\n@assert is_equal_to_sum_even(18) == true\n@assert is_equal_to_sum_even(19)\
    \ == true\n@assert is_equal_to_sum_even(20) == true\n@assert is_equal_to_sum_even(21)\
    \ == true\n@assert is_equal_to_sum_even(22) == true\n@assert is_equal_to_sum_even(23)\
    \ == true\n@assert is_equal_to_sum_even(24) == true\n@assert is_equal_to_sum_even(25)\
    \ == true\n@assert is_equal_to_sum_even(26) == true\n@assert is_equal_to_sum_even(27)\
    \ == true\n@assert is_equal_to_sum_even(28) == true\n@assert is_equal_to_sum_even(29)\
    \ == true\n@assert is_equal_to_sum_even(30) == true\n@assert is_equal_to_sum_even(31)\
    \ == true\n@assert is_equal_to_sum_even(32) == true\n@assert is_equal_to_sum_even(33)\
    \ == true\n@assert is_equal_to_sum_even(34) == true\n@assert is_equal_to_sum_even(35)\
    \ == true\n@assert is_equal_to_sum_even(36) == true\n@assert is_equal_to_sum_even(37)\
    \ == true\n@assert is_equal_to_sum_even(38) == true\n@assert is_equal_to_sum_even(39)\
    \ == true\n@assert is_equal_to_sum_even(40) == true\n@assert is_equal_to_sum_even(41)\
    \ == true\n@assert is_equal_to_sum_even(42) == true\n@assert is_equal_to_sum_even(43)\
    \ == true\n@assert is_equal_to_sum_even(44) == true\n@assert is_equal_to_sum_even(45)\
    \ == true\n@assert is_equal_to_sum_even(46) == true\n@assert is_equal_to_sum_even(47)\
    \ == true\n@assert is_equal_to_sum_even(48) == true\n@assert is_equal_to_sum_even(49)\
    \ == true\n@assert is_equal_to_sum_even(50) == true\n@assert is_equal_to_", " \
    \   if is_equal_to_sum_even(n-1) == true \n    then return true \n    else return\
    \ false \n    end\nend\n</cell>\n<code language=julia-1.4>\n\"\"\"Evaluate whether\
    \ the given number n can be written as the sum of exactly 4 positive odd numbers\n\
    \    Example\n    >>> is_equal_to_sum_odd(4)\n    false\n    >>> is_equal_to_sum_odd(6)\n\
    \    false\n    >>> is_equal_to_sum_odd(8)\n    true\n    \"\"\""]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

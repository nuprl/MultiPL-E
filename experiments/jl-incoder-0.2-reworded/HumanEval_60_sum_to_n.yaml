name: HumanEval_60_sum_to_n
language: jl
prompt: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
  \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
  \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
  \ \n"
tests: "using Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
  \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
  \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
completions: ["    if n==0 \n        then return 0\n    else \n        then return\
    \ n+sum_to_n(n-1)\n    end\nend\n</cell>\n<code language=julia-1.3>\nsum_to_n(30)\n\
    </cell>\n<code language=julia-1.3>\nsum_to_n(100)\n</cell>\n<code language=julia-1.3>\n\
    sum_to_n(5)\n</cell>\n<code language=julia-1.3>\nsum_to_n(10)\n</cell>\n<code\
    \ language=julia-1.3>\nsum_to_n(1)\n</cell>\n<text>\nExercise: Write a function\
    \ that returns the factorial of a number.", "    if n == 0\n        1\n    else\n\
    \        n * sum_to_n(n - 1)\nend\n</cell>\n<code language=julia-1.5>\nsum_to_n(30)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the factorial of a\
    \ number.", "    if n < 1\n        error(\"n must be positive\")\n    else\n \
    \       return n * (n + 1) / 2\nend", "    if n <= 0\n        error(\"n must be\
    \ positive\")\n    else\n        sum_to_n_impl(n)\n    end\nend\nsum_to_n_impl(n::Int64)::Int64\
    \ = \n    if n == 0\n        0\n    else\n        n * sum_to_n_impl(n-1)\n   \
    \ end\nend\n</cell>\n<code language=julia-1.0>\nsum_to_n(30)\n</cell>\n<code language=julia-1.0>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.0>\nsum_to_n(5)\n</cell>\n<code\
    \ language=julia-1.0>\nsum_to_n(10)\n</cell>\n<code language=julia-1.0>\nsum_to_n(1)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the factorial of a\
    \ number.", "    if n == 0 \n        then return 0 \n        else return n + sum_to_n(n\
    \ - 1)\n    end\nend\n</cell>\n<code language=julia-1.3>\nsum_to_n(30)\n</cell>\n\
    <code language=julia-1.3>\nsum_to_n(100)\n</cell>\n<code language=julia-1.3>\n\
    sum_to_n(5)\n</cell>\n<code language=julia-1.3>\nsum_to_n(10)\n</cell>\n<code\
    \ language=julia-1.3>\nsum_to_n(1)\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that returns the factorial of a number.", "    if n < 1 \n        error(\"n\
    \ must be positive\")\n    else if n == 1 \n        1\n    else \n        sum_to_n(n\
    \ - 1) + n\n    end\nend\n</cell>\n<code language=julia-1.3>\nsum_to_n(30)\n</cell>\n\
    <code language=julia-1.3>\nsum_to_n(100)\n</cell>\n<code language=julia-1.3>\n\
    sum_to_n(5)\n</cell>\n<code language=julia-1.3>\nsum_to_n(10)\n</cell>\n<code\
    \ language=julia-1.3>\nsum_to_n(1)\n</cell>\n<text>\nExercise\nWrite a function\
    \ that sums numbers from 1 to n where n is given as an argument.", "    if n ==\
    \ 0 \n        then return 0\n    else \n        sum_to_n(n - 1) + n\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(30)\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function that returns the factorial of a number.", "    if n == 0 \n       \
    \ then return 0 \n        else return n + sum_to_n(n-1) \nend\n</cell>\n<code\
    \ language=julia-1.0>\nsum_to_n(30)\n</cell>\n<code language=julia-1.0>\nsum_to_n(100)\n\
    </cell>\n<code language=julia-1.0>\nsum_to_n(5)\n</cell>\n<code language=julia-1.0>\n\
    sum_to_n(10)\n</cell>\n<code language=julia-1.0>\nsum_to_n(1)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the factorial of a number.", "    if\
    \ n < 1 \n        error(\"n must be positive\")\n    else if n == 1 \n       \
    \ return 1 \n    else \n        return n + sum_to_n(n-1) \nend\n</cell>\n<code\
    \ language=julia-1.3>\nsum_to_n(30)\n</cell>\n<code language=julia-1.3>\nsum_to_n(100)\n\
    </cell>\n<code language=julia-1.3>\nsum_to_n(5)\n</cell>\n<code language=julia-1.3>\n\
    sum_to_n(10)\n</cell>\n<code language=julia-1.3>\nsum_to_n(1)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the factorial of a number.", "    if\
    \ n==1 \n        1 \n    else \n        n*sum_to_n(n-1)\nend\n</cell>\n<code language=julia-1.3>\n\
    sum_to_n(10)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the factorial\
    \ of a number.", "    if n == 0\n        0\n    else\n        1 + sum_to_n(n -\
    \ 1)\nend\n</cell>\n<code language=julia-1.3>\nsum_to_n(30)\n</cell>\n<code language=julia-1.3>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.3>\nsum_to_n(5)\n</cell>\n<code\
    \ language=julia-1.3>\nsum_to_n(10)\n</cell>\n<code language=julia-1.3>\nsum_to_n(1)\n\
    </cell>\n<text>\nExercise: Write a function that returns the sum of the first\
    \ n positive integers. \n(Hint: use the sum_to_n function you defined earlier)",
  "    if n <= 0\n        error(\"n must be positive\")\n    else\n        return\
    \ n\n    end\nend\n</cell>\n<code language=julia-1.5>\nsum_to_n(30)\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(100)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(5)\n</cell>\n<code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(1)\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that returns the factorial of a number.", "    if n == 0 \n        then return\
    \ 0\n    else \n        sum_to_n(n - 1) + n\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(30)\n</cell>\n<code language=julia-1.5>\nsum_to_n(100)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(5)\n</cell>\n<code language=julia-1.5>\nsum_to_n(10)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1)\n</cell>\n<text>\nExercise 2\n\
    Write a function that returns the sum of the numbers from 1 to n that are divisible\
    \ by 3.", "    if n == 0 \n        then return 1\n    else \n        sum_to_n(n\
    \ - 1) + n\nend\n</cell>\n<code language=julia-1.5>\nsum_to_n(30)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(100)\n</cell>\n<code language=julia-1.5>\nsum_to_n(5)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1)\n</cell>\n<text>\nExercise: Write a function that returns the factorial\
    \ of a number.", "    if n == 0\n        0\n    else\n        1 + sum_to_n(n -\
    \ 1)\nend\n</cell>\n<code language=julia-1.3>\nsum_to_n(30)\n</cell>\n<code language=julia-1.3>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.3>\nsum_to_n(5)\n</cell>\n<code\
    \ language=julia-1.3>\nsum_to_n(10)\n</cell>\n<code language=julia-1.3>\nsum_to_n(1)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the factorial of a\
    \ number.", "    if n <= 0\n        error(\"n must be positive\")\n    else if\
    \ n == 1\n        1\n    else\n        sum_to_n(n - 1) + 1\nend\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(10)\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that returns the factorial of a number.", "    if n <= 0\n        error(\"n\
    \ must be positive\")\n    else\n        return n + sum_to_n(n - 1)\n    end\n\
    end\n</cell>\n<code language=julia-1.0>\nsum_to_n(30)\n</cell>\n<code language=julia-1.0>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.0>\nsum_to_n(5)\n</cell>\n<code\
    \ language=julia-1.0>\nsum_to_n(10)\n</cell>\n<code language=julia-1.0>\nsum_to_n(1)\n\
    </cell>\n<text>\nExercise: Write a function that sums numbers from 1 to n but\
    \ stops when n reaches zero.", "    if n < 1 \n        error(\"n must be positive\"\
    )\n    else if n == 1 \n        1\n    else \n        sum_to_n(n - 1) + n\nend\n\
    </cell>\n<code language=julia-1.0>\nsum_to_n(30)\n</cell>\n<code language=julia-1.0>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.0>\nsum_to_n(5)\n</cell>\n<code\
    \ language=julia-1.0>\nsum_to_n(10)\n</cell>\n<code language=julia-1.0>\nsum_to_n(1)\n\
    </cell>\n<text>\nExercise: Write a function that returns the factorial of a number.",
  "    if n <= 0\n        error(\"n must be positive\")\n    else if n == 1\n    \
    \    1\n    else\n        sum_to_n(n - 1) + n\nend\n</cell>\n<code language=julia-1.3>\n\
    sum_to_n(30)\n</cell>\n<code language=julia-1.3>\nsum_to_n(100)\n</cell>\n<code\
    \ language=julia-1.3>\nsum_to_n(5)\n</cell>\n<code language=julia-1.3>\nsum_to_n(10)\n\
    </cell>\n<code language=julia-1.3>\nsum_to_n(1)\n</cell>\n<text>\nExercise 2\n\
    Write a function that returns the factorial of a number.", "    if n <= 0\n  \
    \      error(\"n must be positive\")\n    else\n        sum_to_n_impl(n, 0)\n\
    end\n</cell>\n<code language=julia-1.3>\nsum_to_n(30)\n</cell>\n<code language=julia-1.3>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.3>\nsum_to_n(5)\n</cell>\n<code\
    \ language=julia-1.3>\nsum_to_n(10)\n</cell>\n<code language=julia-1.3>\nsum_to_n(1)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the factorial of a\
    \ number."]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

name: HumanEval_39_prime_fib
language: jl
prompt: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
  \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n \
  \   >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
  \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n"
tests: "using Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1)\
  \ == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4)\
  \ == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
  \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
  @test(candidate(10) == 433494437)\nend\n"
completions: ["    if n < 2\n        return n\n    else if n == 2\n        return\
    \ 3\n    else if n == 3\n        return 5\n    else\n        return prime_fib(n\
    \ - 1) + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.5>", "    if n\
    \ < 2 \n        then return n\n    else if n == 2 \n        then return 1\n  \
    \  else if n % 2 == 0 \n        then return prime_fib(n - 1) + prime_fib(n - 2)\n\
    \    else \n        return prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n\
    <code language=julia-1.5>\nprime_fib(10)\n</cell>\n<code language=julia-1.5>",
  "    if n < 2\n        2\n    else\n        prime_fib(n - 1) + prime_fib(n - 2)\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib_list\
    \ returns list of prime Fibonacci numbers.\n    >>> prime_fib_list(10)\n    [2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29]\n    \"\"\"", "    if n == 0 \n        0\n\
    \    else if n == 1 \n        1\n    else \n        prime_fib(n - 1) + prime_fib(n\
    \ - 2)\nend\n</code>\n<|/ a tags=julia,fibonacci |>\n<| c |>\nThe `prime_fib`\
    \ function can be simplified to `function prime_fib(n::Int64)\n    if n == 0\n\
    \        0\n    elseif n == 1\n        1\n    else\n        prime_fib(n - 1) +\
    \ prime_fib(n - 2)\n    end\nend`\n<|/ c |>\n<| a tags=julia,fibonacci |>\n<code>",
  "    if n == 1 \n        2\n    else if n == 2 \n        3\n    else if n % 2 ==\
    \ 0 \n        prime_fib(n - 1) + prime_fib(n - 2)\n    else \n        prime_fib(n\
    \ - 1) + prime_fib(n - 3)\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n \
    \   prime_fib_iter returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n    3\n\
    \    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n    >>>\
    \ prime_fib_iter(5)\n    89\n    \"\"\"", "    if n == 0 || n == 1 \n        return\
    \ n\n    else \n        return prime_fib(n - 1) + prime_fib(n - 2)\nend\n</cell>\n\
    <code language=julia-1.5>\n\"\"\"\n    prime_fib_iter returns n-th number that\
    \ is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n    2\n\
    \    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n\
    \    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2\n     \
    \   2\n    else\n        prime_fib(n - 1) + prime_fib(n - 2)\nend\n</cell>\n<code\
    \ language=julia-1.3>\n\"\"\"\n    prime_fib_iter returns n-th number that is\
    \ a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n    2\n\
    \    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n\
    \    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2\n     \
    \   2\n    else\n        prime_fib(n - 1) + prime_fib(n - 2)\nend\n</cell>\n<code\
    \ language=julia-1.5>", "    if n < 2\n        2\n    else\n        prime_fib(n\
    \ - 1) + prime_fib(n - 2)\nend\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that returns the n-th number that is a Fibonacci number and it's also prime.",
  "    if n == 1 \n        2\n    else if n == 2 \n        3\n    else \n        prime_fib(n\
    \ - 1) + prime_fib(n - 2)\nend\n</cell>\n<text>\nExercise 10\nWrite a function\
    \ that checks if a number is prime or not. \nThe function should take one argument\
    \ and return a boolean.\nThe function should return true if the number is prime\
    \ and false otherwise.\nThe function should return false if the number is divisible\
    \ by any number other than 1 and itself.\nThe function should return false if\
    \ the number is less than 1.\nThe function should return false if the number is\
    \ greater than or equal to 2.", "    if n < 2\n        return n\n    else if n\
    \ == 2\n        return 3\n    else if n % 2 == 0\n        return prime_fib(n -\
    \ 1) + prime_fib(n - 2)\n    else\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 3)\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib_iter returns\
    \ n-th number that is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n\
    \    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n \
    \   >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\
    \"", "    if n < 2 \n        then return n\n    else if n == 2 \n        then\
    \ return 1\n    else if n % 2 == 0 \n        then return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    else \n        prime_fib(n - 1) + prime_fib(n - 2)\nend\n</cell>\n\
    <code language=julia-1.5>\n\"\"\"\n    prime_fib_iter returns n-th number that\
    \ is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n    2\n\
    \    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n\
    \    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2 \n    \
    \    then return n\n    else if n == 2 \n        then return 1\n    else if n\
    \ == 3 \n        then return 2\n    else \n        fib_n = 3\n        fib_n2 =\
    \ 2\n        while fib_n2 < n \n            fib_n2 = fib_n2 + fib_n\n        fib_n3\
    \ = fib_n2 + 1\n        while fib_n3 < n \n            fib_n3 = fib_n3 + fib_n\n\
    \        fib_n4 = fib_n3 + 1\n        while fib_n4 < n \n            fib_n4 =\
    \ fib_n4 + fib_n\n        fib_n5 = fib_n4 + 1\n        while fib_n5 < n \n   \
    \         fib_n5 = fib_n5 + fib_n\n        fib_n6 = fib_n5 + 1\n        while\
    \ fib_n6 < n \n            fib_n6 = fib_n6 + fib_n\n        fib_n7 = fib_n6 +\
    \ 1\n        while fib_n7 < n \n            fib_n7 = fib_n7 + fib_n\n        fib_n8\
    \ = fib_n7 + 1\n        while fib_n8 < n \n            fib_n8 = fib_n8 + fib_n\n\
    \        fib_n9 = fib_n8 + 1\n        while fib_n9 < n \n            fib_n9 =\
    \ fib_n9 + fib_n\n        fib_n10 = fib_n9 + 1\n        while fib_n10 < n \n \
    \           fib_n10 = fib_n10 + fib_n\n        fib_n11 = fib_n10 + 1\n       \
    \ while fib_n11 < n \n            fib_n11 = fib_n11 + fib_n\n        fib_n12 =\
    \ fib_n11 + 1\n        while fib_n12 < n \n            fib_n12 = fib_n12 + fib_n\n\
    \        fib_n13 = fib_n12 + 1\n        while fib_n13 < n \n            fib_n13\
    \ = fib_n13 + fib_n\n        fib_n14 = fib_n13 + 1\n        while fib_n14 < n\
    \ \n            fib_n14 = fib_n14 + fib_n\n        fib_n15 = fib_n14 + 1\n   \
    \     while fib_n15 < n \n            fib_n15 = fib_n15 + fib_n\n        fib_n16\
    \ = fib_n15 + 1\n        while ", "    if n < 2\n        2\n    else if n % 2\
    \ == 0\n        prime_fib(n - 1) + prime_fib(n - 2)\n    else\n        prime_fib(n\
    \ - 1) + prime_fib(n - 3)\n    end\nend\n</cell>\n<code language=julia-1.5>",
  "    if n < 2\n        1\n    else\n        prime_fib(n - 1) + prime_fib(n - 2)\n\
    end\n</cell>\n<code language=julia-1.4>\n\"\"\"\n    prime_fib_iter returns n-th\
    \ number that is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n\
    \    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n \
    \   >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\
    \"", "    if n < 2 \n        then return n\n    else \n        prime_fib(n - 1)\
    \ + prime_fib(n - 2)\nend\n</code>\n<|/ a tags=julia,fibonacci,primes |>\n<| c\
    \ |>\nThis does not provide an answer to the question. To critique or request\
    \ clarification from an author, leave a comment below their post. - [From Review](/review/low-quality-posts/25817994)\n\
    <|/ c |>\n<| c |>\nI believe this does answer the question. He asked how to find\
    \ the nth Fibonacci number and the answer was to find the nth Fibonacci number\
    \ that is a prime number. He also asked how to do this in Julia. He also asked\
    \ how to do this in Julia without using recursion. He also asked how to do this\
    \ in Julia without using any packages. He also asked how to do this in Julia without\
    \ using any packages. He also asked how to do this in Julia without using any\
    \ packages. He also asked how to do this in Julia without using any packages.\
    \ He also asked how to do this in Julia without using any packages. He also asked\
    \ how to do this in Julia without using any packages. He also asked how to do\
    \ this in Julia without using any packages. He also asked how to do this in Julia\
    \ without using any packages. He also asked how to do this in Julia without using\
    \ any packages. He also asked how to do this in Julia without using any packages.\n\
    <|/ c |>\n<| c |>\nThis does not provide an answer to the question. To critique\
    \ or request clarification from an author, leave a comment below their post. -\
    \ [From Review](/review/low-quality-posts/25817994)\n<|/ c |>\n<| c |>\nThis does\
    \ not provide an answer to the question. To critique or request clarification\
    \ from an author, leave a comment below their post. - [From Review](/review/low-quality-posts/25817994)\n\
    <|/ c |>\n<| c |>\nThis does not provide an answer to the question. To critique\
    \ or request clarification from an author, leave a comment below their post. -\
    \ [From Review](/review/low-quality-posts/25817994)\n<|/ c |>\n<| a dscore=2 |>\n\
    <code>", "    if n < 2\n        1\n    else\n        prime_fib(n-1) + prime_fib(n-2)\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib_iter\
    \ returns n-th number that is a Fibonacci number and it's also prime.\n    >>>\
    \ prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n\
    \    5\n    >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n\
    \    \"\"\"", "    if n < 2 \n        return n\n    else if n == 2 \n        return\
    \ 3\n    else if n == 3 \n        return 5\n    else if n % 2 == 0 \n        return\
    \ prime_fib(n - 1) + prime_fib(n - 2)\n    else \n        return prime_fib(n -\
    \ 1) + prime_fib(n - 3)\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n   \
    \ prime_fib_iter returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n    3\n\
    \    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n    >>>\
    \ prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2\n        2\n    else\n\
    \        if prime_fib(n - 2) == true\n            prime_fib(n - 2)\n        else\n\
    \            prime_fib(n - 1) + prime_fib(n - 2)\n        end\n    end\nend\n\
    </code>\n<|/ a tags=julia,fibonacci |>\n<| c |>\nThis doesn't work for me. `prime_fib(5)`\
    \ returns `89` instead of `5`.\n<|/ c |>\n<| c |>\nI forgot to add `prime_fib(5)`\
    \ at the end. Now it works.\n<|/ c |>\n<| a tags=julia,fibonacci |>\nI wrote a\
    \ package for Julia that does this for you:\nhttps://github.com/rjmccormick/fibonacci\n\
    <code>\njulia> using Fibonacci", "    if n < 2\n        1\n    else\n        prime_fib(n-1)\
    \ + prime_fib(n-2)\n    end\nend\n</cell>\n<text>\nExercise 4\nWrite a function\
    \ that returns n-th number that is a Fibonacci number and it's also prime.\nThe\
    \ function should take one argument n and return a number.", "    if n < 2\n \
    \       2\n    else if n == 2\n        3\n    else\n        prime_fib(n - 1) +\
    \ prime_fib(n - 2)\nend\n</cell>\n<text>\nLet's try it on our own:", "    if n\
    \ < 2\n        2\n    else\n        prime_fib(n - 1) + prime_fib(n - 2)\nend\n\
    </cell>\n<code language=julia-1.3>\n\"\"\"\n    prime_fib returns n-th number\
    \ that is a Fibonacci number and it's also prime.\n    >>> prime_fib(1)\n    2\n\
    \    >>> prime_fib(2)\n    3\n    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n\
    \    13\n    >>> prime_fib(5)\n    89\n    \"\"\"", "    if n < 2\n        return\
    \ n\n    else if n == 2\n        return 3\n    else if n % 2 == 0\n        return\
    \ prime_fib(n - 1) + prime_fib(n - 2)\n    else\n        return prime_fib(n -\
    \ 1) + prime_fib(n - 3)\nend\n</cell>\n<code language=julia-1.5>\nprime_fib(4)\n\
    </cell>\n<code language=julia-1.5>", "    if n == 1 \n        return 2 \n    else\
    \ \n        return prime_fib(n - 1) + prime_fib(n - 2) \nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns n-th number that is a Fibonacci number\
    \ and it's also prime.\nHint: use prime_fib function.", "    if n < 2 \n     \
    \   then return n\n    else if n == 2 \n        then return 1\n    else if n ==\
    \ 3 \n        then return 2\n    else \n        fib_n = prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n        if fib_n % 2 == 0 \n            then return fib_n\n        else\
    \ return fib_n + 1\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\n    prime_fib_iter\
    \ returns n-th number that is a Fibonacci number and it's also prime.\n    >>>\
    \ prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n\
    \    5\n    >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n\
    \    \"\"\"", "    if n < 2 \n        return n\n    else if n == 2 \n        return\
    \ 3\n    else if n == 3 \n        return 5\n    else if n % 2 == 0 \n        return\
    \ prime_fib(n - 1) + prime_fib(n - 2)\n    else \n        return prime_fib(n -\
    \ 1) + prime_fib(n - 3)\nend\n</cell>\n<code language=julia-1.0>\n\"\"\"\n   \
    \ prime_fib_iter returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n    3\n\
    \    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n    >>>\
    \ prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2\n        1\n    else\n\
    \        prime_fib(n - 1) + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n    >>>\
    \ prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n  \
    \  89\n    \"\"\"", "    if n < 2 \n        return n\n    else if n == 2 \n  \
    \      return 3\n    else if n == 3 \n        return 5\n    else if n % 2 == 0\
    \ \n        return prime_fib(n - 1) + prime_fib(n - 2)\n    else \n        return\
    \ prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n<code language=julia-1.5>",
  "    if n < 2 \n        then return n\n    else \n        if n == 2 \n         \
    \   then return 2\n        else \n            prime_fib(n - 1) + prime_fib(n -\
    \ 2)\nend\n</cell>\n<code language=julia-1.4>\n\"\"\"\n    prime_fib_iter returns\
    \ n-th number that is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n\
    \    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n \
    \   >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\
    \"", "    if n < 2\n        return n\n    else if n == 2\n        return 3\n \
    \   else if n % 2 == 0\n        return prime_fib(n - 1) + prime_fib(n - 2)\n \
    \   else\n        return prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n<code\
    \ language=julia-1.5>\n\"\"\"\n    prime_fib_iter returns n-th number that is\
    \ a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n    2\n\
    \    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n\
    \    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n == 0 || n ==\
    \ 1 \n        then return n\n    else \n        prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    end\nend\n</code>\n<|/ a tags=julia,fibonacci |>\n<| a tags=julia,fibonacci\
    \ |>\n<code>", "    if n == 0 \n        0\n    else if n == 1 \n        1\n  \
    \  else \n        prime_fib(n - 1) + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    prime_fib_list returns list of prime Fibonacci numbers.\n    >>> prime_fib_list(10)\n\
    \    [2, 3, 5, 7, 11, 13, 17, 19, 23, 29]\n    \"\"\"", "    if n < 2\n      \
    \  1\n    else\n        prime_fib(n-1) + prime_fib(n-2)\nend\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\n    prime_fib_iter returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n\
    \    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n\
    \    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2\n        1\n  \
    \  else\n        prime_fib(n - 1) + prime_fib(n - 2)\n    end\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a function that checks if a number is prime or not.\
    \ Hint: use prime_fib function.", "    if n < 2\n        prime_fib(n) = n\n  \
    \  else\n        prime_fib(n) = prime_fib(n-1) + prime_fib(n-2)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib_iter returns n-th number\
    \ that is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n\
    \    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n \
    \   >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\
    \"", "    if n < 2\n        return n\n    else if n == 2\n        return 3\n \
    \   else if n % 2 == 0\n        return prime_fib(n - 1) + prime_fib(n - 2)\n \
    \   else\n        return prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n<code\
    \ language=julia-1.3>", "    if n < 2 \n        then return n\n    else if n ==\
    \ 2 \n        then return 1\n    else \n        prime_fib(n - 1) + prime_fib(n\
    \ - 2)\nend\n</code>\n<|/ a tags=julia,fibonacci |>\n<| a dscore=2 |>\n<code>",
  "    if n < 2 \n        then return n\n    else \n        prime_fib(n - 1) + prime_fib(n\
    \ - 2)\nend\n</code>\n<|/ a dscore=1 |>\n<| a tags=julia,fibonacci |>\n<code>",
  "    if n < 2\n        2\n    else\n        if prime_fib(n - 2) == prime_fib(n -\
    \ 1)\n            prime_fib(n - 2)\n        else\n            prime_fib(n - 1)\
    \ + prime_fib(n - 2)\n        end\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n    >>>\
    \ prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n  \
    \  89\n    \"\"\"", "    if n < 2\n        2\n    else\n        prime_fib(n-1)\
    \ + prime_fib(n-2)\n    end\nend\n</cell>\n<text>\nExercise 5\nWrite a function\
    \ that returns n-th number that is a Fibonacci number and it's also prime.\nTest\
    \ your function with different inputs.", "    if n < 2 \n        then return n\n\
    \    else if n == 2 \n        then return 1\n    else if n % 2 == 0 \n       \
    \ then return prime_fib(n - 1) + prime_fib(n - 2)\n    else \n        return prime_fib(n\
    \ - 1) + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n \
    \   prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    \    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n    >>> prime_fib(3)\n\
    \    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n    89\n    \"\"\"",
  "    if n < 2\n        2\n    else\n        if prime_fib(n - 2) == prime_fib(n -\
    \ 1)\n            prime_fib(n - 2)\n        else\n            prime_fib(n - 1)\
    \ + prime_fib(n - 2)\n        end\n    end\nend\n</code>\n<|/ a dscore=1 |>\n\
    <| c |>\nThanks for your answer. Can you please explain how you did this and why\
    \ you did it this way?\n<|/ c |>\n<| c |>\nI used recursion to solve this problem.\
    \ First I tried to solve this problem using loops. But I got stuck at some point\
    \ and I thought that recursion is better. Now I solved this problem using recursion\
    \ and I explained my solution in the answer.\n<|/ c |>\n<| a dscore=1 |>\n<code>",
  "    if n < 2\n        2\n    else\n        prime_fib(n - 1) + prime_fib(n - 2)\n\
    \    end\nend\n</cell>\n<code language=julia-1.4>\n\"\"\"\n    prime_fib_iter\
    \ returns n-th number that is a Fibonacci number and it's also prime.\n    >>>\
    \ prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n\
    \    5\n    >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n\
    \    \"\"\"", "    if n < 2\n        2\n    else\n        if prime_fib(n - 2)\
    \ == true\n            prime_fib(n - 2)\n        else\n            prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n        end\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    prime_fib_iter returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n\
    \    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n\
    \    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n == 1 \n        2\n\
    \    else if n == 2 \n        3\n    else \n        prime_fib(n-1) + prime_fib(n-2)\n\
    end\n</cell>\n<code language=julia-1.0>\nprime_fib(5)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes a number as input and returns the factorial of\
    \ that number.", "    if n == 0 || n == 1 \n        then return n\n    else \n\
    \        prime_fib(n - 1) + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\n    prime_fib_iter returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n\
    \    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n\
    \    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n == 0 || n == 1 \n \
    \       return n\n    else \n        return prime_fib(n - 1) + prime_fib(n - 2)\n\
    end\n</cell>\n<code language=julia-1.1>", "    if n < 2\n        2\n    else\n\
    \        prime_fib(n - 1) + prime_fib(n - 2)\n    end\nend\n</cell>\n<code language=julia-1.5>",
  "    if n < 2 \n        then return n\n    else \n        prime_fib(n - 1) + prime_fib(n\
    \ - 2)\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib returns\
    \ n-th number that is a Fibonacci number and it's also prime.\n    >>> prime_fib(1)\n\
    \    2\n    >>> prime_fib(2)\n    3\n    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n\
    \    13\n    >>> prime_fib(5)\n    89\n    \"\"\"", "    if n < 2 \n        then\
    \ return n\n    else if n == 2 \n        then return 1\n    else if n % 2 == 0\
    \ \n        then return prime_fib(n - 1) + prime_fib(n - 2)\n    else \n     \
    \   return prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n<code language=julia-1.0>\n\
    \"\"\"\n    prime_fib_iter returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n\
    \    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n\
    \    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2\n        2\n  \
    \  else if n % 2 == 0\n        prime_fib(n - 1) + prime_fib(n - 2)\n    else\n\
    \        prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n<code language=julia-1.5>\n\
    prime_fib(10)\n</cell>\n<code language=julia-1.5>", "    if n < 2\n        return\
    \ n\n    else if n == 2\n        return 3\n    else if n % 2 == 0\n        return\
    \ prime_fib(n - 1) + prime_fib(n - 2)\n    else\n        return prime_fib(n -\
    \ 1) + prime_fib(n - 3)\nend\n</cell>\n<code language=julia-1.5>\nprime_fib(1)\n\
    </cell>\n<code language=julia-1.5>\nprime_fib(2)\n</cell>\n<code language=julia-1.5>\n\
    prime_fib(3)\n</cell>\n<code language=julia-1.5>\nprime_fib(4)\n</cell>\n<code\
    \ language=julia-1.5>\nprime_fib(5)\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that returns n-th number that is a Fibonacci number and it's also prime.\nHint:\
    \ Use a while loop to do this.", "    if n < 2\n        2\n    else\n        prime_fib(n\
    \ - 1) + prime_fib(n - 2)\nend\n</code>\n<|/ a tags=julia,fibonacci |>\n<| a dscore=2\
    \ |>\n<code>", "    if n == 0 || n == 1 \n        then return n\n    else \n \
    \       prime_fib(n - 1) + prime_fib(n - 2)\nend\n</code>\n<|/ a tags=julia,fibonacci,primes\
    \ |>\n<| a dscore=0 |>\n<code>", "    if n < 2 \n        then return n\n    else\
    \ if n == 2 \n        then return 1\n    else if n % 2 == 0 \n        then return\
    \ prime_fib(n - 1) + prime_fib(n - 2)\n    else \n        prime_fib(n - 1) + prime_fib(n\
    \ - 2)\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib_iter returns\
    \ n-th number that is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n\
    \    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n \
    \   >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\
    \"", "    if n < 2 \n        then return n\n    else if n == 2 \n        then\
    \ return 1\n    else if n == 3 \n        then return 2\n    else if n % 2 == 0\
    \ \n        then return prime_fib(n - 1) + prime_fib(n - 2)\n    else \n     \
    \   return prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    prime_fib_iter returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n\
    \    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n\
    \    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2 \n        return\
    \ n\n    else if n == 2 \n        return 3\n    else if n % 2 == 0 \n        return\
    \ prime_fib(n - 1) + prime_fib(n - 2)\n    else \n        return prime_fib(n -\
    \ 1) + prime_fib(n - 3)\nend\n</cell>\n<code language=julia-1.0>\n\"\"\"\n   \
    \ prime_fib_iter returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n    3\n\
    \    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n    >>>\
    \ prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2\n        return n\n  \
    \  else if n == 2\n        return 3\n    else if n % 2 == 0\n        return prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n    else\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 3)\nend\n</cell>\n<code language=julia-1.0>\nprime_fib(2)\n</cell>\n<code\
    \ language=julia-1.0>\nprime_fib(3)\n</cell>\n<code language=julia-1.0>\nprime_fib(4)\n\
    </cell>\n<code language=julia-1.0>\nprime_fib(5)\n</cell>\n<code language=julia-1.0>\n\
    prime_fib(6)\n</cell>\n<code language=julia-1.0>\nprime_fib(7)\n</cell>\n<code\
    \ language=julia-1.0>\nprime_fib(8)\n</cell>\n<code language=julia-1.0>\nprime_fib(9)\n\
    </cell>\n<code language=julia-1.0>\nprime_fib(10)\n</cell>\n<code language=julia-1.0>\n\
    prime_fib(11)\n</cell>\n<code language=julia-1.0>\nprime_fib(12)\n</cell>\n<code\
    \ language=julia-1.0>\nprime_fib(13)\n</cell>\n<code language=julia-1.0>\nprime_fib(14)\n\
    </cell>\n<code language=julia-1.0>\nprime_fib(15)\n</cell>\n<code language=julia-1.0>\n\
    prime_fib(16)\n</cell>\n<code language=julia-1.0>\nprime_fib(17)\n</cell>\n<code\
    \ language=julia-1.0>\nprime_fib(18)\n</cell>\n<code language=julia-1.0>\nprime_fib(19)\n\
    </cell>\n<code language=julia-1.0>\nprime_fib(20)\n</cell>\n<code language=julia-1.0>\n\
    prime_fib(21)\n</cell>\n<code language=julia-1.0>\nprime_fib(22)\n</cell>\n<code\
    \ language=julia-1.0>\nprime_fib(23)\n</cell>\n<code language=julia-1.0>\nprime_fib(24)\n\
    </cell>\n<code language=julia-1.0>\nprime_fib(25)\n</cell>\n<code language=julia-1.0>\n\
    prime_fib(26)\n</cell>\n<code language=julia-1.0>\nprime_fib(27)\n</cell>\n<code\
    \ language=julia-1.0>\nprime_fib(28)\n</cell>\n<code language=julia-1.0>\nprime_fib(29)\n\
    </cell>\n", "    if n < 2 \n        then return n\n    else if n == 2 \n     \
    \   then return 1\n    else \n        prime_fib(n - 1) + prime_fib(n - 2)\nend\n\
    </code>\n<|/ a dscore=1 |>\n<| a |>\n<code>", "    if n < 2\n        2\n    else\n\
    \        prime_fib(n - 1) + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.0>\n\
    \"\"\"\n    prime_fib_list returns list of prime Fibonacci numbers.\n    >>> prime_fib_list(10)\n\
    \    [2, 3, 5, 7, 11, 13, 17, 19, 23, 29]\n    \"\"\"", "    if n == 0 \n    \
    \    then return 1\n    else if n == 1 \n        then return 2\n    else if n\
    \ % 2 == 0 \n        then return prime_fib(n - 1) + prime_fib(n - 2)\n    else\
    \ \n        then return prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n<text>\n\
    Exercise 4\nWrite a function that calculates the factorial of a number. \nThe\
    \ function should take one argument, n, which represents the number whose factorial\
    \ is to be calculated.\nThe function should return the factorial of n. \nThe function\
    \ should raise an error if the argument is not an integer.", "    if n == 1 \n\
    \        2\n    else if n == 2 \n        3\n    else if n % 2 == 0 \n        prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n    else \n        prime_fib(n - 1) + prime_fib(n -\
    \ 3)\nend\n</code>\n<|/ a tags=julia,fibonacci |>\n<| a dscore=2 |>\n<code>",
  "    if n < 2\n        return n\n    else if n == 2\n        return 3\n    else\
    \ if n % 2 == 0\n        return prime_fib(n - 1) + prime_fib(n - 2)\n    else\n\
    \        return prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\n    prime_fib_iter returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n\
    \    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n\
    \    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2\n        2\n  \
    \  else\n        prime_fib(n - 1) + prime_fib(n - 2)\nend\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n>>> prime_fib(4)\n13\n>>> prime_fib(5)\n89\n>>> prime_fib(6)\n\
    144\n>>> prime_fib(7)\n233\n>>> prime_fib(8)\n377\n>>> prime_fib(9)\n610\n>>>\
    \ prime_fib(10)\n987\n>>> prime_fib(11)\n1597\n>>> prime_fib(12)\n2584\n>>> prime_fib(13)\n\
    4181\n>>> prime_fib(14)\n6765\n>>> prime_fib(15)\n10946\n>>> prime_fib(16)\n17711\n\
    >>> prime_fib(17)\n28657\n>>> prime_fib(18)\n46368\n>>> prime_fib(19)\n75025\n\
    >>> prime_fib(20)\n121393\n>>> prime_fib(21)\n196418\n>>> prime_fib(22)\n317811\n\
    >>> prime_fib(23)\n514229\n>>> prime_fib(24)\n832040\n>>> prime_fib(25)\n1346269\n\
    >>> prime_fib(26)\n2178309\n>>> prime_fib(27)\n3524578\n>>> prime_fib(28)\n5702887\n\
    >>> prime_fib(29)\n9227465\n>>> prime_fib(30)\n14930352\n>>> prime_fib(31)\n24157817\n\
    >>> prime_fib(32)\n39088169\n>>> prime_fib(33)\n63245986\n>>> prime_fib(34)\n\
    102334155\n>>> prime_fib(35)\n165580141\n>>> prime_fib(36)\n267914296\n>>> prime_fib(37)\n\
    433494437\n>>> prime_fib(38)\n701408733\n>>> prime_fib(39)\n1134903170\n>>> prime_fib(40)\n\
    1836311903\n>>> prime_fib(41)\n2971215073\n>>> prime_fib(42)\n4751619641\n>>>\
    \ prime_fib(43)\n7309888031\n>>> ", "    if n < 2\n        1\n    else\n     \
    \   prime_fib(n - 1) + prime_fib(n - 2)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    prime_fib_iter returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n\
    \    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n\
    \    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2\n        return\
    \ n\n    else if n == 2\n        return 3\n    else if n % 2 == 0\n        return\
    \ prime_fib(n - 1) + prime_fib(n - 2)\n    else\n        return prime_fib(n -\
    \ 1) + prime_fib(n - 3)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\"\"\
    \"\n    prime_fib_list returns list of prime Fibonacci numbers.\n    >>> prime_fib_list(10)\n\
    \    [2, 3, 5, 7, 11, 13, 17, 19]\n    \"\"\"", "    if n == 0 || n == 1 \n  \
    \      return n\n    else \n        return prime_fib(n - 1) + prime_fib(n - 2)\n\
    end\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib_iter returns n-th\
    \ number that is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n\
    \    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n \
    \   >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\
    \"", "    if n < 2 \n        return n\n    else if n == 2 \n        return 3\n\
    \    else if n == 3 \n        return 5\n    else if n % 2 == 0 \n        return\
    \ prime_fib(n - 1) + prime_fib(n - 2)\n    else \n        return prime_fib(n -\
    \ 3) + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.4>\n\"\"\"\n   \
    \ prime_fib_iter returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n    3\n\
    \    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n    >>>\
    \ prime_fib_iter(5)\n    89\n    \"\"\"", "    if n == 1 \n        2\n    else\
    \ if n == 2 \n        3\n    else if n % 2 == 0 \n        prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    else \n        prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n\
    <code language=julia-1.5>\n\"\"\"\n    prime_fib_iter returns n-th number that\
    \ is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n    2\n\
    \    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n\
    \    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2\n     \
    \   return n\n    else if n == 2\n        return 3\n    else if n % 2 == 0\n \
    \       return prime_fib(n - 1) + prime_fib(n - 2)\n    else\n        return prime_fib(n\
    \ - 1) + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n \
    \   prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    \    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n    >>> prime_fib(3)\n\
    \    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n    89\n    \"\"\"",
  "    if n < 2\n        1\n    else\n        prime_fib(n - 1) + prime_fib(n - 2)\n\
    end\n</cell>\n<text>\nExercise 5\nWrite a function that returns the n-th Fibonacci\
    \ number that is prime.", "    if n < 2\n        2\n    else\n        prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n    end\nend\n</cell>\n<code language=julia-1.3>\n\"\
    \"\"\n    prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n    >>> prime_fib(3)\n\
    \    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n    89\n    \"\"\"",
  "    if n < 2\n        return n\n    else if n == 2\n        return 3\n    else\
    \ if n % 2 == 0\n        return prime_fib(n - 1) + prime_fib(n - 2)\n    else\n\
    \        return prime_fib(n - 1) + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\n    prime_fib_iter returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n\
    \    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n\
    \    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2\n        2\n  \
    \  else if n % 2 == 0\n        prime_fib(n - 1) + prime_fib(n - 2)\n    else\n\
    \        prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\n    prime_fib_iter returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n\
    \    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n\
    \    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2 \n        return\
    \ n\n    else if n == 2 \n        return 3\n    else if n == 3 \n        return\
    \ 5\n    else if n % 2 == 0 \n        return prime_fib(n - 1) + prime_fib(n -\
    \ 2)\n    else \n        return prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n\
    <code language=julia-1.3>\n\"\"\"\n    prime_fib_iter returns n-th number that\
    \ is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n    2\n\
    \    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n\
    \    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2\n     \
    \   return n\n    else if n == 2\n        return 3\n    else if n == 3\n     \
    \   return 5\n    else if n % 2 == 0\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    else\n        return prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n\
    <code language=julia-1.5>", "    if n == 1 \n        2\n    else if n == 2 \n\
    \        3\n    else if n % 2 == 0 \n        prime_fib(n - 1) + prime_fib(n -\
    \ 2)\n    else \n        prime_fib(n - 1) + prime_fib(n - 3)\nend\n</code>\n<|/\
    \ a dscore=1 |>\n<| c |>\nThis code is not correct. Try running it on `prime_fib(4)`.\
    \ You will get `prime_fib(4): no function clause matching prime_fib(n::Int64)\
    \ arising from a use of prime_fib(4)`\n<|/ c |>\n<| c |>\nThanks for pointing\
    \ that out. I've fixed the code now.\n<|/ c |>\n<| a |>\n<code>", "    if n <\
    \ 2\n        1\n    else\n        prime_fib(n - 1) + prime_fib(n - 2)\n    end\n\
    end\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib_iter returns n-th\
    \ number that is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n\
    \    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n \
    \   >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\
    \"", "    if n < 2\n        prime_fib(n) = n\n    else\n        prime_fib(n) =\
    \ prime_fib(n-1) + prime_fib(n-2)\n    end\nend\n</code>\n<|/ a dscore=1 |>\n\
    <| a tags=julia,fibonacci |>\n<code>", "    if n < 2 \n        then return n\n\
    \    else if n == 2 \n        then return 1\n    else \n        prime_fib(n -\
    \ 1) + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.5>", "    if n ==\
    \ 1 \n        1\n    else if n == 2 \n        2\n    else \n        prime_fib(n\
    \ - 1) + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.5>", "    if n\
    \ < 2 \n        then return n\n    else \n        prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    end\nend\n</cell>\n<text>\nExercise 7\nWrite a function that returns\
    \ n-th number that is a Fibonacci number and it's also prime.\nHint: use prime_fib\
    \ function.", "    if n == 1 then return 2\n    if n == 2 then return 3\n    if\
    \ n == 3 then return 5\n    if n % 2 == 0 then return prime_fib(n / 2)\n    if\
    \ n % 3 == 0 then return prime_fib(n / 3)\n    return prime_fib(n / 2) + prime_fib(n\
    \ / 3)\nend\n</cell>\n<code language=julia-1.5>", "    if n == 1 \n        2\n\
    \    else if n == 2 \n        3\n    else \n        prime_fib(n - 1) + prime_fib(n\
    \ - 2)\nend\n</code>\n<|/ a tags=julia,fibonacci |>\n<| a tags=julia,fibonacci\
    \ |>\n<code>", "    if n == 0 \n        0\n    else if n == 1 \n        1\n  \
    \  else \n        prime_fib(n - 1) + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    prime_fib_iter returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n\
    \    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n\
    \    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2 \n        then\
    \ return n\n        else return prime_fib(n - 1) + prime_fib(n - 2)\n    end\n\
    end\n</cell>\n<text>\nLet's test our function", "    if n == 1 \n        return\
    \ 2\n    else if n == 2 \n        return 3\n    else \n        return prime_fib(n\
    \ - 1) + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.0>\n\"\"\"\n \
    \   prime_fib_iter returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n    3\n\
    \    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n    >>>\
    \ prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2 \n        return n\n \
    \   else if n == 2 \n        return 3\n    else if n == 3 \n        return 5\n\
    \    else if n % 2 == 0 \n        return prime_fib(n - 1) + prime_fib(n - 2)\n\
    \    else \n        return prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n\
    <code language=julia-1.4>\n\"\"\"\n    prime_fib_iter returns n-th number that\
    \ is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n    2\n\
    \    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n\
    \    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2 \n    \
    \    then return n\n    else if n == 2 \n        then return 1\n    else if n\
    \ % 2 == 0 \n        then return prime_fib(n - 1) + prime_fib(n - 2)\n    else\
    \ \n        prime_fib(n - 1) + prime_fib(n - 2)\nend\n</code>\n<|/ a tags=julia,fibonacci\
    \ |>\n<| a dscore=2 |>\nI wrote a package that does this for you:\nhttps://github.com/jamie-johnson/Fibonacci.jl\n\
    <code>\nusing Fibonacci", "    if n < 2\n        1\n    else\n        prime_fib(n-1)\
    \ + prime_fib(n-2)\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\n    prime_fib_iter\
    \ returns n-th number that is a Fibonacci number and it's also prime.\n    >>>\
    \ prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n\
    \    5\n    >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n\
    \    \"\"\"", "    if n == 1 \n        return 2\n    if n == 2 \n        return\
    \ 3\n    if n % 2 == 0 \n        return prime_fib(n - 1) + prime_fib(n - 2)\n\
    \    if n % 3 == 0 \n        return prime_fib(n - 3) + prime_fib(n - 2)\n    if\
    \ n % 5 == 0 \n        return prime_fib(n - 5) + prime_fib(n - 3)\n    if n %\
    \ 7 == 0 \n        return prime_fib(n - 7) + prime_fib(n - 5)\n    return prime_fib(n\
    \ - 7) + prime_fib(n - 5)\nend\n</cell>\n<code language=julia-1.0>\nprime_fib(1)\n\
    </cell>\n<code language=julia-1.0>\nprime_fib(2)\n</cell>\n<code language=julia-1.0>\n\
    prime_fib(3)\n</cell>\n<code language=julia-1.0>\nprime_fib(4)\n</cell>\n<code\
    \ language=julia-1.0>\nprime_fib(5)\n</cell>\n<code language=julia-1.0>\nprime_fib(6)\n\
    </cell>\n<code language=julia-1.0>\nprime_fib(7)\n</cell>\n<code language=julia-1.0>\n\
    prime_fib(8)\n</cell>\n<code language=julia-1.0>\nprime_fib(9)\n</cell>\n<code\
    \ language=julia-1.0>\nprime_fib(10)\n</cell>\n<code language=julia-1.0>\nprime_fib(11)\n\
    </cell>\n<code language=julia-1.0>\nprime_fib(12)\n</cell>\n<code language=julia-1.0>\n\
    prime_fib(13)\n</cell>\n<code language=julia-1.0>\nprime_fib(14)\n</cell>\n<code\
    \ language=julia-1.0>\nprime_fib(15)\n</cell>\n<code language=julia-1.0>\nprime_fib(16)\n\
    </cell>\n<code language=julia-1.0>\nprime_fib(17)\n</cell>\n<code language=julia-1.0>\n\
    prime_fib(18)\n</cell>\n<code language=julia-1.0>\nprime_fib(19)\n</cell>\n<code\
    \ language=julia-1.0>\nprime_fib(20)\n</cell>\n<code language=julia-1.0>\nprime_fib(21)\n\
    </cell>\n<code language=julia-1.0>\nprime_fib(22)\n</cell>\n<code language=julia-1.0>\n\
    prime_fib(23)\n</cell>\n<code language=julia-1.0>\nprime_fib(24)\n</cell>\n<code\
    \ language=julia-1.0>\nprime_fib(25)\n</", "    if n < 2 \n        then return\
    \ n\n    else if n == 2 \n        then return 1\n    else \n        prime_fib(n\
    \ - 1) + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\n \
    \   prime_fib_iter returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n    3\n\
    \    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n    >>>\
    \ prime_fib_iter(5)\n    89\n    \"\"\"", "    if n == 1 then return 2\n    if\
    \ n == 2 then return 3\n    if n % 2 == 0 then return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    else return prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n<code\
    \ language=julia-1.5>\n\"\"\"\n    prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n\
    \    3\n    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"", "    if n == 0\n        1\n    else\n        prime_fib(n\
    \ - 1) + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n \
    \   prime_fib_iter returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n    3\n\
    \    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n    >>>\
    \ prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2 \n        then return\
    \ n\n    else if n == 2 \n        then return 1\n    else if n % 2 == 0 \n   \
    \     then return prime_fib(n - 1) + prime_fib(n - 2)\n    else \n        return\
    \ prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n<code language=julia-1.0>\n\
    \"\"\"\n    prime_fib_iter returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n\
    \    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n\
    \    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2\n        2\n  \
    \  else\n        prime_fib(n - 1) + prime_fib(n - 2)\n    end\nend\n</code>\n\
    <|/ a dscore=1 |>\n<| a tags=julia,fibonacci,primes |>\n<code>", "    if n < 2\
    \ \n        then return n\n    else if n == 2 \n        then return 1\n    else\
    \ if n == 3 \n        then return 2\n    else if n % 2 == 0 \n        then return\
    \ prime_fib(n - 1) + prime_fib(n - 2)\n    else \n        then return prime_fib(n\
    \ - 1) + prime_fib(n - 3)\nend\n</cell>\n<code language=julia-1.0>\nprime_fib(5)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a number as input and\
    \ returns the factorial of that number.", "    if n == 1 \n        2\n    else\
    \ if n == 2 \n        3\n    else \n        prime_fib(n - 1) + prime_fib(n - 2)\n\
    end\n</cell>\n<code language=julia-1.1>\n\"\"\"\n    prime_fib_list returns list\
    \ of prime Fibonacci numbers.\n    >>> prime_fib_list()\n    [2, 3, 5, 7, 11,\
    \ 13, 17, 19]\n    \"\"\"", "    if n < 2\n        return n\n    else if n ==\
    \ 2\n        return 3\n    else if n % 2 == 0\n        return prime_fib(n - 1)\
    \ + prime_fib(n - 2)\n    else\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 3)\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib_iter returns\
    \ n-th number that is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n\
    \    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n \
    \   >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\
    \"", "    if n < 2\n        1\n    else\n        prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    end\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\n    prime_fib_iter\
    \ returns n-th number that is a Fibonacci number and it's also prime.\n    >>>\
    \ prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n\
    \    5\n    >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n\
    \    \"\"\"", "    if n < 2 || n > 100\n        error(\"n must be between 2 and\
    \ 100\")\n    end\n    if n == 2\n        return n\n    else\n        return prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\"\
    \"\"\n    prime_fib_iter returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n \
    \   3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n \
    \   >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n == 1 then return 2\n\
    \    if n == 2 then return 3\n    if n % 2 == 0 then return prime_fib(n / 2)\n\
    \    else return prime_fib(3 * n + 1)\nend\n</cell>\n<code language=julia-1.4>",
  "    if n < 2\n        1\n    else\n        prime_fib(n - 1) + prime_fib(n - 2)\n\
    end\n</code>\n<|/ a tags=julia,fibonacci |>\n<| c |>\nThis is not the Fibonacci\
    \ sequence. `prime_fib(5)` returns `89` but `prime_fib(4)` returns `13`.\n<|/\
    \ c |>\n<| c |>\nYes, I missed that point. Thanks for pointing it out. I've updated\
    \ the answer.\n<|/ c |>\n<| a dscore=1 |>\nThe Fibonacci sequence is defined as:\n\
    <code>\nF(0) = 0\nF(1) = 1\nF(n) = F(n-1) + F(n-2)\n</code>\nIn Julia, you can\
    \ define this as:\n<code>", "    if n == 0 || n == 1 \n        return n\n    else\
    \ \n        return prime_fib(n - 1) + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    prime_fib_iter returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n\
    \    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n\
    \    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2 \n        then\
    \ return n\n    else if n == 2 \n        then return 1\n    else if n == 3 \n\
    \        then return 2\n    else \n        fib_n = prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n        if fib_n % 2 == 0 \n            then return fib_n\n        else\
    \ \n            return fib_n + 1\nend\n</cell>\n<code language=julia-1.5>\nprime_fib(10)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that calculates factorial of a number.",
  "    if n < 2\n        2\n    else\n        prime_fib(n - 1) + prime_fib(n - 2)\n\
    \    end\nend\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't answer the question.\
    \ You're just repeating what the OP already knows.\n<|/ c |>\n<| c |>\nI guess\
    \ I misunderstood the question. I'll delete my answer if OP clarifies it.\n<|/\
    \ c |>\n<| c |>\nI guess I misunderstood the question. I'll delete my answer if\
    \ OP clarifies it.\n<|/ c |>\n<| c |>\nI guess I misunderstood the question. I'll\
    \ delete my answer if OP clarifies it.\n<|/ c |>\n<| c |>\nI guess I misunderstood\
    \ the question. I'll delete my answer if OP clarifies it.\n<|/ c |>\n<| a |>\n\
    <code>", "    if n < 2\n        2\n    else\n        prime_fib(n - 1) + prime_fib(n\
    \ - 2)\nend\n</cell>\n<code language=julia-1.3>", "    if n < 2\n        2\n \
    \   else\n        if prime_fib(n - 1) == n\n            prime_fib(n - 1)\n   \
    \     else\n            prime_fib(n - 1) + prime_fib(n - 2)\n        end\n   \
    \ end\nend\n</cell>\n<code language=julia-1.0>", "    if n < 2 \n        then\
    \ return n\n    else \n        prime_fib(n - 1) + prime_fib(n - 2)\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that calculates the factorial of a number.",
  "    if n < 2\n        return n\n    else if n == 2\n        return 3\n    else\
    \ if n % 2 == 0\n        return prime_fib(n - 1) + prime_fib(n - 2)\n    else\n\
    \        return prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n<code language=julia-1.0>\n\
    prime_fib(10)\n</cell>\n<code language=julia-1.0>", "    if n == 1 \n        return\
    \ 2\n    else if n == 2 \n        return 3\n    else if n % 2 == 0 \n        return\
    \ prime_fib(n - 1) + prime_fib(n - 2)\n    else \n        return prime_fib(n -\
    \ 1) + prime_fib(n - 3)\nend\n</cell>\n<code language=julia-1.0>\n\"\"\"\n   \
    \ prime_fib_iter returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n    3\n\
    \    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n    >>>\
    \ prime_fib_iter(5)\n    89\n    \"\"\"", "    if n == 1 \n        2\n    else\
    \ if n == 2 \n        3\n    else \n        prime_fib(n - 1) + prime_fib(n - 2)\n\
    end\n</cell>\n<text>\nExercise 7\nWrite a function that returns n-th number that\
    \ is a Fibonacci number and it's also prime.\n>>> prime_fib(5)\n89\n>>> prime_fib(6)\n\
    144\n>>> prime_fib(7)\n233\n>>> prime_fib(8)\n377\n>>> prime_fib(9)\n610\n>>>\
    \ prime_fib(10)\n987\n>>> prime_fib(11)\n1597\n>>> prime_fib(12)\n2584\n>>> prime_fib(13)\n\
    4181\n>>> prime_fib(14)\n6765\n>>> prime_fib(15)\n10946\n>>> prime_fib(16)\n17711\n\
    >>> prime_fib(17)\n28657\n>>> prime_fib(18)\n46368\n>>> prime_fib(19)\n75025\n\
    >>> prime_fib(20)\n121393\n>>> prime_fib(21)\n196418\n>>> prime_fib(22)\n317811\n\
    >>> prime_fib(23)\n514229\n>>> prime_fib(24)\n832040\n>>> prime_fib(25)\n1346269\n\
    >>> prime_fib(26)\n2178309\n>>> prime_fib(27)\n3524578\n>>> prime_fib(28)\n5702887\n\
    >>> prime_fib(29)\n9227465\n>>> prime_fib(30)\n14930352\n>>> prime_fib(31)\n24157817\n\
    >>> prime_fib(32)\n39088169\n>>> prime_fib(33)\n63245986\n>>> prime_fib(34)\n\
    102334155\n>>> prime_fib(35)\n165580141\n>>> prime_fib(36)\n267914296\n>>> prime_fib(37)\n\
    433494437\n>>> prime_fib(38)\n701408733\n>>> prime_fib(39)\n1134903170\n>>> prime_fib(40)\n\
    1836311903\n>>> prime_fib(41)\n2971215073\n>>> prime_fib(42)\n433494437\n>>> prime_fib(43)\n\
    701408733\n>>> prime_", "    if n < 2\n        2\n    else\n        prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\"\
    \"\"\n    prime_fib_iter returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n \
    \   3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n \
    \   >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2 \n        return\
    \ n\n    else if n == 2 \n        return 3\n    else if n == 3 \n        return\
    \ 5\n    else if n % 2 == 0 \n        return prime_fib(n - 1) + prime_fib(n -\
    \ 2)\n    else \n        return prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n\
    <code language=julia-1.5>\nprime_fib(10)\n</cell>\n<code language=julia-1.5>",
  "    if n == 1 \n        2\n    else if n == 2 \n        3\n    else \n        prime_fib(n-1)\
    \ + prime_fib(n-2)\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\n    prime_fib_iter\
    \ returns n-th number that is a Fibonacci number and it's also prime.\n    >>>\
    \ prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n\
    \    5\n    >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n\
    \    \"\"\"", "    if n < 2 \n        then return n\n    else if n == 2 \n   \
    \     then return 1\n    else if n % 2 == 0 \n        then return prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n    else \n        then return prime_fib(n - 1) + prime_fib(n\
    \ - 3)\nend\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis does not provide an answer\
    \ to the question. To critique or request clarification from an author, leave\
    \ a comment below their post. - [From Review](/review/low-quality-posts/18157082)\n\
    <|/ c |>\n<| c |>\nI believe this does answer the question. He asked how to find\
    \ the nth Fibonacci number in Julia, and I provided a Julia implementation for\
    \ it. He also asked how to find the nth prime number. He provided a Julia implementation\
    \ for that. He also asked how to find the nth Fibonacci number that is also prime.\
    \ He provided a Julia implementation for that. He also asked how to find the nth\
    \ prime number that is also Fibonacci. He provided a Julia implementation for\
    \ that. He also asked how to find the nth Fibonacci number that is also prime.\
    \ He provided a Julia implementation for that. He also asked how to find the nth\
    \ prime number that is also Fibonacci. He provided a Julia implementation for\
    \ that. He also asked how to find the nth prime number that is also prime. He\
    \ provided a Julia implementation for that. He also asked how to find the nth\
    \ prime number that is also prime. He provided a Julia implementation for that.\
    \ He also asked how to find the nth prime number that is also prime. He provided\
    \ a Julia implementation for that. He also asked how to find the nth prime number\
    \ that is also prime. He provided a Julia implementation for that. He also asked\
    \ how to find the nth prime number that is also prime. He provided a Julia implementation\
    \ for that. He also asked how to find the nth prime number that is also prime.\
    \ He provided a Julia implementation for that. He also asked how to find the nth\
    \ prime number that is also prime. He provided a Julia implementation for that.\
    \ He also asked how to find the nth prime number that is also prime. He provided\
    \ a Julia implementation for that. He also asked how to ", "    if n == 1 \n \
    \       return 2\n    if n == 2 \n        return 3\n    if n % 2 == 0 \n     \
    \   return prime_fib(n - 1) + prime_fib(n - 2)\n    else \n        return prime_fib(n\
    \ - 1) + prime_fib(n - 3)\nend\n</cell>\n<code language=julia-1.4>\n\"\"\"\n \
    \   prime_fib_iter returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n    3\n\
    \    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n    >>>\
    \ prime_fib_iter(5)\n    89\n    \"\"\"", "    if n == 0 then return 1\n    if\
    \ n == 1 then return 2\n    if n % 2 == 0 then return prime_fib(n / 2)\n    else\
    \ return prime_fib(3 * n + 1) + prime_fib(n / 2)\nend\n</code>\n<|/ a dscore=1\
    \ |>\n<| a |>\n<code>", "    if n < 2\n        2\n    else if n == 2\n       \
    \ 3\n    else\n        prime_fib(n - 1) + prime_fib(n - 2)\nend\n</code>\n<|/\
    \ a tags=julia,fibonacci |>\n<| a dscore=2 |>\n<code>", "    if n < 2 \n     \
    \   then return n\n    else if n == 2 \n        then return 1\n    else if n %\
    \ 2 == 0 \n        then return prime_fib(n - 1) + prime_fib(n - 2)\n    else \n\
    \        then return prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n<code\
    \ language=julia-1.5>\n\"\"\"\n    prime_fib_iter returns n-th number that is\
    \ a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n    2\n\
    \    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n\
    \    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2\n     \
    \   1\n    else\n        prime_fib(n - 1) + prime_fib(n - 2)\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\n\"\"\"\n    prime_fib_iter returns n-th number that\
    \ is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n    2\n\
    \    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n\
    \    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2\n     \
    \   2\n    else\n        prime_fib(n - 1) + prime_fib(n - 2)\n    end\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a function that calculates the factorial of a number.",
  "    if n < 2 \n        then return n\n    else \n        prime_fib(n - 1) + prime_fib(n\
    \ - 2)\nend\n</cell>\n<text>\nExercise 10\nWrite a function that takes a number\
    \ as input and returns the factorial of that number. \nThe factorial of a number\
    \ $n!$ is defined as $n! = 1\\cdot 2\\cdot 3\\cdot \\cdot n$. \nFor example, 5!\
    \ = 5 x 4 x 3 x 2 = 120.", "    if n < 2 \n        then return n\n    else if\
    \ n == 2 \n        then return 1\n    else \n        prime_fib(n - 1) + prime_fib(n\
    \ - 2)\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\n    prime_fib_iter returns\
    \ n-th number that is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n\
    \    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n \
    \   >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\
    \"", "    if n == 1 \n        1\n    elseif n == 2 \n        2\n    elseif n %\
    \ 2 == 0 \n        prime_fib(n / 2)\n    else\n        prime_fib(3 * n + 1)\n\
    end\n</cell>\n<code language=julia-1.5>", "    if n < 2\n        1\n    else\n\
    \        prime_fib(n - 1) + prime_fib(n - 2)\n    end\nend\n</cell>\n<code language=julia-1.4>\n\
    \"\"\"\n    prime_fib_iter returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n\
    \    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n\
    \    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2\n        2\n  \
    \  else if n == 2\n        3\n    else if n % 2 == 0\n        prime_fib(n - 2)\n\
    \    else\n        prime_fib(n - 1) + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.4>",
  "    if n < 2\n        1\n    else\n        prime_fib(n-2) + prime_fib(n-1)\nend\n\
    </cell>\n<code language=julia-1.4>\n\"\"\"\n    prime_fib_iter returns n-th number\
    \ that is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n\
    \    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n \
    \   >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\
    \"", "    if n < 2\n        return n\n    else if n == 2\n        return 3\n \
    \   else if n % 2 == 0\n        return prime_fib(n - 1) + prime_fib(n - 2)\n \
    \   else\n        return prime_fib(n - 1) + prime_fib(n - 3)\n    end\nend\n</cell>\n\
    <code language=julia-1.4>\nprime_fib(4)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that calculates the factorial of a given number. \nThe factorial of\
    \ a number $n$ is defined as:", "    if n < 2\n        2\n    else\n        prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\"\
    \"\"\n    prime_fib_list returns list of prime Fibonacci numbers.\n    >>> prime_fib_list(10)\n\
    \    [2, 3, 5, 7, 11, 13, 17, 19, 23]\n    \"\"\"", "    if n < 2 \n        then\
    \ return n\n    else if n == 2 \n        then return 1\n    else \n        prime_fib(n\
    \ - 1) + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.5>", "    if n\
    \ < 2\n        2\n    else\n        prime_fib(n - 1) + prime_fib(n - 2)\nend\n\
    </cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib_iter returns n-th number\
    \ that is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n\
    \    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n \
    \   >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\
    \"", "    if n < 2\n        2\n    else\n        prime_fib(n-1) + prime_fib(n-2)\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>", "    if n < 2\n        2\n\
    \    else\n        if prime_fib(n - 2) == prime_fib(n - 1)\n            prime_fib(n\
    \ - 2)\n        else\n            prime_fib(n - 1) + prime_fib(n - 2)\n      \
    \  end\n    end\nend\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis is not an answer.\
    \ Just a bunch of code. Could you please add some explanation to your answer?\n\
    <|/ c |>\n<| c |>\nThis is not an answer. Just a bunch of code. Could you please\
    \ add some explanation to your answer?\n<|/ c |>\n<| c |>\nThis is not an answer.\
    \ Just a bunch of code. Could you please add some explanation to your answer?\n\
    <|/ c |>\n<| a dscore=0 |>\n<code>", "    if n < 2\n        return n\n    else\
    \ if n == 2\n        return 3\n    else if n % 2 == 0\n        return prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n    else\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 3)\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\n    prime_fib_iter returns\
    \ n-th number that is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n\
    \    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n \
    \   >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\
    \"", "    if n < 2\n        2\n    else\n        prime_fib(n-1) + prime_fib(n-2)\n\
    end\n</cell>\n<text>\nExercise 9\nWrite a function that checks if a number is\
    \ prime or not. \nThe function should take one argument, an integer and should\
    \ return one boolean.\nThe function should return true if the number is prime\
    \ and false otherwise.\nThe function should return false if the number is negative\
    \ or zero.\nThe function should return false if the number is bigger than the\
    \ square root of the number itself.", "    if n == 1 \n        2\n    else if\
    \ n == 2 \n        3\n    else \n        prime_fib(n - 1) + prime_fib(n - 2)\n\
    end\n</cell>\n<text>\nExercise 2\nWrite a function that takes a number as input\
    \ and returns the factorial of that number. \nThe factorial of a number $n!$ is\
    \ defined as $n! = 1\\cdot 2\\cdot 3\\cdot \\cdot n$. \nWrite a recursive function\
    \ that computes the factorial of a number.", "    if n < 2\n        return n\n\
    \    else if n == 2\n        return 3\n    else if n % 2 == 0\n        return\
    \ prime_fib(n - 1) + prime_fib(n - 2)\n    else\n        return prime_fib(n -\
    \ 1) + prime_fib(n - 3)\nend\n</cell>\n<code language=julia-1.1>\nprime_fib(5)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that checks if a number is prime\
    \ or not. \nThe function should return true if the number is prime and false otherwise.\n\
    The function should take one argument, an integer number.", "    if n == 1 \n\
    \        2\n    else if n == 2 \n        3\n    else \n        prime_fib(n - 1)\
    \ + prime_fib(n - 2)\nend\n</code>\n<|/ a tags=julia,fibonacci,primes |>\n<| a\
    \ dscore=2 |>\nHere is a simple recursive implementation:\n<code>", "    if n\
    \ < 2 \n        then return n\n    else if n == 2 \n        then return 1\n  \
    \  else \n        prime_fib(n - 1) + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n    >>>\
    \ prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n  \
    \  89\n    \"\"\"", "    if n == 0 then return 1\n    if n == 1 then return 2\n\
    \    if n % 2 == 0 then return prime_fib(n / 2)\n    return prime_fib(n - 1) +\
    \ prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.5>\nprime_fib(10)\n</cell>\n\
    <code language=julia-1.5>", "    if n == 1 \n        2\n    else if n == 2 \n\
    \        3\n    else \n        prime_fib(n - 1) + prime_fib(n - 2)\nend\n</cell>\n\
    <code language=julia-1.3>\n\"\"\"\n    prime_fib_iter returns n-th number that\
    \ is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n    2\n\
    \    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n\
    \    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2\n     \
    \   prime_fib(n) = n\n    else\n        prime_fib(n) = prime_fib(n-1) + prime_fib(n-2)\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>", "    if n == 1 \n        2\n\
    \    else if n == 2 \n        3\n    else \n        prime_fib(n - 1) + prime_fib(n\
    \ - 2)\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\n    prime_fib_iter returns\
    \ n-th number that is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n\
    \    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n \
    \   >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\
    \"", "    if n < 2\n        2\n    else\n        prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    end\nend\n</code>\n<|/ a tags=julia,fibonacci |>\n<| c |>\nThis doesn't\
    \ work. `prime_fib(5)` returns `89` instead of `893`.\n<|/ c |>\n<| c |>\nThanks\
    \ for pointing out. Updated the answer.\n<|/ c |>\n<| a tags=julia,fibonacci |>\n\
    <code>", "    if n < 2\n        1\n    else\n        prime_fib(n-1) + prime_fib(n-2)\n\
    \    end\nend\n</cell>\n<code language=julia-1.4>\n\"\"\"\n    prime_fib_iter\
    \ returns n-th number that is a Fibonacci number and it's also prime.\n    >>>\
    \ prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n\
    \    5\n    >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n\
    \    \"\"\"", "    if n < 2 \n        then return n\n    else \n        prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\"\
    \"\"\n    prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n    >>> prime_fib(3)\n\
    \    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n    89\n    \"\"\"",
  "    if n == 1 \n        return 2\n    else if n == 2 \n        return 3\n    else\
    \ \n        return prime_fib(n - 1) + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    prime_fib_list returns list of prime Fibonacci numbers.\n    >>> prime_fib_list(10)\n\
    \    [2, 3, 5, 7, 11, 13, 17, 19, 23, 29]\n    \"\"\"", "    if n < 2\n      \
    \  2\n    else\n        prime_fib(n-2) + prime_fib(n-1)\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    prime_fib_iter returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n\
    \    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n\
    \    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n == 1 then return 2\n\
    \    if n == 2 then return 3\n    if n % 2 == 0 then return prime_fib(n - 1) +\
    \ prime_fib(n - 2)\n    else return prime_fib(n - 1) + prime_fib(n - 3)\nend\n\
    </cell>\n<code language=julia-1.5>", "    if n < 2\n        2\n    else\n    \
    \    if prime_fib(n - 2) == n\n            prime_fib(n - 2)\n        else\n  \
    \          prime_fib(n - 2) + prime_fib(n - 1)\n        end\n    end\nend\n</cell>\n\
    <code language=julia-1.3>\n\"\"\"\n    prime_fib returns n-th number that is a\
    \ Fibonacci number and it's also prime.\n    >>> prime_fib(1)\n    2\n    >>>\
    \ prime_fib(2)\n    3\n    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n   \
    \ 13\n    >>> prime_fib(5)\n    89\n    \"\"\"", "    if n == 1 \n        2\n\
    \    else if n == 2 \n        3\n    else if n % 2 == 0 \n        prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n    else \n        prime_fib(n - 1) + prime_fib(n -\
    \ 3)\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib_list returns\
    \ list of prime Fibonacci numbers.\n    >>> prime_fib_list(10)\n    [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29]\n    \"\"\"", "    if n == 0 \n        0\n    else\
    \ if n == 1 \n        1\n    else if n % 2 == 0 \n        prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    else \n        prime_fib(n - 1) + prime_fib(n - 3)\nend\n</code>\n\
    <|/ a dscore=0 |>\n<| c |>\nThis does not provide an answer to the question. To\
    \ critique or request clarification from an author, leave a comment below their\
    \ post. - [From Review](/review/low-quality-posts/27829577)\n<|/ c |>\n<| c |>\n\
    This does provide an answer to the question. He asked how to implement the Fibonacci\
    \ sequence in Julia. He also asked how to implement the prime number check in\
    \ Julia. He also asked how to implement the Fibonacci sequence in Julia. He also\
    \ asked how to implement the prime number check in Julia. He also asked how to\
    \ implement the Fibonacci sequence in Julia. He also asked how to implement the\
    \ prime number check in Julia. He also asked how to implement the Fibonacci sequence\
    \ in Julia. He also asked how to implement the prime number check in Julia. He\
    \ also asked how to implement the Fibonacci sequence in Julia. He also asked how\
    \ to implement the prime number check in Julia. He also asked how to implement\
    \ the prime number check in Julia. He also asked how to implement the prime number\
    \ check in Julia. He also asked how to implement the prime number check in Julia.\
    \ He also asked how to implement the prime number check in Julia. He also asked\
    \ how to implement the prime number check in Julia. He also asked how to implement\
    \ the prime number check in Julia. He also asked how to implement the prime number\
    \ check in Julia. He also asked how to implement the prime number check in Julia.\
    \ He also asked how to implement the prime number check in Julia. He also asked\
    \ how to implement the prime number check in Julia. He also asked how to implement\
    \ the prime number check in Julia. He also asked how to implement the prime number\
    \ check in Julia. He also asked how to implement the prime number check in Julia.\
    \ He also asked how to implement the prime number check in Julia. He ", "    if\
    \ n < 2 \n        then return n\n    else \n        prime_fib(n - 1) + prime_fib(n\
    \ - 2)\nend\n</cell>\n<text>\nExercise 4\nWrite a function that returns the factorial\
    \ of a number.", "    if n < 2\n        return n\n    else if n == 2\n       \
    \ return 3\n    else if n == 3\n        return 5\n    else\n        return prime_fib(n\
    \ - 1) + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.0>\nprime_fib(4)\n\
    </cell>\n<text>\nExercise\nWrite a function that returns the factorial of a number.",
  "    if n < 2 \n        then return n\n    else if n == 2 \n        then return\
    \ 1\n    else if n == 3 \n        then return 2\n    else \n        fib_n = prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n        if fib_n % 2 == 0 \n            then return\
    \ fib_n\n        else \n            return fib_n + 1\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    prime_fib_iter returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n\
    \    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n\
    \    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n == 0\n        0\n \
    \   else if n == 1\n        1\n    else\n        prime_fib(n - 1) + prime_fib(n\
    \ - 2)\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib_list returns\
    \ list of prime Fibonacci numbers.\n    >>> prime_fib_list(10)\n    [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23]\n    \"\"\"", "    if n < 2 \n        then return n\n\
    \    else if n == 2 \n        then return 3\n    else if n % 2 == 0 \n       \
    \ then return prime_fib(n - 1) + prime_fib(n - 2)\n    else \n        return prime_fib(n\
    \ - 1) + prime_fib(n - 3)\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n \
    \   prime_fib_iter returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n    3\n\
    \    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n    >>>\
    \ prime_fib_iter(5)\n    89\n    \"\"\"", "    if n == 0 || n == 1 \n        return\
    \ n\n    else \n        return prime_fib(n - 1) + prime_fib(n - 2)\nend\n</cell>\n\
    <code language=julia-1.5>\n\"\"\"\n    prime_fib_iter returns n-th number that\
    \ is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n    2\n\
    \    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n\
    \    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2 \n    \
    \    then return n\n    else if n == 2 \n        then return 1\n    else \n  \
    \      prime_fib(n - 1) + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.4>\n\
    \"\"\"\n    prime_fib_iter returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n\
    \    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n\
    \    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2\n        2\n  \
    \  else\n        prime_fib(n-1) + prime_fib(n-2)\n    end\nend\n</cell>\n<code\
    \ language=julia-1.5>\n\"\"\"\n    prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n\
    \    3\n    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"", "    if n == 1 \n        2\n    else if n == 2 \n      \
    \  3\n    else \n        prime_fib(n - 1) + prime_fib(n - 2)\nend\n</cell>\n<code\
    \ language=julia-1.0>\n\"\"\"\n    prime_fib_iter returns n-th number that is\
    \ a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n    2\n\
    \    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n\
    \    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2 \n    \
    \    return n\n    else if n == 2 \n        return 3\n    else if n % 2 == 0 \n\
    \        return prime_fib(n - 1) + prime_fib(n - 2)\n    else \n        return\
    \ prime_fib(n - 1) + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.4>\n\
    \"\"\"\n    prime_fib_iter returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n\
    \    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n\
    \    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n == 0\n        1\n \
    \   else\n        prime_fib(n - 1) + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\n    prime_fib_list returns list of prime Fibonacci numbers.\n    >>> prime_fib_list()\n\
    \    [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]\n    \"\"\"", "    if n < 2\n        1\n    else\n \
    \       prime_fib(n - 1) + prime_fib(n - 2)\n    end\nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nHint: Use recursion.", "    if n < 2 || n > 100\n        error(\"\
    prime_fib only accepts positive integers\")\n    else if n == 1\n        2\n \
    \   else if n == 2\n        3\n    else\n        prime_fib(n - 1) + prime_fib(n\
    \ - 2)\nend\n</cell>\n<code language=julia-1.4>\n\"\"\"\n    prime_fib_iter returns\
    \ n-th number that is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n\
    \    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n \
    \   >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\
    \"", "    if n < 2 \n        return n\n    else if n == 2 \n        return 3\n\
    \    else if n == 3 \n        return 5\n    else \n        return prime_fib(n\
    \ - 1) + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n \
    \   prime_fib_iter returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n    3\n\
    \    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n    >>>\
    \ prime_fib_iter(5)\n    89\n    \"\"\"", "    if n == 0 || n == 1 \n        return\
    \ n\n    else \n        return prime_fib(n - 1) + prime_fib(n - 2)\nend\n</cell>\n\
    <code language=julia-1.4>\n\"\"\"\n    prime_fib_iter returns n-th number that\
    \ is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n    2\n\
    \    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n\
    \    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2 \n    \
    \    return n\n    else if n == 2 \n        return 3\n    else if n == 3 \n  \
    \      return 5\n    else if n % 2 == 0 \n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    else \n        return prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n\
    <code language=julia-1.3>\n\"\"\"\n    prime_fib returns n-th number that is a\
    \ Fibonacci number and it's also prime.\n    >>> prime_fib(1)\n    2\n    >>>\
    \ prime_fib(2)\n    3\n    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n   \
    \ 13\n    >>> prime_fib(5)\n    89\n    \"\"\"", "    if n < 2 \n        then\
    \ return n\n    else if n == 2 \n        then return 3\n    else if n == 3 \n\
    \        then return 5\n    else if n % 2 == 0 \n        then return prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n    else return prime_fib(n - 1) + prime_fib(n - 3)\n\
    end\n</cell>\n<code language=julia-1.3>\n\"\"\"\n    prime_fib_iter returns n-th\
    \ number that is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n\
    \    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n \
    \   >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\
    \"", "    if n == 1 \n        2\n    else if n == 2 \n        3\n    else if n\
    \ % 2 == 0 \n        prime_fib(n - 1) + prime_fib(n - 2)\n    else \n        prime_fib(n\
    \ - 1) + prime_fib(n - 3)\nend\n</cell>\n<code language=julia-1.5>", "    if n\
    \ == 0 || n == 1 \n        then return n\n    else if n % 2 == 0 \n        then\
    \ return prime_fib(n - 1) + prime_fib(n - 2)\n    else \n        then return prime_fib(n\
    \ - 1) + prime_fib(n - 3)\nend\n</code>\n<|/ a tags=julia,fibonacci |>\n<| c |>\n\
    This does not answer the question. `prime_fib` does not return the nth Fibonacci\
    \ number.\n<|/ c |>\n<| c |>\nThe question was \"how to implement the Fibonacci\
    \ number in Julia?\" The answer is \"use recursion\". The code above is just an\
    \ example to show how it can be done.\n<|/ c |>\n<| c |>\nThe question was \"\
    how to implement the Fibonacci number in Julia?\" The answer is \"use recursion\"\
    . The code above is just an example to show how it can be done.\n<|/ c |>\n<|\
    \ c |>\nThe question was \"how to implement the Fibonacci number in Julia?\" The\
    \ answer is \"use recursion\". The code above is just an example to show how it\
    \ can be done.\n<|/ c |>\n<| c |>\nThe question was \"how to implement the Fibonacci\
    \ number in Julia?\" The answer is \"use recursion\". The code above is just an\
    \ example to show how it can be done.\n<|/ c |>\n<| a |>\n<code>", "    if n <\
    \ 2\n        return n\n    else if n == 2\n        return 3\n    else if n % 2\
    \ == 0\n        return prime_fib(n - 1) + prime_fib(n - 2)\n    else\n       \
    \ return prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n<code language=julia-1.5>",
  "    if n < 2 \n        then return n\n        else return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    end\nend\n</cell>\n<code language=julia-1.5>", "    if n < 2 \n  \
    \      then return n\n    else if n == 2 \n        then return 1\n    else if\
    \ n == 3 \n        then return 2\n    else if n % 2 == 0 \n        then return\
    \ prime_fib(n - 1) + prime_fib(n - 2)\n    else \n        then return prime_fib(n\
    \ - 1) + prime_fib(n - 3)\nend\n</cell>\n<code language=julia-1.5>", "    if n\
    \ < 2 \n        then return n\n    else if n == 2 \n        then return 1\n  \
    \  else \n        prime_fib(n - 1) + prime_fib(n - 2)\nend\n</code>\n<|/ a tags=julia,fibonacci,primes\
    \ |>\n<| a tags=julia,fibonacci,primes |>\nI wrote a Julia package called Primes.jl\
    \ that implements Sieve of Eratosthenes algorithm. It also has a function called\
    \ prime_fib that returns the nth Fibonacci number that is prime.\n<code>\nusing\
    \ Primes", "    if n < 2\n        2\n    else\n        prime_fib(n - 1) + prime_fib(n\
    \ - 2)\nend\n</cell>\n<code language=julia-1.4>\n\"\"\"\n    prime_fib_iter returns\
    \ n-th number that is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n\
    \    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n \
    \   >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\
    \"", "    if n < 2 \n        return n\n    else if n == 2 \n        return 3\n\
    \    else if n == 3 \n        return 5\n    else if n % 2 == 0 \n        return\
    \ prime_fib(n - 1) + prime_fib(n - 2)\n    else \n        return prime_fib(n -\
    \ 1) + prime_fib(n - 3)\nend\n</cell>\n<code language=julia-1.4>\n\"\"\"\n   \
    \ prime_fib_iter returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n    3\n\
    \    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n    >>>\
    \ prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2 \n        return n\n \
    \   else if n == 2 \n        return 3\n    else if n == 3 \n        return 5\n\
    \    else if n % 2 == 0 \n        return prime_fib(n - 1) + prime_fib(n - 2)\n\
    \    else \n        return prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n\
    <code language=julia-1.5>", "    if n == 1 then return 2\n    if n == 2 then return\
    \ 3\n    if n % 2 == 0 then return prime_fib(n / 2)\n    else return prime_fib(3\
    \ * n + 1) - 1 end\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\n    prime_fib_iter\
    \ returns n-th number that is a Fibonacci number and it's also prime.\n    >>>\
    \ prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n\
    \    5\n    >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n\
    \    \"\"\"", "    if n < 2 \n        then return n\n    else \n        prime_fib(n\
    \ - 1) + prime_fib(n - 2)\nend\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n\
    <code>", "    if n < 2 \n        then return n\n    else if n == 2 \n        then\
    \ return 1\n    else if n == 3 \n        then return 2\n    else \n        fib_n_minus_2\
    \ = prime_fib(n - 2)\n        fib_n_minus_1 = prime_fib(n - 1)\n        return\
    \ fib_n_minus_2 + fib_n_minus_1\nend\n</cell>\n<code language=julia-1.3>\n\"\"\
    \"\n    prime_fib_iter returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n \
    \   3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n \
    \   >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n == 0 \n        0\n \
    \   else if n == 1 \n        1\n    else if n % 2 == 0 \n        prime_fib(n -\
    \ 1) + prime_fib(n - 2)\n    else \n        prime_fib(n - 1) + prime_fib(n - 3)\n\
    end\n</code>\n<|/ a tags=julia,fibonacci |>\n<| c |>\nThis does not answer the\
    \ question. OP asked for a Julia solution, not a Python one.\n<|/ c |>\n<| c |>\n\
    The question was about a Julia solution. Not a Python one.\n<|/ c |>\n<| a tags=julia,fibonacci\
    \ |>\n<code>", "    if n < 2 \n        return n\n    else if n == 2 \n       \
    \ return 3\n    else if n == 3 \n        return 5\n    else if n % 2 == 0 \n \
    \       return prime_fib(n - 1) + prime_fib(n - 2)\n    else \n        return\
    \ prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    prime_fib_iter returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n\
    \    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n\
    \    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2 \n        then\
    \ return n\n    else if n == 2 \n        then return 1\n    else \n        prime_fib(n\
    \ - 1) + prime_fib(n - 2)\nend\n</code>\n<|/ a tags=julia,fibonacci |>\n<| c |>\n\
    This does not answer the question. OP asked for Julia solutions, not Python or\
    \ R. Also, your solution does not use recursion.\n<|/ c |>\n<| c |>\nThe question\
    \ was about Julia solutions, not Python or R. Recursion is used here to calculate\
    \ the Fibonacci numbers. I agree that my solution does not use recursion, but\
    \ I wanted to show how to calculate Fibonacci numbers using recursion.\n<|/ c\
    \ |>\n<| c |>\nI agree that your solution does not use recursion, but I wanted\
    \ to show how to calculate Fibonacci numbers using recursion.\n<|/ c |>\n<| c\
    \ |>\nI agree that your solution does not use recursion, but I wanted to show\
    \ how to calculate Fibonacci numbers using recursion.\n<|/ c |>\n<| c |>\nI agree\
    \ that your solution does not use recursion, but I wanted to show how to calculate\
    \ Fibonacci numbers using recursion.\n<|/ c |>\n<| a dscore=5 |>\n<code>", " \
    \   if n < 2 \n        return n\n    else if n == 2 \n        return 3\n    else\
    \ if n == 3 \n        return 5\n    else if n % 2 == 0 \n        return prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n    else \n        return prime_fib(n - 3) + prime_fib(n\
    \ - 2)\nend\n</cell>\n<code language=julia-1.5>", "    if n < 2 \n        then\
    \ return n\n    else if n == 2 \n        then return 1\n    else if n % 2 == 0\
    \ \n        then return prime_fib(n - 1) + prime_fib(n - 2)\n    else \n     \
    \   prime_fib(n - 1) + prime_fib(n - 3)\nend\n</code>\n<|/ a |>\n<| c |>\nThis\
    \ doesn't answer the question, which is about how to implement the Fibonacci sequence\
    \ in Julia.\n<|/ c |>\n<| c |>\nI agree with you, my answer is just an example\
    \ to show how to implement the Fibonacci sequence in Julia. My answer is not the\
    \ best way to implement the Fibonacci sequence in Julia, but I just want to show\
    \ how to implement the Fibonacci sequence in Julia.\n<|/ c |>\n<| c |>\nI agree\
    \ with you, my answer is just an example to show how to implement the Fibonacci\
    \ sequence in Julia. My answer is not the best way to implement the Fibonacci\
    \ sequence in Julia, but I just want to show how to implement the Fibonacci sequence\
    \ in Julia.\n<|/ c |>\n<| c |>\nI agree with you, my answer is just an example\
    \ to show how to implement the Fibonacci sequence in Julia. My answer is not the\
    \ best way to implement the Fibonacci sequence in Julia, but I just want to show\
    \ how to implement the Fibonacci sequence in Julia.\n<|/ c |>\n<| c |>\nI agree\
    \ with you, my answer is just an example to show how to implement the Fibonacci\
    \ sequence in Julia. My answer is not the best way to implement the Fibonacci\
    \ sequence in Julia, but I just want to show how to implement the Fibonacci sequence\
    \ in Julia.\n<|/ c |>\n<| a tags=julia,fibonacci,recursion |>\n<code>", "    if\
    \ n < 2\n        2\n    else\n        prime_fib(n - 1) + prime_fib(n - 2)\nend\n\
    </cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib_list returns list of\
    \ prime Fibonacci numbers.\n    >>> prime_fib_list(10)\n    [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29]\n    \"\"\"", "    if n < 2 \n        return n\n    else \n\
    \        return prime_fib(n - 1) + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    prime_fib_iter returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n\
    \    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n\
    \    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2 || n == 0 \n  \
    \      then return 1\n    else if n == 1 \n        then return 2\n    else \n\
    \        fib_n = prime_fib(n - 1) + prime_fib(n - 2)\n        return fib_n\nend\n\
    </cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib_iter returns n-th number\
    \ that is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n\
    \    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n \
    \   >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\
    \"", "    if n < 2 \n        return n\n    else if n == 2 \n        return 3\n\
    \    else if n % 2 == 0 \n        return prime_fib(n - 1) + prime_fib(n - 2)\n\
    \    else \n        return prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n\
    <code language=julia-1.5>\nprime_fib(10)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that calculates the factorial of a given number. \nThe function should\
    \ accept a number as an argument and return the factorial of that number.", " \
    \   if n == 1 then return 2\n    if n == 2 then return 3\n    if n % 2 == 0 then\
    \ return prime_fib(n - 1) + prime_fib(n - 2)\n    else return prime_fib(n - 1)\
    \ + prime_fib(n - 3)\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib_list\
    \ returns list of prime Fibonacci numbers.\n    >>> prime_fib_list(10)\n    [2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23]\n    \"\"\"", "    if n == 1 \n        return 2\
    \ \n    else if n == 2 \n        return 3 \n    else \n        return prime_fib(n\
    \ - 1) + prime_fib(n - 2) \nend\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that returns the factorial of a number.", "    if n < 2 \n        return n\n\
    \    else if n == 2 \n        return 3\n    else if n % 2 == 0 \n        return\
    \ prime_fib(n - 1) + prime_fib(n - 2)\n    else \n        return prime_fib(n -\
    \ 1) + prime_fib(n - 3)\nend\n</cell>\n<code language=julia-1.5>\nprime_fib(1)\n\
    </cell>\n<code language=julia-1.5>\nprime_fib(2)\n</cell>\n<code language=julia-1.5>\n\
    prime_fib(3)\n</cell>\n<code language=julia-1.5>\nprime_fib(4)\n</cell>\n<code\
    \ language=julia-1.5>\nprime_fib(5)\n</cell>\n<code language=julia-1.5>\nprime_fib(6)\n\
    </cell>\n<code language=julia-1.5>\nprime_fib(7)\n</cell>\n<code language=julia-1.5>\n\
    prime_fib(8)\n</cell>\n<code language=julia-1.5>\nprime_fib(9)\n</cell>\n<code\
    \ language=julia-1.5>\nprime_fib(10)\n</cell>\n<code language=julia-1.5>\nprime_fib(11)\n\
    </cell>\n<code language=julia-1.5>\nprime_fib(12)\n</cell>\n<code language=julia-1.5>\n\
    prime_fib(13)\n</cell>\n<code language=julia-1.5>\nprime_fib(14)\n</cell>\n<code\
    \ language=julia-1.5>\nprime_fib(15)\n</cell>\n<code language=julia-1.5>\nprime_fib(16)\n\
    </cell>\n<code language=julia-1.5>\nprime_fib(17)\n</cell>\n<code language=julia-1.5>\n\
    prime_fib(18)\n</cell>\n<code language=julia-1.5>\nprime_fib(19)\n</cell>\n<code\
    \ language=julia-1.5>\nprime_fib(20)\n</cell>\n<code language=julia-1.5>\nprime_fib(21)\n\
    </cell>\n<code language=julia-1.5>\nprime_fib(22)\n</cell>\n<code language=julia-1.5>\n\
    prime_fib(23)\n</cell>\n<code language=julia-1.5>\nprime_fib(24)\n</cell>\n<code\
    \ language=julia-1.5>\nprime_fib(25)\n</cell>\n<code language=julia-1.5>\nprime_fib(26)\n\
    </cell>\n<code language=julia-1.5>\nprime_fib(27)\n</cell>\n<code language=julia-1.5>\n\
    prime_fib(28)\n</cell>\n<code language=", "    if n < 2\n        2\n    else if\
    \ n % 2 == 0\n        prime_fib(n - 2)\n    else\n        prime_fib(n - 1) + prime_fib(n\
    \ - 2)\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\n    prime_fib_iter returns\
    \ n-th number that is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n\
    \    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n \
    \   >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\
    \"", "    if n < 2\n        2\n    else\n        prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib_iter\
    \ returns n-th number that is a Fibonacci number and it's also prime.\n    >>>\
    \ prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n\
    \    5\n    >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n\
    \    \"\"\"", "    if n == 1 \n        2\n    else if n == 2 \n        3\n   \
    \ else \n        prime_fib(n - 1) + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n    >>>\
    \ prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n  \
    \  89\n    \"\"\"", "    if n < 2 \n        then return n\n    else \n       \
    \ prime_fib(n-1) + prime_fib(n-2)\nend\n</code>\n<|/ a tags=julia,fibonacci |>\n\
    <| a tags=julia,fibonacci |>\n<code>", "    if n == 0\n        0\n    else if\
    \ n == 1\n        1\n    else if n % 2 == 0\n        prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    else\n        prime_fib(n - 1) + prime_fib(n - 3)\nend\n</code>\n\
    <|/ a dscore=0 |>\n<| c |>\nThis does not provide an answer to the question. Once\
    \ you have sufficient [reputation](https://stackoverflow.com/help/whats-reputation)\
    \ you will be able to [comment on any post](https://stackoverflow.com/help/privileges/comment);\
    \ instead, [provide answers that don't require clarification from the asker](https://meta.stackexchange.com/questions/214173/why-do-i-need-50-reputation-to-comment-what-can-i-do-instead).\
    \ - [From Review](/review/low-quality-posts/27812147)\n<|/ c |>\n<| c |>\nI believe\
    \ this does answer the question, which is \"how to implement a recursive function\
    \ in Julia\".\n<|/ c |>\n<| c |>\nThis does not provide an answer to the question.\
    \ Once you have sufficient [reputation](https://stackoverflow.com/help/whats-reputation)\
    \ you will be able to [comment on any post](https://stackoverflow.com/help/privileges/comment);\
    \ instead, [provide answers that don't require clarification from the asker](https://meta.stackexchange.com/questions/214173/why-do-i-need-50-reputation-to-comment-what-can-i-do-instead).\
    \ - [From Review](/review/low-quality-posts/27812147)\n<|/ c |>\n<| c |>\nI believe\
    \ this does answer the question, which is \"how to implement a recursive function\
    \ in Julia\".\n<|/ c |>\n<| c |>\nI believe this does answer the question, which\
    \ is \"how to implement a recursive function in Julia\".\n<|/ c |>\n<| a tags=julia,recursion\
    \ |>\n<code>", "    if n == 1 \n        2\n    else if n == 2 \n        3\n  \
    \  else \n        prime_fib(n - 1) + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\n    prime_fib_iter returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n\
    \    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n\
    \    >>> prime_fib_iter(5)\n    89\n    \"\"\""]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

{
  "name": "mbpp_562_Find_Max_Length",
  "language": "go_test.go",
  "prompt": "package Find_Max_Length_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the length of the longest sublists.\nfunc Find_Max_Length(lst [][]int) int {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_562_Find_Max_Length.py",
  "prompt_terminology": "verbatim",
  "tests": "func TestFind_Max_Length(t *testing.T) {\n  candidate := Find_Max_Length\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]int{1}, []int{1, 4}, []int{5, 6, 7, 8}}), expected: 4 },\n     { actual: candidate([][]int{[]int{0, 1}, []int{2, 2}, []int{3, 2, 1}}), expected: 3 },\n     { actual: candidate([][]int{[]int{7}, []int{22, 23}, []int{13, 14, 15}, []int{10, 20, 30, 40, 50}}), expected: 5 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
  "stop_tokens": [
    "\nfunc",
    "struct",
    "\n// "
  ],
  "completions": [
    "    max_length := 0\n    for _, sublist := range lst {\n        if len(sublist) > max_length {\n            max_length = len(sublist)\n        }\n    }\n    return max_length\n}\n",
    "    max_len := 0\n    for _, sub_lst := range lst {\n        if len(sub_lst) > max_len {\n            max_len = len(sub_lst)\n        }\n    }\n    return max_len\n}\n",
    "    max := 0\n    for _, sublst := range lst {\n        if len(sublst) > max {\n            max = len(sublst)\n        }\n    }\n    return max\n}\n",
    "    max_len := 0\n    for _, sub_lst := range lst {\n        if len(sub_lst) > max_len {\n            max_len = len(sub_lst)\n        }\n    }\n    return max_len\n}\n",
    "    max_len := 0\n    for _, sub_lst := range lst {\n        if len(sub_lst) > max_len {\n            max_len = len(sub_lst)\n        }\n    }\n    return max_len\n}\n",
    "    max := 0\n    for _, sublst := range lst {\n        if len(sublst) > max {\n            max = len(sublst)\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, sublst := range lst {\n        if len(sublst) > max {\n            max = len(sublst)\n        }\n    }\n    return max\n}\n",
    "    max_len := 0\n    for _, sub := range lst {\n        if len(sub) > max_len {\n            max_len = len(sub)\n        }\n    }\n    return max_len\n}\n",
    "    max := 0\n    for _, sub := range lst {\n        if len(sub) > max {\n            max = len(sub)\n        }\n    }\n    return max\n}\n",
    "    max_length := 0\n    for _, sublist := range lst {\n        if len(sublist) > max_length {\n            max_length = len(sublist)\n        }\n    }\n    return max_length\n}\n",
    "    max := 0\n    for _, sublst := range lst {\n        if len(sublst) > max {\n            max = len(sublst)\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, sublst := range lst {\n        if len(sublst) > max {\n            max = len(sublst)\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, sublist := range lst {\n        if len(sublist) > max {\n            max = len(sublist)\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, sublst := range lst {\n        if len(sublst) > max {\n            max = len(sublst)\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, sublst := range lst {\n        if len(sublst) > max {\n            max = len(sublst)\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, sublst := range lst {\n        if len(sublst) > max {\n            max = len(sublst)\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, sublst := range lst {\n        if len(sublst) > max {\n            max = len(sublst)\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, sublst := range lst {\n        if len(sublst) > max {\n            max = len(sublst)\n        }\n    }\n    return max\n}\n",
    "    max_length := 0\n    for _, sublist := range lst {\n        if len(sublist) > max_length {\n            max_length = len(sublist)\n        }\n    }\n    return max_length\n}\n",
    "    max_len := 0\n    for _, sub_lst := range lst {\n        if len(sub_lst) > max_len {\n            max_len = len(sub_lst)\n        }\n    }\n    return max_len\n}\n",
    "    max_len := 0\n    for _, sublist := range lst {\n        if len(sublist) > max_len {\n            max_len = len(sublist)\n        }\n    }\n    return max_len\n}\n",
    "    max_len := 0\n    for _, sub_lst := range lst {\n        if len(sub_lst) > max_len {\n            max_len = len(sub_lst)\n        }\n    }\n    return max_len\n}\n",
    "    max := 0\n    for _, sub := range lst {\n        if len(sub) > max {\n            max = len(sub)\n        }\n    }\n    return max\n}\n",
    "    max_length := 0\n    for _, sublist := range lst {\n        if len(sublist) > max_length {\n            max_length = len(sublist)\n        }\n    }\n    return max_length\n}\n",
    "    max_len := 0\n    for _, sub_lst := range lst {\n        if len(sub_lst) > max_len {\n            max_len = len(sub_lst)\n        }\n    }\n    return max_len\n}\n",
    "    max := 0\n    for _, sub := range lst {\n        if len(sub) > max {\n            max = len(sub)\n        }\n    }\n    return max\n}\n",
    "    max_len := 0\n    for _, sub_lst := range lst {\n        if len(sub_lst) > max_len {\n            max_len = len(sub_lst)\n        }\n    }\n    return max_len\n}\n",
    "    max := 0\n    for _, sublst := range lst {\n        if len(sublst) > max {\n            max = len(sublst)\n        }\n    }\n    return max\n}\n",
    "    max_length := 0\n    for _, sub_lst := range lst {\n        if len(sub_lst) > max_length {\n            max_length = len(sub_lst)\n        }\n    }\n    return max_length\n}\n",
    "    max_length := 0\n    for _, sublist := range lst {\n        if len(sublist) > max_length {\n            max_length = len(sublist)\n        }\n    }\n    return max_length\n}\n",
    "    max := 0\n    for _, sub_lst := range lst {\n        if len(sub_lst) > max {\n            max = len(sub_lst)\n        }\n    }\n    return max\n}\n",
    "    max_length := 0\n    for _, sublist := range lst {\n        if len(sublist) > max_length {\n            max_length = len(sublist)\n        }\n    }\n    return max_length\n}\n",
    "    max := 0\n    for _, sublist := range lst {\n        if len(sublist) > max {\n            max = len(sublist)\n        }\n    }\n    return max\n}\n",
    "    max_len := 0\n    for _, sub_lst := range lst {\n        if len(sub_lst) > max_len {\n            max_len = len(sub_lst)\n        }\n    }\n    return max_len\n}\n",
    "    max := 0\n    for _, sublst := range lst {\n        if len(sublst) > max {\n            max = len(sublst)\n        }\n    }\n    return max\n}\n",
    "    max_len := 0\n    for _, sub_lst := range lst {\n        if len(sub_lst) > max_len {\n            max_len = len(sub_lst)\n        }\n    }\n    return max_len\n}\n",
    "    max := 0\n    for _, sublist := range lst {\n        if len(sublist) > max {\n            max = len(sublist)\n        }\n    }\n    return max\n}\n",
    "    max_length := 0\n    for _, sublist := range lst {\n        if len(sublist) > max_length {\n            max_length = len(sublist)\n        }\n    }\n    return max_length\n}\n",
    "    max := 0\n    for _, sublst := range lst {\n        if len(sublst) > max {\n            max = len(sublst)\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, sublst := range lst {\n        if len(sublst) > max {\n            max = len(sublst)\n        }\n    }\n    return max\n}\n",
    "    max_len := 0\n    for _, sublst := range lst {\n        if len(sublst) > max_len {\n            max_len = len(sublst)\n        }\n    }\n    return max_len\n}\n",
    "    max := 0\n    for _, sub := range lst {\n        if len(sub) > max {\n            max = len(sub)\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, sub := range lst {\n        if len(sub) > max {\n            max = len(sub)\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, sub := range lst {\n        if len(sub) > max {\n            max = len(sub)\n        }\n    }\n    return max\n}\n",
    "    var max_len int\n    for _, sublist := range lst {\n        if len(sublist) > max_len {\n            max_len = len(sublist)\n        }\n    }\n    return max_len\n}\n",
    "    max := 0\n    for _, sub := range lst {\n        if len(sub) > max {\n            max = len(sub)\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, sublist := range lst {\n        if len(sublist) > max {\n            max = len(sublist)\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, sublst := range lst {\n        if len(sublst) > max {\n            max = len(sublst)\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, sublist := range lst {\n        if len(sublist) > max {\n            max = len(sublist)\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, sub := range lst {\n        if len(sub) > max {\n            max = len(sub)\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, sublist := range lst {\n        if len(sublist) > max {\n            max = len(sublist)\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, sublist := range lst {\n        if len(sublist) > max {\n            max = len(sublist)\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, sub := range lst {\n        if len(sub) > max {\n            max = len(sub)\n        }\n    }\n    return max\n}\n",
    "    max_len := 0\n    for _, sublst := range lst {\n        if len(sublst) > max_len {\n            max_len = len(sublst)\n        }\n    }\n    return max_len\n}\n",
    "    max := 0\n    for _, sub := range lst {\n        if len(sub) > max {\n            max = len(sub)\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, sub := range lst {\n        if len(sub) > max {\n            max = len(sub)\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, sublist := range lst {\n        if len(sublist) > max {\n            max = len(sublist)\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, sublst := range lst {\n        if len(sublst) > max {\n            max = len(sublst)\n        }\n    }\n    return max\n}\n",
    "    var max_len int\n    for _, sublist := range lst {\n        if len(sublist) > max_len {\n            max_len = len(sublist)\n        }\n    }\n    return max_len\n}\n",
    "    max_length := 0\n    for _, sublist := range lst {\n        if len(sublist) > max_length {\n            max_length = len(sublist)\n        }\n    }\n    return max_length\n}\n",
    "    max := 0\n    for _, sublst := range lst {\n        if len(sublst) > max {\n            max = len(sublst)\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, sublist := range lst {\n        if len(sublist) > max {\n            max = len(sublist)\n        }\n    }\n    return max\n}\n",
    "    max_len := 0\n    for _, sublist := range lst {\n        if len(sublist) > max_len {\n            max_len = len(sublist)\n        }\n    }\n    return max_len\n}\n",
    "    max_len := 0\n    for _, sub_lst := range lst {\n        if len(sub_lst) > max_len {\n            max_len = len(sub_lst)\n        }\n    }\n    return max_len\n}\n",
    "    max := 0\n    for _, sublist := range lst {\n        if len(sublist) > max {\n            max = len(sublist)\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, sublst := range lst {\n        if len(sublst) > max {\n            max = len(sublst)\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, sub := range lst {\n        if len(sub) > max {\n            max = len(sub)\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, sublist := range lst {\n        if len(sublist) > max {\n            max = len(sublist)\n        }\n    }\n    return max\n}\n",
    "    max_len := 0\n    for _, sublist := range lst {\n        if len(sublist) > max_len {\n            max_len = len(sublist)\n        }\n    }\n    return max_len\n}\n",
    "    max := 0\n    for _, sublst := range lst {\n        if len(sublst) > max {\n            max = len(sublst)\n        }\n    }\n    return max\n}\n",
    "    max_len := 0\n    for _, sublist := range lst {\n        if len(sublist) > max_len {\n            max_len = len(sublist)\n        }\n    }\n    return max_len\n}\n",
    "    max := 0\n    for _, sub := range lst {\n        if len(sub) > max {\n            max = len(sub)\n        }\n    }\n    return max\n}\n",
    "    max_len := 0\n    for _, sub_lst := range lst {\n        if len(sub_lst) > max_len {\n            max_len = len(sub_lst)\n        }\n    }\n    return max_len\n}\n",
    "    max := 0\n    for _, sub := range lst {\n        if len(sub) > max {\n            max = len(sub)\n        }\n    }\n    return max\n}\n",
    "    max_length := 0\n    for _, sublist := range lst {\n        if len(sublist) > max_length {\n            max_length = len(sublist)\n        }\n    }\n    return max_length\n}\n",
    "    max := 0\n    for _, sublst := range lst {\n        if len(sublst) > max {\n            max = len(sublst)\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, sub := range lst {\n        if len(sub) > max {\n            max = len(sub)\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, sub := range lst {\n        if len(sub) > max {\n            max = len(sub)\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, sublst := range lst {\n        if len(sublst) > max {\n            max = len(sublst)\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, sublst := range lst {\n        if len(sublst) > max {\n            max = len(sublst)\n        }\n    }\n    return max\n}\n",
    "    var max_length int\n    for _, sublist := range lst {\n        if len(sublist) > max_length {\n            max_length = len(sublist)\n        }\n    }\n    return max_length\n}\n",
    "    max_len := 0\n    for _, sublist := range lst {\n        if len(sublist) > max_len {\n            max_len = len(sublist)\n        }\n    }\n    return max_len\n}\n",
    "    max := 0\n    for _, sub := range lst {\n        if len(sub) > max {\n            max = len(sub)\n        }\n    }\n    return max\n}\n",
    "    max_length := 0\n    for _, sublist := range lst {\n        if len(sublist) > max_length {\n            max_length = len(sublist)\n        }\n    }\n    return max_length\n}\n",
    "    max := 0\n    for _, sublst := range lst {\n        if len(sublst) > max {\n            max = len(sublst)\n        }\n    }\n    return max\n}\n",
    "    max_len := 0\n    for _, sub_lst := range lst {\n        if len(sub_lst) > max_len {\n            max_len = len(sub_lst)\n        }\n    }\n    return max_len\n}\n",
    "    max := 0\n    for _, sublist := range lst {\n        if len(sublist) > max {\n            max = len(sublist)\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, sub := range lst {\n        if len(sub) > max {\n            max = len(sub)\n        }\n    }\n    return max\n}\n",
    "    max_len := 0\n    for _, sub_lst := range lst {\n        if len(sub_lst) > max_len {\n            max_len = len(sub_lst)\n        }\n    }\n    return max_len\n}\n",
    "    max := 0\n    for i := 0; i < len(lst); i++ {\n        if len(lst[i]) > max {\n            max = len(lst[i])\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, sublist := range lst {\n        if len(sublist) > max {\n            max = len(sublist)\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, sub := range lst {\n        if len(sub) > max {\n            max = len(sub)\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, sublst := range lst {\n        if len(sublst) > max {\n            max = len(sublst)\n        }\n    }\n    return max\n}\n",
    "    max_len := 0\n    for _, sub_lst := range lst {\n        if len(sub_lst) > max_len {\n            max_len = len(sub_lst)\n        }\n    }\n    return max_len\n}\n",
    "    max := 0\n    for _, sub := range lst {\n        if len(sub) > max {\n            max = len(sub)\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, sublst := range lst {\n        if len(sublst) > max {\n            max = len(sublst)\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, sublst := range lst {\n        if len(sublst) > max {\n            max = len(sublst)\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, sublist := range lst {\n        if len(sublist) > max {\n            max = len(sublist)\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, sublst := range lst {\n        if len(sublst) > max {\n            max = len(sublst)\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, sublist := range lst {\n        if len(sublist) > max {\n            max = len(sublist)\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, sublst := range lst {\n        if len(sublst) > max {\n            max = len(sublst)\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, sublist := range lst {\n        if len(sublist) > max {\n            max = len(sublist)\n        }\n    }\n    return max\n}\n",
    "    var max int\n    for _, sublst := range lst {\n        if len(sublst) > max {\n            max = len(sublst)\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, sublst := range lst {\n        if len(sublst) > max {\n            max = len(sublst)\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, sublist := range lst {\n        if len(sublist) > max {\n            max = len(sublist)\n        }\n    }\n    return max\n}\n",
    "    max_len := 0\n    for _, sublist := range lst {\n        if len(sublist) > max_len {\n            max_len = len(sublist)\n        }\n    }\n    return max_len\n}\n",
    "    max_len := 0\n    for _, sublist := range lst {\n        if len(sublist) > max_len {\n            max_len = len(sublist)\n        }\n    }\n    return max_len\n}\n",
    "    max_length := 0\n    for _, sub_lst := range lst {\n        if len(sub_lst) > max_length {\n            max_length = len(sub_lst)\n        }\n    }\n    return max_length\n}\n",
    "    max := 0\n    for _, sublist := range lst {\n        if len(sublist) > max {\n            max = len(sublist)\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, sub := range lst {\n        if len(sub) > max {\n            max = len(sub)\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, sub := range lst {\n        if len(sub) > max {\n            max = len(sub)\n        }\n    }\n    return max\n}\n",
    "    max_length := 0\n    for _, sublist := range lst {\n        if len(sublist) > max_length {\n            max_length = len(sublist)\n        }\n    }\n    return max_length\n}\n",
    "    max := 0\n    for _, sublist := range lst {\n        if len(sublist) > max {\n            max = len(sublist)\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, sublst := range lst {\n        if len(sublst) > max {\n            max = len(sublst)\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, sublist := range lst {\n        if len(sublist) > max {\n            max = len(sublist)\n        }\n    }\n    return max\n}\n",
    "    max_length := 0\n    for _, sublist := range lst {\n        if len(sublist) > max_length {\n            max_length = len(sublist)\n        }\n    }\n    return max_length\n}\n",
    "    max := 0\n    for _, sub := range lst {\n        if len(sub) > max {\n            max = len(sub)\n        }\n    }\n    return max\n}\n",
    "    max_len := 0\n    for _, sub_lst := range lst {\n        if len(sub_lst) > max_len {\n            max_len = len(sub_lst)\n        }\n    }\n    return max_len\n}\n",
    "    max := 0\n    for _, sublist := range lst {\n        if len(sublist) > max {\n            max = len(sublist)\n        }\n    }\n    return max\n}\n",
    "    max_len := 0\n    for _, sublist := range lst {\n        if len(sublist) > max_len {\n            max_len = len(sublist)\n        }\n    }\n    return max_len\n}\n",
    "    max_length := 0\n    for _, sublist := range lst {\n        if len(sublist) > max_length {\n            max_length = len(sublist)\n        }\n    }\n    return max_length\n}\n",
    "    max := 0\n    for _, sublst := range lst {\n        if len(sublst) > max {\n            max = len(sublst)\n        }\n    }\n    return max\n}\n",
    "    max_len := 0\n    for _, sublist := range lst {\n        if len(sublist) > max_len {\n            max_len = len(sublist)\n        }\n    }\n    return max_len\n}\n",
    "    max := 0\n    for _, sublist := range lst {\n        if len(sublist) > max {\n            max = len(sublist)\n        }\n    }\n    return max\n}\n",
    "    max_length := 0\n    for _, sublist := range lst {\n        if len(sublist) > max_length {\n            max_length = len(sublist)\n        }\n    }\n    return max_length\n}\n",
    "    max := 0\n    for _, sublst := range lst {\n        if len(sublst) > max {\n            max = len(sublst)\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, sublist := range lst {\n        if len(sublist) > max {\n            max = len(sublist)\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, sub_list := range lst {\n        if len(sub_list) > max {\n            max = len(sub_list)\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, sub := range lst {\n        if len(sub) > max {\n            max = len(sub)\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, sublst := range lst {\n        if len(sublst) > max {\n            max = len(sublst)\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, sublst := range lst {\n        if len(sublst) > max {\n            max = len(sublst)\n        }\n    }\n    return max\n}\n",
    "    max_len := 0\n    for _, sublist := range lst {\n        if len(sublist) > max_len {\n            max_len = len(sublist)\n        }\n    }\n    return max_len\n}\n",
    "    max := 0\n    for _, sublist := range lst {\n        if len(sublist) > max {\n            max = len(sublist)\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, sublst := range lst {\n        if len(sublst) > max {\n            max = len(sublst)\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, sub := range lst {\n        if len(sub) > max {\n            max = len(sub)\n        }\n    }\n    return max\n}\n",
    "    max_len := 0\n    for _, sublist := range lst {\n        if len(sublist) > max_len {\n            max_len = len(sublist)\n        }\n    }\n    return max_len\n}\n",
    "    max := 0\n    for _, sublist := range lst {\n        if len(sublist) > max {\n            max = len(sublist)\n        }\n    }\n    return max\n}\n",
    "    max_length := 0\n    for _, sublist := range lst {\n        if len(sublist) > max_length {\n            max_length = len(sublist)\n        }\n    }\n    return max_length\n}\n",
    "    max := 0\n    for _, sublist := range lst {\n        if len(sublist) > max {\n            max = len(sublist)\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, sublst := range lst {\n        if len(sublst) > max {\n            max = len(sublst)\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, sublist := range lst {\n        if len(sublist) > max {\n            max = len(sublist)\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, sublst := range lst {\n        if len(sublst) > max {\n            max = len(sublst)\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, sublst := range lst {\n        if len(sublst) > max {\n            max = len(sublst)\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, sublst := range lst {\n        if len(sublst) > max {\n            max = len(sublst)\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, sublist := range lst {\n        if len(sublist) > max {\n            max = len(sublist)\n        }\n    }\n    return max\n}\n",
    "    max_len := 0\n    for _, sublst := range lst {\n        if len(sublst) > max_len {\n            max_len = len(sublst)\n        }\n    }\n    return max_len\n}\n",
    "    max := 0\n    for _, sublst := range lst {\n        if len(sublst) > max {\n            max = len(sublst)\n        }\n    }\n    return max\n}\n",
    "    max_length := 0\n    for _, sublist := range lst {\n        if len(sublist) > max_length {\n            max_length = len(sublist)\n        }\n    }\n    return max_length\n}\n",
    "    max := 0\n    for _, sublst := range lst {\n        if len(sublst) > max {\n            max = len(sublst)\n        }\n    }\n    return max\n}\n",
    "    max_length := 0\n    for _, sublist := range lst {\n        if len(sublist) > max_length {\n            max_length = len(sublist)\n        }\n    }\n    return max_length\n}\n",
    "    max := 0\n    for _, sublst := range lst {\n        if len(sublst) > max {\n            max = len(sublst)\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, sublst := range lst {\n        if len(sublst) > max {\n            max = len(sublst)\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, sub := range lst {\n        if len(sub) > max {\n            max = len(sub)\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, sublist := range lst {\n        if len(sublist) > max {\n            max = len(sublist)\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, sublst := range lst {\n        if len(sublst) > max {\n            max = len(sublst)\n        }\n    }\n    return max\n}\n",
    "    max_length := 0\n    for _, sublist := range lst {\n        if len(sublist) > max_length {\n            max_length = len(sublist)\n        }\n    }\n    return max_length\n}\n",
    "    max_len := 0\n    for _, sublist := range lst {\n        if len(sublist) > max_len {\n            max_len = len(sublist)\n        }\n    }\n    return max_len\n}\n",
    "    max_length := 0\n    for _, sub_lst := range lst {\n        if len(sub_lst) > max_length {\n            max_length = len(sub_lst)\n        }\n    }\n    return max_length\n}\n",
    "    max := 0\n    for _, sublst := range lst {\n        if len(sublst) > max {\n            max = len(sublst)\n        }\n    }\n    return max\n}\n",
    "    max_len := 0\n    for i := 0; i < len(lst); i++ {\n        if len(lst[i]) > max_len {\n            max_len = len(lst[i])\n        }\n    }\n    return max_len\n}\n",
    "    max_length := 0\n    for _, sublist := range lst {\n        if len(sublist) > max_length {\n            max_length = len(sublist)\n        }\n    }\n    return max_length\n}\n",
    "    max := 0\n    for _, sub := range lst {\n        if len(sub) > max {\n            max = len(sub)\n        }\n    }\n    return max\n}\n",
    "    max_length := 0\n    for _, sublist := range lst {\n        if len(sublist) > max_length {\n            max_length = len(sublist)\n        }\n    }\n    return max_length\n}\n",
    "    max_len := 0\n    for _, sublist := range lst {\n        if len(sublist) > max_len {\n            max_len = len(sublist)\n        }\n    }\n    return max_len\n}\n",
    "    var max int\n    for _, sublst := range lst {\n        if len(sublst) > max {\n            max = len(sublst)\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, sub := range lst {\n        if len(sub) > max {\n            max = len(sub)\n        }\n    }\n    return max\n}\n",
    "    max_len := 0\n    for _, sublist := range lst {\n        if len(sublist) > max_len {\n            max_len = len(sublist)\n        }\n    }\n    return max_len\n}\n",
    "    max_len := 0\n    for _, sub_lst := range lst {\n        if len(sub_lst) > max_len {\n            max_len = len(sub_lst)\n        }\n    }\n    return max_len\n}\n",
    "    max := 0\n    for _, sublist := range lst {\n        if len(sublist) > max {\n            max = len(sublist)\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, sublist := range lst {\n        if len(sublist) > max {\n            max = len(sublist)\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, sublst := range lst {\n        if len(sublst) > max {\n            max = len(sublst)\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, sub := range lst {\n        if len(sub) > max {\n            max = len(sub)\n        }\n    }\n    return max\n}\n",
    "    max_len := 0\n    for _, sublist := range lst {\n        if len(sublist) > max_len {\n            max_len = len(sublist)\n        }\n    }\n    return max_len\n}\n",
    "    max := 0\n    for _, sublst := range lst {\n        if len(sublst) > max {\n            max = len(sublst)\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, sublst := range lst {\n        if len(sublst) > max {\n            max = len(sublst)\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, sublist := range lst {\n        if len(sublist) > max {\n            max = len(sublist)\n        }\n    }\n    return max\n}\n",
    "    max_len := 0\n    for _, sublst := range lst {\n        if len(sublst) > max_len {\n            max_len = len(sublst)\n        }\n    }\n    return max_len\n}\n",
    "    max_len := 0\n    for _, sub_lst := range lst {\n        if len(sub_lst) > max_len {\n            max_len = len(sub_lst)\n        }\n    }\n    return max_len\n}\n",
    "    max := 0\n    for _, sublst := range lst {\n        if len(sublst) > max {\n            max = len(sublst)\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, sublst := range lst {\n        if len(sublst) > max {\n            max = len(sublst)\n        }\n    }\n    return max\n}\n",
    "    max_len := 0\n    for _, sublist := range lst {\n        if len(sublist) > max_len {\n            max_len = len(sublist)\n        }\n    }\n    return max_len\n}\n",
    "    max_len := 0\n    for _, sub_lst := range lst {\n        if len(sub_lst) > max_len {\n            max_len = len(sub_lst)\n        }\n    }\n    return max_len\n}\n",
    "    var max_length int = 0\n    for _, sub_list := range lst {\n        if len(sub_list) > max_length {\n            max_length = len(sub_list)\n        }\n    }\n    return max_length\n}\n",
    "    max := 0\n    for _, sublist := range lst {\n        if len(sublist) > max {\n            max = len(sublist)\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, sub := range lst {\n        if len(sub) > max {\n            max = len(sub)\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, sublst := range lst {\n        if len(sublst) > max {\n            max = len(sublst)\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, sub := range lst {\n        if len(sub) > max {\n            max = len(sub)\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, sublst := range lst {\n        if len(sublst) > max {\n            max = len(sublst)\n        }\n    }\n    return max\n}\n",
    "    max_len := 0\n    for _, sub_lst := range lst {\n        if len(sub_lst) > max_len {\n            max_len = len(sub_lst)\n        }\n    }\n    return max_len\n}\n",
    "    max := 0\n    for _, sub := range lst {\n        if len(sub) > max {\n            max = len(sub)\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, sublst := range lst {\n        if len(sublst) > max {\n            max = len(sublst)\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, sublst := range lst {\n        if len(sublst) > max {\n            max = len(sublst)\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, sublist := range lst {\n        if len(sublist) > max {\n            max = len(sublist)\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, sublist := range lst {\n        if len(sublist) > max {\n            max = len(sublist)\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, sublist := range lst {\n        if len(sublist) > max {\n            max = len(sublist)\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, sublist := range lst {\n        if len(sublist) > max {\n            max = len(sublist)\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, sublist := range lst {\n        if len(sublist) > max {\n            max = len(sublist)\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, sublst := range lst {\n        if len(sublst) > max {\n            max = len(sublst)\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, sublist := range lst {\n        if len(sublist) > max {\n            max = len(sublist)\n        }\n    }\n    return max\n}\n",
    "    max_length := 0\n    for _, sublist := range lst {\n        if len(sublist) > max_length {\n            max_length = len(sublist)\n        }\n    }\n    return max_length\n}\n"
  ]
}
{
  "name": "mbpp_754_extract_index_list",
  "language": "go_test.go",
  "prompt": "package extract_index_list_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nfunc extract_index_list(l1 []int, l2 []int, l3 []int) interface{} {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_754_extract_index_list.py",
  "prompt_terminology": "verbatim",
  "tests": "func TestExtract_Index_List(t *testing.T) {\n  candidate := extract_index_list\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 1, 3, 4, 5, 6, 7}, []int{0, 1, 2, 3, 4, 5, 7}, []int{0, 1, 2, 3, 4, 5, 7}), expected: []int{1, 7} },\n     { actual: candidate([]int{1, 1, 3, 4, 5, 6, 7}, []int{0, 1, 2, 3, 4, 6, 5}, []int{0, 1, 2, 3, 4, 6, 7}), expected: []int{1, 6} },\n     { actual: candidate([]int{1, 1, 3, 4, 6, 5, 6}, []int{0, 1, 2, 3, 4, 5, 7}, []int{0, 1, 2, 3, 4, 5, 7}), expected: []int{1, 5} },\n     { actual: candidate([]int{1, 2, 3, 4, 6, 6, 6}, []int{0, 1, 2, 3, 4, 5, 7}, []int{0, 1, 2, 3, 4, 5, 7}), expected: interface{}{} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
  "stop_tokens": [
    "\nfunc",
    "struct",
    "\n// "
  ],
  "completions": [
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if i < len(l2) && i < len(l3) {\n            if l1[i] == l2[i] && l2[i] == l3[i] {\n                result = append(result, l1[i])\n            }\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var res []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            res = append(res, l1[i])\n        }\n    }\n    return res\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if i < len(l2) && i < len(l3) && l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var list []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            list = append(list, l1[i])\n        }\n    }\n    return list\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if i < len(l2) && i < len(l3) {\n            if l1[i] == l2[i] && l2[i] == l3[i] {\n                result = append(result, l1[i])\n            }\n        }\n    }\n    return result\n}\n",
    "    var common_elements []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            common_elements = append(common_elements, l1[i])\n        }\n    }\n    return common_elements\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if i < len(l2) && i < len(l3) {\n            if l1[i] == l2[i] && l2[i] == l3[i] {\n                result = append(result, l1[i])\n            }\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var common_list []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            common_list = append(common_list, l1[i])\n        }\n    }\n    return common_list\n}\n",
    "    var result []int\n    for i, _ := range l1 {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if i < len(l2) && i < len(l3) && l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var l []int\n    for i := 0; i < len(l1); i++ {\n        if i < len(l2) && i < len(l3) {\n            if l1[i] == l2[i] && l2[i] == l3[i] {\n                l = append(l, l1[i])\n            }\n        }\n    }\n    return l\n}\n",
    "    var common_list []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            common_list = append(common_list, l1[i])\n        }\n    }\n    return common_list\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i, _ := range l1 {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var common_list []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            common_list = append(common_list, l1[i])\n        }\n    }\n    return common_list\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l1[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var res []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            res = append(res, l1[i])\n        }\n    }\n    return res\n}\n",
    "    var l []int\n    for i := 0; i < len(l1); i++ {\n        if i < len(l2) && i < len(l3) {\n            if l1[i] == l2[i] && l2[i] == l3[i] {\n                l = append(l, l1[i])\n            }\n        }\n    }\n    return l\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if i < len(l2) && i < len(l3) && l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i, _ := range l1 {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if i < len(l2) && i < len(l3) {\n            if l1[i] == l2[i] && l2[i] == l3[i] {\n                result = append(result, l1[i])\n            }\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if i < len(l2) && i < len(l3) && l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var res []int\n    for i := 0; i < len(l1); i++ {\n        if i < len(l2) && i < len(l3) && l1[i] == l2[i] && l2[i] == l3[i] {\n            res = append(res, l1[i])\n        }\n    }\n    return res\n}\n",
    "    var common_list []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            common_list = append(common_list, l1[i])\n        }\n    }\n    return common_list\n}\n",
    "    var common_list []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l1[i] == l3[i] {\n            common_list = append(common_list, l1[i])\n        }\n    }\n    return common_list\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if i < len(l2) && i < len(l3) {\n            if l1[i] == l2[i] && l2[i] == l3[i] {\n                result = append(result, l1[i])\n            }\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if i < len(l2) && i < len(l3) && l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i, _ := range l1 {\n        if i < len(l2) && i < len(l3) {\n            if l1[i] == l2[i] && l2[i] == l3[i] {\n                result = append(result, l1[i])\n            }\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if i < len(l2) && i < len(l3) && l1[i] == l2[i] && l1[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if i < len(l2) && i < len(l3) && l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i, _ := range l1 {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i, _ := range l1 {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if i < len(l2) && i < len(l3) {\n            if l1[i] == l2[i] && l1[i] == l3[i] {\n                result = append(result, l1[i])\n            }\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i, _ := range l1 {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if i < len(l2) && i < len(l3) {\n            if l1[i] == l2[i] && l2[i] == l3[i] {\n                result = append(result, l1[i])\n            }\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if i < len(l2) && i < len(l3) && l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i, _ := range l1 {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i, _ := range l1 {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i, _ := range l1 {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var common_list []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            common_list = append(common_list, l1[i])\n        }\n    }\n    return common_list\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if i < len(l2) && i < len(l3) && l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i, _ := range l1 {\n        if i < len(l2) && i < len(l3) {\n            if l1[i] == l2[i] && l2[i] == l3[i] {\n                result = append(result, l1[i])\n            }\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i, _ := range l1 {\n        if i < len(l2) && i < len(l3) {\n            if l1[i] == l2[i] && l2[i] == l3[i] {\n                result = append(result, l1[i])\n            }\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if i < len(l2) && i < len(l3) {\n            if l1[i] == l2[i] && l2[i] == l3[i] {\n                result = append(result, l1[i])\n            }\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var common []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            common = append(common, l1[i])\n        }\n    }\n    return common\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if i < len(l2) && i < len(l3) && l1[i] == l2[i] && l1[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if i < len(l2) && i < len(l3) {\n            if l1[i] == l2[i] && l2[i] == l3[i] {\n                result = append(result, l1[i])\n            }\n        }\n    }\n    return result\n}\n",
    "    var common_list []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            common_list = append(common_list, l1[i])\n        }\n    }\n    return common_list\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if i < len(l2) && i < len(l3) && l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if i < len(l2) && i < len(l3) {\n            if l1[i] == l2[i] && l2[i] == l3[i] {\n                result = append(result, l1[i])\n            }\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l1[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if i < len(l2) && i < len(l3) {\n            if l1[i] == l2[i] && l1[i] == l3[i] {\n                result = append(result, l1[i])\n            }\n        }\n    }\n    return result\n}\n",
    "    var common_list []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            common_list = append(common_list, l1[i])\n        }\n    }\n    return common_list\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if i < len(l2) && i < len(l3) {\n            if l1[i] == l2[i] && l2[i] == l3[i] {\n                result = append(result, l1[i])\n            }\n        }\n    }\n    return result\n}\n",
    "    var common_list []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            common_list = append(common_list, l1[i])\n        }\n    }\n    return common_list\n}\n",
    "    var result []int\n    for i, _ := range l1 {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var l []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            l = append(l, l1[i])\n        }\n    }\n    return l\n}\n",
    "    var result []int\n    for i, _ := range l1 {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if i < len(l2) && i < len(l3) {\n            if l1[i] == l2[i] && l2[i] == l3[i] {\n                result = append(result, l1[i])\n            }\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if i < len(l2) && i < len(l3) {\n            if l1[i] == l2[i] && l2[i] == l3[i] {\n                result = append(result, l1[i])\n            }\n        }\n    }\n    return result\n}\n",
    "    var common_list []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l1[i] == l3[i] {\n            common_list = append(common_list, l1[i])\n        }\n    }\n    return common_list\n}\n",
    "    var result []int\n    for i, _ := range l1 {\n        if i < len(l2) && i < len(l3) {\n            if l1[i] == l2[i] && l2[i] == l3[i] {\n                result = append(result, l1[i])\n            }\n        }\n    }\n    return result\n}\n",
    "    var common []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l1[i] == l3[i] {\n            common = append(common, l1[i])\n        }\n    }\n    return common\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if i < len(l2) && i < len(l3) {\n            if l1[i] == l2[i] && l2[i] == l3[i] {\n                result = append(result, l1[i])\n            }\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if i < len(l2) && i < len(l3) {\n            if l1[i] == l2[i] && l2[i] == l3[i] {\n                result = append(result, l1[i])\n            }\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if i < len(l2) && i < len(l3) {\n            if l1[i] == l2[i] && l2[i] == l3[i] {\n                result = append(result, l1[i])\n            }\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if i < len(l2) && i < len(l3) && l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if i < len(l2) && i < len(l3) {\n            if l1[i] == l2[i] && l2[i] == l3[i] {\n                result = append(result, l1[i])\n            }\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i, _ := range l1 {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var l []int\n    for i, _ := range l1 {\n        if i < len(l2) && i < len(l3) {\n            if l1[i] == l2[i] && l2[i] == l3[i] {\n                l = append(l, l1[i])\n            }\n        }\n    }\n    return l\n}\n",
    "    var common_list []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            common_list = append(common_list, l1[i])\n        }\n    }\n    return common_list\n}\n",
    "    var common_list []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            common_list = append(common_list, l1[i])\n        }\n    }\n    return common_list\n}\n",
    "    var res []int\n    for i := 0; i < len(l1); i++ {\n        if i < len(l2) && i < len(l3) {\n            if l1[i] == l2[i] && l1[i] == l3[i] {\n                res = append(res, l1[i])\n            }\n        }\n    }\n    return res\n}\n",
    "    var result []int\n    for i, _ := range l1 {\n        if i < len(l2) && i < len(l3) && l1[i] == l2[i] && l1[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if i < len(l2) && i < len(l3) {\n            if l1[i] == l2[i] && l2[i] == l3[i] {\n                result = append(result, l1[i])\n            }\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if i < len(l2) && i < len(l3) {\n            if l1[i] == l2[i] && l2[i] == l3[i] {\n                result = append(result, l1[i])\n            }\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if i < len(l2) && i < len(l3) {\n            if l1[i] == l2[i] && l2[i] == l3[i] {\n                result = append(result, l1[i])\n            }\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i, _ := range l1 {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var l4 []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            l4 = append(l4, l1[i])\n        }\n    }\n    return l4\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if i < len(l2) && i < len(l3) && l1[i] == l2[i] && l1[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l1[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var common_list []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            common_list = append(common_list, l1[i])\n        }\n    }\n    return common_list\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if i < len(l2) && i < len(l3) {\n            if l1[i] == l2[i] && l2[i] == l3[i] {\n                result = append(result, l1[i])\n            }\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if i < len(l2) && i < len(l3) {\n            if l1[i] == l2[i] && l2[i] == l3[i] {\n                result = append(result, l1[i])\n            }\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if i < len(l2) && i < len(l3) && l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if i < len(l2) && i < len(l3) && l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l1[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if i < len(l2) && i < len(l3) && l1[i] == l2[i] && l1[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if i < len(l2) && i < len(l3) && l1[i] == l2[i] && l1[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if i < len(l2) && i < len(l3) {\n            if l1[i] == l2[i] && l2[i] == l3[i] {\n                result = append(result, l1[i])\n            }\n        }\n    }\n    return result\n}\n",
    "    var common []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            common = append(common, l1[i])\n        }\n    }\n    return common\n}\n",
    "    var result []int\n    for i, _ := range l1 {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if i < len(l2) && i < len(l3) && l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if i < len(l2) && i < len(l3) && l1[i] == l2[i] && l1[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i, _ := range l1 {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var res []int\n    for i := 0; i < len(l1); i++ {\n        if i < len(l2) && i < len(l3) {\n            if l1[i] == l2[i] && l2[i] == l3[i] {\n                res = append(res, l1[i])\n            }\n        }\n    }\n    return res\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if i < len(l2) && i < len(l3) {\n            if l1[i] == l2[i] && l2[i] == l3[i] {\n                result = append(result, l1[i])\n            }\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if i < len(l2) && i < len(l3) && l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i, _ := range l1 {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i, _ := range l1 {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if i < len(l2) && i < len(l3) {\n            if l1[i] == l2[i] && l2[i] == l3[i] {\n                result = append(result, l1[i])\n            }\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if i < len(l2) && i < len(l3) {\n            if l1[i] == l2[i] && l2[i] == l3[i] {\n                result = append(result, l1[i])\n            }\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i, _ := range l1 {\n        if l1[i] == l2[i] && l1[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if i < len(l2) && i < len(l3) && l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var res []int\n    for i, _ := range l1 {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            res = append(res, l1[i])\n        }\n    }\n    return res\n}\n",
    "    var result []int\n    for i, _ := range l1 {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if i < len(l2) && i < len(l3) {\n            if l1[i] == l2[i] && l2[i] == l3[i] {\n                result = append(result, l1[i])\n            }\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if i < len(l2) && i < len(l3) && l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if i < len(l2) && i < len(l3) {\n            if l1[i] == l2[i] && l2[i] == l3[i] {\n                result = append(result, l1[i])\n            }\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if i < len(l2) && i < len(l3) && l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var common_list []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            common_list = append(common_list, l1[i])\n        }\n    }\n    return common_list\n}\n",
    "    var common_list []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            common_list = append(common_list, l1[i])\n        }\n    }\n    return common_list\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if i < len(l2) && i < len(l3) && l1[i] == l2[i] && l1[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if i < len(l2) && i < len(l3) && l1[i] == l2[i] && l1[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if i < len(l2) && i < len(l3) {\n            if l1[i] == l2[i] && l1[i] == l3[i] {\n                result = append(result, l1[i])\n            }\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l1[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if i < len(l2) && i < len(l3) {\n            if l1[i] == l2[i] && l2[i] == l3[i] {\n                result = append(result, l1[i])\n            }\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var res []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            res = append(res, l1[i])\n        }\n    }\n    return res\n}\n",
    "    var l []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            l = append(l, l1[i])\n        }\n    }\n    return l\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if i < len(l2) && i < len(l3) {\n            if l1[i] == l2[i] && l2[i] == l3[i] {\n                result = append(result, l1[i])\n            }\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i, _ := range l1 {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var common_list []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            common_list = append(common_list, l1[i])\n        }\n    }\n    return common_list\n}\n",
    "    var l []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            l = append(l, l1[i])\n        }\n    }\n    return l\n}\n",
    "    var result []int\n    for i, _ := range l1 {\n        if l1[i] == l2[i] && l1[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i, _ := range l1 {\n        if i < len(l2) && i < len(l3) {\n            if l1[i] == l2[i] && l2[i] == l3[i] {\n                result = append(result, l1[i])\n            }\n        }\n    }\n    return result\n}\n",
    "    var common_list []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            common_list = append(common_list, l1[i])\n        }\n    }\n    return common_list\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l1[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if i < len(l2) && i < len(l3) {\n            if l1[i] == l2[i] && l2[i] == l3[i] {\n                result = append(result, l1[i])\n            }\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if i < len(l2) && i < len(l3) {\n            if l1[i] == l2[i] && l1[i] == l3[i] {\n                result = append(result, l1[i])\n            }\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var res []int\n    for i := 0; i < len(l1); i++ {\n        if i < len(l2) && i < len(l3) {\n            if l1[i] == l2[i] && l2[i] == l3[i] {\n                res = append(res, l1[i])\n            }\n        }\n    }\n    return res\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if i < len(l2) && i < len(l3) {\n            if l1[i] == l2[i] && l2[i] == l3[i] {\n                result = append(result, l1[i])\n            }\n        }\n    }\n    return result\n}\n",
    "    var common_list []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            common_list = append(common_list, l1[i])\n        }\n    }\n    return common_list\n}\n",
    "    var res []int\n    for i, _ := range l1 {\n        if i < len(l2) && i < len(l3) {\n            if l1[i] == l2[i] && l2[i] == l3[i] {\n                res = append(res, l1[i])\n            }\n        }\n    }\n    return res\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if i < len(l2) && i < len(l3) {\n            if l1[i] == l2[i] && l1[i] == l3[i] {\n                result = append(result, l1[i])\n            }\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i, _ := range l1 {\n        if i < len(l2) && i < len(l3) {\n            if l1[i] == l2[i] && l2[i] == l3[i] {\n                result = append(result, l1[i])\n            }\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if i < len(l2) && i < len(l3) && l1[i] == l2[i] && l1[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if i < len(l2) && i < len(l3) {\n            if l1[i] == l2[i] && l2[i] == l3[i] {\n                result = append(result, l1[i])\n            }\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i, _ := range l1 {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if i < len(l2) && i < len(l3) {\n            if l1[i] == l2[i] && l2[i] == l3[i] {\n                result = append(result, l1[i])\n            }\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if i < len(l2) && i < len(l3) && l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if i < len(l2) && i < len(l3) {\n            if l1[i] == l2[i] && l2[i] == l3[i] {\n                result = append(result, l1[i])\n            }\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if l1[i] == l2[i] && l2[i] == l3[i] {\n            result = append(result, l1[i])\n        }\n    }\n    return result\n}\n",
    "    var result []int\n    for i := 0; i < len(l1); i++ {\n        if i < len(l2) && i < len(l3) {\n            if l1[i] == l2[i] && l2[i] == l3[i] {\n                result = append(result, l1[i])\n            }\n        }\n    }\n    return result\n}\n"
  ]
}
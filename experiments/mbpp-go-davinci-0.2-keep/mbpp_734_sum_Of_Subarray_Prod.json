{
  "name": "mbpp_734_sum_Of_Subarray_Prod",
  "language": "go_test.go",
  "prompt": "package sum_Of_Subarray_Prod_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfunc sum_Of_Subarray_Prod(arr []int) int {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_734_sum_Of_Subarray_Prod.py",
  "prompt_terminology": "verbatim",
  "tests": "func TestSum_Of_Subarray_Prod(t *testing.T) {\n  candidate := sum_Of_Subarray_Prod\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3}), expected: 20 },\n     { actual: candidate([]int{1, 2}), expected: 5 },\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 84 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
  "stop_tokens": [
    "\nfunc",
    "struct",
    "\n// "
  ],
  "completions": [
    "    sum := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i; j < len(arr); j++ {\n            prod := 1\n            for k := i; k <= j; k++ {\n                prod *= arr[k]\n            }\n            sum += prod\n        }\n    }\n    return sum\n}\n",
    "    // Write your code here\n    var sum int\n    for i := 0; i < len(arr); i++ {\n        for j := i; j < len(arr); j++ {\n            var prod int = 1\n            for k := i; k <= j; k++ {\n                prod *= arr[k]\n            }\n            sum += prod\n        }\n    }\n    return sum\n}\n",
    "    var sum int\n    for i := 0; i < len(arr); i++ {\n        for j := i; j < len(arr); j++ {\n            var prod int = 1\n            for k := i; k <= j; k++ {\n                prod *= arr[k]\n            }\n            sum += prod\n        }\n    }\n    return sum\n}\n",
    "    var sum int\n    for i := 0; i < len(arr); i++ {\n        for j := i; j < len(arr); j++ {\n            var prod int = 1\n            for k := i; k <= j; k++ {\n                prod *= arr[k]\n            }\n            sum += prod\n        }\n    }\n    return sum\n}\n",
    "    // Write your code here\n    var sum int\n    for i := 0; i < len(arr); i++ {\n        for j := i; j < len(arr); j++ {\n            var prod int\n            for k := i; k <= j; k++ {\n                prod *= arr[k]\n            }\n            sum += prod\n        }\n    }\n    return sum\n}\n",
    "    var sum int = 0\n    var n int = len(arr)\n    for i := 0; i < n; i++ {\n        for j := i; j < n; j++ {\n            var prod int = 1\n            for k := i; k <= j; k++ {\n                prod *= arr[k]\n            }\n            sum += prod\n        }\n    }\n    return sum\n}\n",
    "    sum := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i; j < len(arr); j++ {\n            prod := 1\n            for k := i; k <= j; k++ {\n                prod *= arr[k]\n            }\n            sum += prod\n        }\n    }\n    return sum\n}\n",
    "    sum := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i; j < len(arr); j++ {\n            prod := 1\n            for k := i; k <= j; k++ {\n                prod *= arr[k]\n            }\n            sum += prod\n        }\n    }\n    return sum\n}\n",
    "    var sum int\n    for i := 0; i < len(arr); i++ {\n        for j := i; j < len(arr); j++ {\n            var prod int = 1\n            for k := i; k <= j; k++ {\n                prod *= arr[k]\n            }\n            sum += prod\n        }\n    }\n    return sum\n}\n",
    "    var sum int\n    for i := 0; i < len(arr); i++ {\n        for j := i; j < len(arr); j++ {\n            var prod int = 1\n            for k := i; k <= j; k++ {\n                prod *= arr[k]\n            }\n            sum += prod\n        }\n    }\n    return sum\n}\n",
    "    var sum int\n    for i := 0; i < len(arr); i++ {\n        for j := i; j < len(arr); j++ {\n            var prod int = 1\n            for k := i; k <= j; k++ {\n                prod *= arr[k]\n            }\n            sum += prod\n        }\n    }\n    return sum\n}\n",
    "    var sum int\n    for i := 0; i < len(arr); i++ {\n        for j := i; j < len(arr); j++ {\n            var prod int = 1\n            for k := i; k <= j; k++ {\n                prod *= arr[k]\n            }\n            sum += prod\n        }\n    }\n    return sum\n}\n",
    "    var sum int\n    for i := 0; i < len(arr); i++ {\n        for j := i; j < len(arr); j++ {\n            var prod int = 1\n            for k := i; k <= j; k++ {\n                prod *= arr[k]\n            }\n            sum += prod\n        }\n    }\n    return sum\n}\n",
    "    var sum int\n    for i := 0; i < len(arr); i++ {\n        for j := i; j < len(arr); j++ {\n            var prod int = 1\n            for k := i; k <= j; k++ {\n                prod *= arr[k]\n            }\n            sum += prod\n        }\n    }\n    return sum\n}\n",
    "    var sum int = 0\n    for i := 0; i < len(arr); i++ {\n        for j := i; j < len(arr); j++ {\n            var prod int = 1\n            for k := i; k <= j; k++ {\n                prod *= arr[k]\n            }\n            sum += prod\n        }\n    }\n    return sum\n}\n",
    "    // Write your code here\n    var sum int\n    for i := 0; i < len(arr); i++ {\n        for j := i; j < len(arr); j++ {\n            var prod int = 1\n            for k := i; k <= j; k++ {\n                prod *= arr[k]\n            }\n            sum += prod\n        }\n    }\n    return sum\n}\n",
    "    var sum int\n    for i := 0; i < len(arr); i++ {\n        for j := i; j < len(arr); j++ {\n            var prod int = 1\n            for k := i; k <= j; k++ {\n                prod *= arr[k]\n            }\n            sum += prod\n        }\n    }\n    return sum\n}\n",
    "    var sum int\n    for i := 0; i < len(arr); i++ {\n        for j := i; j < len(arr); j++ {\n            var prod int = 1\n            for k := i; k <= j; k++ {\n                prod *= arr[k]\n            }\n            sum += prod\n        }\n    }\n    return sum\n}\n",
    "    sum := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i; j < len(arr); j++ {\n            prod := 1\n            for k := i; k <= j; k++ {\n                prod *= arr[k]\n            }\n            sum += prod\n        }\n    }\n    return sum\n}\n",
    "    var sum int\n    for i := 0; i < len(arr); i++ {\n        for j := i; j < len(arr); j++ {\n            var prod int = 1\n            for k := i; k <= j; k++ {\n                prod *= arr[k]\n            }\n            sum += prod\n        }\n    }\n    return sum\n}\n"
  ]
}
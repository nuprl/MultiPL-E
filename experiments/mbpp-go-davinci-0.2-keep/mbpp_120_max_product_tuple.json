{
  "name": "mbpp_120_max_product_tuple",
  "language": "go_test.go",
  "prompt": "package max_product_tuple_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\nfunc max_product_tuple(list1 [][]interface{}) int {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_120_max_product_tuple.py",
  "prompt_terminology": "verbatim",
  "tests": "func TestMax_Product_Tuple(t *testing.T) {\n  candidate := max_product_tuple\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{2, 7}, []interface{}{2, 6}, []interface{}{1, 8}, []interface{}{4, 9}}), expected: 36 },\n     { actual: candidate([][]int{[]interface{}{10, 20}, []interface{}{15, 2}, []interface{}{5, 10}}), expected: 200 },\n     { actual: candidate([][]int{[]interface{}{11, 44}, []interface{}{10, 15}, []interface{}{20, 5}, []interface{}{12, 9}}), expected: 484 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
  "stop_tokens": [
    "\nfunc",
    "struct",
    "\n// "
  ],
  "completions": [
    "    max := 0\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := 1\n                for _, num := range tuple1 {\n                    product *= num.(int)\n                }\n                for _, num := range tuple2 {\n                    product *= num.(int)\n                }\n                if product > max {\n                    max = product\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    var max_product int\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1[i]); j++ {\n            for k := 0; k < len(list1); k++ {\n                for l := 0; l < len(list1[k]); l++ {\n                    if i != k && j != l {\n                        product := list1[i][j].(int) * list1[k][l].(int)\n                        if product > max_product {\n                            max_product = product\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return max_product\n}\n",
    "    max := 0\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := 1\n                for _, num := range tuple1 {\n                    product *= num.(int)\n                }\n                for _, num := range tuple2 {\n                    product *= num.(int)\n                }\n                if product > max {\n                    max = product\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    var max_product int = 0\n    for _, tuple := range list1 {\n        var product int = 1\n        for _, value := range tuple {\n            product *= value.(int)\n        }\n        if product > max_product {\n            max_product = product\n        }\n    }\n    return max_product\n}\n",
    "    var max int\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            product := tuple1[0].(int) * tuple2[1].(int)\n            if product > max {\n                max = product\n            }\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := 1\n                for _, item1 := range tuple1 {\n                    for _, item2 := range tuple2 {\n                        if item1 != item2 {\n                            product *= item1.(int) * item2.(int)\n                        }\n                    }\n                }\n                if product > max {\n                    max = product\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    var max_product int = 0\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1[i]); j++ {\n            for k := 0; k < len(list1); k++ {\n                for l := 0; l < len(list1[k]); l++ {\n                    if i != k && j != l {\n                        product := list1[i][j].(int) * list1[k][l].(int)\n                        if product > max_product {\n                            max_product = product\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return max_product\n}\n",
    "    max_product := 0\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := 1\n                for _, num := range tuple1 {\n                    product *= num.(int)\n                }\n                for _, num := range tuple2 {\n                    product *= num.(int)\n                }\n                if product > max_product {\n                    max_product = product\n                }\n            }\n        }\n    }\n    return max_product\n}\n",
    "    var max_product int = 0\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := tuple1[0].(int) * tuple2[0].(int)\n                if product > max_product {\n                    max_product = product\n                }\n            }\n        }\n    }\n    return max_product\n}\n",
    "    var max int\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1[i]); j++ {\n            if list1[i][j].(int) > max {\n                max = list1[i][j].(int)\n            }\n        }\n    }\n    return max\n}\n",
    "    var max int\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1[i]); j++ {\n            for k := 0; k < len(list1); k++ {\n                for l := 0; l < len(list1[k]); l++ {\n                    if i != k && j != l {\n                        if max < list1[i][j].(int) * list1[k][l].(int) {\n                            max = list1[i][j].(int) * list1[k][l].(int)\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    max_product := 0\n    for i, tuple1 := range list1 {\n        for j, tuple2 := range list1 {\n            if i != j {\n                product := 1\n                for _, number1 := range tuple1 {\n                    for _, number2 := range tuple2 {\n                        product *= number1.(int) * number2.(int)\n                    }\n                }\n                if product > max_product {\n                    max_product = product\n                }\n            }\n        }\n    }\n    return max_product\n}\n",
    "    var max int\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1[i]); j++ {\n            for k := 0; k < len(list1); k++ {\n                for l := 0; l < len(list1[k]); l++ {\n                    if i != k && j != l {\n                        if max < list1[i][j].(int) * list1[k][l].(int) {\n                            max = list1[i][j].(int) * list1[k][l].(int)\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    var max int\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            product := 1\n            for i := 0; i < len(tuple1); i++ {\n                product *= tuple1[i].(int) * tuple2[i].(int)\n            }\n            if product > max {\n                max = product\n            }\n        }\n    }\n    return max\n}\n",
    "    var max int = 0\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1[i]); j++ {\n            for k := 0; k < len(list1); k++ {\n                for l := 0; l < len(list1[k]); l++ {\n                    if list1[i][j].(int) * list1[k][l].(int) > max {\n                        max = list1[i][j].(int) * list1[k][l].(int)\n                    }\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    var max int = 0\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1[i]); j++ {\n            for k := 0; k < len(list1); k++ {\n                for l := 0; l < len(list1[k]); l++ {\n                    if i != k && j != l {\n                        if list1[i][j].(int) * list1[k][l].(int) > max {\n                            max = list1[i][j].(int) * list1[k][l].(int)\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    var max_product int\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := 1\n                for _, num1 := range tuple1 {\n                    for _, num2 := range tuple2 {\n                        product *= num1.(int) * num2.(int)\n                    }\n                }\n                if product > max_product {\n                    max_product = product\n                }\n            }\n        }\n    }\n    return max_product\n}\n",
    "    var max int = 0\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := 1\n                for _, number1 := range tuple1 {\n                    for _, number2 := range tuple2 {\n                        product *= number1.(int) * number2.(int)\n                    }\n                }\n                if product > max {\n                    max = product\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    var max int\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := tuple1[0].(int) * tuple2[0].(int)\n                if product > max {\n                    max = product\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    var max int\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1[i]); j++ {\n            for k := 0; k < len(list1); k++ {\n                for l := 0; l < len(list1[k]); l++ {\n                    if list1[i][j].(int) * list1[k][l].(int) > max {\n                        max = list1[i][j].(int) * list1[k][l].(int)\n                    }\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := 1\n                for _, value := range tuple1 {\n                    product *= value.(int)\n                }\n                for _, value := range tuple2 {\n                    product *= value.(int)\n                }\n                if product > max {\n                    max = product\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := 1\n                for _, num1 := range tuple1 {\n                    for _, num2 := range tuple2 {\n                        product *= num1.(int) * num2.(int)\n                    }\n                }\n                if product > max {\n                    max = product\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    var max int\n    for _, tuple := range list1 {\n        product := 1\n        for _, value := range tuple {\n            product *= value.(int)\n        }\n        if product > max {\n            max = product\n        }\n    }\n    return max\n}\n",
    "    var max int\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := 1\n                for _, num1 := range tuple1 {\n                    for _, num2 := range tuple2 {\n                        product *= num1.(int) * num2.(int)\n                    }\n                }\n                if product > max {\n                    max = product\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    var max_product int\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := 1\n                for _, num1 := range tuple1 {\n                    for _, num2 := range tuple2 {\n                        product *= num1.(int) * num2.(int)\n                    }\n                }\n                if product > max_product {\n                    max_product = product\n                }\n            }\n        }\n    }\n    return max_product\n}\n",
    "    max := 0\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1[i]); j++ {\n            for k := 0; k < len(list1); k++ {\n                for l := 0; l < len(list1[k]); l++ {\n                    if i != k && j != l {\n                        if list1[i][j].(int) * list1[k][l].(int) > max {\n                            max = list1[i][j].(int) * list1[k][l].(int)\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    var max int\n    for _, tuple := range list1 {\n        if tuple[0].(int) * tuple[1].(int) > max {\n            max = tuple[0].(int) * tuple[1].(int)\n        }\n    }\n    return max\n}\n",
    "    var max int\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1[i]); j++ {\n            if i == 0 && j == 0 {\n                max = list1[i][j].(int)\n            } else {\n                if list1[i][j].(int) > max {\n                    max = list1[i][j].(int)\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    var max_product int\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1); j++ {\n            if i != j {\n                product := list1[i][0].(int) * list1[j][1].(int)\n                if product > max_product {\n                    max_product = product\n                }\n            }\n        }\n    }\n    return max_product\n}\n",
    "    var max int\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            product := tuple1[0].(int) * tuple2[0].(int)\n            if product > max {\n                max = product\n            }\n        }\n    }\n    return max\n}\n",
    "    var max int\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1[i]); j++ {\n            for k := 0; k < len(list1); k++ {\n                for l := 0; l < len(list1[k]); l++ {\n                    if i != k && j != l {\n                        product := list1[i][j].(int) * list1[k][l].(int)\n                        if product > max {\n                            max = product\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    var max int\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1[i]); j++ {\n            if list1[i][j].(int) > max {\n                max = list1[i][j].(int)\n            }\n        }\n    }\n    return max\n}\n",
    "    var max int\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 == tuple2 {\n                continue\n            }\n            product := 1\n            for _, num := range tuple1 {\n                product *= num.(int)\n            }\n            for _, num := range tuple2 {\n                product *= num.(int)\n            }\n            if product > max {\n                max = product\n            }\n        }\n    }\n    return max\n}\n",
    "    max_product := 0\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := 1\n                for _, value := range tuple1 {\n                    product *= value.(int)\n                }\n                for _, value := range tuple2 {\n                    product *= value.(int)\n                }\n                if product > max_product {\n                    max_product = product\n                }\n            }\n        }\n    }\n    return max_product\n}\n",
    "    var max int\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1); j++ {\n            if i != j {\n                product := list1[i][0].(int) * list1[j][0].(int)\n                if product > max {\n                    max = product\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    var max_product int = 0\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := 1\n                for _, value1 := range tuple1 {\n                    for _, value2 := range tuple2 {\n                        if value1 == value2 {\n                            product *= value1.(int)\n                        }\n                    }\n                }\n                if product > max_product {\n                    max_product = product\n                }\n            }\n        }\n    }\n    return max_product\n}\n",
    "    var max_product int = 0\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1); j++ {\n            if i != j {\n                product := list1[i][0].(int) * list1[j][0].(int)\n                if product > max_product {\n                    max_product = product\n                }\n            }\n        }\n    }\n    return max_product\n}\n",
    "    var max_product int = 0\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := 1\n                for _, num1 := range tuple1 {\n                    for _, num2 := range tuple2 {\n                        product *= num1.(int) * num2.(int)\n                    }\n                }\n                if product > max_product {\n                    max_product = product\n                }\n            }\n        }\n    }\n    return max_product\n}\n",
    "    var max int\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := 1\n                for _, num := range tuple1 {\n                    product *= num.(int)\n                }\n                for _, num := range tuple2 {\n                    product *= num.(int)\n                }\n                if product > max {\n                    max = product\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    var max int\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := 1\n                for _, number := range tuple1 {\n                    product *= number.(int)\n                }\n                for _, number := range tuple2 {\n                    product *= number.(int)\n                }\n                if product > max {\n                    max = product\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    var max_product int\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := 1\n                for _, num1 := range tuple1 {\n                    for _, num2 := range tuple2 {\n                        product *= num1.(int) * num2.(int)\n                    }\n                }\n                if product > max_product {\n                    max_product = product\n                }\n            }\n        }\n    }\n    return max_product\n}\n",
    "    var max_product int = 0\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1[i]); j++ {\n            for k := 0; k < len(list1); k++ {\n                for l := 0; l < len(list1[k]); l++ {\n                    if i != k && j != l {\n                        product := list1[i][j].(int) * list1[k][l].(int)\n                        if product > max_product {\n                            max_product = product\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return max_product\n}\n",
    "    max := 0\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := 1\n                for _, num1 := range tuple1 {\n                    for _, num2 := range tuple2 {\n                        product *= num1.(int) * num2.(int)\n                    }\n                }\n                if product > max {\n                    max = product\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    var max int\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := tuple1[0].(int) * tuple2[0].(int)\n                if product > max {\n                    max = product\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    var max int\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := 1\n                for _, num := range tuple1 {\n                    product *= num.(int)\n                }\n                for _, num := range tuple2 {\n                    product *= num.(int)\n                }\n                if product > max {\n                    max = product\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    var max int\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := tuple1[0].(int) * tuple2[0].(int)\n                if product > max {\n                    max = product\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    var max int\n    for _, v1 := range list1 {\n        for _, v2 := range list1 {\n            if v1 != v2 {\n                product := v1[0].(int) * v2[0].(int)\n                if product > max {\n                    max = product\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    var max_product int = 0\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1[i]); j++ {\n            for k := 0; k < len(list1); k++ {\n                for l := 0; l < len(list1[k]); l++ {\n                    if i != k && j != l {\n                        product := list1[i][j].(int) * list1[k][l].(int)\n                        if product > max_product {\n                            max_product = product\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return max_product\n}\n",
    "    max := 0\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := 1\n                for _, num := range tuple1 {\n                    product *= num.(int)\n                }\n                for _, num := range tuple2 {\n                    product *= num.(int)\n                }\n                if product > max {\n                    max = product\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    var max int = 0\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := 1\n                for _, num1 := range tuple1 {\n                    for _, num2 := range tuple2 {\n                        product *= num1.(int) * num2.(int)\n                    }\n                }\n                if product > max {\n                    max = product\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    max_product := 0\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := 1\n                for _, num1 := range tuple1 {\n                    for _, num2 := range tuple2 {\n                        product *= num1.(int) * num2.(int)\n                    }\n                }\n                if product > max_product {\n                    max_product = product\n                }\n            }\n        }\n    }\n    return max_product\n}\n",
    "    var max_product int\n    for _, tuple := range list1 {\n        product := 1\n        for _, num := range tuple {\n            product *= num.(int)\n        }\n        if product > max_product {\n            max_product = product\n        }\n    }\n    return max_product\n}\n",
    "    var max_product int\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := 1\n                for i := 0; i < len(tuple1); i++ {\n                    product *= tuple1[i].(int) * tuple2[i].(int)\n                }\n                if product > max_product {\n                    max_product = product\n                }\n            }\n        }\n    }\n    return max_product\n}\n",
    "    max := 0\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := 1\n                for _, num := range tuple1 {\n                    product *= num.(int)\n                }\n                for _, num := range tuple2 {\n                    product *= num.(int)\n                }\n                if product > max {\n                    max = product\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    var max int\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1[i]); j++ {\n            for k := 0; k < len(list1); k++ {\n                for l := 0; l < len(list1[k]); l++ {\n                    if list1[i][j].(int) * list1[k][l].(int) > max {\n                        max = list1[i][j].(int) * list1[k][l].(int)\n                    }\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := 1\n                for _, num1 := range tuple1 {\n                    for _, num2 := range tuple2 {\n                        product *= num1.(int) * num2.(int)\n                    }\n                }\n                if product > max {\n                    max = product\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := 1\n                for _, num := range tuple1 {\n                    product *= num.(int)\n                }\n                for _, num := range tuple2 {\n                    product *= num.(int)\n                }\n                if product > max {\n                    max = product\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := 1\n                for _, num := range tuple1 {\n                    product *= num.(int)\n                }\n                for _, num := range tuple2 {\n                    product *= num.(int)\n                }\n                if product > max {\n                    max = product\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    var max_product int = 0\n    var product int = 0\n    var list1_len int = len(list1)\n    var list2_len int = len(list1[0])\n    for i := 0; i < list1_len; i++ {\n        for j := 0; j < list2_len; j++ {\n            if i == 0 && j == 0 {\n                max_product = list1[i][j].(int)\n            } else {\n                product = list1[i][j].(int)\n                if product > max_product {\n                    max_product = product\n                }\n            }\n        }\n    }\n    return max_product\n}\n",
    "    var max int\n    for _, tuple := range list1 {\n        var product int\n        for _, value := range tuple {\n            if value.(int) < 0 {\n                product = product * -1\n            }\n            product = product * value.(int)\n        }\n        if product > max {\n            max = product\n        }\n    }\n    return max\n}\n",
    "    var max_product int = 0\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1[i]); j++ {\n            for k := 0; k < len(list1); k++ {\n                for l := 0; l < len(list1[k]); l++ {\n                    if (i != k || j != l) {\n                        if (list1[i][j].(int) * list1[k][l].(int) > max_product) {\n                            max_product = list1[i][j].(int) * list1[k][l].(int)\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return max_product\n}\n",
    "    var max_product int = 0\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := 1\n                for _, num1 := range tuple1 {\n                    for _, num2 := range tuple2 {\n                        product *= num1.(int) * num2.(int)\n                    }\n                }\n                if product > max_product {\n                    max_product = product\n                }\n            }\n        }\n    }\n    return max_product\n}\n",
    "    var max int\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := 1\n                for _, num := range tuple1 {\n                    product *= num.(int)\n                }\n                for _, num := range tuple2 {\n                    product *= num.(int)\n                }\n                if product > max {\n                    max = product\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := 1\n                for i := 0; i < len(tuple1); i++ {\n                    product *= tuple1[i].(int) * tuple2[i].(int)\n                }\n                if product > max {\n                    max = product\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    var max_product int = 0\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1[i]); j++ {\n            for k := 0; k < len(list1); k++ {\n                for l := 0; l < len(list1[k]); l++ {\n                    if i != k && j != l {\n                        var product int = list1[i][j].(int) * list1[k][l].(int)\n                        if product > max_product {\n                            max_product = product\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return max_product\n}\n",
    "    var max_product int = 0\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := 1\n                for _, num1 := range tuple1 {\n                    for _, num2 := range tuple2 {\n                        product *= num1.(int) * num2.(int)\n                    }\n                }\n                if product > max_product {\n                    max_product = product\n                }\n            }\n        }\n    }\n    return max_product\n}\n",
    "    var max int\n    for _, tuple := range list1 {\n        if tuple[0].(int) * tuple[1].(int) > max {\n            max = tuple[0].(int) * tuple[1].(int)\n        }\n    }\n    return max\n}\n",
    "    var max int\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := 1\n                for _, number1 := range tuple1 {\n                    for _, number2 := range tuple2 {\n                        product *= number1.(int) * number2.(int)\n                    }\n                }\n                if product > max {\n                    max = product\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := 1\n                for _, num := range tuple1 {\n                    product *= num.(int)\n                }\n                for _, num := range tuple2 {\n                    product *= num.(int)\n                }\n                if product > max {\n                    max = product\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    var max int\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := tuple1[0].(int) * tuple2[0].(int)\n                if product > max {\n                    max = product\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    var max int\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := tuple1[0].(int) * tuple2[0].(int)\n                if product > max {\n                    max = product\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := 1\n                for _, value := range tuple1 {\n                    product *= value.(int)\n                }\n                for _, value := range tuple2 {\n                    product *= value.(int)\n                }\n                if product > max {\n                    max = product\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    var max int\n    for _, tuple := range list1 {\n        for _, num := range tuple {\n            if num.(int) > max {\n                max = num.(int)\n            }\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1[i]); j++ {\n            for k := 0; k < len(list1); k++ {\n                for l := 0; l < len(list1[k]); l++ {\n                    if i != k && j != l {\n                        product := list1[i][j].(int) * list1[k][l].(int)\n                        if product > max {\n                            max = product\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    var max int\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := 1\n                for _, value := range tuple1 {\n                    product *= value.(int)\n                }\n                for _, value := range tuple2 {\n                    product *= value.(int)\n                }\n                if product > max {\n                    max = product\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := 1\n                for _, num1 := range tuple1 {\n                    for _, num2 := range tuple2 {\n                        product *= num1.(int) * num2.(int)\n                    }\n                }\n                if product > max {\n                    max = product\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    var max int\n    for _, tuple := range list1 {\n        if len(tuple) != 2 {\n            return 0\n        }\n        product := tuple[0].(int) * tuple[1].(int)\n        if product > max {\n            max = product\n        }\n    }\n    return max\n}\n",
    "    var max int\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := 1\n                for _, value := range tuple1 {\n                    product *= value.(int)\n                }\n                for _, value := range tuple2 {\n                    product *= value.(int)\n                }\n                if product > max {\n                    max = product\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := 1\n                for _, value1 := range tuple1 {\n                    for _, value2 := range tuple2 {\n                        if value1 != value2 {\n                            product *= value1.(int) * value2.(int)\n                        }\n                    }\n                }\n                if product > max {\n                    max = product\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    var max int\n    for _, tuple := range list1 {\n        product := 1\n        for _, value := range tuple {\n            product *= value.(int)\n        }\n        if product > max {\n            max = product\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, tuple := range list1 {\n        if len(tuple) != 2 {\n            panic(\"invalid tuple\")\n        }\n        product := tuple[0].(int) * tuple[1].(int)\n        if product > max {\n            max = product\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 == tuple2 {\n                continue\n            }\n            product := 1\n            for i := 0; i < len(tuple1); i++ {\n                product *= tuple1[i].(int) * tuple2[i].(int)\n            }\n            if product > max {\n                max = product\n            }\n        }\n    }\n    return max\n}\n",
    "    var max int\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1[i]); j++ {\n            for k := 0; k < len(list1); k++ {\n                for l := 0; l < len(list1[k]); l++ {\n                    if i != k && j != l {\n                        if list1[i][j].(int) * list1[k][l].(int) > max {\n                            max = list1[i][j].(int) * list1[k][l].(int)\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    var max_product int\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := tuple1[0].(int) * tuple2[0].(int)\n                if product > max_product {\n                    max_product = product\n                }\n            }\n        }\n    }\n    return max_product\n}\n",
    "    var max int\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := 1\n                for _, num := range tuple1 {\n                    product *= num.(int)\n                }\n                for _, num := range tuple2 {\n                    product *= num.(int)\n                }\n                if product > max {\n                    max = product\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := 1\n                for _, num1 := range tuple1 {\n                    for _, num2 := range tuple2 {\n                        product *= num1.(int) * num2.(int)\n                    }\n                }\n                if product > max {\n                    max = product\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    var max int\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1[i]); j++ {\n            for k := 0; k < len(list1); k++ {\n                for l := 0; l < len(list1[k]); l++ {\n                    if i != k && j != l {\n                        if max < list1[i][j].(int) * list1[k][l].(int) {\n                            max = list1[i][j].(int) * list1[k][l].(int)\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    var max_product int = 0\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := 1\n                for _, num1 := range tuple1 {\n                    for _, num2 := range tuple2 {\n                        product *= num1.(int) * num2.(int)\n                    }\n                }\n                if product > max_product {\n                    max_product = product\n                }\n            }\n        }\n    }\n    return max_product\n}\n",
    "    var max int\n    for _, tuple := range list1 {\n        product := tuple[0].(int) * tuple[1].(int)\n        if product > max {\n            max = product\n        }\n    }\n    return max\n}\n",
    "    var max_product int\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1[i]); j++ {\n            for k := 0; k < len(list1); k++ {\n                for l := 0; l < len(list1[k]); l++ {\n                    if i != k && j != l {\n                        product := list1[i][j].(int) * list1[k][l].(int)\n                        if product > max_product {\n                            max_product = product\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return max_product\n}\n",
    "    var max int\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1[i]); j++ {\n            if list1[i][j] == nil {\n                continue\n            }\n            for k := 0; k < len(list1); k++ {\n                for l := 0; l < len(list1[k]); l++ {\n                    if list1[k][l] == nil {\n                        continue\n                    }\n                    if i == k && j == l {\n                        continue\n                    }\n                    if list1[i][j].(int) * list1[k][l].(int) > max {\n                        max = list1[i][j].(int) * list1[k][l].(int)\n                    }\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    var max_product int\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := 1\n                for _, num := range tuple1 {\n                    product *= num.(int)\n                }\n                for _, num := range tuple2 {\n                    product *= num.(int)\n                }\n                if product > max_product {\n                    max_product = product\n                }\n            }\n        }\n    }\n    return max_product\n}\n",
    "    var max_product int\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            product := tuple1[0].(int) * tuple2[0].(int)\n            if product > max_product {\n                max_product = product\n            }\n        }\n    }\n    return max_product\n}\n",
    "    var max int\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := 1\n                for _, val := range tuple1 {\n                    product *= val.(int)\n                }\n                for _, val := range tuple2 {\n                    product *= val.(int)\n                }\n                if product > max {\n                    max = product\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    var max_product int = 0\n    for _, tuple := range list1 {\n        var product int = 1\n        for _, num := range tuple {\n            product *= num.(int)\n        }\n        if product > max_product {\n            max_product = product\n        }\n    }\n    return max_product\n}\n",
    "    var max_product int\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            product := tuple1[0].(int) * tuple2[1].(int)\n            if product > max_product {\n                max_product = product\n            }\n        }\n    }\n    return max_product\n}\n",
    "    max := 0\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := tuple1[0].(int) * tuple2[0].(int)\n                if product > max {\n                    max = product\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := 1\n                for _, num := range tuple1 {\n                    product *= num.(int)\n                }\n                for _, num := range tuple2 {\n                    product *= num.(int)\n                }\n                if product > max {\n                    max = product\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := 1\n                for _, num := range tuple1 {\n                    product *= num.(int)\n                }\n                for _, num := range tuple2 {\n                    product *= num.(int)\n                }\n                if product > max {\n                    max = product\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    var max_product int = 0\n    for _, tuple := range list1 {\n        var product int = 1\n        for _, element := range tuple {\n            product *= element.(int)\n        }\n        if product > max_product {\n            max_product = product\n        }\n    }\n    return max_product\n}\n",
    "    var max int\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := tuple1[0].(int) * tuple2[0].(int)\n                if product > max {\n                    max = product\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    var max_product int\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := 1\n                for _, num1 := range tuple1 {\n                    for _, num2 := range tuple2 {\n                        product *= num1.(int) * num2.(int)\n                    }\n                }\n                if product > max_product {\n                    max_product = product\n                }\n            }\n        }\n    }\n    return max_product\n}\n",
    "    var max int\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := 1\n                for _, num1 := range tuple1 {\n                    for _, num2 := range tuple2 {\n                        product *= num1.(int) * num2.(int)\n                    }\n                }\n                if product > max {\n                    max = product\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1[i]); j++ {\n            for k := 0; k < len(list1); k++ {\n                for l := 0; l < len(list1[k]); l++ {\n                    if i != k && j != l {\n                        product := list1[i][j].(int) * list1[k][l].(int)\n                        if product > max {\n                            max = product\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    var max_product int\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1[i]); j++ {\n            for k := 0; k < len(list1); k++ {\n                for l := 0; l < len(list1[k]); l++ {\n                    if list1[i][j] != list1[k][l] {\n                        product := list1[i][j].(int) * list1[k][l].(int)\n                        if product > max_product {\n                            max_product = product\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return max_product\n}\n",
    "    var max_product int = 0\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1[i]); j++ {\n            for k := 0; k < len(list1); k++ {\n                for l := 0; l < len(list1[k]); l++ {\n                    if i != k && j != l {\n                        product := list1[i][j].(int) * list1[k][l].(int)\n                        if product > max_product {\n                            max_product = product\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return max_product\n}\n",
    "    var max_product int = 0\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            product := 1\n            for i := 0; i < len(tuple1); i++ {\n                product *= tuple1[i].(int) * tuple2[i].(int)\n            }\n            if product > max_product {\n                max_product = product\n            }\n        }\n    }\n    return max_product\n}\n",
    "    var max_product int = 0\n    for _, tuple := range list1 {\n        var product int = 1\n        for _, value := range tuple {\n            product *= value.(int)\n        }\n        if product > max_product {\n            max_product = product\n        }\n    }\n    return max_product\n}\n",
    "    var max_product int = 0\n    for _, tuple := range list1 {\n        var product int = 1\n        for _, value := range tuple {\n            product *= value.(int)\n        }\n        if product > max_product {\n            max_product = product\n        }\n    }\n    return max_product\n}\n",
    "    max := 0\n    for _, t1 := range list1 {\n        for _, t2 := range list1 {\n            if t1 != t2 {\n                product := 1\n                for _, v := range t1 {\n                    product *= v.(int)\n                }\n                for _, v := range t2 {\n                    product *= v.(int)\n                }\n                if product > max {\n                    max = product\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    var max_product int\n    for _, tuple := range list1 {\n        product := 1\n        for _, number := range tuple {\n            product *= number.(int)\n        }\n        if product > max_product {\n            max_product = product\n        }\n    }\n    return max_product\n}\n",
    "    max := 0\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := 1\n                for _, num := range tuple1 {\n                    product *= num.(int)\n                }\n                for _, num := range tuple2 {\n                    product *= num.(int)\n                }\n                if product > max {\n                    max = product\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    var max_product int = 0\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1[i]); j++ {\n            for k := 0; k < len(list1); k++ {\n                for l := 0; l < len(list1[k]); l++ {\n                    if i != k && j != l {\n                        product := list1[i][j].(int) * list1[k][l].(int)\n                        if product > max_product {\n                            max_product = product\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return max_product\n}\n",
    "    var max_product int\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1[i]); j++ {\n            for k := 0; k < len(list1); k++ {\n                for l := 0; l < len(list1[k]); l++ {\n                    if i != k && j != l {\n                        product := list1[i][j].(int) * list1[k][l].(int)\n                        if product > max_product {\n                            max_product = product\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return max_product\n}\n",
    "    max := 0\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1[i]); j++ {\n            for k := 0; k < len(list1); k++ {\n                for l := 0; l < len(list1[k]); l++ {\n                    if i != k && j != l {\n                        product := list1[i][j].(int) * list1[k][l].(int)\n                        if product > max {\n                            max = product\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    var max int\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := 1\n                for _, num := range tuple1 {\n                    product *= num.(int)\n                }\n                for _, num := range tuple2 {\n                    product *= num.(int)\n                }\n                if product > max {\n                    max = product\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            product := 1\n            for i := 0; i < len(tuple1); i++ {\n                product *= tuple1[i].(int) * tuple2[i].(int)\n            }\n            if product > max {\n                max = product\n            }\n        }\n    }\n    return max\n}\n",
    "    var max int = 0\n    for _, t1 := range list1 {\n        for _, t2 := range list1 {\n            if t1 != t2 {\n                product := 1\n                for _, v := range t1 {\n                    product *= v.(int)\n                }\n                for _, v := range t2 {\n                    product *= v.(int)\n                }\n                if product > max {\n                    max = product\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    var max int\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := tuple1[0].(int) * tuple2[0].(int)\n                if product > max {\n                    max = product\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    var max int\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := 1\n                for _, number1 := range tuple1 {\n                    for _, number2 := range tuple2 {\n                        product *= number1.(int) * number2.(int)\n                    }\n                }\n                if product > max {\n                    max = product\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    var max_product int = 0\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := 1\n                for _, num1 := range tuple1 {\n                    for _, num2 := range tuple2 {\n                        product *= num1.(int) * num2.(int)\n                    }\n                }\n                if product > max_product {\n                    max_product = product\n                }\n            }\n        }\n    }\n    return max_product\n}\n",
    "    var max_product int = 0\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1[i]); j++ {\n            for k := 0; k < len(list1); k++ {\n                for l := 0; l < len(list1[k]); l++ {\n                    if i != k && j != l {\n                        var product int = list1[i][j].(int) * list1[k][l].(int)\n                        if product > max_product {\n                            max_product = product\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return max_product\n}\n",
    "    max := 0\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := 1\n                for _, num1 := range tuple1 {\n                    for _, num2 := range tuple2 {\n                        product *= num1.(int) * num2.(int)\n                    }\n                }\n                if product > max {\n                    max = product\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    var max int\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := 1\n                for _, num := range tuple1 {\n                    product *= num.(int)\n                }\n                for _, num := range tuple2 {\n                    product *= num.(int)\n                }\n                if product > max {\n                    max = product\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    var max_product int = 0\n    for _, tuple := range list1 {\n        if tuple[0].(int) * tuple[1].(int) > max_product {\n            max_product = tuple[0].(int) * tuple[1].(int)\n        }\n    }\n    return max_product\n}\n",
    "    var max int\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := tuple1[0].(int) * tuple2[0].(int)\n                if product > max {\n                    max = product\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    var max_product int = 0\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := 1\n                for _, num1 := range tuple1 {\n                    for _, num2 := range tuple2 {\n                        product *= num1.(int) * num2.(int)\n                    }\n                }\n                if product > max_product {\n                    max_product = product\n                }\n            }\n        }\n    }\n    return max_product\n}\n",
    "    var max int\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := 1\n                for _, value := range tuple1 {\n                    product *= value.(int)\n                }\n                for _, value := range tuple2 {\n                    product *= value.(int)\n                }\n                if product > max {\n                    max = product\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    var max_product int = 0\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1[i]); j++ {\n            for k := 0; k < len(list1); k++ {\n                for l := 0; l < len(list1[k]); l++ {\n                    if i != k && j != l {\n                        product := list1[i][j].(int) * list1[k][l].(int)\n                        if product > max_product {\n                            max_product = product\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return max_product\n}\n",
    "    var max int\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := tuple1[0].(int) * tuple2[0].(int)\n                if product > max {\n                    max = product\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    var max_product int\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            product := 1\n            for i := 0; i < len(tuple1); i++ {\n                product *= tuple1[i].(int) * tuple2[i].(int)\n            }\n            if product > max_product {\n                max_product = product\n            }\n        }\n    }\n    return max_product\n}\n",
    "    max := 0\n    for _, tuple := range list1 {\n        product := 1\n        for _, item := range tuple {\n            product *= item.(int)\n        }\n        if product > max {\n            max = product\n        }\n    }\n    return max\n}\n",
    "    var max_product int = 0\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := 1\n                for _, num := range tuple1 {\n                    product *= num.(int)\n                }\n                for _, num := range tuple2 {\n                    product *= num.(int)\n                }\n                if product > max_product {\n                    max_product = product\n                }\n            }\n        }\n    }\n    return max_product\n}\n",
    "    var max_product int\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            product := 1\n            for _, value1 := range tuple1 {\n                for _, value2 := range tuple2 {\n                    product *= value1.(int) * value2.(int)\n                }\n            }\n            if product > max_product {\n                max_product = product\n            }\n        }\n    }\n    return max_product\n}\n",
    "    var max_product int = 0\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1[i]); j++ {\n            for k := 0; k < len(list1); k++ {\n                for l := 0; l < len(list1[k]); l++ {\n                    if i != k && j != l {\n                        product := list1[i][j].(int) * list1[k][l].(int)\n                        if product > max_product {\n                            max_product = product\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return max_product\n}\n",
    "    max := 0\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := 1\n                for _, num1 := range tuple1 {\n                    for _, num2 := range tuple2 {\n                        product *= num1.(int) * num2.(int)\n                    }\n                }\n                if product > max {\n                    max = product\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    max_product := 0\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            product := 1\n            for i := 0; i < len(tuple1); i++ {\n                product *= tuple1[i].(int) * tuple2[i].(int)\n            }\n            if product > max_product {\n                max_product = product\n            }\n        }\n    }\n    return max_product\n}\n",
    "    var max int = 0\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1[i]); j++ {\n            for k := 0; k < len(list1); k++ {\n                for l := 0; l < len(list1[k]); l++ {\n                    if i != k && j != l {\n                        var product int = list1[i][j].(int) * list1[k][l].(int)\n                        if product > max {\n                            max = product\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := 1\n                for _, val1 := range tuple1 {\n                    for _, val2 := range tuple2 {\n                        if val1 != val2 {\n                            product *= val1.(int) * val2.(int)\n                        }\n                    }\n                }\n                if product > max {\n                    max = product\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    var max int = 0\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := 1\n                for _, value1 := range tuple1 {\n                    for _, value2 := range tuple2 {\n                        product *= value1.(int) * value2.(int)\n                    }\n                }\n                if product > max {\n                    max = product\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    var max int\n    for _, tuple := range list1 {\n        for _, num := range tuple {\n            if num.(int) > max {\n                max = num.(int)\n            }\n        }\n    }\n    return max\n}\n",
    "    var max int\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            product := tuple1[0].(int) * tuple2[1].(int)\n            if product > max {\n                max = product\n            }\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            product := 1\n            for i := 0; i < len(tuple1); i++ {\n                product *= int(tuple1[i].(int) - tuple2[i].(int))\n            }\n            if product > max {\n                max = product\n            }\n        }\n    }\n    return max\n}\n",
    "    var max int\n    for _, tuple := range list1 {\n        if tuple[0].(int) * tuple[1].(int) > max {\n            max = tuple[0].(int) * tuple[1].(int)\n        }\n    }\n    return max\n}\n",
    "    var max int\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := tuple1[0].(int) * tuple2[0].(int)\n                if product > max {\n                    max = product\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    var max_product int = 0\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1[i]); j++ {\n            for k := 0; k < len(list1); k++ {\n                for l := 0; l < len(list1[k]); l++ {\n                    if i != k && j != l {\n                        var product int = list1[i][j].(int) * list1[k][l].(int)\n                        if product > max_product {\n                            max_product = product\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return max_product\n}\n",
    "    max := 0\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := 1\n                for _, num := range tuple1 {\n                    product *= num.(int)\n                }\n                for _, num := range tuple2 {\n                    product *= num.(int)\n                }\n                if product > max {\n                    max = product\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    var max_product int = 0\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            product := tuple1[0].(int) * tuple2[0].(int)\n            if product > max_product {\n                max_product = product\n            }\n        }\n    }\n    return max_product\n}\n",
    "    max := 0\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := 1\n                for _, num1 := range tuple1 {\n                    for _, num2 := range tuple2 {\n                        product *= num1.(int) * num2.(int)\n                    }\n                }\n                if product > max {\n                    max = product\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    var max_product int\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            product := tuple1[0].(int) * tuple2[0].(int)\n            if product > max_product {\n                max_product = product\n            }\n        }\n    }\n    return max_product\n}\n",
    "    max := 0\n    for _, tuple := range list1 {\n        if len(tuple) != 2 {\n            continue\n        }\n        product := 1\n        for _, value := range tuple {\n            if value.(int) < 0 {\n                product *= -value.(int)\n            } else {\n                product *= value.(int)\n            }\n        }\n        if product > max {\n            max = product\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1[i]); j++ {\n            for k := 0; k < len(list1); k++ {\n                for l := 0; l < len(list1[k]); l++ {\n                    if i != k && j != l {\n                        if list1[i][j].(int) * list1[k][l].(int) > max {\n                            max = list1[i][j].(int) * list1[k][l].(int)\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    var max int\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            product := tuple1[0].(int) * tuple2[1].(int)\n            if product > max {\n                max = product\n            }\n        }\n    }\n    return max\n}\n",
    "    var max int\n    for _, tuple := range list1 {\n        if tuple[0].(int) * tuple[1].(int) > max {\n            max = tuple[0].(int) * tuple[1].(int)\n        }\n    }\n    return max\n}\n",
    "    var max int\n    for _, tuple := range list1 {\n        product := 1\n        for _, num := range tuple {\n            product *= num.(int)\n        }\n        if product > max {\n            max = product\n        }\n    }\n    return max\n}\n",
    "    var max int\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1[i]); j++ {\n            if list1[i][j].(int) > max {\n                max = list1[i][j].(int)\n            }\n        }\n    }\n    return max\n}\n",
    "    var max_product int\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1[i]); j++ {\n            for k := 0; k < len(list1); k++ {\n                for l := 0; l < len(list1[k]); l++ {\n                    if i != k && j != l {\n                        product := list1[i][j].(int) * list1[k][l].(int)\n                        if product > max_product {\n                            max_product = product\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return max_product\n}\n",
    "    var max_product int = 0\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := 1\n                for _, value1 := range tuple1 {\n                    for _, value2 := range tuple2 {\n                        if value1 != value2 {\n                            product *= value1.(int) * value2.(int)\n                        }\n                    }\n                }\n                if product > max_product {\n                    max_product = product\n                }\n            }\n        }\n    }\n    return max_product\n}\n",
    "    max := 0\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := 1\n                for _, value := range tuple1 {\n                    product *= value.(int)\n                }\n                for _, value := range tuple2 {\n                    product *= value.(int)\n                }\n                if product > max {\n                    max = product\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    var max_product int\n    for _, tuple := range list1 {\n        if len(tuple) == 2 {\n            product := tuple[0].(int) * tuple[1].(int)\n            if product > max_product {\n                max_product = product\n            }\n        }\n    }\n    return max_product\n}\n",
    "    var max_product int = 0\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1[i]); j++ {\n            for k := 0; k < len(list1); k++ {\n                for l := 0; l < len(list1[k]); l++ {\n                    if i != k && j != l {\n                        product := list1[i][j].(int) * list1[k][l].(int)\n                        if product > max_product {\n                            max_product = product\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return max_product\n}\n",
    "    var max int\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1[i]); j++ {\n            for k := 0; k < len(list1); k++ {\n                for l := 0; l < len(list1[k]); l++ {\n                    if i != k && j != l {\n                        if list1[i][j].(int) * list1[k][l].(int) > max {\n                            max = list1[i][j].(int) * list1[k][l].(int)\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    var max_product int\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1[i]); j++ {\n            for k := 0; k < len(list1); k++ {\n                for l := 0; l < len(list1[k]); l++ {\n                    if list1[i][j] != list1[k][l] {\n                        product := list1[i][j].(int) * list1[k][l].(int)\n                        if product > max_product {\n                            max_product = product\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return max_product\n}\n",
    "    var max_product int = 0\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1); j++ {\n            if i != j {\n                product := list1[i][0].(int) * list1[j][1].(int)\n                if product > max_product {\n                    max_product = product\n                }\n            }\n        }\n    }\n    return max_product\n}\n",
    "    // Write your code here\n    var max int\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1[i]); j++ {\n            for k := 0; k < len(list1); k++ {\n                for l := 0; l < len(list1[k]); l++ {\n                    if i != k && j != l {\n                        if list1[i][j].(int) * list1[k][l].(int) > max {\n                            max = list1[i][j].(int) * list1[k][l].(int)\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    var max_product int = 0\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1[i]); j++ {\n            for k := 0; k < len(list1); k++ {\n                for l := 0; l < len(list1[k]); l++ {\n                    if i != k && j != l {\n                        product := list1[i][j].(int) * list1[k][l].(int)\n                        if product > max_product {\n                            max_product = product\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return max_product\n}\n",
    "    var max int\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := 1\n                for _, num := range tuple1 {\n                    product *= num.(int)\n                }\n                for _, num := range tuple2 {\n                    product *= num.(int)\n                }\n                if product > max {\n                    max = product\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    var max_product int = 0\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1[i]); j++ {\n            for k := 0; k < len(list1); k++ {\n                for l := 0; l < len(list1[k]); l++ {\n                    if list1[i][j] != list1[k][l] {\n                        if list1[i][j].(int) * list1[k][l].(int) > max_product {\n                            max_product = list1[i][j].(int) * list1[k][l].(int)\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return max_product\n}\n",
    "    var max int = 0\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1[i]); j++ {\n            for k := 0; k < len(list1); k++ {\n                for l := 0; l < len(list1[k]); l++ {\n                    if i != k && j != l {\n                        var product int = list1[i][j].(int) * list1[k][l].(int)\n                        if product > max {\n                            max = product\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    var max_product int = 0\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := 1\n                for _, value := range tuple1 {\n                    product *= value.(int)\n                }\n                for _, value := range tuple2 {\n                    product *= value.(int)\n                }\n                if product > max_product {\n                    max_product = product\n                }\n            }\n        }\n    }\n    return max_product\n}\n",
    "    var max_product int = 0\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1[i]); j++ {\n            for k := 0; k < len(list1); k++ {\n                for l := 0; l < len(list1[k]); l++ {\n                    if i != k && j != l {\n                        product := list1[i][j].(int) * list1[k][l].(int)\n                        if product > max_product {\n                            max_product = product\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return max_product\n}\n",
    "    max := 0\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := 1\n                for _, num := range tuple1 {\n                    product *= num.(int)\n                }\n                for _, num := range tuple2 {\n                    product *= num.(int)\n                }\n                if product > max {\n                    max = product\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := 1\n                for _, num1 := range tuple1 {\n                    for _, num2 := range tuple2 {\n                        product *= num1.(int) * num2.(int)\n                    }\n                }\n                if product > max {\n                    max = product\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    var max_product int = 0\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            product := 1\n            for i := 0; i < len(tuple1); i++ {\n                product *= tuple1[i].(int) * tuple2[i].(int)\n            }\n            if product > max_product {\n                max_product = product\n            }\n        }\n    }\n    return max_product\n}\n",
    "    var max_product int = 0\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := 1\n                for _, value1 := range tuple1 {\n                    for _, value2 := range tuple2 {\n                        product *= value1.(int) * value2.(int)\n                    }\n                }\n                if product > max_product {\n                    max_product = product\n                }\n            }\n        }\n    }\n    return max_product\n}\n",
    "    max := 0\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := 1\n                for _, n := range tuple1 {\n                    product *= n.(int)\n                }\n                for _, n := range tuple2 {\n                    product *= n.(int)\n                }\n                if product > max {\n                    max = product\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1[i]); j++ {\n            for k := 0; k < len(list1); k++ {\n                for l := 0; l < len(list1[k]); l++ {\n                    if i != k && j != l {\n                        product := list1[i][j].(int) * list1[k][l].(int)\n                        if product > max {\n                            max = product\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    max_product := 0\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1); j++ {\n            if i != j {\n                product := 1\n                for k := 0; k < len(list1[i]); k++ {\n                    product *= list1[i][k].(int)\n                }\n                for k := 0; k < len(list1[j]); k++ {\n                    product *= list1[j][k].(int)\n                }\n                if product > max_product {\n                    max_product = product\n                }\n            }\n        }\n    }\n    return max_product\n}\n",
    "    max := 0\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := 1\n                for _, num := range tuple1 {\n                    product *= num.(int)\n                }\n                for _, num := range tuple2 {\n                    product *= num.(int)\n                }\n                if product > max {\n                    max = product\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    max_product := 0\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1[i]); j++ {\n            for k := 0; k < len(list1); k++ {\n                for l := 0; l < len(list1[k]); l++ {\n                    if i != k && j != l {\n                        product := list1[i][j].(int) * list1[k][l].(int)\n                        if product > max_product {\n                            max_product = product\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return max_product\n}\n",
    "    max := 0\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := 1\n                for _, value := range tuple1 {\n                    product *= value.(int)\n                }\n                for _, value := range tuple2 {\n                    product *= value.(int)\n                }\n                if product > max {\n                    max = product\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    var max int\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := 1\n                for _, num := range tuple1 {\n                    product *= num.(int)\n                }\n                for _, num := range tuple2 {\n                    product *= num.(int)\n                }\n                if product > max {\n                    max = product\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    var max int\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 == tuple2 {\n                continue\n            }\n            product := 1\n            for _, value := range tuple1 {\n                product *= value.(int)\n            }\n            for _, value := range tuple2 {\n                product *= value.(int)\n            }\n            if product > max {\n                max = product\n            }\n        }\n    }\n    return max\n}\n",
    "    var max_product int\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := 1\n                for _, num1 := range tuple1 {\n                    for _, num2 := range tuple2 {\n                        product *= num1.(int) * num2.(int)\n                    }\n                }\n                if product > max_product {\n                    max_product = product\n                }\n            }\n        }\n    }\n    return max_product\n}\n",
    "    var max_product int = 0\n    for _, tuple := range list1 {\n        var product int = 1\n        for _, num := range tuple {\n            product *= num.(int)\n        }\n        if product > max_product {\n            max_product = product\n        }\n    }\n    return max_product\n}\n",
    "    var max int\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := 1\n                for _, value1 := range tuple1 {\n                    for _, value2 := range tuple2 {\n                        product *= value1.(int) * value2.(int)\n                    }\n                }\n                if product > max {\n                    max = product\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    var max int = 0\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1[i]); j++ {\n            for k := 0; k < len(list1); k++ {\n                for l := 0; l < len(list1[k]); l++ {\n                    if i != k && j != l {\n                        var product int = list1[i][j].(int) * list1[k][l].(int)\n                        if product > max {\n                            max = product\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    var max_product int\n    for _, tuple := range list1 {\n        product := 1\n        for _, num := range tuple {\n            product *= num.(int)\n        }\n        if product > max_product {\n            max_product = product\n        }\n    }\n    return max_product\n}\n",
    "    var max_product int\n    for _, tuple := range list1 {\n        product := 1\n        for _, value := range tuple {\n            product *= value.(int)\n        }\n        if product > max_product {\n            max_product = product\n        }\n    }\n    return max_product\n}\n",
    "    var max int\n    for _, tuple := range list1 {\n        if tuple[0].(int) * tuple[1].(int) > max {\n            max = tuple[0].(int) * tuple[1].(int)\n        }\n    }\n    return max\n}\n",
    "    max_product := 0\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 == tuple2 {\n                continue\n            }\n            product := 1\n            for _, val := range tuple1 {\n                product *= val.(int)\n            }\n            for _, val := range tuple2 {\n                product *= val.(int)\n            }\n            if product > max_product {\n                max_product = product\n            }\n        }\n    }\n    return max_product\n}\n",
    "    var max int\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := tuple1[0].(int) * tuple2[0].(int)\n                if product > max {\n                    max = product\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := 1\n                for _, num := range tuple1 {\n                    product *= num.(int)\n                }\n                for _, num := range tuple2 {\n                    product *= num.(int)\n                }\n                if product > max {\n                    max = product\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    var max int\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1[i]); j++ {\n            for k := 0; k < len(list1); k++ {\n                for l := 0; l < len(list1[k]); l++ {\n                    if i != k && j != l {\n                        if list1[i][j].(int) * list1[k][l].(int) > max {\n                            max = list1[i][j].(int) * list1[k][l].(int)\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    var max int\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := 1\n                for _, num := range tuple1 {\n                    product *= num.(int)\n                }\n                for _, num := range tuple2 {\n                    product *= num.(int)\n                }\n                if product > max {\n                    max = product\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    var max_product int = 0\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1[i]); j++ {\n            for k := 0; k < len(list1); k++ {\n                for l := 0; l < len(list1[k]); l++ {\n                    if i != k && j != l {\n                        product := list1[i][j].(int) * list1[k][l].(int)\n                        if product > max_product {\n                            max_product = product\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return max_product\n}\n",
    "    max := 0\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := 1\n                for _, num1 := range tuple1 {\n                    for _, num2 := range tuple2 {\n                        product *= num1.(int) * num2.(int)\n                    }\n                }\n                if product > max {\n                    max = product\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := 1\n                for _, num := range tuple1 {\n                    product *= num.(int)\n                }\n                for _, num := range tuple2 {\n                    product *= num.(int)\n                }\n                if product > max {\n                    max = product\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    var max int\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := tuple1[0].(int) * tuple2[0].(int)\n                if product > max {\n                    max = product\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := 1\n                for _, num := range tuple1 {\n                    product *= num.(int)\n                }\n                for _, num := range tuple2 {\n                    product *= num.(int)\n                }\n                if product > max {\n                    max = product\n                }\n            }\n        }\n    }\n    return max\n}\n"
  ]
}
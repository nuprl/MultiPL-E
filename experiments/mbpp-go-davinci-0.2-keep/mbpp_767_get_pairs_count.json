{
  "name": "mbpp_767_get_pairs_count",
  "language": "go_test.go",
  "prompt": "package get_pairs_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunc get_pairs_count(arr []int, sum int) int {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_767_get_pairs_count.py",
  "prompt_terminology": "verbatim",
  "tests": "func TestGet_Pairs_Count(t *testing.T) {\n  candidate := get_pairs_count\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 1, 1, 1}, 2), expected: 6 },\n     { actual: candidate([]int{1, 5, 7, -1, 5}, 6), expected: 3 },\n     { actual: candidate([]int{1, -2, 3}, 1), expected: 1 },\n     { actual: candidate([]int{-1, -2, 3}, -3), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
  "stop_tokens": [
    "\nfunc",
    "struct",
    "\n// "
  ],
  "completions": [
    "    var count int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs++\n            }\n        }\n    }\n    return pairs\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs++\n            }\n        }\n    }\n    return pairs\n}\n",
    "    var count int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i+1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs++\n            }\n        }\n    }\n    return pairs\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs++\n            }\n        }\n    }\n    return pairs\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs++\n            }\n        }\n    }\n    return pairs\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs++\n            }\n        }\n    }\n    return pairs\n}\n",
    "    var pairs_count int = 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs_count++\n            }\n        }\n    }\n    return pairs_count\n}\n",
    "    // Initialize result\n    count := 0\n\n    // Consider all possible pairs and check their sums\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs++\n            }\n        }\n    }\n    return pairs\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs++\n            }\n        }\n    }\n    return pairs\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs++\n            }\n        }\n    }\n    return pairs\n}\n",
    "    var count int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs += 1\n            }\n        }\n    }\n    return pairs\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs++\n            }\n        }\n    }\n    return pairs\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs++\n            }\n        }\n    }\n    return pairs\n}\n",
    "    var count int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    // Initialize result\n    count := 0\n\n    // Consider all possible pairs and check their sums\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n\n    return count\n}\n",
    "    var count int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    pairs := make(map[int]int)\n    count := 0\n    for _, v := range arr {\n        if _, ok := pairs[v]; ok {\n            count++\n        } else {\n            pairs[sum - v] = v\n        }\n    }\n    return count\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs++\n            }\n        }\n    }\n    return pairs\n}\n",
    "    var count int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs += 1\n            }\n        }\n    }\n    return pairs\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs += 1\n            }\n        }\n    }\n    return pairs\n}\n",
    "    var count int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count += 1\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs++\n            }\n        }\n    }\n    return pairs\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs++\n            }\n        }\n    }\n    return pairs\n}\n",
    "    var count int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs++\n            }\n        }\n    }\n    return pairs\n}\n",
    "    var count int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs++\n            }\n        }\n    }\n    return pairs\n}\n",
    "    var count int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs++\n            }\n        }\n    }\n    return pairs\n}\n",
    "    var count int = 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs++\n            }\n        }\n    }\n    return pairs\n}\n",
    "    // Initialize result\n    count := 0\n\n    // Consider all possible pairs and check their sums\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n\n    return count\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs++\n            }\n        }\n    }\n    return pairs\n}\n",
    "    var count int\n    for i := 0; i < len(arr); i++ {\n        for j := i+1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    m := make(map[int]int)\n    for _, v := range arr {\n        m[v]++\n    }\n    count := 0\n    for _, v := range arr {\n        if m[sum - v] > 0 {\n            count++\n            m[sum - v]--\n        }\n    }\n    return count\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs++\n            }\n        }\n    }\n    return pairs\n}\n",
    "    var pairs int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs++\n            }\n        }\n    }\n    return pairs\n}\n",
    "    count := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i+1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    m := make(map[int]int)\n    for _, v := range arr {\n        m[v]++\n    }\n\n    count := 0\n    for _, v := range arr {\n        if m[sum-v] > 0 {\n            count++\n        }\n    }\n\n    return count\n}\n",
    "    // Create a hash map to store the counts of all elements in the list\n    m := make(map[int]int)\n    for _, v := range arr {\n        m[v]++\n    }\n    // Initialize result\n    res := 0\n    // Traverse through all elements and increment the count (Notice that every pair is counted twice)\n    for _, v := range arr {\n        res += m[sum-v]\n        // if (arr[i], arr[i]) pair satisfies the condition, then we need to ensure that the count is decreased by one such that the (arr[i], arr[i]) pair is not considered\n        if (sum-v) == v {\n            res--\n        }\n    }\n    // return the half of the total count\n    return res/2\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs++\n            }\n        }\n    }\n    return pairs\n}\n",
    "    var count int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs++\n            }\n        }\n    }\n    return pairs\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs++\n            }\n        }\n    }\n    return pairs\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs++\n            }\n        }\n    }\n    return pairs\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs++\n            }\n        }\n    }\n    return pairs\n}\n",
    "    pairs_count := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs_count++\n            }\n        }\n    }\n    return pairs_count\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs++\n            }\n        }\n    }\n    return pairs\n}\n",
    "    var count int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs++\n            }\n        }\n    }\n    return pairs\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i+1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs++\n            }\n        }\n    }\n    return pairs\n}\n",
    "    pairs := make(map[int]int)\n    count := 0\n    for _, v := range arr {\n        if _, ok := pairs[v]; ok {\n            count += 1\n        }\n        pairs[sum - v] = v\n    }\n    return count\n}\n",
    "    count := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int\n    var hash_map = make(map[int]int)\n    for _, v := range arr {\n        hash_map[v] = 1\n    }\n    for _, v := range arr {\n        if _, ok := hash_map[sum - v]; ok {\n            count++\n        }\n    }\n    return count\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs++\n            }\n        }\n    }\n    return pairs\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs++\n            }\n        }\n    }\n    return pairs\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs++\n            }\n        }\n    }\n    return pairs\n}\n",
    "    var count int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs++\n            }\n        }\n    }\n    return pairs\n}\n",
    "    var count int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs++\n            }\n        }\n    }\n    return pairs\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs++\n            }\n        }\n    }\n    return pairs\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs++\n            }\n        }\n    }\n    return pairs\n}\n",
    "    var count int = 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var pairs_count int = 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs_count++\n            }\n        }\n    }\n    return pairs_count\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs++\n            }\n        }\n    }\n    return pairs\n}\n",
    "    var count int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs++\n            }\n        }\n    }\n    return pairs\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs++\n            }\n        }\n    }\n    return pairs\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs++\n            }\n        }\n    }\n    return pairs\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs++\n            }\n        }\n    }\n    return pairs\n}\n",
    "    var count int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs++\n            }\n        }\n    }\n    return pairs\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs++\n            }\n        }\n    }\n    return pairs\n}\n",
    "    var count int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    m := make(map[int]int)\n    for _, v := range arr {\n        m[v] += 1\n    }\n    count := 0\n    for _, v := range arr {\n        if m[sum - v] > 0 {\n            count += 1\n        }\n    }\n    return count\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs++\n            }\n        }\n    }\n    return pairs\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs++\n            }\n        }\n    }\n    return pairs\n}\n",
    "    var pairs int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs++\n            }\n        }\n    }\n    return pairs\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs++\n            }\n        }\n    }\n    return pairs\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs++\n            }\n        }\n    }\n    return pairs\n}\n",
    "    var count int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs++\n            }\n        }\n    }\n    return pairs\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs++\n            }\n        }\n    }\n    return pairs\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs++\n            }\n        }\n    }\n    return pairs\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs++\n            }\n        }\n    }\n    return pairs\n}\n",
    "    // Initialize result\n    count := 0\n\n    // Consider all possible pairs and check their sums\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n\n    return count\n}\n",
    "    var count int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs++\n            }\n        }\n    }\n    return pairs\n}\n",
    "    var count int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs++\n            }\n        }\n    }\n    return pairs\n}\n",
    "    var count int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    pairs := make(map[int]int)\n    for _, v := range arr {\n        pairs[v] = v\n    }\n    count := 0\n    for _, v := range arr {\n        if _, ok := pairs[sum - v]; ok {\n            count += 1\n        }\n    }\n    return count / 2\n}\n",
    "    var count int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs++\n            }\n        }\n    }\n    return pairs\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs++\n            }\n        }\n    }\n    return pairs\n}\n",
    "    var count int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    m := make(map[int]int)\n    for _, v := range arr {\n        m[v]++\n    }\n    count := 0\n    for _, v := range arr {\n        if m[sum - v] > 0 {\n            count++\n        }\n    }\n    return count\n}\n",
    "    var count int\n    var i, j int\n    for i = 0; i < len(arr); i++ {\n        for j = i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var pairs int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs++\n            }\n        }\n    }\n    return pairs\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs += 1\n            }\n        }\n    }\n    return pairs\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs++\n            }\n        }\n    }\n    return pairs\n}\n",
    "    var count int = 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs++\n            }\n        }\n    }\n    return pairs\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs++\n            }\n        }\n    }\n    return pairs\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs += 1\n            }\n        }\n    }\n    return pairs\n}\n",
    "    var count int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    m := make(map[int]int)\n    for _, v := range arr {\n        m[v]++\n    }\n\n    var count int\n    for _, v := range arr {\n        if m[sum - v] > 0 {\n            count++\n        }\n    }\n    return count\n}\n",
    "    var count int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs++\n            }\n        }\n    }\n    return pairs\n}\n",
    "    var count int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    // Create an empty hash set\n    m := make(map[int]bool)\n\n    // Initialize count of pairs as 0\n    count := 0\n\n    // Traverse through the given array\n    for _, v := range arr {\n        // If pair (arr[i], sum-arr[i]) is not there in hash,\n        // then store it and increment count\n        if m[sum-v] {\n            count++\n        }\n\n        // Store sum - arr[i]\n        m[v] = true\n    }\n\n    return count\n}\n",
    "    var count int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    var i int = 0\n    var j int = 0\n    for i = 0; i < len(arr); i++ {\n        for j = i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs++\n            }\n        }\n    }\n    return pairs\n}\n",
    "    var count int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var pairs_count int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs_count++\n            }\n        }\n    }\n    return pairs_count\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs++\n            }\n        }\n    }\n    return pairs\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs++\n            }\n        }\n    }\n    return pairs\n}\n",
    "    var count int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs++\n            }\n        }\n    }\n    return pairs\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs++\n            }\n        }\n    }\n    return pairs\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs++\n            }\n        }\n    }\n    return pairs\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs++\n            }\n        }\n    }\n    return pairs\n}\n",
    "    var count int\n    for i := 0; i < len(arr); i++ {\n        for j := i+1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs++\n            }\n        }\n    }\n    return pairs\n}\n",
    "    var count int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    m := make(map[int]int)\n    count := 0\n\n    for _, v := range arr {\n        if _, ok := m[v]; ok {\n            m[v] += 1\n        } else {\n            m[v] = 1\n        }\n    }\n\n    for _, v := range arr {\n        if _, ok := m[sum - v]; ok {\n            count += m[sum - v]\n        }\n        if sum - v == v {\n            count -= 1\n        }\n    }\n\n    return count / 2\n}\n",
    "    var count int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    count := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    // Initialize result\n    res := 0\n\n    // Consider all possible pairs and check their sums\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                res++\n            }\n        }\n    }\n    return res\n}\n",
    "    var count int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs++\n            }\n        }\n    }\n    return pairs\n}\n",
    "    var count int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs++\n            }\n        }\n    }\n    return pairs\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs++\n            }\n        }\n    }\n    return pairs\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs++\n            }\n        }\n    }\n    return pairs\n}\n",
    "    pairs := make(map[int]int)\n    count := 0\n    for _, v := range arr {\n        if _, ok := pairs[v]; ok {\n            count++\n        } else {\n            pairs[sum - v] = v\n        }\n    }\n    return count\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs++\n            }\n        }\n    }\n    return pairs\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs++\n            }\n        }\n    }\n    return pairs\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs++\n            }\n        }\n    }\n    return pairs\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs++\n            }\n        }\n    }\n    return pairs\n}\n",
    "    m := make(map[int]int)\n    for _, v := range arr {\n        m[v] += 1\n    }\n    count := 0\n    for _, v := range arr {\n        if m[sum - v] > 0 {\n            count += m[sum - v]\n        }\n    }\n    return count\n}\n",
    "    var count int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    m := make(map[int]int)\n    for _, v := range arr {\n        m[v]++\n    }\n    count := 0\n    for _, v := range arr {\n        if m[sum - v] > 0 {\n            count++\n        }\n    }\n    return count\n}\n",
    "    var count int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs++\n            }\n        }\n    }\n    return pairs\n}\n",
    "    var count int\n    for i := 0; i < len(arr); i++ {\n        for j := i+1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    m := make(map[int]int)\n    for _, v := range arr {\n        m[v]++\n    }\n    count := 0\n    for _, v := range arr {\n        if m[sum - v] > 0 {\n            count++\n        }\n    }\n    return count\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs++\n            }\n        }\n    }\n    return pairs\n}\n",
    "    var count int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs++\n            }\n        }\n    }\n    return pairs\n}\n",
    "    var count int = 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    pairs := make(map[int]bool)\n    count := 0\n    for _, v := range arr {\n        if pairs[v] {\n            count++\n        }\n        pairs[sum - v] = true\n    }\n    return count\n}\n",
    "    var count int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var pairs int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs++\n            }\n        }\n    }\n    return pairs\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs++\n            }\n        }\n    }\n    return pairs\n}\n",
    "    var count int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs++\n            }\n        }\n    }\n    return pairs\n}\n",
    "    var count int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    pairs := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i] + arr[j] == sum {\n                pairs++\n            }\n        }\n    }\n    return pairs\n}\n"
  ]
}
{
  "name": "mbpp_738_geometric_sum",
  "language": "go_test.go",
  "prompt": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_738_geometric_sum.py",
  "prompt_terminology": "verbatim",
  "tests": "func TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
  "stop_tokens": [
    "\nfunc",
    "struct",
    "\n// "
  ],
  "results": [
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 + float64(n) * geometric_sum(n-1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=13700)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=65)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=109601)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / (1 + geometric_sum(n - 1))\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpqvfhf_l6_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=0.6176470588235294)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpqvfhf_l6_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=0.625)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpqvfhf_l6_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=0.6181818181818182)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 + float64(n) * geometric_sum(n-1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=13700)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=65)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=109601)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 + float64(n) * geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpkxcugptt_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=13700)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpkxcugptt_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=65)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpkxcugptt_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=109601)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 + float64(n) * geometric_sum(n-1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=13700)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=65)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=109601)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n-1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpk06agx03_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpk06agx03_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpk06agx03_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 + float64(n) * geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpkxcugptt_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=13700)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpkxcugptt_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=65)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpkxcugptt_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=109601)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n-1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpk06agx03_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpk06agx03_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpk06agx03_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 + float64(n) * geometric_sum(n-1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=13700)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=65)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=109601)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 + float64(n) * geometric_sum(n-1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=13700)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=65)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=109601)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 + float64(n) * geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpkxcugptt_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=13700)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpkxcugptt_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=65)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpkxcugptt_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=109601)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 + float64(n) * geometric_sum(n-1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=13700)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=65)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=109601)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / (1 << uint(n)) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122706,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp6n50s4r8_test.go:13:31: invalid operation: 1 << uint(n) (shift of type float64)\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1.0 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122706,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmp543ewzok_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmp543ewzok_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmp543ewzok_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 1 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122706,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpofx9_nvn_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=2.5928571428571425)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpofx9_nvn_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=2.083333333333333)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpofx9_nvn_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=2.7178571428571425)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 + float64(n) * geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpkxcugptt_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=13700)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpkxcugptt_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=65)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpkxcugptt_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=109601)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return geometric_sum(n-1) + 1/float64(2<<uint(n-1))\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122706,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpw86x5f3i_test.go:13:42: invalid operation: 2 << uint(n - 1) (shift of type float64)\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 + float64(n) * geometric_sum(n-1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=13700)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=65)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=109601)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 + float64(n) * geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpkxcugptt_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=13700)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpkxcugptt_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=65)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpkxcugptt_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=109601)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 + float64(n) * geometric_sum(n-1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=13700)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=65)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=109601)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 + float64(n) * geometric_sum(n-1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=13700)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=65)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=109601)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 + (1 / float64(n)) * geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122706,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpvtabnoas_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=1.1734126984126985)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpvtabnoas_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=1.4166666666666665)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpvtabnoas_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=1.1466765873015874)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1.0 / float64(n) + geometric_sum(n-1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122706,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpb_z5orir_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpb_z5orir_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpb_z5orir_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n-1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpk06agx03_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpk06agx03_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpk06agx03_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 + float64(n) * geometric_sum(n-1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=13700)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=65)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=109601)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 + float64(n) * geometric_sum(n-1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=13700)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=65)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=109601)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 + (1 / float64(n)) * geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122706,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpvtabnoas_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=1.1734126984126985)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpvtabnoas_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=1.4166666666666665)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpvtabnoas_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=1.1466765873015874)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 + float64(n) * geometric_sum(n-1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=13700)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=65)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=109601)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 + float64(n) * geometric_sum(n-1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=13700)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=65)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=109601)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 + float64(n) * geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpkxcugptt_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=13700)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpkxcugptt_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=65)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpkxcugptt_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=109601)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 + float64(n) * geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpkxcugptt_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=13700)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpkxcugptt_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=65)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpkxcugptt_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=109601)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1.0 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122706,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmp543ewzok_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmp543ewzok_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmp543ewzok_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 + float64(n) * geometric_sum(n-1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=13700)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=65)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=109601)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 + float64(n) * geometric_sum(n-1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=13700)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=65)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=109601)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    } else {\n        return 1 / float64(n) + geometric_sum(n - 1)\n    }\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122706,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpikik5fdq_test.go:32: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpikik5fdq_test.go:32: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpikik5fdq_test.go:32: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122706,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpxtclb5n9_test.go:32: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpxtclb5n9_test.go:32: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpxtclb5n9_test.go:32: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 + float64(n) * geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpkxcugptt_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=13700)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpkxcugptt_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=65)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpkxcugptt_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=109601)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 + float64(n) * geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpkxcugptt_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=13700)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpkxcugptt_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=65)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpkxcugptt_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=109601)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 + float64(n) * geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpkxcugptt_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=13700)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpkxcugptt_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=65)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpkxcugptt_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=109601)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n-1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpk06agx03_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpk06agx03_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpk06agx03_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 + float64(n) * geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpkxcugptt_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=13700)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpkxcugptt_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=65)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpkxcugptt_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=109601)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 + float64(n) * geometric_sum(n-1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=13700)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=65)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=109601)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 + float64(n) * geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpkxcugptt_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=13700)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpkxcugptt_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=65)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpkxcugptt_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=109601)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 + float64(n) * geometric_sum(n-1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=13700)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=65)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=109601)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1.0\n    }\n    return 1.0 / float64(n) + geometric_sum(n-1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122706,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpbqa7zd87_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpbqa7zd87_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpbqa7zd87_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 + float64(n) * geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpkxcugptt_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=13700)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpkxcugptt_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=65)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpkxcugptt_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=109601)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 + float64(n) * geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpkxcugptt_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=13700)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpkxcugptt_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=65)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpkxcugptt_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=109601)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 + float64(n) * geometric_sum(n-1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=13700)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=65)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=109601)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 1 {\n        return 1\n    }\n    return 1 + (1 / float64(n)) * geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122706,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpkl_mitwl_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=1.1732142857142858)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpkl_mitwl_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=1.375)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpkl_mitwl_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=1.1466517857142857)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 + float64(n) * geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpkxcugptt_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=13700)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpkxcugptt_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=65)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpkxcugptt_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=109601)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 1 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122706,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpofx9_nvn_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=2.5928571428571425)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpofx9_nvn_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=2.083333333333333)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpofx9_nvn_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=2.7178571428571425)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 + float64(n) * geometric_sum(n-1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=13700)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=65)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=109601)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 + float64(n) * geometric_sum(n-1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=13700)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=65)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=109601)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    } else {\n        return 1 / float64(n) + geometric_sum(n - 1)\n    }\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122706,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpikik5fdq_test.go:32: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpikik5fdq_test.go:32: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpikik5fdq_test.go:32: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n-1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpk06agx03_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpk06agx03_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpk06agx03_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    } else {\n        return 1 + float64(n) * geometric_sum(n - 1)\n    }\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122706,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpx3d0hjmz_test.go:32: expected '%!s(float64=1.9921875)', got '%!s(float64=13700)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpx3d0hjmz_test.go:32: expected '%!s(float64=1.9375)', got '%!s(float64=65)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpx3d0hjmz_test.go:32: expected '%!s(float64=1.99609375)', got '%!s(float64=109601)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 + float64(n) * geometric_sum(n-1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=13700)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=65)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=109601)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 1 {\n        return 1\n    }\n    return 1 + float64(n) * geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122706,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpda2w7gff_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=8660)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpda2w7gff_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=41)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpda2w7gff_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=69281)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 + float64(n) * geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpkxcugptt_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=13700)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpkxcugptt_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=65)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpkxcugptt_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=109601)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 + float64(n) * geometric_sum(n-1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=13700)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=65)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=109601)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 + float64(n) * geometric_sum(n-1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=13700)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=65)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=109601)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 + float64(n) * geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpkxcugptt_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=13700)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpkxcugptt_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=65)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpkxcugptt_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=109601)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 + float64(n) * geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpkxcugptt_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=13700)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpkxcugptt_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=65)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpkxcugptt_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=109601)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 + float64(n) * geometric_sum(n-1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=13700)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=65)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=109601)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 + float64(n) * geometric_sum(n-1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=13700)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=65)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=109601)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 + float64(n) * geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpkxcugptt_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=13700)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpkxcugptt_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=65)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpkxcugptt_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=109601)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 + float64(n) * geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpkxcugptt_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=13700)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpkxcugptt_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=65)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpkxcugptt_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=109601)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 + float64(n) * geometric_sum(n-1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=13700)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=65)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=109601)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 + float64(n) * geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpkxcugptt_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=13700)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpkxcugptt_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=65)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpkxcugptt_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=109601)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 1 {\n        return 1\n    }\n    return 1 + float64(n-1) * geometric_sum(n-1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122706,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmp655yf76f_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=1957)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmp655yf76f_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=16)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmp655yf76f_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=13700)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1.0 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122706,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmp543ewzok_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmp543ewzok_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmp543ewzok_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 + float64(n) * geometric_sum(n-1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=13700)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=65)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=109601)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n-1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpk06agx03_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpk06agx03_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpk06agx03_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 + float64(n) * geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpkxcugptt_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=13700)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpkxcugptt_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=65)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpkxcugptt_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=109601)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 + float64(n) * geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpkxcugptt_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=13700)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpkxcugptt_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=65)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpkxcugptt_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=109601)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122706,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpxtclb5n9_test.go:32: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpxtclb5n9_test.go:32: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpxtclb5n9_test.go:32: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n-1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpk06agx03_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpk06agx03_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpk06agx03_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 + float64(n) * geometric_sum(n-1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=13700)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=65)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=109601)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 + float64(n) * geometric_sum(n-1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=13700)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=65)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=109601)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    } else {\n        return 1 / float64(n) + geometric_sum(n-1)\n    }\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122706,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmp9da18zjj_test.go:32: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmp9da18zjj_test.go:32: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmp9da18zjj_test.go:32: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 + float64(n) * geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpkxcugptt_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=13700)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpkxcugptt_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=65)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpkxcugptt_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=109601)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 + float64(n) * geometric_sum(n-1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=13700)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=65)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpy6uwn9dq_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=109601)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 + float64(n) * geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpkxcugptt_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=13700)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpkxcugptt_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=65)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpkxcugptt_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=109601)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 + float64(n) * geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpkxcugptt_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=13700)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpkxcugptt_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=65)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpkxcugptt_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=109601)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 + (1.0 / float64(n)) * geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122706,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpmkwro4hy_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=1.1734126984126985)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpmkwro4hy_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=1.4166666666666665)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpmkwro4hy_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=1.1466765873015874)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n\nfunc TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509848,
      "stdout": "--- FAIL: TestGeometric_Sum (0.00s)\n    --- FAIL: TestGeometric_Sum/test_num__0 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9921875)', got '%!s(float64=3.592857142857143)'\n    --- FAIL: TestGeometric_Sum/test_num__1 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.9375)', got '%!s(float64=3.0833333333333335)'\n    --- FAIL: TestGeometric_Sum/test_num__2 (0.00s)\n        tmpyi79u1d1_test.go:31: expected '%!s(float64=1.99609375)', got '%!s(float64=3.717857142857143)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
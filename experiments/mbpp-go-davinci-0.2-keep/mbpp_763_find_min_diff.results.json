{
  "name": "mbpp_763_find_min_diff",
  "language": "go_test.go",
  "prompt": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_763_find_min_diff.py",
  "prompt_terminology": "verbatim",
  "tests": "func TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
  "stop_tokens": [
    "\nfunc",
    "struct",
    "\n// "
  ],
  "results": [
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    if n < 2 {\n        return -1\n    }\n\n    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmpyn6pntlb_test.go:40: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmpyn6pntlb_test.go:40: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmpyn6pntlb_test.go:40: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min_diff int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min int\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[i].(int) > arr[j].(int) {\n                min = arr[i].(int) - arr[j].(int)\n            } else {\n                min = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmprgm8ltjw_test.go:38: expected '%!s(int=1)', got '%!s(int=7)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmprgm8ltjw_test.go:38: expected '%!s(int=1)', got '%!s(int=4)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmprgm8ltjw_test.go:38: expected '%!s(int=4)', got '%!s(int=11)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    if n < 2 {\n        return -1\n    }\n    min := arr[1].(int) - arr[0].(int)\n    for i := 0; i < n - 1; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min {\n                min = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmp619mmll0_test.go:39: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmp619mmll0_test.go:39: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmp619mmll0_test.go:39: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    // Sort the array\n    for i := 0; i < n - 1; i++ {\n        for j := 0; j < n - i - 1; j++ {\n            if arr[j].(int) > arr[j + 1].(int) {\n                arr[j], arr[j + 1] = arr[j + 1], arr[j]\n            }\n        }\n    }\n\n    // Find the minimum difference\n    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 2; i < n; i++ {\n        if arr[i].(int) - arr[i - 1].(int) < min_diff {\n            min_diff = arr[i].(int) - arr[i - 1].(int)\n        }\n    }\n\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    // Sort the array in ascending order\n    // Initialize difference as infinite\n    min_diff := 999999999\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n-1; i++ {\n        diff := arr[i+1].(int) - arr[i].(int)\n        if diff < min_diff {\n            min_diff = diff\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmptzpwf3h__test.go:39: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmptzpwf3h__test.go:39: expected '%!s(int=1)', got '%!s(int=-1)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmptzpwf3h__test.go:39: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min {\n                min = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmpegj3hsuu_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmpegj3hsuu_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmpegj3hsuu_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    min := int(arr[1].(int) - arr[0].(int))\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if int(arr[j].(int) - arr[i].(int)) < min {\n                min = int(arr[j].(int) - arr[i].(int))\n            }\n        }\n    }\n    return min\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmp6rvlh_gn_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmp6rvlh_gn_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmp6rvlh_gn_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    if n < 2 {\n        return -1\n    }\n    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmpz_tayjar_test.go:39: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmpz_tayjar_test.go:39: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmpz_tayjar_test.go:39: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[i].(int) > arr[j].(int) {\n                arr[i], arr[j] = arr[j], arr[i]\n            }\n        }\n    }\n\n    // Find the minimum difference\n    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 2; i < n; i++ {\n        if arr[i].(int) - arr[i - 1].(int) < min_diff {\n            min_diff = arr[i].(int) - arr[i - 1].(int)\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min {\n                min = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmpegj3hsuu_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmpegj3hsuu_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmpegj3hsuu_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    min := arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min {\n                min = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmpjx6tad4v_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmpjx6tad4v_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmpjx6tad4v_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    if n == 0 || n == 1 {\n        return 0\n    }\n    sort(arr, n)\n    min := arr[1].(int) - arr[0].(int)\n    for i := 2; i < n; i++ {\n        if arr[i].(int) - arr[i-1].(int) < min {\n            min = arr[i].(int) - arr[i-1].(int)\n        }\n    }\n    return min\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpj0_zrzcf_test.go:13:5: undefined: sort\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    min := arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min {\n                min = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmpjx6tad4v_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmpjx6tad4v_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmpjx6tad4v_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min_diff int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    if n < 2 {\n        return -1\n    }\n    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmpz_tayjar_test.go:39: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmpz_tayjar_test.go:39: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmpz_tayjar_test.go:39: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min_diff int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n - 1; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmph30sx_9w_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmph30sx_9w_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmph30sx_9w_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min_diff int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min {\n                min = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmpegj3hsuu_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmpegj3hsuu_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmpegj3hsuu_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min_diff int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min_diff int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n-1; i++ {\n        for j := i+1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123199,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmp3mump8m1_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmp3mump8m1_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmp3mump8m1_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := 0; j < n-i-1; j++ {\n            if arr[j].(int) > arr[j+1].(int) {\n                arr[j], arr[j+1] = arr[j+1], arr[j]\n            }\n        }\n    }\n\n    // Find the minimum difference\n    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 2; i < n; i++ {\n        if arr[i].(int) - arr[i-1].(int) < min_diff {\n            min_diff = arr[i].(int) - arr[i-1].(int)\n        }\n    }\n\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123199,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min_diff int\n    min_diff = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123199,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmpyjq2i4gx_test.go:37: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmpyjq2i4gx_test.go:37: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmpyjq2i4gx_test.go:37: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := 0; j < n - i - 1; j++ {\n            if arr[j].(int) > arr[j + 1].(int) {\n                arr[j], arr[j + 1] = arr[j + 1], arr[j]\n            }\n        }\n    }\n\n    // Find the minimum difference\n    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 2; i < n; i++ {\n        if arr[i].(int) - arr[i - 1].(int) < min_diff {\n            min_diff = arr[i].(int) - arr[i - 1].(int)\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123199,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[i].(int) > arr[j].(int) {\n                arr[i], arr[j] = arr[j], arr[i]\n            }\n        }\n    }\n\n    // Find the minimum difference\n    min := arr[1].(int) - arr[0].(int)\n    for i := 2; i < n; i++ {\n        if arr[i].(int) - arr[i - 1].(int) < min {\n            min = arr[i].(int) - arr[i - 1].(int)\n        }\n    }\n    return min\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123199,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    min := arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min {\n                min = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmpjx6tad4v_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmpjx6tad4v_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmpjx6tad4v_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    if n < 2 {\n        return -1\n    }\n    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmpz_tayjar_test.go:39: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmpz_tayjar_test.go:39: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmpz_tayjar_test.go:39: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := 0; j < n - i - 1; j++ {\n            if arr[j].(int) > arr[j + 1].(int) {\n                arr[j], arr[j + 1] = arr[j + 1], arr[j]\n            }\n        }\n    }\n\n    // Find the minimum difference\n    min := arr[1].(int) - arr[0].(int)\n    for i := 2; i < n; i++ {\n        if arr[i].(int) - arr[i - 1].(int) < min {\n            min = arr[i].(int) - arr[i - 1].(int)\n        }\n    }\n\n    return min\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123199,
      "stdout": "ok  \tcommand-line-arguments\t0.006s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    min := arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min {\n                min = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmpjx6tad4v_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmpjx6tad4v_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmpjx6tad4v_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    // Sort the array\n    for i := 0; i < n - 1; i++ {\n        for j := 0; j < n - i - 1; j++ {\n            if arr[j].(int) > arr[j + 1].(int) {\n                arr[j], arr[j + 1] = arr[j + 1], arr[j]\n            }\n        }\n    }\n\n    // Find the minimum difference\n    min := arr[1].(int) - arr[0].(int)\n    for i := 2; i < n; i++ {\n        if arr[i].(int) - arr[i - 1].(int) < min {\n            min = arr[i].(int) - arr[i - 1].(int)\n        }\n    }\n    return min\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123199,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123199,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmp1_h16e4__test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmp1_h16e4__test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmp1_h16e4__test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min_diff int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if (arr[j].(int) - arr[i].(int)) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123199,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmpivn_yzsk_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmpivn_yzsk_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmpivn_yzsk_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n - 1; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min {\n                min = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123199,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmpf5flmjzy_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmpf5flmjzy_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmpf5flmjzy_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    if n <= 1 {\n        return -1\n    }\n    min := arr[1].(int) - arr[0].(int)\n    for i := 0; i < n - 1; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min {\n                min = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123199,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmpp_qh62na_test.go:39: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmpp_qh62na_test.go:39: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmpp_qh62na_test.go:39: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min_diff int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[i].(int) > arr[j].(int) {\n                arr[i], arr[j] = arr[j], arr[i]\n            }\n        }\n    }\n\n    // Find the minimum difference\n    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 0; i < n - 1; i++ {\n        if arr[i + 1].(int) - arr[i].(int) < min_diff {\n            min_diff = arr[i + 1].(int) - arr[i].(int)\n        }\n    }\n\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123199,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min_diff int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    if n == 0 || n == 1 {\n        return 0\n    }\n\n    sort(arr, n)\n\n    min_diff := arr[1].(int) - arr[0].(int)\n\n    for i := 2; i < n; i++ {\n        if arr[i].(int) - arr[i-1].(int) < min_diff {\n            min_diff = arr[i].(int) - arr[i-1].(int)\n        }\n    }\n\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123198,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp6jkc6up7_test.go:14:5: undefined: sort\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n - 1; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min {\n                min = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123199,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmpf5flmjzy_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmpf5flmjzy_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmpf5flmjzy_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    if n == 0 || n == 1 {\n        return 0\n    }\n    sort(arr, 0, n-1)\n    min := arr[1].(int) - arr[0].(int)\n    for i := 2; i < n; i++ {\n        if arr[i].(int) - arr[i-1].(int) < min {\n            min = arr[i].(int) - arr[i-1].(int)\n        }\n    }\n    return min\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123198,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp5mof6fbq_test.go:13:5: undefined: sort\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := 0; j < n - i - 1; j++ {\n            if arr[j].(int) > arr[j + 1].(int) {\n                arr[j], arr[j + 1] = arr[j + 1], arr[j]\n            }\n        }\n    }\n\n    // Find the minimum difference\n    min := arr[1].(int) - arr[0].(int)\n    for i := 2; i < n; i++ {\n        if arr[i].(int) - arr[i - 1].(int) < min {\n            min = arr[i].(int) - arr[i - 1].(int)\n        }\n    }\n\n    return min\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123199,
      "stdout": "ok  \tcommand-line-arguments\t0.006s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min int\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[i].(int) > arr[j].(int) {\n                min = arr[i].(int) - arr[j].(int)\n            } else {\n                min = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmprgm8ltjw_test.go:38: expected '%!s(int=1)', got '%!s(int=7)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmprgm8ltjw_test.go:38: expected '%!s(int=1)', got '%!s(int=4)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmprgm8ltjw_test.go:38: expected '%!s(int=4)', got '%!s(int=11)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    if n < 2 {\n        return -1\n    }\n    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmpz_tayjar_test.go:39: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmpz_tayjar_test.go:39: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmpz_tayjar_test.go:39: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    if n == 0 || n == 1 {\n        return 0\n    }\n\n    sort(arr, 0, n-1)\n\n    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 2; i < n; i++ {\n        if arr[i].(int) - arr[i-1].(int) < min_diff {\n            min_diff = arr[i].(int) - arr[i-1].(int)\n        }\n    }\n\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123198,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp5gbluq6g_test.go:14:5: undefined: sort\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min {\n                min = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmpegj3hsuu_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmpegj3hsuu_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmpegj3hsuu_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    if n == 0 || n == 1 {\n        return 0\n    }\n\n    sort(arr, n)\n\n    min_diff := arr[1].(int) - arr[0].(int)\n\n    for i := 2; i < n; i++ {\n        if arr[i].(int) - arr[i - 1].(int) < min_diff {\n            min_diff = arr[i].(int) - arr[i - 1].(int)\n        }\n    }\n\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123198,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpt25fj1h3_test.go:14:5: undefined: sort\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    min := arr[1].(int) - arr[0].(int)\n    for i := 0; i < n - 1; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min {\n                min = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123199,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmpkrur0tcg_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmpkrur0tcg_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmpkrur0tcg_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    if n < 2 {\n        return -1\n    }\n    min := arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min {\n                min = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123199,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmpwjgtm_ne_test.go:39: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmpwjgtm_ne_test.go:39: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmpwjgtm_ne_test.go:39: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    if n < 2 {\n        return -1\n    }\n    min := arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min {\n                min = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123199,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmpwjgtm_ne_test.go:39: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmpwjgtm_ne_test.go:39: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmpwjgtm_ne_test.go:39: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min_diff int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min_diff int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if (arr[j].(int) - arr[i].(int)) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123199,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmpivn_yzsk_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmpivn_yzsk_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmpivn_yzsk_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min_diff int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if (arr[j].(int) - arr[i].(int) < min_diff) {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123199,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmpdywifm6t_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmpdywifm6t_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmpdywifm6t_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    if n < 2 {\n        return -1\n    }\n\n    var min_diff int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123199,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmpsexf8xti_test.go:40: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmpsexf8xti_test.go:40: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmpsexf8xti_test.go:40: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min_diff int = 99999\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if (arr[i].(int) - arr[j].(int)) < min_diff {\n                min_diff = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123199,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmptx5ulw0__test.go:36: expected '%!s(int=1)', got '%!s(int=-24)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmptx5ulw0__test.go:36: expected '%!s(int=1)', got '%!s(int=-4)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmptx5ulw0__test.go:36: expected '%!s(int=4)', got '%!s(int=-15)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min_diff int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min {\n                min = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmpegj3hsuu_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmpegj3hsuu_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmpegj3hsuu_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min {\n                min = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmpegj3hsuu_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmpegj3hsuu_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmpegj3hsuu_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min_diff int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    if n < 2 {\n        return -1\n    }\n    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmpz_tayjar_test.go:39: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmpz_tayjar_test.go:39: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmpz_tayjar_test.go:39: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min {\n                min = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmpegj3hsuu_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmpegj3hsuu_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmpegj3hsuu_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[i].(int) > arr[j].(int) {\n                arr[i], arr[j] = arr[j], arr[i]\n            }\n        }\n    }\n\n    // Find the minimum difference\n    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 2; i < n; i++ {\n        if arr[i].(int) - arr[i - 1].(int) < min_diff {\n            min_diff = arr[i].(int) - arr[i - 1].(int)\n        }\n    }\n\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123199,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    if n < 2 {\n        return -1\n    }\n    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmpz_tayjar_test.go:39: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmpz_tayjar_test.go:39: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmpz_tayjar_test.go:39: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min_diff int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    if n < 2 {\n        return 0\n    }\n\n    var min_diff int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123199,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmpr0b43uu5_test.go:40: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmpr0b43uu5_test.go:40: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmpr0b43uu5_test.go:40: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min_diff int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    if n < 2 {\n        return -1\n    }\n    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmpz_tayjar_test.go:39: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmpz_tayjar_test.go:39: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmpz_tayjar_test.go:39: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min_diff int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min int\n    for i := 0; i < n - 1; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[i].(int) > arr[j].(int) {\n                min = arr[j].(int) - arr[i].(int)\n            } else {\n                min = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return min\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123201,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmpyvmm22ja_test.go:38: expected '%!s(int=1)', got '%!s(int=-7)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmpyvmm22ja_test.go:38: expected '%!s(int=1)', got '%!s(int=-4)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmpyvmm22ja_test.go:38: expected '%!s(int=4)', got '%!s(int=-11)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min int\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[i].(int) > arr[j].(int) {\n                min = arr[i].(int) - arr[j].(int)\n            } else {\n                min = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmprgm8ltjw_test.go:38: expected '%!s(int=1)', got '%!s(int=7)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmprgm8ltjw_test.go:38: expected '%!s(int=1)', got '%!s(int=4)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmprgm8ltjw_test.go:38: expected '%!s(int=4)', got '%!s(int=11)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min {\n                min = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmpegj3hsuu_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmpegj3hsuu_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmpegj3hsuu_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min_diff int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min {\n                min = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmpegj3hsuu_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmpegj3hsuu_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmpegj3hsuu_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min_diff int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min_diff int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n - 1; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min {\n                min = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123199,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmpf5flmjzy_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmpf5flmjzy_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmpf5flmjzy_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    if n < 2 {\n        return -1\n    }\n    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 0; i < n - 1; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123201,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmprs5zssyp_test.go:39: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmprs5zssyp_test.go:39: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmprs5zssyp_test.go:39: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n-1; i++ {\n        for j := i+1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min {\n                min = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123201,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmpwgczaa00_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmpwgczaa00_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmpwgczaa00_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    if n < 2 {\n        return 0\n    }\n    var min_diff int = 0\n    var i int = 0\n    for i = 0; i < n-1; i++ {\n        if arr[i+1].(int) - arr[i].(int) < min_diff {\n            min_diff = arr[i+1].(int) - arr[i].(int)\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123201,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmpg6pvrfug_test.go:38: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmpg6pvrfug_test.go:38: expected '%!s(int=1)', got '%!s(int=-1)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmpg6pvrfug_test.go:38: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min {\n                min = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmpegj3hsuu_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmpegj3hsuu_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmpegj3hsuu_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min_diff int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min int\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[i].(int) > arr[j].(int) {\n                min = arr[i].(int) - arr[j].(int)\n            } else {\n                min = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmprgm8ltjw_test.go:38: expected '%!s(int=1)', got '%!s(int=7)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmprgm8ltjw_test.go:38: expected '%!s(int=1)', got '%!s(int=4)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmprgm8ltjw_test.go:38: expected '%!s(int=4)', got '%!s(int=11)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min_diff int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := i+1; j < n; j++ {\n            if arr[i].(int) > arr[j].(int) {\n                arr[i], arr[j] = arr[j], arr[i]\n            }\n        }\n    }\n\n    // Find the minimum difference\n    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 2; i < n; i++ {\n        if arr[i].(int) - arr[i-1].(int) < min_diff {\n            min_diff = arr[i].(int) - arr[i-1].(int)\n        }\n    }\n\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123201,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    if n < 2 {\n        return -1\n    }\n\n    min := arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min {\n                min = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123201,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmp5glhh4eh_test.go:40: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmp5glhh4eh_test.go:40: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmp5glhh4eh_test.go:40: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    if n == 0 || n == 1 {\n        return 0\n    }\n    sort(arr, n)\n    min := arr[1].(int) - arr[0].(int)\n    for i := 2; i < n; i++ {\n        if arr[i].(int) - arr[i-1].(int) < min {\n            min = arr[i].(int) - arr[i-1].(int)\n        }\n    }\n    return min\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpj0_zrzcf_test.go:13:5: undefined: sort\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min {\n                min = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmpegj3hsuu_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmpegj3hsuu_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmpegj3hsuu_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min {\n                min = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmpegj3hsuu_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmpegj3hsuu_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmpegj3hsuu_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    if n < 2 {\n        return -1\n    }\n    min := arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min {\n                min = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123199,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmpwjgtm_ne_test.go:39: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmpwjgtm_ne_test.go:39: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmpwjgtm_ne_test.go:39: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    if n == 0 || n == 1 {\n        return -1\n    }\n    sort(arr, 0, n-1)\n    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 2; i < n; i++ {\n        if arr[i].(int) - arr[i-1].(int) < min_diff {\n            min_diff = arr[i].(int) - arr[i-1].(int)\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123201,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp63_v07oc_test.go:13:5: undefined: sort\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min_diff int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if (arr[j].(int) - arr[i].(int)) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123199,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmpivn_yzsk_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmpivn_yzsk_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmpivn_yzsk_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    if n == 0 || n == 1 {\n        return 0\n    }\n    sort(arr, n)\n    min := arr[1].(int) - arr[0].(int)\n    for i := 2; i < n; i++ {\n        if arr[i].(int) - arr[i-1].(int) < min {\n            min = arr[i].(int) - arr[i-1].(int)\n        }\n    }\n    return min\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpj0_zrzcf_test.go:13:5: undefined: sort\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min_diff int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    if n < 2 {\n        return 0\n    }\n    var min_diff int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123201,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmp5fpfjpyf_test.go:39: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmp5fpfjpyf_test.go:39: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmp5fpfjpyf_test.go:39: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min_diff int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min {\n                min = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmpegj3hsuu_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmpegj3hsuu_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmpegj3hsuu_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    if n < 2 {\n        return -1\n    }\n\n    var min_diff int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123199,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmpsexf8xti_test.go:40: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmpsexf8xti_test.go:40: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmpsexf8xti_test.go:40: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min_diff int\n    min_diff = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123199,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmpyjq2i4gx_test.go:37: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmpyjq2i4gx_test.go:37: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmpyjq2i4gx_test.go:37: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min_diff int\n    var i int\n    var j int\n\n    min_diff = arr[1].(int) - arr[0].(int)\n    for i = 0; i < n; i++ {\n        for j = i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123201,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmpmkrdztx1_test.go:40: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmpmkrdztx1_test.go:40: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmpmkrdztx1_test.go:40: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[i].(int) > arr[j].(int) {\n                arr[i], arr[j] = arr[j], arr[i]\n            }\n        }\n    }\n\n    // Find the minimum difference\n    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 2; i < n; i++ {\n        if arr[i].(int) - arr[i-1].(int) < min_diff {\n            min_diff = arr[i].(int) - arr[i-1].(int)\n        }\n    }\n\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123201,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min_diff int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n - 1; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmph30sx_9w_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmph30sx_9w_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmph30sx_9w_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n - 1; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min {\n                min = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123199,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmpf5flmjzy_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmpf5flmjzy_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmpf5flmjzy_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min_diff int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min_diff int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min_diff int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    // sort the array\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[i].(int) > arr[j].(int) {\n                arr[i], arr[j] = arr[j], arr[i]\n            }\n        }\n    }\n\n    // find the minimum difference\n    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 2; i < n; i++ {\n        if arr[i].(int) - arr[i-1].(int) < min_diff {\n            min_diff = arr[i].(int) - arr[i-1].(int)\n        }\n    }\n\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123201,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min_diff int\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[i].(int) > arr[j].(int) {\n                min_diff = arr[i].(int) - arr[j].(int)\n            } else {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123201,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmpd315o39a_test.go:38: expected '%!s(int=1)', got '%!s(int=7)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmpd315o39a_test.go:38: expected '%!s(int=1)', got '%!s(int=4)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmpd315o39a_test.go:38: expected '%!s(int=4)', got '%!s(int=11)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min_diff int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min int\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[i].(int) > arr[j].(int) {\n                min = arr[i].(int) - arr[j].(int)\n            } else {\n                min = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmprgm8ltjw_test.go:38: expected '%!s(int=1)', got '%!s(int=7)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmprgm8ltjw_test.go:38: expected '%!s(int=1)', got '%!s(int=4)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmprgm8ltjw_test.go:38: expected '%!s(int=4)', got '%!s(int=11)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min_diff int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min_diff int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n - 1; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmph30sx_9w_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmph30sx_9w_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmph30sx_9w_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min_diff int\n    min_diff = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123199,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmpyjq2i4gx_test.go:37: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmpyjq2i4gx_test.go:37: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmpyjq2i4gx_test.go:37: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min {\n                min = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmpegj3hsuu_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmpegj3hsuu_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmpegj3hsuu_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[i].(int) > arr[j].(int) {\n                arr[i], arr[j] = arr[j], arr[i]\n            }\n        }\n    }\n\n    // Find the minimum difference\n    min := arr[1].(int) - arr[0].(int)\n    for i := 2; i < n; i++ {\n        if arr[i].(int) - arr[i - 1].(int) < min {\n            min = arr[i].(int) - arr[i - 1].(int)\n        }\n    }\n\n    return min\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123201,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min {\n                min = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmpegj3hsuu_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmpegj3hsuu_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmpegj3hsuu_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min int\n    for i := 0; i < n - 1; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j] < arr[i] {\n                min = arr[j] - arr[i]\n            } else {\n                min = arr[i] - arr[j]\n            }\n        }\n    }\n    return min\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123201,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmplllms7sc_test.go:13:23: invalid operation: arr[j] < arr[i] (operator < not defined on interface)\n/tmp/tmplllms7sc_test.go:14:30: invalid operation: arr[j] - arr[i] (operator - not defined on interface)\n/tmp/tmplllms7sc_test.go:16:30: invalid operation: arr[i] - arr[j] (operator - not defined on interface)\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min_diff int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    if n < 2 {\n        return -1\n    }\n    var min_diff int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123201,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmp6bzh00zx_test.go:39: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmp6bzh00zx_test.go:39: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmp6bzh00zx_test.go:39: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    if n < 2 {\n        return -1\n    }\n    var min_diff int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123201,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmp6bzh00zx_test.go:39: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmp6bzh00zx_test.go:39: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmp6bzh00zx_test.go:39: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min_diff int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min_diff int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min_diff int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if (arr[j].(int) - arr[i].(int)) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123199,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmpivn_yzsk_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmpivn_yzsk_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmpivn_yzsk_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[i].(int) > arr[j].(int) {\n                arr[i], arr[j] = arr[j], arr[i]\n            }\n        }\n    }\n\n    // Find the min diff by comparing adjacent elements\n    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 2; i < n; i++ {\n        if arr[i].(int) - arr[i - 1].(int) < min_diff {\n            min_diff = arr[i].(int) - arr[i - 1].(int)\n        }\n    }\n\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123201,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min {\n                min = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmpegj3hsuu_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmpegj3hsuu_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmpegj3hsuu_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    // Sort the array\n    for i := 0; i < n - 1; i++ {\n        for j := 0; j < n - i - 1; j++ {\n            if arr[j] > arr[j + 1] {\n                arr[j], arr[j + 1] = arr[j + 1], arr[j]\n            }\n        }\n    }\n\n    // Find the minimum difference\n    min_diff := arr[1] - arr[0]\n    for i := 2; i < n; i++ {\n        if arr[i] - arr[i - 1] < min_diff {\n            min_diff = arr[i] - arr[i - 1]\n        }\n    }\n\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123201,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpyzzq_5ai_test.go:13:23: invalid operation: arr[j] > arr[j + 1] (operator > not defined on interface)\n/tmp/tmpyzzq_5ai_test.go:20:24: invalid operation: arr[1] - arr[0] (operator - not defined on interface)\n/tmp/tmpyzzq_5ai_test.go:22:19: invalid operation: arr[i] - arr[i - 1] (operator - not defined on interface)\n/tmp/tmpyzzq_5ai_test.go:23:31: invalid operation: arr[i] - arr[i - 1] (operator - not defined on interface)\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min {\n                min = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmpegj3hsuu_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmpegj3hsuu_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmpegj3hsuu_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    min := arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min {\n                min = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmpjx6tad4v_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmpjx6tad4v_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmpjx6tad4v_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min_diff int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min {\n                min = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmpegj3hsuu_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmpegj3hsuu_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmpegj3hsuu_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    if n < 2 {\n        return -1\n    }\n    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmpz_tayjar_test.go:39: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmpz_tayjar_test.go:39: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmpz_tayjar_test.go:39: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    if n < 2 {\n        return 0\n    }\n    var min_diff int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123201,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmp5fpfjpyf_test.go:39: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmp5fpfjpyf_test.go:39: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmp5fpfjpyf_test.go:39: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min {\n                min = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmpegj3hsuu_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmpegj3hsuu_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmpegj3hsuu_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min_diff int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min {\n                min = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmpegj3hsuu_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmpegj3hsuu_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmpegj3hsuu_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min_diff int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    if n == 0 || n == 1 {\n        return -1\n    }\n\n    sort(arr, n)\n\n    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 2; i < n; i++ {\n        if arr[i].(int) - arr[i-1].(int) < min_diff {\n            min_diff = arr[i].(int) - arr[i-1].(int)\n        }\n    }\n\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123201,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpo0kw5w26_test.go:14:5: undefined: sort\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    if n < 2 {\n        return -1\n    }\n    var min_diff int\n    min_diff = arr[1] - arr[0]\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if (arr[j] - arr[i]) < min_diff {\n                min_diff = arr[j] - arr[i]\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123201,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp2dz6l6d2_test.go:14:23: invalid operation: arr[1] - arr[0] (operator - not defined on interface)\n/tmp/tmp2dz6l6d2_test.go:17:16: invalid operation: arr[j] - arr[i] (operator - not defined on interface)\n/tmp/tmp2dz6l6d2_test.go:18:35: invalid operation: arr[j] - arr[i] (operator - not defined on interface)\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := 0; j < n - i - 1; j++ {\n            if arr[j].(int) > arr[j + 1].(int) {\n                arr[j], arr[j + 1] = arr[j + 1], arr[j]\n            }\n        }\n    }\n\n    // Find the minimum difference\n    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 2; i < n; i++ {\n        if arr[i].(int) - arr[i - 1].(int) < min_diff {\n            min_diff = arr[i].(int) - arr[i - 1].(int)\n        }\n    }\n\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123201,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n - 1; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min {\n                min = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123199,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmpf5flmjzy_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmpf5flmjzy_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmpf5flmjzy_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min_diff int = arr[1].(int) - arr[0].(int)\n\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123201,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmp1a4lwvhx_test.go:38: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmp1a4lwvhx_test.go:38: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmp1a4lwvhx_test.go:38: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min_diff int = arr[1].(int) - arr[0].(int)\n\n    for i := 0; i < n - 1; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123201,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmpbmqh94tx_test.go:37: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmpbmqh94tx_test.go:37: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmpbmqh94tx_test.go:37: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    if n < 2 {\n        return -1\n    }\n    min_diff := arr[1] - arr[0]\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j] - arr[i] < min_diff {\n                min_diff = arr[j] - arr[i]\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123201,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp0afkivay_test.go:13:24: invalid operation: arr[1] - arr[0] (operator - not defined on interface)\n/tmp/tmp0afkivay_test.go:16:23: invalid operation: arr[j] - arr[i] (operator - not defined on interface)\n/tmp/tmp0afkivay_test.go:17:35: invalid operation: arr[j] - arr[i] (operator - not defined on interface)\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    min := int(arr[1].(int) - arr[0].(int))\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if int(arr[j].(int) - arr[i].(int)) < min {\n                min = int(arr[j].(int) - arr[i].(int))\n            }\n        }\n    }\n    return min\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmp6rvlh_gn_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmp6rvlh_gn_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmp6rvlh_gn_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    // sort the array\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[i].(int) > arr[j].(int) {\n                arr[i], arr[j] = arr[j], arr[i]\n            }\n        }\n    }\n\n    // find the min diff\n    min := arr[1].(int) - arr[0].(int)\n    for i := 2; i < n; i++ {\n        if arr[i].(int) - arr[i - 1].(int) < min {\n            min = arr[i].(int) - arr[i - 1].(int)\n        }\n    }\n\n    return min\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123203,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min_diff int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min_diff int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min_diff int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if (arr[j].(int) - arr[i].(int)) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123199,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmpivn_yzsk_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmpivn_yzsk_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmpivn_yzsk_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min {\n                min = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmpegj3hsuu_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmpegj3hsuu_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmpegj3hsuu_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min_diff int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min_diff int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n - 1; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmph30sx_9w_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmph30sx_9w_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmph30sx_9w_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min_diff int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if (arr[j].(int) - arr[i].(int)) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123199,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmpivn_yzsk_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmpivn_yzsk_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmpivn_yzsk_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min {\n                min = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmpegj3hsuu_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmpegj3hsuu_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmpegj3hsuu_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[i].(int) > arr[j].(int) {\n                arr[i], arr[j] = arr[j], arr[i]\n            }\n        }\n    }\n\n    // Find the minimum difference\n    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 2; i < n; i++ {\n        if arr[i].(int) - arr[i - 1].(int) < min_diff {\n            min_diff = arr[i].(int) - arr[i - 1].(int)\n        }\n    }\n\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123199,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    if n < 2 {\n        return -1\n    }\n\n    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123203,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmpoadi1291_test.go:41: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmpoadi1291_test.go:41: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmpoadi1291_test.go:41: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min_diff int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := 0; j < n; j++ {\n            if arr[i].(int) < arr[j].(int) {\n                arr[i], arr[j] = arr[j], arr[i]\n            }\n        }\n    }\n    // Find the min diff by comparing adjacent pairs\n    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 2; i < n; i++ {\n        if arr[i].(int) - arr[i-1].(int) < min_diff {\n            min_diff = arr[i].(int) - arr[i-1].(int)\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123203,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min_diff int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min {\n                min = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmpegj3hsuu_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmpegj3hsuu_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmpegj3hsuu_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min_diff int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min_diff int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n - 1; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmph30sx_9w_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmph30sx_9w_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmph30sx_9w_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min_diff int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min {\n                min = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmpegj3hsuu_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmpegj3hsuu_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmpegj3hsuu_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123199,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmp1_h16e4__test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmp1_h16e4__test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmp1_h16e4__test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min_diff int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if (arr[j].(int) - arr[i].(int) < min_diff) {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123199,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmpdywifm6t_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmpdywifm6t_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmpdywifm6t_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[i].(int) > arr[j].(int) {\n                arr[i], arr[j] = arr[j], arr[i]\n            }\n        }\n    }\n\n    // Find the minimum difference\n    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 2; i < n; i++ {\n        if arr[i].(int) - arr[i - 1].(int) < min_diff {\n            min_diff = arr[i].(int) - arr[i - 1].(int)\n        }\n    }\n\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123199,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min_diff int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    // Sort the array\n    arr = merge_sort(arr)\n    // Initialize difference as infinite\n    diff := int(^uint(0) >> 1)\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n-1; i++ {\n        if arr[i+1].(int) - arr[i].(int) < diff {\n            diff = arr[i+1].(int) - arr[i].(int)\n        }\n    }\n    // Return min diff\n    return diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123203,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpz5tp50ld_test.go:11:11: undefined: merge_sort\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    // Sort the array\n    for i := 0; i < n - 1; i++ {\n        for j := 0; j < n - i - 1; j++ {\n            if arr[j].(int) > arr[j + 1].(int) {\n                arr[j], arr[j + 1] = arr[j + 1], arr[j]\n            }\n        }\n    }\n\n    // Find the minimum difference\n    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 2; i < n; i++ {\n        if arr[i].(int) - arr[i - 1].(int) < min_diff {\n            min_diff = arr[i].(int) - arr[i - 1].(int)\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123203,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min_diff int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n - 1; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmph30sx_9w_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmph30sx_9w_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmph30sx_9w_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min_diff int\n    var i, j int\n    min_diff = arr[1].(int) - arr[0].(int)\n    for i = 0; i < n; i++ {\n        for j = i + 1; j < n; j++ {\n            if (arr[j].(int) - arr[i].(int)) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123203,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmpu5f0b2ep_test.go:38: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmpu5f0b2ep_test.go:38: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmpu5f0b2ep_test.go:38: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    min := arr[1].(int) - arr[0].(int)\n    for i := 0; i < n - 1; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min {\n                min = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123199,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmpkrur0tcg_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmpkrur0tcg_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmpkrur0tcg_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min_diff int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    if n < 2 {\n        return -1\n    }\n    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 0; i < n - 1; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123201,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmprs5zssyp_test.go:39: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmprs5zssyp_test.go:39: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmprs5zssyp_test.go:39: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var minDiff int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if (arr[j].(int) - arr[i].(int) < minDiff) {\n                minDiff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return minDiff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123203,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmpqrotw1t8_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmpqrotw1t8_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmpqrotw1t8_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n - 1; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min {\n                min = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123199,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmpf5flmjzy_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmpf5flmjzy_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmpf5flmjzy_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    min := int(arr[1].(int) - arr[0].(int))\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if int(arr[j].(int) - arr[i].(int)) < min {\n                min = int(arr[j].(int) - arr[i].(int))\n            }\n        }\n    }\n    return min\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmp6rvlh_gn_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmp6rvlh_gn_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmp6rvlh_gn_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    if n < 2 {\n        return 0\n    }\n    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123203,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmpjiuo6b39_test.go:39: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmpjiuo6b39_test.go:39: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmpjiuo6b39_test.go:39: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min_diff int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min_diff int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n - 1; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min {\n                min = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123199,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmpf5flmjzy_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmpf5flmjzy_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmpf5flmjzy_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    min := arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min {\n                min = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmpjx6tad4v_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmpjx6tad4v_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmpjx6tad4v_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    if n == 0 || n == 1 {\n        return -1\n    }\n    sort(arr, n)\n    min_diff := arr[1] - arr[0]\n    for i := 2; i < n; i++ {\n        if arr[i] - arr[i-1] < min_diff {\n            min_diff = arr[i] - arr[i-1]\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123203,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp9avr9xj3_test.go:13:5: undefined: sort\n/tmp/tmp9avr9xj3_test.go:14:24: invalid operation: arr[1] - arr[0] (operator - not defined on interface)\n/tmp/tmp9avr9xj3_test.go:16:19: invalid operation: arr[i] - arr[i - 1] (operator - not defined on interface)\n/tmp/tmp9avr9xj3_test.go:17:31: invalid operation: arr[i] - arr[i - 1] (operator - not defined on interface)\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min_diff int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    // Sort the array\n    // Find the minimum difference between any two elements in the sorted array\n    return 0\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123203,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmpd4f3r45c_test.go:30: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmpd4f3r45c_test.go:30: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmpd4f3r45c_test.go:30: expected '%!s(int=4)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min_diff int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min {\n                min = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123203,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmpxd20_nsm_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmpxd20_nsm_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmpxd20_nsm_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min_diff int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    min := arr[1].(int) - arr[0].(int)\n    for i := 0; i < n-1; i++ {\n        for j := i+1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min {\n                min = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123203,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmp3nhn899v_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmp3nhn899v_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmp3nhn899v_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    if n == 0 || n == 1 {\n        return 0\n    }\n    sort(arr, 0, n-1)\n    min := arr[1].(int) - arr[0].(int)\n    for i := 2; i < n; i++ {\n        if arr[i].(int) - arr[i-1].(int) < min {\n            min = arr[i].(int) - arr[i-1].(int)\n        }\n    }\n    return min\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123198,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp5mof6fbq_test.go:13:5: undefined: sort\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    // Sort the array\n    for i := 0; i < n - 1; i++ {\n        for j := 0; j < n - i - 1; j++ {\n            if arr[j].(int) > arr[j + 1].(int) {\n                arr[j], arr[j + 1] = arr[j + 1], arr[j]\n            }\n        }\n    }\n    // Find the minimum difference\n    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 2; i < n; i++ {\n        if arr[i].(int) - arr[i - 1].(int) < min_diff {\n            min_diff = arr[i].(int) - arr[i - 1].(int)\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123203,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min_diff int\n    min_diff = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if (arr[j].(int) - arr[i].(int)) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123203,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmpmz_lbya0_test.go:37: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmpmz_lbya0_test.go:37: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmpmz_lbya0_test.go:37: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min {\n                min = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmpegj3hsuu_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmpegj3hsuu_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmpegj3hsuu_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min_diff int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min_diff int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmp5sdll603_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min int\n    for i := 0; i < n - 1; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[i].(int) - arr[j].(int) < min {\n                min = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return min\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123203,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmpvgq84yof_test.go:36: expected '%!s(int=1)', got '%!s(int=-24)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmpvgq84yof_test.go:36: expected '%!s(int=1)', got '%!s(int=-4)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmpvgq84yof_test.go:36: expected '%!s(int=4)', got '%!s(int=-15)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    // Initialize difference as infinite\n    diff := 999999999\n\n    // Find the min diff by comparing difference\n    // of all possible pairs in given array\n    for i := 0; i < n-1; i++ {\n        for j := i + 1; j < n; j++ {\n            if abs(arr[i].(int) - arr[j].(int)) < diff {\n                diff = abs(arr[i].(int) - arr[j].(int))\n            }\n        }\n    }\n    return diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123203,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpfzc4radp_test.go:17:16: undefined: abs\n/tmp/tmpfzc4radp_test.go:18:24: undefined: abs\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min_diff int = arr[1].(int) - arr[0].(int)\n\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123201,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmp1a4lwvhx_test.go:38: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmp1a4lwvhx_test.go:38: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmp1a4lwvhx_test.go:38: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    var min int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n - 1; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min {\n                min = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123199,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmpf5flmjzy_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmpf5flmjzy_test.go:36: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmpf5flmjzy_test.go:36: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[i] > arr[j] {\n                arr[i], arr[j] = arr[j], arr[i]\n            }\n        }\n    }\n\n    // Find the minimum difference\n    min_diff := arr[1] - arr[0]\n    for i := 2; i < n; i++ {\n        if arr[i] - arr[i-1] < min_diff {\n            min_diff = arr[i] - arr[i-1]\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123203,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmps9qb_lfk_test.go:13:23: invalid operation: arr[i] > arr[j] (operator > not defined on interface)\n/tmp/tmps9qb_lfk_test.go:20:24: invalid operation: arr[1] - arr[0] (operator - not defined on interface)\n/tmp/tmps9qb_lfk_test.go:22:19: invalid operation: arr[i] - arr[i - 1] (operator - not defined on interface)\n/tmp/tmps9qb_lfk_test.go:23:31: invalid operation: arr[i] - arr[i - 1] (operator - not defined on interface)\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    if n < 2 {\n        return -1\n    }\n\n    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmpyn6pntlb_test.go:40: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmpyn6pntlb_test.go:40: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmpyn6pntlb_test.go:40: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n    if n < 2 {\n        return -1\n    }\n    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n\nfunc TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517471,
      "stdout": "--- FAIL: TestFind_Min_Diff (0.00s)\n    --- FAIL: TestFind_Min_Diff/test_num__0 (0.00s)\n        tmpz_tayjar_test.go:39: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__1 (0.00s)\n        tmpz_tayjar_test.go:39: expected '%!s(int=1)', got '%!s(int=-2)'\n    --- FAIL: TestFind_Min_Diff/test_num__2 (0.00s)\n        tmpz_tayjar_test.go:39: expected '%!s(int=4)', got '%!s(int=-25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
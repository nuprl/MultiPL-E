{
  "name": "mbpp_443_largest_neg",
  "language": "go_test.go",
  "prompt": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_443_largest_neg.py",
  "prompt_terminology": "verbatim",
  "tests": "func TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
  "stop_tokens": [
    "\nfunc",
    "struct",
    "\n// "
  ],
  "completions": [
    "    var largest int\n    for _, i := range list1 {\n        if i < 0 {\n            if largest < i {\n                largest = i\n            }\n        }\n    }\n    return largest\n}\n",
    "    var largest int\n    for _, v := range list1 {\n        if v < 0 {\n            if v > largest {\n                largest = v\n            }\n        }\n    }\n    return largest\n}\n",
    "    var largest int\n    for _, v := range list1 {\n        if v < 0 {\n            if largest < v {\n                largest = v\n            }\n        }\n    }\n    return largest\n}\n",
    "    var largest_neg int = 0\n    for _, num := range list1 {\n        if num < 0 && num > largest_neg {\n            largest_neg = num\n        }\n    }\n    return largest_neg\n}\n",
    "    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n",
    "    var largest int\n    for _, num := range list1 {\n        if num < 0 {\n            if largest < num {\n                largest = num\n            }\n        }\n    }\n    return largest\n}\n",
    "    var largest int\n    for _, num := range list1 {\n        if num < 0 && num > largest {\n            largest = num\n        }\n    }\n    return largest\n}\n",
    "    var largest int\n    for _, num := range list1 {\n        if num < 0 {\n            if largest == 0 {\n                largest = num\n            } else if num > largest {\n                largest = num\n            }\n        }\n    }\n    return largest\n}\n",
    "    var largest_neg int\n    for _, num := range list1 {\n        if num < 0 {\n            if num > largest_neg {\n                largest_neg = num\n            }\n        }\n    }\n    return largest_neg\n}\n",
    "    var largest int\n    for _, v := range list1 {\n        if v < 0 {\n            if v > largest {\n                largest = v\n            }\n        }\n    }\n    return largest\n}\n",
    "    var largest_neg int\n    for _, num := range list1 {\n        if num < 0 {\n            if largest_neg < num {\n                largest_neg = num\n            }\n        }\n    }\n    return largest_neg\n}\n",
    "    var largest int\n    for _, i := range list1 {\n        if i < 0 {\n            if largest < i {\n                largest = i\n            }\n        }\n    }\n    return largest\n}\n",
    "    var largest int\n    for _, v := range list1 {\n        if v < 0 {\n            if largest == 0 {\n                largest = v\n            } else if v > largest {\n                largest = v\n            }\n        }\n    }\n    return largest\n}\n",
    "    largest := 0\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n",
    "    var largest int\n    for _, num := range list1 {\n        if num < 0 {\n            if largest < num {\n                largest = num\n            }\n        }\n    }\n    return largest\n}\n",
    "    var largest int\n    for _, value := range list1 {\n        if value < 0 {\n            if largest < value {\n                largest = value\n            }\n        }\n    }\n    return largest\n}\n",
    "    var largest_neg int\n    for _, num := range list1 {\n        if num < 0 {\n            if largest_neg < num {\n                largest_neg = num\n            }\n        }\n    }\n    return largest_neg\n}\n",
    "    var largest_neg int\n    for _, num := range list1 {\n        if num < 0 {\n            if largest_neg < num {\n                largest_neg = num\n            }\n        }\n    }\n    return largest_neg\n}\n",
    "    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n",
    "    var largest int\n    for _, v := range list1 {\n        if v < 0 {\n            if v > largest {\n                largest = v\n            }\n        }\n    }\n    return largest\n}\n"
  ]
}
{
  "name": "mbpp_116_tuple_to_int",
  "language": "go_test.go",
  "prompt": "package tuple_to_int_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert a given tuple of positive integers into a single integer.\nfunc tuple_to_int(nums []interface{}) int {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_116_tuple_to_int.py",
  "prompt_terminology": "verbatim",
  "tests": "func TestTuple_To_Int(t *testing.T) {\n  candidate := tuple_to_int\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 2, 3}), expected: 123 },\n     { actual: candidate([]interface{}{4, 5, 6}), expected: 456 },\n     { actual: candidate([]interface{}{5, 6, 7}), expected: 567 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
  "stop_tokens": [
    "\nfunc",
    "struct",
    "\n// "
  ],
  "completions": [
    "    var result int = 0\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, v := range nums {\n        result = result * 10 + v.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int = 0\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int = 0\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, n := range nums {\n        result = result * 10 + n.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int = 0\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, n := range nums {\n        result = result * 10 + n.(int)\n    }\n    return result\n}\n",
    "    var result int = 0\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int = 0\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int = 0\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var res int\n    for _, v := range nums {\n        res = res * 10 + v.(int)\n    }\n    return res\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, n := range nums {\n        result = result * 10 + n.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var res int\n    for _, v := range nums {\n        res = res * 10 + v.(int)\n    }\n    return res\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int = 0\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int = 0\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int = 0\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int = 0\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var res int\n    for _, v := range nums {\n        res = res * 10 + v.(int)\n    }\n    return res\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var res int\n    for _, num := range nums {\n        res = res * 10 + num.(int)\n    }\n    return res\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int = 0\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int = 0\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result *= 10\n        result += num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var res int\n    for _, num := range nums {\n        res = res * 10 + num.(int)\n    }\n    return res\n}\n",
    "    var result int = 0\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int = 0\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int = 0\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int = 0\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int = 0\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int = 0\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int = 0\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    result := 0\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int = 0\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var res int\n    for _, num := range nums {\n        res = res * 10 + num.(int)\n    }\n    return res\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int = 0\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, n := range nums {\n        result = result * 10 + n.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int = 0\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int = 0\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int = 0\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int = 0\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, v := range nums {\n        result = result * 10 + v.(int)\n    }\n    return result\n}\n",
    "    var result int = 0\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int = 0\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int = 0\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int = 0\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int = 0\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int = 0\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int = 0\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int = 0\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n\n    return result\n}\n",
    "    var result int\n    for _, v := range nums {\n        result = result * 10 + v.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, n := range nums {\n        result = result * 10 + n.(int)\n    }\n    return result\n}\n",
    "    var result int = 0\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, n := range nums {\n        result = result * 10 + n.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int = 0\n    var multiplier int = 1\n    for i := len(nums) - 1; i >= 0; i-- {\n        result += nums[i].(int) * multiplier\n        multiplier *= 10\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var res int\n    for _, v := range nums {\n        res = res * 10 + v.(int)\n    }\n    return res\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, v := range nums {\n        result = result * 10 + v.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int = 0\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, v := range nums {\n        result = result * 10 + v.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    var multiplier int = 1\n    for i := len(nums) - 1; i >= 0; i-- {\n        result += nums[i].(int) * multiplier\n        multiplier *= 10\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, v := range nums {\n        result = result * 10 + v.(int)\n    }\n    return result\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var res int\n    for _, num := range nums {\n        res = res * 10 + num.(int)\n    }\n    return res\n}\n",
    "    var result int\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n",
    "    var result int = 0\n    for _, num := range nums {\n        result = result * 10 + num.(int)\n    }\n    return result\n}\n"
  ]
}
{
  "name": "mbpp_592_sum_Of_product",
  "language": "go_test.go",
  "prompt": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_592_sum_Of_product.py",
  "prompt_terminology": "verbatim",
  "tests": "func TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
  "stop_tokens": [
    "\nfunc",
    "struct",
    "\n// "
  ],
  "results": [
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        var product int = 1\n        for j := 1; j <= i; j++ {\n            product *= j\n        }\n        sum += product\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510319,
      "stdout": "--- FAIL: TestSum_Of_Product (0.00s)\n    --- FAIL: TestSum_Of_Product/test_num__0 (0.00s)\n        tmp35wclry9_test.go:36: expected '%!s(int=15)', got '%!s(int=9)'\n    --- FAIL: TestSum_Of_Product/test_num__1 (0.00s)\n        tmp35wclry9_test.go:36: expected '%!s(int=56)', got '%!s(int=33)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        for j := 1; j <= i; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510319,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpmuogg8_6_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510319,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpnq5oqd6p_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i + 1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510319,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpspkp7c3n_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 0; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i+1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510319,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmprxh8kc8y_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * (i + 1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510319,
      "stdout": "--- FAIL: TestSum_Of_Product (0.00s)\n    --- FAIL: TestSum_Of_Product/test_num__0 (0.00s)\n        tmpqjz9arwp_test.go:32: expected '%!s(int=15)', got '%!s(int=20)'\n    --- FAIL: TestSum_Of_Product/test_num__1 (0.00s)\n        tmpqjz9arwp_test.go:32: expected '%!s(int=56)', got '%!s(int=40)'\n    --- FAIL: TestSum_Of_Product/test_num__2 (0.00s)\n        tmpqjz9arwp_test.go:32: expected '%!s(int=1)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        for j := 1; j <= i; j++ {\n            sum += (binomial_coefficient(i, j) * binomial_coefficient(i, j+1))\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510319,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpnb1td4wy_test.go:13:21: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510319,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpnq5oqd6p_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 0; i <= n; i++ {\n        sum += binomial_coefficient(n, i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510319,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp3ni1lmdb_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        for j := 1; j <= i; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510319,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp25nn_7tb_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        for j := 1; j <= i; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510319,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp25nn_7tb_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        for j := 1; j <= i; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510319,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp25nn_7tb_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int = 0\n    var product int = 1\n    for i := 1; i <= n; i++ {\n        product = product * (n - i + 1) / i\n        sum = sum + product\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510319,
      "stdout": "--- FAIL: TestSum_Of_Product (0.00s)\n    --- FAIL: TestSum_Of_Product/test_num__0 (0.00s)\n        tmpw2nurz_w_test.go:34: expected '%!s(int=15)', got '%!s(int=7)'\n    --- FAIL: TestSum_Of_Product/test_num__1 (0.00s)\n        tmpw2nurz_w_test.go:34: expected '%!s(int=56)', got '%!s(int=15)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510319,
      "stdout": "--- FAIL: TestSum_Of_Product (0.00s)\n    --- FAIL: TestSum_Of_Product/test_num__0 (0.00s)\n        tmpmpzdaql9_test.go:29: expected '%!s(int=15)', got '%!s(int=0)'\n    --- FAIL: TestSum_Of_Product/test_num__1 (0.00s)\n        tmpmpzdaql9_test.go:29: expected '%!s(int=56)', got '%!s(int=0)'\n    --- FAIL: TestSum_Of_Product/test_num__2 (0.00s)\n        tmpmpzdaql9_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510319,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpl8fxyho7_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        for j := 1; j <= n; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510319,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpxd2t9z5a_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        for j := 1; j <= i; j++ {\n            sum += binomial(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510319,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmphc1ev3pg_test.go:13:20: undefined: binomial\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    if n == 1 {\n        return 1\n    }\n    return n * sum_Of_product(n-1)\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510319,
      "stdout": "--- FAIL: TestSum_Of_Product (0.00s)\n    --- FAIL: TestSum_Of_Product/test_num__0 (0.00s)\n        tmp67ao3soz_test.go:31: expected '%!s(int=15)', got '%!s(int=6)'\n    --- FAIL: TestSum_Of_Product/test_num__1 (0.00s)\n        tmp67ao3soz_test.go:31: expected '%!s(int=56)', got '%!s(int=24)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    if n == 1 {\n        return 1\n    }\n    return n * sum_Of_product(n - 1)\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510319,
      "stdout": "--- FAIL: TestSum_Of_Product (0.00s)\n    --- FAIL: TestSum_Of_Product/test_num__0 (0.00s)\n        tmp5wc24xsw_test.go:31: expected '%!s(int=15)', got '%!s(int=6)'\n    --- FAIL: TestSum_Of_Product/test_num__1 (0.00s)\n        tmp5wc24xsw_test.go:31: expected '%!s(int=56)', got '%!s(int=24)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    // Write your code here\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510319,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpfnkesixp_test.go:13:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i + 1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpk4xftofl_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += product(i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmptvqrfor9_test.go:12:16: undefined: product\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp4vqumvsa_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 0; i < n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i + 1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpn3za97vz_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * (i + 1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "--- FAIL: TestSum_Of_Product (0.00s)\n    --- FAIL: TestSum_Of_Product/test_num__0 (0.00s)\n        tmpq8dg4wo__test.go:32: expected '%!s(int=15)', got '%!s(int=20)'\n    --- FAIL: TestSum_Of_Product/test_num__1 (0.00s)\n        tmpq8dg4wo__test.go:32: expected '%!s(int=56)', got '%!s(int=40)'\n    --- FAIL: TestSum_Of_Product/test_num__2 (0.00s)\n        tmpq8dg4wo__test.go:32: expected '%!s(int=1)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        for j := 1; j <= i; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510319,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpmuogg8_6_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 0; i <= n; i++ {\n        for j := 0; j <= i; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpcfq8sox__test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        for j := 1; j <= i; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510319,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp25nn_7tb_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 0; i <= n; i++ {\n        for j := 0; j <= i; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpcfq8sox__test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += product(i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmptvqrfor9_test.go:12:16: undefined: product\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        for j := 1; j <= i; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp5a4yl_k0_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 0; i <= n; i++ {\n        for j := 0; j <= i; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpcfq8sox__test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        for j := 1; j <= i; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510319,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp25nn_7tb_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i + 1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp3my8d2bv_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i + 1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp3my8d2bv_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510319,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpnq5oqd6p_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * (i + 1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "--- FAIL: TestSum_Of_Product (0.00s)\n    --- FAIL: TestSum_Of_Product/test_num__0 (0.00s)\n        tmpq8dg4wo__test.go:32: expected '%!s(int=15)', got '%!s(int=20)'\n    --- FAIL: TestSum_Of_Product/test_num__1 (0.00s)\n        tmpq8dg4wo__test.go:32: expected '%!s(int=56)', got '%!s(int=40)'\n    --- FAIL: TestSum_Of_Product/test_num__2 (0.00s)\n        tmpq8dg4wo__test.go:32: expected '%!s(int=1)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int = 0\n    var i int = 1\n    for ; i <= n; i++ {\n        sum += binomial_coefficient(n, i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpi3_lg46f_test.go:13:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i+1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpcmpwplfh_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        for j := 1; j <= i; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510319,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpmuogg8_6_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        for j := 1; j <= i; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510319,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp25nn_7tb_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i+1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpcmpwplfh_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i+1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmppow25m2m_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += product(i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp6rrlep3__test.go:12:16: undefined: product\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 0; i < n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i+1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp240kr0ly_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 0; i <= n; i++ {\n        for j := 0; j <= n; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpofe7vnoz_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        for j := 1; j <= i; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp5a4yl_k0_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i+1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmppow25m2m_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i+1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmppow25m2m_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            sum += (i + 1) * (j + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "--- FAIL: TestSum_Of_Product (0.00s)\n    --- FAIL: TestSum_Of_Product/test_num__0 (0.00s)\n        tmp04vlwwvz_test.go:34: expected '%!s(int=15)', got '%!s(int=11)'\n    --- FAIL: TestSum_Of_Product/test_num__1 (0.00s)\n        tmp04vlwwvz_test.go:34: expected '%!s(int=56)', got '%!s(int=35)'\n    --- FAIL: TestSum_Of_Product/test_num__2 (0.00s)\n        tmp04vlwwvz_test.go:34: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp4vqumvsa_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * (i + 1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "--- FAIL: TestSum_Of_Product (0.00s)\n    --- FAIL: TestSum_Of_Product/test_num__0 (0.00s)\n        tmp107l4lia_test.go:32: expected '%!s(int=15)', got '%!s(int=20)'\n    --- FAIL: TestSum_Of_Product/test_num__1 (0.00s)\n        tmp107l4lia_test.go:32: expected '%!s(int=56)', got '%!s(int=40)'\n    --- FAIL: TestSum_Of_Product/test_num__2 (0.00s)\n        tmp107l4lia_test.go:32: expected '%!s(int=1)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int = 0\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            sum += (n - i) * (n - j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "--- FAIL: TestSum_Of_Product (0.00s)\n    --- FAIL: TestSum_Of_Product/test_num__0 (0.00s)\n        tmpk3kq42s2_test.go:34: expected '%!s(int=15)', got '%!s(int=11)'\n    --- FAIL: TestSum_Of_Product/test_num__1 (0.00s)\n        tmpk3kq42s2_test.go:34: expected '%!s(int=56)', got '%!s(int=35)'\n    --- FAIL: TestSum_Of_Product/test_num__2 (0.00s)\n        tmpk3kq42s2_test.go:34: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp4vqumvsa_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        for j := 1; j <= i; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510319,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpmuogg8_6_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i+1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpcmpwplfh_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 0; i <= n; i++ {\n        sum += binomial_coefficient(n, i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510319,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp3ni1lmdb_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int = 0\n    for i := 0; i < n; i++ {\n        for j := 0; j < n; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpuws6hlxh_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += product(i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp6rrlep3__test.go:12:16: undefined: product\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        for j := 1; j <= i; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp5a4yl_k0_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510319,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpnq5oqd6p_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i+1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpcmpwplfh_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += (n - i + 1) * i\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "--- FAIL: TestSum_Of_Product (0.00s)\n    --- FAIL: TestSum_Of_Product/test_num__0 (0.00s)\n        tmpqgsawfar_test.go:32: expected '%!s(int=15)', got '%!s(int=10)'\n    --- FAIL: TestSum_Of_Product/test_num__1 (0.00s)\n        tmpqgsawfar_test.go:32: expected '%!s(int=56)', got '%!s(int=20)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 0; i <= n; i++ {\n        for j := 0; j <= i; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpcfq8sox__test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510319,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpnq5oqd6p_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        for j := 1; j <= n; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpou17duyf_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        for j := i + 1; j <= n; j++ {\n            sum += i * j\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "--- FAIL: TestSum_Of_Product (0.00s)\n    --- FAIL: TestSum_Of_Product/test_num__0 (0.00s)\n        tmp5nxxulop_test.go:34: expected '%!s(int=15)', got '%!s(int=11)'\n    --- FAIL: TestSum_Of_Product/test_num__1 (0.00s)\n        tmp5nxxulop_test.go:34: expected '%!s(int=56)', got '%!s(int=35)'\n    --- FAIL: TestSum_Of_Product/test_num__2 (0.00s)\n        tmp5nxxulop_test.go:34: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += (n - i + 1) * (n - i + 1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "--- FAIL: TestSum_Of_Product (0.00s)\n    --- FAIL: TestSum_Of_Product/test_num__0 (0.00s)\n        tmpex6yjd04_test.go:32: expected '%!s(int=15)', got '%!s(int=14)'\n    --- FAIL: TestSum_Of_Product/test_num__1 (0.00s)\n        tmpex6yjd04_test.go:32: expected '%!s(int=56)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        for j := 1; j <= i; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510319,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp25nn_7tb_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        for j := 1; j <= i; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp5a4yl_k0_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * (n - i + 1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "--- FAIL: TestSum_Of_Product (0.00s)\n    --- FAIL: TestSum_Of_Product/test_num__0 (0.00s)\n        tmp9z91z_tt_test.go:32: expected '%!s(int=15)', got '%!s(int=10)'\n    --- FAIL: TestSum_Of_Product/test_num__1 (0.00s)\n        tmp9z91z_tt_test.go:32: expected '%!s(int=56)', got '%!s(int=20)'\nFAIL\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        var product int = 1\n        for j := i; j <= n; j++ {\n            product *= j\n        }\n        sum += product\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123392,
      "stdout": "--- FAIL: TestSum_Of_Product (0.00s)\n    --- FAIL: TestSum_Of_Product/test_num__1 (0.00s)\n        tmpbqg_m8wg_test.go:36: expected '%!s(int=56)', got '%!s(int=64)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i + 1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510319,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpspkp7c3n_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i + 1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp3my8d2bv_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510319,
      "stdout": "--- FAIL: TestSum_Of_Product (0.00s)\n    --- FAIL: TestSum_Of_Product/test_num__0 (0.00s)\n        tmpmpzdaql9_test.go:29: expected '%!s(int=15)', got '%!s(int=0)'\n    --- FAIL: TestSum_Of_Product/test_num__1 (0.00s)\n        tmpmpzdaql9_test.go:29: expected '%!s(int=56)', got '%!s(int=0)'\n    --- FAIL: TestSum_Of_Product/test_num__2 (0.00s)\n        tmpmpzdaql9_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        for j := i + 1; j <= n; j++ {\n            sum += i * j\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123392,
      "stdout": "--- FAIL: TestSum_Of_Product (0.00s)\n    --- FAIL: TestSum_Of_Product/test_num__0 (0.00s)\n        tmpuh7z4th6_test.go:34: expected '%!s(int=15)', got '%!s(int=11)'\n    --- FAIL: TestSum_Of_Product/test_num__1 (0.00s)\n        tmpuh7z4th6_test.go:34: expected '%!s(int=56)', got '%!s(int=35)'\n    --- FAIL: TestSum_Of_Product/test_num__2 (0.00s)\n        tmpuh7z4th6_test.go:34: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i < n; i++ {\n        sum += binomial(n, i) * binomial(n, i + 1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123392,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpawzm25pb_test.go:12:16: undefined: binomial\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += (i * (i + 1))\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123392,
      "stdout": "--- FAIL: TestSum_Of_Product (0.00s)\n    --- FAIL: TestSum_Of_Product/test_num__0 (0.00s)\n        tmpcaxinlhu_test.go:32: expected '%!s(int=15)', got '%!s(int=20)'\n    --- FAIL: TestSum_Of_Product/test_num__1 (0.00s)\n        tmpcaxinlhu_test.go:32: expected '%!s(int=56)', got '%!s(int=40)'\n    --- FAIL: TestSum_Of_Product/test_num__2 (0.00s)\n        tmpcaxinlhu_test.go:32: expected '%!s(int=1)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        for j := 1; j <= i; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp5a4yl_k0_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i+1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpcmpwplfh_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * (i + 1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "--- FAIL: TestSum_Of_Product (0.00s)\n    --- FAIL: TestSum_Of_Product/test_num__0 (0.00s)\n        tmpq8dg4wo__test.go:32: expected '%!s(int=15)', got '%!s(int=20)'\n    --- FAIL: TestSum_Of_Product/test_num__1 (0.00s)\n        tmpq8dg4wo__test.go:32: expected '%!s(int=56)', got '%!s(int=40)'\n    --- FAIL: TestSum_Of_Product/test_num__2 (0.00s)\n        tmpq8dg4wo__test.go:32: expected '%!s(int=1)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510319,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpnq5oqd6p_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        for j := i + 1; j <= n; j++ {\n            sum += i * j\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123392,
      "stdout": "--- FAIL: TestSum_Of_Product (0.00s)\n    --- FAIL: TestSum_Of_Product/test_num__0 (0.00s)\n        tmpuh7z4th6_test.go:34: expected '%!s(int=15)', got '%!s(int=11)'\n    --- FAIL: TestSum_Of_Product/test_num__1 (0.00s)\n        tmpuh7z4th6_test.go:34: expected '%!s(int=56)', got '%!s(int=35)'\n    --- FAIL: TestSum_Of_Product/test_num__2 (0.00s)\n        tmpuh7z4th6_test.go:34: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510319,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpnq5oqd6p_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i + 1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp3my8d2bv_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i+1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpcmpwplfh_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    if n == 0 {\n        return 0\n    }\n    return n + sum_Of_product(n-1)\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123392,
      "stdout": "--- FAIL: TestSum_Of_Product (0.00s)\n    --- FAIL: TestSum_Of_Product/test_num__0 (0.00s)\n        tmpb28lfyh3_test.go:31: expected '%!s(int=15)', got '%!s(int=6)'\n    --- FAIL: TestSum_Of_Product/test_num__1 (0.00s)\n        tmpb28lfyh3_test.go:31: expected '%!s(int=56)', got '%!s(int=10)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 0; i < n; i++ {\n        for j := 0; j < n; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123392,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp4q1l8bli_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 0; i <= n; i++ {\n        for j := 0; j <= i; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpcfq8sox__test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 0; i < n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i + 1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123392,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp6olcmjk9_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    if n < 0 {\n        return 0\n    }\n    if n == 0 {\n        return 1\n    }\n    return n * sum_Of_product(n-1)\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123392,
      "stdout": "--- FAIL: TestSum_Of_Product (0.00s)\n    --- FAIL: TestSum_Of_Product/test_num__0 (0.00s)\n        tmpezhd0jta_test.go:34: expected '%!s(int=15)', got '%!s(int=6)'\n    --- FAIL: TestSum_Of_Product/test_num__1 (0.00s)\n        tmpezhd0jta_test.go:34: expected '%!s(int=56)', got '%!s(int=24)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * (i + 1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "--- FAIL: TestSum_Of_Product (0.00s)\n    --- FAIL: TestSum_Of_Product/test_num__0 (0.00s)\n        tmp107l4lia_test.go:32: expected '%!s(int=15)', got '%!s(int=20)'\n    --- FAIL: TestSum_Of_Product/test_num__1 (0.00s)\n        tmp107l4lia_test.go:32: expected '%!s(int=56)', got '%!s(int=40)'\n    --- FAIL: TestSum_Of_Product/test_num__2 (0.00s)\n        tmp107l4lia_test.go:32: expected '%!s(int=1)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        for j := 1; j <= i; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp5a4yl_k0_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    if n == 1 {\n        return 1\n    }\n    return (n * (n + 1) / 2) * sum_Of_product(n - 1)\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123392,
      "stdout": "--- FAIL: TestSum_Of_Product (0.00s)\n    --- FAIL: TestSum_Of_Product/test_num__0 (0.00s)\n        tmpmvywuvjf_test.go:31: expected '%!s(int=15)', got '%!s(int=18)'\n    --- FAIL: TestSum_Of_Product/test_num__1 (0.00s)\n        tmpmvywuvjf_test.go:31: expected '%!s(int=56)', got '%!s(int=180)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510319,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpnq5oqd6p_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        for j := 1; j <= i; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510319,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpmuogg8_6_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        for j := 1; j <= i; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp5a4yl_k0_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += product(i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp6rrlep3__test.go:12:16: undefined: product\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += product(i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp6rrlep3__test.go:12:16: undefined: product\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp4vqumvsa_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i + 1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp3my8d2bv_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 0; i < n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i + 1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpn3za97vz_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510319,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpnq5oqd6p_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int = 0\n    var product int = 1\n    for i := 1; i <= n; i++ {\n        product *= i\n        sum += product\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123392,
      "stdout": "--- FAIL: TestSum_Of_Product (0.00s)\n    --- FAIL: TestSum_Of_Product/test_num__0 (0.00s)\n        tmpi21fwrhc_test.go:34: expected '%!s(int=15)', got '%!s(int=9)'\n    --- FAIL: TestSum_Of_Product/test_num__1 (0.00s)\n        tmpi21fwrhc_test.go:34: expected '%!s(int=56)', got '%!s(int=33)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += product(i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmptvqrfor9_test.go:12:16: undefined: product\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        var product int = 1\n        for j := 1; j <= i; j++ {\n            product *= j\n        }\n        sum += product\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510319,
      "stdout": "--- FAIL: TestSum_Of_Product (0.00s)\n    --- FAIL: TestSum_Of_Product/test_num__0 (0.00s)\n        tmp35wclry9_test.go:36: expected '%!s(int=15)', got '%!s(int=9)'\n    --- FAIL: TestSum_Of_Product/test_num__1 (0.00s)\n        tmp35wclry9_test.go:36: expected '%!s(int=56)', got '%!s(int=33)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 0; i <= n; i++ {\n        for j := 0; j <= i; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpcfq8sox__test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int = 0\n    for i := 0; i <= n; i++ {\n        for j := i + 1; j <= n; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123392,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpm6pmx_gu_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        for j := 1; j <= i; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp5a4yl_k0_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 0; i < n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i+1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123392,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp7dhsxt71_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i+1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmppow25m2m_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 0; i < n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i+1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp240kr0ly_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 0; i < n; i++ {\n        sum += product(i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123392,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpp3lg0ftn_test.go:12:16: undefined: product\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 0; i <= n; i++ {\n        sum += product(i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123392,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpr_v_18nt_test.go:12:16: undefined: product\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 0; i <= n; i++ {\n        sum += product(i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123392,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpr_v_18nt_test.go:12:16: undefined: product\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i+1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmppow25m2m_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510319,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpnq5oqd6p_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i + 1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp3my8d2bv_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        for j := 1; j <= i; j++ {\n            sum += (i - j + 1) * (j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123392,
      "stdout": "--- FAIL: TestSum_Of_Product (0.00s)\n    --- FAIL: TestSum_Of_Product/test_num__1 (0.00s)\n        tmphdfg183h_test.go:34: expected '%!s(int=56)', got '%!s(int=35)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += factorial(n) / (factorial(i) * factorial(n - i))\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123392,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpy451g12g_test.go:12:16: undefined: factorial\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp4vqumvsa_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510319,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpnq5oqd6p_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        for j := 1; j <= i; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp5a4yl_k0_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        for j := 1; j <= i; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp5a4yl_k0_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int = 0\n    for i := 0; i < n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i + 1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123392,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpijiqd6bd_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += product(i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp6rrlep3__test.go:12:16: undefined: product\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += product(i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp6rrlep3__test.go:12:16: undefined: product\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += (i * (i + 1))\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123393,
      "stdout": "--- FAIL: TestSum_Of_Product (0.00s)\n    --- FAIL: TestSum_Of_Product/test_num__0 (0.00s)\n        tmpznu4ndhl_test.go:32: expected '%!s(int=15)', got '%!s(int=20)'\n    --- FAIL: TestSum_Of_Product/test_num__1 (0.00s)\n        tmpznu4ndhl_test.go:32: expected '%!s(int=56)', got '%!s(int=40)'\n    --- FAIL: TestSum_Of_Product/test_num__2 (0.00s)\n        tmpznu4ndhl_test.go:32: expected '%!s(int=1)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i + 1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp3my8d2bv_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i + 1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp3my8d2bv_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510319,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpnq5oqd6p_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i+1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmppow25m2m_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 0; i < n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i + 1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123392,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp6olcmjk9_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += product(i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp6rrlep3__test.go:12:16: undefined: product\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int = 0\n    for i := 0; i <= n; i++ {\n        for j := 0; j <= n; j++ {\n            sum += binomial_coefficient(i, j) * binomial_coefficient(n-i, n-j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123392,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp0wvbctki_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    if n == 1 {\n        return 1\n    }\n    return n * sum_Of_product(n-1)\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510319,
      "stdout": "--- FAIL: TestSum_Of_Product (0.00s)\n    --- FAIL: TestSum_Of_Product/test_num__0 (0.00s)\n        tmp67ao3soz_test.go:31: expected '%!s(int=15)', got '%!s(int=6)'\n    --- FAIL: TestSum_Of_Product/test_num__1 (0.00s)\n        tmp67ao3soz_test.go:31: expected '%!s(int=56)', got '%!s(int=24)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i + 1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp3my8d2bv_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        for j := 1; j <= i; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510319,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp25nn_7tb_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += binomial(n, i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123392,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpvg01bnh7_test.go:12:16: undefined: binomial\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int = 0\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            sum += (i + 1) * (j + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123393,
      "stdout": "--- FAIL: TestSum_Of_Product (0.00s)\n    --- FAIL: TestSum_Of_Product/test_num__0 (0.00s)\n        tmpp8icttkd_test.go:34: expected '%!s(int=15)', got '%!s(int=11)'\n    --- FAIL: TestSum_Of_Product/test_num__1 (0.00s)\n        tmpp8icttkd_test.go:34: expected '%!s(int=56)', got '%!s(int=35)'\n    --- FAIL: TestSum_Of_Product/test_num__2 (0.00s)\n        tmpp8icttkd_test.go:34: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        for j := 1; j <= i; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510319,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp25nn_7tb_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i + 1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp3my8d2bv_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        for j := 1; j <= n; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123392,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpxras41n1_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int = 0\n    var product int = 1\n    for i := 1; i <= n; i++ {\n        product = product * i\n        sum = sum + product\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123393,
      "stdout": "--- FAIL: TestSum_Of_Product (0.00s)\n    --- FAIL: TestSum_Of_Product/test_num__0 (0.00s)\n        tmp6o9g31eg_test.go:34: expected '%!s(int=15)', got '%!s(int=9)'\n    --- FAIL: TestSum_Of_Product/test_num__1 (0.00s)\n        tmp6o9g31eg_test.go:34: expected '%!s(int=56)', got '%!s(int=33)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i + 1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpk4xftofl_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return n * sum_Of_product(n-1)\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123393,
      "stdout": "--- FAIL: TestSum_Of_Product (0.00s)\n    --- FAIL: TestSum_Of_Product/test_num__0 (0.00s)\n        tmpm6z9_kzo_test.go:34: expected '%!s(int=15)', got '%!s(int=6)'\n    --- FAIL: TestSum_Of_Product/test_num__1 (0.00s)\n        tmpm6z9_kzo_test.go:34: expected '%!s(int=56)', got '%!s(int=24)'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        for j := 1; j <= i; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510319,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpmuogg8_6_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510319,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpnq5oqd6p_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        for j := 1; j <= i; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp5a4yl_k0_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += product(i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123393,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp7xysrj4h_test.go:12:16: undefined: product\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i+1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpcmpwplfh_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i+1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmppow25m2m_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 0; i <= n; i++ {\n        sum += binomial_coefficient(n, i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510319,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp3ni1lmdb_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        for j := 1; j <= i; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510319,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp25nn_7tb_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510319,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpnq5oqd6p_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        for j := 1; j <= i; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510319,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp25nn_7tb_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 0; i < n; i++ {\n        sum += product(i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123393,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp2oqk0ew6_test.go:12:16: undefined: product\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += product(i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmptvqrfor9_test.go:12:16: undefined: product\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int = 0\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            sum += (i + 1) * (j + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123393,
      "stdout": "--- FAIL: TestSum_Of_Product (0.00s)\n    --- FAIL: TestSum_Of_Product/test_num__0 (0.00s)\n        tmpp8icttkd_test.go:34: expected '%!s(int=15)', got '%!s(int=11)'\n    --- FAIL: TestSum_Of_Product/test_num__1 (0.00s)\n        tmpp8icttkd_test.go:34: expected '%!s(int=56)', got '%!s(int=35)'\n    --- FAIL: TestSum_Of_Product/test_num__2 (0.00s)\n        tmpp8icttkd_test.go:34: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        for j := 1; j <= i; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp5a4yl_k0_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i+1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpcmpwplfh_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        for j := 1; j <= i; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510319,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpmuogg8_6_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i + 1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp3my8d2bv_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i+1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmppow25m2m_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        for j := 1; j <= i; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510319,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp25nn_7tb_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        for j := i + 1; j <= n; j++ {\n            sum += i * j\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "--- FAIL: TestSum_Of_Product (0.00s)\n    --- FAIL: TestSum_Of_Product/test_num__0 (0.00s)\n        tmp5nxxulop_test.go:34: expected '%!s(int=15)', got '%!s(int=11)'\n    --- FAIL: TestSum_Of_Product/test_num__1 (0.00s)\n        tmp5nxxulop_test.go:34: expected '%!s(int=56)', got '%!s(int=35)'\n    --- FAIL: TestSum_Of_Product/test_num__2 (0.00s)\n        tmp5nxxulop_test.go:34: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        for j := 1; j <= i; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510319,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp25nn_7tb_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        for j := 1; j <= i; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510319,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp25nn_7tb_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 0; i <= n; i++ {\n        for j := 0; j <= i; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpcfq8sox__test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        for j := 1; j <= i; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510319,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp25nn_7tb_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            sum += (i + 1) * (j + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "--- FAIL: TestSum_Of_Product (0.00s)\n    --- FAIL: TestSum_Of_Product/test_num__0 (0.00s)\n        tmp04vlwwvz_test.go:34: expected '%!s(int=15)', got '%!s(int=11)'\n    --- FAIL: TestSum_Of_Product/test_num__1 (0.00s)\n        tmp04vlwwvz_test.go:34: expected '%!s(int=56)', got '%!s(int=35)'\n    --- FAIL: TestSum_Of_Product/test_num__2 (0.00s)\n        tmp04vlwwvz_test.go:34: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return n * sum_Of_product(n-1)\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123393,
      "stdout": "--- FAIL: TestSum_Of_Product (0.00s)\n    --- FAIL: TestSum_Of_Product/test_num__0 (0.00s)\n        tmpm6z9_kzo_test.go:34: expected '%!s(int=15)', got '%!s(int=6)'\n    --- FAIL: TestSum_Of_Product/test_num__1 (0.00s)\n        tmpm6z9_kzo_test.go:34: expected '%!s(int=56)', got '%!s(int=24)'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 0; i <= n; i++ {\n        for j := 0; j <= i; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpcfq8sox__test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i-1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123393,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpuvmdqr6q_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 0; i <= n; i++ {\n        for j := 0; j <= i; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpcfq8sox__test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i+1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmppow25m2m_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * (i + 1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510319,
      "stdout": "--- FAIL: TestSum_Of_Product (0.00s)\n    --- FAIL: TestSum_Of_Product/test_num__0 (0.00s)\n        tmpqjz9arwp_test.go:32: expected '%!s(int=15)', got '%!s(int=20)'\n    --- FAIL: TestSum_Of_Product/test_num__1 (0.00s)\n        tmpqjz9arwp_test.go:32: expected '%!s(int=56)', got '%!s(int=40)'\n    --- FAIL: TestSum_Of_Product/test_num__2 (0.00s)\n        tmpqjz9arwp_test.go:32: expected '%!s(int=1)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i+1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmppow25m2m_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i + 1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp3my8d2bv_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += factorial(n) / (factorial(i) * factorial(n - i))\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123393,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpt1co5sk7_test.go:12:16: undefined: factorial\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 0; i <= n; i++ {\n        for j := i + 1; j <= n; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123393,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpcfmoed2l_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 0; i <= n; i++ {\n        for j := i + 1; j <= n; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123393,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpcfmoed2l_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += product(i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp6rrlep3__test.go:12:16: undefined: product\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        for j := 1; j <= i; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp5a4yl_k0_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 0; i <= n; i++ {\n        for j := 0; j <= i; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpcfq8sox__test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i + 1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp3my8d2bv_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i + 1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp3my8d2bv_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 0; i < n; i++ {\n        sum += binomial_coefficient(n, i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123393,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpktyysi56_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        for j := 1; j <= i; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510319,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp25nn_7tb_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        for j := 1; j <= n; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510319,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpxd2t9z5a_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i+1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmppow25m2m_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i+1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpcmpwplfh_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i+1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmppow25m2m_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += product(i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp6rrlep3__test.go:12:16: undefined: product\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += (factorial(n) / (factorial(i) * factorial(n-i)))\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123393,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpz4w08d39_test.go:12:17: undefined: factorial\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        for j := i + 1; j <= n; j++ {\n            sum += i * j\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123390,
      "stdout": "--- FAIL: TestSum_Of_Product (0.00s)\n    --- FAIL: TestSum_Of_Product/test_num__0 (0.00s)\n        tmp5nxxulop_test.go:34: expected '%!s(int=15)', got '%!s(int=11)'\n    --- FAIL: TestSum_Of_Product/test_num__1 (0.00s)\n        tmp5nxxulop_test.go:34: expected '%!s(int=56)', got '%!s(int=35)'\n    --- FAIL: TestSum_Of_Product/test_num__2 (0.00s)\n        tmp5nxxulop_test.go:34: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 0; i <= n; i++ {\n        sum += binomial_coefficient(n, i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510319,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp3ni1lmdb_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        for j := 1; j <= i; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510319,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp25nn_7tb_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return n * sum_Of_product(n-1)\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123393,
      "stdout": "--- FAIL: TestSum_Of_Product (0.00s)\n    --- FAIL: TestSum_Of_Product/test_num__0 (0.00s)\n        tmpm6z9_kzo_test.go:34: expected '%!s(int=15)', got '%!s(int=6)'\n    --- FAIL: TestSum_Of_Product/test_num__1 (0.00s)\n        tmpm6z9_kzo_test.go:34: expected '%!s(int=56)', got '%!s(int=24)'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510319,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpnq5oqd6p_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    }
  ]
}
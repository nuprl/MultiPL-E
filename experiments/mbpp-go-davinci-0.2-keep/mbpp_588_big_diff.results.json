{
  "name": "mbpp_588_big_diff",
  "language": "go_test.go",
  "prompt": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_588_big_diff.py",
  "prompt_terminology": "verbatim",
  "tests": "func TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
  "stop_tokens": [
    "\nfunc",
    "struct",
    "\n// "
  ],
  "results": [
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for i, v := range nums {\n        if i == 0 {\n            max, min = v, v\n        } else {\n            if v > max {\n                max = v\n            }\n            if v < min {\n                min = v\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for i, v := range nums {\n        if i == 0 {\n            max = v\n            min = v\n        }\n        if v > max {\n            max = v\n        }\n        if v < min {\n            min = v\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    max := nums[0]\n    min := nums[0]\n    for _, num := range nums {\n        if num > max {\n            max = num\n        }\n        if num < min {\n            min = num\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for i, v := range nums {\n        if i == 0 {\n            max = v\n            min = v\n        }\n        if v > max {\n            max = v\n        }\n        if v < min {\n            min = v\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for _, num := range nums {\n        if num > max {\n            max = num\n        }\n        if num < min {\n            min = num\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "--- FAIL: TestBig_Diff (0.00s)\n    --- FAIL: TestBig_Diff/test_num__0 (0.00s)\n        tmp3m3ynrdq_test.go:37: expected '%!s(int=3)', got '%!s(int=4)'\n    --- FAIL: TestBig_Diff/test_num__1 (0.00s)\n        tmp3m3ynrdq_test.go:37: expected '%!s(int=8)', got '%!s(int=12)'\n    --- FAIL: TestBig_Diff/test_num__2 (0.00s)\n        tmp3m3ynrdq_test.go:37: expected '%!s(int=7)', got '%!s(int=9)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for i, v := range nums {\n        if i == 0 {\n            max = v\n            min = v\n        } else {\n            if v > max {\n                max = v\n            }\n            if v < min {\n                min = v\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for i, v := range nums {\n        if i == 0 {\n            max = v\n            min = v\n        } else {\n            if v > max {\n                max = v\n            }\n            if v < min {\n                min = v\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for i, n := range nums {\n        if i == 0 {\n            max = n\n            min = n\n        } else {\n            if n > max {\n                max = n\n            }\n            if n < min {\n                min = n\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for i, num := range nums {\n        if i == 0 {\n            max = num\n            min = num\n        } else {\n            if num > max {\n                max = num\n            }\n            if num < min {\n                min = num\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for _, num := range nums {\n        if num > max {\n            max = num\n        }\n        if num < min {\n            min = num\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "--- FAIL: TestBig_Diff (0.00s)\n    --- FAIL: TestBig_Diff/test_num__0 (0.00s)\n        tmp3m3ynrdq_test.go:37: expected '%!s(int=3)', got '%!s(int=4)'\n    --- FAIL: TestBig_Diff/test_num__1 (0.00s)\n        tmp3m3ynrdq_test.go:37: expected '%!s(int=8)', got '%!s(int=12)'\n    --- FAIL: TestBig_Diff/test_num__2 (0.00s)\n        tmp3m3ynrdq_test.go:37: expected '%!s(int=7)', got '%!s(int=9)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var min, max int\n    for i, v := range nums {\n        if i == 0 {\n            min = v\n            max = v\n        } else {\n            if v < min {\n                min = v\n            }\n            if v > max {\n                max = v\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var min, max int\n    for _, v := range nums {\n        if v < min {\n            min = v\n        }\n        if v > max {\n            max = v\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "--- FAIL: TestBig_Diff (0.00s)\n    --- FAIL: TestBig_Diff/test_num__0 (0.00s)\n        tmpb6z79z23_test.go:37: expected '%!s(int=3)', got '%!s(int=4)'\n    --- FAIL: TestBig_Diff/test_num__1 (0.00s)\n        tmpb6z79z23_test.go:37: expected '%!s(int=8)', got '%!s(int=12)'\n    --- FAIL: TestBig_Diff/test_num__2 (0.00s)\n        tmpb6z79z23_test.go:37: expected '%!s(int=7)', got '%!s(int=9)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for _, v := range nums {\n        if v > max {\n            max = v\n        }\n        if v < min {\n            min = v\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "--- FAIL: TestBig_Diff (0.00s)\n    --- FAIL: TestBig_Diff/test_num__0 (0.00s)\n        tmpsryopl9i_test.go:37: expected '%!s(int=3)', got '%!s(int=4)'\n    --- FAIL: TestBig_Diff/test_num__1 (0.00s)\n        tmpsryopl9i_test.go:37: expected '%!s(int=8)', got '%!s(int=12)'\n    --- FAIL: TestBig_Diff/test_num__2 (0.00s)\n        tmpsryopl9i_test.go:37: expected '%!s(int=7)', got '%!s(int=9)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for i, n := range nums {\n        if i == 0 {\n            max = n\n            min = n\n        } else {\n            if n > max {\n                max = n\n            }\n            if n < min {\n                min = n\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for i, num := range nums {\n        if i == 0 {\n            max = num\n            min = num\n        } else {\n            if num > max {\n                max = num\n            }\n            if num < min {\n                min = num\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for _, v := range nums {\n        if v > max {\n            max = v\n        }\n        if v < min {\n            min = v\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "--- FAIL: TestBig_Diff (0.00s)\n    --- FAIL: TestBig_Diff/test_num__0 (0.00s)\n        tmpsryopl9i_test.go:37: expected '%!s(int=3)', got '%!s(int=4)'\n    --- FAIL: TestBig_Diff/test_num__1 (0.00s)\n        tmpsryopl9i_test.go:37: expected '%!s(int=8)', got '%!s(int=12)'\n    --- FAIL: TestBig_Diff/test_num__2 (0.00s)\n        tmpsryopl9i_test.go:37: expected '%!s(int=7)', got '%!s(int=9)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for i, num := range nums {\n        if i == 0 {\n            max = num\n            min = num\n        } else {\n            if num > max {\n                max = num\n            }\n            if num < min {\n                min = num\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for _, num := range nums {\n        if num > max {\n            max = num\n        } else if num < min {\n            min = num\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "--- FAIL: TestBig_Diff (0.00s)\n    --- FAIL: TestBig_Diff/test_num__0 (0.00s)\n        tmpf73qnub6_test.go:36: expected '%!s(int=3)', got '%!s(int=4)'\n    --- FAIL: TestBig_Diff/test_num__1 (0.00s)\n        tmpf73qnub6_test.go:36: expected '%!s(int=8)', got '%!s(int=12)'\n    --- FAIL: TestBig_Diff/test_num__2 (0.00s)\n        tmpf73qnub6_test.go:36: expected '%!s(int=7)', got '%!s(int=9)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for i, n := range nums {\n        if i == 0 {\n            max = n\n            min = n\n        } else {\n            if n > max {\n                max = n\n            }\n            if n < min {\n                min = n\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for i, num := range nums {\n        if i == 0 {\n            max = num\n            min = num\n        }\n        if num > max {\n            max = num\n        }\n        if num < min {\n            min = num\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for _, v := range nums {\n        if v > max {\n            max = v\n        }\n        if v < min {\n            min = v\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "--- FAIL: TestBig_Diff (0.00s)\n    --- FAIL: TestBig_Diff/test_num__0 (0.00s)\n        tmpsryopl9i_test.go:37: expected '%!s(int=3)', got '%!s(int=4)'\n    --- FAIL: TestBig_Diff/test_num__1 (0.00s)\n        tmpsryopl9i_test.go:37: expected '%!s(int=8)', got '%!s(int=12)'\n    --- FAIL: TestBig_Diff/test_num__2 (0.00s)\n        tmpsryopl9i_test.go:37: expected '%!s(int=7)', got '%!s(int=9)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for i, v := range nums {\n        if i == 0 {\n            max = v\n            min = v\n        } else {\n            if v > max {\n                max = v\n            }\n            if v < min {\n                min = v\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var min, max int\n    for i, v := range nums {\n        if i == 0 {\n            min = v\n            max = v\n        } else {\n            if v < min {\n                min = v\n            }\n            if v > max {\n                max = v\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for i := 0; i < len(nums); i++ {\n        if i == 0 {\n            max = nums[i]\n            min = nums[i]\n        } else {\n            if nums[i] > max {\n                max = nums[i]\n            }\n            if nums[i] < min {\n                min = nums[i]\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123148,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for _, v := range nums {\n        if v > max {\n            max = v\n        }\n        if v < min {\n            min = v\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "--- FAIL: TestBig_Diff (0.00s)\n    --- FAIL: TestBig_Diff/test_num__0 (0.00s)\n        tmpsryopl9i_test.go:37: expected '%!s(int=3)', got '%!s(int=4)'\n    --- FAIL: TestBig_Diff/test_num__1 (0.00s)\n        tmpsryopl9i_test.go:37: expected '%!s(int=8)', got '%!s(int=12)'\n    --- FAIL: TestBig_Diff/test_num__2 (0.00s)\n        tmpsryopl9i_test.go:37: expected '%!s(int=7)', got '%!s(int=9)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var min, max int\n    for _, n := range nums {\n        if n > max {\n            max = n\n        }\n        if n < min {\n            min = n\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123148,
      "stdout": "--- FAIL: TestBig_Diff (0.00s)\n    --- FAIL: TestBig_Diff/test_num__0 (0.00s)\n        tmpgzfmi767_test.go:37: expected '%!s(int=3)', got '%!s(int=4)'\n    --- FAIL: TestBig_Diff/test_num__1 (0.00s)\n        tmpgzfmi767_test.go:37: expected '%!s(int=8)', got '%!s(int=12)'\n    --- FAIL: TestBig_Diff/test_num__2 (0.00s)\n        tmpgzfmi767_test.go:37: expected '%!s(int=7)', got '%!s(int=9)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var min, max int\n    for i, v := range nums {\n        if i == 0 {\n            min = v\n            max = v\n        } else {\n            if v < min {\n                min = v\n            }\n            if v > max {\n                max = v\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for i, n := range nums {\n        if i == 0 {\n            max = n\n            min = n\n        } else {\n            if n > max {\n                max = n\n            }\n            if n < min {\n                min = n\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for i, num := range nums {\n        if i == 0 {\n            max = num\n            min = num\n        } else {\n            if num > max {\n                max = num\n            }\n            if num < min {\n                min = num\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var min, max int\n    for i, v := range nums {\n        if i == 0 {\n            min = v\n            max = v\n        } else {\n            if v < min {\n                min = v\n            }\n            if v > max {\n                max = v\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var min, max int\n    for i, num := range nums {\n        if i == 0 {\n            min = num\n            max = num\n        } else {\n            if num < min {\n                min = num\n            }\n            if num > max {\n                max = num\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123148,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for _, n := range nums {\n        if n > max {\n            max = n\n        }\n        if n < min {\n            min = n\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123148,
      "stdout": "--- FAIL: TestBig_Diff (0.00s)\n    --- FAIL: TestBig_Diff/test_num__0 (0.00s)\n        tmpwrs0zq7t_test.go:37: expected '%!s(int=3)', got '%!s(int=4)'\n    --- FAIL: TestBig_Diff/test_num__1 (0.00s)\n        tmpwrs0zq7t_test.go:37: expected '%!s(int=8)', got '%!s(int=12)'\n    --- FAIL: TestBig_Diff/test_num__2 (0.00s)\n        tmpwrs0zq7t_test.go:37: expected '%!s(int=7)', got '%!s(int=9)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for _, val := range nums {\n        if val > max {\n            max = val\n        }\n        if val < min {\n            min = val\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123148,
      "stdout": "--- FAIL: TestBig_Diff (0.00s)\n    --- FAIL: TestBig_Diff/test_num__0 (0.00s)\n        tmpi6bdrci0_test.go:37: expected '%!s(int=3)', got '%!s(int=4)'\n    --- FAIL: TestBig_Diff/test_num__1 (0.00s)\n        tmpi6bdrci0_test.go:37: expected '%!s(int=8)', got '%!s(int=12)'\n    --- FAIL: TestBig_Diff/test_num__2 (0.00s)\n        tmpi6bdrci0_test.go:37: expected '%!s(int=7)', got '%!s(int=9)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var min, max int\n    for i, num := range nums {\n        if i == 0 {\n            min, max = num, num\n        } else {\n            if num < min {\n                min = num\n            }\n            if num > max {\n                max = num\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123148,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for i, v := range nums {\n        if i == 0 {\n            max = v\n            min = v\n        } else {\n            if v > max {\n                max = v\n            }\n            if v < min {\n                min = v\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for i, v := range nums {\n        if i == 0 {\n            max = v\n            min = v\n        }\n        if v > max {\n            max = v\n        }\n        if v < min {\n            min = v\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    max := nums[0]\n    min := nums[0]\n    for _, v := range nums {\n        if v > max {\n            max = v\n        }\n        if v < min {\n            min = v\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123148,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var min, max int\n    for i, v := range nums {\n        if i == 0 {\n            min = v\n            max = v\n        } else {\n            if v < min {\n                min = v\n            }\n            if v > max {\n                max = v\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    if len(nums) == 0 {\n        return 0\n    }\n    max := nums[0]\n    min := nums[0]\n    for _, num := range nums {\n        if num > max {\n            max = num\n        }\n        if num < min {\n            min = num\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123148,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var min, max int\n    for i, n := range nums {\n        if i == 0 {\n            min, max = n, n\n        } else {\n            if n < min {\n                min = n\n            } else if n > max {\n                max = n\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123148,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max int = nums[0]\n    var min int = nums[0]\n    for _, num := range nums {\n        if num > max {\n            max = num\n        }\n        if num < min {\n            min = num\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123148,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var min, max int\n    for i, num := range nums {\n        if i == 0 {\n            min = num\n            max = num\n        } else {\n            if num < min {\n                min = num\n            }\n            if num > max {\n                max = num\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123148,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    max := nums[0]\n    min := nums[0]\n    for _, v := range nums {\n        if v > max {\n            max = v\n        }\n        if v < min {\n            min = v\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123148,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for _, num := range nums {\n        if num > max {\n            max = num\n        }\n        if num < min {\n            min = num\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "--- FAIL: TestBig_Diff (0.00s)\n    --- FAIL: TestBig_Diff/test_num__0 (0.00s)\n        tmp3m3ynrdq_test.go:37: expected '%!s(int=3)', got '%!s(int=4)'\n    --- FAIL: TestBig_Diff/test_num__1 (0.00s)\n        tmp3m3ynrdq_test.go:37: expected '%!s(int=8)', got '%!s(int=12)'\n    --- FAIL: TestBig_Diff/test_num__2 (0.00s)\n        tmp3m3ynrdq_test.go:37: expected '%!s(int=7)', got '%!s(int=9)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var min, max int\n    for _, n := range nums {\n        if n < min {\n            min = n\n        }\n        if n > max {\n            max = n\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123148,
      "stdout": "--- FAIL: TestBig_Diff (0.00s)\n    --- FAIL: TestBig_Diff/test_num__0 (0.00s)\n        tmp3f1m7b13_test.go:37: expected '%!s(int=3)', got '%!s(int=4)'\n    --- FAIL: TestBig_Diff/test_num__1 (0.00s)\n        tmp3f1m7b13_test.go:37: expected '%!s(int=8)', got '%!s(int=12)'\n    --- FAIL: TestBig_Diff/test_num__2 (0.00s)\n        tmp3f1m7b13_test.go:37: expected '%!s(int=7)', got '%!s(int=9)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for _, num := range nums {\n        if num > max {\n            max = num\n        }\n        if num < min {\n            min = num\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "--- FAIL: TestBig_Diff (0.00s)\n    --- FAIL: TestBig_Diff/test_num__0 (0.00s)\n        tmp3m3ynrdq_test.go:37: expected '%!s(int=3)', got '%!s(int=4)'\n    --- FAIL: TestBig_Diff/test_num__1 (0.00s)\n        tmp3m3ynrdq_test.go:37: expected '%!s(int=8)', got '%!s(int=12)'\n    --- FAIL: TestBig_Diff/test_num__2 (0.00s)\n        tmp3m3ynrdq_test.go:37: expected '%!s(int=7)', got '%!s(int=9)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for i, v := range nums {\n        if i == 0 {\n            max = v\n            min = v\n        } else {\n            if v > max {\n                max = v\n            }\n            if v < min {\n                min = v\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for i, v := range nums {\n        if i == 0 {\n            max = v\n            min = v\n        } else {\n            if v > max {\n                max = v\n            }\n            if v < min {\n                min = v\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var min, max int\n    for i, num := range nums {\n        if i == 0 {\n            min = num\n            max = num\n        } else {\n            if num < min {\n                min = num\n            }\n            if num > max {\n                max = num\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123148,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var min, max int\n    for i, n := range nums {\n        if i == 0 {\n            min = n\n            max = n\n        } else {\n            if n < min {\n                min = n\n            }\n            if n > max {\n                max = n\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123148,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for i, num := range nums {\n        if i == 0 {\n            max, min = num, num\n        }\n        if num > max {\n            max = num\n        }\n        if num < min {\n            min = num\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123148,
      "stdout": "ok  \tcommand-line-arguments\t0.014s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for _, n := range nums {\n        if n > max {\n            max = n\n        }\n        if n < min {\n            min = n\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123148,
      "stdout": "--- FAIL: TestBig_Diff (0.00s)\n    --- FAIL: TestBig_Diff/test_num__0 (0.00s)\n        tmpwrs0zq7t_test.go:37: expected '%!s(int=3)', got '%!s(int=4)'\n    --- FAIL: TestBig_Diff/test_num__1 (0.00s)\n        tmpwrs0zq7t_test.go:37: expected '%!s(int=8)', got '%!s(int=12)'\n    --- FAIL: TestBig_Diff/test_num__2 (0.00s)\n        tmpwrs0zq7t_test.go:37: expected '%!s(int=7)', got '%!s(int=9)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for _, num := range nums {\n        if num > max {\n            max = num\n        }\n        if num < min {\n            min = num\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "--- FAIL: TestBig_Diff (0.00s)\n    --- FAIL: TestBig_Diff/test_num__0 (0.00s)\n        tmp3m3ynrdq_test.go:37: expected '%!s(int=3)', got '%!s(int=4)'\n    --- FAIL: TestBig_Diff/test_num__1 (0.00s)\n        tmp3m3ynrdq_test.go:37: expected '%!s(int=8)', got '%!s(int=12)'\n    --- FAIL: TestBig_Diff/test_num__2 (0.00s)\n        tmp3m3ynrdq_test.go:37: expected '%!s(int=7)', got '%!s(int=9)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for i, n := range nums {\n        if i == 0 {\n            max = n\n            min = n\n        } else {\n            if n > max {\n                max = n\n            }\n            if n < min {\n                min = n\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for i, v := range nums {\n        if i == 0 {\n            max = v\n            min = v\n        }\n        if v > max {\n            max = v\n        }\n        if v < min {\n            min = v\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for i, v := range nums {\n        if i == 0 {\n            max = v\n            min = v\n        } else {\n            if v > max {\n                max = v\n            }\n            if v < min {\n                min = v\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    max = nums[0]\n    min = nums[0]\n    for _, v := range nums {\n        if v > max {\n            max = v\n        }\n        if v < min {\n            min = v\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123148,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for i, num := range nums {\n        if i == 0 {\n            max = num\n            min = num\n        }\n        if num > max {\n            max = num\n        }\n        if num < min {\n            min = num\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var min, max int\n    min = nums[0]\n    max = nums[0]\n    for _, n := range nums {\n        if n < min {\n            min = n\n        }\n        if n > max {\n            max = n\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123148,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for _, num := range nums {\n        if num > max {\n            max = num\n        }\n        if num < min {\n            min = num\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "--- FAIL: TestBig_Diff (0.00s)\n    --- FAIL: TestBig_Diff/test_num__0 (0.00s)\n        tmp3m3ynrdq_test.go:37: expected '%!s(int=3)', got '%!s(int=4)'\n    --- FAIL: TestBig_Diff/test_num__1 (0.00s)\n        tmp3m3ynrdq_test.go:37: expected '%!s(int=8)', got '%!s(int=12)'\n    --- FAIL: TestBig_Diff/test_num__2 (0.00s)\n        tmp3m3ynrdq_test.go:37: expected '%!s(int=7)', got '%!s(int=9)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for i, n := range nums {\n        if i == 0 {\n            max = n\n            min = n\n        } else {\n            if n > max {\n                max = n\n            }\n            if n < min {\n                min = n\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for i, v := range nums {\n        if i == 0 {\n            max = v\n            min = v\n        } else {\n            if v > max {\n                max = v\n            }\n            if v < min {\n                min = v\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var min, max int\n    for i, v := range nums {\n        if i == 0 {\n            min = v\n            max = v\n        } else {\n            if v < min {\n                min = v\n            }\n            if v > max {\n                max = v\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for i, v := range nums {\n        if i == 0 {\n            max = v\n            min = v\n        } else {\n            if v > max {\n                max = v\n            }\n            if v < min {\n                min = v\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for _, num := range nums {\n        if num > max {\n            max = num\n        }\n        if num < min {\n            min = num\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "--- FAIL: TestBig_Diff (0.00s)\n    --- FAIL: TestBig_Diff/test_num__0 (0.00s)\n        tmp3m3ynrdq_test.go:37: expected '%!s(int=3)', got '%!s(int=4)'\n    --- FAIL: TestBig_Diff/test_num__1 (0.00s)\n        tmp3m3ynrdq_test.go:37: expected '%!s(int=8)', got '%!s(int=12)'\n    --- FAIL: TestBig_Diff/test_num__2 (0.00s)\n        tmp3m3ynrdq_test.go:37: expected '%!s(int=7)', got '%!s(int=9)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for i, v := range nums {\n        if i == 0 {\n            max = v\n            min = v\n        }\n        if v > max {\n            max = v\n        }\n        if v < min {\n            min = v\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for i, num := range nums {\n        if i == 0 {\n            max = num\n            min = num\n        } else {\n            if num > max {\n                max = num\n            }\n            if num < min {\n                min = num\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for _, n := range nums {\n        if n > max {\n            max = n\n        }\n        if n < min {\n            min = n\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123148,
      "stdout": "--- FAIL: TestBig_Diff (0.00s)\n    --- FAIL: TestBig_Diff/test_num__0 (0.00s)\n        tmpwrs0zq7t_test.go:37: expected '%!s(int=3)', got '%!s(int=4)'\n    --- FAIL: TestBig_Diff/test_num__1 (0.00s)\n        tmpwrs0zq7t_test.go:37: expected '%!s(int=8)', got '%!s(int=12)'\n    --- FAIL: TestBig_Diff/test_num__2 (0.00s)\n        tmpwrs0zq7t_test.go:37: expected '%!s(int=7)', got '%!s(int=9)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for i, v := range nums {\n        if i == 0 {\n            max = v\n            min = v\n        } else {\n            if v > max {\n                max = v\n            }\n            if v < min {\n                min = v\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var min, max int\n    for i, n := range nums {\n        if i == 0 {\n            min = n\n            max = n\n            continue\n        }\n        if n < min {\n            min = n\n        }\n        if n > max {\n            max = n\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123148,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    max, min := nums[0], nums[0]\n    for _, v := range nums {\n        if v > max {\n            max = v\n        }\n        if v < min {\n            min = v\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123148,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for _, num := range nums {\n        if num > max {\n            max = num\n        }\n        if num < min {\n            min = num\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "--- FAIL: TestBig_Diff (0.00s)\n    --- FAIL: TestBig_Diff/test_num__0 (0.00s)\n        tmp3m3ynrdq_test.go:37: expected '%!s(int=3)', got '%!s(int=4)'\n    --- FAIL: TestBig_Diff/test_num__1 (0.00s)\n        tmp3m3ynrdq_test.go:37: expected '%!s(int=8)', got '%!s(int=12)'\n    --- FAIL: TestBig_Diff/test_num__2 (0.00s)\n        tmp3m3ynrdq_test.go:37: expected '%!s(int=7)', got '%!s(int=9)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for _, num := range nums {\n        if num > max {\n            max = num\n        }\n        if num < min {\n            min = num\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "--- FAIL: TestBig_Diff (0.00s)\n    --- FAIL: TestBig_Diff/test_num__0 (0.00s)\n        tmp3m3ynrdq_test.go:37: expected '%!s(int=3)', got '%!s(int=4)'\n    --- FAIL: TestBig_Diff/test_num__1 (0.00s)\n        tmp3m3ynrdq_test.go:37: expected '%!s(int=8)', got '%!s(int=12)'\n    --- FAIL: TestBig_Diff/test_num__2 (0.00s)\n        tmp3m3ynrdq_test.go:37: expected '%!s(int=7)', got '%!s(int=9)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for i, v := range nums {\n        if i == 0 {\n            max = v\n            min = v\n        }\n        if v > max {\n            max = v\n        }\n        if v < min {\n            min = v\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for i, v := range nums {\n        if i == 0 {\n            max = v\n            min = v\n        } else {\n            if v > max {\n                max = v\n            }\n            if v < min {\n                min = v\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for i, n := range nums {\n        if i == 0 {\n            max = n\n            min = n\n        } else {\n            if n > max {\n                max = n\n            }\n            if n < min {\n                min = n\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for _, num := range nums {\n        if num > max {\n            max = num\n        }\n        if num < min {\n            min = num\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "--- FAIL: TestBig_Diff (0.00s)\n    --- FAIL: TestBig_Diff/test_num__0 (0.00s)\n        tmp3m3ynrdq_test.go:37: expected '%!s(int=3)', got '%!s(int=4)'\n    --- FAIL: TestBig_Diff/test_num__1 (0.00s)\n        tmp3m3ynrdq_test.go:37: expected '%!s(int=8)', got '%!s(int=12)'\n    --- FAIL: TestBig_Diff/test_num__2 (0.00s)\n        tmp3m3ynrdq_test.go:37: expected '%!s(int=7)', got '%!s(int=9)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for _, num := range nums {\n        if num > max {\n            max = num\n        }\n        if num < min {\n            min = num\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "--- FAIL: TestBig_Diff (0.00s)\n    --- FAIL: TestBig_Diff/test_num__0 (0.00s)\n        tmp3m3ynrdq_test.go:37: expected '%!s(int=3)', got '%!s(int=4)'\n    --- FAIL: TestBig_Diff/test_num__1 (0.00s)\n        tmp3m3ynrdq_test.go:37: expected '%!s(int=8)', got '%!s(int=12)'\n    --- FAIL: TestBig_Diff/test_num__2 (0.00s)\n        tmp3m3ynrdq_test.go:37: expected '%!s(int=7)', got '%!s(int=9)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var min, max int\n    for i, v := range nums {\n        if i == 0 {\n            min = v\n            max = v\n        } else {\n            if v < min {\n                min = v\n            }\n            if v > max {\n                max = v\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for _, num := range nums {\n        if num > max {\n            max = num\n        }\n        if num < min {\n            min = num\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "--- FAIL: TestBig_Diff (0.00s)\n    --- FAIL: TestBig_Diff/test_num__0 (0.00s)\n        tmp3m3ynrdq_test.go:37: expected '%!s(int=3)', got '%!s(int=4)'\n    --- FAIL: TestBig_Diff/test_num__1 (0.00s)\n        tmp3m3ynrdq_test.go:37: expected '%!s(int=8)', got '%!s(int=12)'\n    --- FAIL: TestBig_Diff/test_num__2 (0.00s)\n        tmp3m3ynrdq_test.go:37: expected '%!s(int=7)', got '%!s(int=9)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    if len(nums) == 0 {\n        return 0\n    }\n    max := nums[0]\n    min := nums[0]\n    for i := 1; i < len(nums); i++ {\n        if nums[i] > max {\n            max = nums[i]\n        }\n        if nums[i] < min {\n            min = nums[i]\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123148,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for i, v := range nums {\n        if i == 0 {\n            max = v\n            min = v\n        } else {\n            if v > max {\n                max = v\n            }\n            if v < min {\n                min = v\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var min, max int\n    for i, n := range nums {\n        if i == 0 {\n            min = n\n            max = n\n        } else {\n            if n < min {\n                min = n\n            }\n            if n > max {\n                max = n\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123148,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for i, num := range nums {\n        if i == 0 {\n            max = num\n            min = num\n        } else {\n            if num > max {\n                max = num\n            }\n            if num < min {\n                min = num\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for i, v := range nums {\n        if i == 0 {\n            max = v\n            min = v\n        } else {\n            if v > max {\n                max = v\n            }\n            if v < min {\n                min = v\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for i, v := range nums {\n        if i == 0 {\n            max = v\n            min = v\n        } else {\n            if v > max {\n                max = v\n            }\n            if v < min {\n                min = v\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for i, v := range nums {\n        if i == 0 {\n            max = v\n            min = v\n        }\n        if v > max {\n            max = v\n        }\n        if v < min {\n            min = v\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var min, max int\n    for i, v := range nums {\n        if i == 0 {\n            min = v\n            max = v\n        } else {\n            if v < min {\n                min = v\n            }\n            if v > max {\n                max = v\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for _, num := range nums {\n        if num > max {\n            max = num\n        }\n        if num < min {\n            min = num\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "--- FAIL: TestBig_Diff (0.00s)\n    --- FAIL: TestBig_Diff/test_num__0 (0.00s)\n        tmp3m3ynrdq_test.go:37: expected '%!s(int=3)', got '%!s(int=4)'\n    --- FAIL: TestBig_Diff/test_num__1 (0.00s)\n        tmp3m3ynrdq_test.go:37: expected '%!s(int=8)', got '%!s(int=12)'\n    --- FAIL: TestBig_Diff/test_num__2 (0.00s)\n        tmp3m3ynrdq_test.go:37: expected '%!s(int=7)', got '%!s(int=9)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for i, v := range nums {\n        if i == 0 {\n            max = v\n            min = v\n        } else {\n            if v > max {\n                max = v\n            }\n            if v < min {\n                min = v\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for _, num := range nums {\n        if num > max {\n            max = num\n        }\n        if num < min {\n            min = num\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "--- FAIL: TestBig_Diff (0.00s)\n    --- FAIL: TestBig_Diff/test_num__0 (0.00s)\n        tmp3m3ynrdq_test.go:37: expected '%!s(int=3)', got '%!s(int=4)'\n    --- FAIL: TestBig_Diff/test_num__1 (0.00s)\n        tmp3m3ynrdq_test.go:37: expected '%!s(int=8)', got '%!s(int=12)'\n    --- FAIL: TestBig_Diff/test_num__2 (0.00s)\n        tmp3m3ynrdq_test.go:37: expected '%!s(int=7)', got '%!s(int=9)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for _, n := range nums {\n        if n > max {\n            max = n\n        }\n        if n < min {\n            min = n\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123148,
      "stdout": "--- FAIL: TestBig_Diff (0.00s)\n    --- FAIL: TestBig_Diff/test_num__0 (0.00s)\n        tmpwrs0zq7t_test.go:37: expected '%!s(int=3)', got '%!s(int=4)'\n    --- FAIL: TestBig_Diff/test_num__1 (0.00s)\n        tmpwrs0zq7t_test.go:37: expected '%!s(int=8)', got '%!s(int=12)'\n    --- FAIL: TestBig_Diff/test_num__2 (0.00s)\n        tmpwrs0zq7t_test.go:37: expected '%!s(int=7)', got '%!s(int=9)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for i, v := range nums {\n        if i == 0 {\n            max = v\n            min = v\n        } else {\n            if v > max {\n                max = v\n            }\n            if v < min {\n                min = v\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for i, v := range nums {\n        if i == 0 {\n            max = v\n            min = v\n        } else {\n            if v > max {\n                max = v\n            }\n            if v < min {\n                min = v\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for _, num := range nums {\n        if num > max {\n            max = num\n        }\n        if num < min {\n            min = num\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "--- FAIL: TestBig_Diff (0.00s)\n    --- FAIL: TestBig_Diff/test_num__0 (0.00s)\n        tmp3m3ynrdq_test.go:37: expected '%!s(int=3)', got '%!s(int=4)'\n    --- FAIL: TestBig_Diff/test_num__1 (0.00s)\n        tmp3m3ynrdq_test.go:37: expected '%!s(int=8)', got '%!s(int=12)'\n    --- FAIL: TestBig_Diff/test_num__2 (0.00s)\n        tmp3m3ynrdq_test.go:37: expected '%!s(int=7)', got '%!s(int=9)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var min, max int\n    for _, n := range nums {\n        if n < min {\n            min = n\n        }\n        if n > max {\n            max = n\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123148,
      "stdout": "--- FAIL: TestBig_Diff (0.00s)\n    --- FAIL: TestBig_Diff/test_num__0 (0.00s)\n        tmp3f1m7b13_test.go:37: expected '%!s(int=3)', got '%!s(int=4)'\n    --- FAIL: TestBig_Diff/test_num__1 (0.00s)\n        tmp3f1m7b13_test.go:37: expected '%!s(int=8)', got '%!s(int=12)'\n    --- FAIL: TestBig_Diff/test_num__2 (0.00s)\n        tmp3f1m7b13_test.go:37: expected '%!s(int=7)', got '%!s(int=9)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for _, num := range nums {\n        if num > max {\n            max = num\n        }\n        if num < min {\n            min = num\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "--- FAIL: TestBig_Diff (0.00s)\n    --- FAIL: TestBig_Diff/test_num__0 (0.00s)\n        tmp3m3ynrdq_test.go:37: expected '%!s(int=3)', got '%!s(int=4)'\n    --- FAIL: TestBig_Diff/test_num__1 (0.00s)\n        tmp3m3ynrdq_test.go:37: expected '%!s(int=8)', got '%!s(int=12)'\n    --- FAIL: TestBig_Diff/test_num__2 (0.00s)\n        tmp3m3ynrdq_test.go:37: expected '%!s(int=7)', got '%!s(int=9)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for i, v := range nums {\n        if i == 0 {\n            max = v\n            min = v\n        } else {\n            if v > max {\n                max = v\n            }\n            if v < min {\n                min = v\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for _, v := range nums {\n        if v > max {\n            max = v\n        }\n        if v < min {\n            min = v\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "--- FAIL: TestBig_Diff (0.00s)\n    --- FAIL: TestBig_Diff/test_num__0 (0.00s)\n        tmpsryopl9i_test.go:37: expected '%!s(int=3)', got '%!s(int=4)'\n    --- FAIL: TestBig_Diff/test_num__1 (0.00s)\n        tmpsryopl9i_test.go:37: expected '%!s(int=8)', got '%!s(int=12)'\n    --- FAIL: TestBig_Diff/test_num__2 (0.00s)\n        tmpsryopl9i_test.go:37: expected '%!s(int=7)', got '%!s(int=9)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var min, max int\n    for _, n := range nums {\n        if n < min {\n            min = n\n        }\n        if n > max {\n            max = n\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123148,
      "stdout": "--- FAIL: TestBig_Diff (0.00s)\n    --- FAIL: TestBig_Diff/test_num__0 (0.00s)\n        tmp3f1m7b13_test.go:37: expected '%!s(int=3)', got '%!s(int=4)'\n    --- FAIL: TestBig_Diff/test_num__1 (0.00s)\n        tmp3f1m7b13_test.go:37: expected '%!s(int=8)', got '%!s(int=12)'\n    --- FAIL: TestBig_Diff/test_num__2 (0.00s)\n        tmp3f1m7b13_test.go:37: expected '%!s(int=7)', got '%!s(int=9)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for _, num := range nums {\n        if num > max {\n            max = num\n        }\n        if num < min {\n            min = num\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "--- FAIL: TestBig_Diff (0.00s)\n    --- FAIL: TestBig_Diff/test_num__0 (0.00s)\n        tmp3m3ynrdq_test.go:37: expected '%!s(int=3)', got '%!s(int=4)'\n    --- FAIL: TestBig_Diff/test_num__1 (0.00s)\n        tmp3m3ynrdq_test.go:37: expected '%!s(int=8)', got '%!s(int=12)'\n    --- FAIL: TestBig_Diff/test_num__2 (0.00s)\n        tmp3m3ynrdq_test.go:37: expected '%!s(int=7)', got '%!s(int=9)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for i, v := range nums {\n        if i == 0 {\n            max = v\n            min = v\n        } else {\n            if v > max {\n                max = v\n            }\n            if v < min {\n                min = v\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for i, v := range nums {\n        if i == 0 {\n            max = v\n            min = v\n        } else {\n            if v > max {\n                max = v\n            }\n            if v < min {\n                min = v\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var min, max int\n    for _, v := range nums {\n        if v < min {\n            min = v\n        }\n        if v > max {\n            max = v\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "--- FAIL: TestBig_Diff (0.00s)\n    --- FAIL: TestBig_Diff/test_num__0 (0.00s)\n        tmpb6z79z23_test.go:37: expected '%!s(int=3)', got '%!s(int=4)'\n    --- FAIL: TestBig_Diff/test_num__1 (0.00s)\n        tmpb6z79z23_test.go:37: expected '%!s(int=8)', got '%!s(int=12)'\n    --- FAIL: TestBig_Diff/test_num__2 (0.00s)\n        tmpb6z79z23_test.go:37: expected '%!s(int=7)', got '%!s(int=9)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for _, v := range nums {\n        if v > max {\n            max = v\n        }\n        if v < min {\n            min = v\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "--- FAIL: TestBig_Diff (0.00s)\n    --- FAIL: TestBig_Diff/test_num__0 (0.00s)\n        tmpsryopl9i_test.go:37: expected '%!s(int=3)', got '%!s(int=4)'\n    --- FAIL: TestBig_Diff/test_num__1 (0.00s)\n        tmpsryopl9i_test.go:37: expected '%!s(int=8)', got '%!s(int=12)'\n    --- FAIL: TestBig_Diff/test_num__2 (0.00s)\n        tmpsryopl9i_test.go:37: expected '%!s(int=7)', got '%!s(int=9)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for i, v := range nums {\n        if i == 0 {\n            max = v\n            min = v\n        } else {\n            if v > max {\n                max = v\n            }\n            if v < min {\n                min = v\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for _, v := range nums {\n        if v > max {\n            max = v\n        }\n        if v < min {\n            min = v\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "--- FAIL: TestBig_Diff (0.00s)\n    --- FAIL: TestBig_Diff/test_num__0 (0.00s)\n        tmpsryopl9i_test.go:37: expected '%!s(int=3)', got '%!s(int=4)'\n    --- FAIL: TestBig_Diff/test_num__1 (0.00s)\n        tmpsryopl9i_test.go:37: expected '%!s(int=8)', got '%!s(int=12)'\n    --- FAIL: TestBig_Diff/test_num__2 (0.00s)\n        tmpsryopl9i_test.go:37: expected '%!s(int=7)', got '%!s(int=9)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var min, max int\n    for i, v := range nums {\n        if i == 0 {\n            min = v\n            max = v\n        } else {\n            if v < min {\n                min = v\n            }\n            if v > max {\n                max = v\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var min, max int\n    min = nums[0]\n    max = nums[0]\n    for _, v := range nums {\n        if v < min {\n            min = v\n        }\n        if v > max {\n            max = v\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123148,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for i, n := range nums {\n        if i == 0 {\n            max = n\n            min = n\n        } else {\n            if n > max {\n                max = n\n            }\n            if n < min {\n                min = n\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var min, max int\n    for _, num := range nums {\n        if num < min {\n            min = num\n        }\n        if num > max {\n            max = num\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123148,
      "stdout": "--- FAIL: TestBig_Diff (0.00s)\n    --- FAIL: TestBig_Diff/test_num__0 (0.00s)\n        tmpcrpv2mmw_test.go:37: expected '%!s(int=3)', got '%!s(int=4)'\n    --- FAIL: TestBig_Diff/test_num__1 (0.00s)\n        tmpcrpv2mmw_test.go:37: expected '%!s(int=8)', got '%!s(int=12)'\n    --- FAIL: TestBig_Diff/test_num__2 (0.00s)\n        tmpcrpv2mmw_test.go:37: expected '%!s(int=7)', got '%!s(int=9)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    min := nums[0]\n    max := nums[0]\n    for _, num := range nums {\n        if num < min {\n            min = num\n        }\n        if num > max {\n            max = num\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123148,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for i, n := range nums {\n        if i == 0 {\n            max = n\n            min = n\n            continue\n        }\n        if n > max {\n            max = n\n        }\n        if n < min {\n            min = n\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123148,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for i, num := range nums {\n        if i == 0 {\n            max = num\n            min = num\n        }\n        if num > max {\n            max = num\n        }\n        if num < min {\n            min = num\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    max := nums[0]\n    min := nums[0]\n    for _, num := range nums {\n        if num > max {\n            max = num\n        }\n        if num < min {\n            min = num\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for i, n := range nums {\n        if i == 0 {\n            max = n\n            min = n\n        } else {\n            if n > max {\n                max = n\n            }\n            if n < min {\n                min = n\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for _, num := range nums {\n        if num > max {\n            max = num\n        }\n        if num < min {\n            min = num\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "--- FAIL: TestBig_Diff (0.00s)\n    --- FAIL: TestBig_Diff/test_num__0 (0.00s)\n        tmp3m3ynrdq_test.go:37: expected '%!s(int=3)', got '%!s(int=4)'\n    --- FAIL: TestBig_Diff/test_num__1 (0.00s)\n        tmp3m3ynrdq_test.go:37: expected '%!s(int=8)', got '%!s(int=12)'\n    --- FAIL: TestBig_Diff/test_num__2 (0.00s)\n        tmp3m3ynrdq_test.go:37: expected '%!s(int=7)', got '%!s(int=9)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var min, max int\n    for _, v := range nums {\n        if v < min {\n            min = v\n        }\n        if v > max {\n            max = v\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "--- FAIL: TestBig_Diff (0.00s)\n    --- FAIL: TestBig_Diff/test_num__0 (0.00s)\n        tmpb6z79z23_test.go:37: expected '%!s(int=3)', got '%!s(int=4)'\n    --- FAIL: TestBig_Diff/test_num__1 (0.00s)\n        tmpb6z79z23_test.go:37: expected '%!s(int=8)', got '%!s(int=12)'\n    --- FAIL: TestBig_Diff/test_num__2 (0.00s)\n        tmpb6z79z23_test.go:37: expected '%!s(int=7)', got '%!s(int=9)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for i, v := range nums {\n        if i == 0 {\n            max = v\n            min = v\n        } else {\n            if v > max {\n                max = v\n            }\n            if v < min {\n                min = v\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    min := nums[0]\n    max := nums[0]\n    for _, n := range nums {\n        if n < min {\n            min = n\n        }\n        if n > max {\n            max = n\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123148,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for _, num := range nums {\n        if num > max {\n            max = num\n        }\n        if num < min {\n            min = num\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "--- FAIL: TestBig_Diff (0.00s)\n    --- FAIL: TestBig_Diff/test_num__0 (0.00s)\n        tmp3m3ynrdq_test.go:37: expected '%!s(int=3)', got '%!s(int=4)'\n    --- FAIL: TestBig_Diff/test_num__1 (0.00s)\n        tmp3m3ynrdq_test.go:37: expected '%!s(int=8)', got '%!s(int=12)'\n    --- FAIL: TestBig_Diff/test_num__2 (0.00s)\n        tmp3m3ynrdq_test.go:37: expected '%!s(int=7)', got '%!s(int=9)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for i, num := range nums {\n        if i == 0 {\n            max = num\n            min = num\n        }\n        if num > max {\n            max = num\n        }\n        if num < min {\n            min = num\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for i, num := range nums {\n        if i == 0 {\n            max = num\n            min = num\n        } else {\n            if num > max {\n                max = num\n            }\n            if num < min {\n                min = num\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for i, v := range nums {\n        if i == 0 {\n            max = v\n            min = v\n        } else {\n            if v > max {\n                max = v\n            }\n            if v < min {\n                min = v\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var min, max int\n    for i, v := range nums {\n        if i == 0 {\n            min = v\n            max = v\n        } else {\n            if v < min {\n                min = v\n            }\n            if v > max {\n                max = v\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var min, max int\n    for _, n := range nums {\n        if n < min {\n            min = n\n        }\n        if n > max {\n            max = n\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123148,
      "stdout": "--- FAIL: TestBig_Diff (0.00s)\n    --- FAIL: TestBig_Diff/test_num__0 (0.00s)\n        tmp3f1m7b13_test.go:37: expected '%!s(int=3)', got '%!s(int=4)'\n    --- FAIL: TestBig_Diff/test_num__1 (0.00s)\n        tmp3f1m7b13_test.go:37: expected '%!s(int=8)', got '%!s(int=12)'\n    --- FAIL: TestBig_Diff/test_num__2 (0.00s)\n        tmp3f1m7b13_test.go:37: expected '%!s(int=7)', got '%!s(int=9)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for _, v := range nums {\n        if v > max {\n            max = v\n        }\n        if v < min {\n            min = v\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "--- FAIL: TestBig_Diff (0.00s)\n    --- FAIL: TestBig_Diff/test_num__0 (0.00s)\n        tmpsryopl9i_test.go:37: expected '%!s(int=3)', got '%!s(int=4)'\n    --- FAIL: TestBig_Diff/test_num__1 (0.00s)\n        tmpsryopl9i_test.go:37: expected '%!s(int=8)', got '%!s(int=12)'\n    --- FAIL: TestBig_Diff/test_num__2 (0.00s)\n        tmpsryopl9i_test.go:37: expected '%!s(int=7)', got '%!s(int=9)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for _, n := range nums {\n        if n > max {\n            max = n\n        }\n        if n < min {\n            min = n\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123148,
      "stdout": "--- FAIL: TestBig_Diff (0.00s)\n    --- FAIL: TestBig_Diff/test_num__0 (0.00s)\n        tmpwrs0zq7t_test.go:37: expected '%!s(int=3)', got '%!s(int=4)'\n    --- FAIL: TestBig_Diff/test_num__1 (0.00s)\n        tmpwrs0zq7t_test.go:37: expected '%!s(int=8)', got '%!s(int=12)'\n    --- FAIL: TestBig_Diff/test_num__2 (0.00s)\n        tmpwrs0zq7t_test.go:37: expected '%!s(int=7)', got '%!s(int=9)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for _, v := range nums {\n        if v > max {\n            max = v\n        }\n        if v < min {\n            min = v\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "--- FAIL: TestBig_Diff (0.00s)\n    --- FAIL: TestBig_Diff/test_num__0 (0.00s)\n        tmpsryopl9i_test.go:37: expected '%!s(int=3)', got '%!s(int=4)'\n    --- FAIL: TestBig_Diff/test_num__1 (0.00s)\n        tmpsryopl9i_test.go:37: expected '%!s(int=8)', got '%!s(int=12)'\n    --- FAIL: TestBig_Diff/test_num__2 (0.00s)\n        tmpsryopl9i_test.go:37: expected '%!s(int=7)', got '%!s(int=9)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    max = nums[0]\n    min = nums[0]\n    for _, num := range nums {\n        if num > max {\n            max = num\n        }\n        if num < min {\n            min = num\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123150,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var min, max int\n    for i, v := range nums {\n        if i == 0 {\n            min = v\n            max = v\n        } else {\n            if v < min {\n                min = v\n            }\n            if v > max {\n                max = v\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for i, x := range nums {\n        if i == 0 {\n            max = x\n            min = x\n        } else {\n            if x > max {\n                max = x\n            }\n            if x < min {\n                min = x\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123150,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    max = nums[0]\n    min = nums[0]\n    for _, v := range nums {\n        if v > max {\n            max = v\n        }\n        if v < min {\n            min = v\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123148,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for i, v := range nums {\n        if i == 0 {\n            max = v\n            min = v\n        } else {\n            if v > max {\n                max = v\n            }\n            if v < min {\n                min = v\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    max := nums[0]\n    min := nums[0]\n    for _, num := range nums {\n        if num > max {\n            max = num\n        }\n        if num < min {\n            min = num\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for i, v := range nums {\n        if i == 0 {\n            max = v\n            min = v\n        } else {\n            if v > max {\n                max = v\n            }\n            if v < min {\n                min = v\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    max, min := nums[0], nums[0]\n    for _, num := range nums {\n        if num > max {\n            max = num\n        }\n        if num < min {\n            min = num\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123150,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for i, v := range nums {\n        if i == 0 {\n            max = v\n            min = v\n        } else {\n            if v > max {\n                max = v\n            }\n            if v < min {\n                min = v\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for i, n := range nums {\n        if i == 0 {\n            max = n\n            min = n\n        } else {\n            if n > max {\n                max = n\n            }\n            if n < min {\n                min = n\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var min, max int\n    for _, n := range nums {\n        if n < min {\n            min = n\n        }\n        if n > max {\n            max = n\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123148,
      "stdout": "--- FAIL: TestBig_Diff (0.00s)\n    --- FAIL: TestBig_Diff/test_num__0 (0.00s)\n        tmp3f1m7b13_test.go:37: expected '%!s(int=3)', got '%!s(int=4)'\n    --- FAIL: TestBig_Diff/test_num__1 (0.00s)\n        tmp3f1m7b13_test.go:37: expected '%!s(int=8)', got '%!s(int=12)'\n    --- FAIL: TestBig_Diff/test_num__2 (0.00s)\n        tmp3f1m7b13_test.go:37: expected '%!s(int=7)', got '%!s(int=9)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for i, num := range nums {\n        if i == 0 {\n            max = num\n            min = num\n        } else {\n            if num > max {\n                max = num\n            }\n            if num < min {\n                min = num\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for i, v := range nums {\n        if i == 0 {\n            max = v\n            min = v\n        }\n        if v > max {\n            max = v\n        }\n        if v < min {\n            min = v\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for i, num := range nums {\n        if i == 0 {\n            max = num\n            min = num\n        } else {\n            if num > max {\n                max = num\n            }\n            if num < min {\n                min = num\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var min, max int\n    for i, v := range nums {\n        if i == 0 {\n            min = v\n            max = v\n        } else {\n            if v < min {\n                min = v\n            }\n            if v > max {\n                max = v\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for _, num := range nums {\n        if num > max {\n            max = num\n        }\n        if num < min {\n            min = num\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "--- FAIL: TestBig_Diff (0.00s)\n    --- FAIL: TestBig_Diff/test_num__0 (0.00s)\n        tmp3m3ynrdq_test.go:37: expected '%!s(int=3)', got '%!s(int=4)'\n    --- FAIL: TestBig_Diff/test_num__1 (0.00s)\n        tmp3m3ynrdq_test.go:37: expected '%!s(int=8)', got '%!s(int=12)'\n    --- FAIL: TestBig_Diff/test_num__2 (0.00s)\n        tmp3m3ynrdq_test.go:37: expected '%!s(int=7)', got '%!s(int=9)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    max = nums[0]\n    min = nums[0]\n    for _, v := range nums {\n        if v > max {\n            max = v\n        }\n        if v < min {\n            min = v\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123148,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var min, max int\n    min = nums[0]\n    max = nums[0]\n    for _, v := range nums {\n        if v < min {\n            min = v\n        }\n        if v > max {\n            max = v\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123148,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    if len(nums) > 0 {\n        max = nums[0]\n        min = nums[0]\n    }\n    for _, num := range nums {\n        if num > max {\n            max = num\n        }\n        if num < min {\n            min = num\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123150,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for _, v := range nums {\n        if v > max {\n            max = v\n        }\n        if v < min {\n            min = v\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "--- FAIL: TestBig_Diff (0.00s)\n    --- FAIL: TestBig_Diff/test_num__0 (0.00s)\n        tmpsryopl9i_test.go:37: expected '%!s(int=3)', got '%!s(int=4)'\n    --- FAIL: TestBig_Diff/test_num__1 (0.00s)\n        tmpsryopl9i_test.go:37: expected '%!s(int=8)', got '%!s(int=12)'\n    --- FAIL: TestBig_Diff/test_num__2 (0.00s)\n        tmpsryopl9i_test.go:37: expected '%!s(int=7)', got '%!s(int=9)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    max := nums[0]\n    min := nums[0]\n    for _, num := range nums {\n        if num > max {\n            max = num\n        }\n        if num < min {\n            min = num\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var min, max int\n    for i, v := range nums {\n        if i == 0 {\n            min = v\n            max = v\n        } else {\n            if v < min {\n                min = v\n            }\n            if v > max {\n                max = v\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var min, max int\n    for i, v := range nums {\n        if i == 0 {\n            min = v\n            max = v\n        } else {\n            if v < min {\n                min = v\n            }\n            if v > max {\n                max = v\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for i, v := range nums {\n        if i == 0 {\n            max = v\n            min = v\n        } else {\n            if v > max {\n                max = v\n            }\n            if v < min {\n                min = v\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for i, n := range nums {\n        if i == 0 {\n            max = n\n            min = n\n        } else {\n            if n > max {\n                max = n\n            }\n            if n < min {\n                min = n\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for _, n := range nums {\n        if n > max {\n            max = n\n        }\n        if n < min {\n            min = n\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123148,
      "stdout": "--- FAIL: TestBig_Diff (0.00s)\n    --- FAIL: TestBig_Diff/test_num__0 (0.00s)\n        tmpwrs0zq7t_test.go:37: expected '%!s(int=3)', got '%!s(int=4)'\n    --- FAIL: TestBig_Diff/test_num__1 (0.00s)\n        tmpwrs0zq7t_test.go:37: expected '%!s(int=8)', got '%!s(int=12)'\n    --- FAIL: TestBig_Diff/test_num__2 (0.00s)\n        tmpwrs0zq7t_test.go:37: expected '%!s(int=7)', got '%!s(int=9)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for i, v := range nums {\n        if i == 0 {\n            max = v\n            min = v\n        }\n        if v > max {\n            max = v\n        }\n        if v < min {\n            min = v\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for i, v := range nums {\n        if i == 0 {\n            max = v\n            min = v\n        } else {\n            if v > max {\n                max = v\n            }\n            if v < min {\n                min = v\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for i, v := range nums {\n        if i == 0 {\n            max = v\n            min = v\n        }\n        if v > max {\n            max = v\n        }\n        if v < min {\n            min = v\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for i, num := range nums {\n        if i == 0 {\n            max = num\n            min = num\n        } else {\n            if num > max {\n                max = num\n            }\n            if num < min {\n                min = num\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for _, v := range nums {\n        if v > max {\n            max = v\n        }\n        if v < min {\n            min = v\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "--- FAIL: TestBig_Diff (0.00s)\n    --- FAIL: TestBig_Diff/test_num__0 (0.00s)\n        tmpsryopl9i_test.go:37: expected '%!s(int=3)', got '%!s(int=4)'\n    --- FAIL: TestBig_Diff/test_num__1 (0.00s)\n        tmpsryopl9i_test.go:37: expected '%!s(int=8)', got '%!s(int=12)'\n    --- FAIL: TestBig_Diff/test_num__2 (0.00s)\n        tmpsryopl9i_test.go:37: expected '%!s(int=7)', got '%!s(int=9)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var min, max int\n    for i, v := range nums {\n        if i == 0 {\n            min = v\n            max = v\n        } else {\n            if v < min {\n                min = v\n            }\n            if v > max {\n                max = v\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for _, num := range nums {\n        if num > max {\n            max = num\n        }\n        if num < min {\n            min = num\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "--- FAIL: TestBig_Diff (0.00s)\n    --- FAIL: TestBig_Diff/test_num__0 (0.00s)\n        tmp3m3ynrdq_test.go:37: expected '%!s(int=3)', got '%!s(int=4)'\n    --- FAIL: TestBig_Diff/test_num__1 (0.00s)\n        tmp3m3ynrdq_test.go:37: expected '%!s(int=8)', got '%!s(int=12)'\n    --- FAIL: TestBig_Diff/test_num__2 (0.00s)\n        tmp3m3ynrdq_test.go:37: expected '%!s(int=7)', got '%!s(int=9)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for _, n := range nums {\n        if n > max {\n            max = n\n        }\n        if n < min {\n            min = n\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123148,
      "stdout": "--- FAIL: TestBig_Diff (0.00s)\n    --- FAIL: TestBig_Diff/test_num__0 (0.00s)\n        tmpwrs0zq7t_test.go:37: expected '%!s(int=3)', got '%!s(int=4)'\n    --- FAIL: TestBig_Diff/test_num__1 (0.00s)\n        tmpwrs0zq7t_test.go:37: expected '%!s(int=8)', got '%!s(int=12)'\n    --- FAIL: TestBig_Diff/test_num__2 (0.00s)\n        tmpwrs0zq7t_test.go:37: expected '%!s(int=7)', got '%!s(int=9)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    if len(nums) == 0 {\n        return 0\n    }\n    min := nums[0]\n    max := nums[0]\n    for _, n := range nums {\n        if n < min {\n            min = n\n        }\n        if n > max {\n            max = n\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123150,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for i, v := range nums {\n        if i == 0 {\n            max = v\n            min = v\n        } else {\n            if v > max {\n                max = v\n            }\n            if v < min {\n                min = v\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for _, n := range nums {\n        if n > max {\n            max = n\n        }\n        if n < min {\n            min = n\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123148,
      "stdout": "--- FAIL: TestBig_Diff (0.00s)\n    --- FAIL: TestBig_Diff/test_num__0 (0.00s)\n        tmpwrs0zq7t_test.go:37: expected '%!s(int=3)', got '%!s(int=4)'\n    --- FAIL: TestBig_Diff/test_num__1 (0.00s)\n        tmpwrs0zq7t_test.go:37: expected '%!s(int=8)', got '%!s(int=12)'\n    --- FAIL: TestBig_Diff/test_num__2 (0.00s)\n        tmpwrs0zq7t_test.go:37: expected '%!s(int=7)', got '%!s(int=9)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    max = nums[0]\n    min = nums[0]\n    for _, v := range nums {\n        if v > max {\n            max = v\n        }\n        if v < min {\n            min = v\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123148,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for i, v := range nums {\n        if i == 0 {\n            max = v\n            min = v\n        } else {\n            if v > max {\n                max = v\n            }\n            if v < min {\n                min = v\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var min, max int\n    for i, v := range nums {\n        if i == 0 {\n            min, max = v, v\n        } else {\n            if v < min {\n                min = v\n            }\n            if v > max {\n                max = v\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123150,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for i, n := range nums {\n        if i == 0 {\n            max = n\n            min = n\n        } else {\n            if n > max {\n                max = n\n            }\n            if n < min {\n                min = n\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for i, v := range nums {\n        if i == 0 {\n            max = v\n            min = v\n        } else {\n            if v > max {\n                max = v\n            }\n            if v < min {\n                min = v\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for i, num := range nums {\n        if i == 0 {\n            max = num\n            min = num\n        } else {\n            if num > max {\n                max = num\n            }\n            if num < min {\n                min = num\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for i, v := range nums {\n        if i == 0 {\n            max = v\n            min = v\n        } else {\n            if v > max {\n                max = v\n            }\n            if v < min {\n                min = v\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for i, num := range nums {\n        if i == 0 {\n            max = num\n            min = num\n        } else {\n            if num > max {\n                max = num\n            }\n            if num < min {\n                min = num\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for i, num := range nums {\n        if i == 0 {\n            max = num\n            min = num\n        } else {\n            if num > max {\n                max = num\n            }\n            if num < min {\n                min = num\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for i, v := range nums {\n        if i == 0 {\n            max = v\n            min = v\n        } else {\n            if v > max {\n                max = v\n            }\n            if v < min {\n                min = v\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for i, n := range nums {\n        if i == 0 {\n            max = n\n            min = n\n        } else {\n            if n > max {\n                max = n\n            }\n            if n < min {\n                min = n\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var min, max int\n    for i, v := range nums {\n        if i == 0 {\n            min = v\n            max = v\n        } else {\n            if v < min {\n                min = v\n            }\n            if v > max {\n                max = v\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    min, max := nums[0], nums[0]\n    for _, n := range nums {\n        if n < min {\n            min = n\n        }\n        if n > max {\n            max = n\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123150,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for i, n := range nums {\n        if i == 0 {\n            max = n\n            min = n\n        } else {\n            if n > max {\n                max = n\n            }\n            if n < min {\n                min = n\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for i, num := range nums {\n        if i == 0 {\n            max = num\n            min = num\n        } else {\n            if num > max {\n                max = num\n            }\n            if num < min {\n                min = num\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var min, max int\n    for i, v := range nums {\n        if i == 0 {\n            min = v\n            max = v\n        } else {\n            if v < min {\n                min = v\n            }\n            if v > max {\n                max = v\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    max := nums[0]\n    min := nums[0]\n    for _, v := range nums {\n        if v > max {\n            max = v\n        }\n        if v < min {\n            min = v\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123148,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for _, num := range nums {\n        if num > max {\n            max = num\n        }\n        if num < min {\n            min = num\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "--- FAIL: TestBig_Diff (0.00s)\n    --- FAIL: TestBig_Diff/test_num__0 (0.00s)\n        tmp3m3ynrdq_test.go:37: expected '%!s(int=3)', got '%!s(int=4)'\n    --- FAIL: TestBig_Diff/test_num__1 (0.00s)\n        tmp3m3ynrdq_test.go:37: expected '%!s(int=8)', got '%!s(int=12)'\n    --- FAIL: TestBig_Diff/test_num__2 (0.00s)\n        tmp3m3ynrdq_test.go:37: expected '%!s(int=7)', got '%!s(int=9)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    max = nums[0]\n    min = nums[0]\n    for _, v := range nums {\n        if v > max {\n            max = v\n        }\n        if v < min {\n            min = v\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123148,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for _, num := range nums {\n        if num > max {\n            max = num\n        }\n        if num < min {\n            min = num\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "--- FAIL: TestBig_Diff (0.00s)\n    --- FAIL: TestBig_Diff/test_num__0 (0.00s)\n        tmp3m3ynrdq_test.go:37: expected '%!s(int=3)', got '%!s(int=4)'\n    --- FAIL: TestBig_Diff/test_num__1 (0.00s)\n        tmp3m3ynrdq_test.go:37: expected '%!s(int=8)', got '%!s(int=12)'\n    --- FAIL: TestBig_Diff/test_num__2 (0.00s)\n        tmp3m3ynrdq_test.go:37: expected '%!s(int=7)', got '%!s(int=9)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for _, num := range nums {\n        if num > max {\n            max = num\n        }\n        if num < min {\n            min = num\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "--- FAIL: TestBig_Diff (0.00s)\n    --- FAIL: TestBig_Diff/test_num__0 (0.00s)\n        tmp3m3ynrdq_test.go:37: expected '%!s(int=3)', got '%!s(int=4)'\n    --- FAIL: TestBig_Diff/test_num__1 (0.00s)\n        tmp3m3ynrdq_test.go:37: expected '%!s(int=8)', got '%!s(int=12)'\n    --- FAIL: TestBig_Diff/test_num__2 (0.00s)\n        tmp3m3ynrdq_test.go:37: expected '%!s(int=7)', got '%!s(int=9)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for i, num := range nums {\n        if i == 0 {\n            max, min = num, num\n        }\n        if num > max {\n            max = num\n        }\n        if num < min {\n            min = num\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123148,
      "stdout": "ok  \tcommand-line-arguments\t0.014s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var largest, smallest int\n    for i, v := range nums {\n        if i == 0 {\n            largest = v\n            smallest = v\n        } else {\n            if v > largest {\n                largest = v\n            }\n            if v < smallest {\n                smallest = v\n            }\n        }\n    }\n    return largest - smallest\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123150,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var min, max int\n    for i, v := range nums {\n        if i == 0 {\n            min = v\n            max = v\n        } else {\n            if v < min {\n                min = v\n            }\n            if v > max {\n                max = v\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var min, max int\n    min = nums[0]\n    max = nums[0]\n    for _, v := range nums {\n        if v < min {\n            min = v\n        }\n        if v > max {\n            max = v\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123148,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var min, max int\n    for i, n := range nums {\n        if i == 0 {\n            min, max = n, n\n        } else {\n            if n < min {\n                min = n\n            }\n            if n > max {\n                max = n\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123150,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for i, v := range nums {\n        if i == 0 {\n            max = v\n            min = v\n        } else {\n            if v > max {\n                max = v\n            }\n            if v < min {\n                min = v\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var min, max int\n    for i, num := range nums {\n        if i == 0 {\n            min = num\n            max = num\n        } else {\n            if num < min {\n                min = num\n            }\n            if num > max {\n                max = num\n            }\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123148,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for _, n := range nums {\n        if n > max {\n            max = n\n        }\n        if n < min {\n            min = n\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123148,
      "stdout": "--- FAIL: TestBig_Diff (0.00s)\n    --- FAIL: TestBig_Diff/test_num__0 (0.00s)\n        tmpwrs0zq7t_test.go:37: expected '%!s(int=3)', got '%!s(int=4)'\n    --- FAIL: TestBig_Diff/test_num__1 (0.00s)\n        tmpwrs0zq7t_test.go:37: expected '%!s(int=8)', got '%!s(int=12)'\n    --- FAIL: TestBig_Diff/test_num__2 (0.00s)\n        tmpwrs0zq7t_test.go:37: expected '%!s(int=7)', got '%!s(int=9)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for _, n := range nums {\n        if n > max {\n            max = n\n        }\n        if n < min {\n            min = n\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123148,
      "stdout": "--- FAIL: TestBig_Diff (0.00s)\n    --- FAIL: TestBig_Diff/test_num__0 (0.00s)\n        tmpwrs0zq7t_test.go:37: expected '%!s(int=3)', got '%!s(int=4)'\n    --- FAIL: TestBig_Diff/test_num__1 (0.00s)\n        tmpwrs0zq7t_test.go:37: expected '%!s(int=8)', got '%!s(int=12)'\n    --- FAIL: TestBig_Diff/test_num__2 (0.00s)\n        tmpwrs0zq7t_test.go:37: expected '%!s(int=7)', got '%!s(int=9)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    min, max := nums[0], nums[0]\n    for _, n := range nums {\n        if n > max {\n            max = n\n        }\n        if n < min {\n            min = n\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123150,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for _, n := range nums {\n        if n > max {\n            max = n\n        }\n        if n < min {\n            min = n\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123148,
      "stdout": "--- FAIL: TestBig_Diff (0.00s)\n    --- FAIL: TestBig_Diff/test_num__0 (0.00s)\n        tmpwrs0zq7t_test.go:37: expected '%!s(int=3)', got '%!s(int=4)'\n    --- FAIL: TestBig_Diff/test_num__1 (0.00s)\n        tmpwrs0zq7t_test.go:37: expected '%!s(int=8)', got '%!s(int=12)'\n    --- FAIL: TestBig_Diff/test_num__2 (0.00s)\n        tmpwrs0zq7t_test.go:37: expected '%!s(int=7)', got '%!s(int=9)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for _, v := range nums {\n        if v > max {\n            max = v\n        }\n        if v < min {\n            min = v\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "--- FAIL: TestBig_Diff (0.00s)\n    --- FAIL: TestBig_Diff/test_num__0 (0.00s)\n        tmpsryopl9i_test.go:37: expected '%!s(int=3)', got '%!s(int=4)'\n    --- FAIL: TestBig_Diff/test_num__1 (0.00s)\n        tmpsryopl9i_test.go:37: expected '%!s(int=8)', got '%!s(int=12)'\n    --- FAIL: TestBig_Diff/test_num__2 (0.00s)\n        tmpsryopl9i_test.go:37: expected '%!s(int=7)', got '%!s(int=9)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package big_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the difference between largest and smallest value in a given list.\nfunc big_diff(nums []int) int {\n    var max, min int\n    for _, v := range nums {\n        if v > max {\n            max = v\n        }\n        if v < min {\n            min = v\n        }\n    }\n    return max - min\n}\n\nfunc TestBig_Diff(t *testing.T) {\n  candidate := big_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4}), expected: 3 },\n     { actual: candidate([]int{4, 5, 12}), expected: 8 },\n     { actual: candidate([]int{9, 2, 3}), expected: 7 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510314,
      "stdout": "--- FAIL: TestBig_Diff (0.00s)\n    --- FAIL: TestBig_Diff/test_num__0 (0.00s)\n        tmpsryopl9i_test.go:37: expected '%!s(int=3)', got '%!s(int=4)'\n    --- FAIL: TestBig_Diff/test_num__1 (0.00s)\n        tmpsryopl9i_test.go:37: expected '%!s(int=8)', got '%!s(int=12)'\n    --- FAIL: TestBig_Diff/test_num__2 (0.00s)\n        tmpsryopl9i_test.go:37: expected '%!s(int=7)', got '%!s(int=9)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
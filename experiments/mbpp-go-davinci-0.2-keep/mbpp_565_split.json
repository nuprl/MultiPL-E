{
  "name": "mbpp_565_split",
  "language": "go_test.go",
  "prompt": "package split_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to split a string into characters.\nfunc split(word string) []string {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_565_split.py",
  "prompt_terminology": "verbatim",
  "tests": "func TestSplit(t *testing.T) {\n  candidate := split\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"python\"), expected: []string{\"p\", \"y\", \"t\", \"h\", \"o\", \"n\"} },\n     { actual: candidate(\"Name\"), expected: []string{\"N\", \"a\", \"m\", \"e\"} },\n     { actual: candidate(\"program\"), expected: []string{\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\"} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
  "stop_tokens": [
    "\nfunc",
    "struct",
    "\n// "
  ],
  "completions": [
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var chars []string\n    for _, char := range word {\n        chars = append(chars, string(char))\n    }\n    return chars\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var chars []string\n    for _, char := range word {\n        chars = append(chars, string(char))\n    }\n    return chars\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var chars []string\n    for _, char := range word {\n        chars = append(chars, string(char))\n    }\n    return chars\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var chars []string\n    for _, char := range word {\n        chars = append(chars, string(char))\n    }\n    return chars\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var splitted []string\n    for _, char := range word {\n        splitted = append(splitted, string(char))\n    }\n    return splitted\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, c := range word {\n        result = append(result, string(c))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var chars []string\n    for _, char := range word {\n        chars = append(chars, string(char))\n    }\n    return chars\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var chars []string\n    for _, char := range word {\n        chars = append(chars, string(char))\n    }\n    return chars\n}\n",
    "    var result []string\n    for _, c := range word {\n        result = append(result, string(c))\n    }\n    return result\n}\n",
    "    var chars []string\n    for _, char := range word {\n        chars = append(chars, string(char))\n    }\n    return chars\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var characters []string\n    for _, char := range word {\n        characters = append(characters, string(char))\n    }\n    return characters\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var chars []string\n    for _, char := range word {\n        chars = append(chars, string(char))\n    }\n    return chars\n}\n",
    "    var chars []string\n    for _, char := range word {\n        chars = append(chars, string(char))\n    }\n    return chars\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var chars []string\n    for _, char := range word {\n        chars = append(chars, string(char))\n    }\n    return chars\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, letter := range word {\n        result = append(result, string(letter))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var chars []string\n    for _, char := range word {\n        chars = append(chars, string(char))\n    }\n    return chars\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var chars []string\n    for _, char := range word {\n        chars = append(chars, string(char))\n    }\n    return chars\n}\n",
    "    var chars []string\n    for _, char := range word {\n        chars = append(chars, string(char))\n    }\n    return chars\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var letters []string\n    for _, letter := range word {\n        letters = append(letters, string(letter))\n    }\n    return letters\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var chars []string\n    for _, char := range word {\n        chars = append(chars, string(char))\n    }\n    return chars\n}\n",
    "    var chars []string\n    for _, char := range word {\n        chars = append(chars, string(char))\n    }\n    return chars\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var res []string\n    for _, char := range word {\n        res = append(res, string(char))\n    }\n    return res\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, letter := range word {\n        result = append(result, string(letter))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var chars []string\n    for _, char := range word {\n        chars = append(chars, string(char))\n    }\n    return chars\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var letters []string\n    for _, letter := range word {\n        letters = append(letters, string(letter))\n    }\n    return letters\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var chars []string\n    for _, char := range word {\n        chars = append(chars, string(char))\n    }\n    return chars\n}\n",
    "    var chars []string\n    for _, char := range word {\n        chars = append(chars, string(char))\n    }\n    return chars\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var chars []string\n    for _, char := range word {\n        chars = append(chars, string(char))\n    }\n    return chars\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var chars []string\n    for _, char := range word {\n        chars = append(chars, string(char))\n    }\n    return chars\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n",
    "    var result []string\n    for _, char := range word {\n        result = append(result, string(char))\n    }\n    return result\n}\n"
  ]
}
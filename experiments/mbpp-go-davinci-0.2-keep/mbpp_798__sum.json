{
  "name": "mbpp_798__sum",
  "language": "go_test.go",
  "prompt": "package _sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of an array.\nfunc _sum(arr []int) int {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_798__sum.py",
  "prompt_terminology": "verbatim",
  "tests": "func Test_Sum(t *testing.T) {\n  candidate := _sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3}), expected: 6 },\n     { actual: candidate([]int{15, 12, 13, 10}), expected: 50 },\n     { actual: candidate([]int{0, 1, 2}), expected: 3 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
  "stop_tokens": [
    "\nfunc",
    "struct",
    "\n// "
  ],
  "completions": [
    "    sum := 0\n    for _, v := range arr {\n        sum += v\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range arr {\n        sum += v\n    }\n    return sum\n}\n",
    "    sum := 0\n    for _, v := range arr {\n        sum += v\n    }\n    return sum\n}\n",
    "    sum := 0\n    for _, v := range arr {\n        sum += v\n    }\n    return sum\n}\n",
    "    sum := 0\n    for _, v := range arr {\n        sum += v\n    }\n    return sum\n}\n",
    "    sum := 0\n    for _, v := range arr {\n        sum += v\n    }\n    return sum\n}\n",
    "    sum := 0\n    for _, v := range arr {\n        sum += v\n    }\n    return sum\n}\n",
    "    sum := 0\n    for _, v := range arr {\n        sum += v\n    }\n    return sum\n}\n",
    "    sum := 0\n    for _, v := range arr {\n        sum += v\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range arr {\n        sum += v\n    }\n    return sum\n}\n",
    "    sum := 0\n    for _, v := range arr {\n        sum += v\n    }\n    return sum\n}\n",
    "    sum := 0\n    for _, v := range arr {\n        sum += v\n    }\n    return sum\n}\n",
    "    sum := 0\n    for _, v := range arr {\n        sum += v\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range arr {\n        sum += v\n    }\n    return sum\n}\n",
    "    sum := 0\n    for _, v := range arr {\n        sum += v\n    }\n    return sum\n}\n",
    "    sum := 0\n    for _, v := range arr {\n        sum += v\n    }\n    return sum\n}\n",
    "    sum := 0\n    for _, v := range arr {\n        sum += v\n    }\n    return sum\n}\n",
    "    sum := 0\n    for _, v := range arr {\n        sum += v\n    }\n    return sum\n}\n",
    "    sum := 0\n    for _, v := range arr {\n        sum += v\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range arr {\n        sum += v\n    }\n    return sum\n}\n"
  ]
}
{
  "name": "mbpp_769_Diff",
  "language": "go_test.go",
  "prompt": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_769_Diff.py",
  "prompt_terminology": "verbatim",
  "tests": "func TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
  "stop_tokens": [
    "\nfunc",
    "struct",
    "\n// "
  ],
  "results": [
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var result []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            result = append(result, v)\n        }\n    }\n    for _, v := range li2 {\n        if !In(v, li1) {\n            result = append(result, v)\n        }\n    }\n    return result\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpppp86edt_test.go:12:13: undefined: In\n/tmp/tmpppp86edt_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li = append(li, v)\n        }\n    }\n    for _, v := range li2 {\n        if !In(v, li1) {\n            li = append(li, v)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp_lqjmu5c_test.go:12:13: undefined: In\n/tmp/tmp_lqjmu5c_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li = append(li, v)\n        }\n    }\n    for _, v := range li2 {\n        if !In(v, li1) {\n            li = append(li, v)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp_lqjmu5c_test.go:12:13: undefined: In\n/tmp/tmp_lqjmu5c_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li = append(li, v)\n        }\n    }\n    for _, v := range li2 {\n        if !In(v, li1) {\n            li = append(li, v)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp_lqjmu5c_test.go:12:13: undefined: In\n/tmp/tmp_lqjmu5c_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li3 = append(li3, v)\n        }\n    }\n    for _, v := range li2 {\n        if !In(v, li1) {\n            li3 = append(li3, v)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpv0dcnd1a_test.go:12:13: undefined: In\n/tmp/tmpv0dcnd1a_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    li3 := []int{}\n    for _, v1 := range li1 {\n        found := false\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            li3 = append(li3, v1)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmp8s6m796s_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmp8s6m796s_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmp8s6m796s_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var diff []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            diff = append(diff, v)\n        }\n    }\n    return diff\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp3k60rr2m_test.go:12:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var result []int\n    for _, v := range li1 {\n        if !InList(li2, v) {\n            result = append(result, v)\n        }\n    }\n    return result\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp17jvihg__test.go:12:13: undefined: InList\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li3 = append(li3, v)\n        }\n    }\n    for _, v := range li2 {\n        if !In(v, li1) {\n            li3 = append(li3, v)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpv0dcnd1a_test.go:12:13: undefined: In\n/tmp/tmpv0dcnd1a_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    li := []int{}\n    for _, v1 := range li1 {\n        found := false\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            li = append(li, v1)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmp6ikq0uz2_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmp6ikq0uz2_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmp6ikq0uz2_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        found := false\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            li3 = append(li3, v1)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpz5e1sxk8_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpz5e1sxk8_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpz5e1sxk8_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v := range li1 {\n        if !Contains(li2, v) {\n            li = append(li, v)\n        }\n    }\n    for _, v := range li2 {\n        if !Contains(li1, v) {\n            li = append(li, v)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpxltr79hg_test.go:12:13: undefined: Contains\n/tmp/tmpxltr79hg_test.go:17:13: undefined: Contains\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var diff []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            diff = append(diff, v)\n        }\n    }\n    for _, v := range li2 {\n        if !In(v, li1) {\n            diff = append(diff, v)\n        }\n    }\n    return diff\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp2mlw23f5_test.go:12:13: undefined: In\n/tmp/tmp2mlw23f5_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li3 = append(li3, v1)\n            }\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpoxnxq_ly_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpoxnxq_ly_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpoxnxq_ly_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li3 = append(li3, v1)\n            }\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpoxnxq_ly_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpoxnxq_ly_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpoxnxq_ly_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var result []int\n    for _, v1 := range li1 {\n        found := false\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            result = append(result, v1)\n        }\n    }\n    return result\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmput7tr2d3_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmput7tr2d3_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmput7tr2d3_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li = append(li, v1)\n            }\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpa4fbznw1_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpa4fbznw1_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpa4fbznw1_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li3 = append(li3, v1)\n            }\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpoxnxq_ly_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpoxnxq_ly_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpoxnxq_ly_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li = append(li, v)\n        }\n    }\n    for _, v := range li2 {\n        if !In(v, li1) {\n            li = append(li, v)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp_lqjmu5c_test.go:12:13: undefined: In\n/tmp/tmp_lqjmu5c_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        found := false\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            li3 = append(li3, v1)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpz5e1sxk8_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpz5e1sxk8_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpz5e1sxk8_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li = append(li, v)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123084,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmphkis16zo_test.go:12:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li = append(li, v)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123084,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmphkis16zo_test.go:12:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v1 := range li1 {\n        found := false\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            li = append(li, v1)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123085,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmp_qt0d6un_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmp_qt0d6un_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmp_qt0d6un_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li = append(li, v)\n        }\n    }\n    for _, v := range li2 {\n        if !In(v, li1) {\n            li = append(li, v)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp_lqjmu5c_test.go:12:13: undefined: In\n/tmp/tmp_lqjmu5c_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li3 = append(li3, v)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123084,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmph79_x2rl_test.go:12:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li = append(li, v)\n        }\n    }\n    for _, v := range li2 {\n        if !In(v, li1) {\n            li = append(li, v)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp_lqjmu5c_test.go:12:13: undefined: In\n/tmp/tmp_lqjmu5c_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li3 = append(li3, v1)\n            }\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpoxnxq_ly_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpoxnxq_ly_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpoxnxq_ly_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var diff []int\n    for _, v1 := range li1 {\n        found := false\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            diff = append(diff, v1)\n        }\n    }\n    return diff\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123085,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpvgxcgkyh_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpvgxcgkyh_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpvgxcgkyh_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li = append(li, v)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123084,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmphkis16zo_test.go:12:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li = append(li, v)\n        }\n    }\n    for _, v := range li2 {\n        if !In(v, li1) {\n            li = append(li, v)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp_lqjmu5c_test.go:12:13: undefined: In\n/tmp/tmp_lqjmu5c_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li = append(li, v)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123084,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmphkis16zo_test.go:12:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li = append(li, v1)\n            }\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpa4fbznw1_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpa4fbznw1_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpa4fbznw1_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li = append(li, v)\n        }\n    }\n    for _, v := range li2 {\n        if !In(v, li1) {\n            li = append(li, v)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp_lqjmu5c_test.go:12:13: undefined: In\n/tmp/tmp_lqjmu5c_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li3 = append(li3, v)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123084,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmph79_x2rl_test.go:12:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var diff []int\n    for _, i := range li1 {\n        if !In(i, li2) {\n            diff = append(diff, i)\n        }\n    }\n    for _, i := range li2 {\n        if !In(i, li1) {\n            diff = append(diff, i)\n        }\n    }\n    return diff\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123084,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmppnpu1vsk_test.go:12:13: undefined: In\n/tmp/tmppnpu1vsk_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var diff []int\n    for _, i := range li1 {\n        if !In(i, li2) {\n            diff = append(diff, i)\n        }\n    }\n    for _, i := range li2 {\n        if !In(i, li1) {\n            diff = append(diff, i)\n        }\n    }\n    return diff\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123084,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmppnpu1vsk_test.go:12:13: undefined: In\n/tmp/tmppnpu1vsk_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li3 = append(li3, v)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123084,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmph79_x2rl_test.go:12:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li3 = append(li3, v)\n        }\n    }\n    for _, v := range li2 {\n        if !In(v, li1) {\n            li3 = append(li3, v)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpv0dcnd1a_test.go:12:13: undefined: In\n/tmp/tmpv0dcnd1a_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var result []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            result = append(result, v)\n        }\n    }\n    for _, v := range li2 {\n        if !In(v, li1) {\n            result = append(result, v)\n        }\n    }\n    return result\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpppp86edt_test.go:12:13: undefined: In\n/tmp/tmpppp86edt_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        var flag bool\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                flag = true\n                break\n            }\n        }\n        if !flag {\n            li3 = append(li3, v1)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123085,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmp4mli9hyq_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmp4mli9hyq_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmp4mli9hyq_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v1 := range li1 {\n        found := false\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            li = append(li, v1)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123085,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmp_qt0d6un_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmp_qt0d6un_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmp_qt0d6un_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li = append(li, v)\n        }\n    }\n    for _, v := range li2 {\n        if !In(v, li1) {\n            li = append(li, v)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp_lqjmu5c_test.go:12:13: undefined: In\n/tmp/tmp_lqjmu5c_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li = append(li, v1)\n            }\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpa4fbznw1_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpa4fbznw1_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpa4fbznw1_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v := range li1 {\n        if !contains(li2, v) {\n            li3 = append(li3, v)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123084,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp3twsjz54_test.go:12:13: undefined: contains\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, i := range li1 {\n        if !In(i, li2) {\n            li3 = append(li3, i)\n        }\n    }\n    for _, i := range li2 {\n        if !In(i, li1) {\n            li3 = append(li3, i)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123084,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpc5ykmh59_test.go:12:13: undefined: In\n/tmp/tmpc5ykmh59_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, i := range li1 {\n        if !In(i, li2) {\n            li3 = append(li3, i)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123084,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmps1zcb6vi_test.go:12:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li = append(li, v)\n        }\n    }\n    for _, v := range li2 {\n        if !In(v, li1) {\n            li = append(li, v)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp_lqjmu5c_test.go:12:13: undefined: In\n/tmp/tmp_lqjmu5c_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var diff []int\n    for _, v1 := range li1 {\n        found := false\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            diff = append(diff, v1)\n        }\n    }\n    return diff\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123085,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpvgxcgkyh_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpvgxcgkyh_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpvgxcgkyh_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li3 = append(li3, v)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123084,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmph79_x2rl_test.go:12:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, i := range li1 {\n        if !In(i, li2) {\n            li3 = append(li3, i)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123084,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmps1zcb6vi_test.go:12:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li = append(li, v)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123084,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmphkis16zo_test.go:12:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v1 := range li1 {\n        found := false\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            li = append(li, v1)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123085,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmp_qt0d6un_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmp_qt0d6un_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmp_qt0d6un_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, i := range li1 {\n        if !In(i, li2) {\n            li3 = append(li3, i)\n        }\n    }\n    for _, i := range li2 {\n        if !In(i, li1) {\n            li3 = append(li3, i)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123084,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpc5ykmh59_test.go:12:13: undefined: In\n/tmp/tmpc5ykmh59_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v := range li1 {\n        if !Contains(li2, v) {\n            li3 = append(li3, v)\n        }\n    }\n    for _, v := range li2 {\n        if !Contains(li1, v) {\n            li3 = append(li3, v)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123084,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpyjuv3qk2_test.go:12:13: undefined: Contains\n/tmp/tmpyjuv3qk2_test.go:17:13: undefined: Contains\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li = append(li, v1)\n            }\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpa4fbznw1_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpa4fbznw1_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpa4fbznw1_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v1 := range li1 {\n        found := false\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            li = append(li, v1)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123085,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmp_qt0d6un_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmp_qt0d6un_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmp_qt0d6un_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li3 = append(li3, v)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123084,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmph79_x2rl_test.go:12:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, i := range li1 {\n        if !In(i, li2) {\n            li3 = append(li3, i)\n        }\n    }\n    for _, i := range li2 {\n        if !In(i, li1) {\n            li3 = append(li3, i)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123084,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpc5ykmh59_test.go:12:13: undefined: In\n/tmp/tmpc5ykmh59_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    li3 := []int{}\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li3 = append(li3, v1)\n            }\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123085,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmp78j1jzfc_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmp78j1jzfc_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmp78j1jzfc_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li3 = append(li3, v1)\n            }\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpoxnxq_ly_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpoxnxq_ly_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpoxnxq_ly_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, i := range li1 {\n        if !In(li2, i) {\n            li3 = append(li3, i)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123084,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpdgmijwfv_test.go:12:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v1 := range li1 {\n        var found bool\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            li = append(li, v1)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123085,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpc80ieqir_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpc80ieqir_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpc80ieqir_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var diff []int\n    for _, i := range li1 {\n        if !Contains(li2, i) {\n            diff = append(diff, i)\n        }\n    }\n    for _, i := range li2 {\n        if !Contains(li1, i) {\n            diff = append(diff, i)\n        }\n    }\n    return diff\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123084,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpxf580oco_test.go:12:13: undefined: Contains\n/tmp/tmpxf580oco_test.go:17:13: undefined: Contains\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v := range li1 {\n        if !Contains(li2, v) {\n            li = append(li, v)\n        }\n    }\n    for _, v := range li2 {\n        if !Contains(li1, v) {\n            li = append(li, v)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpxltr79hg_test.go:12:13: undefined: Contains\n/tmp/tmpxltr79hg_test.go:17:13: undefined: Contains\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li = append(li, v)\n        }\n    }\n    for _, v := range li2 {\n        if !In(v, li1) {\n            li = append(li, v)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp_lqjmu5c_test.go:12:13: undefined: In\n/tmp/tmp_lqjmu5c_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var diff []int\n    for _, i := range li1 {\n        if !In(i, li2) {\n            diff = append(diff, i)\n        }\n    }\n    for _, i := range li2 {\n        if !In(i, li1) {\n            diff = append(diff, i)\n        }\n    }\n    return diff\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123084,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmppnpu1vsk_test.go:12:13: undefined: In\n/tmp/tmppnpu1vsk_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, i := range li1 {\n        if !In(i, li2) {\n            li = append(li, i)\n        }\n    }\n    for _, i := range li2 {\n        if !In(i, li1) {\n            li = append(li, i)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123084,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp6c5d7z_1_test.go:12:13: undefined: In\n/tmp/tmp6c5d7z_1_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var res []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            res = append(res, v)\n        }\n    }\n    return res\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123084,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp83com_wl_test.go:12:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, i := range li1 {\n        if !InSlice(i, li2) {\n            li3 = append(li3, i)\n        }\n    }\n    for _, i := range li2 {\n        if !InSlice(i, li1) {\n            li3 = append(li3, i)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123084,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpqn5tn1i9_test.go:12:13: undefined: InSlice\n/tmp/tmpqn5tn1i9_test.go:17:13: undefined: InSlice\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        found := false\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            li3 = append(li3, v1)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpz5e1sxk8_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpz5e1sxk8_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpz5e1sxk8_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li3 = append(li3, v)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123084,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmph79_x2rl_test.go:12:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li3 = append(li3, v1)\n            }\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpoxnxq_ly_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpoxnxq_ly_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpoxnxq_ly_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li3 = append(li3, v)\n        }\n    }\n    for _, v := range li2 {\n        if !In(v, li1) {\n            li3 = append(li3, v)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpv0dcnd1a_test.go:12:13: undefined: In\n/tmp/tmpv0dcnd1a_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var diff []int\n    for _, v1 := range li1 {\n        found := false\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            diff = append(diff, v1)\n        }\n    }\n    return diff\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123085,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpvgxcgkyh_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpvgxcgkyh_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpvgxcgkyh_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, i := range li1 {\n        if !In(i, li2) {\n            li3 = append(li3, i)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123084,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmps1zcb6vi_test.go:12:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, i := range li1 {\n        if !In(i, li2) {\n            li = append(li, i)\n        }\n    }\n    for _, i := range li2 {\n        if !In(i, li1) {\n            li = append(li, i)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123084,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp6c5d7z_1_test.go:12:13: undefined: In\n/tmp/tmp6c5d7z_1_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var res []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            res = append(res, v)\n        }\n    }\n    for _, v := range li2 {\n        if !In(v, li1) {\n            res = append(res, v)\n        }\n    }\n    return res\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123084,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpm5nbk6i6_test.go:12:13: undefined: In\n/tmp/tmpm5nbk6i6_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li = append(li, v)\n        }\n    }\n    for _, v := range li2 {\n        if !In(v, li1) {\n            li = append(li, v)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp_lqjmu5c_test.go:12:13: undefined: In\n/tmp/tmp_lqjmu5c_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li3 = append(li3, v)\n        }\n    }\n    for _, v := range li2 {\n        if !In(v, li1) {\n            li3 = append(li3, v)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpv0dcnd1a_test.go:12:13: undefined: In\n/tmp/tmpv0dcnd1a_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li3 = append(li3, v1)\n            }\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpoxnxq_ly_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpoxnxq_ly_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpoxnxq_ly_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li = append(li, v)\n        }\n    }\n    for _, v := range li2 {\n        if !In(v, li1) {\n            li = append(li, v)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp_lqjmu5c_test.go:12:13: undefined: In\n/tmp/tmp_lqjmu5c_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li3 = append(li3, v1)\n            }\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpoxnxq_ly_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpoxnxq_ly_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpoxnxq_ly_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li = append(li, v1)\n            }\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpa4fbznw1_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpa4fbznw1_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpa4fbznw1_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li3 = append(li3, v)\n        }\n    }\n    for _, v := range li2 {\n        if !In(v, li1) {\n            li3 = append(li3, v)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpv0dcnd1a_test.go:12:13: undefined: In\n/tmp/tmpv0dcnd1a_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li = append(li, v1)\n            }\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpa4fbznw1_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpa4fbznw1_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpa4fbznw1_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li = append(li, v1)\n            }\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpa4fbznw1_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpa4fbznw1_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpa4fbznw1_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li3 = append(li3, v)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123084,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmph79_x2rl_test.go:12:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li3 = append(li3, v1)\n            }\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpoxnxq_ly_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpoxnxq_ly_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpoxnxq_ly_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li3 = append(li3, v1)\n            }\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpoxnxq_ly_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpoxnxq_ly_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpoxnxq_ly_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li = append(li, v)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123084,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmphkis16zo_test.go:12:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li = append(li, v)\n        }\n    }\n    for _, v := range li2 {\n        if !In(v, li1) {\n            li = append(li, v)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp_lqjmu5c_test.go:12:13: undefined: In\n/tmp/tmp_lqjmu5c_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li3 = append(li3, v)\n        }\n    }\n    for _, v := range li2 {\n        if !In(v, li1) {\n            li3 = append(li3, v)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpv0dcnd1a_test.go:12:13: undefined: In\n/tmp/tmpv0dcnd1a_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li3 = append(li3, v1)\n            }\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpoxnxq_ly_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpoxnxq_ly_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpoxnxq_ly_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, i := range li1 {\n        if !Contains(li2, i) {\n            li3 = append(li3, i)\n        }\n    }\n    for _, i := range li2 {\n        if !Contains(li1, i) {\n            li3 = append(li3, i)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123084,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp21b3me_m_test.go:12:13: undefined: Contains\n/tmp/tmp21b3me_m_test.go:17:13: undefined: Contains\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var diff []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            diff = append(diff, v)\n        }\n    }\n    return diff\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp3k60rr2m_test.go:12:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li = append(li, v1)\n            }\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpa4fbznw1_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpa4fbznw1_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpa4fbznw1_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, i := range li1 {\n        if !In(i, li2) {\n            li3 = append(li3, i)\n        }\n    }\n    for _, i := range li2 {\n        if !In(i, li1) {\n            li3 = append(li3, i)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123084,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpc5ykmh59_test.go:12:13: undefined: In\n/tmp/tmpc5ykmh59_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var diff []int\n    for _, v1 := range li1 {\n        found := false\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            diff = append(diff, v1)\n        }\n    }\n    return diff\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123085,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpvgxcgkyh_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpvgxcgkyh_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpvgxcgkyh_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li3 = append(li3, v1)\n            }\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpoxnxq_ly_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpoxnxq_ly_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpoxnxq_ly_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li3 = append(li3, v)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123084,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmph79_x2rl_test.go:12:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li = append(li, v)\n        }\n    }\n    for _, v := range li2 {\n        if !In(v, li1) {\n            li = append(li, v)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp_lqjmu5c_test.go:12:13: undefined: In\n/tmp/tmp_lqjmu5c_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        found := false\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            li3 = append(li3, v1)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpz5e1sxk8_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpz5e1sxk8_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpz5e1sxk8_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li3 = append(li3, v)\n        }\n    }\n    for _, v := range li2 {\n        if !In(v, li1) {\n            li3 = append(li3, v)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpv0dcnd1a_test.go:12:13: undefined: In\n/tmp/tmpv0dcnd1a_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var diff []int\n    for _, v1 := range li1 {\n        found := false\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            diff = append(diff, v1)\n        }\n    }\n    return diff\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123085,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpvgxcgkyh_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpvgxcgkyh_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpvgxcgkyh_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, i := range li1 {\n        if !In(i, li2) {\n            li = append(li, i)\n        }\n    }\n    for _, i := range li2 {\n        if !In(i, li1) {\n            li = append(li, i)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123084,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp6c5d7z_1_test.go:12:13: undefined: In\n/tmp/tmp6c5d7z_1_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var diff []int\n    for _, v1 := range li1 {\n        found := false\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            diff = append(diff, v1)\n        }\n    }\n    return diff\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123085,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpvgxcgkyh_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpvgxcgkyh_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpvgxcgkyh_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var diff []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            diff = append(diff, v)\n        }\n    }\n    for _, v := range li2 {\n        if !In(v, li1) {\n            diff = append(diff, v)\n        }\n    }\n    return diff\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp2mlw23f5_test.go:12:13: undefined: In\n/tmp/tmp2mlw23f5_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        found := false\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            li3 = append(li3, v1)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpz5e1sxk8_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpz5e1sxk8_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpz5e1sxk8_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li = append(li, v)\n        }\n    }\n    for _, v := range li2 {\n        if !In(v, li1) {\n            li = append(li, v)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp_lqjmu5c_test.go:12:13: undefined: In\n/tmp/tmp_lqjmu5c_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li = append(li, v1)\n            }\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpa4fbznw1_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpa4fbznw1_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpa4fbznw1_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li3 = append(li3, v)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123084,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmph79_x2rl_test.go:12:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, i := range li1 {\n        if !In(i, li2) {\n            li = append(li, i)\n        }\n    }\n    for _, i := range li2 {\n        if !In(i, li1) {\n            li = append(li, i)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123084,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp6c5d7z_1_test.go:12:13: undefined: In\n/tmp/tmp6c5d7z_1_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li3 = append(li3, v1)\n            }\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpoxnxq_ly_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpoxnxq_ly_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpoxnxq_ly_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li3 = append(li3, v)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123084,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmph79_x2rl_test.go:12:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li = append(li, v)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123084,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmphkis16zo_test.go:12:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, i := range li1 {\n        if !In(i, li2) {\n            li3 = append(li3, i)\n        }\n    }\n    for _, i := range li2 {\n        if !In(i, li1) {\n            li3 = append(li3, i)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123084,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpc5ykmh59_test.go:12:13: undefined: In\n/tmp/tmpc5ykmh59_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li = append(li, v)\n        }\n    }\n    for _, v := range li2 {\n        if !In(v, li1) {\n            li = append(li, v)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp_lqjmu5c_test.go:12:13: undefined: In\n/tmp/tmp_lqjmu5c_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li3 = append(li3, v1)\n            }\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpoxnxq_ly_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpoxnxq_ly_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpoxnxq_ly_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, i := range li1 {\n        if !Contains(li2, i) {\n            li = append(li, i)\n        }\n    }\n    for _, i := range li2 {\n        if !Contains(li1, i) {\n            li = append(li, i)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123084,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpeprxxnn7_test.go:12:13: undefined: Contains\n/tmp/tmpeprxxnn7_test.go:17:13: undefined: Contains\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v := range li1 {\n        if !InList(v, li2) {\n            li = append(li, v)\n        }\n    }\n    for _, v := range li2 {\n        if !InList(v, li1) {\n            li = append(li, v)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123084,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmps1l7llap_test.go:12:13: undefined: InList\n/tmp/tmps1l7llap_test.go:17:13: undefined: InList\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li3 = append(li3, v)\n        }\n    }\n    for _, v := range li2 {\n        if !In(v, li1) {\n            li3 = append(li3, v)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpv0dcnd1a_test.go:12:13: undefined: In\n/tmp/tmpv0dcnd1a_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li = append(li, v)\n        }\n    }\n    for _, v := range li2 {\n        if !In(v, li1) {\n            li = append(li, v)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp_lqjmu5c_test.go:12:13: undefined: In\n/tmp/tmp_lqjmu5c_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var diff []int\n    for _, v1 := range li1 {\n        found := false\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            diff = append(diff, v1)\n        }\n    }\n    return diff\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123085,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpvgxcgkyh_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpvgxcgkyh_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpvgxcgkyh_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li = append(li, v)\n        }\n    }\n    for _, v := range li2 {\n        if !In(v, li1) {\n            li = append(li, v)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp_lqjmu5c_test.go:12:13: undefined: In\n/tmp/tmp_lqjmu5c_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, i := range li1 {\n        if !In(i, li2) {\n            li3 = append(li3, i)\n        }\n    }\n    for _, i := range li2 {\n        if !In(i, li1) {\n            li3 = append(li3, i)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123084,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpc5ykmh59_test.go:12:13: undefined: In\n/tmp/tmpc5ykmh59_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        found := false\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            li3 = append(li3, v1)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpz5e1sxk8_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpz5e1sxk8_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpz5e1sxk8_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var diff []int\n    for _, i := range li1 {\n        if !Contains(li2, i) {\n            diff = append(diff, i)\n        }\n    }\n    for _, i := range li2 {\n        if !Contains(li1, i) {\n            diff = append(diff, i)\n        }\n    }\n    return diff\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123084,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpxf580oco_test.go:12:13: undefined: Contains\n/tmp/tmpxf580oco_test.go:17:13: undefined: Contains\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v := range li1 {\n        if !InSlice(v, li2) {\n            li = append(li, v)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123084,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp4rwe9yjn_test.go:12:13: undefined: InSlice\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var diff []int\n    for _, i := range li1 {\n        if !In(i, li2) {\n            diff = append(diff, i)\n        }\n    }\n    for _, i := range li2 {\n        if !In(i, li1) {\n            diff = append(diff, i)\n        }\n    }\n    return diff\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123084,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmppnpu1vsk_test.go:12:13: undefined: In\n/tmp/tmppnpu1vsk_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        found := false\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            li3 = append(li3, v1)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpz5e1sxk8_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpz5e1sxk8_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpz5e1sxk8_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var diff []int\n    for _, v1 := range li1 {\n        found := false\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            diff = append(diff, v1)\n        }\n    }\n    return diff\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123085,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpvgxcgkyh_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpvgxcgkyh_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpvgxcgkyh_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li = append(li, v1)\n            }\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpa4fbznw1_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpa4fbznw1_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpa4fbznw1_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li = append(li, v1)\n            }\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpa4fbznw1_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpa4fbznw1_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpa4fbznw1_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, i := range li1 {\n        if !In(i, li2) {\n            li3 = append(li3, i)\n        }\n    }\n    for _, i := range li2 {\n        if !In(i, li1) {\n            li3 = append(li3, i)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123084,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpc5ykmh59_test.go:12:13: undefined: In\n/tmp/tmpc5ykmh59_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        found := false\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            li3 = append(li3, v1)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpz5e1sxk8_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpz5e1sxk8_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpz5e1sxk8_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v := range li1 {\n        if !Contains(li2, v) {\n            li = append(li, v)\n        }\n    }\n    for _, v := range li2 {\n        if !Contains(li1, v) {\n            li = append(li, v)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpxltr79hg_test.go:12:13: undefined: Contains\n/tmp/tmpxltr79hg_test.go:17:13: undefined: Contains\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var diff []int\n    for _, v1 := range li1 {\n        found := false\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            diff = append(diff, v1)\n        }\n    }\n    return diff\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123085,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpvgxcgkyh_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpvgxcgkyh_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpvgxcgkyh_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var diff []int\n    for _, v1 := range li1 {\n        found := false\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            diff = append(diff, v1)\n        }\n    }\n    return diff\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123085,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpvgxcgkyh_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpvgxcgkyh_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpvgxcgkyh_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li3 = append(li3, v)\n        }\n    }\n    for _, v := range li2 {\n        if !In(v, li1) {\n            li3 = append(li3, v)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpv0dcnd1a_test.go:12:13: undefined: In\n/tmp/tmpv0dcnd1a_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v1 := range li1 {\n        found := false\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            li = append(li, v1)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123085,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmp_qt0d6un_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmp_qt0d6un_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmp_qt0d6un_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, i := range li1 {\n        if !In(i, li2) {\n            li = append(li, i)\n        }\n    }\n    for _, i := range li2 {\n        if !In(i, li1) {\n            li = append(li, i)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123084,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp6c5d7z_1_test.go:12:13: undefined: In\n/tmp/tmp6c5d7z_1_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li = append(li, v)\n        }\n    }\n    for _, v := range li2 {\n        if !In(v, li1) {\n            li = append(li, v)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp_lqjmu5c_test.go:12:13: undefined: In\n/tmp/tmp_lqjmu5c_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var diff []int\n    for _, v1 := range li1 {\n        found := false\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            diff = append(diff, v1)\n        }\n    }\n    return diff\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123085,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpvgxcgkyh_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpvgxcgkyh_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpvgxcgkyh_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    li3 := []int{}\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li3 = append(li3, v1)\n            }\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123085,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmp78j1jzfc_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmp78j1jzfc_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmp78j1jzfc_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li3 = append(li3, v)\n        }\n    }\n    for _, v := range li2 {\n        if !In(v, li1) {\n            li3 = append(li3, v)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpv0dcnd1a_test.go:12:13: undefined: In\n/tmp/tmpv0dcnd1a_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v := range li1 {\n        if !Contains(li2, v) {\n            li3 = append(li3, v)\n        }\n    }\n    for _, v := range li2 {\n        if !Contains(li1, v) {\n            li3 = append(li3, v)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123084,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpyjuv3qk2_test.go:12:13: undefined: Contains\n/tmp/tmpyjuv3qk2_test.go:17:13: undefined: Contains\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li3 = append(li3, v)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123084,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmph79_x2rl_test.go:12:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li = append(li, v)\n        }\n    }\n    for _, v := range li2 {\n        if !In(v, li1) {\n            li = append(li, v)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp_lqjmu5c_test.go:12:13: undefined: In\n/tmp/tmp_lqjmu5c_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li3 = append(li3, v1)\n            }\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpoxnxq_ly_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpoxnxq_ly_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpoxnxq_ly_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li3 = append(li3, v)\n        }\n    }\n    for _, v := range li2 {\n        if !In(v, li1) {\n            li3 = append(li3, v)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpv0dcnd1a_test.go:12:13: undefined: In\n/tmp/tmpv0dcnd1a_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li = append(li, v)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123084,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmphkis16zo_test.go:12:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li3 = append(li3, v)\n        }\n    }\n    for _, v := range li2 {\n        if !In(v, li1) {\n            li3 = append(li3, v)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpv0dcnd1a_test.go:12:13: undefined: In\n/tmp/tmpv0dcnd1a_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li = append(li, v)\n        }\n    }\n    for _, v := range li2 {\n        if !In(v, li1) {\n            li = append(li, v)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp_lqjmu5c_test.go:12:13: undefined: In\n/tmp/tmp_lqjmu5c_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li = append(li, v)\n        }\n    }\n    for _, v := range li2 {\n        if !In(v, li1) {\n            li = append(li, v)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp_lqjmu5c_test.go:12:13: undefined: In\n/tmp/tmp_lqjmu5c_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li = append(li, v)\n        }\n    }\n    for _, v := range li2 {\n        if !In(v, li1) {\n            li = append(li, v)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp_lqjmu5c_test.go:12:13: undefined: In\n/tmp/tmp_lqjmu5c_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li3 = append(li3, v1)\n            }\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpoxnxq_ly_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpoxnxq_ly_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpoxnxq_ly_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li = append(li, v)\n        }\n    }\n    for _, v := range li2 {\n        if !In(v, li1) {\n            li = append(li, v)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp_lqjmu5c_test.go:12:13: undefined: In\n/tmp/tmp_lqjmu5c_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li3 = append(li3, v1)\n            }\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpoxnxq_ly_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpoxnxq_ly_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpoxnxq_ly_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li = append(li, v)\n        }\n    }\n    for _, v := range li2 {\n        if !In(v, li1) {\n            li = append(li, v)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp_lqjmu5c_test.go:12:13: undefined: In\n/tmp/tmp_lqjmu5c_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    li3 := []int{}\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li3 = append(li3, v1)\n            }\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123085,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmp78j1jzfc_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmp78j1jzfc_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmp78j1jzfc_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        var found bool\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            li3 = append(li3, v1)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123085,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpd2xcjuj7_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpd2xcjuj7_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpd2xcjuj7_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    // make a map of the second list\n    m := make(map[int]bool)\n    for _, v := range li2 {\n        m[v] = true\n    }\n    // make a new list\n    var li3 []int\n    for _, v := range li1 {\n        if !m[v] {\n            li3 = append(li3, v)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123085,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmp5cneit8p_test.go:40: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmp5cneit8p_test.go:40: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmp5cneit8p_test.go:40: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li = append(li, v)\n        }\n    }\n    for _, v := range li2 {\n        if !In(v, li1) {\n            li = append(li, v)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp_lqjmu5c_test.go:12:13: undefined: In\n/tmp/tmp_lqjmu5c_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, i := range li1 {\n        if !In(i, li2) {\n            li = append(li, i)\n        }\n    }\n    for _, i := range li2 {\n        if !In(i, li1) {\n            li = append(li, i)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123084,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp6c5d7z_1_test.go:12:13: undefined: In\n/tmp/tmp6c5d7z_1_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li = append(li, v)\n        }\n    }\n    for _, v := range li2 {\n        if !In(v, li1) {\n            li = append(li, v)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp_lqjmu5c_test.go:12:13: undefined: In\n/tmp/tmp_lqjmu5c_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var diff []int\n    for _, v1 := range li1 {\n        found := false\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            diff = append(diff, v1)\n        }\n    }\n    return diff\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123085,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpvgxcgkyh_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpvgxcgkyh_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpvgxcgkyh_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var result []int\n    for _, v := range li1 {\n        if !Contains(li2, v) {\n            result = append(result, v)\n        }\n    }\n    for _, v := range li2 {\n        if !Contains(li1, v) {\n            result = append(result, v)\n        }\n    }\n    return result\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123085,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp7sfu00f9_test.go:12:13: undefined: Contains\n/tmp/tmp7sfu00f9_test.go:17:13: undefined: Contains\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v := range li1 {\n        if !Contains(li2, v) {\n            li = append(li, v)\n        }\n    }\n    for _, v := range li2 {\n        if !Contains(li1, v) {\n            li = append(li, v)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpxltr79hg_test.go:12:13: undefined: Contains\n/tmp/tmpxltr79hg_test.go:17:13: undefined: Contains\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li3 = append(li3, v)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123084,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmph79_x2rl_test.go:12:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, i := range li1 {\n        if !In(i, li2) {\n            li3 = append(li3, i)\n        }\n    }\n    for _, i := range li2 {\n        if !In(i, li1) {\n            li3 = append(li3, i)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123084,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpc5ykmh59_test.go:12:13: undefined: In\n/tmp/tmpc5ykmh59_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li = append(li, v1)\n            }\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpa4fbznw1_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpa4fbznw1_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpa4fbznw1_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, i := range li1 {\n        if !In(i, li2) {\n            li3 = append(li3, i)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123084,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmps1zcb6vi_test.go:12:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li = append(li, v)\n        }\n    }\n    for _, v := range li2 {\n        if !In(v, li1) {\n            li = append(li, v)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp_lqjmu5c_test.go:12:13: undefined: In\n/tmp/tmp_lqjmu5c_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li3 = append(li3, v)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123084,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmph79_x2rl_test.go:12:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v := range li1 {\n        if !Contains(li2, v) {\n            li = append(li, v)\n        }\n    }\n    for _, v := range li2 {\n        if !Contains(li1, v) {\n            li = append(li, v)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpxltr79hg_test.go:12:13: undefined: Contains\n/tmp/tmpxltr79hg_test.go:17:13: undefined: Contains\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li3 = append(li3, v1)\n            }\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpoxnxq_ly_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpoxnxq_ly_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpoxnxq_ly_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li = append(li, v)\n        }\n    }\n    for _, v := range li2 {\n        if !In(v, li1) {\n            li = append(li, v)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp_lqjmu5c_test.go:12:13: undefined: In\n/tmp/tmp_lqjmu5c_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var diff []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            diff = append(diff, v)\n        }\n    }\n    for _, v := range li2 {\n        if !In(v, li1) {\n            diff = append(diff, v)\n        }\n    }\n    return diff\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp2mlw23f5_test.go:12:13: undefined: In\n/tmp/tmp2mlw23f5_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li = append(li, v)\n        }\n    }\n    for _, v := range li2 {\n        if !In(v, li1) {\n            li = append(li, v)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp_lqjmu5c_test.go:12:13: undefined: In\n/tmp/tmp_lqjmu5c_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li = append(li, v)\n        }\n    }\n    for _, v := range li2 {\n        if !In(v, li1) {\n            li = append(li, v)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp_lqjmu5c_test.go:12:13: undefined: In\n/tmp/tmp_lqjmu5c_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var result []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            result = append(result, v)\n        }\n    }\n    for _, v := range li2 {\n        if !In(v, li1) {\n            result = append(result, v)\n        }\n    }\n    return result\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpppp86edt_test.go:12:13: undefined: In\n/tmp/tmpppp86edt_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li = append(li, v1)\n            }\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpa4fbznw1_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpa4fbznw1_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpa4fbznw1_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li3 = append(li3, v1)\n            }\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpoxnxq_ly_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpoxnxq_ly_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpoxnxq_ly_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    li3 := []int{}\n    for _, i := range li1 {\n        if !In(i, li2) {\n            li3 = append(li3, i)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123085,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmptm01y35l_test.go:12:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li3 = append(li3, v1)\n            }\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpoxnxq_ly_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpoxnxq_ly_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpoxnxq_ly_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v := range li1 {\n        if !InList(v, li2) {\n            li3 = append(li3, v)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123085,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpkd5ivjjp_test.go:12:13: undefined: InList\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var result []int\n    for _, v1 := range li1 {\n        found := false\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            result = append(result, v1)\n        }\n    }\n    return result\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmput7tr2d3_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmput7tr2d3_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmput7tr2d3_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var diff []int\n    for _, i := range li1 {\n        if !In(i, li2) {\n            diff = append(diff, i)\n        }\n    }\n    for _, i := range li2 {\n        if !In(i, li1) {\n            diff = append(diff, i)\n        }\n    }\n    return diff\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123084,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmppnpu1vsk_test.go:12:13: undefined: In\n/tmp/tmppnpu1vsk_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li3 = append(li3, v1)\n            }\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpoxnxq_ly_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpoxnxq_ly_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpoxnxq_ly_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li = append(li, v)\n        }\n    }\n    for _, v := range li2 {\n        if !In(v, li1) {\n            li = append(li, v)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp_lqjmu5c_test.go:12:13: undefined: In\n/tmp/tmp_lqjmu5c_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v1 := range li1 {\n        found := false\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            li = append(li, v1)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123085,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmp_qt0d6un_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmp_qt0d6un_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmp_qt0d6un_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var diff []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            diff = append(diff, v)\n        }\n    }\n    return diff\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp3k60rr2m_test.go:12:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, i := range li1 {\n        if !In(i, li2) {\n            li3 = append(li3, i)\n        }\n    }\n    for _, i := range li2 {\n        if !In(i, li1) {\n            li3 = append(li3, i)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123084,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpc5ykmh59_test.go:12:13: undefined: In\n/tmp/tmpc5ykmh59_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li3 = append(li3, v)\n        }\n    }\n    for _, v := range li2 {\n        if !In(v, li1) {\n            li3 = append(li3, v)\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpv0dcnd1a_test.go:12:13: undefined: In\n/tmp/tmpv0dcnd1a_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li = append(li, v1)\n            }\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpa4fbznw1_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpa4fbznw1_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpa4fbznw1_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li []int\n    for _, v := range li1 {\n        if !In(v, li2) {\n            li = append(li, v)\n        }\n    }\n    for _, v := range li2 {\n        if !In(v, li1) {\n            li = append(li, v)\n        }\n    }\n    return li\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp_lqjmu5c_test.go:12:13: undefined: In\n/tmp/tmp_lqjmu5c_test.go:17:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li3 = append(li3, v1)\n            }\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpoxnxq_ly_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpoxnxq_ly_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpoxnxq_ly_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var result []int\n    for _, v1 := range li1 {\n        found := false\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                found = true\n                break\n            }\n        }\n        if !found {\n            result = append(result, v1)\n        }\n    }\n    return result\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmput7tr2d3_test.go:41: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=10) %!s(int=15) %!s(int=20) %!s(int=30)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmput7tr2d3_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmput7tr2d3_test.go:41: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=2) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var diff []int\n    for _, i := range li1 {\n        if !In(i, li2) {\n            diff = append(diff, i)\n        }\n    }\n    return diff\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123085,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpu33rln9e_test.go:12:13: undefined: In\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to get the difference between two lists.\nfunc Diff(li1 []int, li2 []int) []int {\n    var li3 []int\n    for _, v1 := range li1 {\n        for _, v2 := range li2 {\n            if v1 == v2 {\n                li3 = append(li3, v1)\n            }\n        }\n    }\n    return li3\n}\n\nfunc TestDiff(t *testing.T) {\n  candidate := Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{10, 15, 20, 25, 30, 35, 40}, []int{25, 40, 35}), expected: []int{10, 20, 30, 15} },\n     { actual: candidate([]int{1, 2, 3, 4, 5}, []int{6, 7, 1}), expected: []int{2, 3, 4, 5, 6, 7} },\n     { actual: candidate([]int{1, 2, 3}, []int{6, 7, 1}), expected: []int{2, 3, 6, 7} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510195,
      "stdout": "--- FAIL: TestDiff (0.00s)\n    --- FAIL: TestDiff/test_num__0 (0.00s)\n        tmpoxnxq_ly_test.go:36: expected '[%!s(int=10) %!s(int=20) %!s(int=30) %!s(int=15)]', got '[%!s(int=25) %!s(int=35) %!s(int=40)]'\n    --- FAIL: TestDiff/test_num__1 (0.00s)\n        tmpoxnxq_ly_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\n    --- FAIL: TestDiff/test_num__2 (0.00s)\n        tmpoxnxq_ly_test.go:36: expected '[%!s(int=2) %!s(int=3) %!s(int=6) %!s(int=7)]', got '[%!s(int=1)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
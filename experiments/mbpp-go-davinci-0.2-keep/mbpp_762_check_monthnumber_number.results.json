{
  "name": "mbpp_762_check_monthnumber_number",
  "language": "go_test.go",
  "prompt": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_762_check_monthnumber_number.py",
  "prompt_terminology": "verbatim",
  "tests": "func TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
  "stop_tokens": [
    "\nfunc",
    "struct",
    "\n// "
  ],
  "results": [
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 1 || monthnum3 == 3 || monthnum3 == 5 || monthnum3 == 7 || monthnum3 == 8 || monthnum3 == 10 || monthnum3 == 12 {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510089,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp5coq52pe_test.go:32: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp5coq52pe_test.go:32: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    switch monthnum3 {\n        case 1, 3, 5, 7, 8, 10, 12:\n            return true\n        case 2:\n            return false\n        case 4, 6, 9, 11:\n            return true\n        default:\n            return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510089,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp04ne9grb_test.go:37: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    }\n    if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    }\n    return true\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510089,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp1wk8xxe9_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp1wk8xxe9_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    switch monthnum3 {\n        case 2:\n            return false\n        case 4:\n            return true\n        case 6:\n            return true\n        case 9:\n            return true\n        case 11:\n            return true\n        default:\n            return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122959,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return true\n    }\n    return false\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122957,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 <= 7 {\n        if monthnum3 % 2 == 0 {\n            return true\n        } else {\n            return false\n        }\n    } else if monthnum3 > 7 {\n        if monthnum3 % 2 == 0 {\n            return false\n        } else {\n            return true\n        }\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122959,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    }\n    if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    }\n    return true\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510089,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp1wk8xxe9_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp1wk8xxe9_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    switch monthnum3 {\n    case 1, 3, 5, 7, 8, 10, 12:\n        return true\n    case 2:\n        return false\n    case 4, 6, 9, 11:\n        return true\n    default:\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122959,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmppzum5o_2_test.go:37: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    }\n    if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    }\n    return true\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510089,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp1wk8xxe9_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp1wk8xxe9_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    switch monthnum3 {\n        case 4, 6, 9, 11:\n            return true\n        default:\n            return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122959,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    switch monthnum3 {\n        case 1, 3, 5, 7, 8, 10, 12:\n            return true\n        case 2:\n            return false\n        case 4, 6, 9, 11:\n            return true\n        default:\n            return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510089,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp04ne9grb_test.go:37: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    switch monthnum3 {\n        case 1, 3, 5, 7, 8, 10, 12:\n            return true\n        case 2:\n            return false\n        case 4, 6, 9, 11:\n            return true\n        default:\n            return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510089,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp04ne9grb_test.go:37: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 1 || monthnum3 == 3 || monthnum3 == 5 || monthnum3 == 7 || monthnum3 == 8 || monthnum3 == 10 || monthnum3 == 12 {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510089,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp5coq52pe_test.go:32: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp5coq52pe_test.go:32: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    var monthnumber_number bool\n    if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        monthnumber_number = true\n    } else {\n        monthnumber_number = false\n    }\n    return monthnumber_number\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122957,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 1 || monthnum3 == 3 || monthnum3 == 5 || monthnum3 == 7 || monthnum3 == 8 || monthnum3 == 10 || monthnum3 == 12 {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510089,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp5coq52pe_test.go:32: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp5coq52pe_test.go:32: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    switch monthnum3 {\n        case 1, 3, 5, 7, 8, 10, 12:\n            return true\n        case 2:\n            return false\n        case 4, 6, 9, 11:\n            return true\n        default:\n            return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510089,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp04ne9grb_test.go:37: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return true\n    }\n    return false\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122957,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 1 || monthnum3 == 3 || monthnum3 == 5 || monthnum3 == 7 || monthnum3 == 8 || monthnum3 == 10 || monthnum3 == 12 {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510089,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp5coq52pe_test.go:32: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp5coq52pe_test.go:32: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return true\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122959,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__1 (0.00s)\n        tmpxscubpil_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 2 {\n        return false\n    } else if monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11 {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510088,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp8murhy5l_test.go:34: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package check_monthnumber_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\nfunc check_monthnumber_number(monthnum3 int) bool {\n    if monthnum3 == 1 || monthnum3 == 3 || monthnum3 == 5 || monthnum3 == 7 || monthnum3 == 8 || monthnum3 == 10 || monthnum3 == 12 {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunc TestCheck_Monthnumber_Number(t *testing.T) {\n  candidate := check_monthnumber_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: true },\n     { actual: candidate(2), expected: false },\n     { actual: candidate(12), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510089,
      "stdout": "--- FAIL: TestCheck_Monthnumber_Number (0.00s)\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__0 (0.00s)\n        tmp5coq52pe_test.go:32: expected '%!s(bool=true)', got '%!s(bool=false)'\n    --- FAIL: TestCheck_Monthnumber_Number/test_num__2 (0.00s)\n        tmp5coq52pe_test.go:32: expected '%!s(bool=false)', got '%!s(bool=true)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
{
  "name": "mbpp_79_word_len",
  "language": "go_test.go",
  "prompt": "package word_len_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to check whether the length of the word is odd or not.\nfunc word_len(s string) bool {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_79_word_len.py",
  "prompt_terminology": "verbatim",
  "tests": "func TestWord_Len(t *testing.T) {\n  candidate := word_len\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"Hadoop\"), expected: false },\n     { actual: candidate(\"great\"), expected: true },\n     { actual: candidate(\"structure\"), expected: true },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
  "stop_tokens": [
    "\nfunc",
    "struct",
    "\n// "
  ],
  "completions": [
    "    return len(s) % 2 == 0\n}\n",
    "    if len(s) % 2 == 0 {\n        return true\n    }\n    return false\n}\n",
    "    if len(s) % 2 == 0 {\n        return false\n    }\n    return true\n}\n",
    "    return len(s) % 2 == 1\n}\n",
    "    if len(s) % 2 == 0 {\n        return true\n    }\n    return false\n}\n",
    "    return len(s) % 2 == 1\n}\n",
    "    return len(s) % 2 == 1\n}\n",
    "    if len(s) % 2 == 0 {\n        return true\n    }\n    return false\n}\n",
    "    return len(s) % 2 == 1\n}\n",
    "    return len(s) % 2 == 0\n}\n",
    "    return len(s) % 2 == 1\n}\n",
    "    return len(s) % 2 == 0\n}\n",
    "    return len(s) % 2 == 1\n}\n",
    "    if len(s) % 2 == 0 {\n        return false\n    }\n    return true\n}\n",
    "    return len(s) % 2 == 1\n}\n",
    "    return len(s) % 2 == 0\n}\n",
    "    if len(s) % 2 == 0 {\n        return false\n    }\n    return true\n}\n",
    "    if len(s) % 2 == 0 {\n        return false\n    }\n    return true\n}\n",
    "    if len(s) % 2 == 0 {\n        return false\n    }\n    return true\n}\n",
    "    if len(s) % 2 == 0 {\n        return false\n    }\n    return true\n}\n"
  ]
}
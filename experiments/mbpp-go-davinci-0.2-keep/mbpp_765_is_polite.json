{
  "name": "mbpp_765_is_polite",
  "language": "go_test.go",
  "prompt": "package is_polite_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find nth polite number. geeksforgeeks.org/n-th-polite-number/\nfunc is_polite(n int) int {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_765_is_polite.py",
  "prompt_terminology": "verbatim",
  "tests": "func TestIs_Polite(t *testing.T) {\n  candidate := is_polite\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 11 },\n     { actual: candidate(4), expected: 7 },\n     { actual: candidate(9), expected: 13 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
  "stop_tokens": [
    "\nfunc",
    "struct",
    "\n// "
  ],
  "completions": [
    "    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 4\n    }\n    return is_polite(n-1) + is_polite(n-2) + is_polite(n-3)\n}\n",
    "    if n == 1 {\n        return 1\n    }\n    if n % 2 == 0 {\n        return n / 2\n    }\n    return 3 * n + 1\n}\n",
    "    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 4\n    }\n    if n == 4 {\n        return 5\n    }\n    if n == 5 {\n        return 8\n    }\n    if n == 6 {\n        return 9\n    }\n    if n == 7 {\n        return 10\n    }\n    if n == 8 {\n        return 16\n    }\n    if n == 9 {\n        return 17\n    }\n    if n == 10 {\n        return 18\n    }\n    if n == 11 {\n        return 20\n    }\n    if n == 12 {\n        return 24\n    }\n    if n == 13 {\n        return 25\n    }\n    if n == 14 {\n        return 27\n    }\n    if n == 15 {\n        return 32\n    }\n    if n == 16 {\n        return 33\n    }\n    if n == 17 {\n        return 34\n    }\n    if n == 18 {\n        return 36\n    }\n    if n == 19 {\n        return 40\n    }\n    if n == 20 {\n        return 41\n    }\n    if n == 21 {\n        return 42\n    }\n    if n == 22 {\n        return 45\n    }\n    if n == 23 {\n        return 48\n    }\n    if n == 24 {\n        return 49\n    }\n    if n == 25 {\n        return 50\n    }\n    if n == 26 {\n        return 52\n    }\n    if n == 27 {\n        return 54\n    }\n    if n == 28 {\n        return 56\n    }\n    if n == 29 {\n        return 60\n    }\n    if n == 30 {\n        return 64\n    }\n    if n == 31 {\n        return 65\n    }\n    if n == 32 {\n        return 66\n    }\n    if n == 33 {\n        return 68\n    }\n    if n == 34 {\n        return 72\n    }\n    if n == 35 {\n        return 73\n    }\n    if n == 36 {\n        return 74\n    }\n    if n == 37 {\n",
    "    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 4\n    }\n    return is_polite(n-1) + is_polite(n-2) + is_polite(n-3)\n}\n",
    "    var i, j int\n    var count int\n    for i = 1; i <= n; i++ {\n        for j = 1; j <= i; j++ {\n            if i % j == 0 {\n                count++\n            }\n        }\n        if count == 2 {\n            return i\n        }\n        count = 0\n    }\n    return -1\n}\n",
    "    var i, j, k int\n    var polite_numbers []int\n    var polite_number int\n\n    for i = 1; i <= n; i++ {\n        for j = 1; j <= i; j++ {\n            if i % j == 0 {\n                polite_numbers = append(polite_numbers, j)\n            }\n        }\n        for k = 0; k < len(polite_numbers); k++ {\n            polite_number += polite_numbers[k]\n        }\n        if polite_number == n {\n            return i\n        }\n        polite_numbers = nil\n        polite_number = 0\n    }\n    return 0\n}\n",
    "    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 4\n    }\n    return is_polite(n-1) + is_polite(n-2) + is_polite(n-3)\n}\n",
    "    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 4\n    }\n    return is_polite(n-1) + is_polite(n-2) + is_polite(n-3)\n}\n",
    "    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 4\n    }\n    return is_polite(n - 1) + is_polite(n - 2) + is_polite(n - 3)\n}\n",
    "    if n == 1 {\n        return 1\n    }\n    if n % 2 == 0 {\n        return n + 1\n    }\n    return n - 1\n}\n",
    "    for i := 1; i < n; i++ {\n        if n % i == 0 {\n            return i\n        }\n    }\n    return n\n}\n",
    "    if n <= 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    var i int = 1\n    var j int = 1\n    var k int = 1\n    var count int = 0\n    for i <= n {\n        for j <= n {\n            for k <= n {\n                if i*i + j*j == k*k {\n                    count++\n                }\n                k++\n            }\n            j++\n            k = 1\n        }\n        i++\n        j = 1\n    }\n    return count\n}\n",
    "    if n <= 0 {\n        return 0\n    }\n\n    if n == 1 {\n        return 1\n    }\n\n    var i int\n    var j int\n    var k int\n    var l int\n\n    i = 1\n    j = 1\n    k = 1\n    l = 1\n\n    for {\n        if i * j == n {\n            return i\n        }\n\n        if i * j > n {\n            i++\n            j = 1\n            continue\n        }\n\n        if i * j < n {\n            j++\n            continue\n        }\n    }\n}\n",
    "    if n == 1 {\n        return 1\n    }\n    if n % 2 == 0 {\n        return n / 2\n    }\n    return 3 * n + 1\n}\n",
    "    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 4\n    }\n    return is_polite(n - 1) + is_polite(n - 2) + is_polite(n - 3)\n}\n",
    "    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 4\n    }\n    if n == 4 {\n        return 5\n    }\n    if n == 5 {\n        return 8\n    }\n    if n == 6 {\n        return 9\n    }\n    if n == 7 {\n        return 10\n    }\n    if n == 8 {\n        return 12\n    }\n    if n == 9 {\n        return 13\n    }\n    if n == 10 {\n        return 14\n    }\n    if n == 11 {\n        return 15\n    }\n    if n == 12 {\n        return 16\n    }\n    if n == 13 {\n        return 17\n    }\n    if n == 14 {\n        return 18\n    }\n    if n == 15 {\n        return 19\n    }\n    if n == 16 {\n        return 20\n    }\n    if n == 17 {\n        return 21\n    }\n    if n == 18 {\n        return 22\n    }\n    if n == 19 {\n        return 23\n    }\n    if n == 20 {\n        return 24\n    }\n    if n == 21 {\n        return 25\n    }\n    if n == 22 {\n        return 26\n    }\n    if n == 23 {\n        return 27\n    }\n    if n == 24 {\n        return 28\n    }\n    if n == 25 {\n        return 29\n    }\n    if n == 26 {\n        return 30\n    }\n    if n == 27 {\n        return 31\n    }\n    if n == 28 {\n        return 32\n    }\n    if n == 29 {\n        return 33\n    }\n    if n == 30 {\n        return 34\n    }\n    if n == 31 {\n        return 35\n    }\n    if n == 32 {\n        return 36\n    }\n    if n == 33 {\n        return 37\n    }\n    if n == 34 {\n        return 38\n    }\n    if n == 35 {\n        return 39\n    }\n    if n == 36 {\n        return 40\n    }\n    if n == 37 {\n",
    "    if n == 1 {\n        return 1\n    }\n    if n % 2 == 0 {\n        return n + 1\n    }\n    return n - 1\n}\n",
    "    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 4\n    }\n    return is_polite(n - 1) + is_polite(n - 2) + is_polite(n - 3)\n}\n",
    "    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 4\n    }\n    return is_polite(n-1) + is_polite(n-2) + is_polite(n-3)\n}\n",
    "    if n == 1 {\n        return 1\n    }\n    for i := 1; i < n; i++ {\n        if n % i == 0 {\n            return i\n        }\n    }\n    return n\n}\n"
  ]
}
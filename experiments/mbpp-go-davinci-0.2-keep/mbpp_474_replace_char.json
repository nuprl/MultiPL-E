{
  "name": "mbpp_474_replace_char",
  "language": "go_test.go",
  "prompt": "package replace_char_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to replace characters in a string.\nfunc replace_char(str1 string, ch string, newch string) string {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_474_replace_char.py",
  "prompt_terminology": "verbatim",
  "tests": "func TestReplace_Char(t *testing.T) {\n  candidate := replace_char\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"polygon\", \"y\", \"l\"), expected: \"pollgon\" },\n     { actual: candidate(\"character\", \"c\", \"a\"), expected: \"aharaater\" },\n     { actual: candidate(\"python\", \"l\", \"a\"), expected: \"python\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
  "stop_tokens": [
    "\nfunc",
    "struct",
    "\n// "
  ],
  "completions": [
    "    return \"\"\n}\n",
    "    var str2 string\n    for _, v := range str1 {\n        if string(v) == ch {\n            str2 += newch\n        } else {\n            str2 += string(v)\n        }\n    }\n    return str2\n}\n",
    "    if len(ch) != 1 || len(newch) != 1 {\n        return \"\"\n    }\n    return strings.Replace(str1, ch, newch, -1)\n}\n",
    "    var newstr string\n    for _, v := range str1 {\n        if string(v) == ch {\n            newstr += newch\n        } else {\n            newstr += string(v)\n        }\n    }\n    return newstr\n}\n",
    "    var newstr string\n    for _, v := range str1 {\n        if string(v) == ch {\n            newstr += newch\n        } else {\n            newstr += string(v)\n        }\n    }\n    return newstr\n}\n",
    "    if len(ch) != 1 {\n        return str1\n    }\n    if len(newch) != 1 {\n        return str1\n    }\n    var str2 string\n    for _, v := range str1 {\n        if string(v) == ch {\n            str2 += newch\n        } else {\n            str2 += string(v)\n        }\n    }\n    return str2\n}\n",
    "    var newstr string\n    for _, v := range str1 {\n        if string(v) == ch {\n            newstr += newch\n        } else {\n            newstr += string(v)\n        }\n    }\n    return newstr\n}\n",
    "    var str2 string\n    for _, c := range str1 {\n        if string(c) == ch {\n            str2 += newch\n        } else {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n",
    "    var str2 string\n    for i := 0; i < len(str1); i++ {\n        if string(str1[i]) == ch {\n            str2 += newch\n        } else {\n            str2 += string(str1[i])\n        }\n    }\n    return str2\n}\n",
    "    var newstr string\n    for _, c := range str1 {\n        if string(c) == ch {\n            newstr += newch\n        } else {\n            newstr += string(c)\n        }\n    }\n    return newstr\n}\n",
    "    var newstr string\n    for _, c := range str1 {\n        if string(c) == ch {\n            newstr += newch\n        } else {\n            newstr += string(c)\n        }\n    }\n    return newstr\n}\n",
    "    var newstr string\n    for i := 0; i < len(str1); i++ {\n        if string(str1[i]) == ch {\n            newstr += newch\n        } else {\n            newstr += string(str1[i])\n        }\n    }\n    return newstr\n}\n",
    "    var str2 string\n    for _, c := range str1 {\n        if string(c) == ch {\n            str2 += newch\n        } else {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n",
    "    var result string\n    for i := 0; i < len(str1); i++ {\n        if string(str1[i]) == ch {\n            result += newch\n        } else {\n            result += string(str1[i])\n        }\n    }\n    return result\n}\n",
    "    var str2 string\n    for _, c := range str1 {\n        if string(c) == ch {\n            str2 += newch\n        } else {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n",
    "    var str2 string\n    for _, c := range str1 {\n        if string(c) == ch {\n            str2 += newch\n        } else {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n",
    "    var str2 string\n    for _, c := range str1 {\n        if string(c) == ch {\n            str2 += newch\n        } else {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n",
    "    var result string\n    for _, c := range str1 {\n        if string(c) == ch {\n            result += newch\n        } else {\n            result += string(c)\n        }\n    }\n    return result\n}\n",
    "    var str2 string\n    for _, c := range str1 {\n        if string(c) == ch {\n            str2 += newch\n        } else {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n",
    "    var str2 string\n    for _, c := range str1 {\n        if string(c) == ch {\n            str2 += newch\n        } else {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n",
    "    var newstr string\n    for _, c := range str1 {\n        if string(c) == ch {\n            newstr += newch\n        } else {\n            newstr += string(c)\n        }\n    }\n    return newstr\n}\n",
    "    var newstr string\n    for _, c := range str1 {\n        if string(c) == ch {\n            newstr += newch\n        } else {\n            newstr += string(c)\n        }\n    }\n    return newstr\n}\n",
    "    if len(str1) == 0 {\n        return \"\"\n    }\n    if len(ch) == 0 {\n        return str1\n    }\n    if len(newch) == 0 {\n        return str1\n    }\n    str2 := \"\"\n    for i := 0; i < len(str1); i++ {\n        if string(str1[i]) == ch {\n            str2 += newch\n        } else {\n            str2 += string(str1[i])\n        }\n    }\n    return str2\n}\n",
    "    var newstr string\n    for _, c := range str1 {\n        if string(c) == ch {\n            newstr += newch\n        } else {\n            newstr += string(c)\n        }\n    }\n    return newstr\n}\n",
    "    str2 := \"\"\n    for _, c := range str1 {\n        if string(c) == ch {\n            str2 += newch\n        } else {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n",
    "    var newstr string\n    for _, c := range str1 {\n        if string(c) == ch {\n            newstr += newch\n        } else {\n            newstr += string(c)\n        }\n    }\n    return newstr\n}\n",
    "    var str2 string\n    for _, c := range str1 {\n        if string(c) == ch {\n            str2 += newch\n        } else {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n",
    "    var result string\n    for _, c := range str1 {\n        if string(c) == ch {\n            result += newch\n        } else {\n            result += string(c)\n        }\n    }\n    return result\n}\n",
    "    var str2 string\n    for _, c := range str1 {\n        if string(c) == ch {\n            str2 += newch\n        } else {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n",
    "    return \"\"\n}\n",
    "    var newstr string\n    for _, c := range str1 {\n        if string(c) == ch {\n            newstr += newch\n        } else {\n            newstr += string(c)\n        }\n    }\n    return newstr\n}\n",
    "    var newstr string\n    for _, v := range str1 {\n        if string(v) == ch {\n            newstr += newch\n        } else {\n            newstr += string(v)\n        }\n    }\n    return newstr\n}\n",
    "    var newstr string\n    for _, v := range str1 {\n        if string(v) == ch {\n            newstr += newch\n        } else {\n            newstr += string(v)\n        }\n    }\n    return newstr\n}\n",
    "    var str2 string\n    for _, c := range str1 {\n        if string(c) == ch {\n            str2 += newch\n        } else {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n",
    "    var newstr string\n    for _, c := range str1 {\n        if string(c) == ch {\n            newstr += newch\n        } else {\n            newstr += string(c)\n        }\n    }\n    return newstr\n}\n",
    "    var str2 string\n    for _, c := range str1 {\n        if string(c) == ch {\n            str2 += newch\n        } else {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n",
    "    var newstr string\n    for _, c := range str1 {\n        if string(c) == ch {\n            newstr += newch\n        } else {\n            newstr += string(c)\n        }\n    }\n    return newstr\n}\n",
    "    var str2 string\n    for _, v := range str1 {\n        if string(v) == ch {\n            str2 += newch\n        } else {\n            str2 += string(v)\n        }\n    }\n    return str2\n}\n",
    "    var str2 string\n    for i := 0; i < len(str1); i++ {\n        if string(str1[i]) == ch {\n            str2 += newch\n        } else {\n            str2 += string(str1[i])\n        }\n    }\n    return str2\n}\n",
    "    var str2 string\n    for _, c := range str1 {\n        if string(c) == ch {\n            str2 += newch\n        } else {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n",
    "    var str2 string\n    for _, c := range str1 {\n        if string(c) == ch {\n            str2 += newch\n        } else {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n",
    "    var newstr string\n    for _, v := range str1 {\n        if string(v) == ch {\n            newstr += newch\n        } else {\n            newstr += string(v)\n        }\n    }\n    return newstr\n}\n",
    "    var newstr string\n    for _, c := range str1 {\n        if string(c) == ch {\n            newstr += newch\n        } else {\n            newstr += string(c)\n        }\n    }\n    return newstr\n}\n",
    "    var newstr string\n    for _, c := range str1 {\n        if string(c) == ch {\n            newstr += newch\n        } else {\n            newstr += string(c)\n        }\n    }\n    return newstr\n}\n",
    "    var newstr string\n    for _, c := range str1 {\n        if string(c) == ch {\n            newstr += newch\n        } else {\n            newstr += string(c)\n        }\n    }\n    return newstr\n}\n",
    "    return \"\"\n}\n",
    "    if len(ch) != 1 || len(newch) != 1 {\n        panic(\"ch or newch is not a char\")\n    }\n    var ret string\n    for _, v := range str1 {\n        if string(v) == ch {\n            ret += newch\n        } else {\n            ret += string(v)\n        }\n    }\n    return ret\n}\n",
    "    var newstr string\n    for _, v := range str1 {\n        if string(v) == ch {\n            newstr += newch\n        } else {\n            newstr += string(v)\n        }\n    }\n    return newstr\n}\n",
    "    var str2 string\n    for i := 0; i < len(str1); i++ {\n        if string(str1[i]) == ch {\n            str2 += newch\n        } else {\n            str2 += string(str1[i])\n        }\n    }\n    return str2\n}\n",
    "    var str2 string\n    for _, c := range str1 {\n        if string(c) == ch {\n            str2 += newch\n        } else {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n",
    "    var str2 string\n    for _, c := range str1 {\n        if string(c) == ch {\n            str2 += newch\n        } else {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n",
    "    var str2 string\n    for _, c := range str1 {\n        if string(c) == ch {\n            str2 += newch\n        } else {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n",
    "    var newstr string\n    for _, c := range str1 {\n        if string(c) == ch {\n            newstr += newch\n        } else {\n            newstr += string(c)\n        }\n    }\n    return newstr\n}\n",
    "    return \"\"\n}\n",
    "    var str2 string\n    for _, c := range str1 {\n        if string(c) == ch {\n            str2 += newch\n        } else {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n",
    "    return \"\"\n}\n",
    "    var newstr string\n    for _, v := range str1 {\n        if string(v) == ch {\n            newstr += newch\n        } else {\n            newstr += string(v)\n        }\n    }\n    return newstr\n}\n",
    "    var str2 string\n    for _, c := range str1 {\n        if string(c) == ch {\n            str2 += newch\n        } else {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n",
    "    var newstr string\n    for _, c := range str1 {\n        if string(c) == ch {\n            newstr += newch\n        } else {\n            newstr += string(c)\n        }\n    }\n    return newstr\n}\n",
    "    var str2 string\n    for _, c := range str1 {\n        if string(c) == ch {\n            str2 += newch\n        } else {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n",
    "    var newstr string\n    for _, c := range str1 {\n        if string(c) == ch {\n            newstr += newch\n        } else {\n            newstr += string(c)\n        }\n    }\n    return newstr\n}\n",
    "    var newstr string\n    for _, v := range str1 {\n        if string(v) == ch {\n            newstr += newch\n        } else {\n            newstr += string(v)\n        }\n    }\n    return newstr\n}\n",
    "    var str2 string\n    for i := 0; i < len(str1); i++ {\n        if string(str1[i]) == ch {\n            str2 += newch\n        } else {\n            str2 += string(str1[i])\n        }\n    }\n    return str2\n}\n",
    "    var str2 string\n    for _, c := range str1 {\n        if string(c) == ch {\n            str2 += newch\n        } else {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n",
    "    var result string\n    for _, c := range str1 {\n        if string(c) == ch {\n            result += newch\n        } else {\n            result += string(c)\n        }\n    }\n    return result\n}\n",
    "    var str2 string\n    for _, c := range str1 {\n        if string(c) == ch {\n            str2 += newch\n        } else {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n",
    "    var str2 string\n    for _, c := range str1 {\n        if string(c) == ch {\n            str2 += newch\n        } else {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n",
    "    str2 := \"\"\n    for i := 0; i < len(str1); i++ {\n        if string(str1[i]) == ch {\n            str2 += newch\n        } else {\n            str2 += string(str1[i])\n        }\n    }\n    return str2\n}\n",
    "    var newstr string\n    for _, v := range str1 {\n        if string(v) == ch {\n            newstr += newch\n        } else {\n            newstr += string(v)\n        }\n    }\n    return newstr\n}\n",
    "    var newstr string\n    for _, v := range str1 {\n        if string(v) == ch {\n            newstr += newch\n        } else {\n            newstr += string(v)\n        }\n    }\n    return newstr\n}\n",
    "    if len(ch) != 1 || len(newch) != 1 {\n        return str1\n    }\n\n    var newstr string\n    for _, v := range str1 {\n        if string(v) == ch {\n            newstr += newch\n        } else {\n            newstr += string(v)\n        }\n    }\n    return newstr\n}\n",
    "    var str2 string\n    for _, c := range str1 {\n        if string(c) == ch {\n            str2 += newch\n        } else {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n",
    "    var ret string\n    for _, c := range str1 {\n        if string(c) == ch {\n            ret += newch\n        } else {\n            ret += string(c)\n        }\n    }\n    return ret\n}\n",
    "    return \"\"\n}\n",
    "    var newstr string\n    for _, v := range str1 {\n        if string(v) == ch {\n            newstr += newch\n        } else {\n            newstr += string(v)\n        }\n    }\n    return newstr\n}\n",
    "    var str2 string\n    for _, v := range str1 {\n        if string(v) == ch {\n            str2 += newch\n        } else {\n            str2 += string(v)\n        }\n    }\n    return str2\n}\n",
    "    var newstr string\n    for _, c := range str1 {\n        if string(c) == ch {\n            newstr += newch\n        } else {\n            newstr += string(c)\n        }\n    }\n    return newstr\n}\n",
    "    var str2 string\n    for i := 0; i < len(str1); i++ {\n        if string(str1[i]) == ch {\n            str2 += newch\n        } else {\n            str2 += string(str1[i])\n        }\n    }\n    return str2\n}\n",
    "    var result string\n    for _, c := range str1 {\n        if string(c) == ch {\n            result += newch\n        } else {\n            result += string(c)\n        }\n    }\n    return result\n}\n",
    "    var newstr string\n    for _, c := range str1 {\n        if string(c) == ch {\n            newstr += newch\n        } else {\n            newstr += string(c)\n        }\n    }\n    return newstr\n}\n",
    "    var str2 string\n    for i := 0; i < len(str1); i++ {\n        if string(str1[i]) == ch {\n            str2 += newch\n        } else {\n            str2 += string(str1[i])\n        }\n    }\n    return str2\n}\n",
    "    var str2 string\n    for _, c := range str1 {\n        if string(c) == ch {\n            str2 += newch\n        } else {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n",
    "    var str2 string\n    for _, c := range str1 {\n        if string(c) == ch {\n            str2 += newch\n        } else {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n",
    "    var newstr string\n    for i := 0; i < len(str1); i++ {\n        if string(str1[i]) == ch {\n            newstr += newch\n        } else {\n            newstr += string(str1[i])\n        }\n    }\n    return newstr\n}\n",
    "    var str2 string\n    for _, c := range str1 {\n        if string(c) == ch {\n            str2 += newch\n        } else {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n",
    "    return \"\"\n}\n",
    "    var str2 string\n    for i := 0; i < len(str1); i++ {\n        if string(str1[i]) == ch {\n            str2 += newch\n        } else {\n            str2 += string(str1[i])\n        }\n    }\n    return str2\n}\n",
    "    var str2 string\n    for i := 0; i < len(str1); i++ {\n        if string(str1[i]) == ch {\n            str2 += newch\n        } else {\n            str2 += string(str1[i])\n        }\n    }\n    return str2\n}\n",
    "    if len(ch) != 1 || len(newch) != 1 {\n        return str1\n    }\n    str2 := \"\"\n    for i := 0; i < len(str1); i++ {\n        if string(str1[i]) == ch {\n            str2 += newch\n        } else {\n            str2 += string(str1[i])\n        }\n    }\n    return str2\n}\n",
    "    var newstr string\n    for _, c := range str1 {\n        if string(c) == ch {\n            newstr += newch\n        } else {\n            newstr += string(c)\n        }\n    }\n    return newstr\n}\n",
    "    return \"\"\n}\n",
    "    var newstr string\n    for _, c := range str1 {\n        if string(c) == ch {\n            newstr += newch\n        } else {\n            newstr += string(c)\n        }\n    }\n    return newstr\n}\n",
    "    var newstr string\n    for _, c := range str1 {\n        if string(c) == ch {\n            newstr += newch\n        } else {\n            newstr += string(c)\n        }\n    }\n    return newstr\n}\n",
    "    return \"\"\n}\n",
    "    var newstr string\n    for _, c := range str1 {\n        if string(c) == ch {\n            newstr += newch\n        } else {\n            newstr += string(c)\n        }\n    }\n    return newstr\n}\n",
    "    var str2 string\n    for _, c := range str1 {\n        if string(c) == ch {\n            str2 += newch\n        } else {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n",
    "    return \"\"\n}\n",
    "    str2 := \"\"\n    for _, c := range str1 {\n        if string(c) == ch {\n            str2 += newch\n        } else {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n",
    "    var newstr string\n    for _, v := range str1 {\n        if string(v) == ch {\n            newstr += newch\n        } else {\n            newstr += string(v)\n        }\n    }\n    return newstr\n}\n",
    "    var str2 string\n    for _, c := range str1 {\n        if string(c) == ch {\n            str2 += newch\n        } else {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n",
    "    var newstr string\n    for _, c := range str1 {\n        if string(c) == ch {\n            newstr += newch\n        } else {\n            newstr += string(c)\n        }\n    }\n    return newstr\n}\n",
    "    var str2 string\n    for _, c := range str1 {\n        if string(c) == ch {\n            str2 += newch\n        } else {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n",
    "    var newstr string\n    for i := 0; i < len(str1); i++ {\n        if string(str1[i]) == ch {\n            newstr += newch\n        } else {\n            newstr += string(str1[i])\n        }\n    }\n    return newstr\n}\n",
    "    var newstr string\n    for _, c := range str1 {\n        if string(c) == ch {\n            newstr += newch\n        } else {\n            newstr += string(c)\n        }\n    }\n    return newstr\n}\n",
    "    var newstr string\n    for _, v := range str1 {\n        if string(v) == ch {\n            newstr += newch\n        } else {\n            newstr += string(v)\n        }\n    }\n    return newstr\n}\n",
    "    return \"\"\n}\n",
    "    var str2 string\n    for _, c := range str1 {\n        if string(c) == ch {\n            str2 += newch\n        } else {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n",
    "    var newstr string\n    for _, c := range str1 {\n        if string(c) == ch {\n            newstr += newch\n        } else {\n            newstr += string(c)\n        }\n    }\n    return newstr\n}\n",
    "    var newstr string\n    for _, c := range str1 {\n        if string(c) == ch {\n            newstr += newch\n        } else {\n            newstr += string(c)\n        }\n    }\n    return newstr\n}\n",
    "    return \"\"\n}\n",
    "    var result string\n    for _, c := range str1 {\n        if string(c) == ch {\n            result += newch\n        } else {\n            result += string(c)\n        }\n    }\n    return result\n}\n",
    "    var str2 string\n    for i := 0; i < len(str1); i++ {\n        if string(str1[i]) == ch {\n            str2 += newch\n        } else {\n            str2 += string(str1[i])\n        }\n    }\n    return str2\n}\n",
    "    var result string\n    for _, c := range str1 {\n        if string(c) == ch {\n            result += newch\n        } else {\n            result += string(c)\n        }\n    }\n    return result\n}\n",
    "    if len(str1) == 0 {\n        return str1\n    }\n    if len(ch) == 0 {\n        return str1\n    }\n    if len(newch) == 0 {\n        return str1\n    }\n    if len(ch) > 1 {\n        return str1\n    }\n    if len(newch) > 1 {\n        return str1\n    }\n\n    var str2 string\n    for i := 0; i < len(str1); i++ {\n        if string(str1[i]) == ch {\n            str2 += newch\n        } else {\n            str2 += string(str1[i])\n        }\n    }\n    return str2\n}\n",
    "    return \"\"\n}\n",
    "    var newstr string\n    for _, c := range str1 {\n        if string(c) == ch {\n            newstr += newch\n        } else {\n            newstr += string(c)\n        }\n    }\n    return newstr\n}\n",
    "    var newstr string\n    for i := 0; i < len(str1); i++ {\n        if string(str1[i]) == ch {\n            newstr += newch\n        } else {\n            newstr += string(str1[i])\n        }\n    }\n    return newstr\n}\n",
    "    var str2 string\n    for _, c := range str1 {\n        if string(c) == ch {\n            str2 += newch\n        } else {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n",
    "    var newstr string\n    for i := 0; i < len(str1); i++ {\n        if string(str1[i]) == ch {\n            newstr += newch\n        } else {\n            newstr += string(str1[i])\n        }\n    }\n    return newstr\n}\n",
    "    var str2 string\n    for _, c := range str1 {\n        if string(c) == ch {\n            str2 += newch\n        } else {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n",
    "    var newstr string\n    for _, c := range str1 {\n        if string(c) == ch {\n            newstr += newch\n        } else {\n            newstr += string(c)\n        }\n    }\n    return newstr\n}\n",
    "    var newstr string\n    for _, c := range str1 {\n        if string(c) == ch {\n            newstr += newch\n        } else {\n            newstr += string(c)\n        }\n    }\n    return newstr\n}\n",
    "    var newstr string\n    for i := 0; i < len(str1); i++ {\n        if string(str1[i]) == ch {\n            newstr += newch\n        } else {\n            newstr += string(str1[i])\n        }\n    }\n    return newstr\n}\n",
    "    var str2 string\n    for i := 0; i < len(str1); i++ {\n        if string(str1[i]) == ch {\n            str2 += newch\n        } else {\n            str2 += string(str1[i])\n        }\n    }\n    return str2\n}\n",
    "    var result string\n    for _, c := range str1 {\n        if string(c) == ch {\n            result += newch\n        } else {\n            result += string(c)\n        }\n    }\n    return result\n}\n",
    "    var res string\n    for _, v := range str1 {\n        if string(v) == ch {\n            res += newch\n        } else {\n            res += string(v)\n        }\n    }\n    return res\n}\n",
    "    var newstr string\n    for _, c := range str1 {\n        if string(c) == ch {\n            newstr += newch\n        } else {\n            newstr += string(c)\n        }\n    }\n    return newstr\n}\n",
    "    var newstr string\n    for _, c := range str1 {\n        if string(c) == ch {\n            newstr += newch\n        } else {\n            newstr += string(c)\n        }\n    }\n    return newstr\n}\n",
    "    var newstr string\n    for i := 0; i < len(str1); i++ {\n        if string(str1[i]) == ch {\n            newstr += newch\n        } else {\n            newstr += string(str1[i])\n        }\n    }\n    return newstr\n}\n",
    "    return \"\"\n}\n",
    "    var newstr string\n    for i := 0; i < len(str1); i++ {\n        if string(str1[i]) == ch {\n            newstr += newch\n        } else {\n            newstr += string(str1[i])\n        }\n    }\n    return newstr\n}\n",
    "    var str2 string\n    for _, c := range str1 {\n        if string(c) == ch {\n            str2 += newch\n        } else {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n",
    "    var str2 string\n    for _, c := range str1 {\n        if string(c) == ch {\n            str2 += newch\n        } else {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n",
    "    var result string\n    for _, c := range str1 {\n        if string(c) == ch {\n            result += newch\n        } else {\n            result += string(c)\n        }\n    }\n    return result\n}\n",
    "    var str2 string\n    for _, c := range str1 {\n        if string(c) == ch {\n            str2 += newch\n        } else {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n",
    "    var newstr string\n    for _, c := range str1 {\n        if string(c) == ch {\n            newstr += newch\n        } else {\n            newstr += string(c)\n        }\n    }\n    return newstr\n}\n",
    "    var newstr string\n    for _, c := range str1 {\n        if string(c) == ch {\n            newstr += newch\n        } else {\n            newstr += string(c)\n        }\n    }\n    return newstr\n}\n",
    "    var newstr string\n    for _, v := range str1 {\n        if string(v) == ch {\n            newstr += newch\n        } else {\n            newstr += string(v)\n        }\n    }\n    return newstr\n}\n",
    "    var newstr string\n    for _, c := range str1 {\n        if string(c) == ch {\n            newstr += newch\n        } else {\n            newstr += string(c)\n        }\n    }\n    return newstr\n}\n",
    "    var str2 string\n    for i := 0; i < len(str1); i++ {\n        if string(str1[i]) == ch {\n            str2 += newch\n        } else {\n            str2 += string(str1[i])\n        }\n    }\n    return str2\n}\n",
    "    if len(ch) != 1 || len(newch) != 1 {\n        return str1\n    }\n    return strings.Replace(str1, ch, newch, -1)\n}\n",
    "    return \"\"\n}\n",
    "    var str2 string\n    for _, c := range str1 {\n        if string(c) == ch {\n            str2 += newch\n        } else {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n",
    "    return \"\"\n}\n",
    "    var result string\n    for _, c := range str1 {\n        if string(c) == ch {\n            result += newch\n        } else {\n            result += string(c)\n        }\n    }\n    return result\n}\n",
    "    var str2 string\n    for i := 0; i < len(str1); i++ {\n        if string(str1[i]) == ch {\n            str2 += newch\n        } else {\n            str2 += string(str1[i])\n        }\n    }\n    return str2\n}\n",
    "    var str2 string\n    for i := 0; i < len(str1); i++ {\n        if string(str1[i]) == ch {\n            str2 += newch\n        } else {\n            str2 += string(str1[i])\n        }\n    }\n    return str2\n}\n",
    "    var str2 string\n    for _, c := range str1 {\n        if string(c) == ch {\n            str2 += newch\n        } else {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n",
    "    var newstr string\n    for _, v := range str1 {\n        if string(v) == ch {\n            newstr += newch\n        } else {\n            newstr += string(v)\n        }\n    }\n    return newstr\n}\n",
    "    var newstr string\n    for _, c := range str1 {\n        if string(c) == ch {\n            newstr += newch\n        } else {\n            newstr += string(c)\n        }\n    }\n    return newstr\n}\n",
    "    if len(str1) == 0 {\n        return \"\"\n    }\n    if len(ch) == 0 {\n        return str1\n    }\n    if len(newch) == 0 {\n        return str1\n    }\n    var ret string\n    for i := 0; i < len(str1); i++ {\n        if string(str1[i]) == ch {\n            ret += newch\n        } else {\n            ret += string(str1[i])\n        }\n    }\n    return ret\n}\n",
    "    var newstr string\n    for _, c := range str1 {\n        if string(c) == ch {\n            newstr += newch\n        } else {\n            newstr += string(c)\n        }\n    }\n    return newstr\n}\n",
    "    return \"\"\n}\n",
    "    var newstr string\n    for _, c := range str1 {\n        if string(c) == ch {\n            newstr += newch\n        } else {\n            newstr += string(c)\n        }\n    }\n    return newstr\n}\n",
    "    var newstr string\n    for _, c := range str1 {\n        if string(c) == ch {\n            newstr += newch\n        } else {\n            newstr += string(c)\n        }\n    }\n    return newstr\n}\n",
    "    var newstr string\n    for _, c := range str1 {\n        if string(c) == ch {\n            newstr += newch\n        } else {\n            newstr += string(c)\n        }\n    }\n    return newstr\n}\n",
    "    var newstr string\n    for _, c := range str1 {\n        if string(c) == ch {\n            newstr += newch\n        } else {\n            newstr += string(c)\n        }\n    }\n    return newstr\n}\n",
    "    var newstr string\n    for _, c := range str1 {\n        if string(c) == ch {\n            newstr += newch\n        } else {\n            newstr += string(c)\n        }\n    }\n    return newstr\n}\n",
    "    if len(str1) == 0 {\n        return str1\n    }\n    if len(ch) == 0 {\n        return str1\n    }\n    if len(newch) == 0 {\n        return str1\n    }\n\n    var newstr string\n    for _, c := range str1 {\n        if string(c) == ch {\n            newstr += newch\n        } else {\n            newstr += string(c)\n        }\n    }\n    return newstr\n}\n",
    "    var str2 string\n    for _, c := range str1 {\n        if string(c) == ch {\n            str2 += newch\n        } else {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n",
    "    var newstr string\n    for _, c := range str1 {\n        if string(c) == ch {\n            newstr += newch\n        } else {\n            newstr += string(c)\n        }\n    }\n    return newstr\n}\n",
    "    var str2 string\n    for _, c := range str1 {\n        if string(c) == ch {\n            str2 += newch\n        } else {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n",
    "    var newstr string\n    for _, c := range str1 {\n        if string(c) == ch {\n            newstr += newch\n        } else {\n            newstr += string(c)\n        }\n    }\n    return newstr\n}\n",
    "    return \"\"\n}\n",
    "    return \"\"\n}\n",
    "    var str2 string\n    for _, c := range str1 {\n        if string(c) == ch {\n            str2 += newch\n        } else {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n",
    "    var str2 string\n    for _, c := range str1 {\n        if string(c) == ch {\n            str2 += newch\n        } else {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n",
    "    var str2 string\n    for _, c := range str1 {\n        if string(c) == ch {\n            str2 += newch\n        } else {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n",
    "    var newstr string\n    for i := 0; i < len(str1); i++ {\n        if string(str1[i]) == ch {\n            newstr += newch\n        } else {\n            newstr += string(str1[i])\n        }\n    }\n    return newstr\n}\n",
    "    var str2 string\n    for _, c := range str1 {\n        if string(c) == ch {\n            str2 += newch\n        } else {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n",
    "    var newstr string\n    for _, v := range str1 {\n        if string(v) == ch {\n            newstr += newch\n        } else {\n            newstr += string(v)\n        }\n    }\n    return newstr\n}\n",
    "    var str2 string\n    for _, c := range str1 {\n        if string(c) == ch {\n            str2 += newch\n        } else {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n",
    "    if len(str1) == 0 {\n        return \"\"\n    }\n    if len(ch) == 0 {\n        return str1\n    }\n    if len(newch) == 0 {\n        return str1\n    }\n    str2 := \"\"\n    for i := 0; i < len(str1); i++ {\n        if str1[i] == ch[0] {\n            str2 += newch\n        } else {\n            str2 += string(str1[i])\n        }\n    }\n    return str2\n}\n",
    "    var newstr string\n    for _, c := range str1 {\n        if string(c) == ch {\n            newstr += newch\n        } else {\n            newstr += string(c)\n        }\n    }\n    return newstr\n}\n",
    "    return \"\"\n}\n",
    "    var newstr string\n    for i := 0; i < len(str1); i++ {\n        if string(str1[i]) == ch {\n            newstr += newch\n        } else {\n            newstr += string(str1[i])\n        }\n    }\n    return newstr\n}\n",
    "    var newstr string\n    for _, c := range str1 {\n        if string(c) == ch {\n            newstr += newch\n        } else {\n            newstr += string(c)\n        }\n    }\n    return newstr\n}\n",
    "    return \"\"\n}\n",
    "    return \"\"\n}\n",
    "    var str2 string\n    for _, v := range str1 {\n        if string(v) == ch {\n            str2 += newch\n        } else {\n            str2 += string(v)\n        }\n    }\n    return str2\n}\n",
    "    var str2 string\n    for i := 0; i < len(str1); i++ {\n        if string(str1[i]) == ch {\n            str2 = str2 + newch\n        } else {\n            str2 = str2 + string(str1[i])\n        }\n    }\n    return str2\n}\n",
    "    return \"\"\n}\n",
    "    var newstr string\n    for i := 0; i < len(str1); i++ {\n        if string(str1[i]) == ch {\n            newstr += newch\n        } else {\n            newstr += string(str1[i])\n        }\n    }\n    return newstr\n}\n",
    "    newstr := \"\"\n    for _, c := range str1 {\n        if string(c) == ch {\n            newstr += newch\n        } else {\n            newstr += string(c)\n        }\n    }\n    return newstr\n}\n",
    "    var str2 string\n    for _, c := range str1 {\n        if string(c) == ch {\n            str2 += newch\n        } else {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n",
    "    var newstr string\n    for _, v := range str1 {\n        if string(v) == ch {\n            newstr += newch\n        } else {\n            newstr += string(v)\n        }\n    }\n    return newstr\n}\n",
    "    var str2 string\n    for _, c := range str1 {\n        if string(c) == ch {\n            str2 += newch\n        } else {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n",
    "    if len(ch) != 1 {\n        return str1\n    }\n    if len(newch) != 1 {\n        return str1\n    }\n    var ret string\n    for _, c := range str1 {\n        if string(c) == ch {\n            ret += newch\n        } else {\n            ret += string(c)\n        }\n    }\n    return ret\n}\n",
    "    var str2 string\n    for _, c := range str1 {\n        if string(c) == ch {\n            str2 += newch\n        } else {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n",
    "    var str2 string\n    for _, v := range str1 {\n        if string(v) == ch {\n            str2 += newch\n        } else {\n            str2 += string(v)\n        }\n    }\n    return str2\n}\n",
    "    var newstr string\n    for i := 0; i < len(str1); i++ {\n        if string(str1[i]) == ch {\n            newstr += newch\n        } else {\n            newstr += string(str1[i])\n        }\n    }\n    return newstr\n}\n",
    "    return \"\"\n}\n",
    "    var str2 string\n    for _, c := range str1 {\n        if string(c) == ch {\n            str2 += newch\n        } else {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n",
    "    var str2 string\n    for _, c := range str1 {\n        if string(c) == ch {\n            str2 += newch\n        } else {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n",
    "    str := \"\"\n    for _, v := range str1 {\n        if string(v) == ch {\n            str += newch\n        } else {\n            str += string(v)\n        }\n    }\n    return str\n}\n",
    "    var newstr string\n    for _, v := range str1 {\n        if string(v) == ch {\n            newstr += newch\n        } else {\n            newstr += string(v)\n        }\n    }\n    return newstr\n}\n",
    "    var str2 string\n    for _, c := range str1 {\n        if string(c) == ch {\n            str2 += newch\n        } else {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n",
    "    return \"\"\n}\n",
    "    // TODO: implement\n    return str1\n}\n",
    "    var str2 string\n    for _, c := range str1 {\n        if string(c) == ch {\n            str2 += newch\n        } else {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n"
  ]
}
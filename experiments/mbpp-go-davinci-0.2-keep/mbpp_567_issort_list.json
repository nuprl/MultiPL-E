{
  "name": "mbpp_567_issort_list",
  "language": "go_test.go",
  "prompt": "package issort_list_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether a specified list is sorted or not.\nfunc issort_list(list1 []int) bool {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_567_issort_list.py",
  "prompt_terminology": "verbatim",
  "tests": "func TestIssort_List(t *testing.T) {\n  candidate := issort_list\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 4, 6, 8, 10, 12, 14, 16, 17}), expected: true },\n     { actual: candidate([]int{1, 2, 4, 6, 8, 10, 12, 14, 20, 17}), expected: false },\n     { actual: candidate([]int{1, 2, 4, 6, 8, 10, 15, 14, 20}), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
  "stop_tokens": [
    "\nfunc",
    "struct",
    "\n// "
  ],
  "completions": [
    "    for i := 0; i < len(list1) - 1; i++ {\n        if list1[i] > list1[i + 1] {\n            return false\n        }\n    }\n    return true\n}\n",
    "    for i := 0; i < len(list1) - 1; i++ {\n        if list1[i] > list1[i + 1] {\n            return false\n        }\n    }\n    return true\n}\n",
    "    for i := 0; i < len(list1) - 1; i++ {\n        if list1[i] > list1[i + 1] {\n            return false\n        }\n    }\n    return true\n}\n",
    "    for i := 0; i < len(list1) - 1; i++ {\n        if list1[i] > list1[i + 1] {\n            return false\n        }\n    }\n    return true\n}\n",
    "    for i := 0; i < len(list1) - 1; i++ {\n        if list1[i] > list1[i + 1] {\n            return false\n        }\n    }\n    return true\n}\n",
    "    for i := 0; i < len(list1) - 1; i++ {\n        if list1[i] > list1[i + 1] {\n            return false\n        }\n    }\n    return true\n}\n",
    "    for i := 0; i < len(list1) - 1; i++ {\n        if list1[i] > list1[i + 1] {\n            return false\n        }\n    }\n    return true\n}\n",
    "    for i := 0; i < len(list1) - 1; i++ {\n        if list1[i] > list1[i+1] {\n            return false\n        }\n    }\n    return true\n}\n",
    "    for i := 0; i < len(list1) - 1; i++ {\n        if list1[i] > list1[i + 1] {\n            return false\n        }\n    }\n    return true\n}\n",
    "    for i := 0; i < len(list1)-1; i++ {\n        if list1[i] > list1[i+1] {\n            return false\n        }\n    }\n    return true\n}\n",
    "    for i := 0; i < len(list1) - 1; i++ {\n        if list1[i] > list1[i + 1] {\n            return false\n        }\n    }\n    return true\n}\n",
    "    for i := 0; i < len(list1) - 1; i++ {\n        if list1[i] > list1[i+1] {\n            return false\n        }\n    }\n    return true\n}\n",
    "    for i := 0; i < len(list1) - 1; i++ {\n        if list1[i] > list1[i+1] {\n            return false\n        }\n    }\n    return true\n}\n",
    "    for i := 0; i < len(list1) - 1; i++ {\n        if list1[i] > list1[i + 1] {\n            return false\n        }\n    }\n    return true\n}\n",
    "    for i := 0; i < len(list1) - 1; i++ {\n        if list1[i] > list1[i + 1] {\n            return false\n        }\n    }\n    return true\n}\n",
    "    for i := 0; i < len(list1) - 1; i++ {\n        if list1[i] > list1[i + 1] {\n            return false\n        }\n    }\n    return true\n}\n",
    "    for i := 0; i < len(list1) - 1; i++ {\n        if list1[i] > list1[i + 1] {\n            return false\n        }\n    }\n    return true\n}\n",
    "    for i := 0; i < len(list1) - 1; i++ {\n        if list1[i] > list1[i + 1] {\n            return false\n        }\n    }\n    return true\n}\n",
    "    for i := 0; i < len(list1) - 1; i++ {\n        if list1[i] > list1[i + 1] {\n            return false\n        }\n    }\n    return true\n}\n",
    "    for i := 0; i < len(list1) - 1; i++ {\n        if list1[i] > list1[i+1] {\n            return false\n        }\n    }\n    return true\n}\n"
  ]
}
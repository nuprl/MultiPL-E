{
  "name": "mbpp_287_square_Sum",
  "language": "go_test.go",
  "prompt": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_287_square_Sum.py",
  "prompt_terminology": "verbatim",
  "tests": "func TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
  "stop_tokens": [
    "\nfunc",
    "struct",
    "\n// "
  ],
  "results": [
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    // Write your code here\n    sum := 0\n    for i := 0; i < n; i++ {\n        sum += (2*i + 2) * (2*i + 2)\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 0; i < n; i++ {\n        sum += (2*i + 2) * (2*i + 2)\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmppyhbf4o4_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmppyhbf4o4_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmppyhbf4o4_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 0; i < n; i++ {\n        sum += (2*i + 2) * (2*i + 2)\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmppyhbf4o4_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmppyhbf4o4_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmppyhbf4o4_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 0; i < n; i++ {\n        sum += (2*i + 2) * (2*i + 2)\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    // Write your code here\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmp4fciv602_test.go:33: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmp4fciv602_test.go:33: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmp4fciv602_test.go:33: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 0; i < n; i++ {\n        sum += (2*i + 2) * (2*i + 2)\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpbzbu9ynj_test.go:34: expected '%!s(int=20)', got '%!s(int=4)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpbzbu9ynj_test.go:34: expected '%!s(int=56)', got '%!s(int=4)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpbzbu9ynj_test.go:34: expected '%!s(int=120)', got '%!s(int=20)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123562,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmps5w9ax8w_test.go:34: expected '%!s(int=20)', got '%!s(int=4)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmps5w9ax8w_test.go:34: expected '%!s(int=56)', got '%!s(int=4)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmps5w9ax8w_test.go:34: expected '%!s(int=120)', got '%!s(int=20)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmppyhbf4o4_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmppyhbf4o4_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmppyhbf4o4_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmppyhbf4o4_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmppyhbf4o4_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmppyhbf4o4_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    // Write your code here\n    sum := 0\n    for i := 2; i <= n * 2; i += 2 {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123562,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123562,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmps5w9ax8w_test.go:34: expected '%!s(int=20)', got '%!s(int=4)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmps5w9ax8w_test.go:34: expected '%!s(int=56)', got '%!s(int=4)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmps5w9ax8w_test.go:34: expected '%!s(int=120)', got '%!s(int=20)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    // Write your code here\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmp4fciv602_test.go:33: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmp4fciv602_test.go:33: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmp4fciv602_test.go:33: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmppyhbf4o4_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmppyhbf4o4_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmppyhbf4o4_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpbzbu9ynj_test.go:34: expected '%!s(int=20)', got '%!s(int=4)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpbzbu9ynj_test.go:34: expected '%!s(int=56)', got '%!s(int=4)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpbzbu9ynj_test.go:34: expected '%!s(int=120)', got '%!s(int=20)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmppyhbf4o4_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmppyhbf4o4_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmppyhbf4o4_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpbzbu9ynj_test.go:34: expected '%!s(int=20)', got '%!s(int=4)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpbzbu9ynj_test.go:34: expected '%!s(int=56)', got '%!s(int=4)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpbzbu9ynj_test.go:34: expected '%!s(int=120)', got '%!s(int=20)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 0; i < n; i++ {\n        sum += (i+1)*(i+1)\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123562,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpvv5zl_19_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpvv5zl_19_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpvv5zl_19_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    // Write your code here\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmp4fciv602_test.go:33: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmp4fciv602_test.go:33: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmp4fciv602_test.go:33: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 2; i <= n * 2; i += 2 {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123562,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmppyhbf4o4_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmppyhbf4o4_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmppyhbf4o4_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    // Write your code here\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmp4fciv602_test.go:33: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmp4fciv602_test.go:33: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmp4fciv602_test.go:33: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    if n <= 0 {\n        return 0\n    }\n    return n*n + square_Sum(n-1)\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123562,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmp4ttzle1x_test.go:31: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmp4ttzle1x_test.go:31: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmp4ttzle1x_test.go:31: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123562,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmps5w9ax8w_test.go:34: expected '%!s(int=20)', got '%!s(int=4)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmps5w9ax8w_test.go:34: expected '%!s(int=56)', got '%!s(int=4)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmps5w9ax8w_test.go:34: expected '%!s(int=120)', got '%!s(int=20)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmppyhbf4o4_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmppyhbf4o4_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmppyhbf4o4_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 0; i < n; i++ {\n        sum += (2*i + 2) * (2*i + 2)\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123562,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmps5w9ax8w_test.go:34: expected '%!s(int=20)', got '%!s(int=4)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmps5w9ax8w_test.go:34: expected '%!s(int=56)', got '%!s(int=4)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmps5w9ax8w_test.go:34: expected '%!s(int=120)', got '%!s(int=20)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpbzbu9ynj_test.go:34: expected '%!s(int=20)', got '%!s(int=4)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpbzbu9ynj_test.go:34: expected '%!s(int=56)', got '%!s(int=4)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpbzbu9ynj_test.go:34: expected '%!s(int=120)', got '%!s(int=20)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 0; i < n; i++ {\n        sum += (2*i + 2) * (2*i + 2)\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123562,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmp5l8uoihz_test.go:29: expected '%!s(int=20)', got '%!s(int=0)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmp5l8uoihz_test.go:29: expected '%!s(int=56)', got '%!s(int=0)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmp5l8uoihz_test.go:29: expected '%!s(int=120)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 0; i < n; i++ {\n        sum += (2*i + 2) * (2*i + 2)\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123562,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 0; i < n; i++ {\n        sum += (2*i+2)*(2*i+2)\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123562,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    // Write your code here\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmp4fciv602_test.go:33: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmp4fciv602_test.go:33: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmp4fciv602_test.go:33: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123562,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmps5w9ax8w_test.go:34: expected '%!s(int=20)', got '%!s(int=4)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmps5w9ax8w_test.go:34: expected '%!s(int=56)', got '%!s(int=4)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmps5w9ax8w_test.go:34: expected '%!s(int=120)', got '%!s(int=20)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 2; i <= 2*n; i += 2 {\n        sum += i*i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123562,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123562,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmps5w9ax8w_test.go:34: expected '%!s(int=20)', got '%!s(int=4)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmps5w9ax8w_test.go:34: expected '%!s(int=56)', got '%!s(int=4)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmps5w9ax8w_test.go:34: expected '%!s(int=120)', got '%!s(int=20)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmppyhbf4o4_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmppyhbf4o4_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmppyhbf4o4_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    // Write your code here\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmp4fciv602_test.go:33: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmp4fciv602_test.go:33: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmp4fciv602_test.go:33: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123562,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmps5w9ax8w_test.go:34: expected '%!s(int=20)', got '%!s(int=4)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmps5w9ax8w_test.go:34: expected '%!s(int=56)', got '%!s(int=4)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmps5w9ax8w_test.go:34: expected '%!s(int=120)', got '%!s(int=20)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 0; i < n; i++ {\n        sum += (2 * i + 2) * (2 * i + 2)\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123562,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123562,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmps5w9ax8w_test.go:34: expected '%!s(int=20)', got '%!s(int=4)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmps5w9ax8w_test.go:34: expected '%!s(int=56)', got '%!s(int=4)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmps5w9ax8w_test.go:34: expected '%!s(int=120)', got '%!s(int=20)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i*i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123562,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmp4s5c7it2_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmp4s5c7it2_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmp4s5c7it2_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 0; i < n; i++ {\n        sum += (2*i + 2) * (2*i + 2)\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    // Write your code here\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123562,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpwtrfz4ee_test.go:33: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpwtrfz4ee_test.go:33: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpwtrfz4ee_test.go:33: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    // Write your code here\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123562,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpwtrfz4ee_test.go:33: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpwtrfz4ee_test.go:33: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpwtrfz4ee_test.go:33: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i:=1; i<=n; i++ {\n        sum += i*i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123562,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpysdlitou_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpysdlitou_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpysdlitou_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmppyhbf4o4_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmppyhbf4o4_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmppyhbf4o4_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 0; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123562,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmp3x1mgvi4_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmp3x1mgvi4_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmp3x1mgvi4_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 0; i < n; i++ {\n        sum += (2*i + 2) * (2*i + 2)\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    // Write your code here\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmp4fciv602_test.go:33: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmp4fciv602_test.go:33: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmp4fciv602_test.go:33: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 0; i < n; i++ {\n        sum += (2 * i + 2) * (2 * i + 2)\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123562,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 2; i <= n * 2; i += 2 {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123562,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmppyhbf4o4_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmppyhbf4o4_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmppyhbf4o4_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int = 0\n    for i := 0; i < n; i++ {\n        sum += (2 * i + 2) * (2 * i + 2)\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123562,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i*i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123562,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpzugmvc5j_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpzugmvc5j_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpzugmvc5j_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    // Write your code here\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmp4fciv602_test.go:33: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmp4fciv602_test.go:33: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmp4fciv602_test.go:33: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 0; i < n; i++ {\n        sum += (2*i + 2) * (2*i + 2)\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123562,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int = 0\n    for i := 0; i < n; i++ {\n        sum += (2*i+2)*(2*i+2)\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123562,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    // Write your code here\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmp4fciv602_test.go:33: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmp4fciv602_test.go:33: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmp4fciv602_test.go:33: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 0; i < n; i++ {\n        sum += (2*i + 2) * (2*i + 2)\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123562,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123562,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmps5w9ax8w_test.go:34: expected '%!s(int=20)', got '%!s(int=4)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmps5w9ax8w_test.go:34: expected '%!s(int=56)', got '%!s(int=4)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmps5w9ax8w_test.go:34: expected '%!s(int=120)', got '%!s(int=20)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i*i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123562,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpzugmvc5j_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpzugmvc5j_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpzugmvc5j_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 0; i < n; i++ {\n        sum += (2*i + 2) * (2*i + 2)\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123562,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 0; i < n; i++ {\n        sum += (i+1)*(i+1)\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123562,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpvv5zl_19_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpvv5zl_19_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpvv5zl_19_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int = 0\n    for i := 0; i < n; i++ {\n        sum += (2*i + 2) * (2*i + 2)\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123562,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123562,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpqnteonc__test.go:34: expected '%!s(int=20)', got '%!s(int=4)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpqnteonc__test.go:34: expected '%!s(int=56)', got '%!s(int=4)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpqnteonc__test.go:34: expected '%!s(int=120)', got '%!s(int=20)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    // Write your code here\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmp4fciv602_test.go:33: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmp4fciv602_test.go:33: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmp4fciv602_test.go:33: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    // Write your code here\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123562,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpeh8lup_z_test.go:35: expected '%!s(int=20)', got '%!s(int=4)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpeh8lup_z_test.go:35: expected '%!s(int=56)', got '%!s(int=4)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpeh8lup_z_test.go:35: expected '%!s(int=120)', got '%!s(int=20)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 0; i < n; i++ {\n        sum += (2*i + 2) * (2*i + 2)\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpbzbu9ynj_test.go:34: expected '%!s(int=20)', got '%!s(int=4)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpbzbu9ynj_test.go:34: expected '%!s(int=56)', got '%!s(int=4)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpbzbu9ynj_test.go:34: expected '%!s(int=120)', got '%!s(int=20)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 0; i < n; i++ {\n        sum += (i * 2) * (i * 2)\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123562,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmp_kxi8mnz_test.go:32: expected '%!s(int=20)', got '%!s(int=4)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmp_kxi8mnz_test.go:32: expected '%!s(int=56)', got '%!s(int=20)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmp_kxi8mnz_test.go:32: expected '%!s(int=120)', got '%!s(int=56)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 0; i < n; i++ {\n        sum += (2*i + 2) * (2*i + 2)\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123562,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfrg0pln3_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 0; i < n; i++ {\n        sum += (i+1)*(i+1)\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123562,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpvv5zl_19_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpvv5zl_19_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpvv5zl_19_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510439,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpwzmeph28_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
{
  "name": "mbpp_69_is_sublist",
  "language": "go_test.go",
  "prompt": "package is_sublist_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether a list contains the given sublist or not.\nfunc is_sublist(l []int, s []int) bool {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_69_is_sublist.py",
  "prompt_terminology": "verbatim",
  "tests": "func TestIs_Sublist(t *testing.T) {\n  candidate := is_sublist\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{2, 4, 3, 5, 7}, []int{3, 7}), expected: false },\n     { actual: candidate([]int{2, 4, 3, 5, 7}, []int{4, 3}), expected: true },\n     { actual: candidate([]int{2, 4, 3, 5, 7}, []int{1, 6}), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
  "stop_tokens": [
    "\nfunc",
    "struct",
    "\n// "
  ],
  "completions": [
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l) - len(s) + 1; i++ {\n        if l[i] == s[0] {\n            for j := 0; j < len(s); j++ {\n                if l[i + j] != s[j] {\n                    break\n                }\n                if j == len(s) - 1 {\n                    return true\n                }\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i <= len(l) - len(s); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n\n    for i := 0; i < len(l) - len(s) + 1; i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            for j := 1; j < len(s); j++ {\n                if l[i+j] != s[j] {\n                    break\n                }\n                if j == len(s) - 1 {\n                    return true\n                }\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) == 0 {\n        return true\n    }\n    if len(l) == 0 {\n        return false\n    }\n    if len(l) < len(s) {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l) - len(s) + 1; i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) == 0 {\n        return true\n    }\n    if len(l) == 0 {\n        return false\n    }\n    if l[0] == s[0] {\n        return is_sublist(l[1:], s[1:])\n    }\n    return is_sublist(l[1:], s)\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            for j := 1; j < len(s); j++ {\n                if i + j >= len(l) || l[i + j] != s[j] {\n                    break\n                }\n                if j == len(s) - 1 {\n                    return true\n                }\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l) - len(s) + 1; i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            for j := 1; j < len(s); j++ {\n                if l[i + j] != s[j] {\n                    break\n                }\n                if j == len(s) - 1 {\n                    return true\n                }\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(l) < len(s) {\n        return false\n    }\n\n    for i := 0; i < len(l) - len(s) + 1; i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            for j := 1; j < len(s); j++ {\n                if l[i + j] != s[j] {\n                    break\n                }\n                if j == len(s) - 1 {\n                    return true\n                }\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) == 0 {\n        return true\n    }\n    if len(l) == 0 {\n        return false\n    }\n    if l[0] == s[0] {\n        return is_sublist(l[1:], s[1:])\n    }\n    return is_sublist(l[1:], s)\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l) - len(s) + 1; i++ {\n        if l[i] == s[0] {\n            for j := 0; j < len(s); j++ {\n                if l[i + j] != s[j] {\n                    break\n                }\n                if j == len(s) - 1 {\n                    return true\n                }\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            for j := 1; j < len(s); j++ {\n                if i + j >= len(l) || l[i + j] != s[j] {\n                    break\n                }\n                if j == len(s) - 1 {\n                    return true\n                }\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            for j := 1; j < len(s); j++ {\n                if i + j >= len(l) || l[i + j] != s[j] {\n                    break\n                }\n                if j == len(s) - 1 {\n                    return true\n                }\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l) - len(s) + 1; i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l) - len(s) + 1; i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            for j := 1; j < len(s); j++ {\n                if l[i + j] != s[j] {\n                    break\n                }\n                if j == len(s) - 1 {\n                    return true\n                }\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l) - len(s) + 1; i++ {\n        if l[i] == s[0] {\n            for j := 0; j < len(s); j++ {\n                if l[i + j] != s[j] {\n                    break\n                }\n                if j == len(s) - 1 {\n                    return true\n                }\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l) - len(s) + 1; i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            for j := 1; j < len(s); j++ {\n                if l[i+j] != s[j] {\n                    break\n                }\n                if j == len(s)-1 {\n                    return true\n                }\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n\n    for i := 0; i <= len(l) - len(s); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l) - len(s) + 1; i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            for j := 1; j < len(s); j++ {\n                if i + j >= len(l) {\n                    return false\n                }\n                if l[i + j] != s[j] {\n                    break\n                }\n                if j == len(s) - 1 {\n                    return true\n                }\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            for j := 1; j < len(s); j++ {\n                if i + j >= len(l) {\n                    return false\n                }\n                if l[i + j] != s[j] {\n                    break\n                }\n                if j == len(s) - 1 {\n                    return true\n                }\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) == 0 {\n        return true\n    }\n    if len(l) == 0 {\n        return false\n    }\n    if l[0] == s[0] {\n        return is_sublist(l[1:], s[1:])\n    }\n    return is_sublist(l[1:], s)\n}\n",
    "    if len(l) < len(s) {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l) - len(s) + 1; i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            for j := 1; j < len(s); j++ {\n                if l[i + j] != s[j] {\n                    break\n                }\n                if j == len(s) - 1 {\n                    return true\n                }\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            for j := 1; j < len(s); j++ {\n                if i+j >= len(l) || l[i+j] != s[j] {\n                    break\n                }\n                if j == len(s)-1 {\n                    return true\n                }\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            for j := 1; j < len(s); j++ {\n                if i+j >= len(l) {\n                    return false\n                }\n                if l[i+j] != s[j] {\n                    break\n                }\n                if j == len(s)-1 {\n                    return true\n                }\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            for j := 1; j < len(s); j++ {\n                if i + j >= len(l) || l[i + j] != s[j] {\n                    break\n                }\n                if j == len(s) - 1 {\n                    return true\n                }\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l) - len(s) + 1; i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            for j := 1; j < len(s); j++ {\n                if l[i+j] != s[j] {\n                    break\n                }\n                if j == len(s) - 1 {\n                    return true\n                }\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) == 0 {\n        return true\n    }\n    if len(l) == 0 {\n        return false\n    }\n    if l[0] == s[0] {\n        return is_sublist(l[1:], s[1:])\n    }\n    return is_sublist(l[1:], s)\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            for j := 1; j < len(s); j++ {\n                if i + j >= len(l) || l[i + j] != s[j] {\n                    break\n                }\n                if j == len(s) - 1 {\n                    return true\n                }\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i <= len(l) - len(s); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) == 0 {\n        return true\n    }\n    if len(l) == 0 {\n        return false\n    }\n    if l[0] == s[0] {\n        return is_sublist(l[1:], s[1:])\n    }\n    return is_sublist(l[1:], s)\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l) - len(s) + 1; i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            for j := 1; j < len(s); j++ {\n                if i + j >= len(l) {\n                    return false\n                }\n                if l[i + j] != s[j] {\n                    break\n                }\n                if j == len(s) - 1 {\n                    return true\n                }\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            for j := 1; j < len(s); j++ {\n                if i + j >= len(l) {\n                    return false\n                }\n                if l[i + j] != s[j] {\n                    break\n                }\n                if j == len(s) - 1 {\n                    return true\n                }\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) == 0 {\n        return true\n    }\n    if len(l) == 0 {\n        return false\n    }\n    if l[0] == s[0] {\n        return is_sublist(l[1:], s[1:])\n    }\n    return is_sublist(l[1:], s)\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            for j := 1; j < len(s); j++ {\n                if i+j >= len(l) || l[i+j] != s[j] {\n                    break\n                }\n                if j == len(s)-1 {\n                    return true\n                }\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) == 0 {\n        return true\n    }\n    if len(l) == 0 {\n        return false\n    }\n    if l[0] == s[0] {\n        return is_sublist(l[1:], s[1:])\n    }\n    return is_sublist(l[1:], s)\n}\n",
    "    if len(s) == 0 {\n        return true\n    }\n    if len(l) == 0 {\n        return false\n    }\n    if l[0] == s[0] {\n        return is_sublist(l[1:], s[1:])\n    }\n    return is_sublist(l[1:], s)\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(l) < len(s) {\n        return false\n    }\n    for i := 0; i <= len(l) - len(s); i++ {\n        if l[i] == s[0] {\n            if l[i:i+len(s)] == s {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) == 0 {\n        return true\n    }\n    if len(l) < len(s) {\n        return false\n    }\n    for i := 0; i < len(l) - len(s) + 1; i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l) - len(s) + 1; i++ {\n        if l[i] == s[0] {\n            for j := 1; j < len(s); j++ {\n                if l[i + j] != s[j] {\n                    break\n                }\n                if j == len(s) - 1 {\n                    return true\n                }\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i <= len(l) - len(s); i++ {\n        if l[i] == s[0] {\n            for j := 0; j < len(s); j++ {\n                if l[i + j] != s[j] {\n                    break\n                }\n                if j == len(s) - 1 {\n                    return true\n                }\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if len(l) - i < len(s) {\n                return false\n            }\n            for j := 1; j < len(s); j++ {\n                if l[i+j] != s[j] {\n                    break\n                }\n                if j == len(s) - 1 {\n                    return true\n                }\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            for j := 1; j < len(s); j++ {\n                if i + j >= len(l) || l[i + j] != s[j] {\n                    break\n                }\n                if j == len(s) - 1 {\n                    return true\n                }\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n\n    for i := 0; i < len(l) - len(s) + 1; i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) == 0 {\n        return true\n    }\n    if len(l) == 0 {\n        return false\n    }\n    if l[0] == s[0] {\n        return is_sublist(l[1:], s[1:])\n    }\n    return is_sublist(l[1:], s)\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l) - len(s) + 1; i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l) - len(s) + 1; i++ {\n        if l[i] == s[0] {\n            for j := 0; j < len(s); j++ {\n                if l[i + j] != s[j] {\n                    break\n                }\n                if j == len(s) - 1 {\n                    return true\n                }\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l) - len(s) + 1; i++ {\n        if l[i] == s[0] {\n            for j := 0; j < len(s); j++ {\n                if l[i + j] != s[j] {\n                    break\n                }\n                if j == len(s) - 1 {\n                    return true\n                }\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l) - len(s) + 1; i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i <= len(l) - len(s); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) == 0 {\n        return true\n    }\n    if len(l) == 0 {\n        return false\n    }\n    if l[0] == s[0] {\n        return is_sublist(l[1:], s[1:])\n    }\n    return is_sublist(l[1:], s)\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l) - len(s) + 1; i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            for j := 1; j < len(s); j++ {\n                if l[i + j] != s[j] {\n                    break\n                }\n                if j == len(s) - 1 {\n                    return true\n                }\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i <= len(l) - len(s); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l) - len(s) + 1; i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            for j := 1; j < len(s); j++ {\n                if l[i + j] != s[j] {\n                    break\n                }\n                if j == len(s) - 1 {\n                    return true\n                }\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l) - len(s) + 1; i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) == 0 {\n        return true\n    }\n    if len(l) == 0 {\n        return false\n    }\n    if l[0] == s[0] {\n        return is_sublist(l[1:], s[1:])\n    }\n    return is_sublist(l[1:], s)\n}\n",
    "    if len(s) == 0 {\n        return true\n    }\n    if len(l) == 0 {\n        return false\n    }\n    if l[0] == s[0] {\n        return is_sublist(l[1:], s[1:])\n    }\n    return is_sublist(l[1:], s)\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l) - len(s) + 1; i++ {\n        if l[i] == s[0] {\n            for j := 0; j < len(s); j++ {\n                if l[i + j] != s[j] {\n                    break\n                }\n                if j == len(s) - 1 {\n                    return true\n                }\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n\n    for i := 0; i < len(l) - len(s) + 1; i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            for j := 1; j < len(s); j++ {\n                if l[i + j] != s[j] {\n                    break\n                }\n                if j == len(s) - 1 {\n                    return true\n                }\n            }\n        }\n    }\n\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l) - len(s) + 1; i++ {\n        if l[i] == s[0] {\n            for j := 0; j < len(s); j++ {\n                if l[i + j] != s[j] {\n                    break\n                }\n                if j == len(s) - 1 {\n                    return true\n                }\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l) - len(s) + 1; i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n\n    for i := 0; i < len(l) - len(s) + 1; i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            for j := 1; j < len(s); j++ {\n                if l[i+j] != s[j] {\n                    break\n                }\n                if j == len(s) - 1 {\n                    return true\n                }\n            }\n        }\n    }\n\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l) - len(s) + 1; i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i <= len(l) - len(s); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(l) < len(s) {\n        return false\n    }\n    for i := 0; i < len(l) - len(s) + 1; i++ {\n        if l[i] == s[0] {\n            for j := 0; j < len(s); j++ {\n                if l[i + j] != s[j] {\n                    break\n                }\n                if j == len(s) - 1 {\n                    return true\n                }\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l) - len(s) + 1; i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            for j := 1; j < len(s); j++ {\n                if l[i + j] != s[j] {\n                    break\n                }\n                if j == len(s) - 1 {\n                    return true\n                }\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i <= len(l) - len(s); i++ {\n        if l[i] == s[0] {\n            for j := 0; j < len(s); j++ {\n                if l[i + j] != s[j] {\n                    break\n                }\n                if j == len(s) - 1 {\n                    return true\n                }\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) == 0 {\n        return true\n    }\n    if len(l) == 0 {\n        return false\n    }\n    if l[0] == s[0] {\n        return is_sublist(l[1:], s[1:])\n    } else {\n        return is_sublist(l[1:], s)\n    }\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            for j := 1; j < len(s); j++ {\n                if i + j >= len(l) {\n                    return false\n                }\n                if l[i + j] != s[j] {\n                    break\n                }\n                if j == len(s) - 1 {\n                    return true\n                }\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            for j := 1; j < len(s); j++ {\n                if l[i+j] != s[j] {\n                    break\n                }\n                if j == len(s)-1 {\n                    return true\n                }\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            for j := 0; j < len(s); j++ {\n                if l[i + j] != s[j] {\n                    break\n                }\n                if j == len(s) - 1 {\n                    return true\n                }\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n\n    for i := 0; i < len(l) - len(s) + 1; i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l) - len(s) + 1; i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            for j := 1; j < len(s); j++ {\n                if l[i+j] != s[j] {\n                    break\n                }\n                if j == len(s) - 1 {\n                    return true\n                }\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i <= len(l) - len(s); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l) - len(s) + 1; i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) == 0 {\n        return true\n    }\n    if len(l) == 0 {\n        return false\n    }\n    if l[0] == s[0] {\n        return is_sublist(l[1:], s[1:])\n    }\n    return is_sublist(l[1:], s)\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            for j := 1; j < len(s); j++ {\n                if i + j >= len(l) || l[i + j] != s[j] {\n                    break\n                }\n                if j == len(s) - 1 {\n                    return true\n                }\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    if len(s) == 0 {\n        return true\n    }\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            for j := 1; j < len(s); j++ {\n                if l[i+j] != s[j] {\n                    break\n                }\n                if j == len(s)-1 {\n                    return true\n                }\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l) - len(s) + 1; i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l) - len(s) + 1; i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n\n            for j := 1; j < len(s); j++ {\n                if i + j >= len(l) || l[i + j] != s[j] {\n                    break\n                }\n\n                if j == len(s) - 1 {\n                    return true\n                }\n            }\n        }\n    }\n\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            for j := 1; j < len(s); j++ {\n                if i + j >= len(l) || l[i + j] != s[j] {\n                    break\n                }\n                if j == len(s) - 1 {\n                    return true\n                }\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            for j := 1; j < len(s); j++ {\n                if i+j >= len(l) {\n                    return false\n                }\n                if l[i+j] != s[j] {\n                    break\n                }\n                if j == len(s)-1 {\n                    return true\n                }\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l) - len(s) + 1; i++ {\n        if l[i] == s[0] {\n            for j := 0; j < len(s); j++ {\n                if l[i + j] != s[j] {\n                    break\n                }\n                if j == len(s) - 1 {\n                    return true\n                }\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            for j := 1; j < len(s); j++ {\n                if i + j >= len(l) {\n                    return false\n                }\n                if l[i + j] != s[j] {\n                    break\n                }\n                if j == len(s) - 1 {\n                    return true\n                }\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n\n    for i := 0; i < len(l) - len(s) + 1; i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l) - len(s) + 1; i++ {\n        if l[i] == s[0] {\n            for j := 0; j < len(s); j++ {\n                if l[i+j] != s[j] {\n                    break\n                }\n                if j == len(s) - 1 {\n                    return true\n                }\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i <= len(l) - len(s); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i <= len(l) - len(s); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            for j := 1; j < len(s); j++ {\n                if l[i+j] != s[j] {\n                    break\n                }\n                if j == len(s)-1 {\n                    return true\n                }\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            for j := 1; j < len(s); j++ {\n                if i + j >= len(l) {\n                    return false\n                }\n                if l[i + j] != s[j] {\n                    break\n                }\n                if j == len(s) - 1 {\n                    return true\n                }\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            for j := 1; j < len(s); j++ {\n                if i + j >= len(l) {\n                    return false\n                }\n                if l[i + j] != s[j] {\n                    break\n                }\n                if j == len(s) - 1 {\n                    return true\n                }\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) == 0 {\n        return true\n    }\n    if len(l) == 0 {\n        return false\n    }\n    if l[0] == s[0] {\n        return is_sublist(l[1:], s[1:])\n    }\n    return is_sublist(l[1:], s)\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            found := true\n            for j := 0; j < len(s); j++ {\n                if i+j >= len(l) || l[i+j] != s[j] {\n                    found = false\n                    break\n                }\n            }\n            if found {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            for j := 1; j < len(s); j++ {\n                if i + j >= len(l) || l[i+j] != s[j] {\n                    break\n                }\n                if j == len(s) - 1 {\n                    return true\n                }\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l) - len(s) + 1; i++ {\n        if l[i] == s[0] {\n            for j := 0; j < len(s); j++ {\n                if l[i + j] != s[j] {\n                    break\n                }\n                if j == len(s) - 1 {\n                    return true\n                }\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            for j := 1; j < len(s); j++ {\n                if i + j >= len(l) || l[i + j] != s[j] {\n                    break\n                }\n                if j == len(s) - 1 {\n                    return true\n                }\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l) - len(s) + 1; i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l) - len(s) + 1; i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) == 0 {\n        return true\n    }\n    if len(l) == 0 {\n        return false\n    }\n    if l[0] == s[0] {\n        return is_sublist(l[1:], s[1:])\n    }\n    return is_sublist(l[1:], s)\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i <= len(l) - len(s); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l) - len(s) + 1; i++ {\n        if l[i] == s[0] {\n            for j := 0; j < len(s); j++ {\n                if l[i+j] != s[j] {\n                    break\n                }\n                if j == len(s) - 1 {\n                    return true\n                }\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n\n    for i := 0; i < len(l) - len(s) + 1; i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l) - len(s) + 1; i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            for j := 1; j < len(s); j++ {\n                if i+j >= len(l) {\n                    return false\n                }\n                if l[i+j] != s[j] {\n                    break\n                }\n                if j == len(s)-1 {\n                    return true\n                }\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            for j := 1; j < len(s); j++ {\n                if i + j >= len(l) || l[i + j] != s[j] {\n                    break\n                }\n                if j == len(s) - 1 {\n                    return true\n                }\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l) - len(s) + 1; i++ {\n        if l[i] == s[0] {\n            for j := 0; j < len(s); j++ {\n                if l[i + j] != s[j] {\n                    break\n                }\n                if j == len(s) - 1 {\n                    return true\n                }\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) == 0 {\n        return true\n    }\n\n    if len(l) < len(s) {\n        return false\n    }\n\n    for i := 0; i <= len(l) - len(s); i++ {\n        if l[i] == s[0] {\n            if is_sublist(l[i:], s) {\n                return true\n            }\n        }\n    }\n\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l) - len(s) + 1; i++ {\n        if l[i] == s[0] {\n            j := 0\n            for ; j < len(s); j++ {\n                if l[i+j] != s[j] {\n                    break\n                }\n            }\n            if j == len(s) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i <= len(l) - len(s); i++ {\n        if l[i] == s[0] {\n            j := 0\n            for ; j < len(s); j++ {\n                if l[i + j] != s[j] {\n                    break\n                }\n            }\n            if j == len(s) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) == 0 {\n        return true\n    }\n    if len(l) == 0 {\n        return false\n    }\n    if l[0] == s[0] {\n        return is_sublist(l[1:], s[1:])\n    }\n    return is_sublist(l[1:], s)\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l) - len(s) + 1; i++ {\n        if l[i] == s[0] {\n            j := 0\n            for ; j < len(s); j++ {\n                if l[i + j] != s[j] {\n                    break\n                }\n            }\n            if j == len(s) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            for j := 0; j < len(s); j++ {\n                if l[i+j] != s[j] {\n                    break\n                }\n                if j == len(s)-1 {\n                    return true\n                }\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l) - len(s) + 1; i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            for j := 1; j < len(s); j++ {\n                if l[i+j] != s[j] {\n                    break\n                }\n                if j == len(s) - 1 {\n                    return true\n                }\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) == 0 {\n        return true\n    }\n    if len(l) == 0 {\n        return false\n    }\n    if l[0] == s[0] {\n        return is_sublist(l[1:], s[1:])\n    }\n    return is_sublist(l[1:], s)\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            for j := 1; j < len(s); j++ {\n                if i + j >= len(l) || l[i + j] != s[j] {\n                    break\n                }\n                if j == len(s) - 1 {\n                    return true\n                }\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l) - len(s) + 1; i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l) - len(s) + 1; i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    if len(s) == 0 {\n        return true\n    }\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l) - len(s) + 1; i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i <= len(l) - len(s); i++ {\n        if l[i] == s[0] {\n            match := true\n            for j := 1; j < len(s); j++ {\n                if l[i + j] != s[j] {\n                    match = false\n                    break\n                }\n            }\n            if match {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l) - len(s) + 1; i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            for j := 1; j < len(s); j++ {\n                if l[i + j] != s[j] {\n                    break\n                }\n                if j == len(s) - 1 {\n                    return true\n                }\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i <= len(l) - len(s); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) == 0 {\n        return true\n    }\n    if len(l) == 0 {\n        return false\n    }\n    if l[0] == s[0] {\n        return is_sublist(l[1:], s[1:])\n    }\n    return is_sublist(l[1:], s)\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l) - len(s) + 1; i++ {\n        if l[i] == s[0] {\n            for j := 0; j < len(s); j++ {\n                if l[i + j] != s[j] {\n                    break\n                }\n                if j == len(s) - 1 {\n                    return true\n                }\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(l) < len(s) {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            for j := 1; j < len(s); j++ {\n                if i + j >= len(l) {\n                    return false\n                }\n                if l[i + j] != s[j] {\n                    break\n                }\n                if j == len(s) - 1 {\n                    return true\n                }\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            for j := 1; j < len(s); j++ {\n                if l[i+j] != s[j] {\n                    break\n                }\n                if j == len(s)-1 {\n                    return true\n                }\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i <= len(l) - len(s); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l) - len(s) + 1; i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l) - len(s) + 1; i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            for j := 1; j < len(s); j++ {\n                if l[i + j] != s[j] {\n                    break\n                }\n                if j == len(s) - 1 {\n                    return true\n                }\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            for j := 1; j < len(s); j++ {\n                if i+j >= len(l) || l[i+j] != s[j] {\n                    break\n                }\n                if j == len(s)-1 {\n                    return true\n                }\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) == 0 {\n        return true\n    }\n    if len(l) == 0 {\n        return false\n    }\n    if l[0] == s[0] {\n        return is_sublist(l[1:], s[1:])\n    }\n    return is_sublist(l[1:], s)\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l) - len(s) + 1; i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            for j := 1; j < len(s); j++ {\n                if l[i + j] != s[j] {\n                    break\n                }\n                if j == len(s) - 1 {\n                    return true\n                }\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            for j := 0; j < len(s); j++ {\n                if l[i+j] != s[j] {\n                    break\n                }\n                if j == len(s) - 1 {\n                    return true\n                }\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l) - len(s) + 1; i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            for j := 1; j < len(s); j++ {\n                if l[i+j] != s[j] {\n                    break\n                }\n                if j == len(s) - 1 {\n                    return true\n                }\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            for j := 1; j < len(s); j++ {\n                if i + j >= len(l) {\n                    return false\n                }\n                if l[i + j] != s[j] {\n                    break\n                }\n                if j == len(s) - 1 {\n                    return true\n                }\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) == 0 {\n        return true\n    }\n    if len(l) == 0 {\n        return false\n    }\n    if l[0] == s[0] {\n        return is_sublist(l[1:], s[1:])\n    } else {\n        return is_sublist(l[1:], s)\n    }\n}\n",
    "    if len(s) == 0 {\n        return true\n    }\n    if len(l) == 0 {\n        return false\n    }\n    if l[0] == s[0] {\n        return is_sublist(l[1:], s[1:])\n    }\n    return is_sublist(l[1:], s)\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l) - len(s) + 1; i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            for j := 1; j < len(s); j++ {\n                if l[i + j] != s[j] {\n                    break\n                }\n                if j == len(s) - 1 {\n                    return true\n                }\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n\n    for i := 0; i < len(l) - len(s) + 1; i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l) - len(s) + 1; i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i <= len(l) - len(s); i++ {\n        if l[i] == s[0] {\n            for j := 1; j < len(s); j++ {\n                if l[i+j] != s[j] {\n                    break\n                }\n                if j == len(s) - 1 {\n                    return true\n                }\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(l) < len(s) {\n        return false\n    }\n    for i := 0; i < len(l) - len(s) + 1; i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n\n    for i := 0; i < len(l) - len(s) + 1; i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) == 0 {\n        return true\n    }\n    if len(l) == 0 {\n        return false\n    }\n    if l[0] == s[0] {\n        return is_sublist(l[1:], s[1:])\n    }\n    return is_sublist(l[1:], s)\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i <= len(l) - len(s); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n\n    for i := 0; i < len(l) - len(s) + 1; i++ {\n        if l[i] == s[0] {\n            for j := 1; j < len(s); j++ {\n                if l[i + j] != s[j] {\n                    break\n                }\n                if j == len(s) - 1 {\n                    return true\n                }\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            for j := 1; j < len(s); j++ {\n                if i+j >= len(l) {\n                    return false\n                }\n                if l[i+j] != s[j] {\n                    break\n                }\n                if j == len(s)-1 {\n                    return true\n                }\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l) - len(s) + 1; i++ {\n        if l[i] == s[0] {\n            for j := 0; j < len(s); j++ {\n                if l[i+j] != s[j] {\n                    break\n                }\n                if j == len(s) - 1 {\n                    return true\n                }\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) == 0 {\n        return true\n    }\n    if len(l) == 0 {\n        return false\n    }\n    if l[0] == s[0] {\n        return is_sublist(l[1:], s[1:])\n    }\n    return is_sublist(l[1:], s)\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l) - len(s) + 1; i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i <= len(l) - len(s); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            for j := 1; j < len(s); j++ {\n                if l[i + j] != s[j] {\n                    break\n                }\n                if j == len(s) - 1 {\n                    return true\n                }\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i <= len(l) - len(s); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(s) > len(l) {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        if l[i] == s[0] {\n            if len(s) == 1 {\n                return true\n            }\n            if is_sublist(l[i+1:], s[1:]) {\n                return true\n            }\n        }\n    }\n    return false\n}\n"
  ]
}
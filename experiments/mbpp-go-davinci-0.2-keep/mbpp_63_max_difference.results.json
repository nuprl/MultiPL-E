{
  "name": "mbpp_63_max_difference",
  "language": "go_test.go",
  "prompt": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_63_max_difference.py",
  "prompt_terminology": "verbatim",
  "tests": "func TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
  "stop_tokens": [
    "\nfunc",
    "struct",
    "\n// "
  ],
  "results": [
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, t := range test_list {\n        if t[0].(int) > t[1].(int) {\n            if t[0].(int) - t[1].(int) > max_diff {\n                max_diff = t[0].(int) - t[1].(int)\n            }\n        } else {\n            if t[1].(int) - t[0].(int) > max_diff {\n                max_diff = t[1].(int) - t[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510019,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpkmm46n0w_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpkmm46n0w_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpkmm46n0w_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpkmm46n0w_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpkmm46n0w_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpkmm46n0w_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for i := 0; i < len(test_list); i++ {\n        for j := 0; j < len(test_list[i]); j++ {\n            for k := 0; k < len(test_list[i]); k++ {\n                if j != k {\n                    diff := test_list[i][j].(int) - test_list[i][k].(int)\n                    if diff > max_diff {\n                        max_diff = diff\n                    }\n                }\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510019,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpxq5p7427_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpxq5p7427_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpxq5p7427_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpxq5p7427_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpxq5p7427_test.go:35:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpxq5p7427_test.go:35:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    max_diff := 0\n    for i := 0; i < len(test_list); i++ {\n        for j := 0; j < len(test_list[i]); j++ {\n            for k := 0; k < len(test_list[i]); k++ {\n                if j != k {\n                    diff := test_list[i][j].(int) - test_list[i][k].(int)\n                    if diff > max_diff {\n                        max_diff = diff\n                    }\n                }\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510019,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpsaes0qjj_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpsaes0qjj_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpsaes0qjj_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpsaes0qjj_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpsaes0qjj_test.go:35:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpsaes0qjj_test.go:35:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            if tuple[0].(int) - tuple[1].(int) > max_diff {\n                max_diff = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if tuple[1].(int) - tuple[0].(int) > max_diff {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510019,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpffhwi78a_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpffhwi78a_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpffhwi78a_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            if tuple[0].(int) - tuple[1].(int) > max_diff {\n                max_diff = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if tuple[1].(int) - tuple[0].(int) > max_diff {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510019,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpffhwi78a_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpffhwi78a_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpffhwi78a_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int = 0\n    for i := 0; i < len(test_list); i++ {\n        for j := i + 1; j < len(test_list); j++ {\n            if test_list[i][0] == test_list[j][0] {\n                if test_list[i][1] > test_list[j][1] {\n                    diff := test_list[i][1].(int) - test_list[j][1].(int)\n                    if diff > max_diff {\n                        max_diff = diff\n                    }\n                } else {\n                    diff := test_list[j][1].(int) - test_list[i][1].(int)\n                    if diff > max_diff {\n                        max_diff = diff\n                    }\n                }\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510019,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp01vm0v4__test.go:14:36: invalid operation: test_list[i][1] > test_list[j][1] (operator > not defined on interface)\n/tmp/tmp01vm0v4__test.go:38:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp01vm0v4__test.go:38:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmp01vm0v4__test.go:39:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp01vm0v4__test.go:39:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmp01vm0v4__test.go:40:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp01vm0v4__test.go:40:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int = 0\n    var current_diff int = 0\n    var current_max int = 0\n    var current_min int = 0\n    var current_max_index int = 0\n    var current_min_index int = 0\n    var i int = 0\n    var j int = 0\n\n    for i = 0; i < len(test_list); i++ {\n        current_max = test_list[i][0].(int)\n        current_max_index = i\n        for j = i + 1; j < len(test_list); j++ {\n            if test_list[j][0].(int) > current_max {\n                current_max = test_list[j][0].(int)\n                current_max_index = j\n            }\n        }\n        if current_max_index != i {\n            current_min = test_list[i][0].(int)\n            current_min_index = i\n            for j = i + 1; j < current_max_index; j++ {\n                if test_list[j][0].(int) < current_min {\n                    current_min = test_list[j][0].(int)\n                    current_min_index = j\n                }\n            }\n            current_diff = current_max - current_min\n            if current_diff > max_diff {\n                max_diff = current_diff\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510019,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp_bi684_k_test.go:53:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp_bi684_k_test.go:53:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmp_bi684_k_test.go:54:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp_bi684_k_test.go:54:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmp_bi684_k_test.go:55:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp_bi684_k_test.go:55:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for i := 0; i < len(test_list); i++ {\n        for j := 0; j < len(test_list[i]); j++ {\n            for k := 0; k < len(test_list[i]); k++ {\n                if j != k {\n                    diff := test_list[i][j].(int) - test_list[i][k].(int)\n                    if diff > max_diff {\n                        max_diff = diff\n                    }\n                }\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510019,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpxq5p7427_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpxq5p7427_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpxq5p7427_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpxq5p7427_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpxq5p7427_test.go:35:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpxq5p7427_test.go:35:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for i := 0; i < len(test_list); i++ {\n        for j := i + 1; j < len(test_list); j++ {\n            if test_list[i][0] == test_list[j][0] {\n                diff := test_list[j][1].(int) - test_list[i][1].(int)\n                if diff > max_diff {\n                    max_diff = diff\n                }\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510019,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpsz_nbqt6_test.go:31:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpsz_nbqt6_test.go:31:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpsz_nbqt6_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpsz_nbqt6_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpsz_nbqt6_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpsz_nbqt6_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, pair := range test_list {\n        if pair[0].(int) > pair[1].(int) {\n            if pair[0].(int) - pair[1].(int) > max_diff {\n                max_diff = pair[0].(int) - pair[1].(int)\n            }\n        } else {\n            if pair[1].(int) - pair[0].(int) > max_diff {\n                max_diff = pair[1].(int) - pair[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510019,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpyegcc7_3_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpyegcc7_3_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpyegcc7_3_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpyegcc7_3_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpyegcc7_3_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpyegcc7_3_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int = 0\n    for i := 0; i < len(test_list); i++ {\n        for j := 0; j < len(test_list[i]); j++ {\n            for k := 0; k < len(test_list[i]); k++ {\n                if j != k {\n                    if test_list[i][j].(int) - test_list[i][k].(int) > max_diff {\n                        max_diff = test_list[i][j].(int) - test_list[i][k].(int)\n                    }\n                }\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510019,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpywfg7yhs_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpywfg7yhs_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpywfg7yhs_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpywfg7yhs_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpywfg7yhs_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpywfg7yhs_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            if tuple[0].(int) - tuple[1].(int) > max_diff {\n                max_diff = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if tuple[1].(int) - tuple[0].(int) > max_diff {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510019,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpffhwi78a_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpffhwi78a_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpffhwi78a_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_difference int\n    for _, test_tuple := range test_list {\n        var test_difference int\n        if test_tuple[0].(int) > test_tuple[1].(int) {\n            test_difference = test_tuple[0].(int) - test_tuple[1].(int)\n        } else {\n            test_difference = test_tuple[1].(int) - test_tuple[0].(int)\n        }\n        if test_difference > max_difference {\n            max_difference = test_difference\n        }\n    }\n    return max_difference\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510019,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmprcnxijc6_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmprcnxijc6_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmprcnxijc6_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmprcnxijc6_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmprcnxijc6_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmprcnxijc6_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, tuple := range test_list {\n        diff := tuple[1].(int) - tuple[0].(int)\n        if diff > max_diff {\n            max_diff = diff\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510019,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp26xijncj_test.go:27:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp26xijncj_test.go:27:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmp26xijncj_test.go:28:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp26xijncj_test.go:28:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmp26xijncj_test.go:29:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp26xijncj_test.go:29:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, pair := range test_list {\n        if pair[0].(int) > pair[1].(int) {\n            if pair[0].(int) - pair[1].(int) > max_diff {\n                max_diff = pair[0].(int) - pair[1].(int)\n            }\n        } else {\n            if pair[1].(int) - pair[0].(int) > max_diff {\n                max_diff = pair[1].(int) - pair[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510019,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpyegcc7_3_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpyegcc7_3_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpyegcc7_3_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpyegcc7_3_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpyegcc7_3_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpyegcc7_3_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int = 0\n    for _, test := range test_list {\n        if test[0].(int) > test[1].(int) {\n            diff := test[0].(int) - test[1].(int)\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510019,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp7g9w23w1_test.go:29:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp7g9w23w1_test.go:29:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmp7g9w23w1_test.go:30:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp7g9w23w1_test.go:30:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmp7g9w23w1_test.go:31:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp7g9w23w1_test.go:31:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, pair := range test_list {\n        if pair[0].(int) > pair[1].(int) {\n            if pair[0].(int) - pair[1].(int) > max_diff {\n                max_diff = pair[0].(int) - pair[1].(int)\n            }\n        } else {\n            if pair[1].(int) - pair[0].(int) > max_diff {\n                max_diff = pair[1].(int) - pair[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510019,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpyegcc7_3_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpyegcc7_3_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpyegcc7_3_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpyegcc7_3_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpyegcc7_3_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpyegcc7_3_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, tuple := range test_list {\n        if len(tuple) != 2 {\n            panic(\"Invalid tuple\")\n        }\n        if tuple[0] == nil || tuple[1] == nil {\n            continue\n        }\n        if tuple[0].(int) > tuple[1].(int) {\n            diff := tuple[0].(int) - tuple[1].(int)\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510019,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpbb36c5ye_test.go:35:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpbb36c5ye_test.go:35:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpbb36c5ye_test.go:36:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpbb36c5ye_test.go:36:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpbb36c5ye_test.go:37:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpbb36c5ye_test.go:37:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, tup := range test_list {\n        if len(tup) != 3 {\n            panic(\"tuple must be of length 3\")\n        }\n        if tup[0].(int) > tup[1].(int) {\n            panic(\"first element must be less than second element\")\n        }\n        if tup[2].(int) > max_diff {\n            max_diff = tup[2].(int)\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510019,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmppoke8nv9_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmppoke8nv9_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmppoke8nv9_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmppoke8nv9_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmppoke8nv9_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmppoke8nv9_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    max_diff := 0\n    for _, tup := range test_list {\n        if tup[0] != tup[1] {\n            diff := tup[1].(int) - tup[0].(int)\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510019,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp_iu4owru_test.go:29:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp_iu4owru_test.go:29:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmp_iu4owru_test.go:30:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp_iu4owru_test.go:30:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmp_iu4owru_test.go:31:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp_iu4owru_test.go:31:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            diff := tuple[0].(int) - tuple[1].(int)\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122846,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpiatr81wo_test.go:29:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpiatr81wo_test.go:29:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpiatr81wo_test.go:30:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpiatr81wo_test.go:30:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpiatr81wo_test.go:31:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpiatr81wo_test.go:31:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            if tuple[0].(int) - tuple[1].(int) > max_diff {\n                max_diff = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if tuple[1].(int) - tuple[0].(int) > max_diff {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510019,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpffhwi78a_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpffhwi78a_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpffhwi78a_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            if tuple[0].(int) - tuple[1].(int) > max_diff {\n                max_diff = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if tuple[1].(int) - tuple[0].(int) > max_diff {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510019,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpffhwi78a_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpffhwi78a_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpffhwi78a_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, item := range test_list {\n        if item[0].(int) > item[1].(int) {\n            if item[0].(int) - item[1].(int) > max_diff {\n                max_diff = item[0].(int) - item[1].(int)\n            }\n        } else {\n            if item[1].(int) - item[0].(int) > max_diff {\n                max_diff = item[1].(int) - item[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122846,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpnt763sdm_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpnt763sdm_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpnt763sdm_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpnt763sdm_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpnt763sdm_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpnt763sdm_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            if max_diff < tuple[0].(int) - tuple[1].(int) {\n                max_diff = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if max_diff < tuple[1].(int) - tuple[0].(int) {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122846,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpyb54nnji_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpyb54nnji_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpyb54nnji_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpyb54nnji_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpyb54nnji_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpyb54nnji_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, pair := range test_list {\n        if pair[0].(int) > pair[1].(int) {\n            if pair[0].(int) - pair[1].(int) > max_diff {\n                max_diff = pair[0].(int) - pair[1].(int)\n            }\n        } else {\n            if pair[1].(int) - pair[0].(int) > max_diff {\n                max_diff = pair[1].(int) - pair[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510019,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpyegcc7_3_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpyegcc7_3_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpyegcc7_3_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpyegcc7_3_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpyegcc7_3_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpyegcc7_3_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    max_diff := 0\n    for _, pair := range test_list {\n        if pair[0].(int) > pair[1].(int) {\n            diff := pair[0].(int) - pair[1].(int)\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122846,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpb2l9xz4__test.go:29:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpb2l9xz4__test.go:29:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpb2l9xz4__test.go:30:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpb2l9xz4__test.go:30:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpb2l9xz4__test.go:31:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpb2l9xz4__test.go:31:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            if tuple[0].(int) - tuple[1].(int) > max_diff {\n                max_diff = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if tuple[1].(int) - tuple[0].(int) > max_diff {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510019,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpffhwi78a_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpffhwi78a_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpffhwi78a_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, tuple := range test_list {\n        if len(tuple) != 2 {\n            panic(\"Tuple length is not 2\")\n        }\n        if tuple[0].(int) > tuple[1].(int) {\n            diff := tuple[0].(int) - tuple[1].(int)\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122846,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmppzmach6o_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmppzmach6o_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmppzmach6o_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmppzmach6o_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmppzmach6o_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmppzmach6o_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for i := 0; i < len(test_list); i++ {\n        for j := 0; j < len(test_list[i]); j++ {\n            for k := 0; k < len(test_list[i]); k++ {\n                if j != k {\n                    if test_list[i][j].(int) - test_list[i][k].(int) > max_diff {\n                        max_diff = test_list[i][j].(int) - test_list[i][k].(int)\n                    }\n                }\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122846,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpvxfi3ukd_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpvxfi3ukd_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpvxfi3ukd_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpvxfi3ukd_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpvxfi3ukd_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpvxfi3ukd_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for i := 0; i < len(test_list); i++ {\n        for j := 0; j < len(test_list[i]); j++ {\n            for k := 0; k < len(test_list[i]); k++ {\n                if j != k {\n                    diff := test_list[i][j].(int) - test_list[i][k].(int)\n                    if diff > max_diff {\n                        max_diff = diff\n                    }\n                }\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510019,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpxq5p7427_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpxq5p7427_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpxq5p7427_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpxq5p7427_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpxq5p7427_test.go:35:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpxq5p7427_test.go:35:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    var max_diff_pair []interface{}\n\n    for _, pair := range test_list {\n        if pair[0].(int) > pair[1].(int) {\n            if pair[0].(int) - pair[1].(int) > max_diff {\n                max_diff = pair[0].(int) - pair[1].(int)\n                max_diff_pair = pair\n            }\n        } else {\n            if pair[1].(int) - pair[0].(int) > max_diff {\n                max_diff = pair[1].(int) - pair[0].(int)\n                max_diff_pair = pair\n            }\n        }\n    }\n\n    fmt.Println(max_diff_pair)\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122846,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpk8u5hqe9_test.go:38:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpk8u5hqe9_test.go:38:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpk8u5hqe9_test.go:39:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpk8u5hqe9_test.go:39:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpk8u5hqe9_test.go:40:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpk8u5hqe9_test.go:40:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            if max_diff < tuple[0].(int) - tuple[1].(int) {\n                max_diff = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if max_diff < tuple[1].(int) - tuple[0].(int) {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122846,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpyb54nnji_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpyb54nnji_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpyb54nnji_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpyb54nnji_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpyb54nnji_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpyb54nnji_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[1].(int) - tuple[0].(int) > max_diff {\n            max_diff = tuple[1].(int) - tuple[0].(int)\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122846,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpbb5rrokl_test.go:26:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpbb5rrokl_test.go:26:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpbb5rrokl_test.go:27:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpbb5rrokl_test.go:27:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpbb5rrokl_test.go:28:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpbb5rrokl_test.go:28:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, tuple := range test_list {\n        var diff int\n        if tuple[0].(int) > tuple[1].(int) {\n            diff = tuple[0].(int) - tuple[1].(int)\n        } else {\n            diff = tuple[1].(int) - tuple[0].(int)\n        }\n        if diff > max_diff {\n            max_diff = diff\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122846,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp1tx9p4hd_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp1tx9p4hd_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmp1tx9p4hd_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp1tx9p4hd_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmp1tx9p4hd_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp1tx9p4hd_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    var max_diff_pair []interface{}\n    for _, pair := range test_list {\n        if pair[0].(int) > pair[1].(int) {\n            diff := pair[0].(int) - pair[1].(int)\n            if diff > max_diff {\n                max_diff = diff\n                max_diff_pair = pair\n            }\n        }\n    }\n    fmt.Println(max_diff_pair)\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122846,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp3woq3ww0_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp3woq3ww0_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmp3woq3ww0_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp3woq3ww0_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmp3woq3ww0_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp3woq3ww0_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for i := 0; i < len(test_list); i++ {\n        for j := i + 1; j < len(test_list); j++ {\n            if test_list[i][0] != test_list[j][0] {\n                diff := test_list[j][1].(int) - test_list[i][1].(int)\n                if diff > max_diff {\n                    max_diff = diff\n                }\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122846,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmph9555i54_test.go:31:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmph9555i54_test.go:31:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmph9555i54_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmph9555i54_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmph9555i54_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmph9555i54_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, tuple := range test_list {\n        if len(tuple) != 2 {\n            panic(\"Tuple length is not 2\")\n        }\n        if tuple[0].(int) > tuple[1].(int) {\n            diff := tuple[0].(int) - tuple[1].(int)\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122846,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmppzmach6o_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmppzmach6o_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmppzmach6o_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmppzmach6o_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmppzmach6o_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmppzmach6o_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int = 0\n    for i := 0; i < len(test_list); i++ {\n        for j := 0; j < len(test_list[i]); j++ {\n            for k := 0; k < len(test_list[i]); k++ {\n                if j != k {\n                    if test_list[i][j].(int) - test_list[i][k].(int) > max_diff {\n                        max_diff = test_list[i][j].(int) - test_list[i][k].(int)\n                    }\n                }\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510019,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpywfg7yhs_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpywfg7yhs_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpywfg7yhs_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpywfg7yhs_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpywfg7yhs_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpywfg7yhs_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) < tuple[1].(int) {\n            if tuple[1].(int) - tuple[0].(int) > max_diff {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122846,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpydynlo5v_test.go:28:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpydynlo5v_test.go:28:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpydynlo5v_test.go:29:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpydynlo5v_test.go:29:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpydynlo5v_test.go:30:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpydynlo5v_test.go:30:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            if tuple[0].(int) - tuple[1].(int) > max_diff {\n                max_diff = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if tuple[1].(int) - tuple[0].(int) > max_diff {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510019,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpffhwi78a_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpffhwi78a_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpffhwi78a_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for i := 0; i < len(test_list); i++ {\n        for j := i + 1; j < len(test_list); j++ {\n            if test_list[i][0] != test_list[j][0] {\n                diff := test_list[j][1].(int) - test_list[i][1].(int)\n                if diff > max_diff {\n                    max_diff = diff\n                }\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122846,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmph9555i54_test.go:31:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmph9555i54_test.go:31:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmph9555i54_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmph9555i54_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmph9555i54_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmph9555i54_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, test_tuple := range test_list {\n        if test_tuple[0].(int) > test_tuple[1].(int) {\n            if max_diff < test_tuple[0].(int) - test_tuple[1].(int) {\n                max_diff = test_tuple[0].(int) - test_tuple[1].(int)\n            }\n        } else {\n            if max_diff < test_tuple[1].(int) - test_tuple[0].(int) {\n                max_diff = test_tuple[1].(int) - test_tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122846,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmphr4edbfn_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmphr4edbfn_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmphr4edbfn_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmphr4edbfn_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmphr4edbfn_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmphr4edbfn_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            if tuple[0].(int) - tuple[1].(int) > max_diff {\n                max_diff = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if tuple[1].(int) - tuple[0].(int) > max_diff {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510019,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpffhwi78a_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpffhwi78a_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpffhwi78a_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            diff := tuple[0].(int) - tuple[1].(int)\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122846,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpiatr81wo_test.go:29:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpiatr81wo_test.go:29:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpiatr81wo_test.go:30:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpiatr81wo_test.go:30:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpiatr81wo_test.go:31:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpiatr81wo_test.go:31:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, tuple := range test_list {\n        if len(tuple) != 2 {\n            panic(\"Invalid tuple length\")\n        }\n        if tuple[0] == nil || tuple[1] == nil {\n            continue\n        }\n        if tuple[0].(int) > tuple[1].(int) {\n            diff := tuple[0].(int) - tuple[1].(int)\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122846,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpz6f66i7b_test.go:35:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpz6f66i7b_test.go:35:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpz6f66i7b_test.go:36:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpz6f66i7b_test.go:36:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpz6f66i7b_test.go:37:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpz6f66i7b_test.go:37:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int = 0\n    for _, tuple := range test_list {\n        var diff int = tuple[1].(int) - tuple[0].(int)\n        if diff > max_diff {\n            max_diff = diff\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122846,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp_hc6tn2t_test.go:27:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp_hc6tn2t_test.go:27:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmp_hc6tn2t_test.go:28:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp_hc6tn2t_test.go:28:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmp_hc6tn2t_test.go:29:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp_hc6tn2t_test.go:29:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for i := 0; i < len(test_list); i++ {\n        for j := i + 1; j < len(test_list); j++ {\n            if test_list[i][0] != test_list[j][0] {\n                diff := test_list[j][1].(int) - test_list[i][1].(int)\n                if diff > max_diff {\n                    max_diff = diff\n                }\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122846,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmph9555i54_test.go:31:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmph9555i54_test.go:31:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmph9555i54_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmph9555i54_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmph9555i54_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmph9555i54_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, tuple := range test_list {\n        var diff int\n        if tuple[0].(int) > tuple[1].(int) {\n            diff = tuple[0].(int) - tuple[1].(int)\n        } else {\n            diff = tuple[1].(int) - tuple[0].(int)\n        }\n        if diff > max_diff {\n            max_diff = diff\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122846,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp1tx9p4hd_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp1tx9p4hd_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmp1tx9p4hd_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp1tx9p4hd_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmp1tx9p4hd_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp1tx9p4hd_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, pair := range test_list {\n        if pair[0].(int) > pair[1].(int) {\n            if pair[0].(int) - pair[1].(int) > max_diff {\n                max_diff = pair[0].(int) - pair[1].(int)\n            }\n        } else {\n            if pair[1].(int) - pair[0].(int) > max_diff {\n                max_diff = pair[1].(int) - pair[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510019,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpyegcc7_3_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpyegcc7_3_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpyegcc7_3_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpyegcc7_3_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpyegcc7_3_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpyegcc7_3_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            if tuple[0].(int) - tuple[1].(int) > max_diff {\n                max_diff = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if tuple[1].(int) - tuple[0].(int) > max_diff {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510019,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpffhwi78a_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpffhwi78a_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpffhwi78a_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            if tuple[0].(int) - tuple[1].(int) > max_diff {\n                max_diff = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if tuple[1].(int) - tuple[0].(int) > max_diff {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510019,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpffhwi78a_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpffhwi78a_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpffhwi78a_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, tuple := range test_list {\n        diff := tuple[1].(int) - tuple[0].(int)\n        if diff > max_diff {\n            max_diff = diff\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510019,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp26xijncj_test.go:27:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp26xijncj_test.go:27:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmp26xijncj_test.go:28:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp26xijncj_test.go:28:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmp26xijncj_test.go:29:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp26xijncj_test.go:29:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            if tuple[0].(int) - tuple[1].(int) > max_diff {\n                max_diff = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if tuple[1].(int) - tuple[0].(int) > max_diff {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510019,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpffhwi78a_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpffhwi78a_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpffhwi78a_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            if tuple[0].(int) - tuple[1].(int) > max_diff {\n                max_diff = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if tuple[1].(int) - tuple[0].(int) > max_diff {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510019,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpffhwi78a_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpffhwi78a_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpffhwi78a_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int = 0\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            diff := tuple[0].(int) - tuple[1].(int)\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122846,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpp2p9mb4b_test.go:29:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpp2p9mb4b_test.go:29:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpp2p9mb4b_test.go:30:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpp2p9mb4b_test.go:30:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpp2p9mb4b_test.go:31:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpp2p9mb4b_test.go:31:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for i := 0; i < len(test_list); i++ {\n        for j := i+1; j < len(test_list); j++ {\n            if test_list[i][0] != test_list[j][0] {\n                diff := test_list[j][1].(int) - test_list[i][1].(int)\n                if diff > max_diff {\n                    max_diff = diff\n                }\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122846,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpfm4lo0et_test.go:31:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpfm4lo0et_test.go:31:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpfm4lo0et_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpfm4lo0et_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpfm4lo0et_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpfm4lo0et_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            if tuple[0].(int) - tuple[1].(int) > max_diff {\n                max_diff = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if tuple[1].(int) - tuple[0].(int) > max_diff {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510019,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpffhwi78a_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpffhwi78a_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpffhwi78a_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, tup := range test_list {\n        if len(tup) != 2 {\n            panic(\"Invalid tuple\")\n        }\n        if tup[0].(int) > tup[1].(int) {\n            diff := tup[0].(int) - tup[1].(int)\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122846,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpvq2fjvz8_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpvq2fjvz8_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpvq2fjvz8_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpvq2fjvz8_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpvq2fjvz8_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpvq2fjvz8_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            diff := tuple[0].(int) - tuple[1].(int)\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122846,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpiatr81wo_test.go:29:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpiatr81wo_test.go:29:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpiatr81wo_test.go:30:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpiatr81wo_test.go:30:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpiatr81wo_test.go:31:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpiatr81wo_test.go:31:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, tuple := range test_list {\n        var diff int\n        if tuple[0].(int) > tuple[1].(int) {\n            diff = tuple[0].(int) - tuple[1].(int)\n        } else {\n            diff = tuple[1].(int) - tuple[0].(int)\n        }\n        if diff > max_diff {\n            max_diff = diff\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122846,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp1tx9p4hd_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp1tx9p4hd_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmp1tx9p4hd_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp1tx9p4hd_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmp1tx9p4hd_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp1tx9p4hd_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            if tuple[0].(int) - tuple[1].(int) > max_diff {\n                max_diff = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if tuple[1].(int) - tuple[0].(int) > max_diff {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510019,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpffhwi78a_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpffhwi78a_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpffhwi78a_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            if tuple[0].(int) - tuple[1].(int) > max_diff {\n                max_diff = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if tuple[1].(int) - tuple[0].(int) > max_diff {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510019,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpffhwi78a_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpffhwi78a_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpffhwi78a_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, test := range test_list {\n        if test[0].(int) > test[1].(int) {\n            if test[0].(int) - test[1].(int) > max_diff {\n                max_diff = test[0].(int) - test[1].(int)\n            }\n        } else {\n            if test[1].(int) - test[0].(int) > max_diff {\n                max_diff = test[1].(int) - test[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122846,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpyygh5kbx_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpyygh5kbx_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpyygh5kbx_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpyygh5kbx_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpyygh5kbx_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpyygh5kbx_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, tup := range test_list {\n        if tup[0].(int) > tup[1].(int) {\n            if tup[0].(int) - tup[1].(int) > max_diff {\n                max_diff = tup[0].(int) - tup[1].(int)\n            }\n        } else {\n            if tup[1].(int) - tup[0].(int) > max_diff {\n                max_diff = tup[1].(int) - tup[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122846,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpbo04s0bq_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpbo04s0bq_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpbo04s0bq_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpbo04s0bq_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpbo04s0bq_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpbo04s0bq_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, t := range test_list {\n        if t[0].(int) > t[1].(int) {\n            if t[0].(int) - t[1].(int) > max_diff {\n                max_diff = t[0].(int) - t[1].(int)\n            }\n        } else {\n            if t[1].(int) - t[0].(int) > max_diff {\n                max_diff = t[1].(int) - t[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510019,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpkmm46n0w_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpkmm46n0w_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpkmm46n0w_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpkmm46n0w_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpkmm46n0w_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpkmm46n0w_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, test := range test_list {\n        if test[0].(int) > test[1].(int) {\n            if test[0].(int) - test[1].(int) > max_diff {\n                max_diff = test[0].(int) - test[1].(int)\n            }\n        } else {\n            if test[1].(int) - test[0].(int) > max_diff {\n                max_diff = test[1].(int) - test[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122846,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpyygh5kbx_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpyygh5kbx_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpyygh5kbx_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpyygh5kbx_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpyygh5kbx_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpyygh5kbx_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, pair := range test_list {\n        if pair[0].(int) > pair[1].(int) {\n            if pair[0].(int) - pair[1].(int) > max_diff {\n                max_diff = pair[0].(int) - pair[1].(int)\n            }\n        } else {\n            if pair[1].(int) - pair[0].(int) > max_diff {\n                max_diff = pair[1].(int) - pair[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510019,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpyegcc7_3_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpyegcc7_3_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpyegcc7_3_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpyegcc7_3_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpyegcc7_3_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpyegcc7_3_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            diff := tuple[0].(int) - tuple[1].(int)\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122846,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpiatr81wo_test.go:29:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpiatr81wo_test.go:29:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpiatr81wo_test.go:30:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpiatr81wo_test.go:30:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpiatr81wo_test.go:31:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpiatr81wo_test.go:31:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int = 0\n    for i := 0; i < len(test_list); i++ {\n        for j := i + 1; j < len(test_list); j++ {\n            if test_list[j][0].(int) - test_list[i][1].(int) > max_diff {\n                max_diff = test_list[j][0].(int) - test_list[i][1].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122846,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp7oem1m3p_test.go:28:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp7oem1m3p_test.go:28:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmp7oem1m3p_test.go:29:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp7oem1m3p_test.go:29:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmp7oem1m3p_test.go:30:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp7oem1m3p_test.go:30:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            if tuple[0].(int) - tuple[1].(int) > max_diff {\n                max_diff = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if tuple[1].(int) - tuple[0].(int) > max_diff {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510019,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpffhwi78a_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpffhwi78a_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpffhwi78a_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, pair := range test_list {\n        if pair[0].(int) > pair[1].(int) {\n            if pair[0].(int) - pair[1].(int) > max_diff {\n                max_diff = pair[0].(int) - pair[1].(int)\n            }\n        } else {\n            if pair[1].(int) - pair[0].(int) > max_diff {\n                max_diff = pair[1].(int) - pair[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510019,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpyegcc7_3_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpyegcc7_3_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpyegcc7_3_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpyegcc7_3_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpyegcc7_3_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpyegcc7_3_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int = 0\n    for i := 0; i < len(test_list); i++ {\n        for j := i + 1; j < len(test_list); j++ {\n            if test_list[i][0] != test_list[j][0] {\n                diff := test_list[j][1].(int) - test_list[i][1].(int)\n                if diff > max_diff {\n                    max_diff = diff\n                }\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122846,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpmg4g3j2n_test.go:31:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpmg4g3j2n_test.go:31:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpmg4g3j2n_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpmg4g3j2n_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpmg4g3j2n_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpmg4g3j2n_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            if tuple[0].(int) - tuple[1].(int) > max_diff {\n                max_diff = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if tuple[1].(int) - tuple[0].(int) > max_diff {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510019,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpffhwi78a_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpffhwi78a_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpffhwi78a_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, test := range test_list {\n        var diff int\n        if test[0].(int) > test[1].(int) {\n            diff = test[0].(int) - test[1].(int)\n        } else {\n            diff = test[1].(int) - test[0].(int)\n        }\n        if diff > max_diff {\n            max_diff = diff\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122846,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp568owe9a_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp568owe9a_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmp568owe9a_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp568owe9a_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmp568owe9a_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp568owe9a_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_difference int = 0\n    for _, tuple := range test_list {\n        for _, value := range tuple {\n            if value.(int) > max_difference {\n                max_difference = value.(int)\n            }\n        }\n    }\n    return max_difference\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122848,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpn93_37g0_test.go:28:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpn93_37g0_test.go:28:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpn93_37g0_test.go:29:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpn93_37g0_test.go:29:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpn93_37g0_test.go:30:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpn93_37g0_test.go:30:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, pair := range test_list {\n        if pair[0].(int) > pair[1].(int) {\n            if pair[0].(int) - pair[1].(int) > max_diff {\n                max_diff = pair[0].(int) - pair[1].(int)\n            }\n        } else {\n            if pair[1].(int) - pair[0].(int) > max_diff {\n                max_diff = pair[1].(int) - pair[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510019,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpyegcc7_3_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpyegcc7_3_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpyegcc7_3_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpyegcc7_3_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpyegcc7_3_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpyegcc7_3_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, tuple := range test_list {\n        diff := tuple[1].(int) - tuple[0].(int)\n        if diff > max_diff {\n            max_diff = diff\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510019,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp26xijncj_test.go:27:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp26xijncj_test.go:27:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmp26xijncj_test.go:28:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp26xijncj_test.go:28:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmp26xijncj_test.go:29:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp26xijncj_test.go:29:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            if max_diff < tuple[0].(int) - tuple[1].(int) {\n                max_diff = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if max_diff < tuple[1].(int) - tuple[0].(int) {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122846,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpyb54nnji_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpyb54nnji_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpyb54nnji_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpyb54nnji_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpyb54nnji_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpyb54nnji_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, tup := range test_list {\n        if tup[0].(int) > tup[1].(int) {\n            if tup[0].(int) - tup[1].(int) > max_diff {\n                max_diff = tup[0].(int) - tup[1].(int)\n            }\n        } else {\n            if tup[1].(int) - tup[0].(int) > max_diff {\n                max_diff = tup[1].(int) - tup[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122846,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpbo04s0bq_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpbo04s0bq_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpbo04s0bq_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpbo04s0bq_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpbo04s0bq_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpbo04s0bq_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, pair := range test_list {\n        if pair[0].(int) > pair[1].(int) {\n            if pair[0].(int) - pair[1].(int) > max_diff {\n                max_diff = pair[0].(int) - pair[1].(int)\n            }\n        } else {\n            if pair[1].(int) - pair[0].(int) > max_diff {\n                max_diff = pair[1].(int) - pair[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510019,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpyegcc7_3_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpyegcc7_3_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpyegcc7_3_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpyegcc7_3_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpyegcc7_3_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpyegcc7_3_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            if tuple[0].(int) - tuple[1].(int) > max_diff {\n                max_diff = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if tuple[1].(int) - tuple[0].(int) > max_diff {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510019,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpffhwi78a_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpffhwi78a_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpffhwi78a_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    max_diff := 0\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            diff := tuple[0].(int) - tuple[1].(int)\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122848,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmps61kf_8k_test.go:29:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmps61kf_8k_test.go:29:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmps61kf_8k_test.go:30:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmps61kf_8k_test.go:30:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmps61kf_8k_test.go:31:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmps61kf_8k_test.go:31:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, test_case := range test_list {\n        if len(test_case) != 2 {\n            fmt.Println(\"Invalid test case:\", test_case)\n            continue\n        }\n        if test_case[0] == nil || test_case[1] == nil {\n            fmt.Println(\"Invalid test case:\", test_case)\n            continue\n        }\n        if test_case[0].(int) > test_case[1].(int) {\n            diff := test_case[0].(int) - test_case[1].(int)\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122848,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpblfblfkw_test.go:37:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpblfblfkw_test.go:37:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpblfblfkw_test.go:38:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpblfblfkw_test.go:38:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpblfblfkw_test.go:39:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpblfblfkw_test.go:39:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, tuple := range test_list {\n        if len(tuple) != 2 {\n            continue\n        }\n        var diff int\n        switch tuple[0].(type) {\n        case int:\n            diff = tuple[0].(int) - tuple[1].(int)\n        case float64:\n            diff = int(tuple[0].(float64) - tuple[1].(float64))\n        }\n        if diff < 0 {\n            diff = -diff\n        }\n        if diff > max_diff {\n            max_diff = diff\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122848,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp03ivggiq_test.go:39:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp03ivggiq_test.go:39:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmp03ivggiq_test.go:40:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp03ivggiq_test.go:40:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmp03ivggiq_test.go:41:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp03ivggiq_test.go:41:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int = 0\n    for i := 0; i < len(test_list); i++ {\n        for j := i + 1; j < len(test_list); j++ {\n            if test_list[i][0] != test_list[j][0] {\n                if test_list[i][1] != test_list[j][1] {\n                    if test_list[i][2] != test_list[j][2] {\n                        if test_list[i][3] != test_list[j][3] {\n                            if test_list[i][4] != test_list[j][4] {\n                                if test_list[i][5] != test_list[j][5] {\n                                    if test_list[i][6] != test_list[j][6] {\n                                        if test_list[i][7] != test_list[j][7] {\n                                            if test_list[i][8] != test_list[j][8] {\n                                                if test_list[i][9] != test_list[j][9] {\n                                                    if test_list[i][10] != test_list[j][10] {\n                                                        if test_list[i][11] != test_list[j][11] {\n                                                            if test_list[i][12] != test_list[j][12] {\n                                                                if test_list[i][13] != test_list[j][13] {\n                                                                    if test_list[i][14] != test_list[j][14] {\n                                                                        if test_list[i][15] != test_list[j][15] {\n                                                                            if test_list[i][16] != test_list[j][16] {\n                                                                                if test_list[i][17] != test_list[j][17] {\n                                                                                    if test_list[i][18] != test_list[j][18] {\n                                                                                        if test_list[i][19] != test_list[j][19] {\n                                                                \nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122848,
      "stdout": "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n",
      "stderr": "# command-line-arguments\n/tmp/tmpc2_bbes3_test.go:34:6: expected '(', found TestMax_Difference\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, pair := range test_list {\n        if pair[0].(int) > pair[1].(int) {\n            if pair[0].(int) - pair[1].(int) > max_diff {\n                max_diff = pair[0].(int) - pair[1].(int)\n            }\n        } else {\n            if pair[1].(int) - pair[0].(int) > max_diff {\n                max_diff = pair[1].(int) - pair[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510019,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpyegcc7_3_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpyegcc7_3_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpyegcc7_3_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpyegcc7_3_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpyegcc7_3_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpyegcc7_3_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) < tuple[1].(int) {\n            diff := tuple[1].(int) - tuple[0].(int)\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122848,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp3usqy_ab_test.go:29:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp3usqy_ab_test.go:29:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmp3usqy_ab_test.go:30:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp3usqy_ab_test.go:30:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmp3usqy_ab_test.go:31:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp3usqy_ab_test.go:31:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, tuple := range test_list {\n        if len(tuple) != 2 {\n            panic(\"Tuple must have exactly 2 elements\")\n        }\n        if tuple[0].(int) > tuple[1].(int) {\n            diff := tuple[0].(int) - tuple[1].(int)\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122848,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpckwhsw7b_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpckwhsw7b_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpckwhsw7b_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpckwhsw7b_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpckwhsw7b_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpckwhsw7b_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, tup := range test_list {\n        if len(tup) != 2 {\n            panic(\"Invalid tuple length\")\n        }\n        if tup[0].(int) > tup[1].(int) {\n            diff := tup[0].(int) - tup[1].(int)\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122848,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpn_cwcjj0_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpn_cwcjj0_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpn_cwcjj0_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpn_cwcjj0_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpn_cwcjj0_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpn_cwcjj0_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, tuple := range test_list {\n        if len(tuple) != 2 {\n            panic(\"Invalid tuple\")\n        }\n        diff := tuple[1].(int) - tuple[0].(int)\n        if diff > max_diff {\n            max_diff = diff\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122848,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpx_5n24j9_test.go:30:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpx_5n24j9_test.go:30:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpx_5n24j9_test.go:31:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpx_5n24j9_test.go:31:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpx_5n24j9_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpx_5n24j9_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, t := range test_list {\n        if len(t) != 2 {\n            continue\n        }\n        switch t[0].(type) {\n        case int:\n            diff := t[0].(int) - t[1].(int)\n            if diff > max_diff {\n                max_diff = diff\n            }\n        case float64:\n            diff := t[0].(float64) - t[1].(float64)\n            if diff > float64(max_diff) {\n                max_diff = int(diff)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122848,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpd7y568w1_test.go:38:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpd7y568w1_test.go:38:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpd7y568w1_test.go:39:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpd7y568w1_test.go:39:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpd7y568w1_test.go:40:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpd7y568w1_test.go:40:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, test := range test_list {\n        if test[0].(int) > test[1].(int) {\n            if test[0].(int) - test[1].(int) > max_diff {\n                max_diff = test[0].(int) - test[1].(int)\n            }\n        } else {\n            if test[1].(int) - test[0].(int) > max_diff {\n                max_diff = test[1].(int) - test[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122846,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpyygh5kbx_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpyygh5kbx_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpyygh5kbx_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpyygh5kbx_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpyygh5kbx_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpyygh5kbx_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    max_diff := 0\n    for _, t := range test_list {\n        if t[0].(int) > t[1].(int) {\n            if t[0].(int) - t[1].(int) > max_diff {\n                max_diff = t[0].(int) - t[1].(int)\n            }\n        } else {\n            if t[1].(int) - t[0].(int) > max_diff {\n                max_diff = t[1].(int) - t[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122848,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpfmo9g6te_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpfmo9g6te_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpfmo9g6te_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpfmo9g6te_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpfmo9g6te_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpfmo9g6te_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for i := 0; i < len(test_list); i++ {\n        for j := i + 1; j < len(test_list); j++ {\n            if test_list[i][0] == test_list[j][0] {\n                diff := test_list[j][1].(int) - test_list[i][1].(int)\n                if diff > max_diff {\n                    max_diff = diff\n                }\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510019,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpsz_nbqt6_test.go:31:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpsz_nbqt6_test.go:31:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpsz_nbqt6_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpsz_nbqt6_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpsz_nbqt6_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpsz_nbqt6_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for i := 0; i < len(test_list); i++ {\n        for j := i + 1; j < len(test_list); j++ {\n            if test_list[i][0] != test_list[j][0] {\n                diff := test_list[j][1].(int) - test_list[i][1].(int)\n                if diff > max_diff {\n                    max_diff = diff\n                }\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122846,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmph9555i54_test.go:31:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmph9555i54_test.go:31:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmph9555i54_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmph9555i54_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmph9555i54_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmph9555i54_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int = 0\n    for i := 0; i < len(test_list); i++ {\n        for j := 0; j < len(test_list[i]); j++ {\n            for k := 0; k < len(test_list[i]); k++ {\n                if j != k {\n                    diff := test_list[i][j].(int) - test_list[i][k].(int)\n                    if diff > max_diff {\n                        max_diff = diff\n                    }\n                }\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122848,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmplx8fcwiu_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmplx8fcwiu_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmplx8fcwiu_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmplx8fcwiu_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmplx8fcwiu_test.go:35:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmplx8fcwiu_test.go:35:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, pair := range test_list {\n        if pair[0].(int) > pair[1].(int) {\n            if pair[0].(int) - pair[1].(int) > max_diff {\n                max_diff = pair[0].(int) - pair[1].(int)\n            }\n        } else {\n            if pair[1].(int) - pair[0].(int) > max_diff {\n                max_diff = pair[1].(int) - pair[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510019,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpyegcc7_3_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpyegcc7_3_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpyegcc7_3_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpyegcc7_3_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpyegcc7_3_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpyegcc7_3_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            diff := tuple[0].(int) - tuple[1].(int)\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122846,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpiatr81wo_test.go:29:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpiatr81wo_test.go:29:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpiatr81wo_test.go:30:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpiatr81wo_test.go:30:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpiatr81wo_test.go:31:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpiatr81wo_test.go:31:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, pair := range test_list {\n        if pair[0].(int) > pair[1].(int) {\n            if pair[0].(int) - pair[1].(int) > max_diff {\n                max_diff = pair[0].(int) - pair[1].(int)\n            }\n        } else {\n            if pair[1].(int) - pair[0].(int) > max_diff {\n                max_diff = pair[1].(int) - pair[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510019,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpyegcc7_3_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpyegcc7_3_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpyegcc7_3_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpyegcc7_3_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpyegcc7_3_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpyegcc7_3_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    max_diff := 0\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            if tuple[0].(int) - tuple[1].(int) > max_diff {\n                max_diff = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if tuple[1].(int) - tuple[0].(int) > max_diff {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122848,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmptreiqlbk_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmptreiqlbk_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmptreiqlbk_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmptreiqlbk_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmptreiqlbk_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmptreiqlbk_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for i := 0; i < len(test_list); i++ {\n        for j := i + 1; j < len(test_list); j++ {\n            if test_list[i][0] == test_list[j][0] {\n                if test_list[i][1] > test_list[j][1] {\n                    diff := test_list[i][1].(int) - test_list[j][1].(int)\n                    if diff > max_diff {\n                        max_diff = diff\n                    }\n                } else {\n                    diff := test_list[j][1].(int) - test_list[i][1].(int)\n                    if diff > max_diff {\n                        max_diff = diff\n                    }\n                }\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122848,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpf44v8a8o_test.go:14:36: invalid operation: test_list[i][1] > test_list[j][1] (operator > not defined on interface)\n/tmp/tmpf44v8a8o_test.go:38:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpf44v8a8o_test.go:38:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpf44v8a8o_test.go:39:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpf44v8a8o_test.go:39:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpf44v8a8o_test.go:40:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpf44v8a8o_test.go:40:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            if tuple[0].(int) - tuple[1].(int) > max_diff {\n                max_diff = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if tuple[1].(int) - tuple[0].(int) > max_diff {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510019,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpffhwi78a_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpffhwi78a_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpffhwi78a_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int = 0\n    for i := 0; i < len(test_list); i++ {\n        for j := 0; j < len(test_list[i]); j++ {\n            for k := 0; k < len(test_list[i]); k++ {\n                if j != k {\n                    if test_list[i][j].(int) - test_list[i][k].(int) > max_diff {\n                        max_diff = test_list[i][j].(int) - test_list[i][k].(int)\n                    }\n                }\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510019,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpywfg7yhs_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpywfg7yhs_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpywfg7yhs_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpywfg7yhs_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpywfg7yhs_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpywfg7yhs_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, tup := range test_list {\n        if tup[0].(int) > tup[1].(int) {\n            if tup[0].(int) - tup[1].(int) > max_diff {\n                max_diff = tup[0].(int) - tup[1].(int)\n            }\n        } else {\n            if tup[1].(int) - tup[0].(int) > max_diff {\n                max_diff = tup[1].(int) - tup[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122846,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpbo04s0bq_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpbo04s0bq_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpbo04s0bq_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpbo04s0bq_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpbo04s0bq_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpbo04s0bq_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) < tuple[1].(int) {\n            diff := tuple[1].(int) - tuple[0].(int)\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122848,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp3usqy_ab_test.go:29:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp3usqy_ab_test.go:29:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmp3usqy_ab_test.go:30:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp3usqy_ab_test.go:30:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmp3usqy_ab_test.go:31:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp3usqy_ab_test.go:31:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, pair := range test_list {\n        if pair[0].(int) > pair[1].(int) {\n            if pair[0].(int) - pair[1].(int) > max_diff {\n                max_diff = pair[0].(int) - pair[1].(int)\n            }\n        } else {\n            if pair[1].(int) - pair[0].(int) > max_diff {\n                max_diff = pair[1].(int) - pair[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510019,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpyegcc7_3_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpyegcc7_3_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpyegcc7_3_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpyegcc7_3_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpyegcc7_3_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpyegcc7_3_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, item := range test_list {\n        if item[0].(int) > item[1].(int) {\n            if item[0].(int) - item[1].(int) > max_diff {\n                max_diff = item[0].(int) - item[1].(int)\n            }\n        } else {\n            if item[1].(int) - item[0].(int) > max_diff {\n                max_diff = item[1].(int) - item[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122846,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpnt763sdm_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpnt763sdm_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpnt763sdm_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpnt763sdm_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpnt763sdm_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpnt763sdm_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, test := range test_list {\n        if len(test) != 2 {\n            continue\n        }\n        if test[0] == nil || test[1] == nil {\n            continue\n        }\n        if test[0].(int) > test[1].(int) {\n            continue\n        }\n        diff := test[1].(int) - test[0].(int)\n        if diff > max_diff {\n            max_diff = diff\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122848,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpc1aj4nl0_test.go:36:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpc1aj4nl0_test.go:36:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpc1aj4nl0_test.go:37:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpc1aj4nl0_test.go:37:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpc1aj4nl0_test.go:38:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpc1aj4nl0_test.go:38:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            diff := tuple[0].(int) - tuple[1].(int)\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122846,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpiatr81wo_test.go:29:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpiatr81wo_test.go:29:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpiatr81wo_test.go:30:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpiatr81wo_test.go:30:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpiatr81wo_test.go:31:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpiatr81wo_test.go:31:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int = 0\n    for _, tuple := range test_list {\n        var diff int = tuple[1].(int) - tuple[0].(int)\n        if diff > max_diff {\n            max_diff = diff\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122846,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp_hc6tn2t_test.go:27:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp_hc6tn2t_test.go:27:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmp_hc6tn2t_test.go:28:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp_hc6tn2t_test.go:28:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmp_hc6tn2t_test.go:29:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp_hc6tn2t_test.go:29:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            if tuple[0].(int) - tuple[1].(int) > max_diff {\n                max_diff = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if tuple[1].(int) - tuple[0].(int) > max_diff {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510019,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpffhwi78a_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpffhwi78a_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpffhwi78a_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, tup := range test_list {\n        if tup[1].(int) - tup[0].(int) > max_diff {\n            max_diff = tup[1].(int) - tup[0].(int)\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122848,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpkr_r6bkt_test.go:26:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpkr_r6bkt_test.go:26:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpkr_r6bkt_test.go:27:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpkr_r6bkt_test.go:27:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpkr_r6bkt_test.go:28:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpkr_r6bkt_test.go:28:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, tuple := range test_list {\n        if len(tuple) != 2 {\n            panic(\"Invalid tuple\")\n        }\n        if tuple[0] == nil || tuple[1] == nil {\n            continue\n        }\n        if tuple[0].(int) > tuple[1].(int) {\n            if tuple[0].(int) - tuple[1].(int) > max_diff {\n                max_diff = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if tuple[1].(int) - tuple[0].(int) > max_diff {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122848,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp4ga210ha_test.go:38:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp4ga210ha_test.go:38:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmp4ga210ha_test.go:39:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp4ga210ha_test.go:39:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmp4ga210ha_test.go:40:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp4ga210ha_test.go:40:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int = 0\n    var diff int = 0\n    for _, tuple := range test_list {\n        diff = tuple[1].(int) - tuple[0].(int)\n        if diff > max_diff {\n            max_diff = diff\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122848,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp03wfy5fa_test.go:28:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp03wfy5fa_test.go:28:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmp03wfy5fa_test.go:29:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp03wfy5fa_test.go:29:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmp03wfy5fa_test.go:30:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp03wfy5fa_test.go:30:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, test_tuple := range test_list {\n        if len(test_tuple) != 2 {\n            panic(\"Invalid test tuple\")\n        }\n        var test_diff int\n        switch test_tuple[0].(type) {\n        case int:\n            test_diff = test_tuple[0].(int) - test_tuple[1].(int)\n        case float64:\n            test_diff = int(test_tuple[0].(float64) - test_tuple[1].(float64))\n        default:\n            panic(\"Invalid test tuple\")\n        }\n        if test_diff > max_diff {\n            max_diff = test_diff\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122848,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpzdxu8tdp_test.go:38:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpzdxu8tdp_test.go:38:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpzdxu8tdp_test.go:39:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpzdxu8tdp_test.go:39:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpzdxu8tdp_test.go:40:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpzdxu8tdp_test.go:40:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, t := range test_list {\n        if len(t) != 2 {\n            panic(\"Invalid tuple length\")\n        }\n        if t[0] == nil || t[1] == nil {\n            panic(\"Invalid tuple value\")\n        }\n        diff := t[1].(int) - t[0].(int)\n        if diff > max_diff {\n            max_diff = diff\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122848,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmppp_pu87u_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmppp_pu87u_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmppp_pu87u_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmppp_pu87u_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmppp_pu87u_test.go:35:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmppp_pu87u_test.go:35:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            if tuple[0].(int) - tuple[1].(int) > max_diff {\n                max_diff = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if tuple[1].(int) - tuple[0].(int) > max_diff {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510019,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpffhwi78a_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpffhwi78a_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpffhwi78a_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            if tuple[0].(int) - tuple[1].(int) > max_diff {\n                max_diff = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if tuple[1].(int) - tuple[0].(int) > max_diff {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510019,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpffhwi78a_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpffhwi78a_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpffhwi78a_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, item := range test_list {\n        if item[0].(int) > item[1].(int) {\n            if item[0].(int) - item[1].(int) > max_diff {\n                max_diff = item[0].(int) - item[1].(int)\n            }\n        } else {\n            if item[1].(int) - item[0].(int) > max_diff {\n                max_diff = item[1].(int) - item[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122846,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpnt763sdm_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpnt763sdm_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpnt763sdm_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpnt763sdm_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpnt763sdm_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpnt763sdm_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, pair := range test_list {\n        diff := pair[1].(int) - pair[0].(int)\n        if diff > max_diff {\n            max_diff = diff\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122848,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp1c52wfm2_test.go:27:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp1c52wfm2_test.go:27:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmp1c52wfm2_test.go:28:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp1c52wfm2_test.go:28:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmp1c52wfm2_test.go:29:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp1c52wfm2_test.go:29:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, tup := range test_list {\n        if tup[0].(int) > tup[1].(int) {\n            if tup[0].(int) - tup[1].(int) > max_diff {\n                max_diff = tup[0].(int) - tup[1].(int)\n            }\n        } else {\n            if tup[1].(int) - tup[0].(int) > max_diff {\n                max_diff = tup[1].(int) - tup[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122846,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpbo04s0bq_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpbo04s0bq_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpbo04s0bq_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpbo04s0bq_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpbo04s0bq_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpbo04s0bq_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int = 0\n    for _, test_pair := range test_list {\n        if test_pair[0].(int) > test_pair[1].(int) {\n            if test_pair[0].(int) - test_pair[1].(int) > max_diff {\n                max_diff = test_pair[0].(int) - test_pair[1].(int)\n            }\n        } else {\n            if test_pair[1].(int) - test_pair[0].(int) > max_diff {\n                max_diff = test_pair[1].(int) - test_pair[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122848,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpwyp4iaj6_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpwyp4iaj6_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpwyp4iaj6_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpwyp4iaj6_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpwyp4iaj6_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpwyp4iaj6_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, tup := range test_list {\n        for i := 0; i < len(tup); i++ {\n            for j := i + 1; j < len(tup); j++ {\n                if tup[i].(int) > tup[j].(int) {\n                    if tup[i].(int) - tup[j].(int) > max_diff {\n                        max_diff = tup[i].(int) - tup[j].(int)\n                    }\n                } else {\n                    if tup[j].(int) - tup[i].(int) > max_diff {\n                        max_diff = tup[j].(int) - tup[i].(int)\n                    }\n                }\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122848,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp9s0u6z4r_test.go:36:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp9s0u6z4r_test.go:36:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmp9s0u6z4r_test.go:37:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp9s0u6z4r_test.go:37:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmp9s0u6z4r_test.go:38:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp9s0u6z4r_test.go:38:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, tuple := range test_list {\n        if len(tuple) != 2 {\n            panic(\"Invalid tuple\")\n        }\n        if tuple[0].(int) > tuple[1].(int) {\n            diff := tuple[0].(int) - tuple[1].(int)\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122850,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpwhantkgy_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpwhantkgy_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpwhantkgy_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpwhantkgy_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpwhantkgy_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpwhantkgy_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    max_diff := 0\n    for _, tuple := range test_list {\n        diff := tuple[1].(int) - tuple[0].(int)\n        if diff > max_diff {\n            max_diff = diff\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122850,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp1_tzzpy__test.go:27:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp1_tzzpy__test.go:27:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmp1_tzzpy__test.go:28:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp1_tzzpy__test.go:28:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmp1_tzzpy__test.go:29:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp1_tzzpy__test.go:29:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int = 0\n    for i := 0; i < len(test_list); i++ {\n        for j := 0; j < len(test_list[i]); j++ {\n            for k := 0; k < len(test_list[i]); k++ {\n                if j != k {\n                    if test_list[i][j].(int) - test_list[i][k].(int) > max_diff {\n                        max_diff = test_list[i][j].(int) - test_list[i][k].(int)\n                    }\n                }\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510019,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpywfg7yhs_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpywfg7yhs_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpywfg7yhs_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpywfg7yhs_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpywfg7yhs_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpywfg7yhs_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, pair := range test_list {\n        if pair[0].(int) > pair[1].(int) {\n            if pair[0].(int) - pair[1].(int) > max_diff {\n                max_diff = pair[0].(int) - pair[1].(int)\n            }\n        } else {\n            if pair[1].(int) - pair[0].(int) > max_diff {\n                max_diff = pair[1].(int) - pair[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510019,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpyegcc7_3_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpyegcc7_3_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpyegcc7_3_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpyegcc7_3_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpyegcc7_3_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpyegcc7_3_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int = 0\n    for _, tup := range test_list {\n        if len(tup) != 2 {\n            panic(\"Invalid tuple length\")\n        }\n        if tup[0].(int) > tup[1].(int) {\n            diff := tup[0].(int) - tup[1].(int)\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122850,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpsjnypkdw_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpsjnypkdw_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpsjnypkdw_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpsjnypkdw_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpsjnypkdw_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpsjnypkdw_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, tup := range test_list {\n        if len(tup) != 2 {\n            panic(\"Invalid tuple length\")\n        }\n        if tup[0].(int) > tup[1].(int) {\n            diff := tup[0].(int) - tup[1].(int)\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122848,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpn_cwcjj0_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpn_cwcjj0_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpn_cwcjj0_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpn_cwcjj0_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpn_cwcjj0_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpn_cwcjj0_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            if max_diff < tuple[0].(int) - tuple[1].(int) {\n                max_diff = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if max_diff < tuple[1].(int) - tuple[0].(int) {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122846,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpyb54nnji_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpyb54nnji_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpyb54nnji_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpyb54nnji_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpyb54nnji_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpyb54nnji_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for i := 0; i < len(test_list); i++ {\n        for j := i + 1; j < len(test_list); j++ {\n            if test_list[i][0] == test_list[j][0] {\n                if test_list[i][1].(int) - test_list[j][1].(int) > max_diff {\n                    max_diff = test_list[i][1].(int) - test_list[j][1].(int)\n                }\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122850,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpkq08lt3g_test.go:30:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpkq08lt3g_test.go:30:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpkq08lt3g_test.go:31:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpkq08lt3g_test.go:31:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpkq08lt3g_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpkq08lt3g_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            if tuple[0].(int) - tuple[1].(int) > max_diff {\n                max_diff = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if tuple[1].(int) - tuple[0].(int) > max_diff {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510019,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpffhwi78a_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpffhwi78a_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpffhwi78a_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    max_diff := 0\n    for _, test_tuple := range test_list {\n        if len(test_tuple) != 2 {\n            panic(\"Invalid test tuple\")\n        }\n        test_diff := test_tuple[0].(int) - test_tuple[1].(int)\n        if test_diff > max_diff {\n            max_diff = test_diff\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122850,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpqwa1m45u_test.go:30:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpqwa1m45u_test.go:30:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpqwa1m45u_test.go:31:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpqwa1m45u_test.go:31:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpqwa1m45u_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpqwa1m45u_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, pair := range test_list {\n        if pair[0].(int) > pair[1].(int) {\n            diff := pair[0].(int) - pair[1].(int)\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122850,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpli3y87fi_test.go:29:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpli3y87fi_test.go:29:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpli3y87fi_test.go:30:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpli3y87fi_test.go:30:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpli3y87fi_test.go:31:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpli3y87fi_test.go:31:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    max_diff := 0\n    for _, pair := range test_list {\n        if pair[0].(int) > pair[1].(int) {\n            diff := pair[0].(int) - pair[1].(int)\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122846,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpb2l9xz4__test.go:29:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpb2l9xz4__test.go:29:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpb2l9xz4__test.go:30:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpb2l9xz4__test.go:30:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpb2l9xz4__test.go:31:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpb2l9xz4__test.go:31:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, test_tuple := range test_list {\n        if test_tuple[0].(int) > test_tuple[1].(int) {\n            if test_tuple[0].(int) - test_tuple[1].(int) > max_diff {\n                max_diff = test_tuple[0].(int) - test_tuple[1].(int)\n            }\n        } else {\n            if test_tuple[1].(int) - test_tuple[0].(int) > max_diff {\n                max_diff = test_tuple[1].(int) - test_tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122850,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpin1nyle1_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpin1nyle1_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpin1nyle1_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpin1nyle1_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpin1nyle1_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpin1nyle1_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, tuple := range test_list {\n        if len(tuple) != 2 {\n            panic(\"Invalid tuple\")\n        }\n        if tuple[0].(int) > tuple[1].(int) {\n            diff := tuple[0].(int) - tuple[1].(int)\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122850,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpwhantkgy_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpwhantkgy_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpwhantkgy_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpwhantkgy_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpwhantkgy_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpwhantkgy_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for i := 0; i < len(test_list); i++ {\n        for j := 0; j < len(test_list[i]); j++ {\n            for k := j + 1; k < len(test_list[i]); k++ {\n                if test_list[i][j].(int) > test_list[i][k].(int) {\n                    if test_list[i][j].(int) - test_list[i][k].(int) > max_diff {\n                        max_diff = test_list[i][j].(int) - test_list[i][k].(int)\n                    }\n                } else {\n                    if test_list[i][k].(int) - test_list[i][j].(int) > max_diff {\n                        max_diff = test_list[i][k].(int) - test_list[i][j].(int)\n                    }\n                }\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122850,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp6937gmyd_test.go:36:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp6937gmyd_test.go:36:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmp6937gmyd_test.go:37:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp6937gmyd_test.go:37:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmp6937gmyd_test.go:38:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp6937gmyd_test.go:38:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, pair := range test_list {\n        if pair[0].(int) > pair[1].(int) {\n            if pair[0].(int) - pair[1].(int) > max_diff {\n                max_diff = pair[0].(int) - pair[1].(int)\n            }\n        } else {\n            if pair[1].(int) - pair[0].(int) > max_diff {\n                max_diff = pair[1].(int) - pair[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510019,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpyegcc7_3_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpyegcc7_3_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpyegcc7_3_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpyegcc7_3_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpyegcc7_3_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpyegcc7_3_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for i := 0; i < len(test_list); i++ {\n        for j := 0; j < len(test_list[i]); j++ {\n            for k := 0; k < len(test_list[i]); k++ {\n                if test_list[i][j].(int) - test_list[i][k].(int) > max_diff {\n                    max_diff = test_list[i][j].(int) - test_list[i][k].(int)\n                }\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122850,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp75bel1x__test.go:30:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp75bel1x__test.go:30:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmp75bel1x__test.go:31:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp75bel1x__test.go:31:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmp75bel1x__test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp75bel1x__test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, pair := range test_list {\n        if pair[0].(int) > pair[1].(int) {\n            diff := pair[0].(int) - pair[1].(int)\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122850,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpli3y87fi_test.go:29:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpli3y87fi_test.go:29:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpli3y87fi_test.go:30:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpli3y87fi_test.go:30:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpli3y87fi_test.go:31:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpli3y87fi_test.go:31:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int = 0\n    for i := 0; i < len(test_list); i++ {\n        for j := i + 1; j < len(test_list); j++ {\n            if test_list[i][0] == test_list[j][0] {\n                if test_list[i][1] != test_list[j][1] {\n                    diff := test_list[j][1].(int) - test_list[i][1].(int)\n                    if diff > max_diff {\n                        max_diff = diff\n                    }\n                }\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122850,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpehnky_9d_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpehnky_9d_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpehnky_9d_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpehnky_9d_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpehnky_9d_test.go:35:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpehnky_9d_test.go:35:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            if tuple[0].(int) - tuple[1].(int) > max_diff {\n                max_diff = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if tuple[1].(int) - tuple[0].(int) > max_diff {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510019,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpffhwi78a_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpffhwi78a_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpffhwi78a_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, tuple := range test_list {\n        for _, value := range tuple {\n            if value.(int) > max_diff {\n                max_diff = value.(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122850,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp1r08sstu_test.go:28:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp1r08sstu_test.go:28:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmp1r08sstu_test.go:29:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp1r08sstu_test.go:29:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmp1r08sstu_test.go:30:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp1r08sstu_test.go:30:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for i := 0; i < len(test_list); i++ {\n        for j := i + 1; j < len(test_list); j++ {\n            if test_list[i][0] == test_list[j][0] {\n                diff := test_list[j][1].(int) - test_list[i][1].(int)\n                if diff > max_diff {\n                    max_diff = diff\n                }\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510019,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpsz_nbqt6_test.go:31:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpsz_nbqt6_test.go:31:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpsz_nbqt6_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpsz_nbqt6_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpsz_nbqt6_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpsz_nbqt6_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, item := range test_list {\n        if item[1].(int) - item[0].(int) > max_diff {\n            max_diff = item[1].(int) - item[0].(int)\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122850,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpg_6udp47_test.go:26:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpg_6udp47_test.go:26:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpg_6udp47_test.go:27:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpg_6udp47_test.go:27:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpg_6udp47_test.go:28:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpg_6udp47_test.go:28:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    max_diff := 0\n    for _, test := range test_list {\n        if test[0].(int) > test[1].(int) {\n            if test[0].(int) - test[1].(int) > max_diff {\n                max_diff = test[0].(int) - test[1].(int)\n            }\n        } else {\n            if test[1].(int) - test[0].(int) > max_diff {\n                max_diff = test[1].(int) - test[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122850,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpnnk4l1s8_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpnnk4l1s8_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpnnk4l1s8_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpnnk4l1s8_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpnnk4l1s8_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpnnk4l1s8_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            if tuple[0].(int) - tuple[1].(int) > max_diff {\n                max_diff = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if tuple[1].(int) - tuple[0].(int) > max_diff {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510019,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpffhwi78a_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpffhwi78a_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpffhwi78a_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for i := 0; i < len(test_list); i++ {\n        for j := 0; j < len(test_list[i]); j++ {\n            for k := j + 1; k < len(test_list[i]); k++ {\n                if test_list[i][j].(int) > test_list[i][k].(int) {\n                    if max_diff < test_list[i][j].(int) - test_list[i][k].(int) {\n                        max_diff = test_list[i][j].(int) - test_list[i][k].(int)\n                    }\n                } else {\n                    if max_diff < test_list[i][k].(int) - test_list[i][j].(int) {\n                        max_diff = test_list[i][k].(int) - test_list[i][j].(int)\n                    }\n                }\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122850,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp7kblrvu3_test.go:36:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp7kblrvu3_test.go:36:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmp7kblrvu3_test.go:37:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp7kblrvu3_test.go:37:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmp7kblrvu3_test.go:38:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp7kblrvu3_test.go:38:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int = 0\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            diff := tuple[0].(int) - tuple[1].(int)\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122846,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpp2p9mb4b_test.go:29:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpp2p9mb4b_test.go:29:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpp2p9mb4b_test.go:30:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpp2p9mb4b_test.go:30:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpp2p9mb4b_test.go:31:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpp2p9mb4b_test.go:31:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, pair := range test_list {\n        diff := pair[1].(int) - pair[0].(int)\n        if diff > max_diff {\n            max_diff = diff\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122848,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp1c52wfm2_test.go:27:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp1c52wfm2_test.go:27:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmp1c52wfm2_test.go:28:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp1c52wfm2_test.go:28:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmp1c52wfm2_test.go:29:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp1c52wfm2_test.go:29:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for i := 0; i < len(test_list); i++ {\n        for j := 0; j < len(test_list[i]); j++ {\n            for k := 0; k < len(test_list[i]); k++ {\n                if j != k {\n                    diff := test_list[i][j].(int) - test_list[i][k].(int)\n                    if diff > max_diff {\n                        max_diff = diff\n                    }\n                }\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510019,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpxq5p7427_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpxq5p7427_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpxq5p7427_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpxq5p7427_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpxq5p7427_test.go:35:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpxq5p7427_test.go:35:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for i := 0; i < len(test_list); i++ {\n        for j := 0; j < len(test_list[i]); j++ {\n            for k := j + 1; k < len(test_list[i]); k++ {\n                if test_list[i][j].(int) > test_list[i][k].(int) {\n                    if test_list[i][j].(int) - test_list[i][k].(int) > max_diff {\n                        max_diff = test_list[i][j].(int) - test_list[i][k].(int)\n                    }\n                } else {\n                    if test_list[i][k].(int) - test_list[i][j].(int) > max_diff {\n                        max_diff = test_list[i][k].(int) - test_list[i][j].(int)\n                    }\n                }\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122850,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp6937gmyd_test.go:36:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp6937gmyd_test.go:36:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmp6937gmyd_test.go:37:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp6937gmyd_test.go:37:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmp6937gmyd_test.go:38:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp6937gmyd_test.go:38:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, test := range test_list {\n        if len(test) != 2 {\n            panic(\"Invalid test tuple\")\n        }\n        if test[0] == nil || test[1] == nil {\n            panic(\"Invalid test tuple\")\n        }\n        if test[0].(int) > test[1].(int) {\n            panic(\"Invalid test tuple\")\n        }\n        diff := test[1].(int) - test[0].(int)\n        if diff > max_diff {\n            max_diff = diff\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122850,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp3q3p23o8_test.go:36:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp3q3p23o8_test.go:36:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmp3q3p23o8_test.go:37:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp3q3p23o8_test.go:37:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmp3q3p23o8_test.go:38:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp3q3p23o8_test.go:38:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, test_tuple := range test_list {\n        if test_tuple[0].(int) > test_tuple[1].(int) {\n            if test_tuple[0].(int) - test_tuple[1].(int) > max_diff {\n                max_diff = test_tuple[0].(int) - test_tuple[1].(int)\n            }\n        } else {\n            if test_tuple[1].(int) - test_tuple[0].(int) > max_diff {\n                max_diff = test_tuple[1].(int) - test_tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122850,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpin1nyle1_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpin1nyle1_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpin1nyle1_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpin1nyle1_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpin1nyle1_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpin1nyle1_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, pair := range test_list {\n        if pair[0].(int) > pair[1].(int) {\n            diff := pair[0].(int) - pair[1].(int)\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122850,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpli3y87fi_test.go:29:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpli3y87fi_test.go:29:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpli3y87fi_test.go:30:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpli3y87fi_test.go:30:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpli3y87fi_test.go:31:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpli3y87fi_test.go:31:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            if tuple[0].(int) - tuple[1].(int) > max_diff {\n                max_diff = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if tuple[1].(int) - tuple[0].(int) > max_diff {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510019,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpffhwi78a_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpffhwi78a_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpffhwi78a_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_difference int\n    for _, tuple := range test_list {\n        for i := 0; i < len(tuple); i++ {\n            for j := i + 1; j < len(tuple); j++ {\n                if tuple[i].(int) - tuple[j].(int) > max_difference {\n                    max_difference = tuple[i].(int) - tuple[j].(int)\n                }\n            }\n        }\n    }\n    return max_difference\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122850,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmphb_8d9pq_test.go:30:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmphb_8d9pq_test.go:30:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmphb_8d9pq_test.go:31:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmphb_8d9pq_test.go:31:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmphb_8d9pq_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmphb_8d9pq_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) < tuple[1].(int) {\n            if max_diff < tuple[1].(int) - tuple[0].(int) {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122850,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp6gbp6wi4_test.go:28:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp6gbp6wi4_test.go:28:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmp6gbp6wi4_test.go:29:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp6gbp6wi4_test.go:29:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmp6gbp6wi4_test.go:30:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp6gbp6wi4_test.go:30:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    max_diff := 0\n    for i := 0; i < len(test_list); i++ {\n        for j := i + 1; j < len(test_list); j++ {\n            if test_list[j][0].(int) - test_list[i][1].(int) > max_diff {\n                max_diff = test_list[j][0].(int) - test_list[i][1].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122850,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpzsq02ku7_test.go:28:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpzsq02ku7_test.go:28:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpzsq02ku7_test.go:29:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpzsq02ku7_test.go:29:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpzsq02ku7_test.go:30:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpzsq02ku7_test.go:30:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[1].(int) - tuple[0].(int) > max_diff {\n            max_diff = tuple[1].(int) - tuple[0].(int)\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122846,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpbb5rrokl_test.go:26:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpbb5rrokl_test.go:26:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpbb5rrokl_test.go:27:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpbb5rrokl_test.go:27:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpbb5rrokl_test.go:28:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpbb5rrokl_test.go:28:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int = 0\n    for _, test_tuple := range test_list {\n        var diff int = test_tuple[1].(int) - test_tuple[0].(int)\n        if diff > max_diff {\n            max_diff = diff\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122850,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpl687jijm_test.go:27:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpl687jijm_test.go:27:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpl687jijm_test.go:28:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpl687jijm_test.go:28:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpl687jijm_test.go:29:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpl687jijm_test.go:29:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, pair := range test_list {\n        // fmt.Println(pair)\n        if pair[0].(int) > pair[1].(int) {\n            if pair[0].(int) - pair[1].(int) > max_diff {\n                max_diff = pair[0].(int) - pair[1].(int)\n            }\n        } else {\n            if pair[1].(int) - pair[0].(int) > max_diff {\n                max_diff = pair[1].(int) - pair[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122850,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp0cvgdh7n_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp0cvgdh7n_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmp0cvgdh7n_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp0cvgdh7n_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmp0cvgdh7n_test.go:35:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp0cvgdh7n_test.go:35:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, test := range test_list {\n        if len(test) != 2 {\n            continue\n        }\n        if test[0] == nil || test[1] == nil {\n            continue\n        }\n        if test[0].(int) > test[1].(int) {\n            continue\n        }\n        diff := test[1].(int) - test[0].(int)\n        if diff > max_diff {\n            max_diff = diff\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122848,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpc1aj4nl0_test.go:36:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpc1aj4nl0_test.go:36:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpc1aj4nl0_test.go:37:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpc1aj4nl0_test.go:37:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpc1aj4nl0_test.go:38:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpc1aj4nl0_test.go:38:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, pair := range test_list {\n        if pair[0].(int) > pair[1].(int) {\n            diff := pair[0].(int) - pair[1].(int)\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122850,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpli3y87fi_test.go:29:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpli3y87fi_test.go:29:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpli3y87fi_test.go:30:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpli3y87fi_test.go:30:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpli3y87fi_test.go:31:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpli3y87fi_test.go:31:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            if tuple[0].(int) - tuple[1].(int) > max_diff {\n                max_diff = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if tuple[1].(int) - tuple[0].(int) > max_diff {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510019,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpffhwi78a_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpffhwi78a_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpffhwi78a_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, pair := range test_list {\n        if pair[0].(int) > pair[1].(int) {\n            if pair[0].(int) - pair[1].(int) > max_diff {\n                max_diff = pair[0].(int) - pair[1].(int)\n            }\n        } else {\n            if pair[1].(int) - pair[0].(int) > max_diff {\n                max_diff = pair[1].(int) - pair[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510019,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpyegcc7_3_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpyegcc7_3_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpyegcc7_3_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpyegcc7_3_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpyegcc7_3_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpyegcc7_3_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    max_diff := 0\n    for _, t := range test_list {\n        if t[0].(int) > t[1].(int) {\n            diff := t[0].(int) - t[1].(int)\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122850,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp0gr3k2vb_test.go:29:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp0gr3k2vb_test.go:29:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmp0gr3k2vb_test.go:30:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp0gr3k2vb_test.go:30:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmp0gr3k2vb_test.go:31:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp0gr3k2vb_test.go:31:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, tup := range test_list {\n        if tup[0].(int) > tup[1].(int) {\n            diff := tup[0].(int) - tup[1].(int)\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122850,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpvroly0z1_test.go:29:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpvroly0z1_test.go:29:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpvroly0z1_test.go:30:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpvroly0z1_test.go:30:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpvroly0z1_test.go:31:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpvroly0z1_test.go:31:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, v := range test_list {\n        for i := 0; i < len(v); i++ {\n            for j := i + 1; j < len(v); j++ {\n                if v[i].(int) - v[j].(int) > max_diff {\n                    max_diff = v[i].(int) - v[j].(int)\n                }\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122850,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp186uo5oi_test.go:30:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp186uo5oi_test.go:30:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmp186uo5oi_test.go:31:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp186uo5oi_test.go:31:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmp186uo5oi_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp186uo5oi_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            if tuple[0].(int) - tuple[1].(int) > max_diff {\n                max_diff = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if tuple[1].(int) - tuple[0].(int) > max_diff {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510019,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpffhwi78a_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpffhwi78a_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpffhwi78a_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, tup := range test_list {\n        if tup[0].(int) > tup[1].(int) {\n            if max_diff < tup[0].(int) - tup[1].(int) {\n                max_diff = tup[0].(int) - tup[1].(int)\n            }\n        } else {\n            if max_diff < tup[1].(int) - tup[0].(int) {\n                max_diff = tup[1].(int) - tup[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122851,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpsid4gvne_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpsid4gvne_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpsid4gvne_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpsid4gvne_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpsid4gvne_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpsid4gvne_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            if max_diff < tuple[0].(int) - tuple[1].(int) {\n                max_diff = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if max_diff < tuple[1].(int) - tuple[0].(int) {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122846,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpyb54nnji_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpyb54nnji_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpyb54nnji_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpyb54nnji_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpyb54nnji_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpyb54nnji_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            if tuple[0].(int) - tuple[1].(int) > max_diff {\n                max_diff = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if tuple[1].(int) - tuple[0].(int) > max_diff {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510019,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpffhwi78a_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpffhwi78a_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpffhwi78a_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            if max_diff < tuple[0].(int) - tuple[1].(int) {\n                max_diff = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if max_diff < tuple[1].(int) - tuple[0].(int) {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122846,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpyb54nnji_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpyb54nnji_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpyb54nnji_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpyb54nnji_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpyb54nnji_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpyb54nnji_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int = 0\n    for _, tuple := range test_list {\n        var diff int = tuple[1].(int) - tuple[0].(int)\n        if diff > max_diff {\n            max_diff = diff\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122846,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp_hc6tn2t_test.go:27:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp_hc6tn2t_test.go:27:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmp_hc6tn2t_test.go:28:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp_hc6tn2t_test.go:28:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmp_hc6tn2t_test.go:29:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp_hc6tn2t_test.go:29:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, tuple := range test_list {\n        if len(tuple) != 2 {\n            panic(\"Invalid tuple\")\n        }\n        if tuple[0].(int) > tuple[1].(int) {\n            if tuple[0].(int) - tuple[1].(int) > max_diff {\n                max_diff = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if tuple[1].(int) - tuple[0].(int) > max_diff {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122851,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpekjasrsb_test.go:35:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpekjasrsb_test.go:35:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpekjasrsb_test.go:36:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpekjasrsb_test.go:36:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpekjasrsb_test.go:37:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpekjasrsb_test.go:37:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, pair := range test_list {\n        if pair[0].(int) > pair[1].(int) {\n            if pair[0].(int) - pair[1].(int) > max_diff {\n                max_diff = pair[0].(int) - pair[1].(int)\n            }\n        } else {\n            if pair[1].(int) - pair[0].(int) > max_diff {\n                max_diff = pair[1].(int) - pair[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510019,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpyegcc7_3_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpyegcc7_3_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpyegcc7_3_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpyegcc7_3_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpyegcc7_3_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpyegcc7_3_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            if tuple[0].(int) - tuple[1].(int) > max_diff {\n                max_diff = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if tuple[1].(int) - tuple[0].(int) > max_diff {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510019,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpffhwi78a_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpffhwi78a_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpffhwi78a_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, list := range test_list {\n        for i := 0; i < len(list); i++ {\n            for j := i + 1; j < len(list); j++ {\n                if list[i].(int) < list[j].(int) {\n                    if list[j].(int) - list[i].(int) > max_diff {\n                        max_diff = list[j].(int) - list[i].(int)\n                    }\n                }\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122851,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpkcs03mtt_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpkcs03mtt_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpkcs03mtt_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpkcs03mtt_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpkcs03mtt_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpkcs03mtt_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int = 0\n    for _, tuple := range test_list {\n        var diff int = tuple[1].(int) - tuple[0].(int)\n        if diff > max_diff {\n            max_diff = diff\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122846,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp_hc6tn2t_test.go:27:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp_hc6tn2t_test.go:27:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmp_hc6tn2t_test.go:28:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp_hc6tn2t_test.go:28:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmp_hc6tn2t_test.go:29:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp_hc6tn2t_test.go:29:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, pair := range test_list {\n        if pair[0].(int) > pair[1].(int) {\n            diff := pair[0].(int) - pair[1].(int)\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122850,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpli3y87fi_test.go:29:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpli3y87fi_test.go:29:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpli3y87fi_test.go:30:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpli3y87fi_test.go:30:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpli3y87fi_test.go:31:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpli3y87fi_test.go:31:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, pair := range test_list {\n        if pair[0].(int) > pair[1].(int) {\n            diff := pair[0].(int) - pair[1].(int)\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122850,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpli3y87fi_test.go:29:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpli3y87fi_test.go:29:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpli3y87fi_test.go:30:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpli3y87fi_test.go:30:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpli3y87fi_test.go:31:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpli3y87fi_test.go:31:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, t := range test_list {\n        diff := t[1].(int) - t[0].(int)\n        if diff > max_diff {\n            max_diff = diff\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122851,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpltzpxes3_test.go:27:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpltzpxes3_test.go:27:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpltzpxes3_test.go:28:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpltzpxes3_test.go:28:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpltzpxes3_test.go:29:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpltzpxes3_test.go:29:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, tup := range test_list {\n        if len(tup) != 2 {\n            panic(\"tuple must have 2 elements\")\n        }\n        if tup[0].(int) > tup[1].(int) {\n            diff := tup[0].(int) - tup[1].(int)\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122851,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmprk6y_iy5_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmprk6y_iy5_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmprk6y_iy5_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmprk6y_iy5_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmprk6y_iy5_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmprk6y_iy5_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_difference int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            if tuple[0].(int) - tuple[1].(int) > max_difference {\n                max_difference = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if tuple[1].(int) - tuple[0].(int) > max_difference {\n                max_difference = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_difference\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122851,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpte8s1lrh_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpte8s1lrh_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpte8s1lrh_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpte8s1lrh_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpte8s1lrh_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpte8s1lrh_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for i := 0; i < len(test_list); i++ {\n        for j := i + 1; j < len(test_list); j++ {\n            if test_list[i][0] == test_list[j][0] {\n                diff := test_list[i][1].(int) - test_list[j][1].(int)\n                if diff > max_diff {\n                    max_diff = diff\n                }\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122851,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpqhm25r1d_test.go:31:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpqhm25r1d_test.go:31:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpqhm25r1d_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpqhm25r1d_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpqhm25r1d_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpqhm25r1d_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            if tuple[0].(int) - tuple[1].(int) > max_diff {\n                max_diff = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if tuple[1].(int) - tuple[0].(int) > max_diff {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510019,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpffhwi78a_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpffhwi78a_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpffhwi78a_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            if tuple[0].(int) - tuple[1].(int) > max_diff {\n                max_diff = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if tuple[1].(int) - tuple[0].(int) > max_diff {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510019,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpffhwi78a_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpffhwi78a_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpffhwi78a_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            if tuple[0].(int) - tuple[1].(int) > max_diff {\n                max_diff = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if tuple[1].(int) - tuple[0].(int) > max_diff {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510019,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpffhwi78a_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpffhwi78a_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpffhwi78a_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpffhwi78a_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    max_diff := 0\n    for _, tup := range test_list {\n        if len(tup) != 2 {\n            panic(\"Invalid tuple length\")\n        }\n        if tup[0].(int) > tup[1].(int) {\n            diff := tup[0].(int) - tup[1].(int)\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122851,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpqzaskv3q_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpqzaskv3q_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpqzaskv3q_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpqzaskv3q_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpqzaskv3q_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpqzaskv3q_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, pair := range test_list {\n        diff := pair[0].(int) - pair[1].(int)\n        if diff > max_diff {\n            max_diff = diff\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122851,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpkwgog4aa_test.go:27:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpkwgog4aa_test.go:27:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpkwgog4aa_test.go:28:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpkwgog4aa_test.go:28:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpkwgog4aa_test.go:29:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpkwgog4aa_test.go:29:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, pair := range test_list {\n        if pair[0].(int) > pair[1].(int) {\n            if pair[0].(int) - pair[1].(int) > max_diff {\n                max_diff = pair[0].(int) - pair[1].(int)\n            }\n        } else {\n            if pair[1].(int) - pair[0].(int) > max_diff {\n                max_diff = pair[1].(int) - pair[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510019,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpyegcc7_3_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpyegcc7_3_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpyegcc7_3_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpyegcc7_3_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpyegcc7_3_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpyegcc7_3_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, pair := range test_list {\n        if pair[0].(int) > pair[1].(int) {\n            diff := pair[0].(int) - pair[1].(int)\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122850,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpli3y87fi_test.go:29:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpli3y87fi_test.go:29:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpli3y87fi_test.go:30:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpli3y87fi_test.go:30:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpli3y87fi_test.go:31:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpli3y87fi_test.go:31:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, pair := range test_list {\n        if pair[0].(int) > pair[1].(int) {\n            diff := pair[0].(int) - pair[1].(int)\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122850,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpli3y87fi_test.go:29:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpli3y87fi_test.go:29:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpli3y87fi_test.go:30:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpli3y87fi_test.go:30:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpli3y87fi_test.go:31:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpli3y87fi_test.go:31:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[1].(int) - tuple[0].(int) > max_diff {\n            max_diff = tuple[1].(int) - tuple[0].(int)\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122846,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpbb5rrokl_test.go:26:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpbb5rrokl_test.go:26:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpbb5rrokl_test.go:27:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpbb5rrokl_test.go:27:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpbb5rrokl_test.go:28:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpbb5rrokl_test.go:28:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, pair := range test_list {\n        if pair[0].(int) > pair[1].(int) {\n            if pair[0].(int) - pair[1].(int) > max_diff {\n                max_diff = pair[0].(int) - pair[1].(int)\n            }\n        } else {\n            if pair[1].(int) - pair[0].(int) > max_diff {\n                max_diff = pair[1].(int) - pair[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510019,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpyegcc7_3_test.go:32:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpyegcc7_3_test.go:32:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpyegcc7_3_test.go:33:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpyegcc7_3_test.go:33:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpyegcc7_3_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpyegcc7_3_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, test_tuple := range test_list {\n        if len(test_tuple) != 2 {\n            panic(fmt.Sprintf(\"Invalid test tuple: %v\", test_tuple))\n        }\n        var test_diff int\n        switch test_tuple[0].(type) {\n        case int:\n            test_diff = test_tuple[0].(int) - test_tuple[1].(int)\n        case float64:\n            test_diff = int(test_tuple[0].(float64) - test_tuple[1].(float64))\n        default:\n            panic(fmt.Sprintf(\"Invalid test tuple: %v\", test_tuple))\n        }\n        if test_diff > max_diff {\n            max_diff = test_diff\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122851,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpw8nk2jf9_test.go:38:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpw8nk2jf9_test.go:38:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpw8nk2jf9_test.go:39:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpw8nk2jf9_test.go:39:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmpw8nk2jf9_test.go:40:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmpw8nk2jf9_test.go:40:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n    var max_diff int\n    for _, tup := range test_list {\n        if len(tup) != 2 {\n            panic(\"Invalid tuple length\")\n        }\n        a, b := tup[0].(int), tup[1].(int)\n        if a > b {\n            a, b = b, a\n        }\n        diff := b - a\n        if diff > max_diff {\n            max_diff = diff\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122851,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp7jzeu9fz_test.go:34:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp7jzeu9fz_test.go:34:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmp7jzeu9fz_test.go:35:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp7jzeu9fz_test.go:35:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n/tmp/tmp7jzeu9fz_test.go:36:33: cannot use [][]int{...} (type [][]int) as type [][]interface {} in argument to candidate\n/tmp/tmp7jzeu9fz_test.go:36:47: cannot use []interface {}{...} (type []interface {}) as type []int in slice literal\n",
      "exit_code": 2,
      "status": "SyntaxError"
    }
  ]
}
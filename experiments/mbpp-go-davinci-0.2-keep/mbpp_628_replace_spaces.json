{
  "name": "mbpp_628_replace_spaces",
  "language": "go_test.go",
  "prompt": "package replace_spaces_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to replace all spaces in the given string with '%20'.\nfunc replace_spaces(myString string) string {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_628_replace_spaces.py",
  "prompt_terminology": "verbatim",
  "tests": "func TestReplace_Spaces(t *testing.T) {\n  candidate := replace_spaces\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"My Name is Dawood\"), expected: \"My%20Name%20is%20Dawood\" },\n     { actual: candidate(\"I am a Programmer\"), expected: \"I%20am%20a%20Programmer\" },\n     { actual: candidate(\"I love Coding\"), expected: \"I%20love%20Coding\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
  "stop_tokens": [
    "\nfunc",
    "struct",
    "\n// "
  ],
  "completions": [
    "    var result string\n    for _, char := range myString {\n        if char == ' ' {\n            result += \"%20\"\n        } else {\n            result += string(char)\n        }\n    }\n    return result\n}\n",
    "    var result string\n    for _, char := range myString {\n        if char == ' ' {\n            result += \"%20\"\n        } else {\n            result += string(char)\n        }\n    }\n    return result\n}\n",
    "    var newString string\n    for _, char := range myString {\n        if char == ' ' {\n            newString += \"%20\"\n        } else {\n            newString += string(char)\n        }\n    }\n    return newString\n}\n",
    "    var newString string\n    for _, char := range myString {\n        if char == ' ' {\n            newString += \"%20\"\n        } else {\n            newString += string(char)\n        }\n    }\n    return newString\n}\n",
    "    var newString string\n    for _, char := range myString {\n        if char == ' ' {\n            newString += \"%20\"\n        } else {\n            newString += string(char)\n        }\n    }\n    return newString\n}\n",
    "    var result string\n    for _, char := range myString {\n        if char == ' ' {\n            result += \"%20\"\n        } else {\n            result += string(char)\n        }\n    }\n    return result\n}\n",
    "    var result string\n    for _, char := range myString {\n        if char == ' ' {\n            result += \"%20\"\n        } else {\n            result += string(char)\n        }\n    }\n    return result\n}\n",
    "    var newString string\n    for i := 0; i < len(myString); i++ {\n        if myString[i] == ' ' {\n            newString += \"%20\"\n        } else {\n            newString += string(myString[i])\n        }\n    }\n    return newString\n}\n",
    "    var result string\n    for _, c := range myString {\n        if c == ' ' {\n            result += \"%20\"\n        } else {\n            result += string(c)\n        }\n    }\n    return result\n}\n",
    "    var newString string\n    for _, char := range myString {\n        if char == ' ' {\n            newString += \"%20\"\n        } else {\n            newString += string(char)\n        }\n    }\n    return newString\n}\n",
    "    var result string\n    for _, char := range myString {\n        if char == ' ' {\n            result += \"%20\"\n        } else {\n            result += string(char)\n        }\n    }\n    return result\n}\n",
    "    var result string = \"\"\n    for _, char := range myString {\n        if char == ' ' {\n            result += \"%20\"\n        } else {\n            result += string(char)\n        }\n    }\n    return result\n}\n",
    "    var result string\n    for _, char := range myString {\n        if char == ' ' {\n            result += \"%20\"\n        } else {\n            result += string(char)\n        }\n    }\n    return result\n}\n",
    "    var newString string\n    for _, char := range myString {\n        if char == ' ' {\n            newString += \"%20\"\n        } else {\n            newString += string(char)\n        }\n    }\n    return newString\n}\n",
    "    var result string\n    for _, char := range myString {\n        if char == ' ' {\n            result += \"%20\"\n        } else {\n            result += string(char)\n        }\n    }\n    return result\n}\n",
    "    var newString string\n    for _, char := range myString {\n        if char == ' ' {\n            newString += \"%20\"\n        } else {\n            newString += string(char)\n        }\n    }\n    return newString\n}\n",
    "    var result string\n    for _, char := range myString {\n        if char == ' ' {\n            result += \"%20\"\n        } else {\n            result += string(char)\n        }\n    }\n    return result\n}\n",
    "    var result string\n    for _, char := range myString {\n        if char == ' ' {\n            result += \"%20\"\n        } else {\n            result += string(char)\n        }\n    }\n    return result\n}\n",
    "    var result string\n    for _, char := range myString {\n        if char == ' ' {\n            result += \"%20\"\n        } else {\n            result += string(char)\n        }\n    }\n    return result\n}\n",
    "    var newString string\n    for i := 0; i < len(myString); i++ {\n        if myString[i] == ' ' {\n            newString += \"%20\"\n        } else {\n            newString += string(myString[i])\n        }\n    }\n    return newString\n}\n"
  ]
}
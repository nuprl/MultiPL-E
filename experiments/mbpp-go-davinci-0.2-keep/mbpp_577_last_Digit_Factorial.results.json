{
  "name": "mbpp_577_last_Digit_Factorial",
  "language": "go_test.go",
  "prompt": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_577_last_Digit_Factorial.py",
  "prompt_terminology": "verbatim",
  "tests": "func TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
  "stop_tokens": [
    "\nfunc",
    "struct",
    "\n// "
  ],
  "results": [
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n < 0 {\n        return -1\n    }\n    if n < 2 {\n        return 1\n    }\n    return (n * last_Digit_Factorial(n-1)) % 10\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n < 0 {\n        return -1\n    }\n    if n == 0 {\n        return 1\n    }\n    return n * last_Digit_Factorial(n-1)\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmpw84nks6t_test.go:34: expected '%!s(int=4)', got '%!s(int=24)'\n    --- FAIL: TestLast_Digit_Factorial/test_num__1 (0.00s)\n        tmpw84nks6t_test.go:34: expected '%!s(int=0)', got '%!s(int=-4249290049419214848)'\n    --- FAIL: TestLast_Digit_Factorial/test_num__2 (0.00s)\n        tmpw84nks6t_test.go:34: expected '%!s(int=0)', got '%!s(int=-8764578968847253504)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // your code here\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmp_vlip067_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n == 0 {\n        return 1\n    }\n    return n * last_Digit_Factorial(n - 1)\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmpz_y45qo2_test.go:31: expected '%!s(int=4)', got '%!s(int=24)'\n    --- FAIL: TestLast_Digit_Factorial/test_num__1 (0.00s)\n        tmpz_y45qo2_test.go:31: expected '%!s(int=0)', got '%!s(int=-4249290049419214848)'\n    --- FAIL: TestLast_Digit_Factorial/test_num__2 (0.00s)\n        tmpz_y45qo2_test.go:31: expected '%!s(int=0)', got '%!s(int=-8764578968847253504)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n < 0 {\n        return -1\n    }\n    if n < 2 {\n        return 1\n    }\n    return (n * last_Digit_Factorial(n - 1)) % 10\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 6\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 2\n    }\n    if n == 6 {\n        return 2\n    }\n    if n == 7 {\n        return 4\n    }\n    if n == 8 {\n        return 2\n    }\n    if n == 9 {\n        return 8\n    }\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 6\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 2\n    }\n    if n == 6 {\n        return 2\n    }\n    if n == 7 {\n        return 4\n    }\n    if n == 8 {\n        return 2\n    }\n    if n == 9 {\n        return 8\n    }\n    if n == 10 {\n        return 8\n    }\n    if n == 11 {\n        return 8\n    }\n    if n == 12 {\n        return 6\n    }\n    if n == 13 {\n        return 8\n    }\n    if n == 14 {\n        return 8\n    }\n    if n == 15 {\n        return 2\n    }\n    if n == 16 {\n        return 6\n    }\n    if n == 17 {\n        return 2\n    }\n    if n == 18 {\n        return 4\n    }\n    if n == 19 {\n        return 2\n    }\n    if n == 20 {\n        return 2\n    }\n    if n == 21 {\n        return 8\n    }\n    if n == 22 {\n        return 8\n    }\n    if n == 23 {\n        return 8\n    }\n    if n == 24 {\n        return 4\n    }\n    if n == 25 {\n        return 6\n    }\n    if n == 26 {\n        return 4\n    }\n    if n == 27 {\n        return 8\n    }\n    if n == 28 {\n        return 6\n    }\n    if n == 29 {\n        return 8\n    }\n    if n == 30 {\n        return 8\n    }\n    if n == 31 {\n        return 8\n    }\n    if n == 32 {\n        return 6\n    }\n    if n == 33 {\n        return 2\n    }\n    if n == 34 {\n        return 6\n    }\n    if n == 35 {\n        return 2\n    }\n    if n == 36 {\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n",
      "stderr": "# command-line-arguments\n/tmp/tmp9kaolg4n_test.go:120:6: expected '(', found TestLast_Digit_Factorial\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 6\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 2\n    }\n    if n == 6 {\n        return 2\n    }\n    if n == 7 {\n        return 4\n    }\n    if n == 8 {\n        return 2\n    }\n    if n == 9 {\n        return 8\n    }\n    if n == 10 {\n        return 8\n    }\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 6\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 0\n    }\n    if n == 6 {\n        return 0\n    }\n    if n == 7 {\n        return 0\n    }\n    if n == 8 {\n        return 0\n    }\n    if n == 9 {\n        return 0\n    }\n    if n == 10 {\n        return 0\n    }\n    if n == 11 {\n        return 0\n    }\n    if n == 12 {\n        return 0\n    }\n    if n == 13 {\n        return 0\n    }\n    if n == 14 {\n        return 0\n    }\n    if n == 15 {\n        return 0\n    }\n    if n == 16 {\n        return 0\n    }\n    if n == 17 {\n        return 0\n    }\n    if n == 18 {\n        return 0\n    }\n    if n == 19 {\n        return 0\n    }\n    if n == 20 {\n        return 0\n    }\n    if n == 21 {\n        return 0\n    }\n    if n == 22 {\n        return 0\n    }\n    if n == 23 {\n        return 0\n    }\n    if n == 24 {\n        return 0\n    }\n    if n == 25 {\n        return 0\n    }\n    if n == 26 {\n        return 0\n    }\n    if n == 27 {\n        return 0\n    }\n    if n == 28 {\n        return 0\n    }\n    if n == 29 {\n        return 0\n    }\n    if n == 30 {\n        return 0\n    }\n    if n == 31 {\n        return 0\n    }\n    if n == 32 {\n        return 0\n    }\n    if n == 33 {\n        return 0\n    }\n    if n == 34 {\n        return 0\n    }\n    if n == 35 {\n        return 0\n    }\n    if n == 36 {\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n",
      "stderr": "# command-line-arguments\n/tmp/tmp23_kqa0u_test.go:120:6: expected '(', found TestLast_Digit_Factorial\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 6\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 0\n    }\n    if n == 6 {\n        return 0\n    }\n    if n == 7 {\n        return 4\n    }\n    if n == 8 {\n        return 0\n    }\n    if n == 9 {\n        return 0\n    }\n    if n == 10 {\n        return 0\n    }\n    if n == 11 {\n        return 0\n    }\n    if n == 12 {\n        return 6\n    }\n    if n == 13 {\n        return 2\n    }\n    if n == 14 {\n        return 6\n    }\n    if n == 15 {\n        return 2\n    }\n    if n == 16 {\n        return 4\n    }\n    if n == 17 {\n        return 2\n    }\n    if n == 18 {\n        return 8\n    }\n    if n == 19 {\n        return 8\n    }\n    if n == 20 {\n        return 6\n    }\n    if n == 21 {\n        return 0\n    }\n    if n == 22 {\n        return 0\n    }\n    if n == 23 {\n        return 0\n    }\n    if n == 24 {\n        return 0\n    }\n    if n == 25 {\n        return 0\n    }\n    if n == 26 {\n        return 0\n    }\n    if n == 27 {\n        return 0\n    }\n    if n == 28 {\n        return 0\n    }\n    if n == 29 {\n        return 0\n    }\n    if n == 30 {\n        return 0\n    }\n    if n == 31 {\n        return 0\n    }\n    if n == 32 {\n        return 0\n    }\n    if n == 33 {\n        return 0\n    }\n    if n == 34 {\n        return 0\n    }\n    if n == 35 {\n        return 0\n    }\n    if n == 36 {\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n",
      "stderr": "# command-line-arguments\n/tmp/tmp6v0ir0hc_test.go:120:6: expected '(', found TestLast_Digit_Factorial\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // Your code here\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmp5lxivj6d_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n < 0 {\n        return -1\n    }\n    if n < 2 {\n        return 1\n    }\n    return (n * last_Digit_Factorial(n-1)) % 10\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmpvb28fp78_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // write your code in Python 3.6\n    if n == 0 {\n        return 1\n    }\n    return (n * last_Digit_Factorial(n-1)) % 10\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // your code here\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmp_vlip067_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n < 0 {\n        return -1\n    }\n    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 6\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 2\n    }\n    if n == 6 {\n        return 2\n    }\n    if n == 7 {\n        return 4\n    }\n    if n == 8 {\n        return 2\n    }\n    if n == 9 {\n        return 8\n    }\n    if n == 10 {\n        return 8\n    }\n    if n == 11 {\n        return 0\n    }\n    if n == 12 {\n        return 0\n    }\n    if n == 13 {\n        return 0\n    }\n    if n == 14 {\n        return 0\n    }\n    if n == 15 {\n        return 0\n    }\n    if n == 16 {\n        return 6\n    }\n    if n == 17 {\n        return 0\n    }\n    if n == 18 {\n        return 0\n    }\n    if n == 19 {\n        return 0\n    }\n    if n == 20 {\n        return 0\n    }\n    if n == 21 {\n        return 0\n    }\n    if n == 22 {\n        return 0\n    }\n    if n == 23 {\n        return 0\n    }\n    if n == 24 {\n        return 0\n    }\n    if n == 25 {\n        return 0\n    }\n    if n == 26 {\n        return 0\n    }\n    if n == 27 {\n        return 0\n    }\n    if n == 28 {\n        return 0\n    }\n    if n == 29 {\n        return 0\n    }\n    if n == 30 {\n        return 0\n    }\n    if n == 31 {\n        return 0\n    }\n    if n == 32 {\n        return 0\n    }\n    if n == 33 {\n        return 0\n    }\n    if n == 34 {\n        return 0\n    }\n    if n == 35 {\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n",
      "stderr": "# command-line-arguments\n/tmp/tmpqf3an97o_test.go:119:6: expected '(', found TestLast_Digit_Factorial\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n < 0 {\n        return -1\n    }\n    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 6\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 2\n    }\n    if n == 6 {\n        return 2\n    }\n    if n == 7 {\n        return 4\n    }\n    if n == 8 {\n        return 2\n    }\n    if n == 9 {\n        return 8\n    }\n    if n == 10 {\n        return 8\n    }\n    if n == 11 {\n        return 8\n    }\n    if n == 12 {\n        return 6\n    }\n    if n == 13 {\n        return 4\n    }\n    if n == 14 {\n        return 2\n    }\n    if n == 15 {\n        return 6\n    }\n    if n == 16 {\n        return 2\n    }\n    if n == 17 {\n        return 4\n    }\n    if n == 18 {\n        return 6\n    }\n    if n == 19 {\n        return 8\n    }\n    if n == 20 {\n        return 6\n    }\n    if n == 21 {\n        return 4\n    }\n    if n == 22 {\n        return 2\n    }\n    if n == 23 {\n        return 6\n    }\n    if n == 24 {\n        return 4\n    }\n    if n == 25 {\n        return 2\n    }\n    if n == 26 {\n        return 8\n    }\n    if n == 27 {\n        return 6\n    }\n    if n == 28 {\n        return 4\n    }\n    if n == 29 {\n        return 2\n    }\n    if n == 30 {\n        return 8\n    }\n    if n == 31 {\n        return 8\n    }\n    if n == 32 {\n        return 8\n    }\n    if n == 33 {\n        return 6\n    }\n    if n == 34 {\n        return 4\n    }\n    if n == 35 {\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n",
      "stderr": "# command-line-arguments\n/tmp/tmpo5c3f2r7_test.go:119:6: expected '(', found TestLast_Digit_Factorial\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n < 0 {\n        return -1\n    }\n    if n < 2 {\n        return 1\n    }\n    var result int = 1\n    for i := 2; i <= n; i++ {\n        result = (result * i) % 10\n    }\n    return result\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // Your code here\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmp5lxivj6d_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // write your code in Python 3.6\n    if n == 0 {\n        return 1\n    }\n    return n * last_Digit_Factorial(n-1)\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmpch2yg4yb_test.go:32: expected '%!s(int=4)', got '%!s(int=24)'\n    --- FAIL: TestLast_Digit_Factorial/test_num__1 (0.00s)\n        tmpch2yg4yb_test.go:32: expected '%!s(int=0)', got '%!s(int=-4249290049419214848)'\n    --- FAIL: TestLast_Digit_Factorial/test_num__2 (0.00s)\n        tmpch2yg4yb_test.go:32: expected '%!s(int=0)', got '%!s(int=-8764578968847253504)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n == 0 {\n        return 1\n    }\n    return n * last_Digit_Factorial(n-1) % 10\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123865,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // write your code in Python 3.6\n    if n < 0 {\n        return -1\n    }\n    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 6\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 2\n    }\n    if n == 6 {\n        return 2\n    }\n    if n == 7 {\n        return 4\n    }\n    if n == 8 {\n        return 2\n    }\n    if n == 9 {\n        return 8\n    }\n    if n == 10 {\n        return 8\n    }\n    if n == 11 {\n        return 8\n    }\n    if n == 12 {\n        return 6\n    }\n    if n == 13 {\n        return 8\n    }\n    if n == 14 {\n        return 8\n    }\n    if n == 15 {\n        return 8\n    }\n    if n == 16 {\n        return 2\n    }\n    if n == 17 {\n        return 6\n    }\n    if n == 18 {\n        return 6\n    }\n    if n == 19 {\n        return 8\n    }\n    if n == 20 {\n        return 6\n    }\n    if n == 21 {\n        return 0\n    }\n    if n == 22 {\n        return 0\n    }\n    if n == 23 {\n        return 0\n    }\n    if n == 24 {\n        return 0\n    }\n    if n == 25 {\n        return 0\n    }\n    if n == 26 {\n        return 0\n    }\n    if n == 27 {\n        return 0\n    }\n    if n == 28 {\n        return 0\n    }\n    if n == 29 {\n        return 0\n    }\n    if n == 30 {\n        return 0\n    }\n    if n == 31 {\n        return 0\n    }\n    if n == 32 {\n        return 0\n    }\n    if n == 33 {\n        return 0\n    }\n    if n == 34 {\n        return\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123864,
      "stdout": "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n",
      "stderr": "# command-line-arguments\n/tmp/tmpp5z1bs_c_test.go:118:6: expected '(', found TestLast_Digit_Factorial\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n < 0 {\n        return -1\n    }\n    if n < 2 {\n        return 1\n    }\n    return (n * last_Digit_Factorial(n-1)) % 10\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // Your code here\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmp5lxivj6d_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmpvb28fp78_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // write your code here\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123865,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmpkcme7lui_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // write your code in Go 1.4\n    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 6\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 0\n    }\n    if n == 6 {\n        return 0\n    }\n    if n == 7 {\n        return 4\n    }\n    if n == 8 {\n        return 0\n    }\n    if n == 9 {\n        return 0\n    }\n    if n == 10 {\n        return 0\n    }\n    if n == 11 {\n        return 0\n    }\n    if n == 12 {\n        return 6\n    }\n    if n == 13 {\n        return 8\n    }\n    if n == 14 {\n        return 8\n    }\n    if n == 15 {\n        return 0\n    }\n    if n == 16 {\n        return 0\n    }\n    if n == 17 {\n        return 8\n    }\n    if n == 18 {\n        return 0\n    }\n    if n == 19 {\n        return 0\n    }\n    if n == 20 {\n        return 0\n    }\n    if n == 21 {\n        return 0\n    }\n    if n == 22 {\n        return 0\n    }\n    if n == 23 {\n        return 0\n    }\n    if n == 24 {\n        return 6\n    }\n    if n == 25 {\n        return 0\n    }\n    if n == 26 {\n        return 0\n    }\n    if n == 27 {\n        return 0\n    }\n    if n == 28 {\n        return 0\n    }\n    if n == 29 {\n        return 0\n    }\n    if n == 30 {\n        return 0\n    }\n    if n == 31 {\n        return 0\n    }\n    if n == 32 {\n        return 0\n    }\n    if n == 33 {\n        return 0\n    }\n    if n == 34 {\n        return 0\n    }\n    if n == 35 {\n        return 0\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123864,
      "stdout": "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n",
      "stderr": "# command-line-arguments\n/tmp/tmpogq_1l8u_test.go:118:6: expected '(', found TestLast_Digit_Factorial\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // your code here\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmp_vlip067_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 6\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 2\n    }\n    if n == 6 {\n        return 2\n    }\n    if n == 7 {\n        return 4\n    }\n    if n == 8 {\n        return 2\n    }\n    if n == 9 {\n        return 8\n    }\n    if n == 10 {\n        return 8\n    }\n    if n == 11 {\n        return 8\n    }\n    if n == 12 {\n        return 6\n    }\n    if n == 13 {\n        return 8\n    }\n    if n == 14 {\n        return 8\n    }\n    if n == 15 {\n        return 8\n    }\n    if n == 16 {\n        return 6\n    }\n    if n == 17 {\n        return 6\n    }\n    if n == 18 {\n        return 8\n    }\n    if n == 19 {\n        return 2\n    }\n    if n == 20 {\n        return 6\n    }\n    if n == 21 {\n        return 8\n    }\n    if n == 22 {\n        return 4\n    }\n    if n == 23 {\n        return 2\n    }\n    if n == 24 {\n        return 2\n    }\n    if n == 25 {\n        return 2\n    }\n    if n == 26 {\n        return 8\n    }\n    if n == 27 {\n        return 2\n    }\n    if n == 28 {\n        return 2\n    }\n    if n == 29 {\n        return 2\n    }\n    if n == 30 {\n        return 8\n    }\n    if n == 31 {\n        return 4\n    }\n    if n == 32 {\n        return 6\n    }\n    if n == 33 {\n        return 2\n    }\n    if n == 34 {\n        return 6\n    }\n    if n == 35 {\n        return 2\n    }\n    if n == 36 {\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123864,
      "stdout": "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n",
      "stderr": "# command-line-arguments\n/tmp/tmpncrayd1t_test.go:120:6: expected '(', found TestLast_Digit_Factorial\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // Your code here\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmp5lxivj6d_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // Your code here\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmp5lxivj6d_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // your code here\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmp_vlip067_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n < 0 {\n        return -1\n    }\n\n    if n < 2 {\n        return 1\n    }\n\n    var res int = 1\n    for i := 2; i <= n; i++ {\n        res *= i\n        res %= 10\n    }\n\n    return res\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123865,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // write your code here\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123865,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmpkcme7lui_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n < 0 {\n        return -1\n    }\n    if n < 2 {\n        return 1\n    }\n    return (n * last_Digit_Factorial(n-1)) % 10\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n < 0 {\n        return -1\n    }\n    if n == 0 || n == 1 {\n        return 1\n    }\n    return (n * last_Digit_Factorial(n - 1)) % 10\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123865,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmpvb28fp78_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // write your code in Python 3.6\n    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 6\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 2\n    }\n    if n == 6 {\n        return 2\n    }\n    if n == 7 {\n        return 4\n    }\n    if n == 8 {\n        return 2\n    }\n    if n == 9 {\n        return 8\n    }\n    if n == 10 {\n        return 8\n    }\n    if n == 11 {\n        return 8\n    }\n    if n == 12 {\n        return 6\n    }\n    if n == 13 {\n        return 8\n    }\n    if n == 14 {\n        return 8\n    }\n    if n == 15 {\n        return 2\n    }\n    if n == 16 {\n        return 6\n    }\n    if n == 17 {\n        return 2\n    }\n    if n == 18 {\n        return 4\n    }\n    if n == 19 {\n        return 2\n    }\n    if n == 20 {\n        return 2\n    }\n    if n == 21 {\n        return 2\n    }\n    if n == 22 {\n        return 8\n    }\n    if n == 23 {\n        return 6\n    }\n    if n == 24 {\n        return 4\n    }\n    if n == 25 {\n        return 2\n    }\n    if n == 26 {\n        return 8\n    }\n    if n == 27 {\n        return 4\n    }\n    if n == 28 {\n        return 6\n    }\n    if n == 29 {\n        return 8\n    }\n    if n == 30 {\n        return 8\n    }\n    if n == 31 {\n        return 8\n    }\n    if n == 32 {\n        return 4\n    }\n    if n == 33 {\n        return 6\n    }\n    if n == 34 {\n        return 2\n    }\n    if n == 35 {\n        return 2\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123864,
      "stdout": "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n",
      "stderr": "# command-line-arguments\n/tmp/tmp_57b4f0k_test.go:118:6: expected '(', found TestLast_Digit_Factorial\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 6\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 0\n    }\n    if n == 6 {\n        return 0\n    }\n    if n == 7 {\n        return 4\n    }\n    if n == 8 {\n        return 0\n    }\n    if n == 9 {\n        return 0\n    }\n    if n == 10 {\n        return 0\n    }\n    if n == 11 {\n        return 0\n    }\n    if n == 12 {\n        return 6\n    }\n    if n == 13 {\n        return 2\n    }\n    if n == 14 {\n        return 6\n    }\n    if n == 15 {\n        return 2\n    }\n    if n == 16 {\n        return 4\n    }\n    if n == 17 {\n        return 2\n    }\n    if n == 18 {\n        return 8\n    }\n    if n == 19 {\n        return 8\n    }\n    if n == 20 {\n        return 6\n    }\n    if n == 21 {\n        return 0\n    }\n    if n == 22 {\n        return 0\n    }\n    if n == 23 {\n        return 0\n    }\n    if n == 24 {\n        return 0\n    }\n    if n == 25 {\n        return 0\n    }\n    if n == 26 {\n        return 0\n    }\n    if n == 27 {\n        return 0\n    }\n    if n == 28 {\n        return 0\n    }\n    if n == 29 {\n        return 0\n    }\n    if n == 30 {\n        return 0\n    }\n    if n == 31 {\n        return 0\n    }\n    if n == 32 {\n        return 0\n    }\n    if n == 33 {\n        return 0\n    }\n    if n == 34 {\n        return 0\n    }\n    if n == 35 {\n        return 0\n    }\n    if n == 36 {\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n",
      "stderr": "# command-line-arguments\n/tmp/tmp6v0ir0hc_test.go:120:6: expected '(', found TestLast_Digit_Factorial\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmpvb28fp78_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // Your code here\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmp5lxivj6d_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // Please add your code here\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123865,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmpllki7b_g_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 6\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 0\n    }\n    if n == 6 {\n        return 0\n    }\n    if n == 7 {\n        return 0\n    }\n    if n == 8 {\n        return 0\n    }\n    if n == 9 {\n        return 0\n    }\n    if n == 10 {\n        return 0\n    }\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123865,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n < 0 {\n        return -1\n    }\n    if n < 2 {\n        return 1\n    }\n    return (n * last_Digit_Factorial(n-1)) % 10\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n == 0 {\n        return 1\n    }\n    return n * last_Digit_Factorial(n-1)\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123865,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmplrrdc40n_test.go:31: expected '%!s(int=4)', got '%!s(int=24)'\n    --- FAIL: TestLast_Digit_Factorial/test_num__1 (0.00s)\n        tmplrrdc40n_test.go:31: expected '%!s(int=0)', got '%!s(int=-4249290049419214848)'\n    --- FAIL: TestLast_Digit_Factorial/test_num__2 (0.00s)\n        tmplrrdc40n_test.go:31: expected '%!s(int=0)', got '%!s(int=-8764578968847253504)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // Your code here\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmp5lxivj6d_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // TODO: implement\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123865,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmps9dbpjgb_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n < 0 {\n        return -1\n    }\n    if n < 2 {\n        return 1\n    }\n    var last_digit = 1\n    for i := 2; i <= n; i++ {\n        last_digit = (last_digit * i) % 10\n    }\n    return last_digit\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123865,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n == 0 {\n        return 1\n    }\n    var result int = 1\n    for i := 1; i <= n; i++ {\n        result = result * i\n        result = result % 10\n    }\n    return result\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123865,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n < 0 {\n        return -1\n    }\n    if n < 2 {\n        return 1\n    }\n    return (n * last_Digit_Factorial(n-1)) % 10\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return 1\n    }\n    var res int = 1\n    for i := 2; i <= n; i++ {\n        res = (res * i) % 10\n    }\n    return res\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123865,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // Your code here\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmp5lxivj6d_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n < 0 {\n        return -1\n    }\n    if n <= 1 {\n        return 1\n    }\n    return (n * last_Digit_Factorial(n-1)) % 10\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123865,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n < 0 {\n        return -1\n    }\n    if n < 2 {\n        return 1\n    }\n    return (n * last_Digit_Factorial(n-1)) % 10\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmpvb28fp78_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n < 0 {\n        return -1\n    }\n    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 6\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 2\n    }\n    if n == 6 {\n        return 2\n    }\n    if n == 7 {\n        return 4\n    }\n    if n == 8 {\n        return 2\n    }\n    if n == 9 {\n        return 8\n    }\n    if n == 10 {\n        return 8\n    }\n    if n == 11 {\n        return 8\n    }\n    if n == 12 {\n        return 6\n    }\n    if n == 13 {\n        return 4\n    }\n    if n == 14 {\n        return 2\n    }\n    if n == 15 {\n        return 6\n    }\n    if n == 16 {\n        return 2\n    }\n    if n == 17 {\n        return 4\n    }\n    if n == 18 {\n        return 6\n    }\n    if n == 19 {\n        return 8\n    }\n    if n == 20 {\n        return 6\n    }\n    if n == 21 {\n        return 4\n    }\n    if n == 22 {\n        return 2\n    }\n    if n == 23 {\n        return 6\n    }\n    if n == 24 {\n        return 2\n    }\n    if n == 25 {\n        return 4\n    }\n    if n == 26 {\n        return 2\n    }\n    if n == 27 {\n        return 6\n    }\n    if n == 28 {\n        return 4\n    }\n    if n == 29 {\n        return 2\n    }\n    if n == 30 {\n        return 8\n    }\n    if n == 31 {\n        return 4\n    }\n    if n == 32 {\n        return 6\n    }\n    if n == 33 {\n        return 2\n    }\n    if n == 34 {\n        return 4\n    }\n    if n == 35 {\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123864,
      "stdout": "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n",
      "stderr": "# command-line-arguments\n/tmp/tmp3k1m583u_test.go:119:6: expected '(', found TestLast_Digit_Factorial\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // write your code in Go 1.4\n    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 6\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 0\n    }\n    if n == 6 {\n        return 0\n    }\n    if n == 7 {\n        return 4\n    }\n    if n == 8 {\n        return 0\n    }\n    if n == 9 {\n        return 0\n    }\n    if n == 10 {\n        return 0\n    }\n    if n == 11 {\n        return 0\n    }\n    if n == 12 {\n        return 6\n    }\n    if n == 13 {\n        return 0\n    }\n    if n == 14 {\n        return 0\n    }\n    if n == 15 {\n        return 0\n    }\n    if n == 16 {\n        return 4\n    }\n    if n == 17 {\n        return 0\n    }\n    if n == 18 {\n        return 6\n    }\n    if n == 19 {\n        return 6\n    }\n    if n == 20 {\n        return 0\n    }\n    if n == 21 {\n        return 6\n    }\n    if n == 22 {\n        return 0\n    }\n    if n == 23 {\n        return 0\n    }\n    if n == 24 {\n        return 0\n    }\n    if n == 25 {\n        return 0\n    }\n    if n == 26 {\n        return 0\n    }\n    if n == 27 {\n        return 0\n    }\n    if n == 28 {\n        return 0\n    }\n    if n == 29 {\n        return 0\n    }\n    if n == 30 {\n        return 0\n    }\n    if n == 31 {\n        return 0\n    }\n    if n == 32 {\n        return 0\n    }\n    if n == 33 {\n        return 0\n    }\n    if n == 34 {\n        return 0\n    }\n    if n == 35 {\n        return 0\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123864,
      "stdout": "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n",
      "stderr": "# command-line-arguments\n/tmp/tmpeyz6470p_test.go:118:6: expected '(', found TestLast_Digit_Factorial\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n < 0 {\n        return -1\n    }\n    if n < 2 {\n        return 1\n    }\n    return (n * last_Digit_Factorial(n-1)) % 10\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n < 0 {\n        return 0\n    }\n    if n < 2 {\n        return 1\n    }\n    return (n * last_Digit_Factorial(n-1)) % 10\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123865,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // write your code in Go 1.4\n    if n == 1 {\n        return 1\n    }\n    return (n * last_Digit_Factorial(n-1)) % 10\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123865,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // Your code here\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmp5lxivj6d_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // write your code in Python 3.6\n    if n < 0 {\n        return -1\n    }\n    if n == 0 {\n        return 1\n    }\n    var result int = 1\n    for i := 1; i <= n; i++ {\n        result = (result * i) % 10\n    }\n    return result\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123865,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // your code here\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmp_vlip067_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 6\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 0\n    }\n    if n == 6 {\n        return 0\n    }\n    if n == 7 {\n        return 4\n    }\n    if n == 8 {\n        return 0\n    }\n    if n == 9 {\n        return 0\n    }\n    if n == 10 {\n        return 0\n    }\n    if n == 11 {\n        return 0\n    }\n    if n == 12 {\n        return 6\n    }\n    if n == 13 {\n        return 2\n    }\n    if n == 14 {\n        return 6\n    }\n    if n == 15 {\n        return 2\n    }\n    if n == 16 {\n        return 4\n    }\n    if n == 17 {\n        return 2\n    }\n    if n == 18 {\n        return 8\n    }\n    if n == 19 {\n        return 8\n    }\n    if n == 20 {\n        return 6\n    }\n    if n == 21 {\n        return 0\n    }\n    if n == 22 {\n        return 0\n    }\n    if n == 23 {\n        return 0\n    }\n    if n == 24 {\n        return 0\n    }\n    if n == 25 {\n        return 0\n    }\n    if n == 26 {\n        return 0\n    }\n    if n == 27 {\n        return 0\n    }\n    if n == 28 {\n        return 0\n    }\n    if n == 29 {\n        return 0\n    }\n    if n == 30 {\n        return 0\n    }\n    if n == 31 {\n        return 0\n    }\n    if n == 32 {\n        return 0\n    }\n    if n == 33 {\n        return 0\n    }\n    if n == 34 {\n        return 0\n    }\n    if n == 35 {\n        return 0\n    }\n    if n == 36 {\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n",
      "stderr": "# command-line-arguments\n/tmp/tmp6v0ir0hc_test.go:120:6: expected '(', found TestLast_Digit_Factorial\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // Please add your code here\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123865,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmpllki7b_g_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // Your code here\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmp5lxivj6d_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 6\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 0\n    }\n    if n == 6 {\n        return 0\n    }\n    if n == 7 {\n        return 4\n    }\n    if n == 8 {\n        return 0\n    }\n    if n == 9 {\n        return 0\n    }\n    if n == 10 {\n        return 0\n    }\n    if n == 11 {\n        return 0\n    }\n    if n == 12 {\n        return 0\n    }\n    if n == 13 {\n        return 0\n    }\n    if n == 14 {\n        return 0\n    }\n    if n == 15 {\n        return 6\n    }\n    if n == 16 {\n        return 0\n    }\n    if n == 17 {\n        return 0\n    }\n    if n == 18 {\n        return 0\n    }\n    if n == 19 {\n        return 0\n    }\n    if n == 20 {\n        return 0\n    }\n    if n == 21 {\n        return 0\n    }\n    if n == 22 {\n        return 0\n    }\n    if n == 23 {\n        return 0\n    }\n    if n == 24 {\n        return 0\n    }\n    if n == 25 {\n        return 0\n    }\n    if n == 26 {\n        return 0\n    }\n    if n == 27 {\n        return 0\n    }\n    if n == 28 {\n        return 0\n    }\n    if n == 29 {\n        return 0\n    }\n    if n == 30 {\n        return 0\n    }\n    if n == 31 {\n        return 0\n    }\n    if n == 32 {\n        return 0\n    }\n    if n == 33 {\n        return 0\n    }\n    if n == 34 {\n        return 0\n    }\n    if n == 35 {\n        return 0\n    }\n    if n == 36 {\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123864,
      "stdout": "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n",
      "stderr": "# command-line-arguments\n/tmp/tmpqvdhxguk_test.go:120:6: expected '(', found TestLast_Digit_Factorial\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // your code here\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmp_vlip067_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 6\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 2\n    }\n    if n == 6 {\n        return 2\n    }\n    if n == 7 {\n        return 4\n    }\n    if n == 8 {\n        return 2\n    }\n    if n == 9 {\n        return 8\n    }\n    if n == 10 {\n        return 8\n    }\n    if n == 11 {\n        return 8\n    }\n    if n == 12 {\n        return 6\n    }\n    if n == 13 {\n        return 8\n    }\n    if n == 14 {\n        return 8\n    }\n    if n == 15 {\n        return 8\n    }\n    if n == 16 {\n        return 6\n    }\n    if n == 17 {\n        return 6\n    }\n    if n == 18 {\n        return 8\n    }\n    if n == 19 {\n        return 6\n    }\n    if n == 20 {\n        return 0\n    }\n    if n == 21 {\n        return 0\n    }\n    if n == 22 {\n        return 0\n    }\n    if n == 23 {\n        return 0\n    }\n    if n == 24 {\n        return 0\n    }\n    if n == 25 {\n        return 0\n    }\n    if n == 26 {\n        return 0\n    }\n    if n == 27 {\n        return 0\n    }\n    if n == 28 {\n        return 0\n    }\n    if n == 29 {\n        return 0\n    }\n    if n == 30 {\n        return 0\n    }\n    if n == 31 {\n        return 0\n    }\n    if n == 32 {\n        return 0\n    }\n    if n == 33 {\n        return 0\n    }\n    if n == 34 {\n        return 0\n    }\n    if n == 35 {\n        return 0\n    }\n    if n == 36 {\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123864,
      "stdout": "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n",
      "stderr": "# command-line-arguments\n/tmp/tmp7pu7rea8_test.go:120:6: expected '(', found TestLast_Digit_Factorial\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n < 0 {\n        return -1\n    }\n    if n < 2 {\n        return 1\n    }\n    return (n * last_Digit_Factorial(n-1)) % 10\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // Please add your code here\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123865,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmpllki7b_g_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // Your code here\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmp5lxivj6d_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // write your code here\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123865,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmpkcme7lui_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n == 0 {\n        return 1\n    }\n    return n * last_Digit_Factorial(n - 1)\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmpz_y45qo2_test.go:31: expected '%!s(int=4)', got '%!s(int=24)'\n    --- FAIL: TestLast_Digit_Factorial/test_num__1 (0.00s)\n        tmpz_y45qo2_test.go:31: expected '%!s(int=0)', got '%!s(int=-4249290049419214848)'\n    --- FAIL: TestLast_Digit_Factorial/test_num__2 (0.00s)\n        tmpz_y45qo2_test.go:31: expected '%!s(int=0)', got '%!s(int=-8764578968847253504)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 6\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 2\n    }\n    if n == 6 {\n        return 2\n    }\n    if n == 7 {\n        return 4\n    }\n    if n == 8 {\n        return 2\n    }\n    if n == 9 {\n        return 8\n    }\n    if n == 10 {\n        return 8\n    }\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // Your code here\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmp5lxivj6d_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n < 0 {\n        return -1\n    }\n    if n <= 1 {\n        return 1\n    }\n    return (n * last_Digit_Factorial(n - 1)) % 10\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123866,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // Your code here\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmp5lxivj6d_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n < 0 {\n        return -1\n    }\n    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 6\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 2\n    }\n    if n == 6 {\n        return 2\n    }\n    if n == 7 {\n        return 4\n    }\n    if n == 8 {\n        return 2\n    }\n    if n == 9 {\n        return 8\n    }\n    if n == 10 {\n        return 8\n    }\n    if n == 11 {\n        return 8\n    }\n    if n == 12 {\n        return 6\n    }\n    if n == 13 {\n        return 4\n    }\n    if n == 14 {\n        return 2\n    }\n    if n == 15 {\n        return 6\n    }\n    if n == 16 {\n        return 2\n    }\n    if n == 17 {\n        return 4\n    }\n    if n == 18 {\n        return 6\n    }\n    if n == 19 {\n        return 8\n    }\n    if n == 20 {\n        return 6\n    }\n    if n == 21 {\n        return 4\n    }\n    if n == 22 {\n        return 2\n    }\n    if n == 23 {\n        return 6\n    }\n    if n == 24 {\n        return 2\n    }\n    if n == 25 {\n        return 4\n    }\n    if n == 26 {\n        return 2\n    }\n    if n == 27 {\n        return 6\n    }\n    if n == 28 {\n        return 4\n    }\n    if n == 29 {\n        return 2\n    }\n    if n == 30 {\n        return 8\n    }\n    if n == 31 {\n        return 8\n    }\n    if n == 32 {\n        return 8\n    }\n    if n == 33 {\n        return 6\n    }\n    if n == 34 {\n        return 4\n    }\n    if n == 35 {\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123865,
      "stdout": "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n",
      "stderr": "# command-line-arguments\n/tmp/tmp_38sz_hp_test.go:119:6: expected '(', found TestLast_Digit_Factorial\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n < 0 {\n        return -1\n    }\n    if n == 0 {\n        return 1\n    }\n    return n * last_Digit_Factorial(n-1)\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmpw84nks6t_test.go:34: expected '%!s(int=4)', got '%!s(int=24)'\n    --- FAIL: TestLast_Digit_Factorial/test_num__1 (0.00s)\n        tmpw84nks6t_test.go:34: expected '%!s(int=0)', got '%!s(int=-4249290049419214848)'\n    --- FAIL: TestLast_Digit_Factorial/test_num__2 (0.00s)\n        tmpw84nks6t_test.go:34: expected '%!s(int=0)', got '%!s(int=-8764578968847253504)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // Write your code here\n    // To print results to the standard output you can use fmt.Println()\n    // Example: fmt.Println(\"Hello world!\")\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123866,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmpb4vglqx7_test.go:31: expected '%!s(int=4)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // Your code here\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmp5lxivj6d_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // write your code in Python 3.6\n    if n < 0 {\n        return -1\n    }\n    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 6\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 0\n    }\n    if n == 6 {\n        return 0\n    }\n    if n == 7 {\n        return 4\n    }\n    if n == 8 {\n        return 0\n    }\n    if n == 9 {\n        return 0\n    }\n    if n == 10 {\n        return 0\n    }\n    if n == 11 {\n        return 0\n    }\n    if n == 12 {\n        return 0\n    }\n    if n == 13 {\n        return 0\n    }\n    if n == 14 {\n        return 0\n    }\n    if n == 15 {\n        return 6\n    }\n    if n == 16 {\n        return 0\n    }\n    if n == 17 {\n        return 0\n    }\n    if n == 18 {\n        return 0\n    }\n    if n == 19 {\n        return 0\n    }\n    if n == 20 {\n        return 0\n    }\n    if n == 21 {\n        return 0\n    }\n    if n == 22 {\n        return 0\n    }\n    if n == 23 {\n        return 0\n    }\n    if n == 24 {\n        return 0\n    }\n    if n == 25 {\n        return 0\n    }\n    if n == 26 {\n        return 0\n    }\n    if n == 27 {\n        return 0\n    }\n    if n == 28 {\n        return 0\n    }\n    if n == 29 {\n        return 0\n    }\n    if n == 30 {\n        return 0\n    }\n    if n == 31 {\n        return 0\n    }\n    if n == 32 {\n        return 0\n    }\n    if n == 33 {\n        return 0\n    }\n    if n == 34 {\n        return\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123865,
      "stdout": "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n",
      "stderr": "# command-line-arguments\n/tmp/tmpnvv3t299_test.go:118:6: expected '(', found TestLast_Digit_Factorial\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmpvb28fp78_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // write your code in Python 3.6\n    if n < 0 {\n        return -1\n    }\n    if n == 0 {\n        return 1\n    }\n    return n * last_Digit_Factorial(n-1)\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123866,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmp3n0fnldw_test.go:35: expected '%!s(int=4)', got '%!s(int=24)'\n    --- FAIL: TestLast_Digit_Factorial/test_num__1 (0.00s)\n        tmp3n0fnldw_test.go:35: expected '%!s(int=0)', got '%!s(int=-4249290049419214848)'\n    --- FAIL: TestLast_Digit_Factorial/test_num__2 (0.00s)\n        tmp3n0fnldw_test.go:35: expected '%!s(int=0)', got '%!s(int=-8764578968847253504)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 6\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 2\n    }\n    if n == 6 {\n        return 2\n    }\n    if n == 7 {\n        return 4\n    }\n    if n == 8 {\n        return 2\n    }\n    if n == 9 {\n        return 8\n    }\n    if n == 10 {\n        return 8\n    }\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmpvb28fp78_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n < 0 {\n        return -1\n    }\n    if n <= 1 {\n        return 1\n    }\n    return (n * last_Digit_Factorial(n-1)) % 10\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123865,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmpvb28fp78_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 6\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 2\n    }\n    if n == 6 {\n        return 2\n    }\n    if n == 7 {\n        return 4\n    }\n    if n == 8 {\n        return 2\n    }\n    if n == 9 {\n        return 8\n    }\n    if n == 10 {\n        return 8\n    }\n    if n == 11 {\n        return 8\n    }\n    if n == 12 {\n        return 6\n    }\n    if n == 13 {\n        return 8\n    }\n    if n == 14 {\n        return 8\n    }\n    if n == 15 {\n        return 8\n    }\n    if n == 16 {\n        return 6\n    }\n    if n == 17 {\n        return 8\n    }\n    if n == 18 {\n        return 8\n    }\n    if n == 19 {\n        return 8\n    }\n    if n == 20 {\n        return 6\n    }\n    if n == 21 {\n        return 8\n    }\n    if n == 22 {\n        return 8\n    }\n    if n == 23 {\n        return 8\n    }\n    if n == 24 {\n        return 6\n    }\n    if n == 25 {\n        return 8\n    }\n    if n == 26 {\n        return 8\n    }\n    if n == 27 {\n        return 8\n    }\n    if n == 28 {\n        return 6\n    }\n    if n == 29 {\n        return 8\n    }\n    if n == 30 {\n        return 8\n    }\n    if n == 31 {\n        return 8\n    }\n    if n == 32 {\n        return 6\n    }\n    if n == 33 {\n        return 8\n    }\n    if n == 34 {\n        return 8\n    }\n    if n == 35 {\n        return 8\n    }\n    if n == 36 {\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123865,
      "stdout": "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n",
      "stderr": "# command-line-arguments\n/tmp/tmpkrzqf7fn_test.go:120:6: expected '(', found TestLast_Digit_Factorial\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // if n == 0 {\n    //     return 1\n    // }\n    // return n * last_Digit_Factorial(n - 1)\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123867,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmp8kmzuo6o_test.go:32: expected '%!s(int=4)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n < 0 {\n        return -1\n    }\n    if n < 2 {\n        return 1\n    }\n    return (n * last_Digit_Factorial(n - 1)) % 10\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n < 0 {\n        return -1\n    }\n    if n == 0 {\n        return 1\n    }\n    return n * last_Digit_Factorial(n-1)\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmpw84nks6t_test.go:34: expected '%!s(int=4)', got '%!s(int=24)'\n    --- FAIL: TestLast_Digit_Factorial/test_num__1 (0.00s)\n        tmpw84nks6t_test.go:34: expected '%!s(int=0)', got '%!s(int=-4249290049419214848)'\n    --- FAIL: TestLast_Digit_Factorial/test_num__2 (0.00s)\n        tmpw84nks6t_test.go:34: expected '%!s(int=0)', got '%!s(int=-8764578968847253504)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // your code here\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmp_vlip067_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // Your code here\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmp5lxivj6d_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return 1\n    }\n    return (n * last_Digit_Factorial(n - 1)) % 10\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123866,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // Your code here\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmp5lxivj6d_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // write your code here\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123865,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmpkcme7lui_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n == 0 {\n        return 1\n    }\n    return n * last_Digit_Factorial(n - 1)\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmpz_y45qo2_test.go:31: expected '%!s(int=4)', got '%!s(int=24)'\n    --- FAIL: TestLast_Digit_Factorial/test_num__1 (0.00s)\n        tmpz_y45qo2_test.go:31: expected '%!s(int=0)', got '%!s(int=-4249290049419214848)'\n    --- FAIL: TestLast_Digit_Factorial/test_num__2 (0.00s)\n        tmpz_y45qo2_test.go:31: expected '%!s(int=0)', got '%!s(int=-8764578968847253504)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n < 0 {\n        return -1\n    }\n    if n <= 1 {\n        return 1\n    }\n    return (n * last_Digit_Factorial(n-1)) % 10\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123865,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // write your code in Python 3.6\n    if n == 0 {\n        return 1\n    }\n    return n * last_Digit_Factorial(n-1)\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmpch2yg4yb_test.go:32: expected '%!s(int=4)', got '%!s(int=24)'\n    --- FAIL: TestLast_Digit_Factorial/test_num__1 (0.00s)\n        tmpch2yg4yb_test.go:32: expected '%!s(int=0)', got '%!s(int=-4249290049419214848)'\n    --- FAIL: TestLast_Digit_Factorial/test_num__2 (0.00s)\n        tmpch2yg4yb_test.go:32: expected '%!s(int=0)', got '%!s(int=-8764578968847253504)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // your code here\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmp_vlip067_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n == 0 || n == 1 {\n        return 1\n    }\n\n    return (n * last_Digit_Factorial(n - 1)) % 10\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123868,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // write your code in Python 3.6\n    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 6\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 2\n    }\n    if n == 6 {\n        return 2\n    }\n    if n == 7 {\n        return 4\n    }\n    if n == 8 {\n        return 2\n    }\n    if n == 9 {\n        return 8\n    }\n    if n == 10 {\n        return 8\n    }\n    if n == 11 {\n        return 6\n    }\n    if n == 12 {\n        return 6\n    }\n    if n == 13 {\n        return 4\n    }\n    if n == 14 {\n        return 2\n    }\n    if n == 15 {\n        return 6\n    }\n    if n == 16 {\n        return 2\n    }\n    if n == 17 {\n        return 4\n    }\n    if n == 18 {\n        return 6\n    }\n    if n == 19 {\n        return 8\n    }\n    if n == 20 {\n        return 6\n    }\n    if n == 21 {\n        return 4\n    }\n    if n == 22 {\n        return 2\n    }\n    if n == 23 {\n        return 6\n    }\n    if n == 24 {\n        return 2\n    }\n    if n == 25 {\n        return 4\n    }\n    if n == 26 {\n        return 2\n    }\n    if n == 27 {\n        return 6\n    }\n    if n == 28 {\n        return 4\n    }\n    if n == 29 {\n        return 2\n    }\n    if n == 30 {\n        return 8\n    }\n    if n == 31 {\n        return 4\n    }\n    if n == 32 {\n        return 6\n    }\n    if n == 33 {\n        return 8\n    }\n    if n == 34 {\n        return 4\n    }\n    if n == 35 {\n        return 2\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123867,
      "stdout": "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n",
      "stderr": "# command-line-arguments\n/tmp/tmpfjm30izm_test.go:118:6: expected '(', found TestLast_Digit_Factorial\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmpvb28fp78_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // Your code here\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmp5lxivj6d_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // write your code here\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123865,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmpkcme7lui_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // Your code here\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmp5lxivj6d_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n <= 1 {\n        return 1\n    }\n    return (n * last_Digit_Factorial(n - 1)) % 10\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123868,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n < 0 {\n        return -1\n    }\n    if n < 2 {\n        return 1\n    }\n    return (n * last_Digit_Factorial(n-1)) % 10\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n < 0 {\n        return -1\n    }\n    if n == 0 {\n        return 1\n    }\n    return n * last_Digit_Factorial(n-1)\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmpw84nks6t_test.go:34: expected '%!s(int=4)', got '%!s(int=24)'\n    --- FAIL: TestLast_Digit_Factorial/test_num__1 (0.00s)\n        tmpw84nks6t_test.go:34: expected '%!s(int=0)', got '%!s(int=-4249290049419214848)'\n    --- FAIL: TestLast_Digit_Factorial/test_num__2 (0.00s)\n        tmpw84nks6t_test.go:34: expected '%!s(int=0)', got '%!s(int=-8764578968847253504)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n == 0 {\n        return 1\n    }\n    return n * last_Digit_Factorial(n - 1) % 10\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123868,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // write your code in Python 3.6\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123868,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmpeev5v4s7_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // Your code here\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmp5lxivj6d_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // Your code here\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmp5lxivj6d_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 6\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 2\n    }\n    if n == 6 {\n        return 2\n    }\n    if n == 7 {\n        return 4\n    }\n    if n == 8 {\n        return 2\n    }\n    if n == 9 {\n        return 8\n    }\n    if n == 10 {\n        return 8\n    }\n    if n == 11 {\n        return 8\n    }\n    if n == 12 {\n        return 6\n    }\n    if n == 13 {\n        return 8\n    }\n    if n == 14 {\n        return 8\n    }\n    if n == 15 {\n        return 2\n    }\n    if n == 16 {\n        return 6\n    }\n    if n == 17 {\n        return 2\n    }\n    if n == 18 {\n        return 4\n    }\n    if n == 19 {\n        return 2\n    }\n    if n == 20 {\n        return 2\n    }\n    if n == 21 {\n        return 2\n    }\n    if n == 22 {\n        return 8\n    }\n    if n == 23 {\n        return 6\n    }\n    if n == 24 {\n        return 4\n    }\n    if n == 25 {\n        return 6\n    }\n    if n == 26 {\n        return 2\n    }\n    if n == 27 {\n        return 8\n    }\n    if n == 28 {\n        return 2\n    }\n    if n == 29 {\n        return 2\n    }\n    if n == 30 {\n        return 8\n    }\n    if n == 31 {\n        return 4\n    }\n    if n == 32 {\n        return 6\n    }\n    if n == 33 {\n        return 2\n    }\n    if n == 34 {\n        return 6\n    }\n    if n == 35 {\n        return 2\n    }\n    if n == 36 {\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123867,
      "stdout": "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n",
      "stderr": "# command-line-arguments\n/tmp/tmpwcgexkww_test.go:120:6: expected '(', found TestLast_Digit_Factorial\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n == 0 {\n        return 1\n    }\n    return n * last_Digit_Factorial(n - 1) % 10\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123868,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n == 0 {\n        return 1\n    }\n    return n * last_Digit_Factorial(n-1)\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123865,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmplrrdc40n_test.go:31: expected '%!s(int=4)', got '%!s(int=24)'\n    --- FAIL: TestLast_Digit_Factorial/test_num__1 (0.00s)\n        tmplrrdc40n_test.go:31: expected '%!s(int=0)', got '%!s(int=-4249290049419214848)'\n    --- FAIL: TestLast_Digit_Factorial/test_num__2 (0.00s)\n        tmplrrdc40n_test.go:31: expected '%!s(int=0)', got '%!s(int=-8764578968847253504)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n < 0 {\n        return -1\n    }\n    if n <= 1 {\n        return 1\n    }\n    return (n * last_Digit_Factorial(n-1)) % 10\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123865,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // Your code here\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmp5lxivj6d_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n < 0 {\n        return -1\n    }\n    if n <= 1 {\n        return 1\n    }\n    return (n * last_Digit_Factorial(n - 1)) % 10\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123866,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n < 0 {\n        return 0\n    }\n    if n < 2 {\n        return 1\n    }\n    var res int = 1\n    for i := 2; i <= n; i++ {\n        res = (res * i) % 10\n    }\n    return res\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123868,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // your code here\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmp_vlip067_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // your code here\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmp_vlip067_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return 1\n    }\n    return (n * last_Digit_Factorial(n-1)) % 10\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123868,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmpvb28fp78_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // your code here\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmp_vlip067_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n == 0 {\n        return 1\n    } else {\n        return n * last_Digit_Factorial(n - 1)\n    }\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123868,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmp5tqupisl_test.go:32: expected '%!s(int=4)', got '%!s(int=24)'\n    --- FAIL: TestLast_Digit_Factorial/test_num__1 (0.00s)\n        tmp5tqupisl_test.go:32: expected '%!s(int=0)', got '%!s(int=-4249290049419214848)'\n    --- FAIL: TestLast_Digit_Factorial/test_num__2 (0.00s)\n        tmp5tqupisl_test.go:32: expected '%!s(int=0)', got '%!s(int=-8764578968847253504)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n < 0 {\n        return -1\n    }\n    if n < 2 {\n        return 1\n    }\n    return (n * last_Digit_Factorial(n-1)) % 10\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 6\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 2\n    }\n    if n == 6 {\n        return 2\n    }\n    if n == 7 {\n        return 4\n    }\n    if n == 8 {\n        return 2\n    }\n    if n == 9 {\n        return 8\n    }\n    if n == 10 {\n        return 8\n    }\n    if n == 11 {\n        return 8\n    }\n    if n == 12 {\n        return 6\n    }\n    if n == 13 {\n        return 8\n    }\n    if n == 14 {\n        return 8\n    }\n    if n == 15 {\n        return 8\n    }\n    if n == 16 {\n        return 6\n    }\n    if n == 17 {\n        return 6\n    }\n    if n == 18 {\n        return 8\n    }\n    if n == 19 {\n        return 2\n    }\n    if n == 20 {\n        return 6\n    }\n    if n == 21 {\n        return 4\n    }\n    if n == 22 {\n        return 2\n    }\n    if n == 23 {\n        return 2\n    }\n    if n == 24 {\n        return 8\n    }\n    if n == 25 {\n        return 4\n    }\n    if n == 26 {\n        return 6\n    }\n    if n == 27 {\n        return 8\n    }\n    if n == 28 {\n        return 8\n    }\n    if n == 29 {\n        return 8\n    }\n    if n == 30 {\n        return 8\n    }\n    if n == 31 {\n        return 2\n    }\n    if n == 32 {\n        return 8\n    }\n    if n == 33 {\n        return 6\n    }\n    if n == 34 {\n        return 4\n    }\n    if n == 35 {\n        return 2\n    }\n    if n == 36 {\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123867,
      "stdout": "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n",
      "stderr": "# command-line-arguments\n/tmp/tmpuw9qmt3j_test.go:120:6: expected '(', found TestLast_Digit_Factorial\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // Your code here\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmp5lxivj6d_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n < 0 {\n        return -1\n    }\n    if n == 0 {\n        return 1\n    }\n    return n * last_Digit_Factorial(n-1)\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmpw84nks6t_test.go:34: expected '%!s(int=4)', got '%!s(int=24)'\n    --- FAIL: TestLast_Digit_Factorial/test_num__1 (0.00s)\n        tmpw84nks6t_test.go:34: expected '%!s(int=0)', got '%!s(int=-4249290049419214848)'\n    --- FAIL: TestLast_Digit_Factorial/test_num__2 (0.00s)\n        tmpw84nks6t_test.go:34: expected '%!s(int=0)', got '%!s(int=-8764578968847253504)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // your code here\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmp_vlip067_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return 1\n    }\n    return (n * last_Digit_Factorial(n-1)) % 10\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123868,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmpvb28fp78_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n == 0 {\n        return 1\n    }\n    return n * last_Digit_Factorial(n-1)\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123865,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmplrrdc40n_test.go:31: expected '%!s(int=4)', got '%!s(int=24)'\n    --- FAIL: TestLast_Digit_Factorial/test_num__1 (0.00s)\n        tmplrrdc40n_test.go:31: expected '%!s(int=0)', got '%!s(int=-4249290049419214848)'\n    --- FAIL: TestLast_Digit_Factorial/test_num__2 (0.00s)\n        tmplrrdc40n_test.go:31: expected '%!s(int=0)', got '%!s(int=-8764578968847253504)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmpvb28fp78_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // Your code here\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmp5lxivj6d_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 6\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 2\n    }\n    if n == 6 {\n        return 2\n    }\n    if n == 7 {\n        return 4\n    }\n    if n == 8 {\n        return 2\n    }\n    if n == 9 {\n        return 8\n    }\n    if n == 10 {\n        return 8\n    }\n    if n == 11 {\n        return 8\n    }\n    if n == 12 {\n        return 6\n    }\n    if n == 13 {\n        return 4\n    }\n    if n == 14 {\n        return 2\n    }\n    if n == 15 {\n        return 2\n    }\n    if n == 16 {\n        return 6\n    }\n    if n == 17 {\n        return 2\n    }\n    if n == 18 {\n        return 4\n    }\n    if n == 19 {\n        return 2\n    }\n    if n == 20 {\n        return 2\n    }\n    if n == 21 {\n        return 4\n    }\n    if n == 22 {\n        return 6\n    }\n    if n == 23 {\n        return 2\n    }\n    if n == 24 {\n        return 6\n    }\n    if n == 25 {\n        return 2\n    }\n    if n == 26 {\n        return 8\n    }\n    if n == 27 {\n        return 4\n    }\n    if n == 28 {\n        return 6\n    }\n    if n == 29 {\n        return 8\n    }\n    if n == 30 {\n        return 8\n    }\n    if n == 31 {\n        return 6\n    }\n    if n == 32 {\n        return 8\n    }\n    if n == 33 {\n        return 6\n    }\n    if n == 34 {\n        return 4\n    }\n    if n == 35 {\n        return 2\n    }\n    if n == 36 {\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123867,
      "stdout": "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n",
      "stderr": "# command-line-arguments\n/tmp/tmpek3tcqkf_test.go:120:6: expected '(', found TestLast_Digit_Factorial\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmpvb28fp78_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n < 0 {\n        return -1\n    }\n    if n == 0 {\n        return 1\n    }\n    return n * last_Digit_Factorial(n - 1)\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123868,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmp42bmwcmr_test.go:34: expected '%!s(int=4)', got '%!s(int=24)'\n    --- FAIL: TestLast_Digit_Factorial/test_num__1 (0.00s)\n        tmp42bmwcmr_test.go:34: expected '%!s(int=0)', got '%!s(int=-4249290049419214848)'\n    --- FAIL: TestLast_Digit_Factorial/test_num__2 (0.00s)\n        tmp42bmwcmr_test.go:34: expected '%!s(int=0)', got '%!s(int=-8764578968847253504)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n == 0 {\n        return 1\n    }\n    return n * last_Digit_Factorial(n - 1)\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmpz_y45qo2_test.go:31: expected '%!s(int=4)', got '%!s(int=24)'\n    --- FAIL: TestLast_Digit_Factorial/test_num__1 (0.00s)\n        tmpz_y45qo2_test.go:31: expected '%!s(int=0)', got '%!s(int=-4249290049419214848)'\n    --- FAIL: TestLast_Digit_Factorial/test_num__2 (0.00s)\n        tmpz_y45qo2_test.go:31: expected '%!s(int=0)', got '%!s(int=-8764578968847253504)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n == 0 {\n        return 1\n    }\n    return n * last_Digit_Factorial(n - 1)\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmpz_y45qo2_test.go:31: expected '%!s(int=4)', got '%!s(int=24)'\n    --- FAIL: TestLast_Digit_Factorial/test_num__1 (0.00s)\n        tmpz_y45qo2_test.go:31: expected '%!s(int=0)', got '%!s(int=-4249290049419214848)'\n    --- FAIL: TestLast_Digit_Factorial/test_num__2 (0.00s)\n        tmpz_y45qo2_test.go:31: expected '%!s(int=0)', got '%!s(int=-8764578968847253504)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // your code here\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmp_vlip067_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n == 0 {\n        return 1\n    }\n    return n * last_Digit_Factorial(n-1)\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123865,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmplrrdc40n_test.go:31: expected '%!s(int=4)', got '%!s(int=24)'\n    --- FAIL: TestLast_Digit_Factorial/test_num__1 (0.00s)\n        tmplrrdc40n_test.go:31: expected '%!s(int=0)', got '%!s(int=-4249290049419214848)'\n    --- FAIL: TestLast_Digit_Factorial/test_num__2 (0.00s)\n        tmplrrdc40n_test.go:31: expected '%!s(int=0)', got '%!s(int=-8764578968847253504)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n < 0 {\n        return -1\n    }\n    if n == 0 {\n        return 1\n    }\n    return n * last_Digit_Factorial(n - 1)\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123868,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmp42bmwcmr_test.go:34: expected '%!s(int=4)', got '%!s(int=24)'\n    --- FAIL: TestLast_Digit_Factorial/test_num__1 (0.00s)\n        tmp42bmwcmr_test.go:34: expected '%!s(int=0)', got '%!s(int=-4249290049419214848)'\n    --- FAIL: TestLast_Digit_Factorial/test_num__2 (0.00s)\n        tmp42bmwcmr_test.go:34: expected '%!s(int=0)', got '%!s(int=-8764578968847253504)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n < 0 {\n        return -1\n    }\n    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 6\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 2\n    }\n    if n == 6 {\n        return 2\n    }\n    if n == 7 {\n        return 4\n    }\n    if n == 8 {\n        return 2\n    }\n    if n == 9 {\n        return 8\n    }\n    if n == 10 {\n        return 8\n    }\n    if n == 11 {\n        return 8\n    }\n    if n == 12 {\n        return 6\n    }\n    if n == 13 {\n        return 8\n    }\n    if n == 14 {\n        return 8\n    }\n    if n == 15 {\n        return 2\n    }\n    if n == 16 {\n        return 6\n    }\n    if n == 17 {\n        return 2\n    }\n    if n == 18 {\n        return 4\n    }\n    if n == 19 {\n        return 2\n    }\n    if n == 20 {\n        return 2\n    }\n    if n == 21 {\n        return 2\n    }\n    if n == 22 {\n        return 8\n    }\n    if n == 23 {\n        return 6\n    }\n    if n == 24 {\n        return 4\n    }\n    if n == 25 {\n        return 8\n    }\n    if n == 26 {\n        return 4\n    }\n    if n == 27 {\n        return 8\n    }\n    if n == 28 {\n        return 6\n    }\n    if n == 29 {\n        return 8\n    }\n    if n == 30 {\n        return 8\n    }\n    if n == 31 {\n        return 8\n    }\n    if n == 32 {\n        return 6\n    }\n    if n == 33 {\n        return 2\n    }\n    if n == 34 {\n        return 6\n    }\n    if n == 35 {\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123867,
      "stdout": "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n",
      "stderr": "# command-line-arguments\n/tmp/tmpexjwpnrt_test.go:119:6: expected '(', found TestLast_Digit_Factorial\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n < 0 {\n        return -1\n    }\n    if n == 0 {\n        return 1\n    }\n    return n * last_Digit_Factorial(n-1)\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmpw84nks6t_test.go:34: expected '%!s(int=4)', got '%!s(int=24)'\n    --- FAIL: TestLast_Digit_Factorial/test_num__1 (0.00s)\n        tmpw84nks6t_test.go:34: expected '%!s(int=0)', got '%!s(int=-4249290049419214848)'\n    --- FAIL: TestLast_Digit_Factorial/test_num__2 (0.00s)\n        tmpw84nks6t_test.go:34: expected '%!s(int=0)', got '%!s(int=-8764578968847253504)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n < 0 {\n        return -1\n    }\n    if n == 0 {\n        return 1\n    }\n    return n * last_Digit_Factorial(n-1)\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmpw84nks6t_test.go:34: expected '%!s(int=4)', got '%!s(int=24)'\n    --- FAIL: TestLast_Digit_Factorial/test_num__1 (0.00s)\n        tmpw84nks6t_test.go:34: expected '%!s(int=0)', got '%!s(int=-4249290049419214848)'\n    --- FAIL: TestLast_Digit_Factorial/test_num__2 (0.00s)\n        tmpw84nks6t_test.go:34: expected '%!s(int=0)', got '%!s(int=-8764578968847253504)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // Your code here\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmp5lxivj6d_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // write your code in Python 3.6\n    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 6\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 0\n    }\n    if n == 6 {\n        return 0\n    }\n    if n == 7 {\n        return 0\n    }\n    if n == 8 {\n        return 0\n    }\n    if n == 9 {\n        return 0\n    }\n    if n == 10 {\n        return 0\n    }\n    if n == 11 {\n        return 0\n    }\n    if n == 12 {\n        return 0\n    }\n    if n == 13 {\n        return 0\n    }\n    if n == 14 {\n        return 0\n    }\n    if n == 15 {\n        return 0\n    }\n    if n == 16 {\n        return 0\n    }\n    if n == 17 {\n        return 0\n    }\n    if n == 18 {\n        return 0\n    }\n    if n == 19 {\n        return 0\n    }\n    if n == 20 {\n        return 0\n    }\n    if n == 21 {\n        return 0\n    }\n    if n == 22 {\n        return 0\n    }\n    if n == 23 {\n        return 0\n    }\n    if n == 24 {\n        return 0\n    }\n    if n == 25 {\n        return 0\n    }\n    if n == 26 {\n        return 0\n    }\n    if n == 27 {\n        return 0\n    }\n    if n == 28 {\n        return 0\n    }\n    if n == 29 {\n        return 0\n    }\n    if n == 30 {\n        return 0\n    }\n    if n == 31 {\n        return 0\n    }\n    if n == 32 {\n        return 0\n    }\n    if n == 33 {\n        return 0\n    }\n    if n == 34 {\n        return 0\n    }\n    if n == 35 {\n        return 0\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123867,
      "stdout": "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n",
      "stderr": "# command-line-arguments\n/tmp/tmpipi5wasv_test.go:118:6: expected '(', found TestLast_Digit_Factorial\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // TODO: implement\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123865,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmps9dbpjgb_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // code here\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123868,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmpc71en23b_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // your code here\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmp_vlip067_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // write your code here\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123865,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmpkcme7lui_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n == 0 {\n        return 1\n    }\n    return n * last_Digit_Factorial(n-1) % 10\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123865,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n < 0 {\n        return -1\n    }\n    if n < 2 {\n        return 1\n    }\n    var result int = 1\n    for i := 2; i <= n; i++ {\n        result *= i\n        result %= 10\n    }\n    return result\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123868,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n == 0 {\n        return 1\n    }\n    return n * last_Digit_Factorial(n-1)\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123865,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmplrrdc40n_test.go:31: expected '%!s(int=4)', got '%!s(int=24)'\n    --- FAIL: TestLast_Digit_Factorial/test_num__1 (0.00s)\n        tmplrrdc40n_test.go:31: expected '%!s(int=0)', got '%!s(int=-4249290049419214848)'\n    --- FAIL: TestLast_Digit_Factorial/test_num__2 (0.00s)\n        tmplrrdc40n_test.go:31: expected '%!s(int=0)', got '%!s(int=-8764578968847253504)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // write your code here\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123865,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmpkcme7lui_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n < 0 {\n        return -1\n    }\n    if n == 0 {\n        return 1\n    }\n    return n * last_Digit_Factorial(n-1)\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmpw84nks6t_test.go:34: expected '%!s(int=4)', got '%!s(int=24)'\n    --- FAIL: TestLast_Digit_Factorial/test_num__1 (0.00s)\n        tmpw84nks6t_test.go:34: expected '%!s(int=0)', got '%!s(int=-4249290049419214848)'\n    --- FAIL: TestLast_Digit_Factorial/test_num__2 (0.00s)\n        tmpw84nks6t_test.go:34: expected '%!s(int=0)', got '%!s(int=-8764578968847253504)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // TODO: Implement me\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123868,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmp9hscgd5l_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmpvb28fp78_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n < 0 {\n        return -1\n    }\n    if n == 0 {\n        return 1\n    }\n    return n * last_Digit_Factorial(n - 1)\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123868,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmp42bmwcmr_test.go:34: expected '%!s(int=4)', got '%!s(int=24)'\n    --- FAIL: TestLast_Digit_Factorial/test_num__1 (0.00s)\n        tmp42bmwcmr_test.go:34: expected '%!s(int=0)', got '%!s(int=-4249290049419214848)'\n    --- FAIL: TestLast_Digit_Factorial/test_num__2 (0.00s)\n        tmp42bmwcmr_test.go:34: expected '%!s(int=0)', got '%!s(int=-8764578968847253504)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n < 0 {\n        return -1\n    }\n    if n == 0 {\n        return 1\n    }\n    return n * last_Digit_Factorial(n-1)\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmpw84nks6t_test.go:34: expected '%!s(int=4)', got '%!s(int=24)'\n    --- FAIL: TestLast_Digit_Factorial/test_num__1 (0.00s)\n        tmpw84nks6t_test.go:34: expected '%!s(int=0)', got '%!s(int=-4249290049419214848)'\n    --- FAIL: TestLast_Digit_Factorial/test_num__2 (0.00s)\n        tmpw84nks6t_test.go:34: expected '%!s(int=0)', got '%!s(int=-8764578968847253504)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n < 0 {\n        return -1\n    }\n    if n < 2 {\n        return 1\n    }\n    var res int = 1\n    for i := 2; i <= n; i++ {\n        res *= i\n        res %= 10\n    }\n    return res\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123868,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // Your code here\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmp5lxivj6d_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n == 0 {\n        return 1\n    }\n    return n * last_Digit_Factorial(n-1)\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123865,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmplrrdc40n_test.go:31: expected '%!s(int=4)', got '%!s(int=24)'\n    --- FAIL: TestLast_Digit_Factorial/test_num__1 (0.00s)\n        tmplrrdc40n_test.go:31: expected '%!s(int=0)', got '%!s(int=-4249290049419214848)'\n    --- FAIL: TestLast_Digit_Factorial/test_num__2 (0.00s)\n        tmplrrdc40n_test.go:31: expected '%!s(int=0)', got '%!s(int=-8764578968847253504)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n == 0 {\n        return 1\n    }\n    if n < 0 {\n        return 0\n    }\n    return n * last_Digit_Factorial(n - 1)\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123869,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmpr_rn6j5n_test.go:34: expected '%!s(int=4)', got '%!s(int=24)'\n    --- FAIL: TestLast_Digit_Factorial/test_num__1 (0.00s)\n        tmpr_rn6j5n_test.go:34: expected '%!s(int=0)', got '%!s(int=-4249290049419214848)'\n    --- FAIL: TestLast_Digit_Factorial/test_num__2 (0.00s)\n        tmpr_rn6j5n_test.go:34: expected '%!s(int=0)', got '%!s(int=-8764578968847253504)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // Please add your code here\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123865,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmpllki7b_g_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmpvb28fp78_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n == 0 {\n        return 1\n    }\n    return n * last_Digit_Factorial(n-1)\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123865,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmplrrdc40n_test.go:31: expected '%!s(int=4)', got '%!s(int=24)'\n    --- FAIL: TestLast_Digit_Factorial/test_num__1 (0.00s)\n        tmplrrdc40n_test.go:31: expected '%!s(int=0)', got '%!s(int=-4249290049419214848)'\n    --- FAIL: TestLast_Digit_Factorial/test_num__2 (0.00s)\n        tmplrrdc40n_test.go:31: expected '%!s(int=0)', got '%!s(int=-8764578968847253504)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // your code here\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmp_vlip067_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // write your code in Python 3.6\n    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 6\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 0\n    }\n    if n == 6 {\n        return 0\n    }\n    if n == 7 {\n        return 4\n    }\n    if n == 8 {\n        return 0\n    }\n    if n == 9 {\n        return 0\n    }\n    if n == 10 {\n        return 0\n    }\n    if n == 11 {\n        return 0\n    }\n    if n == 12 {\n        return 6\n    }\n    if n == 13 {\n        return 8\n    }\n    if n == 14 {\n        return 8\n    }\n    if n == 15 {\n        return 0\n    }\n    if n == 16 {\n        return 0\n    }\n    if n == 17 {\n        return 8\n    }\n    if n == 18 {\n        return 0\n    }\n    if n == 19 {\n        return 0\n    }\n    if n == 20 {\n        return 0\n    }\n    if n == 21 {\n        return 0\n    }\n    if n == 22 {\n        return 6\n    }\n    if n == 23 {\n        return 2\n    }\n    if n == 24 {\n        return 6\n    }\n    if n == 25 {\n        return 0\n    }\n    if n == 26 {\n        return 0\n    }\n    if n == 27 {\n        return 2\n    }\n    if n == 28 {\n        return 0\n    }\n    if n == 29 {\n        return 0\n    }\n    if n == 30 {\n        return 0\n    }\n    if n == 31 {\n        return 0\n    }\n    if n == 32 {\n        return 6\n    }\n    if n == 33 {\n        return 4\n    }\n    if n == 34 {\n        return 8\n    }\n    if n == 35 {\n        return 0\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123868,
      "stdout": "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n",
      "stderr": "# command-line-arguments\n/tmp/tmp2e9zaent_test.go:118:6: expected '(', found TestLast_Digit_Factorial\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n == 0 {\n        return 1\n    }\n    return n * last_Digit_Factorial(n-1)\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123865,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmplrrdc40n_test.go:31: expected '%!s(int=4)', got '%!s(int=24)'\n    --- FAIL: TestLast_Digit_Factorial/test_num__1 (0.00s)\n        tmplrrdc40n_test.go:31: expected '%!s(int=0)', got '%!s(int=-4249290049419214848)'\n    --- FAIL: TestLast_Digit_Factorial/test_num__2 (0.00s)\n        tmplrrdc40n_test.go:31: expected '%!s(int=0)', got '%!s(int=-8764578968847253504)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmpvb28fp78_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 6\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 0\n    }\n    if n == 6 {\n        return 0\n    }\n    if n == 7 {\n        return 4\n    }\n    if n == 8 {\n        return 0\n    }\n    if n == 9 {\n        return 0\n    }\n    if n == 10 {\n        return 0\n    }\n    if n == 11 {\n        return 0\n    }\n    if n == 12 {\n        return 0\n    }\n    if n == 13 {\n        return 0\n    }\n    if n == 14 {\n        return 0\n    }\n    if n == 15 {\n        return 6\n    }\n    if n == 16 {\n        return 6\n    }\n    if n == 17 {\n        return 8\n    }\n    if n == 18 {\n        return 8\n    }\n    if n == 19 {\n        return 8\n    }\n    if n == 20 {\n        return 0\n    }\n    if n == 21 {\n        return 0\n    }\n    if n == 22 {\n        return 0\n    }\n    if n == 23 {\n        return 0\n    }\n    if n == 24 {\n        return 0\n    }\n    if n == 25 {\n        return 0\n    }\n    if n == 26 {\n        return 0\n    }\n    if n == 27 {\n        return 0\n    }\n    if n == 28 {\n        return 0\n    }\n    if n == 29 {\n        return 0\n    }\n    if n == 30 {\n        return 0\n    }\n    if n == 31 {\n        return 0\n    }\n    if n == 32 {\n        return 0\n    }\n    if n == 33 {\n        return 0\n    }\n    if n == 34 {\n        return 0\n    }\n    if n == 35 {\n        return 0\n    }\n    if n == 36 {\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123868,
      "stdout": "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n",
      "stderr": "# command-line-arguments\n/tmp/tmpiu2nnlod_test.go:120:6: expected '(', found TestLast_Digit_Factorial\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmpvb28fp78_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmpvb28fp78_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // write your code in Python 3.6\n    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 6\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 2\n    }\n    if n == 6 {\n        return 2\n    }\n    if n == 7 {\n        return 4\n    }\n    if n == 8 {\n        return 2\n    }\n    if n == 9 {\n        return 8\n    }\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123869,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n < 0 {\n        return -1\n    }\n    if n == 0 {\n        return 1\n    }\n    return n * last_Digit_Factorial(n-1)\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmpw84nks6t_test.go:34: expected '%!s(int=4)', got '%!s(int=24)'\n    --- FAIL: TestLast_Digit_Factorial/test_num__1 (0.00s)\n        tmpw84nks6t_test.go:34: expected '%!s(int=0)', got '%!s(int=-4249290049419214848)'\n    --- FAIL: TestLast_Digit_Factorial/test_num__2 (0.00s)\n        tmpw84nks6t_test.go:34: expected '%!s(int=0)', got '%!s(int=-8764578968847253504)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n == 0 {\n        return 1\n    }\n    return n * last_Digit_Factorial(n-1)\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123865,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmplrrdc40n_test.go:31: expected '%!s(int=4)', got '%!s(int=24)'\n    --- FAIL: TestLast_Digit_Factorial/test_num__1 (0.00s)\n        tmplrrdc40n_test.go:31: expected '%!s(int=0)', got '%!s(int=-4249290049419214848)'\n    --- FAIL: TestLast_Digit_Factorial/test_num__2 (0.00s)\n        tmplrrdc40n_test.go:31: expected '%!s(int=0)', got '%!s(int=-8764578968847253504)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n <= 1 {\n        return 1\n    }\n    return (n * last_Digit_Factorial(n-1)) % 10\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123869,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n < 0 {\n        return -1\n    } else if n < 2 {\n        return 1\n    } else {\n        return (n * last_Digit_Factorial(n - 1)) % 10\n    }\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123869,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n < 0 {\n        return -1\n    }\n    if n < 2 {\n        return 1\n    }\n    var result int = 1\n    for i := 2; i <= n; i++ {\n        result = (result * i) % 10\n    }\n    return result\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n < 0 {\n        return -1\n    }\n    if n == 0 {\n        return 1\n    }\n    return n * last_Digit_Factorial(n - 1)\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123868,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmp42bmwcmr_test.go:34: expected '%!s(int=4)', got '%!s(int=24)'\n    --- FAIL: TestLast_Digit_Factorial/test_num__1 (0.00s)\n        tmp42bmwcmr_test.go:34: expected '%!s(int=0)', got '%!s(int=-4249290049419214848)'\n    --- FAIL: TestLast_Digit_Factorial/test_num__2 (0.00s)\n        tmp42bmwcmr_test.go:34: expected '%!s(int=0)', got '%!s(int=-8764578968847253504)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // write your code in Python 3.6\n    if n == 0 {\n        return 1\n    }\n    return n * last_Digit_Factorial(n-1)\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmpch2yg4yb_test.go:32: expected '%!s(int=4)', got '%!s(int=24)'\n    --- FAIL: TestLast_Digit_Factorial/test_num__1 (0.00s)\n        tmpch2yg4yb_test.go:32: expected '%!s(int=0)', got '%!s(int=-4249290049419214848)'\n    --- FAIL: TestLast_Digit_Factorial/test_num__2 (0.00s)\n        tmpch2yg4yb_test.go:32: expected '%!s(int=0)', got '%!s(int=-8764578968847253504)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n < 0 {\n        return -1\n    }\n    if n == 0 {\n        return 1\n    }\n    return n * last_Digit_Factorial(n-1)\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmpw84nks6t_test.go:34: expected '%!s(int=4)', got '%!s(int=24)'\n    --- FAIL: TestLast_Digit_Factorial/test_num__1 (0.00s)\n        tmpw84nks6t_test.go:34: expected '%!s(int=0)', got '%!s(int=-4249290049419214848)'\n    --- FAIL: TestLast_Digit_Factorial/test_num__2 (0.00s)\n        tmpw84nks6t_test.go:34: expected '%!s(int=0)', got '%!s(int=-8764578968847253504)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // write your code here\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123865,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmpkcme7lui_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 6\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 2\n    }\n    if n == 6 {\n        return 2\n    }\n    if n == 7 {\n        return 4\n    }\n    if n == 8 {\n        return 2\n    }\n    if n == 9 {\n        return 8\n    }\n    if n == 10 {\n        return 8\n    }\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // Please add your code here\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123865,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmpllki7b_g_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n == 0 || n == 1 {\n        return 1\n    }\n    return n * last_Digit_Factorial(n - 1) % 10\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123869,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // write your code in Python 3.6\n    if n < 0 {\n        return 0\n    }\n    if n == 0 {\n        return 1\n    }\n    var factorial int = 1\n    for i := 1; i <= n; i++ {\n        factorial = (factorial * i) % 10\n    }\n    return factorial\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123869,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // your code here\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmp_vlip067_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // your code here\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmp_vlip067_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n < 0 {\n        return -1\n    }\n    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 6\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 2\n    }\n    if n == 6 {\n        return 2\n    }\n    if n == 7 {\n        return 4\n    }\n    if n == 8 {\n        return 2\n    }\n    if n == 9 {\n        return 8\n    }\n    if n == 10 {\n        return 8\n    }\n    if n == 11 {\n        return 8\n    }\n    if n == 12 {\n        return 6\n    }\n    if n == 13 {\n        return 8\n    }\n    if n == 14 {\n        return 8\n    }\n    if n == 15 {\n        return 6\n    }\n    if n == 16 {\n        return 2\n    }\n    if n == 17 {\n        return 6\n    }\n    if n == 18 {\n        return 2\n    }\n    if n == 19 {\n        return 2\n    }\n    if n == 20 {\n        return 2\n    }\n    if n == 21 {\n        return 6\n    }\n    if n == 22 {\n        return 4\n    }\n    if n == 23 {\n        return 2\n    }\n    if n == 24 {\n        return 8\n    }\n    if n == 25 {\n        return 2\n    }\n    if n == 26 {\n        return 8\n    }\n    if n == 27 {\n        return 8\n    }\n    if n == 28 {\n        return 8\n    }\n    if n == 29 {\n        return 6\n    }\n    if n == 30 {\n        return 8\n    }\n    if n == 31 {\n        return 8\n    }\n    if n == 32 {\n        return 6\n    }\n    if n == 33 {\n        return 2\n    }\n    if n == 34 {\n        return 6\n    }\n    if n == 35 {\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123868,
      "stdout": "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n",
      "stderr": "# command-line-arguments\n/tmp/tmp74m4h45z_test.go:119:6: expected '(', found TestLast_Digit_Factorial\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // your code here\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmp_vlip067_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    if n < 0 {\n        return -1\n    }\n    if n == 0 {\n        return 1\n    }\n    return n * last_Digit_Factorial(n-1)\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmpw84nks6t_test.go:34: expected '%!s(int=4)', got '%!s(int=24)'\n    --- FAIL: TestLast_Digit_Factorial/test_num__1 (0.00s)\n        tmpw84nks6t_test.go:34: expected '%!s(int=0)', got '%!s(int=-4249290049419214848)'\n    --- FAIL: TestLast_Digit_Factorial/test_num__2 (0.00s)\n        tmpw84nks6t_test.go:34: expected '%!s(int=0)', got '%!s(int=-8764578968847253504)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // your code here\n    return 0\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509711,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmp_vlip067_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // Write your code here\n    // To print results to the standard output you can use fmt.Println()\n    // Example: fmt.Println(\"Hello world!\")\n    if n == 0 {\n        return 1\n    }\n    return (n * last_Digit_Factorial(n - 1)) % 10\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123869,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package last_Digit_Factorial_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the last digit in factorial of a given number.\nfunc last_Digit_Factorial(n int) int {\n    // write your code in Go 1.4\n    if n == 0 {\n        return 1\n    }\n    return n * last_Digit_Factorial(n-1)\n}\n\nfunc TestLast_Digit_Factorial(t *testing.T) {\n  candidate := last_Digit_Factorial\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(4), expected: 4 },\n     { actual: candidate(21), expected: 0 },\n     { actual: candidate(30), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123869,
      "stdout": "--- FAIL: TestLast_Digit_Factorial (0.00s)\n    --- FAIL: TestLast_Digit_Factorial/test_num__0 (0.00s)\n        tmpm36i1c1y_test.go:32: expected '%!s(int=4)', got '%!s(int=24)'\n    --- FAIL: TestLast_Digit_Factorial/test_num__1 (0.00s)\n        tmpm36i1c1y_test.go:32: expected '%!s(int=0)', got '%!s(int=-4249290049419214848)'\n    --- FAIL: TestLast_Digit_Factorial/test_num__2 (0.00s)\n        tmpm36i1c1y_test.go:32: expected '%!s(int=0)', got '%!s(int=-8764578968847253504)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
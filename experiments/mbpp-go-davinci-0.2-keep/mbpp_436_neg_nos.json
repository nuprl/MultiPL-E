{
  "name": "mbpp_436_neg_nos",
  "language": "go_test.go",
  "prompt": "package neg_nos_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to return the negative numbers in a list.\nfunc neg_nos(list1 []int) []int {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_436_neg_nos.py",
  "prompt_terminology": "verbatim",
  "tests": "func TestNeg_Nos(t *testing.T) {\n  candidate := neg_nos\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{-1, 4, 5, -6}), expected: []int{-1, -6} },\n     { actual: candidate([]int{-1, -2, 3, 4}), expected: []int{-1, -2} },\n     { actual: candidate([]int{-7, -6, 8, 9}), expected: []int{-7, -6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
  "stop_tokens": [
    "\nfunc",
    "struct",
    "\n// "
  ],
  "completions": [
    "    var list2 []int\n    for _, i := range list1 {\n        if i < 0 {\n            list2 = append(list2, i)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, i := range list1 {\n        if i < 0 {\n            list2 = append(list2, i)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, i := range list1 {\n        if i < 0 {\n            list2 = append(list2, i)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, i := range list1 {\n        if i < 0 {\n            list2 = append(list2, i)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, i := range list1 {\n        if i < 0 {\n            list2 = append(list2, i)\n        }\n    }\n    return list2\n}\n",
    "    var neg_list []int\n    for _, i := range list1 {\n        if i < 0 {\n            neg_list = append(neg_list, i)\n        }\n    }\n    return neg_list\n}\n",
    "    var list2 []int\n    for _, i := range list1 {\n        if i < 0 {\n            list2 = append(list2, i)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, i := range list1 {\n        if i < 0 {\n            list2 = append(list2, i)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, v := range list1 {\n        if v < 0 {\n            list2 = append(list2, v)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, i := range list1 {\n        if i < 0 {\n            list2 = append(list2, i)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, num := range list1 {\n        if num < 0 {\n            list2 = append(list2, num)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, i := range list1 {\n        if i < 0 {\n            list2 = append(list2, i)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, v := range list1 {\n        if v < 0 {\n            list2 = append(list2, v)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, i := range list1 {\n        if i < 0 {\n            list2 = append(list2, i)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, v := range list1 {\n        if v < 0 {\n            list2 = append(list2, v)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, i := range list1 {\n        if i < 0 {\n            list2 = append(list2, i)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, value := range list1 {\n        if value < 0 {\n            list2 = append(list2, value)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, v := range list1 {\n        if v < 0 {\n            list2 = append(list2, v)\n        }\n    }\n    return list2\n}\n",
    "    list2 := []int{}\n    for _, v := range list1 {\n        if v < 0 {\n            list2 = append(list2, v)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, value := range list1 {\n        if value < 0 {\n            list2 = append(list2, value)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, v := range list1 {\n        if v < 0 {\n            list2 = append(list2, v)\n        }\n    }\n    return list2\n}\n",
    "    var neg_list []int\n    for _, i := range list1 {\n        if i < 0 {\n            neg_list = append(neg_list, i)\n        }\n    }\n    return neg_list\n}\n",
    "    var list2 []int\n    for _, i := range list1 {\n        if i < 0 {\n            list2 = append(list2, i)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, v := range list1 {\n        if v < 0 {\n            list2 = append(list2, v)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, i := range list1 {\n        if i < 0 {\n            list2 = append(list2, i)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, v := range list1 {\n        if v < 0 {\n            list2 = append(list2, v)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, i := range list1 {\n        if i < 0 {\n            list2 = append(list2, i)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, v := range list1 {\n        if v < 0 {\n            list2 = append(list2, v)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, i := range list1 {\n        if i < 0 {\n            list2 = append(list2, i)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, num := range list1 {\n        if num < 0 {\n            list2 = append(list2, num)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, v := range list1 {\n        if v < 0 {\n            list2 = append(list2, v)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, i := range list1 {\n        if i < 0 {\n            list2 = append(list2, i)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, i := range list1 {\n        if i < 0 {\n            list2 = append(list2, i)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, i := range list1 {\n        if i < 0 {\n            list2 = append(list2, i)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, v := range list1 {\n        if v < 0 {\n            list2 = append(list2, v)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, num := range list1 {\n        if num < 0 {\n            list2 = append(list2, num)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, i := range list1 {\n        if i < 0 {\n            list2 = append(list2, i)\n        }\n    }\n    return list2\n}\n",
    "    var neg_list []int\n    for _, num := range list1 {\n        if num < 0 {\n            neg_list = append(neg_list, num)\n        }\n    }\n    return neg_list\n}\n",
    "    var list2 []int\n    for _, i := range list1 {\n        if i < 0 {\n            list2 = append(list2, i)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, v := range list1 {\n        if v < 0 {\n            list2 = append(list2, v)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, v := range list1 {\n        if v < 0 {\n            list2 = append(list2, v)\n        }\n    }\n    return list2\n}\n",
    "    var neg_list []int\n    for _, i := range list1 {\n        if i < 0 {\n            neg_list = append(neg_list, i)\n        }\n    }\n    return neg_list\n}\n",
    "    var list2 []int\n    for _, v := range list1 {\n        if v < 0 {\n            list2 = append(list2, v)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, x := range list1 {\n        if x < 0 {\n            list2 = append(list2, x)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, i := range list1 {\n        if i < 0 {\n            list2 = append(list2, i)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, i := range list1 {\n        if i < 0 {\n            list2 = append(list2, i)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, v := range list1 {\n        if v < 0 {\n            list2 = append(list2, v)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, i := range list1 {\n        if i < 0 {\n            list2 = append(list2, i)\n        }\n    }\n    return list2\n}\n",
    "    var neg_list []int\n    for _, i := range list1 {\n        if i < 0 {\n            neg_list = append(neg_list, i)\n        }\n    }\n    return neg_list\n}\n",
    "    var list2 []int\n    for _, v := range list1 {\n        if v < 0 {\n            list2 = append(list2, v)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, v := range list1 {\n        if v < 0 {\n            list2 = append(list2, v)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, v := range list1 {\n        if v < 0 {\n            list2 = append(list2, v)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, value := range list1 {\n        if value < 0 {\n            list2 = append(list2, value)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, v := range list1 {\n        if v < 0 {\n            list2 = append(list2, v)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, i := range list1 {\n        if i < 0 {\n            list2 = append(list2, i)\n        }\n    }\n    return list2\n}\n",
    "    var neg_nos []int\n    for _, i := range list1 {\n        if i < 0 {\n            neg_nos = append(neg_nos, i)\n        }\n    }\n    return neg_nos\n}\n",
    "    var list2 []int\n    for _, v := range list1 {\n        if v < 0 {\n            list2 = append(list2, v)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, v := range list1 {\n        if v < 0 {\n            list2 = append(list2, v)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, i := range list1 {\n        if i < 0 {\n            list2 = append(list2, i)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, i := range list1 {\n        if i < 0 {\n            list2 = append(list2, i)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, v := range list1 {\n        if v < 0 {\n            list2 = append(list2, v)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, i := range list1 {\n        if i < 0 {\n            list2 = append(list2, i)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, i := range list1 {\n        if i < 0 {\n            list2 = append(list2, i)\n        }\n    }\n    return list2\n}\n",
    "    var neg_list []int\n    for _, num := range list1 {\n        if num < 0 {\n            neg_list = append(neg_list, num)\n        }\n    }\n    return neg_list\n}\n",
    "    var list2 []int\n    for _, num := range list1 {\n        if num < 0 {\n            list2 = append(list2, num)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, v := range list1 {\n        if v < 0 {\n            list2 = append(list2, v)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, i := range list1 {\n        if i < 0 {\n            list2 = append(list2, i)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, i := range list1 {\n        if i < 0 {\n            list2 = append(list2, i)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, i := range list1 {\n        if i < 0 {\n            list2 = append(list2, i)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, x := range list1 {\n        if x < 0 {\n            list2 = append(list2, x)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, v := range list1 {\n        if v < 0 {\n            list2 = append(list2, v)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, n := range list1 {\n        if n < 0 {\n            list2 = append(list2, n)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, v := range list1 {\n        if v < 0 {\n            list2 = append(list2, v)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, v := range list1 {\n        if v < 0 {\n            list2 = append(list2, v)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, v := range list1 {\n        if v < 0 {\n            list2 = append(list2, v)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, v := range list1 {\n        if v < 0 {\n            list2 = append(list2, v)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, num := range list1 {\n        if num < 0 {\n            list2 = append(list2, num)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, i := range list1 {\n        if i < 0 {\n            list2 = append(list2, i)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, v := range list1 {\n        if v < 0 {\n            list2 = append(list2, v)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, i := range list1 {\n        if i < 0 {\n            list2 = append(list2, i)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, v := range list1 {\n        if v < 0 {\n            list2 = append(list2, v)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, v := range list1 {\n        if v < 0 {\n            list2 = append(list2, v)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, v := range list1 {\n        if v < 0 {\n            list2 = append(list2, v)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, i := range list1 {\n        if i < 0 {\n            list2 = append(list2, i)\n        }\n    }\n    return list2\n}\n",
    "    var neg_list []int\n    for _, i := range list1 {\n        if i < 0 {\n            neg_list = append(neg_list, i)\n        }\n    }\n    return neg_list\n}\n",
    "    var list2 []int\n    for _, num := range list1 {\n        if num < 0 {\n            list2 = append(list2, num)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, v := range list1 {\n        if v < 0 {\n            list2 = append(list2, v)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, num := range list1 {\n        if num < 0 {\n            list2 = append(list2, num)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, i := range list1 {\n        if i < 0 {\n            list2 = append(list2, i)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, v := range list1 {\n        if v < 0 {\n            list2 = append(list2, v)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, i := range list1 {\n        if i < 0 {\n            list2 = append(list2, i)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, v := range list1 {\n        if v < 0 {\n            list2 = append(list2, v)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, v := range list1 {\n        if v < 0 {\n            list2 = append(list2, v)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, v := range list1 {\n        if v < 0 {\n            list2 = append(list2, v)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, v := range list1 {\n        if v < 0 {\n            list2 = append(list2, v)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, num := range list1 {\n        if num < 0 {\n            list2 = append(list2, num)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, num := range list1 {\n        if num < 0 {\n            list2 = append(list2, num)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, item := range list1 {\n        if item < 0 {\n            list2 = append(list2, item)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, v := range list1 {\n        if v < 0 {\n            list2 = append(list2, v)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, i := range list1 {\n        if i < 0 {\n            list2 = append(list2, i)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, i := range list1 {\n        if i < 0 {\n            list2 = append(list2, i)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, v := range list1 {\n        if v < 0 {\n            list2 = append(list2, v)\n        }\n    }\n    return list2\n}\n",
    "    var neg_list []int\n    for _, i := range list1 {\n        if i < 0 {\n            neg_list = append(neg_list, i)\n        }\n    }\n    return neg_list\n}\n",
    "    var list2 []int\n    for _, i := range list1 {\n        if i < 0 {\n            list2 = append(list2, i)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, v := range list1 {\n        if v < 0 {\n            list2 = append(list2, v)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, v := range list1 {\n        if v < 0 {\n            list2 = append(list2, v)\n        }\n    }\n    return list2\n}\n",
    "    var neg_list []int\n    for _, i := range list1 {\n        if i < 0 {\n            neg_list = append(neg_list, i)\n        }\n    }\n    return neg_list\n}\n",
    "    var neg_list []int\n    for _, num := range list1 {\n        if num < 0 {\n            neg_list = append(neg_list, num)\n        }\n    }\n    return neg_list\n}\n",
    "    var list2 []int\n    for _, i := range list1 {\n        if i < 0 {\n            list2 = append(list2, i)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, i := range list1 {\n        if i < 0 {\n            list2 = append(list2, i)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, v := range list1 {\n        if v < 0 {\n            list2 = append(list2, v)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, num := range list1 {\n        if num < 0 {\n            list2 = append(list2, num)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, num := range list1 {\n        if num < 0 {\n            list2 = append(list2, num)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, v := range list1 {\n        if v < 0 {\n            list2 = append(list2, v)\n        }\n    }\n    return list2\n}\n",
    "    var neg_list []int\n    for _, v := range list1 {\n        if v < 0 {\n            neg_list = append(neg_list, v)\n        }\n    }\n    return neg_list\n}\n",
    "    var list2 []int\n    for _, v := range list1 {\n        if v < 0 {\n            list2 = append(list2, v)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, num := range list1 {\n        if num < 0 {\n            list2 = append(list2, num)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, v := range list1 {\n        if v < 0 {\n            list2 = append(list2, v)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, i := range list1 {\n        if i < 0 {\n            list2 = append(list2, i)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, i := range list1 {\n        if i < 0 {\n            list2 = append(list2, i)\n        }\n    }\n    return list2\n}\n",
    "    var neg_list []int\n    for _, v := range list1 {\n        if v < 0 {\n            neg_list = append(neg_list, v)\n        }\n    }\n    return neg_list\n}\n",
    "    var list2 []int\n    for _, i := range list1 {\n        if i < 0 {\n            list2 = append(list2, i)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, num := range list1 {\n        if num < 0 {\n            list2 = append(list2, num)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, i := range list1 {\n        if i < 0 {\n            list2 = append(list2, i)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, v := range list1 {\n        if v < 0 {\n            list2 = append(list2, v)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, v := range list1 {\n        if v < 0 {\n            list2 = append(list2, v)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, i := range list1 {\n        if i < 0 {\n            list2 = append(list2, i)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, value := range list1 {\n        if value < 0 {\n            list2 = append(list2, value)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, i := range list1 {\n        if i < 0 {\n            list2 = append(list2, i)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, i := range list1 {\n        if i < 0 {\n            list2 = append(list2, i)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, i := range list1 {\n        if i < 0 {\n            list2 = append(list2, i)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, i := range list1 {\n        if i < 0 {\n            list2 = append(list2, i)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, i := range list1 {\n        if i < 0 {\n            list2 = append(list2, i)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, v := range list1 {\n        if v < 0 {\n            list2 = append(list2, v)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, num := range list1 {\n        if num < 0 {\n            list2 = append(list2, num)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, v := range list1 {\n        if v < 0 {\n            list2 = append(list2, v)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, i := range list1 {\n        if i < 0 {\n            list2 = append(list2, i)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, i := range list1 {\n        if i < 0 {\n            list2 = append(list2, i)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, i := range list1 {\n        if i < 0 {\n            list2 = append(list2, i)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, v := range list1 {\n        if v < 0 {\n            list2 = append(list2, v)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, i := range list1 {\n        if i < 0 {\n            list2 = append(list2, i)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, i := range list1 {\n        if i < 0 {\n            list2 = append(list2, i)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, i := range list1 {\n        if i < 0 {\n            list2 = append(list2, i)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, v := range list1 {\n        if v < 0 {\n            list2 = append(list2, v)\n        }\n    }\n    return list2\n}\n",
    "    var neg_list []int\n    for _, i := range list1 {\n        if i < 0 {\n            neg_list = append(neg_list, i)\n        }\n    }\n    return neg_list\n}\n",
    "    var list2 []int\n    for _, i := range list1 {\n        if i < 0 {\n            list2 = append(list2, i)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, v := range list1 {\n        if v < 0 {\n            list2 = append(list2, v)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, val := range list1 {\n        if val < 0 {\n            list2 = append(list2, val)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, i := range list1 {\n        if i < 0 {\n            list2 = append(list2, i)\n        }\n    }\n    return list2\n}\n",
    "    var neg_nos []int\n    for _, v := range list1 {\n        if v < 0 {\n            neg_nos = append(neg_nos, v)\n        }\n    }\n    return neg_nos\n}\n",
    "    var list2 []int\n    for _, i := range list1 {\n        if i < 0 {\n            list2 = append(list2, i)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, i := range list1 {\n        if i < 0 {\n            list2 = append(list2, i)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, v := range list1 {\n        if v < 0 {\n            list2 = append(list2, v)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, num := range list1 {\n        if num < 0 {\n            list2 = append(list2, num)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, v := range list1 {\n        if v < 0 {\n            list2 = append(list2, v)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, v := range list1 {\n        if v < 0 {\n            list2 = append(list2, v)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, num := range list1 {\n        if num < 0 {\n            list2 = append(list2, num)\n        }\n    }\n    return list2\n}\n",
    "    var neg_nos []int\n    for _, num := range list1 {\n        if num < 0 {\n            neg_nos = append(neg_nos, num)\n        }\n    }\n    return neg_nos\n}\n",
    "    var neg_list []int\n    for _, i := range list1 {\n        if i < 0 {\n            neg_list = append(neg_list, i)\n        }\n    }\n    return neg_list\n}\n",
    "    var list2 []int\n    for _, val := range list1 {\n        if val < 0 {\n            list2 = append(list2, val)\n        }\n    }\n    return list2\n}\n",
    "    var neg_list []int\n    for _, num := range list1 {\n        if num < 0 {\n            neg_list = append(neg_list, num)\n        }\n    }\n    return neg_list\n}\n",
    "    var list2 []int\n    for _, i := range list1 {\n        if i < 0 {\n            list2 = append(list2, i)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, i := range list1 {\n        if i < 0 {\n            list2 = append(list2, i)\n        }\n    }\n    return list2\n}\n",
    "    var neg_list []int\n    for _, i := range list1 {\n        if i < 0 {\n            neg_list = append(neg_list, i)\n        }\n    }\n    return neg_list\n}\n",
    "    var list2 []int\n    for _, i := range list1 {\n        if i < 0 {\n            list2 = append(list2, i)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, v := range list1 {\n        if v < 0 {\n            list2 = append(list2, v)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, v := range list1 {\n        if v < 0 {\n            list2 = append(list2, v)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, v := range list1 {\n        if v < 0 {\n            list2 = append(list2, v)\n        }\n    }\n    return list2\n}\n",
    "    var neg_list []int\n    for _, i := range list1 {\n        if i < 0 {\n            neg_list = append(neg_list, i)\n        }\n    }\n    return neg_list\n}\n",
    "    var list2 []int\n    for _, v := range list1 {\n        if v < 0 {\n            list2 = append(list2, v)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, v := range list1 {\n        if v < 0 {\n            list2 = append(list2, v)\n        }\n    }\n    return list2\n}\n",
    "    var neg_nos []int\n    for _, i := range list1 {\n        if i < 0 {\n            neg_nos = append(neg_nos, i)\n        }\n    }\n    return neg_nos\n}\n",
    "    var list2 []int\n    for _, v := range list1 {\n        if v < 0 {\n            list2 = append(list2, v)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, v := range list1 {\n        if v < 0 {\n            list2 = append(list2, v)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, v := range list1 {\n        if v < 0 {\n            list2 = append(list2, v)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, v := range list1 {\n        if v < 0 {\n            list2 = append(list2, v)\n        }\n    }\n    return list2\n}\n",
    "    var neg_nos []int\n    for _, num := range list1 {\n        if num < 0 {\n            neg_nos = append(neg_nos, num)\n        }\n    }\n    return neg_nos\n}\n",
    "    var list2 []int\n    for _, i := range list1 {\n        if i < 0 {\n            list2 = append(list2, i)\n        }\n    }\n    return list2\n}\n",
    "    var neg_list []int\n    for _, num := range list1 {\n        if num < 0 {\n            neg_list = append(neg_list, num)\n        }\n    }\n    return neg_list\n}\n",
    "    var list2 []int\n    for _, v := range list1 {\n        if v < 0 {\n            list2 = append(list2, v)\n        }\n    }\n    return list2\n}\n",
    "    var neg_list []int\n    for _, value := range list1 {\n        if value < 0 {\n            neg_list = append(neg_list, value)\n        }\n    }\n    return neg_list\n}\n",
    "    var list2 []int\n    for _, i := range list1 {\n        if i < 0 {\n            list2 = append(list2, i)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, i := range list1 {\n        if i < 0 {\n            list2 = append(list2, i)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, num := range list1 {\n        if num < 0 {\n            list2 = append(list2, num)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, value := range list1 {\n        if value < 0 {\n            list2 = append(list2, value)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, i := range list1 {\n        if i < 0 {\n            list2 = append(list2, i)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, v := range list1 {\n        if v < 0 {\n            list2 = append(list2, v)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, v := range list1 {\n        if v < 0 {\n            list2 = append(list2, v)\n        }\n    }\n    return list2\n}\n",
    "    var neg_list []int\n    for _, v := range list1 {\n        if v < 0 {\n            neg_list = append(neg_list, v)\n        }\n    }\n    return neg_list\n}\n",
    "    var list2 []int\n    for _, i := range list1 {\n        if i < 0 {\n            list2 = append(list2, i)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, v := range list1 {\n        if v < 0 {\n            list2 = append(list2, v)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, i := range list1 {\n        if i < 0 {\n            list2 = append(list2, i)\n        }\n    }\n    return list2\n}\n",
    "    var neg_list []int\n    for _, num := range list1 {\n        if num < 0 {\n            neg_list = append(neg_list, num)\n        }\n    }\n    return neg_list\n}\n",
    "    var neg_list []int\n    for _, num := range list1 {\n        if num < 0 {\n            neg_list = append(neg_list, num)\n        }\n    }\n    return neg_list\n}\n",
    "    var neg_list []int\n    for _, i := range list1 {\n        if i < 0 {\n            neg_list = append(neg_list, i)\n        }\n    }\n    return neg_list\n}\n",
    "    var list2 []int\n    for _, val := range list1 {\n        if val < 0 {\n            list2 = append(list2, val)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, i := range list1 {\n        if i < 0 {\n            list2 = append(list2, i)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, i := range list1 {\n        if i < 0 {\n            list2 = append(list2, i)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, v := range list1 {\n        if v < 0 {\n            list2 = append(list2, v)\n        }\n    }\n    return list2\n}\n",
    "    var list2 []int\n    for _, v := range list1 {\n        if v < 0 {\n            list2 = append(list2, v)\n        }\n    }\n    return list2\n}\n"
  ]
}
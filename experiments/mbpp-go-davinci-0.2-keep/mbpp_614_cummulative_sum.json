{
  "name": "mbpp_614_cummulative_sum",
  "language": "go_test.go",
  "prompt": "package cummulative_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the cumulative sum of all the values that are present in the given tuple list.\nfunc cummulative_sum(test_list [][]interface{}) int {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_614_cummulative_sum.py",
  "prompt_terminology": "verbatim",
  "tests": "func TestCummulative_Sum(t *testing.T) {\n  candidate := cummulative_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{1, 3}, []interface{}{5, 6, 7}, []interface{}{2, 6}}), expected: 30 },\n     { actual: candidate([][]int{[]interface{}{2, 4}, []interface{}{6, 7, 8}, []interface{}{3, 7}}), expected: 37 },\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{7, 8, 9}, []interface{}{4, 8}}), expected: 44 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
  "stop_tokens": [
    "\nfunc",
    "struct",
    "\n// "
  ],
  "completions": [
    "    var sum int\n    for _, tup := range test_list {\n        sum += tup[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range test_list {\n        sum += v[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int = 0\n    for _, element := range test_list {\n        sum += element[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, tuple := range test_list {\n        sum += tuple[1].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, t := range test_list {\n        sum += t[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, list := range test_list {\n        for _, value := range list {\n            sum += value.(int)\n        }\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range test_list {\n        sum += v[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, t := range test_list {\n        sum += t[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range test_list {\n        if v[0] == \"add\" {\n            sum += v[1].(int)\n        } else if v[0] == \"sub\" {\n            sum -= v[1].(int)\n        }\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, tuple := range test_list {\n        sum += tuple[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int = 0\n    for _, t := range test_list {\n        sum += t[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range test_list {\n        sum += v[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, tuple := range test_list {\n        sum += tuple[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, t := range test_list {\n        sum += t[0].(int)\n    }\n    return sum\n}\n",
    "    sum := 0\n    for _, tuple := range test_list {\n        for _, value := range tuple {\n            if value, ok := value.(int); ok {\n                sum += value\n            }\n        }\n    }\n    return sum\n}\n",
    "    sum := 0\n    for _, v := range test_list {\n        sum += v[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, tuple := range test_list {\n        sum += tuple[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, value := range test_list {\n        sum += value[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range test_list {\n        sum += v[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, i := range test_list {\n        sum += i[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, tuple := range test_list {\n        for _, value := range tuple {\n            sum += value.(int)\n        }\n    }\n    return sum\n}\n",
    "    sum := 0\n    for _, value := range test_list {\n        sum += value[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, list := range test_list {\n        for _, value := range list {\n            sum += value.(int)\n        }\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, value := range test_list {\n        sum += value[0].(int)\n    }\n    return sum\n}\n",
    "    sum := 0\n    for _, v := range test_list {\n        sum += v[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int = 0\n    for _, tuple := range test_list {\n        sum += tuple[1].(int)\n    }\n    return sum\n}\n",
    "    sum := 0\n    for _, v := range test_list {\n        sum += v[1].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, tuple := range test_list {\n        sum += tuple[1].(int)\n    }\n    return sum\n}\n",
    "    var sum int = 0\n    for _, tuple := range test_list {\n        sum += tuple[1].(int)\n    }\n    return sum\n}\n",
    "    sum := 0\n    for _, tuple := range test_list {\n        sum += tuple[1].(int)\n    }\n    return sum\n}\n",
    "    sum := 0\n    for _, v := range test_list {\n        sum += v[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range test_list {\n        sum += v[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, item := range test_list {\n        sum += item[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, tuple := range test_list {\n        sum += tuple[1].(int)\n    }\n    return sum\n}\n",
    "    sum := 0\n    for _, tuple := range test_list {\n        sum += tuple[1].(int)\n    }\n    return sum\n}\n",
    "    sum := 0\n    for _, tuple := range test_list {\n        sum += tuple[1].(int)\n    }\n    return sum\n}\n",
    "    var sum int = 0\n    for _, tuple := range test_list {\n        sum += tuple[1].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range test_list {\n        sum += v[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int = 0\n    for _, tuple := range test_list {\n        sum += tuple[1].(int)\n    }\n    return sum\n}\n",
    "    sum := 0\n    for _, tuple := range test_list {\n        for _, value := range tuple {\n            sum += value.(int)\n        }\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, tuple := range test_list {\n        sum += tuple[1].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, t := range test_list {\n        for _, v := range t {\n            switch v.(type) {\n            case int:\n                sum += v.(int)\n            case float64:\n                sum += int(v.(float64))\n            }\n        }\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, tuple := range test_list {\n        sum += tuple[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, item := range test_list {\n        sum += item[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, tuple := range test_list {\n        sum += tuple[0].(int)\n    }\n    return sum\n}\n",
    "    sum := 0\n    for _, tuple := range test_list {\n        for _, value := range tuple {\n            switch value.(type) {\n            case int:\n                sum += value.(int)\n            case float64:\n                sum += int(value.(float64))\n            }\n        }\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, tuple := range test_list {\n        sum += tuple[1].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, tuple := range test_list {\n        sum += tuple[1].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, tuple := range test_list {\n        sum += tuple[1].(int)\n    }\n    return sum\n}\n",
    "    sum := 0\n    for _, tuple := range test_list {\n        sum += tuple[1].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range test_list {\n        sum += v[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, tuple := range test_list {\n        sum += tuple[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range test_list {\n        sum += v[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, tuple := range test_list {\n        sum += tuple[1].(int)\n    }\n    return sum\n}\n",
    "    sum := 0\n    for _, t := range test_list {\n        sum += t[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int = 0\n    for _, v := range test_list {\n        sum += v[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range test_list {\n        sum += v[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range test_list {\n        sum += v[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, t := range test_list {\n        sum += t[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range test_list {\n        sum += v[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range test_list {\n        sum += v[1].(int)\n    }\n    return sum\n}\n",
    "    sum := 0\n    for _, tuple := range test_list {\n        for _, value := range tuple {\n            sum += value.(int)\n        }\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range test_list {\n        sum += v[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, tuple := range test_list {\n        sum += tuple[1].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, tuple := range test_list {\n        sum += tuple[1].(int)\n    }\n    return sum\n}\n",
    "    sum := 0\n    for _, v := range test_list {\n        sum += v[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range test_list {\n        sum += v[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, tuple := range test_list {\n        sum += tuple[1].(int)\n    }\n    return sum\n}\n",
    "    sum := 0\n    for _, list := range test_list {\n        for _, value := range list {\n            sum += value.(int)\n        }\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, tuple := range test_list {\n        sum += tuple[1].(int)\n    }\n    return sum\n}\n",
    "    sum := 0\n    for _, tuple := range test_list {\n        for _, value := range tuple {\n            switch value.(type) {\n            case int:\n                sum += value.(int)\n            case float64:\n                sum += int(value.(float64))\n            }\n        }\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, tuple := range test_list {\n        sum += tuple[1].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range test_list {\n        sum += v[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, tuple := range test_list {\n        sum += tuple[1].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, tuple := range test_list {\n        sum += tuple[1].(int)\n    }\n    return sum\n}\n",
    "    sum := 0\n    for _, tuple := range test_list {\n        sum += tuple[1].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, item := range test_list {\n        sum += item[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range test_list {\n        sum += v[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range test_list {\n        sum += v[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, tuple := range test_list {\n        sum += tuple[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, val := range test_list {\n        sum += val[0].(int)\n    }\n    return sum\n}\n",
    "    sum := 0\n    for _, tuple := range test_list {\n        sum += tuple[1].(int)\n    }\n    return sum\n}\n",
    "    sum := 0\n    for _, tuple := range test_list {\n        sum += tuple[0].(int)\n    }\n    return sum\n}\n",
    "    sum := 0\n    for _, value := range test_list {\n        sum += value[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range test_list {\n        sum += v[1].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range test_list {\n        sum += v[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range test_list {\n        sum += v[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, tuple := range test_list {\n        sum += tuple[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, list := range test_list {\n        for _, value := range list {\n            switch value.(type) {\n            case int:\n                sum += value.(int)\n            case float64:\n                sum += int(value.(float64))\n            }\n        }\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range test_list {\n        sum += v[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int = 0\n    for _, tuple := range test_list {\n        sum += tuple[1].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range test_list {\n        sum += v[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range test_list {\n        sum += v[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range test_list {\n        sum += v[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, value := range test_list {\n        sum += value[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, i := range test_list {\n        sum += i[0].(int)\n    }\n    return sum\n}\n",
    "    sum := 0\n    for _, v := range test_list {\n        sum += v[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range test_list {\n        sum += v[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, value := range test_list {\n        sum += value[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, tuple := range test_list {\n        sum += tuple[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int = 0\n    for _, tuple := range test_list {\n        sum += tuple[1].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, tuple := range test_list {\n        sum += tuple[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, tuple := range test_list {\n        sum += tuple[1].(int)\n    }\n    return sum\n}\n",
    "    var sum int = 0\n    for _, v := range test_list {\n        sum += v[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, value := range test_list {\n        sum += value[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range test_list {\n        sum += v[0].(int)\n    }\n    return sum\n}\n",
    "    sum := 0\n    for _, v := range test_list {\n        sum += v[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range test_list {\n        sum += v[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, t := range test_list {\n        sum += t[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range test_list {\n        sum += v[0].(int)\n    }\n    return sum\n}\n",
    "    sum := 0\n    for _, tup := range test_list {\n        for _, val := range tup {\n            sum += val.(int)\n        }\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, tuple := range test_list {\n        sum += tuple[1].(int)\n    }\n    return sum\n}\n",
    "    var sum int = 0\n    for _, val := range test_list {\n        sum += val[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, item := range test_list {\n        sum += item[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int = 0\n    for _, v := range test_list {\n        sum += v[1].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, value := range test_list {\n        if value[0] == \"add\" {\n            sum += value[1].(int)\n        } else {\n            sum -= value[1].(int)\n        }\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range test_list {\n        sum += v[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int = 0\n    for _, v := range test_list {\n        sum += v[0].(int)\n    }\n    return sum\n}\n",
    "    sum := 0\n    for _, tuple := range test_list {\n        sum += tuple[1].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, list := range test_list {\n        for _, value := range list {\n            sum += value.(int)\n        }\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range test_list {\n        sum += v[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, list := range test_list {\n        for _, value := range list {\n            sum += value.(int)\n        }\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, tuple := range test_list {\n        sum += tuple[1].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range test_list {\n        sum += v[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, tuple := range test_list {\n        sum += tuple[1].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, value := range test_list {\n        sum += value[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range test_list {\n        for _, v2 := range v {\n            sum += v2.(int)\n        }\n    }\n    return sum\n}\n",
    "    var sum int = 0\n    for _, tuple := range test_list {\n        sum += tuple[1].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range test_list {\n        sum += v[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, tuple := range test_list {\n        sum += tuple[1].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, list := range test_list {\n        for _, value := range list {\n            sum += value.(int)\n        }\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range test_list {\n        sum += v[0].(int)\n    }\n    return sum\n}\n",
    "    sum := 0\n    for _, tuple := range test_list {\n        sum += tuple[1].(int)\n    }\n    return sum\n}\n",
    "    sum := 0\n    for _, tuple := range test_list {\n        for _, value := range tuple {\n            if value_int, ok := value.(int); ok {\n                sum += value_int\n            }\n        }\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, tuple := range test_list {\n        for _, value := range tuple {\n            sum += value.(int)\n        }\n    }\n    return sum\n}\n",
    "    var sum int = 0\n    for _, val := range test_list {\n        sum += val[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range test_list {\n        sum += v[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int = 0\n    for _, tuple := range test_list {\n        sum += tuple[1].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range test_list {\n        sum += v[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range test_list {\n        sum += v[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, sub_list := range test_list {\n        for _, value := range sub_list {\n            sum += value.(int)\n        }\n    }\n    return sum\n}\n",
    "    var sum int = 0\n    for _, tuple := range test_list {\n        for _, value := range tuple {\n            switch value.(type) {\n            case int:\n                sum += value.(int)\n            case float64:\n                sum += int(value.(float64))\n            }\n        }\n    }\n    return sum\n}\n",
    "    var sum int = 0\n    for _, tuple := range test_list {\n        sum += tuple[0].(int)\n    }\n    return sum\n}\n",
    "    sum := 0\n    for _, value := range test_list {\n        sum += value[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, tuple := range test_list {\n        sum += tuple[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, value := range test_list {\n        sum += value[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range test_list {\n        sum += v[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, tuple := range test_list {\n        sum += tuple[1].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range test_list {\n        sum += v[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range test_list {\n        sum += v[0].(int)\n    }\n    return sum\n}\n",
    "    sum := 0\n    for _, element := range test_list {\n        for _, value := range element {\n            switch value.(type) {\n            case int:\n                sum += value.(int)\n            case float64:\n                sum += int(value.(float64))\n            }\n        }\n    }\n    return sum\n}\n",
    "    var sum int = 0\n    for _, v := range test_list {\n        sum += v[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range test_list {\n        sum += v[0].(int)\n    }\n    return sum\n}\n",
    "    sum := 0\n    for _, v := range test_list {\n        for _, v2 := range v {\n            sum += v2.(int)\n        }\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, tuple := range test_list {\n        sum += tuple[1].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range test_list {\n        sum += v[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int = 0\n    for _, tuple := range test_list {\n        for _, value := range tuple {\n            switch value.(type) {\n            case int:\n                sum += value.(int)\n            case float64:\n                sum += int(value.(float64))\n            }\n        }\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range test_list {\n        sum += v[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range test_list {\n        sum += v[0].(int)\n    }\n    return sum\n}\n",
    "    sum := 0\n    for _, item := range test_list {\n        sum += item[1].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, tuple := range test_list {\n        sum += tuple[1].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, i := range test_list {\n        sum += i[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range test_list {\n        sum += v[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range test_list {\n        sum += v[0].(int)\n    }\n    return sum\n}\n",
    "    sum := 0\n    for _, t := range test_list {\n        sum += t[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, tuple := range test_list {\n        for _, value := range tuple {\n            sum += value.(int)\n        }\n    }\n    return sum\n}\n",
    "    var sum int = 0\n    for _, value := range test_list {\n        sum += value[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range test_list {\n        sum += v[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int = 0\n    for _, tuple := range test_list {\n        sum += tuple[1].(int)\n    }\n    return sum\n}\n",
    "    var cummulative_sum int\n    for _, list := range test_list {\n        for _, value := range list {\n            cummulative_sum += value.(int)\n        }\n    }\n    return cummulative_sum\n}\n",
    "    sum := 0\n    for _, tuple := range test_list {\n        sum += tuple[1].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range test_list {\n        sum += v[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, t := range test_list {\n        sum += t[0].(int)\n    }\n    return sum\n}\n",
    "    var cummulative_sum int\n    for _, value := range test_list {\n        cummulative_sum += value[1].(int)\n    }\n    return cummulative_sum\n}\n",
    "    var sum int = 0\n    for _, tuple := range test_list {\n        sum += tuple[1].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range test_list {\n        sum += v[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int = 0\n    for _, v := range test_list {\n        sum += v[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int = 0\n    for _, v := range test_list {\n        sum += v[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, list := range test_list {\n        for _, val := range list {\n            sum += val.(int)\n        }\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range test_list {\n        sum = sum + v[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range test_list {\n        sum += v[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range test_list {\n        sum += v[1].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, tup := range test_list {\n        sum += tup[1].(int)\n    }\n    return sum\n}\n",
    "    sum := 0\n    for _, v := range test_list {\n        sum += v[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int = 0\n    for _, sub_list := range test_list {\n        for _, value := range sub_list {\n            sum += value.(int)\n        }\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range test_list {\n        sum += v[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range test_list {\n        sum += v[0].(int)\n    }\n    return sum\n}\n",
    "    sum := 0\n    for _, value := range test_list {\n        sum += value[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, tuple := range test_list {\n        sum += tuple[1].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, item := range test_list {\n        sum += item[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, value := range test_list {\n        sum += value[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, t := range test_list {\n        sum += t[1].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, val := range test_list {\n        sum += val[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range test_list {\n        sum += v[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range test_list {\n        sum += v[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range test_list {\n        sum += v[0].(int)\n    }\n    return sum\n}\n",
    "    sum := 0\n    for _, v := range test_list {\n        sum += v[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, list := range test_list {\n        for _, value := range list {\n            sum += value.(int)\n        }\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range test_list {\n        sum += v[0].(int)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, tuple := range test_list {\n        sum += tuple[1].(int)\n    }\n    return sum\n}\n"
  ]
}
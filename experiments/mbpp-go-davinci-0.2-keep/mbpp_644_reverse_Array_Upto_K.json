{
  "name": "mbpp_644_reverse_Array_Upto_K",
  "language": "go_test.go",
  "prompt": "package reverse_Array_Upto_K_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to reverse an array upto a given position.\nfunc reverse_Array_Upto_K(input []int, k int) []int {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_644_reverse_Array_Upto_K.py",
  "prompt_terminology": "verbatim",
  "tests": "func TestReverse_Array_Upto_K(t *testing.T) {\n  candidate := reverse_Array_Upto_K\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, 4, 5, 6}, 4), expected: []int{4, 3, 2, 1, 5, 6} },\n     { actual: candidate([]int{4, 5, 6, 7}, 2), expected: []int{5, 4, 6, 7} },\n     { actual: candidate([]int{9, 8, 7, 6, 5}, 3), expected: []int{7, 8, 9, 6, 5} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
  "stop_tokens": [
    "\nfunc",
    "struct",
    "\n// "
  ],
  "completions": [
    "    // TODO - Add your code here\n    return nil\n}\n",
    "    if k > len(input) {\n        k = len(input)\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k >= len(input) {\n        return input\n    }\n    for i := 0; i < k / 2; i++ {\n        input[i], input[k - i - 1] = input[k - i - 1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    // TODO - Add your code here\n    return nil\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k >= len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        k = len(input)\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    // Write your code here\n    if k > len(input) {\n        k = len(input)\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k / 2; i++ {\n        input[i], input[k - i - 1] = input[k - i - 1], input[i]\n    }\n    return input\n}\n",
    "    // Write your code here\n    if k > len(input) {\n        k = len(input)\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-1-i] = input[k-1-i], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if len(input) < k {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    var output []int\n    for i := 0; i < k; i++ {\n        output = append([]int{input[i]}, output...)\n    }\n    for i := k; i < len(input); i++ {\n        output = append(output, input[i])\n    }\n    return output\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    // Write your code here\n    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    // Write your code here\n    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        k = len(input)\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k / 2; i++ {\n        input[i], input[k - i - 1] = input[k - i - 1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k < len(input) {\n        for i := 0; i < k/2; i++ {\n            input[i], input[k-i-1] = input[k-i-1], input[i]\n        }\n    } else {\n        for i := 0; i < len(input)/2; i++ {\n            input[i], input[len(input)-i-1] = input[len(input)-i-1], input[i]\n        }\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    // Write your code here\n    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    // Write your code here\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    // Write your code here\n    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    // Write your code here\n    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    // Write your code here\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        k = len(input)\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-1-i] = input[k-1-i], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    // Write your code here\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    // Write your code here\n    if k > len(input) {\n        k = len(input)\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k >= len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    // Write your code here\n    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        k = len(input)\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        k = len(input)\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if len(input) == 0 {\n        return input\n    }\n    if k > len(input) {\n        k = len(input)\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    // Write your code here\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    var output []int\n    for i := 0; i < k; i++ {\n        output = append(output, input[k-i-1])\n    }\n    for i := k; i < len(input); i++ {\n        output = append(output, input[i])\n    }\n    return output\n}\n",
    "    // Write your code here\n    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if len(input) < k {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k / 2; i++ {\n        input[i], input[k - i - 1] = input[k - i - 1], input[i]\n    }\n    return input\n}\n",
    "    // Write your code here\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    // Write your code here\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    // Write your code here\n    if k > len(input) {\n        k = len(input)\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-1-i] = input[k-1-i], input[i]\n    }\n    return input\n}\n",
    "    // Write your code here\n    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        k = len(input)\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    // Write your code here\n    var result []int\n    for i := 0; i < k; i++ {\n        result = append(result, input[k-i-1])\n    }\n    for i := k; i < len(input); i++ {\n        result = append(result, input[i])\n    }\n    return result\n}\n",
    "    // Write your code here\n    if k >= len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    // Write your code here\n    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k >= len(input) {\n        return input\n    }\n    for i := 0; i < k; i++ {\n        input[i], input[k] = input[k], input[i]\n        k--\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    // Write your code here\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    // TODO - Add your code here\n    return nil\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    // Write your code here\n    return input\n}\n",
    "    // Write your code here\n    var output []int\n    for i := 0; i < k; i++ {\n        output = append(output, input[k-i-1])\n    }\n    for i := k; i < len(input); i++ {\n        output = append(output, input[i])\n    }\n    return output\n}\n",
    "    // Write your code here\n    return input\n}\n",
    "    var result []int\n    for i := 0; i < k; i++ {\n        result = append(result, input[k-i-1])\n    }\n    for i := k; i < len(input); i++ {\n        result = append(result, input[i])\n    }\n    return result\n}\n",
    "    if k > len(input) {\n        k = len(input)\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    // TODO - Add your code here\n    return nil\n}\n",
    "    // Write your code here\n    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k / 2; i++ {\n        input[i], input[k - i - 1] = input[k - i - 1], input[i]\n    }\n    return input\n}\n",
    "    if k == 0 {\n        return input\n    }\n    if k == 1 {\n        return input\n    }\n    if k == len(input) {\n        return input\n    }\n    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        k = len(input)\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    // Write your code here\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    // Write your code here\n    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    // Write your code here\n    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        k = len(input)\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    // Write your code here\n    return input\n}\n",
    "    // Write your code here\n    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k <= 0 {\n        return input\n    }\n    if k > len(input) {\n        k = len(input)\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    // Write your code here\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k >= len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    var output []int\n    for i := k-1; i >= 0; i-- {\n        output = append(output, input[i])\n    }\n    for i := k; i < len(input); i++ {\n        output = append(output, input[i])\n    }\n    return output\n}\n",
    "    if len(input) == 0 {\n        return input\n    }\n    if k > len(input) {\n        k = len(input)\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n",
    "    if k > len(input) {\n        return input\n    }\n    for i := 0; i < k/2; i++ {\n        input[i], input[k-i-1] = input[k-i-1], input[i]\n    }\n    return input\n}\n"
  ]
}
{
  "name": "mbpp_770_odd_num_sum",
  "language": "go_test.go",
  "prompt": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_770_odd_num_sum.py",
  "prompt_terminology": "verbatim",
  "tests": "func TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
  "stop_tokens": [
    "\nfunc",
    "struct",
    "\n// "
  ],
  "results": [
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    if n < 1 {\n        return 0\n    }\n    return n*n*n*n + odd_num_sum(n-2)\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpl24t9w00_test.go:31: expected '%!s(int=82)', got '%!s(int=16)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpl24t9w00_test.go:31: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpl24t9w00_test.go:31: expected '%!s(int=3108)', got '%!s(int=272)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 1 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpt_sf8bin_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpt_sf8bin_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpt_sf8bin_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    return n * n * n * n\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpyhifjgwp_test.go:28: expected '%!s(int=82)', got '%!s(int=16)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpyhifjgwp_test.go:28: expected '%!s(int=707)', got '%!s(int=81)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpyhifjgwp_test.go:28: expected '%!s(int=3108)', got '%!s(int=256)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i * i\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpdehto2mx_test.go:32: expected '%!s(int=82)', got '%!s(int=17)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpdehto2mx_test.go:32: expected '%!s(int=707)', got '%!s(int=98)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpdehto2mx_test.go:32: expected '%!s(int=3108)', got '%!s(int=354)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i * i * i\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpd6jht0co_test.go:32: expected '%!s(int=82)', got '%!s(int=17)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpd6jht0co_test.go:32: expected '%!s(int=707)', got '%!s(int=98)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpd6jht0co_test.go:32: expected '%!s(int=3108)', got '%!s(int=354)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 1 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpt_sf8bin_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpt_sf8bin_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpt_sf8bin_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i * i * i\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpd6jht0co_test.go:32: expected '%!s(int=82)', got '%!s(int=17)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpd6jht0co_test.go:32: expected '%!s(int=707)', got '%!s(int=98)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpd6jht0co_test.go:32: expected '%!s(int=3108)', got '%!s(int=354)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i * i * i\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpd6jht0co_test.go:32: expected '%!s(int=82)', got '%!s(int=17)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpd6jht0co_test.go:32: expected '%!s(int=707)', got '%!s(int=98)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpd6jht0co_test.go:32: expected '%!s(int=3108)', got '%!s(int=354)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 1 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpt_sf8bin_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpt_sf8bin_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpt_sf8bin_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 1 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpt_sf8bin_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpt_sf8bin_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpt_sf8bin_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i*i*i*i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122543,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpe4uzk97u_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpe4uzk97u_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpe4uzk97u_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 1 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpt_sf8bin_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpt_sf8bin_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpt_sf8bin_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    return n * n * n * n\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpyhifjgwp_test.go:28: expected '%!s(int=82)', got '%!s(int=16)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpyhifjgwp_test.go:28: expected '%!s(int=707)', got '%!s(int=81)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpyhifjgwp_test.go:28: expected '%!s(int=3108)', got '%!s(int=256)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i * i\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpdehto2mx_test.go:32: expected '%!s(int=82)', got '%!s(int=17)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpdehto2mx_test.go:32: expected '%!s(int=707)', got '%!s(int=98)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpdehto2mx_test.go:32: expected '%!s(int=3108)', got '%!s(int=354)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i * i * i\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpd6jht0co_test.go:32: expected '%!s(int=82)', got '%!s(int=17)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpd6jht0co_test.go:32: expected '%!s(int=707)', got '%!s(int=98)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpd6jht0co_test.go:32: expected '%!s(int=3108)', got '%!s(int=354)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i * i\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122543,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpcglcjq8x_test.go:32: expected '%!s(int=82)', got '%!s(int=17)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpcglcjq8x_test.go:32: expected '%!s(int=707)', got '%!s(int=98)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpcglcjq8x_test.go:32: expected '%!s(int=3108)', got '%!s(int=354)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    if n < 1 {\n        return 0\n    }\n    return n * n * n * n + odd_num_sum(n - 2)\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122543,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp0zow1yaq_test.go:31: expected '%!s(int=82)', got '%!s(int=16)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp0zow1yaq_test.go:31: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp0zow1yaq_test.go:31: expected '%!s(int=3108)', got '%!s(int=272)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i * i * i\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpd6jht0co_test.go:32: expected '%!s(int=82)', got '%!s(int=17)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpd6jht0co_test.go:32: expected '%!s(int=707)', got '%!s(int=98)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpd6jht0co_test.go:32: expected '%!s(int=3108)', got '%!s(int=354)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 1 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpt_sf8bin_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpt_sf8bin_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpt_sf8bin_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i*i*i*i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122543,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpetf6pex7_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpetf6pex7_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpetf6pex7_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    return n * n * n * n\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpyhifjgwp_test.go:28: expected '%!s(int=82)', got '%!s(int=16)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpyhifjgwp_test.go:28: expected '%!s(int=707)', got '%!s(int=81)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpyhifjgwp_test.go:28: expected '%!s(int=3108)', got '%!s(int=256)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    return n * n * n * n\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpyhifjgwp_test.go:28: expected '%!s(int=82)', got '%!s(int=16)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpyhifjgwp_test.go:28: expected '%!s(int=707)', got '%!s(int=81)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpyhifjgwp_test.go:28: expected '%!s(int=3108)', got '%!s(int=256)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i * i * i\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpd6jht0co_test.go:32: expected '%!s(int=82)', got '%!s(int=17)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpd6jht0co_test.go:32: expected '%!s(int=707)', got '%!s(int=98)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpd6jht0co_test.go:32: expected '%!s(int=3108)', got '%!s(int=354)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i * i * i\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpd6jht0co_test.go:32: expected '%!s(int=82)', got '%!s(int=17)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpd6jht0co_test.go:32: expected '%!s(int=707)', got '%!s(int=98)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpd6jht0co_test.go:32: expected '%!s(int=3108)', got '%!s(int=354)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i * i * i\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpd6jht0co_test.go:32: expected '%!s(int=82)', got '%!s(int=17)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpd6jht0co_test.go:32: expected '%!s(int=707)', got '%!s(int=98)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpd6jht0co_test.go:32: expected '%!s(int=3108)', got '%!s(int=354)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    return n * n * n * n\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpyhifjgwp_test.go:28: expected '%!s(int=82)', got '%!s(int=16)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpyhifjgwp_test.go:28: expected '%!s(int=707)', got '%!s(int=81)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpyhifjgwp_test.go:28: expected '%!s(int=3108)', got '%!s(int=256)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i * i\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpdehto2mx_test.go:32: expected '%!s(int=82)', got '%!s(int=17)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpdehto2mx_test.go:32: expected '%!s(int=707)', got '%!s(int=98)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpdehto2mx_test.go:32: expected '%!s(int=3108)', got '%!s(int=354)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i * i\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpdehto2mx_test.go:32: expected '%!s(int=82)', got '%!s(int=17)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpdehto2mx_test.go:32: expected '%!s(int=707)', got '%!s(int=98)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpdehto2mx_test.go:32: expected '%!s(int=3108)', got '%!s(int=354)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i * i * i\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpd6jht0co_test.go:32: expected '%!s(int=82)', got '%!s(int=17)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpd6jht0co_test.go:32: expected '%!s(int=707)', got '%!s(int=98)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpd6jht0co_test.go:32: expected '%!s(int=3108)', got '%!s(int=354)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i * i\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpdehto2mx_test.go:32: expected '%!s(int=82)', got '%!s(int=17)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpdehto2mx_test.go:32: expected '%!s(int=707)', got '%!s(int=98)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpdehto2mx_test.go:32: expected '%!s(int=3108)', got '%!s(int=354)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 1 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122543,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpj6ry3y0a_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpj6ry3y0a_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpj6ry3y0a_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 1 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpt_sf8bin_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpt_sf8bin_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpt_sf8bin_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 1 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122543,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpmi3oy9ea_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpmi3oy9ea_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpmi3oy9ea_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    if n == 0 {\n        return 0\n    }\n    return (2*n-1)*(2*n-1)*(2*n-1)*(2*n-1) + odd_num_sum(n-1)\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122543,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i * i * i\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpd6jht0co_test.go:32: expected '%!s(int=82)', got '%!s(int=17)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpd6jht0co_test.go:32: expected '%!s(int=707)', got '%!s(int=98)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpd6jht0co_test.go:32: expected '%!s(int=3108)', got '%!s(int=354)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i * i * i\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpd6jht0co_test.go:32: expected '%!s(int=82)', got '%!s(int=17)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpd6jht0co_test.go:32: expected '%!s(int=707)', got '%!s(int=98)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpd6jht0co_test.go:32: expected '%!s(int=3108)', got '%!s(int=354)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i < n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122543,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpiipmq0sb_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpiipmq0sb_test.go:34: expected '%!s(int=707)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpiipmq0sb_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i * i * i\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpd6jht0co_test.go:32: expected '%!s(int=82)', got '%!s(int=17)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpd6jht0co_test.go:32: expected '%!s(int=707)', got '%!s(int=98)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpd6jht0co_test.go:32: expected '%!s(int=3108)', got '%!s(int=354)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmplmpvk32u_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpmergyf6v_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 1 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpt_sf8bin_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpt_sf8bin_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpt_sf8bin_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509954,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4rax_94q_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
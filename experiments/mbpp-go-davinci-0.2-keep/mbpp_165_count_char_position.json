{
  "name": "mbpp_165_count_char_position",
  "language": "go_test.go",
  "prompt": "package count_char_position_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nfunc count_char_position(str1 string) int {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_165_count_char_position.py",
  "prompt_terminology": "verbatim",
  "tests": "func TestCount_Char_Position(t *testing.T) {\n  candidate := count_char_position\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"xbcefg\"), expected: 2 },\n     { actual: candidate(\"ABcED\"), expected: 3 },\n     { actual: candidate(\"AbgdeF\"), expected: 5 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
  "stop_tokens": [
    "\nfunc",
    "struct",
    "\n// "
  ],
  "completions": [
    "    var count int\n    for i, char := range str1 {\n        if char >= 'a' && char <= 'z' && i == int(char) - 97 {\n            count++\n        } else if char >= 'A' && char <= 'Z' && i == int(char) - 65 {\n            count++\n        }\n    }\n    return count\n}\n",
    "    var count int\n    for i, v := range str1 {\n        if v >= 'a' && v <= 'z' && v == rune(i + 'a') {\n            count++\n        }\n    }\n    return count\n}\n",
    "    var count int\n    for i, char := range str1 {\n        if char >= 'a' && char <= 'z' && i == int(char - 'a') {\n            count++\n        } else if char >= 'A' && char <= 'Z' && i == int(char - 'A') {\n            count++\n        }\n    }\n    return count\n}\n",
    "    var count int\n    for i, v := range str1 {\n        if v >= 'a' && v <= 'z' {\n            if i == int(v - 'a') {\n                count++\n            }\n        } else if v >= 'A' && v <= 'Z' {\n            if i == int(v - 'A') {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    for i, v := range str1 {\n        if int(v) == 97 + i || int(v) == 65 + i {\n            count++\n        }\n    }\n    return count\n}\n",
    "    var count int\n    for i, c := range str1 {\n        if c >= 'a' && c <= 'z' && c == rune(i + 'a') {\n            count++\n        }\n        if c >= 'A' && c <= 'Z' && c == rune(i + 'A') {\n            count++\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    for i, v := range str1 {\n        if v >= 'a' && v <= 'z' && v == rune(i + 'a') {\n            count++\n        } else if v >= 'A' && v <= 'Z' && v == rune(i + 'A') {\n            count++\n        }\n    }\n    return count\n}\n",
    "    count := 0\n    for i := 0; i < len(str1); i++ {\n        if str1[i] == 'a' - i || str1[i] == 'A' - i {\n            count++\n        }\n    }\n    return count\n}\n",
    "    var count int\n    for i, v := range str1 {\n        if v >= 'a' && v <= 'z' || v >= 'A' && v <= 'Z' {\n            if int(v) == i + 97 || int(v) == i + 65 {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int\n    for i, v := range str1 {\n        if v >= 'a' && v <= 'z' {\n            if i == int(v - 'a') {\n                count++\n            }\n        } else if v >= 'A' && v <= 'Z' {\n            if i == int(v - 'A') {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int\n    for i, c := range str1 {\n        if c >= 'a' && c <= 'z' && c == rune(i + 'a') {\n            count++\n        }\n    }\n    return count\n}\n",
    "    var count int\n    for i, v := range str1 {\n        if v >= 'a' && v <= 'z' {\n            if i == int(v - 'a') {\n                count++\n            }\n        } else if v >= 'A' && v <= 'Z' {\n            if i == int(v - 'A') {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int\n    for i, v := range str1 {\n        if v >= 'a' && v <= 'z' && int(v) == i + 97 {\n            count++\n        }\n    }\n    return count\n}\n",
    "    count := 0\n    for i, v := range str1 {\n        if v >= 'a' && v <= 'z' {\n            if i == int(v - 'a') {\n                count++\n            }\n        } else if v >= 'A' && v <= 'Z' {\n            if i == int(v - 'A') {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int\n    for i, v := range str1 {\n        if v >= 'a' && v <= 'z' && i == int(v - 'a') {\n            count++\n        }\n        if v >= 'A' && v <= 'Z' && i == int(v - 'A') {\n            count++\n        }\n    }\n    return count\n}\n",
    "    var count int\n    for i, c := range str1 {\n        if c >= 'a' && c <= 'z' && c == rune(i+'a') {\n            count++\n        }\n    }\n    return count\n}\n",
    "    var count int = 0\n    for i, v := range str1 {\n        if v >= 'a' && v <= 'z' {\n            if int(v) - 96 == i + 1 {\n                count++\n            }\n        } else if v >= 'A' && v <= 'Z' {\n            if int(v) - 64 == i + 1 {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int\n    for i := 0; i < len(str1); i++ {\n        if str1[i] == 'a' + i || str1[i] == 'A' + i {\n            count++\n        }\n    }\n    return count\n}\n",
    "    count := 0\n    for i, r := range str1 {\n        if r >= 'a' && r <= 'z' && i == int(r - 'a') {\n            count++\n        } else if r >= 'A' && r <= 'Z' && i == int(r - 'A') {\n            count++\n        }\n    }\n    return count\n}\n",
    "    var count int\n    for i, v := range str1 {\n        if v >= 'a' && v <= 'z' && i == int(v - 'a') {\n            count++\n        }\n        if v >= 'A' && v <= 'Z' && i == int(v - 'A') {\n            count++\n        }\n    }\n    return count\n}\n"
  ]
}
{
  "name": "mbpp_63_max_difference",
  "language": "go_test.go",
  "prompt": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given tuple list.\nfunc max_difference(test_list [][]interface{}) int {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_63_max_difference.py",
  "prompt_terminology": "verbatim",
  "tests": "func TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
  "stop_tokens": [
    "\nfunc",
    "struct",
    "\n// "
  ],
  "completions": [
    "    var max_diff int\n    for _, t := range test_list {\n        if t[0].(int) > t[1].(int) {\n            if t[0].(int) - t[1].(int) > max_diff {\n                max_diff = t[0].(int) - t[1].(int)\n            }\n        } else {\n            if t[1].(int) - t[0].(int) > max_diff {\n                max_diff = t[1].(int) - t[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for i := 0; i < len(test_list); i++ {\n        for j := 0; j < len(test_list[i]); j++ {\n            for k := 0; k < len(test_list[i]); k++ {\n                if j != k {\n                    diff := test_list[i][j].(int) - test_list[i][k].(int)\n                    if diff > max_diff {\n                        max_diff = diff\n                    }\n                }\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    max_diff := 0\n    for i := 0; i < len(test_list); i++ {\n        for j := 0; j < len(test_list[i]); j++ {\n            for k := 0; k < len(test_list[i]); k++ {\n                if j != k {\n                    diff := test_list[i][j].(int) - test_list[i][k].(int)\n                    if diff > max_diff {\n                        max_diff = diff\n                    }\n                }\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            if tuple[0].(int) - tuple[1].(int) > max_diff {\n                max_diff = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if tuple[1].(int) - tuple[0].(int) > max_diff {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            if tuple[0].(int) - tuple[1].(int) > max_diff {\n                max_diff = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if tuple[1].(int) - tuple[0].(int) > max_diff {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int = 0\n    for i := 0; i < len(test_list); i++ {\n        for j := i + 1; j < len(test_list); j++ {\n            if test_list[i][0] == test_list[j][0] {\n                if test_list[i][1] > test_list[j][1] {\n                    diff := test_list[i][1].(int) - test_list[j][1].(int)\n                    if diff > max_diff {\n                        max_diff = diff\n                    }\n                } else {\n                    diff := test_list[j][1].(int) - test_list[i][1].(int)\n                    if diff > max_diff {\n                        max_diff = diff\n                    }\n                }\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int = 0\n    var current_diff int = 0\n    var current_max int = 0\n    var current_min int = 0\n    var current_max_index int = 0\n    var current_min_index int = 0\n    var i int = 0\n    var j int = 0\n\n    for i = 0; i < len(test_list); i++ {\n        current_max = test_list[i][0].(int)\n        current_max_index = i\n        for j = i + 1; j < len(test_list); j++ {\n            if test_list[j][0].(int) > current_max {\n                current_max = test_list[j][0].(int)\n                current_max_index = j\n            }\n        }\n        if current_max_index != i {\n            current_min = test_list[i][0].(int)\n            current_min_index = i\n            for j = i + 1; j < current_max_index; j++ {\n                if test_list[j][0].(int) < current_min {\n                    current_min = test_list[j][0].(int)\n                    current_min_index = j\n                }\n            }\n            current_diff = current_max - current_min\n            if current_diff > max_diff {\n                max_diff = current_diff\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for i := 0; i < len(test_list); i++ {\n        for j := 0; j < len(test_list[i]); j++ {\n            for k := 0; k < len(test_list[i]); k++ {\n                if j != k {\n                    diff := test_list[i][j].(int) - test_list[i][k].(int)\n                    if diff > max_diff {\n                        max_diff = diff\n                    }\n                }\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for i := 0; i < len(test_list); i++ {\n        for j := i + 1; j < len(test_list); j++ {\n            if test_list[i][0] == test_list[j][0] {\n                diff := test_list[j][1].(int) - test_list[i][1].(int)\n                if diff > max_diff {\n                    max_diff = diff\n                }\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, pair := range test_list {\n        if pair[0].(int) > pair[1].(int) {\n            if pair[0].(int) - pair[1].(int) > max_diff {\n                max_diff = pair[0].(int) - pair[1].(int)\n            }\n        } else {\n            if pair[1].(int) - pair[0].(int) > max_diff {\n                max_diff = pair[1].(int) - pair[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int = 0\n    for i := 0; i < len(test_list); i++ {\n        for j := 0; j < len(test_list[i]); j++ {\n            for k := 0; k < len(test_list[i]); k++ {\n                if j != k {\n                    if test_list[i][j].(int) - test_list[i][k].(int) > max_diff {\n                        max_diff = test_list[i][j].(int) - test_list[i][k].(int)\n                    }\n                }\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            if tuple[0].(int) - tuple[1].(int) > max_diff {\n                max_diff = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if tuple[1].(int) - tuple[0].(int) > max_diff {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_difference int\n    for _, test_tuple := range test_list {\n        var test_difference int\n        if test_tuple[0].(int) > test_tuple[1].(int) {\n            test_difference = test_tuple[0].(int) - test_tuple[1].(int)\n        } else {\n            test_difference = test_tuple[1].(int) - test_tuple[0].(int)\n        }\n        if test_difference > max_difference {\n            max_difference = test_difference\n        }\n    }\n    return max_difference\n}\n",
    "    var max_diff int\n    for _, tuple := range test_list {\n        diff := tuple[1].(int) - tuple[0].(int)\n        if diff > max_diff {\n            max_diff = diff\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, pair := range test_list {\n        if pair[0].(int) > pair[1].(int) {\n            if pair[0].(int) - pair[1].(int) > max_diff {\n                max_diff = pair[0].(int) - pair[1].(int)\n            }\n        } else {\n            if pair[1].(int) - pair[0].(int) > max_diff {\n                max_diff = pair[1].(int) - pair[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int = 0\n    for _, test := range test_list {\n        if test[0].(int) > test[1].(int) {\n            diff := test[0].(int) - test[1].(int)\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, pair := range test_list {\n        if pair[0].(int) > pair[1].(int) {\n            if pair[0].(int) - pair[1].(int) > max_diff {\n                max_diff = pair[0].(int) - pair[1].(int)\n            }\n        } else {\n            if pair[1].(int) - pair[0].(int) > max_diff {\n                max_diff = pair[1].(int) - pair[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, tuple := range test_list {\n        if len(tuple) != 2 {\n            panic(\"Invalid tuple\")\n        }\n        if tuple[0] == nil || tuple[1] == nil {\n            continue\n        }\n        if tuple[0].(int) > tuple[1].(int) {\n            diff := tuple[0].(int) - tuple[1].(int)\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, tup := range test_list {\n        if len(tup) != 3 {\n            panic(\"tuple must be of length 3\")\n        }\n        if tup[0].(int) > tup[1].(int) {\n            panic(\"first element must be less than second element\")\n        }\n        if tup[2].(int) > max_diff {\n            max_diff = tup[2].(int)\n        }\n    }\n    return max_diff\n}\n",
    "    max_diff := 0\n    for _, tup := range test_list {\n        if tup[0] != tup[1] {\n            diff := tup[1].(int) - tup[0].(int)\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            diff := tuple[0].(int) - tuple[1].(int)\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            if tuple[0].(int) - tuple[1].(int) > max_diff {\n                max_diff = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if tuple[1].(int) - tuple[0].(int) > max_diff {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            if tuple[0].(int) - tuple[1].(int) > max_diff {\n                max_diff = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if tuple[1].(int) - tuple[0].(int) > max_diff {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, item := range test_list {\n        if item[0].(int) > item[1].(int) {\n            if item[0].(int) - item[1].(int) > max_diff {\n                max_diff = item[0].(int) - item[1].(int)\n            }\n        } else {\n            if item[1].(int) - item[0].(int) > max_diff {\n                max_diff = item[1].(int) - item[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            if max_diff < tuple[0].(int) - tuple[1].(int) {\n                max_diff = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if max_diff < tuple[1].(int) - tuple[0].(int) {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, pair := range test_list {\n        if pair[0].(int) > pair[1].(int) {\n            if pair[0].(int) - pair[1].(int) > max_diff {\n                max_diff = pair[0].(int) - pair[1].(int)\n            }\n        } else {\n            if pair[1].(int) - pair[0].(int) > max_diff {\n                max_diff = pair[1].(int) - pair[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    max_diff := 0\n    for _, pair := range test_list {\n        if pair[0].(int) > pair[1].(int) {\n            diff := pair[0].(int) - pair[1].(int)\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            if tuple[0].(int) - tuple[1].(int) > max_diff {\n                max_diff = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if tuple[1].(int) - tuple[0].(int) > max_diff {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, tuple := range test_list {\n        if len(tuple) != 2 {\n            panic(\"Tuple length is not 2\")\n        }\n        if tuple[0].(int) > tuple[1].(int) {\n            diff := tuple[0].(int) - tuple[1].(int)\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for i := 0; i < len(test_list); i++ {\n        for j := 0; j < len(test_list[i]); j++ {\n            for k := 0; k < len(test_list[i]); k++ {\n                if j != k {\n                    if test_list[i][j].(int) - test_list[i][k].(int) > max_diff {\n                        max_diff = test_list[i][j].(int) - test_list[i][k].(int)\n                    }\n                }\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for i := 0; i < len(test_list); i++ {\n        for j := 0; j < len(test_list[i]); j++ {\n            for k := 0; k < len(test_list[i]); k++ {\n                if j != k {\n                    diff := test_list[i][j].(int) - test_list[i][k].(int)\n                    if diff > max_diff {\n                        max_diff = diff\n                    }\n                }\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    var max_diff_pair []interface{}\n\n    for _, pair := range test_list {\n        if pair[0].(int) > pair[1].(int) {\n            if pair[0].(int) - pair[1].(int) > max_diff {\n                max_diff = pair[0].(int) - pair[1].(int)\n                max_diff_pair = pair\n            }\n        } else {\n            if pair[1].(int) - pair[0].(int) > max_diff {\n                max_diff = pair[1].(int) - pair[0].(int)\n                max_diff_pair = pair\n            }\n        }\n    }\n\n    fmt.Println(max_diff_pair)\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            if max_diff < tuple[0].(int) - tuple[1].(int) {\n                max_diff = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if max_diff < tuple[1].(int) - tuple[0].(int) {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[1].(int) - tuple[0].(int) > max_diff {\n            max_diff = tuple[1].(int) - tuple[0].(int)\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, tuple := range test_list {\n        var diff int\n        if tuple[0].(int) > tuple[1].(int) {\n            diff = tuple[0].(int) - tuple[1].(int)\n        } else {\n            diff = tuple[1].(int) - tuple[0].(int)\n        }\n        if diff > max_diff {\n            max_diff = diff\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    var max_diff_pair []interface{}\n    for _, pair := range test_list {\n        if pair[0].(int) > pair[1].(int) {\n            diff := pair[0].(int) - pair[1].(int)\n            if diff > max_diff {\n                max_diff = diff\n                max_diff_pair = pair\n            }\n        }\n    }\n    fmt.Println(max_diff_pair)\n    return max_diff\n}\n",
    "    var max_diff int\n    for i := 0; i < len(test_list); i++ {\n        for j := i + 1; j < len(test_list); j++ {\n            if test_list[i][0] != test_list[j][0] {\n                diff := test_list[j][1].(int) - test_list[i][1].(int)\n                if diff > max_diff {\n                    max_diff = diff\n                }\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, tuple := range test_list {\n        if len(tuple) != 2 {\n            panic(\"Tuple length is not 2\")\n        }\n        if tuple[0].(int) > tuple[1].(int) {\n            diff := tuple[0].(int) - tuple[1].(int)\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int = 0\n    for i := 0; i < len(test_list); i++ {\n        for j := 0; j < len(test_list[i]); j++ {\n            for k := 0; k < len(test_list[i]); k++ {\n                if j != k {\n                    if test_list[i][j].(int) - test_list[i][k].(int) > max_diff {\n                        max_diff = test_list[i][j].(int) - test_list[i][k].(int)\n                    }\n                }\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) < tuple[1].(int) {\n            if tuple[1].(int) - tuple[0].(int) > max_diff {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            if tuple[0].(int) - tuple[1].(int) > max_diff {\n                max_diff = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if tuple[1].(int) - tuple[0].(int) > max_diff {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for i := 0; i < len(test_list); i++ {\n        for j := i + 1; j < len(test_list); j++ {\n            if test_list[i][0] != test_list[j][0] {\n                diff := test_list[j][1].(int) - test_list[i][1].(int)\n                if diff > max_diff {\n                    max_diff = diff\n                }\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, test_tuple := range test_list {\n        if test_tuple[0].(int) > test_tuple[1].(int) {\n            if max_diff < test_tuple[0].(int) - test_tuple[1].(int) {\n                max_diff = test_tuple[0].(int) - test_tuple[1].(int)\n            }\n        } else {\n            if max_diff < test_tuple[1].(int) - test_tuple[0].(int) {\n                max_diff = test_tuple[1].(int) - test_tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            if tuple[0].(int) - tuple[1].(int) > max_diff {\n                max_diff = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if tuple[1].(int) - tuple[0].(int) > max_diff {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            diff := tuple[0].(int) - tuple[1].(int)\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, tuple := range test_list {\n        if len(tuple) != 2 {\n            panic(\"Invalid tuple length\")\n        }\n        if tuple[0] == nil || tuple[1] == nil {\n            continue\n        }\n        if tuple[0].(int) > tuple[1].(int) {\n            diff := tuple[0].(int) - tuple[1].(int)\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int = 0\n    for _, tuple := range test_list {\n        var diff int = tuple[1].(int) - tuple[0].(int)\n        if diff > max_diff {\n            max_diff = diff\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for i := 0; i < len(test_list); i++ {\n        for j := i + 1; j < len(test_list); j++ {\n            if test_list[i][0] != test_list[j][0] {\n                diff := test_list[j][1].(int) - test_list[i][1].(int)\n                if diff > max_diff {\n                    max_diff = diff\n                }\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, tuple := range test_list {\n        var diff int\n        if tuple[0].(int) > tuple[1].(int) {\n            diff = tuple[0].(int) - tuple[1].(int)\n        } else {\n            diff = tuple[1].(int) - tuple[0].(int)\n        }\n        if diff > max_diff {\n            max_diff = diff\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, pair := range test_list {\n        if pair[0].(int) > pair[1].(int) {\n            if pair[0].(int) - pair[1].(int) > max_diff {\n                max_diff = pair[0].(int) - pair[1].(int)\n            }\n        } else {\n            if pair[1].(int) - pair[0].(int) > max_diff {\n                max_diff = pair[1].(int) - pair[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            if tuple[0].(int) - tuple[1].(int) > max_diff {\n                max_diff = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if tuple[1].(int) - tuple[0].(int) > max_diff {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            if tuple[0].(int) - tuple[1].(int) > max_diff {\n                max_diff = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if tuple[1].(int) - tuple[0].(int) > max_diff {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, tuple := range test_list {\n        diff := tuple[1].(int) - tuple[0].(int)\n        if diff > max_diff {\n            max_diff = diff\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            if tuple[0].(int) - tuple[1].(int) > max_diff {\n                max_diff = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if tuple[1].(int) - tuple[0].(int) > max_diff {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            if tuple[0].(int) - tuple[1].(int) > max_diff {\n                max_diff = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if tuple[1].(int) - tuple[0].(int) > max_diff {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int = 0\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            diff := tuple[0].(int) - tuple[1].(int)\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for i := 0; i < len(test_list); i++ {\n        for j := i+1; j < len(test_list); j++ {\n            if test_list[i][0] != test_list[j][0] {\n                diff := test_list[j][1].(int) - test_list[i][1].(int)\n                if diff > max_diff {\n                    max_diff = diff\n                }\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            if tuple[0].(int) - tuple[1].(int) > max_diff {\n                max_diff = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if tuple[1].(int) - tuple[0].(int) > max_diff {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, tup := range test_list {\n        if len(tup) != 2 {\n            panic(\"Invalid tuple\")\n        }\n        if tup[0].(int) > tup[1].(int) {\n            diff := tup[0].(int) - tup[1].(int)\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            diff := tuple[0].(int) - tuple[1].(int)\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, tuple := range test_list {\n        var diff int\n        if tuple[0].(int) > tuple[1].(int) {\n            diff = tuple[0].(int) - tuple[1].(int)\n        } else {\n            diff = tuple[1].(int) - tuple[0].(int)\n        }\n        if diff > max_diff {\n            max_diff = diff\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            if tuple[0].(int) - tuple[1].(int) > max_diff {\n                max_diff = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if tuple[1].(int) - tuple[0].(int) > max_diff {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            if tuple[0].(int) - tuple[1].(int) > max_diff {\n                max_diff = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if tuple[1].(int) - tuple[0].(int) > max_diff {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, test := range test_list {\n        if test[0].(int) > test[1].(int) {\n            if test[0].(int) - test[1].(int) > max_diff {\n                max_diff = test[0].(int) - test[1].(int)\n            }\n        } else {\n            if test[1].(int) - test[0].(int) > max_diff {\n                max_diff = test[1].(int) - test[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, tup := range test_list {\n        if tup[0].(int) > tup[1].(int) {\n            if tup[0].(int) - tup[1].(int) > max_diff {\n                max_diff = tup[0].(int) - tup[1].(int)\n            }\n        } else {\n            if tup[1].(int) - tup[0].(int) > max_diff {\n                max_diff = tup[1].(int) - tup[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, t := range test_list {\n        if t[0].(int) > t[1].(int) {\n            if t[0].(int) - t[1].(int) > max_diff {\n                max_diff = t[0].(int) - t[1].(int)\n            }\n        } else {\n            if t[1].(int) - t[0].(int) > max_diff {\n                max_diff = t[1].(int) - t[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, test := range test_list {\n        if test[0].(int) > test[1].(int) {\n            if test[0].(int) - test[1].(int) > max_diff {\n                max_diff = test[0].(int) - test[1].(int)\n            }\n        } else {\n            if test[1].(int) - test[0].(int) > max_diff {\n                max_diff = test[1].(int) - test[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, pair := range test_list {\n        if pair[0].(int) > pair[1].(int) {\n            if pair[0].(int) - pair[1].(int) > max_diff {\n                max_diff = pair[0].(int) - pair[1].(int)\n            }\n        } else {\n            if pair[1].(int) - pair[0].(int) > max_diff {\n                max_diff = pair[1].(int) - pair[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            diff := tuple[0].(int) - tuple[1].(int)\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int = 0\n    for i := 0; i < len(test_list); i++ {\n        for j := i + 1; j < len(test_list); j++ {\n            if test_list[j][0].(int) - test_list[i][1].(int) > max_diff {\n                max_diff = test_list[j][0].(int) - test_list[i][1].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            if tuple[0].(int) - tuple[1].(int) > max_diff {\n                max_diff = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if tuple[1].(int) - tuple[0].(int) > max_diff {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, pair := range test_list {\n        if pair[0].(int) > pair[1].(int) {\n            if pair[0].(int) - pair[1].(int) > max_diff {\n                max_diff = pair[0].(int) - pair[1].(int)\n            }\n        } else {\n            if pair[1].(int) - pair[0].(int) > max_diff {\n                max_diff = pair[1].(int) - pair[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int = 0\n    for i := 0; i < len(test_list); i++ {\n        for j := i + 1; j < len(test_list); j++ {\n            if test_list[i][0] != test_list[j][0] {\n                diff := test_list[j][1].(int) - test_list[i][1].(int)\n                if diff > max_diff {\n                    max_diff = diff\n                }\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            if tuple[0].(int) - tuple[1].(int) > max_diff {\n                max_diff = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if tuple[1].(int) - tuple[0].(int) > max_diff {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, test := range test_list {\n        var diff int\n        if test[0].(int) > test[1].(int) {\n            diff = test[0].(int) - test[1].(int)\n        } else {\n            diff = test[1].(int) - test[0].(int)\n        }\n        if diff > max_diff {\n            max_diff = diff\n        }\n    }\n    return max_diff\n}\n",
    "    var max_difference int = 0\n    for _, tuple := range test_list {\n        for _, value := range tuple {\n            if value.(int) > max_difference {\n                max_difference = value.(int)\n            }\n        }\n    }\n    return max_difference\n}\n",
    "    var max_diff int\n    for _, pair := range test_list {\n        if pair[0].(int) > pair[1].(int) {\n            if pair[0].(int) - pair[1].(int) > max_diff {\n                max_diff = pair[0].(int) - pair[1].(int)\n            }\n        } else {\n            if pair[1].(int) - pair[0].(int) > max_diff {\n                max_diff = pair[1].(int) - pair[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, tuple := range test_list {\n        diff := tuple[1].(int) - tuple[0].(int)\n        if diff > max_diff {\n            max_diff = diff\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            if max_diff < tuple[0].(int) - tuple[1].(int) {\n                max_diff = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if max_diff < tuple[1].(int) - tuple[0].(int) {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, tup := range test_list {\n        if tup[0].(int) > tup[1].(int) {\n            if tup[0].(int) - tup[1].(int) > max_diff {\n                max_diff = tup[0].(int) - tup[1].(int)\n            }\n        } else {\n            if tup[1].(int) - tup[0].(int) > max_diff {\n                max_diff = tup[1].(int) - tup[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, pair := range test_list {\n        if pair[0].(int) > pair[1].(int) {\n            if pair[0].(int) - pair[1].(int) > max_diff {\n                max_diff = pair[0].(int) - pair[1].(int)\n            }\n        } else {\n            if pair[1].(int) - pair[0].(int) > max_diff {\n                max_diff = pair[1].(int) - pair[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            if tuple[0].(int) - tuple[1].(int) > max_diff {\n                max_diff = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if tuple[1].(int) - tuple[0].(int) > max_diff {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    max_diff := 0\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            diff := tuple[0].(int) - tuple[1].(int)\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, test_case := range test_list {\n        if len(test_case) != 2 {\n            fmt.Println(\"Invalid test case:\", test_case)\n            continue\n        }\n        if test_case[0] == nil || test_case[1] == nil {\n            fmt.Println(\"Invalid test case:\", test_case)\n            continue\n        }\n        if test_case[0].(int) > test_case[1].(int) {\n            diff := test_case[0].(int) - test_case[1].(int)\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, tuple := range test_list {\n        if len(tuple) != 2 {\n            continue\n        }\n        var diff int\n        switch tuple[0].(type) {\n        case int:\n            diff = tuple[0].(int) - tuple[1].(int)\n        case float64:\n            diff = int(tuple[0].(float64) - tuple[1].(float64))\n        }\n        if diff < 0 {\n            diff = -diff\n        }\n        if diff > max_diff {\n            max_diff = diff\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int = 0\n    for i := 0; i < len(test_list); i++ {\n        for j := i + 1; j < len(test_list); j++ {\n            if test_list[i][0] != test_list[j][0] {\n                if test_list[i][1] != test_list[j][1] {\n                    if test_list[i][2] != test_list[j][2] {\n                        if test_list[i][3] != test_list[j][3] {\n                            if test_list[i][4] != test_list[j][4] {\n                                if test_list[i][5] != test_list[j][5] {\n                                    if test_list[i][6] != test_list[j][6] {\n                                        if test_list[i][7] != test_list[j][7] {\n                                            if test_list[i][8] != test_list[j][8] {\n                                                if test_list[i][9] != test_list[j][9] {\n                                                    if test_list[i][10] != test_list[j][10] {\n                                                        if test_list[i][11] != test_list[j][11] {\n                                                            if test_list[i][12] != test_list[j][12] {\n                                                                if test_list[i][13] != test_list[j][13] {\n                                                                    if test_list[i][14] != test_list[j][14] {\n                                                                        if test_list[i][15] != test_list[j][15] {\n                                                                            if test_list[i][16] != test_list[j][16] {\n                                                                                if test_list[i][17] != test_list[j][17] {\n                                                                                    if test_list[i][18] != test_list[j][18] {\n                                                                                        if test_list[i][19] != test_list[j][19] {\n                                                                ",
    "    var max_diff int\n    for _, pair := range test_list {\n        if pair[0].(int) > pair[1].(int) {\n            if pair[0].(int) - pair[1].(int) > max_diff {\n                max_diff = pair[0].(int) - pair[1].(int)\n            }\n        } else {\n            if pair[1].(int) - pair[0].(int) > max_diff {\n                max_diff = pair[1].(int) - pair[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) < tuple[1].(int) {\n            diff := tuple[1].(int) - tuple[0].(int)\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, tuple := range test_list {\n        if len(tuple) != 2 {\n            panic(\"Tuple must have exactly 2 elements\")\n        }\n        if tuple[0].(int) > tuple[1].(int) {\n            diff := tuple[0].(int) - tuple[1].(int)\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, tup := range test_list {\n        if len(tup) != 2 {\n            panic(\"Invalid tuple length\")\n        }\n        if tup[0].(int) > tup[1].(int) {\n            diff := tup[0].(int) - tup[1].(int)\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, tuple := range test_list {\n        if len(tuple) != 2 {\n            panic(\"Invalid tuple\")\n        }\n        diff := tuple[1].(int) - tuple[0].(int)\n        if diff > max_diff {\n            max_diff = diff\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, t := range test_list {\n        if len(t) != 2 {\n            continue\n        }\n        switch t[0].(type) {\n        case int:\n            diff := t[0].(int) - t[1].(int)\n            if diff > max_diff {\n                max_diff = diff\n            }\n        case float64:\n            diff := t[0].(float64) - t[1].(float64)\n            if diff > float64(max_diff) {\n                max_diff = int(diff)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, test := range test_list {\n        if test[0].(int) > test[1].(int) {\n            if test[0].(int) - test[1].(int) > max_diff {\n                max_diff = test[0].(int) - test[1].(int)\n            }\n        } else {\n            if test[1].(int) - test[0].(int) > max_diff {\n                max_diff = test[1].(int) - test[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    max_diff := 0\n    for _, t := range test_list {\n        if t[0].(int) > t[1].(int) {\n            if t[0].(int) - t[1].(int) > max_diff {\n                max_diff = t[0].(int) - t[1].(int)\n            }\n        } else {\n            if t[1].(int) - t[0].(int) > max_diff {\n                max_diff = t[1].(int) - t[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for i := 0; i < len(test_list); i++ {\n        for j := i + 1; j < len(test_list); j++ {\n            if test_list[i][0] == test_list[j][0] {\n                diff := test_list[j][1].(int) - test_list[i][1].(int)\n                if diff > max_diff {\n                    max_diff = diff\n                }\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for i := 0; i < len(test_list); i++ {\n        for j := i + 1; j < len(test_list); j++ {\n            if test_list[i][0] != test_list[j][0] {\n                diff := test_list[j][1].(int) - test_list[i][1].(int)\n                if diff > max_diff {\n                    max_diff = diff\n                }\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int = 0\n    for i := 0; i < len(test_list); i++ {\n        for j := 0; j < len(test_list[i]); j++ {\n            for k := 0; k < len(test_list[i]); k++ {\n                if j != k {\n                    diff := test_list[i][j].(int) - test_list[i][k].(int)\n                    if diff > max_diff {\n                        max_diff = diff\n                    }\n                }\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, pair := range test_list {\n        if pair[0].(int) > pair[1].(int) {\n            if pair[0].(int) - pair[1].(int) > max_diff {\n                max_diff = pair[0].(int) - pair[1].(int)\n            }\n        } else {\n            if pair[1].(int) - pair[0].(int) > max_diff {\n                max_diff = pair[1].(int) - pair[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            diff := tuple[0].(int) - tuple[1].(int)\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, pair := range test_list {\n        if pair[0].(int) > pair[1].(int) {\n            if pair[0].(int) - pair[1].(int) > max_diff {\n                max_diff = pair[0].(int) - pair[1].(int)\n            }\n        } else {\n            if pair[1].(int) - pair[0].(int) > max_diff {\n                max_diff = pair[1].(int) - pair[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    max_diff := 0\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            if tuple[0].(int) - tuple[1].(int) > max_diff {\n                max_diff = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if tuple[1].(int) - tuple[0].(int) > max_diff {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for i := 0; i < len(test_list); i++ {\n        for j := i + 1; j < len(test_list); j++ {\n            if test_list[i][0] == test_list[j][0] {\n                if test_list[i][1] > test_list[j][1] {\n                    diff := test_list[i][1].(int) - test_list[j][1].(int)\n                    if diff > max_diff {\n                        max_diff = diff\n                    }\n                } else {\n                    diff := test_list[j][1].(int) - test_list[i][1].(int)\n                    if diff > max_diff {\n                        max_diff = diff\n                    }\n                }\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            if tuple[0].(int) - tuple[1].(int) > max_diff {\n                max_diff = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if tuple[1].(int) - tuple[0].(int) > max_diff {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int = 0\n    for i := 0; i < len(test_list); i++ {\n        for j := 0; j < len(test_list[i]); j++ {\n            for k := 0; k < len(test_list[i]); k++ {\n                if j != k {\n                    if test_list[i][j].(int) - test_list[i][k].(int) > max_diff {\n                        max_diff = test_list[i][j].(int) - test_list[i][k].(int)\n                    }\n                }\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, tup := range test_list {\n        if tup[0].(int) > tup[1].(int) {\n            if tup[0].(int) - tup[1].(int) > max_diff {\n                max_diff = tup[0].(int) - tup[1].(int)\n            }\n        } else {\n            if tup[1].(int) - tup[0].(int) > max_diff {\n                max_diff = tup[1].(int) - tup[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) < tuple[1].(int) {\n            diff := tuple[1].(int) - tuple[0].(int)\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, pair := range test_list {\n        if pair[0].(int) > pair[1].(int) {\n            if pair[0].(int) - pair[1].(int) > max_diff {\n                max_diff = pair[0].(int) - pair[1].(int)\n            }\n        } else {\n            if pair[1].(int) - pair[0].(int) > max_diff {\n                max_diff = pair[1].(int) - pair[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, item := range test_list {\n        if item[0].(int) > item[1].(int) {\n            if item[0].(int) - item[1].(int) > max_diff {\n                max_diff = item[0].(int) - item[1].(int)\n            }\n        } else {\n            if item[1].(int) - item[0].(int) > max_diff {\n                max_diff = item[1].(int) - item[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, test := range test_list {\n        if len(test) != 2 {\n            continue\n        }\n        if test[0] == nil || test[1] == nil {\n            continue\n        }\n        if test[0].(int) > test[1].(int) {\n            continue\n        }\n        diff := test[1].(int) - test[0].(int)\n        if diff > max_diff {\n            max_diff = diff\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            diff := tuple[0].(int) - tuple[1].(int)\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int = 0\n    for _, tuple := range test_list {\n        var diff int = tuple[1].(int) - tuple[0].(int)\n        if diff > max_diff {\n            max_diff = diff\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            if tuple[0].(int) - tuple[1].(int) > max_diff {\n                max_diff = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if tuple[1].(int) - tuple[0].(int) > max_diff {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, tup := range test_list {\n        if tup[1].(int) - tup[0].(int) > max_diff {\n            max_diff = tup[1].(int) - tup[0].(int)\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, tuple := range test_list {\n        if len(tuple) != 2 {\n            panic(\"Invalid tuple\")\n        }\n        if tuple[0] == nil || tuple[1] == nil {\n            continue\n        }\n        if tuple[0].(int) > tuple[1].(int) {\n            if tuple[0].(int) - tuple[1].(int) > max_diff {\n                max_diff = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if tuple[1].(int) - tuple[0].(int) > max_diff {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int = 0\n    var diff int = 0\n    for _, tuple := range test_list {\n        diff = tuple[1].(int) - tuple[0].(int)\n        if diff > max_diff {\n            max_diff = diff\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, test_tuple := range test_list {\n        if len(test_tuple) != 2 {\n            panic(\"Invalid test tuple\")\n        }\n        var test_diff int\n        switch test_tuple[0].(type) {\n        case int:\n            test_diff = test_tuple[0].(int) - test_tuple[1].(int)\n        case float64:\n            test_diff = int(test_tuple[0].(float64) - test_tuple[1].(float64))\n        default:\n            panic(\"Invalid test tuple\")\n        }\n        if test_diff > max_diff {\n            max_diff = test_diff\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, t := range test_list {\n        if len(t) != 2 {\n            panic(\"Invalid tuple length\")\n        }\n        if t[0] == nil || t[1] == nil {\n            panic(\"Invalid tuple value\")\n        }\n        diff := t[1].(int) - t[0].(int)\n        if diff > max_diff {\n            max_diff = diff\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            if tuple[0].(int) - tuple[1].(int) > max_diff {\n                max_diff = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if tuple[1].(int) - tuple[0].(int) > max_diff {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            if tuple[0].(int) - tuple[1].(int) > max_diff {\n                max_diff = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if tuple[1].(int) - tuple[0].(int) > max_diff {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, item := range test_list {\n        if item[0].(int) > item[1].(int) {\n            if item[0].(int) - item[1].(int) > max_diff {\n                max_diff = item[0].(int) - item[1].(int)\n            }\n        } else {\n            if item[1].(int) - item[0].(int) > max_diff {\n                max_diff = item[1].(int) - item[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, pair := range test_list {\n        diff := pair[1].(int) - pair[0].(int)\n        if diff > max_diff {\n            max_diff = diff\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, tup := range test_list {\n        if tup[0].(int) > tup[1].(int) {\n            if tup[0].(int) - tup[1].(int) > max_diff {\n                max_diff = tup[0].(int) - tup[1].(int)\n            }\n        } else {\n            if tup[1].(int) - tup[0].(int) > max_diff {\n                max_diff = tup[1].(int) - tup[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int = 0\n    for _, test_pair := range test_list {\n        if test_pair[0].(int) > test_pair[1].(int) {\n            if test_pair[0].(int) - test_pair[1].(int) > max_diff {\n                max_diff = test_pair[0].(int) - test_pair[1].(int)\n            }\n        } else {\n            if test_pair[1].(int) - test_pair[0].(int) > max_diff {\n                max_diff = test_pair[1].(int) - test_pair[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, tup := range test_list {\n        for i := 0; i < len(tup); i++ {\n            for j := i + 1; j < len(tup); j++ {\n                if tup[i].(int) > tup[j].(int) {\n                    if tup[i].(int) - tup[j].(int) > max_diff {\n                        max_diff = tup[i].(int) - tup[j].(int)\n                    }\n                } else {\n                    if tup[j].(int) - tup[i].(int) > max_diff {\n                        max_diff = tup[j].(int) - tup[i].(int)\n                    }\n                }\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, tuple := range test_list {\n        if len(tuple) != 2 {\n            panic(\"Invalid tuple\")\n        }\n        if tuple[0].(int) > tuple[1].(int) {\n            diff := tuple[0].(int) - tuple[1].(int)\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    max_diff := 0\n    for _, tuple := range test_list {\n        diff := tuple[1].(int) - tuple[0].(int)\n        if diff > max_diff {\n            max_diff = diff\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int = 0\n    for i := 0; i < len(test_list); i++ {\n        for j := 0; j < len(test_list[i]); j++ {\n            for k := 0; k < len(test_list[i]); k++ {\n                if j != k {\n                    if test_list[i][j].(int) - test_list[i][k].(int) > max_diff {\n                        max_diff = test_list[i][j].(int) - test_list[i][k].(int)\n                    }\n                }\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, pair := range test_list {\n        if pair[0].(int) > pair[1].(int) {\n            if pair[0].(int) - pair[1].(int) > max_diff {\n                max_diff = pair[0].(int) - pair[1].(int)\n            }\n        } else {\n            if pair[1].(int) - pair[0].(int) > max_diff {\n                max_diff = pair[1].(int) - pair[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int = 0\n    for _, tup := range test_list {\n        if len(tup) != 2 {\n            panic(\"Invalid tuple length\")\n        }\n        if tup[0].(int) > tup[1].(int) {\n            diff := tup[0].(int) - tup[1].(int)\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, tup := range test_list {\n        if len(tup) != 2 {\n            panic(\"Invalid tuple length\")\n        }\n        if tup[0].(int) > tup[1].(int) {\n            diff := tup[0].(int) - tup[1].(int)\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            if max_diff < tuple[0].(int) - tuple[1].(int) {\n                max_diff = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if max_diff < tuple[1].(int) - tuple[0].(int) {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for i := 0; i < len(test_list); i++ {\n        for j := i + 1; j < len(test_list); j++ {\n            if test_list[i][0] == test_list[j][0] {\n                if test_list[i][1].(int) - test_list[j][1].(int) > max_diff {\n                    max_diff = test_list[i][1].(int) - test_list[j][1].(int)\n                }\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            if tuple[0].(int) - tuple[1].(int) > max_diff {\n                max_diff = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if tuple[1].(int) - tuple[0].(int) > max_diff {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    max_diff := 0\n    for _, test_tuple := range test_list {\n        if len(test_tuple) != 2 {\n            panic(\"Invalid test tuple\")\n        }\n        test_diff := test_tuple[0].(int) - test_tuple[1].(int)\n        if test_diff > max_diff {\n            max_diff = test_diff\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, pair := range test_list {\n        if pair[0].(int) > pair[1].(int) {\n            diff := pair[0].(int) - pair[1].(int)\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    max_diff := 0\n    for _, pair := range test_list {\n        if pair[0].(int) > pair[1].(int) {\n            diff := pair[0].(int) - pair[1].(int)\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, test_tuple := range test_list {\n        if test_tuple[0].(int) > test_tuple[1].(int) {\n            if test_tuple[0].(int) - test_tuple[1].(int) > max_diff {\n                max_diff = test_tuple[0].(int) - test_tuple[1].(int)\n            }\n        } else {\n            if test_tuple[1].(int) - test_tuple[0].(int) > max_diff {\n                max_diff = test_tuple[1].(int) - test_tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, tuple := range test_list {\n        if len(tuple) != 2 {\n            panic(\"Invalid tuple\")\n        }\n        if tuple[0].(int) > tuple[1].(int) {\n            diff := tuple[0].(int) - tuple[1].(int)\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for i := 0; i < len(test_list); i++ {\n        for j := 0; j < len(test_list[i]); j++ {\n            for k := j + 1; k < len(test_list[i]); k++ {\n                if test_list[i][j].(int) > test_list[i][k].(int) {\n                    if test_list[i][j].(int) - test_list[i][k].(int) > max_diff {\n                        max_diff = test_list[i][j].(int) - test_list[i][k].(int)\n                    }\n                } else {\n                    if test_list[i][k].(int) - test_list[i][j].(int) > max_diff {\n                        max_diff = test_list[i][k].(int) - test_list[i][j].(int)\n                    }\n                }\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, pair := range test_list {\n        if pair[0].(int) > pair[1].(int) {\n            if pair[0].(int) - pair[1].(int) > max_diff {\n                max_diff = pair[0].(int) - pair[1].(int)\n            }\n        } else {\n            if pair[1].(int) - pair[0].(int) > max_diff {\n                max_diff = pair[1].(int) - pair[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for i := 0; i < len(test_list); i++ {\n        for j := 0; j < len(test_list[i]); j++ {\n            for k := 0; k < len(test_list[i]); k++ {\n                if test_list[i][j].(int) - test_list[i][k].(int) > max_diff {\n                    max_diff = test_list[i][j].(int) - test_list[i][k].(int)\n                }\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, pair := range test_list {\n        if pair[0].(int) > pair[1].(int) {\n            diff := pair[0].(int) - pair[1].(int)\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int = 0\n    for i := 0; i < len(test_list); i++ {\n        for j := i + 1; j < len(test_list); j++ {\n            if test_list[i][0] == test_list[j][0] {\n                if test_list[i][1] != test_list[j][1] {\n                    diff := test_list[j][1].(int) - test_list[i][1].(int)\n                    if diff > max_diff {\n                        max_diff = diff\n                    }\n                }\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            if tuple[0].(int) - tuple[1].(int) > max_diff {\n                max_diff = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if tuple[1].(int) - tuple[0].(int) > max_diff {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, tuple := range test_list {\n        for _, value := range tuple {\n            if value.(int) > max_diff {\n                max_diff = value.(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for i := 0; i < len(test_list); i++ {\n        for j := i + 1; j < len(test_list); j++ {\n            if test_list[i][0] == test_list[j][0] {\n                diff := test_list[j][1].(int) - test_list[i][1].(int)\n                if diff > max_diff {\n                    max_diff = diff\n                }\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, item := range test_list {\n        if item[1].(int) - item[0].(int) > max_diff {\n            max_diff = item[1].(int) - item[0].(int)\n        }\n    }\n    return max_diff\n}\n",
    "    max_diff := 0\n    for _, test := range test_list {\n        if test[0].(int) > test[1].(int) {\n            if test[0].(int) - test[1].(int) > max_diff {\n                max_diff = test[0].(int) - test[1].(int)\n            }\n        } else {\n            if test[1].(int) - test[0].(int) > max_diff {\n                max_diff = test[1].(int) - test[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            if tuple[0].(int) - tuple[1].(int) > max_diff {\n                max_diff = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if tuple[1].(int) - tuple[0].(int) > max_diff {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for i := 0; i < len(test_list); i++ {\n        for j := 0; j < len(test_list[i]); j++ {\n            for k := j + 1; k < len(test_list[i]); k++ {\n                if test_list[i][j].(int) > test_list[i][k].(int) {\n                    if max_diff < test_list[i][j].(int) - test_list[i][k].(int) {\n                        max_diff = test_list[i][j].(int) - test_list[i][k].(int)\n                    }\n                } else {\n                    if max_diff < test_list[i][k].(int) - test_list[i][j].(int) {\n                        max_diff = test_list[i][k].(int) - test_list[i][j].(int)\n                    }\n                }\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int = 0\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            diff := tuple[0].(int) - tuple[1].(int)\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, pair := range test_list {\n        diff := pair[1].(int) - pair[0].(int)\n        if diff > max_diff {\n            max_diff = diff\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for i := 0; i < len(test_list); i++ {\n        for j := 0; j < len(test_list[i]); j++ {\n            for k := 0; k < len(test_list[i]); k++ {\n                if j != k {\n                    diff := test_list[i][j].(int) - test_list[i][k].(int)\n                    if diff > max_diff {\n                        max_diff = diff\n                    }\n                }\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for i := 0; i < len(test_list); i++ {\n        for j := 0; j < len(test_list[i]); j++ {\n            for k := j + 1; k < len(test_list[i]); k++ {\n                if test_list[i][j].(int) > test_list[i][k].(int) {\n                    if test_list[i][j].(int) - test_list[i][k].(int) > max_diff {\n                        max_diff = test_list[i][j].(int) - test_list[i][k].(int)\n                    }\n                } else {\n                    if test_list[i][k].(int) - test_list[i][j].(int) > max_diff {\n                        max_diff = test_list[i][k].(int) - test_list[i][j].(int)\n                    }\n                }\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, test := range test_list {\n        if len(test) != 2 {\n            panic(\"Invalid test tuple\")\n        }\n        if test[0] == nil || test[1] == nil {\n            panic(\"Invalid test tuple\")\n        }\n        if test[0].(int) > test[1].(int) {\n            panic(\"Invalid test tuple\")\n        }\n        diff := test[1].(int) - test[0].(int)\n        if diff > max_diff {\n            max_diff = diff\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, test_tuple := range test_list {\n        if test_tuple[0].(int) > test_tuple[1].(int) {\n            if test_tuple[0].(int) - test_tuple[1].(int) > max_diff {\n                max_diff = test_tuple[0].(int) - test_tuple[1].(int)\n            }\n        } else {\n            if test_tuple[1].(int) - test_tuple[0].(int) > max_diff {\n                max_diff = test_tuple[1].(int) - test_tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, pair := range test_list {\n        if pair[0].(int) > pair[1].(int) {\n            diff := pair[0].(int) - pair[1].(int)\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            if tuple[0].(int) - tuple[1].(int) > max_diff {\n                max_diff = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if tuple[1].(int) - tuple[0].(int) > max_diff {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_difference int\n    for _, tuple := range test_list {\n        for i := 0; i < len(tuple); i++ {\n            for j := i + 1; j < len(tuple); j++ {\n                if tuple[i].(int) - tuple[j].(int) > max_difference {\n                    max_difference = tuple[i].(int) - tuple[j].(int)\n                }\n            }\n        }\n    }\n    return max_difference\n}\n",
    "    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) < tuple[1].(int) {\n            if max_diff < tuple[1].(int) - tuple[0].(int) {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    max_diff := 0\n    for i := 0; i < len(test_list); i++ {\n        for j := i + 1; j < len(test_list); j++ {\n            if test_list[j][0].(int) - test_list[i][1].(int) > max_diff {\n                max_diff = test_list[j][0].(int) - test_list[i][1].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[1].(int) - tuple[0].(int) > max_diff {\n            max_diff = tuple[1].(int) - tuple[0].(int)\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int = 0\n    for _, test_tuple := range test_list {\n        var diff int = test_tuple[1].(int) - test_tuple[0].(int)\n        if diff > max_diff {\n            max_diff = diff\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, pair := range test_list {\n        // fmt.Println(pair)\n        if pair[0].(int) > pair[1].(int) {\n            if pair[0].(int) - pair[1].(int) > max_diff {\n                max_diff = pair[0].(int) - pair[1].(int)\n            }\n        } else {\n            if pair[1].(int) - pair[0].(int) > max_diff {\n                max_diff = pair[1].(int) - pair[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, test := range test_list {\n        if len(test) != 2 {\n            continue\n        }\n        if test[0] == nil || test[1] == nil {\n            continue\n        }\n        if test[0].(int) > test[1].(int) {\n            continue\n        }\n        diff := test[1].(int) - test[0].(int)\n        if diff > max_diff {\n            max_diff = diff\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, pair := range test_list {\n        if pair[0].(int) > pair[1].(int) {\n            diff := pair[0].(int) - pair[1].(int)\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            if tuple[0].(int) - tuple[1].(int) > max_diff {\n                max_diff = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if tuple[1].(int) - tuple[0].(int) > max_diff {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, pair := range test_list {\n        if pair[0].(int) > pair[1].(int) {\n            if pair[0].(int) - pair[1].(int) > max_diff {\n                max_diff = pair[0].(int) - pair[1].(int)\n            }\n        } else {\n            if pair[1].(int) - pair[0].(int) > max_diff {\n                max_diff = pair[1].(int) - pair[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    max_diff := 0\n    for _, t := range test_list {\n        if t[0].(int) > t[1].(int) {\n            diff := t[0].(int) - t[1].(int)\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, tup := range test_list {\n        if tup[0].(int) > tup[1].(int) {\n            diff := tup[0].(int) - tup[1].(int)\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, v := range test_list {\n        for i := 0; i < len(v); i++ {\n            for j := i + 1; j < len(v); j++ {\n                if v[i].(int) - v[j].(int) > max_diff {\n                    max_diff = v[i].(int) - v[j].(int)\n                }\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            if tuple[0].(int) - tuple[1].(int) > max_diff {\n                max_diff = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if tuple[1].(int) - tuple[0].(int) > max_diff {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, tup := range test_list {\n        if tup[0].(int) > tup[1].(int) {\n            if max_diff < tup[0].(int) - tup[1].(int) {\n                max_diff = tup[0].(int) - tup[1].(int)\n            }\n        } else {\n            if max_diff < tup[1].(int) - tup[0].(int) {\n                max_diff = tup[1].(int) - tup[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            if max_diff < tuple[0].(int) - tuple[1].(int) {\n                max_diff = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if max_diff < tuple[1].(int) - tuple[0].(int) {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            if tuple[0].(int) - tuple[1].(int) > max_diff {\n                max_diff = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if tuple[1].(int) - tuple[0].(int) > max_diff {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            if max_diff < tuple[0].(int) - tuple[1].(int) {\n                max_diff = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if max_diff < tuple[1].(int) - tuple[0].(int) {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int = 0\n    for _, tuple := range test_list {\n        var diff int = tuple[1].(int) - tuple[0].(int)\n        if diff > max_diff {\n            max_diff = diff\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, tuple := range test_list {\n        if len(tuple) != 2 {\n            panic(\"Invalid tuple\")\n        }\n        if tuple[0].(int) > tuple[1].(int) {\n            if tuple[0].(int) - tuple[1].(int) > max_diff {\n                max_diff = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if tuple[1].(int) - tuple[0].(int) > max_diff {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, pair := range test_list {\n        if pair[0].(int) > pair[1].(int) {\n            if pair[0].(int) - pair[1].(int) > max_diff {\n                max_diff = pair[0].(int) - pair[1].(int)\n            }\n        } else {\n            if pair[1].(int) - pair[0].(int) > max_diff {\n                max_diff = pair[1].(int) - pair[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            if tuple[0].(int) - tuple[1].(int) > max_diff {\n                max_diff = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if tuple[1].(int) - tuple[0].(int) > max_diff {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, list := range test_list {\n        for i := 0; i < len(list); i++ {\n            for j := i + 1; j < len(list); j++ {\n                if list[i].(int) < list[j].(int) {\n                    if list[j].(int) - list[i].(int) > max_diff {\n                        max_diff = list[j].(int) - list[i].(int)\n                    }\n                }\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int = 0\n    for _, tuple := range test_list {\n        var diff int = tuple[1].(int) - tuple[0].(int)\n        if diff > max_diff {\n            max_diff = diff\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, pair := range test_list {\n        if pair[0].(int) > pair[1].(int) {\n            diff := pair[0].(int) - pair[1].(int)\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, pair := range test_list {\n        if pair[0].(int) > pair[1].(int) {\n            diff := pair[0].(int) - pair[1].(int)\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, t := range test_list {\n        diff := t[1].(int) - t[0].(int)\n        if diff > max_diff {\n            max_diff = diff\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, tup := range test_list {\n        if len(tup) != 2 {\n            panic(\"tuple must have 2 elements\")\n        }\n        if tup[0].(int) > tup[1].(int) {\n            diff := tup[0].(int) - tup[1].(int)\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_difference int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            if tuple[0].(int) - tuple[1].(int) > max_difference {\n                max_difference = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if tuple[1].(int) - tuple[0].(int) > max_difference {\n                max_difference = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_difference\n}\n",
    "    var max_diff int\n    for i := 0; i < len(test_list); i++ {\n        for j := i + 1; j < len(test_list); j++ {\n            if test_list[i][0] == test_list[j][0] {\n                diff := test_list[i][1].(int) - test_list[j][1].(int)\n                if diff > max_diff {\n                    max_diff = diff\n                }\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            if tuple[0].(int) - tuple[1].(int) > max_diff {\n                max_diff = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if tuple[1].(int) - tuple[0].(int) > max_diff {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            if tuple[0].(int) - tuple[1].(int) > max_diff {\n                max_diff = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if tuple[1].(int) - tuple[0].(int) > max_diff {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[0].(int) > tuple[1].(int) {\n            if tuple[0].(int) - tuple[1].(int) > max_diff {\n                max_diff = tuple[0].(int) - tuple[1].(int)\n            }\n        } else {\n            if tuple[1].(int) - tuple[0].(int) > max_diff {\n                max_diff = tuple[1].(int) - tuple[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    max_diff := 0\n    for _, tup := range test_list {\n        if len(tup) != 2 {\n            panic(\"Invalid tuple length\")\n        }\n        if tup[0].(int) > tup[1].(int) {\n            diff := tup[0].(int) - tup[1].(int)\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, pair := range test_list {\n        diff := pair[0].(int) - pair[1].(int)\n        if diff > max_diff {\n            max_diff = diff\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, pair := range test_list {\n        if pair[0].(int) > pair[1].(int) {\n            if pair[0].(int) - pair[1].(int) > max_diff {\n                max_diff = pair[0].(int) - pair[1].(int)\n            }\n        } else {\n            if pair[1].(int) - pair[0].(int) > max_diff {\n                max_diff = pair[1].(int) - pair[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, pair := range test_list {\n        if pair[0].(int) > pair[1].(int) {\n            diff := pair[0].(int) - pair[1].(int)\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, pair := range test_list {\n        if pair[0].(int) > pair[1].(int) {\n            diff := pair[0].(int) - pair[1].(int)\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, tuple := range test_list {\n        if tuple[1].(int) - tuple[0].(int) > max_diff {\n            max_diff = tuple[1].(int) - tuple[0].(int)\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, pair := range test_list {\n        if pair[0].(int) > pair[1].(int) {\n            if pair[0].(int) - pair[1].(int) > max_diff {\n                max_diff = pair[0].(int) - pair[1].(int)\n            }\n        } else {\n            if pair[1].(int) - pair[0].(int) > max_diff {\n                max_diff = pair[1].(int) - pair[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, test_tuple := range test_list {\n        if len(test_tuple) != 2 {\n            panic(fmt.Sprintf(\"Invalid test tuple: %v\", test_tuple))\n        }\n        var test_diff int\n        switch test_tuple[0].(type) {\n        case int:\n            test_diff = test_tuple[0].(int) - test_tuple[1].(int)\n        case float64:\n            test_diff = int(test_tuple[0].(float64) - test_tuple[1].(float64))\n        default:\n            panic(fmt.Sprintf(\"Invalid test tuple: %v\", test_tuple))\n        }\n        if test_diff > max_diff {\n            max_diff = test_diff\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, tup := range test_list {\n        if len(tup) != 2 {\n            panic(\"Invalid tuple length\")\n        }\n        a, b := tup[0].(int), tup[1].(int)\n        if a > b {\n            a, b = b, a\n        }\n        diff := b - a\n        if diff > max_diff {\n            max_diff = diff\n        }\n    }\n    return max_diff\n}\n"
  ]
}
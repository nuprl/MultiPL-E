{
  "name": "mbpp_17_square_perimeter",
  "language": "go_test.go",
  "prompt": "package square_perimeter_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function that returns the perimeter of a square given its side length as input.\nfunc square_perimeter(a int) int {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_17_square_perimeter.py",
  "prompt_terminology": "verbatim",
  "tests": "func TestSquare_Perimeter(t *testing.T) {\n  candidate := square_perimeter\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(10), expected: 40 },\n     { actual: candidate(5), expected: 20 },\n     { actual: candidate(4), expected: 16 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
  "stop_tokens": [
    "\nfunc",
    "struct",
    "\n// "
  ],
  "completions": [
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a*4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return 4 * a\n}\n",
    "    return a * 4\n}\n",
    "    return 4 * a\n}\n",
    "    return a * 4\n}\n",
    "    return 4 * a\n}\n",
    "    return a * 4\n}\n",
    "    return 4 * a\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return 4 * a\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return 4 * a\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return 4 * a\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return 4 * a\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return 4 * a\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return 4 * a\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return 4 * a\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a*4\n}\n",
    "    return 4 * a\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return 4 * a\n}\n",
    "    return a * 4\n}\n",
    "    return 4 * a\n}\n",
    "    return 4 * a\n}\n",
    "    return a*4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return 4 * a\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return 4 * a\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n",
    "    return a * 4\n}\n"
  ]
}
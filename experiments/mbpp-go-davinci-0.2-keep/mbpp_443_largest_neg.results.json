{
  "name": "mbpp_443_largest_neg",
  "language": "go_test.go",
  "prompt": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_443_largest_neg.py",
  "prompt_terminology": "verbatim",
  "tests": "func TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
  "stop_tokens": [
    "\nfunc",
    "struct",
    "\n// "
  ],
  "results": [
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, i := range list1 {\n        if i < 0 {\n            if largest < i {\n                largest = i\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmp6u3b_45k_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmp6u3b_45k_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmp6u3b_45k_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 {\n            if v > largest {\n                largest = v\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmp1ycfzyit_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmp1ycfzyit_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmp1ycfzyit_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 {\n            if largest < v {\n                largest = v\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmps_x9yqff_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmps_x9yqff_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmps_x9yqff_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest_neg int = 0\n    for _, num := range list1 {\n        if num < 0 && num > largest_neg {\n            largest_neg = num\n        }\n    }\n    return largest_neg\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe5lnnxit_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe5lnnxit_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe5lnnxit_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmp3vunijlb_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmp3vunijlb_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmp3vunijlb_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, num := range list1 {\n        if num < 0 {\n            if largest < num {\n                largest = num\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpkjr77vsi_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpkjr77vsi_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpkjr77vsi_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, num := range list1 {\n        if num < 0 && num > largest {\n            largest = num\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpozikobf3_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpozikobf3_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpozikobf3_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, num := range list1 {\n        if num < 0 {\n            if largest == 0 {\n                largest = num\n            } else if num > largest {\n                largest = num\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpblreebeg_test.go:38: expected '%!s(int=-6)', got '%!s(int=-4)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpblreebeg_test.go:38: expected '%!s(int=-9)', got '%!s(int=-8)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest_neg int\n    for _, num := range list1 {\n        if num < 0 {\n            if num > largest_neg {\n                largest_neg = num\n            }\n        }\n    }\n    return largest_neg\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpo25j8j4t_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpo25j8j4t_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpo25j8j4t_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 {\n            if v > largest {\n                largest = v\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmp1ycfzyit_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmp1ycfzyit_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmp1ycfzyit_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest_neg int\n    for _, num := range list1 {\n        if num < 0 {\n            if largest_neg < num {\n                largest_neg = num\n            }\n        }\n    }\n    return largest_neg\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpk9beordq_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpk9beordq_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpk9beordq_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, i := range list1 {\n        if i < 0 {\n            if largest < i {\n                largest = i\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmp6u3b_45k_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmp6u3b_45k_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmp6u3b_45k_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 {\n            if largest == 0 {\n                largest = v\n            } else if v > largest {\n                largest = v\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpgv6_3iiy_test.go:38: expected '%!s(int=-6)', got '%!s(int=-4)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpgv6_3iiy_test.go:38: expected '%!s(int=-9)', got '%!s(int=-8)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    largest := 0\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpwyhq9b8__test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpwyhq9b8__test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpwyhq9b8__test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, num := range list1 {\n        if num < 0 {\n            if largest < num {\n                largest = num\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpkjr77vsi_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpkjr77vsi_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpkjr77vsi_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, value := range list1 {\n        if value < 0 {\n            if largest < value {\n                largest = value\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpr_hans52_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpr_hans52_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpr_hans52_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest_neg int\n    for _, num := range list1 {\n        if num < 0 {\n            if largest_neg < num {\n                largest_neg = num\n            }\n        }\n    }\n    return largest_neg\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpk9beordq_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpk9beordq_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpk9beordq_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest_neg int\n    for _, num := range list1 {\n        if num < 0 {\n            if largest_neg < num {\n                largest_neg = num\n            }\n        }\n    }\n    return largest_neg\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpk9beordq_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpk9beordq_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpk9beordq_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmp3vunijlb_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmp3vunijlb_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmp3vunijlb_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 {\n            if v > largest {\n                largest = v\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmp1ycfzyit_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmp1ycfzyit_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmp1ycfzyit_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest_neg int\n    for _, v := range list1 {\n        if v < 0 {\n            if largest_neg < v {\n                largest_neg = v\n            }\n        }\n    }\n    return largest_neg\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpoc344a18_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpoc344a18_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpoc344a18_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 {\n            if largest == 0 {\n                largest = v\n            } else if v > largest {\n                largest = v\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpgv6_3iiy_test.go:38: expected '%!s(int=-6)', got '%!s(int=-4)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpgv6_3iiy_test.go:38: expected '%!s(int=-9)', got '%!s(int=-8)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest_neg int\n    for _, v := range list1 {\n        if v < 0 {\n            if largest_neg < v {\n                largest_neg = v\n            }\n        }\n    }\n    return largest_neg\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpoc344a18_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpoc344a18_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpoc344a18_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, value := range list1 {\n        if value < 0 {\n            if value > largest {\n                largest = value\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpdikp6ba__test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpdikp6ba__test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpdikp6ba__test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, num := range list1 {\n        if num < 0 {\n            if largest < num {\n                largest = num\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpkjr77vsi_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpkjr77vsi_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpkjr77vsi_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int = 0\n    for _, num := range list1 {\n        if num < 0 && num > largest {\n            largest = num\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmp5w48_537_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmp5w48_537_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmp5w48_537_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, num := range list1 {\n        if num < 0 && num > largest {\n            largest = num\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpozikobf3_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpozikobf3_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpozikobf3_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest_neg int\n    for _, num := range list1 {\n        if num < 0 {\n            if largest_neg < num {\n                largest_neg = num\n            }\n        }\n    }\n    return largest_neg\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpk9beordq_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpk9beordq_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpk9beordq_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest_neg int\n    for _, value := range list1 {\n        if value < 0 {\n            if value > largest_neg {\n                largest_neg = value\n            }\n        }\n    }\n    return largest_neg\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmp3jeeoy_z_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmp3jeeoy_z_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmp3jeeoy_z_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmp3vunijlb_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmp3vunijlb_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmp3vunijlb_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, num := range list1 {\n        if num < 0 {\n            if num > largest {\n                largest = num\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpb99wg47c_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpb99wg47c_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpb99wg47c_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int = 0\n    for _, value := range list1 {\n        if value < 0 {\n            if value > largest {\n                largest = value\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmp37k3n_l4_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmp37k3n_l4_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmp37k3n_l4_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, num := range list1 {\n        if num < 0 {\n            if largest < num {\n                largest = num\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpkjr77vsi_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpkjr77vsi_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpkjr77vsi_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 {\n            if largest == 0 {\n                largest = v\n            } else if v > largest {\n                largest = v\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpgv6_3iiy_test.go:38: expected '%!s(int=-6)', got '%!s(int=-4)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpgv6_3iiy_test.go:38: expected '%!s(int=-9)', got '%!s(int=-8)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, num := range list1 {\n        if num < 0 {\n            if largest < num {\n                largest = num\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpkjr77vsi_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpkjr77vsi_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpkjr77vsi_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 {\n            if v > largest {\n                largest = v\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmp1ycfzyit_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmp1ycfzyit_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmp1ycfzyit_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, num := range list1 {\n        if num < 0 {\n            if num > largest {\n                largest = num\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpb99wg47c_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpb99wg47c_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpb99wg47c_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, value := range list1 {\n        if value < 0 {\n            if largest < value {\n                largest = value\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpr_hans52_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpr_hans52_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpr_hans52_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 {\n            if v > largest {\n                largest = v\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmp1ycfzyit_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmp1ycfzyit_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmp1ycfzyit_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 {\n            if largest < v {\n                largest = v\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmps_x9yqff_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmps_x9yqff_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmps_x9yqff_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, num := range list1 {\n        if num < 0 {\n            if largest == 0 {\n                largest = num\n            } else if num > largest {\n                largest = num\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpblreebeg_test.go:38: expected '%!s(int=-6)', got '%!s(int=-4)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpblreebeg_test.go:38: expected '%!s(int=-9)', got '%!s(int=-8)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest_neg int\n    for _, value := range list1 {\n        if value < 0 {\n            if largest_neg < value {\n                largest_neg = value\n            }\n        }\n    }\n    return largest_neg\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmprd16lxxr_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmprd16lxxr_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmprd16lxxr_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, num := range list1 {\n        if num < 0 {\n            if num > largest {\n                largest = num\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpb99wg47c_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpb99wg47c_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpb99wg47c_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmp3vunijlb_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmp3vunijlb_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmp3vunijlb_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest_neg int\n    for _, v := range list1 {\n        if v < 0 && v > largest_neg {\n            largest_neg = v\n        }\n    }\n    return largest_neg\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpsc8dm410_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpsc8dm410_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpsc8dm410_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest_neg int\n    for _, value := range list1 {\n        if value < 0 {\n            if value > largest_neg {\n                largest_neg = value\n            }\n        }\n    }\n    return largest_neg\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmp3jeeoy_z_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmp3jeeoy_z_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmp3jeeoy_z_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, num := range list1 {\n        if num < 0 {\n            if num > largest {\n                largest = num\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpb99wg47c_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpb99wg47c_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpb99wg47c_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, num := range list1 {\n        if num < 0 {\n            if num > largest {\n                largest = num\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpb99wg47c_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpb99wg47c_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpb99wg47c_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for i := 0; i < len(list1); i++ {\n        if list1[i] < 0 {\n            if list1[i] > largest {\n                largest = list1[i]\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpccib55bf_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpccib55bf_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpccib55bf_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, num := range list1 {\n        if num < 0 {\n            if largest < num {\n                largest = num\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpkjr77vsi_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpkjr77vsi_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpkjr77vsi_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 {\n            if largest == 0 {\n                largest = v\n            } else if v > largest {\n                largest = v\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpgv6_3iiy_test.go:38: expected '%!s(int=-6)', got '%!s(int=-4)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpgv6_3iiy_test.go:38: expected '%!s(int=-9)', got '%!s(int=-8)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, num := range list1 {\n        if num < 0 {\n            if largest == 0 {\n                largest = num\n            } else if num > largest {\n                largest = num\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpblreebeg_test.go:38: expected '%!s(int=-6)', got '%!s(int=-4)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpblreebeg_test.go:38: expected '%!s(int=-9)', got '%!s(int=-8)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 {\n            if v > largest {\n                largest = v\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmp1ycfzyit_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmp1ycfzyit_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmp1ycfzyit_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest_neg int\n    for _, v := range list1 {\n        if v < 0 {\n            if largest_neg < v {\n                largest_neg = v\n            }\n        }\n    }\n    return largest_neg\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpoc344a18_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpoc344a18_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpoc344a18_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for i, v := range list1 {\n        if v < 0 && (i == 0 || v > largest) {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmp61ufl5po_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmp61ufl5po_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmp61ufl5po_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for i := 0; i < len(list1); i++ {\n        if list1[i] < 0 {\n            if largest == 0 {\n                largest = list1[i]\n            } else if list1[i] > largest {\n                largest = list1[i]\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmp_qtngmu0_test.go:38: expected '%!s(int=-6)', got '%!s(int=-4)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmp_qtngmu0_test.go:38: expected '%!s(int=-9)', got '%!s(int=-8)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for i := 0; i < len(list1); i++ {\n        if list1[i] < 0 {\n            if largest < list1[i] {\n                largest = list1[i]\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmp1syal3bg_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmp1syal3bg_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmp1syal3bg_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmp3vunijlb_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmp3vunijlb_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmp3vunijlb_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    largest := 0\n    for _, num := range list1 {\n        if num < 0 && num > largest {\n            largest = num\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpl0hvog9y_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpl0hvog9y_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpl0hvog9y_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, num := range list1 {\n        if num < 0 {\n            if num > largest {\n                largest = num\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpb99wg47c_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpb99wg47c_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpb99wg47c_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    largest := 0\n    for _, v := range list1 {\n        if v < 0 {\n            if v > largest {\n                largest = v\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmp9ysftck0_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmp9ysftck0_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmp9ysftck0_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, val := range list1 {\n        if val < 0 {\n            if largest == 0 {\n                largest = val\n            } else if val > largest {\n                largest = val\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmphhtr3k3e_test.go:38: expected '%!s(int=-6)', got '%!s(int=-4)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmphhtr3k3e_test.go:38: expected '%!s(int=-9)', got '%!s(int=-8)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 {\n            if largest < v {\n                largest = v\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmps_x9yqff_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmps_x9yqff_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmps_x9yqff_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int = 0\n    for _, num := range list1 {\n        if num < 0 && num > largest {\n            largest = num\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmp5w48_537_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmp5w48_537_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmp5w48_537_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest_neg int\n    for _, num := range list1 {\n        if num < 0 && num > largest_neg {\n            largest_neg = num\n        }\n    }\n    return largest_neg\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpdrf7kzfs_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpdrf7kzfs_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpdrf7kzfs_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 {\n            if largest == 0 {\n                largest = v\n            } else if v > largest {\n                largest = v\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpgv6_3iiy_test.go:38: expected '%!s(int=-6)', got '%!s(int=-4)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpgv6_3iiy_test.go:38: expected '%!s(int=-9)', got '%!s(int=-8)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmp3vunijlb_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmp3vunijlb_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmp3vunijlb_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, num := range list1 {\n        if num < 0 && num > largest {\n            largest = num\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpozikobf3_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpozikobf3_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpozikobf3_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, i := range list1 {\n        if i < 0 {\n            if largest == 0 {\n                largest = i\n            } else if i > largest {\n                largest = i\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpfgkwt8aw_test.go:38: expected '%!s(int=-6)', got '%!s(int=-4)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpfgkwt8aw_test.go:38: expected '%!s(int=-9)', got '%!s(int=-8)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 {\n            if largest == 0 {\n                largest = v\n            } else if v > largest {\n                largest = v\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpgv6_3iiy_test.go:38: expected '%!s(int=-6)', got '%!s(int=-4)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpgv6_3iiy_test.go:38: expected '%!s(int=-9)', got '%!s(int=-8)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest_neg int\n    for i := 0; i < len(list1); i++ {\n        if list1[i] < 0 {\n            if largest_neg < list1[i] {\n                largest_neg = list1[i]\n            }\n        }\n    }\n    return largest_neg\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpx5d0ij5w_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpx5d0ij5w_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpx5d0ij5w_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest_neg int\n    for _, num := range list1 {\n        if num < 0 {\n            if largest_neg < num {\n                largest_neg = num\n            }\n        }\n    }\n    return largest_neg\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpk9beordq_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpk9beordq_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpk9beordq_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest_neg int\n    for _, num := range list1 {\n        if num < 0 && num > largest_neg {\n            largest_neg = num\n        }\n    }\n    return largest_neg\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpdrf7kzfs_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpdrf7kzfs_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpdrf7kzfs_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest_neg int\n    for _, value := range list1 {\n        if value < 0 {\n            if largest_neg == 0 {\n                largest_neg = value\n            } else if value > largest_neg {\n                largest_neg = value\n            }\n        }\n    }\n    return largest_neg\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpvyl5n_oy_test.go:38: expected '%!s(int=-6)', got '%!s(int=-4)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpvyl5n_oy_test.go:38: expected '%!s(int=-9)', got '%!s(int=-8)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 {\n            if v > largest {\n                largest = v\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmp1ycfzyit_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmp1ycfzyit_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmp1ycfzyit_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    max := 0\n    for _, val := range list1 {\n        if val < 0 && val > max {\n            max = val\n        }\n    }\n    return max\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpbc5t60kr_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpbc5t60kr_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpbc5t60kr_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, num := range list1 {\n        if num < 0 && num > largest {\n            largest = num\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpozikobf3_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpozikobf3_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpozikobf3_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest_neg int\n    for _, num := range list1 {\n        if num < 0 {\n            if num > largest_neg {\n                largest_neg = num\n            }\n        }\n    }\n    return largest_neg\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpo25j8j4t_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpo25j8j4t_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpo25j8j4t_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, i := range list1 {\n        if i < 0 {\n            if i > largest {\n                largest = i\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpvh6b0jnx_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpvh6b0jnx_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpvh6b0jnx_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, num := range list1 {\n        if num < 0 && num > largest {\n            largest = num\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpozikobf3_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpozikobf3_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpozikobf3_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmp3vunijlb_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmp3vunijlb_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmp3vunijlb_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 {\n            if v > largest {\n                largest = v\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmp1ycfzyit_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmp1ycfzyit_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmp1ycfzyit_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, value := range list1 {\n        if value < 0 {\n            if value > largest {\n                largest = value\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpdikp6ba__test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpdikp6ba__test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpdikp6ba__test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 {\n            if largest == 0 {\n                largest = v\n            } else if v > largest {\n                largest = v\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpgv6_3iiy_test.go:38: expected '%!s(int=-6)', got '%!s(int=-4)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpgv6_3iiy_test.go:38: expected '%!s(int=-9)', got '%!s(int=-8)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    largest_neg := 0\n    for _, num := range list1 {\n        if num < 0 && num > largest_neg {\n            largest_neg = num\n        }\n    }\n    return largest_neg\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmp4bbx2sna_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmp4bbx2sna_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmp4bbx2sna_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.009s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, num := range list1 {\n        if num < 0 {\n            if num > largest {\n                largest = num\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpb99wg47c_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpb99wg47c_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpb99wg47c_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest_neg int\n    for _, num := range list1 {\n        if num < 0 {\n            if largest_neg < num {\n                largest_neg = num\n            }\n        }\n    }\n    return largest_neg\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpk9beordq_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpk9beordq_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpk9beordq_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, i := range list1 {\n        if i < 0 {\n            if largest < i {\n                largest = i\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmp6u3b_45k_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmp6u3b_45k_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmp6u3b_45k_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 {\n            if largest == 0 {\n                largest = v\n            } else if v > largest {\n                largest = v\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpgv6_3iiy_test.go:38: expected '%!s(int=-6)', got '%!s(int=-4)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpgv6_3iiy_test.go:38: expected '%!s(int=-9)', got '%!s(int=-8)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, num := range list1 {\n        if num < 0 && num > largest {\n            largest = num\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpozikobf3_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpozikobf3_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpozikobf3_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 {\n            if largest < v {\n                largest = v\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmps_x9yqff_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmps_x9yqff_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmps_x9yqff_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, num := range list1 {\n        if num < 0 {\n            if largest == 0 {\n                largest = num\n            } else if num > largest {\n                largest = num\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpblreebeg_test.go:38: expected '%!s(int=-6)', got '%!s(int=-4)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpblreebeg_test.go:38: expected '%!s(int=-9)', got '%!s(int=-8)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmp3vunijlb_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmp3vunijlb_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmp3vunijlb_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 {\n            if largest < v {\n                largest = v\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmps_x9yqff_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmps_x9yqff_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmps_x9yqff_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, num := range list1 {\n        if num < 0 {\n            if num > largest {\n                largest = num\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpb99wg47c_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpb99wg47c_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpb99wg47c_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest_neg int\n    for _, v := range list1 {\n        if v < 0 {\n            if largest_neg < v {\n                largest_neg = v\n            }\n        }\n    }\n    return largest_neg\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpoc344a18_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpoc344a18_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpoc344a18_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 {\n            if largest < v {\n                largest = v\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmps_x9yqff_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmps_x9yqff_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmps_x9yqff_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, value := range list1 {\n        if value < 0 && value > largest {\n            largest = value\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmp7cntnbwj_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmp7cntnbwj_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmp7cntnbwj_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmp3vunijlb_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmp3vunijlb_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmp3vunijlb_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    largest := 0\n    for _, num := range list1 {\n        if num < 0 && num > largest {\n            largest = num\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpl0hvog9y_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpl0hvog9y_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpl0hvog9y_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, num := range list1 {\n        if num < 0 {\n            if num > largest {\n                largest = num\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpb99wg47c_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpb99wg47c_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpb99wg47c_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 {\n            if largest < v {\n                largest = v\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmps_x9yqff_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmps_x9yqff_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmps_x9yqff_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest_neg int\n    for _, num := range list1 {\n        if num < 0 {\n            if num > largest_neg {\n                largest_neg = num\n            }\n        }\n    }\n    return largest_neg\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpo25j8j4t_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpo25j8j4t_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpo25j8j4t_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, num := range list1 {\n        if num < 0 {\n            if num > largest {\n                largest = num\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpb99wg47c_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpb99wg47c_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpb99wg47c_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, i := range list1 {\n        if i < 0 {\n            if largest < i {\n                largest = i\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmp6u3b_45k_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmp6u3b_45k_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmp6u3b_45k_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, value := range list1 {\n        if value < 0 {\n            if value > largest {\n                largest = value\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpdikp6ba__test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpdikp6ba__test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpdikp6ba__test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    largest := 0\n    for _, num := range list1 {\n        if num < 0 && num > largest {\n            largest = num\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpl0hvog9y_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpl0hvog9y_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpl0hvog9y_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest_neg int\n    for _, num := range list1 {\n        if num < 0 {\n            if num > largest_neg {\n                largest_neg = num\n            }\n        }\n    }\n    return largest_neg\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpo25j8j4t_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpo25j8j4t_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpo25j8j4t_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, num := range list1 {\n        if num < 0 {\n            if largest < num {\n                largest = num\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpkjr77vsi_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpkjr77vsi_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpkjr77vsi_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 {\n            if largest < v {\n                largest = v\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmps_x9yqff_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmps_x9yqff_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmps_x9yqff_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, num := range list1 {\n        if num < 0 {\n            if largest < num {\n                largest = num\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpkjr77vsi_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpkjr77vsi_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpkjr77vsi_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, num := range list1 {\n        if num < 0 {\n            if largest == 0 {\n                largest = num\n            } else if num > largest {\n                largest = num\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpblreebeg_test.go:38: expected '%!s(int=-6)', got '%!s(int=-4)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpblreebeg_test.go:38: expected '%!s(int=-9)', got '%!s(int=-8)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 {\n            if largest < v {\n                largest = v\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmps_x9yqff_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmps_x9yqff_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmps_x9yqff_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 {\n            if v > largest {\n                largest = v\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmp1ycfzyit_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmp1ycfzyit_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmp1ycfzyit_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, num := range list1 {\n        if num < 0 && num > largest {\n            largest = num\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpozikobf3_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpozikobf3_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpozikobf3_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, i := range list1 {\n        if i < 0 {\n            if largest < i {\n                largest = i\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmp6u3b_45k_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmp6u3b_45k_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmp6u3b_45k_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, value := range list1 {\n        if value < 0 && value > largest {\n            largest = value\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmp7cntnbwj_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmp7cntnbwj_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmp7cntnbwj_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 {\n            if largest < v {\n                largest = v\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmps_x9yqff_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmps_x9yqff_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmps_x9yqff_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest_neg int\n    for _, num := range list1 {\n        if num < 0 && num > largest_neg {\n            largest_neg = num\n        }\n    }\n    return largest_neg\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpdrf7kzfs_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpdrf7kzfs_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpdrf7kzfs_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, num := range list1 {\n        if num < 0 {\n            if largest == 0 {\n                largest = num\n            } else if num > largest {\n                largest = num\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpblreebeg_test.go:38: expected '%!s(int=-6)', got '%!s(int=-4)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpblreebeg_test.go:38: expected '%!s(int=-9)', got '%!s(int=-8)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, num := range list1 {\n        if num < 0 {\n            if largest < num {\n                largest = num\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpkjr77vsi_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpkjr77vsi_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpkjr77vsi_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, value := range list1 {\n        if value < 0 {\n            if value > largest {\n                largest = value\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpdikp6ba__test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpdikp6ba__test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpdikp6ba__test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 {\n            if largest == 0 {\n                largest = v\n            } else if v > largest {\n                largest = v\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpgv6_3iiy_test.go:38: expected '%!s(int=-6)', got '%!s(int=-4)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpgv6_3iiy_test.go:38: expected '%!s(int=-9)', got '%!s(int=-8)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, i := range list1 {\n        if i < 0 {\n            if largest == 0 {\n                largest = i\n            } else if i > largest {\n                largest = i\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpfgkwt8aw_test.go:38: expected '%!s(int=-6)', got '%!s(int=-4)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpfgkwt8aw_test.go:38: expected '%!s(int=-9)', got '%!s(int=-8)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, i := range list1 {\n        if i < 0 {\n            if largest < i {\n                largest = i\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmp6u3b_45k_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmp6u3b_45k_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmp6u3b_45k_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, num := range list1 {\n        if num < 0 {\n            if largest < num {\n                largest = num\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpkjr77vsi_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpkjr77vsi_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpkjr77vsi_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmp3vunijlb_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmp3vunijlb_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmp3vunijlb_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmp3vunijlb_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmp3vunijlb_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmp3vunijlb_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, i := range list1 {\n        if i < 0 && i > largest {\n            largest = i\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123076,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmp4mzm49m__test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmp4mzm49m__test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmp4mzm49m__test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 {\n            if largest < v {\n                largest = v\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmps_x9yqff_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmps_x9yqff_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmps_x9yqff_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, num := range list1 {\n        if num < 0 {\n            if largest < num {\n                largest = num\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpkjr77vsi_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpkjr77vsi_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpkjr77vsi_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 {\n            if v > largest {\n                largest = v\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmp1ycfzyit_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmp1ycfzyit_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmp1ycfzyit_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 {\n            if largest < v {\n                largest = v\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmps_x9yqff_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmps_x9yqff_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmps_x9yqff_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, i := range list1 {\n        if i < 0 {\n            if largest < i {\n                largest = i\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmp6u3b_45k_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmp6u3b_45k_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmp6u3b_45k_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, num := range list1 {\n        if num < 0 {\n            if num > largest {\n                largest = num\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpb99wg47c_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpb99wg47c_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpb99wg47c_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmp3vunijlb_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmp3vunijlb_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmp3vunijlb_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest_neg int\n    for _, item := range list1 {\n        if item < 0 {\n            if largest_neg == 0 {\n                largest_neg = item\n            } else if item > largest_neg {\n                largest_neg = item\n            }\n        }\n    }\n    return largest_neg\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123076,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpyblp5od__test.go:38: expected '%!s(int=-6)', got '%!s(int=-4)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpyblp5od__test.go:38: expected '%!s(int=-9)', got '%!s(int=-8)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, num := range list1 {\n        if num < 0 {\n            if num > largest {\n                largest = num\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpb99wg47c_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpb99wg47c_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpb99wg47c_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest_neg int\n    for _, i := range list1 {\n        if i < 0 && i > largest_neg {\n            largest_neg = i\n        }\n    }\n    return largest_neg\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123076,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpx2irv6d7_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpx2irv6d7_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpx2irv6d7_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 {\n            if largest == 0 {\n                largest = v\n            } else if v > largest {\n                largest = v\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpgv6_3iiy_test.go:38: expected '%!s(int=-6)', got '%!s(int=-4)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpgv6_3iiy_test.go:38: expected '%!s(int=-9)', got '%!s(int=-8)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, num := range list1 {\n        if num < 0 {\n            if num > largest {\n                largest = num\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpb99wg47c_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpb99wg47c_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpb99wg47c_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmp3vunijlb_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmp3vunijlb_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmp3vunijlb_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 {\n            if largest == 0 {\n                largest = v\n            } else if v > largest {\n                largest = v\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpgv6_3iiy_test.go:38: expected '%!s(int=-6)', got '%!s(int=-4)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpgv6_3iiy_test.go:38: expected '%!s(int=-9)', got '%!s(int=-8)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, num := range list1 {\n        if num < 0 {\n            if largest < num {\n                largest = num\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpkjr77vsi_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpkjr77vsi_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpkjr77vsi_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 {\n            if v > largest {\n                largest = v\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmp1ycfzyit_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmp1ycfzyit_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmp1ycfzyit_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 {\n            if largest < v {\n                largest = v\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmps_x9yqff_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmps_x9yqff_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmps_x9yqff_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, value := range list1 {\n        if value < 0 {\n            if value > largest {\n                largest = value\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpdikp6ba__test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpdikp6ba__test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpdikp6ba__test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmp3vunijlb_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmp3vunijlb_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmp3vunijlb_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, i := range list1 {\n        if i < 0 && i > largest {\n            largest = i\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123076,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmp4mzm49m__test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmp4mzm49m__test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmp4mzm49m__test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 {\n            if largest < v {\n                largest = v\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmps_x9yqff_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmps_x9yqff_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmps_x9yqff_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest_neg int\n    for _, v := range list1 {\n        if v < 0 {\n            if largest_neg < v {\n                largest_neg = v\n            }\n        }\n    }\n    return largest_neg\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpoc344a18_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpoc344a18_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpoc344a18_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 {\n            if v > largest {\n                largest = v\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmp1ycfzyit_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmp1ycfzyit_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmp1ycfzyit_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, num := range list1 {\n        if num < 0 {\n            if largest < num {\n                largest = num\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpkjr77vsi_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpkjr77vsi_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpkjr77vsi_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for i := 0; i < len(list1); i++ {\n        if list1[i] < 0 {\n            if largest < list1[i] {\n                largest = list1[i]\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmp1syal3bg_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmp1syal3bg_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmp1syal3bg_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 {\n            if largest == 0 {\n                largest = v\n            } else if v > largest {\n                largest = v\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpgv6_3iiy_test.go:38: expected '%!s(int=-6)', got '%!s(int=-4)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpgv6_3iiy_test.go:38: expected '%!s(int=-9)', got '%!s(int=-8)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest_neg int\n    for _, value := range list1 {\n        if value < 0 {\n            if largest_neg < value {\n                largest_neg = value\n            }\n        }\n    }\n    return largest_neg\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmprd16lxxr_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmprd16lxxr_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmprd16lxxr_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, num := range list1 {\n        if num < 0 {\n            if largest < num {\n                largest = num\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpkjr77vsi_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpkjr77vsi_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpkjr77vsi_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 {\n            if largest < v {\n                largest = v\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmps_x9yqff_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmps_x9yqff_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmps_x9yqff_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 {\n            if largest < v {\n                largest = v\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmps_x9yqff_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmps_x9yqff_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmps_x9yqff_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest_neg int\n    for _, i := range list1 {\n        if i < 0 {\n            if largest_neg < i {\n                largest_neg = i\n            }\n        }\n    }\n    return largest_neg\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123076,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmp7gdt04rq_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmp7gdt04rq_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmp7gdt04rq_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, value := range list1 {\n        if value < 0 {\n            if value > largest {\n                largest = value\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpdikp6ba__test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpdikp6ba__test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpdikp6ba__test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, i := range list1 {\n        if i < 0 {\n            if i > largest {\n                largest = i\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpvh6b0jnx_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpvh6b0jnx_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpvh6b0jnx_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest_neg int\n    for _, value := range list1 {\n        if value < 0 {\n            if value > largest_neg {\n                largest_neg = value\n            }\n        }\n    }\n    return largest_neg\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmp3jeeoy_z_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmp3jeeoy_z_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmp3jeeoy_z_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 {\n            if largest == 0 {\n                largest = v\n            } else if v > largest {\n                largest = v\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpgv6_3iiy_test.go:38: expected '%!s(int=-6)', got '%!s(int=-4)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpgv6_3iiy_test.go:38: expected '%!s(int=-9)', got '%!s(int=-8)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 {\n            if largest < v {\n                largest = v\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmps_x9yqff_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmps_x9yqff_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmps_x9yqff_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmp3vunijlb_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmp3vunijlb_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmp3vunijlb_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, num := range list1 {\n        if num < 0 {\n            if largest < num {\n                largest = num\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpkjr77vsi_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpkjr77vsi_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpkjr77vsi_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 {\n            if largest < v {\n                largest = v\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmps_x9yqff_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmps_x9yqff_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmps_x9yqff_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, num := range list1 {\n        if num < 0 {\n            if largest < num {\n                largest = num\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpkjr77vsi_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpkjr77vsi_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpkjr77vsi_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, value := range list1 {\n        if value < 0 {\n            if value > largest {\n                largest = value\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpdikp6ba__test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpdikp6ba__test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpdikp6ba__test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, num := range list1 {\n        if num < 0 {\n            if largest == 0 {\n                largest = num\n            } else if num > largest {\n                largest = num\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpblreebeg_test.go:38: expected '%!s(int=-6)', got '%!s(int=-4)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpblreebeg_test.go:38: expected '%!s(int=-9)', got '%!s(int=-8)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, num := range list1 {\n        if num < 0 {\n            if num > largest {\n                largest = num\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpb99wg47c_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpb99wg47c_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpb99wg47c_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, num := range list1 {\n        if num < 0 {\n            if num > largest {\n                largest = num\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpb99wg47c_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpb99wg47c_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpb99wg47c_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 {\n            if v > largest {\n                largest = v\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmp1ycfzyit_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmp1ycfzyit_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmp1ycfzyit_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, i := range list1 {\n        if i < 0 {\n            if largest < i {\n                largest = i\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmp6u3b_45k_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmp6u3b_45k_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmp6u3b_45k_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest_neg int\n    for _, num := range list1 {\n        if num < 0 {\n            if largest_neg < num {\n                largest_neg = num\n            }\n        }\n    }\n    return largest_neg\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpk9beordq_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpk9beordq_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpk9beordq_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, value := range list1 {\n        if value < 0 {\n            if largest < value {\n                largest = value\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpr_hans52_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpr_hans52_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpr_hans52_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, num := range list1 {\n        if num < 0 {\n            if largest == 0 {\n                largest = num\n            } else if num > largest {\n                largest = num\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpblreebeg_test.go:38: expected '%!s(int=-6)', got '%!s(int=-4)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpblreebeg_test.go:38: expected '%!s(int=-9)', got '%!s(int=-8)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, num := range list1 {\n        if num < 0 {\n            if largest == 0 {\n                largest = num\n            } else if num > largest {\n                largest = num\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpblreebeg_test.go:38: expected '%!s(int=-6)', got '%!s(int=-4)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpblreebeg_test.go:38: expected '%!s(int=-9)', got '%!s(int=-8)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    largest := 0\n    for _, i := range list1 {\n        if i < 0 && i > largest {\n            largest = i\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123076,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmp2tyat4u7_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmp2tyat4u7_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmp2tyat4u7_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, num := range list1 {\n        if num < 0 {\n            if num > largest {\n                largest = num\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpb99wg47c_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpb99wg47c_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpb99wg47c_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for i := 0; i < len(list1); i++ {\n        if list1[i] < 0 {\n            if largest == 0 {\n                largest = list1[i]\n            } else if list1[i] > largest {\n                largest = list1[i]\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmp_qtngmu0_test.go:38: expected '%!s(int=-6)', got '%!s(int=-4)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmp_qtngmu0_test.go:38: expected '%!s(int=-9)', got '%!s(int=-8)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 {\n            if v > largest {\n                largest = v\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmp1ycfzyit_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmp1ycfzyit_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmp1ycfzyit_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, num := range list1 {\n        if num < 0 {\n            if num > largest {\n                largest = num\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpb99wg47c_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpb99wg47c_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpb99wg47c_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest_neg int\n    for _, v := range list1 {\n        if v < 0 && v > largest_neg {\n            largest_neg = v\n        }\n    }\n    return largest_neg\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpsc8dm410_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpsc8dm410_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpsc8dm410_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, num := range list1 {\n        if num < 0 {\n            if largest < num {\n                largest = num\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpkjr77vsi_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpkjr77vsi_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpkjr77vsi_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, value := range list1 {\n        if value < 0 {\n            if largest == 0 {\n                largest = value\n            } else if value > largest {\n                largest = value\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123076,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmp_k6zbf3u_test.go:38: expected '%!s(int=-6)', got '%!s(int=-4)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmp_k6zbf3u_test.go:38: expected '%!s(int=-9)', got '%!s(int=-8)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmp3vunijlb_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmp3vunijlb_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmp3vunijlb_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest_neg int\n    for _, num := range list1 {\n        if num < 0 {\n            if largest_neg < num {\n                largest_neg = num\n            }\n        }\n    }\n    return largest_neg\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpk9beordq_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpk9beordq_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpk9beordq_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 {\n            if largest < v {\n                largest = v\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmps_x9yqff_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmps_x9yqff_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmps_x9yqff_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 {\n            if largest < v {\n                largest = v\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmps_x9yqff_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmps_x9yqff_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmps_x9yqff_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, num := range list1 {\n        if num < 0 {\n            if num > largest {\n                largest = num\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpb99wg47c_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpb99wg47c_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpb99wg47c_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest_neg int\n    for _, num := range list1 {\n        if num < 0 {\n            if largest_neg < num {\n                largest_neg = num\n            }\n        }\n    }\n    return largest_neg\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpk9beordq_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpk9beordq_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpk9beordq_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, value := range list1 {\n        if value < 0 {\n            if largest == 0 {\n                largest = value\n            } else if value > largest {\n                largest = value\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123076,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmp_k6zbf3u_test.go:38: expected '%!s(int=-6)', got '%!s(int=-4)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmp_k6zbf3u_test.go:38: expected '%!s(int=-9)', got '%!s(int=-8)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, i := range list1 {\n        if i < 0 {\n            if largest < i {\n                largest = i\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmp6u3b_45k_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmp6u3b_45k_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmp6u3b_45k_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, i := range list1 {\n        if i < 0 {\n            if largest < i {\n                largest = i\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmp6u3b_45k_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmp6u3b_45k_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmp6u3b_45k_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    var largest_neg int\n    for _, num := range list1 {\n        if num > largest {\n            largest = num\n        }\n    }\n    for _, num := range list1 {\n        if num < largest_neg {\n            largest_neg = num\n        }\n    }\n    return largest_neg\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123076,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, num := range list1 {\n        if num < 0 {\n            if num > largest {\n                largest = num\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpb99wg47c_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpb99wg47c_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpb99wg47c_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, num := range list1 {\n        if num < 0 {\n            if num > largest {\n                largest = num\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpb99wg47c_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpb99wg47c_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpb99wg47c_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, num := range list1 {\n        if num < 0 && num > largest {\n            largest = num\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510077,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpozikobf3_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpozikobf3_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpozikobf3_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
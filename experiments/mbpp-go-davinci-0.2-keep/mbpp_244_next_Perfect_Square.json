{
  "name": "mbpp_244_next_Perfect_Square",
  "language": "go_test.go",
  "prompt": "package next_Perfect_Square_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the next perfect square greater than a given number.\nfunc next_Perfect_Square(N int) int {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_244_next_Perfect_Square.py",
  "prompt_terminology": "verbatim",
  "tests": "func TestNext_Perfect_Square(t *testing.T) {\n  candidate := next_Perfect_Square\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(35), expected: 36 },\n     { actual: candidate(6), expected: 9 },\n     { actual: candidate(9), expected: 16 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
  "stop_tokens": [
    "\nfunc",
    "struct",
    "\n// "
  ],
  "completions": [
    "    // Your code here\n    return 0\n}\n",
    "    // Your code here\n    return 0\n}\n",
    "    // Your code here\n    return 0\n}\n",
    "    if N < 0 {\n        return -1\n    }\n    if N == 0 {\n        return 1\n    }\n    for i := 1; i < N; i++ {\n        if i * i > N {\n            return i * i\n        }\n    }\n    return -1\n}\n",
    "    // Your code here\n    return 0\n}\n",
    "    // Your code here\n    return 0\n}\n",
    "    // Your code here\n    return 0\n}\n",
    "    // Your code here\n    return 0\n}\n",
    "    // Your code here\n    return 0\n}\n",
    "    // Your code here\n    return 0\n}\n",
    "    // Your code here\n    return 0\n}\n",
    "    // Your code here\n    return 0\n}\n",
    "    // Your code here\n    return 0\n}\n",
    "    // Your code here\n    return 0\n}\n",
    "    // Your code here\n    return 0\n}\n",
    "    // Your code here\n    return 0\n}\n",
    "    // Your code here\n    return 0\n}\n",
    "    // Your code here\n    return 0\n}\n",
    "    // Your code here\n    var i int\n    for i = 1; i*i < N; i++ {\n    }\n    return i*i\n}\n",
    "    // Your code here\n    return 0\n}\n"
  ]
}
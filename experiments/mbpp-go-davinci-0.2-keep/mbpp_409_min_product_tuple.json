{
  "name": "mbpp_409_min_product_tuple",
  "language": "go_test.go",
  "prompt": "package min_product_tuple_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the minimum product from the pairs of tuples within a given list.\nfunc min_product_tuple(list1 [][]interface{}) int {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_409_min_product_tuple.py",
  "prompt_terminology": "verbatim",
  "tests": "func TestMin_Product_Tuple(t *testing.T) {\n  candidate := min_product_tuple\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{2, 7}, []interface{}{2, 6}, []interface{}{1, 8}, []interface{}{4, 9}}), expected: 8 },\n     { actual: candidate([][]int{[]interface{}{10, 20}, []interface{}{15, 2}, []interface{}{5, 10}}), expected: 30 },\n     { actual: candidate([][]int{[]interface{}{11, 44}, []interface{}{10, 15}, []interface{}{20, 5}, []interface{}{12, 9}}), expected: 100 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
  "stop_tokens": [
    "\nfunc",
    "struct",
    "\n// "
  ],
  "completions": [
    "    var min int\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1); j++ {\n            if i != j {\n                product := list1[i][0].(int) * list1[j][1].(int)\n                if min == 0 || product < min {\n                    min = product\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int = 0\n    for i := 0; i < len(list1); i++ {\n        for j := i+1; j < len(list1); j++ {\n            product := list1[i][0].(int) * list1[j][0].(int)\n            if min == 0 || product < min {\n                min = product\n            }\n        }\n    }\n    return min\n}\n",
    "    min_product := 0\n    for i := 0; i < len(list1); i++ {\n        for j := i + 1; j < len(list1); j++ {\n            product := list1[i][0].(int) * list1[j][0].(int)\n            if min_product == 0 || product < min_product {\n                min_product = product\n            }\n        }\n    }\n    return min_product\n}\n",
    "    var min int\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := tuple1[0].(int) * tuple2[1].(int)\n                if min == 0 || product < min {\n                    min = product\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    min := 0\n    for i := 0; i < len(list1); i++ {\n        for j := i+1; j < len(list1); j++ {\n            if list1[i][0] == list1[j][0] || list1[i][1] == list1[j][1] {\n                product := list1[i][2].(int) * list1[j][2].(int)\n                if min == 0 || product < min {\n                    min = product\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    min := 0\n    for i := 0; i < len(list1); i++ {\n        for j := i + 1; j < len(list1); j++ {\n            product := list1[i][0].(int) * list1[j][0].(int)\n            if min == 0 || product < min {\n                min = product\n            }\n        }\n    }\n    return min\n}\n",
    "    min := 0\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1[i]); j++ {\n            if list1[i][j] == nil {\n                continue\n            }\n            for k := i; k < len(list1); k++ {\n                for l := 0; l < len(list1[k]); l++ {\n                    if list1[k][l] == nil {\n                        continue\n                    }\n                    if i == k && j == l {\n                        continue\n                    }\n                    product := list1[i][j].(int) * list1[k][l].(int)\n                    if min == 0 || product < min {\n                        min = product\n                    }\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    min := 0\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1); j++ {\n            if i != j {\n                product := list1[i][0].(int) * list1[j][1].(int)\n                if min == 0 || product < min {\n                    min = product\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := tuple1[0].(int) * tuple2[1].(int)\n                if min == 0 || product < min {\n                    min = product\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1); j++ {\n            if i != j {\n                product := list1[i][0].(int) * list1[j][1].(int)\n                if i == 0 && j == 1 {\n                    min = product\n                } else if product < min {\n                    min = product\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    min := 0\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1); j++ {\n            if i != j {\n                product := list1[i][0].(int) * list1[j][1].(int)\n                if min == 0 || product < min {\n                    min = product\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int = 0\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1); j++ {\n            if i != j {\n                if min == 0 {\n                    min = list1[i][0].(int) * list1[j][1].(int)\n                } else {\n                    if list1[i][0].(int) * list1[j][1].(int) < min {\n                        min = list1[i][0].(int) * list1[j][1].(int)\n                    }\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int\n    for i := 0; i < len(list1); i++ {\n        for j := i + 1; j < len(list1); j++ {\n            if i == 0 && j == 1 {\n                min = list1[i][0].(int) * list1[j][1].(int)\n            }\n            if min > list1[i][0].(int) * list1[j][1].(int) {\n                min = list1[i][0].(int) * list1[j][1].(int)\n            }\n        }\n    }\n    return min\n}\n",
    "    min_product := 0\n    for i := 0; i < len(list1); i++ {\n        for j := i + 1; j < len(list1); j++ {\n            product := list1[i][0].(int) * list1[j][0].(int)\n            if min_product == 0 || product < min_product {\n                min_product = product\n            }\n        }\n    }\n    return min_product\n}\n",
    "    min_product := 0\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1); j++ {\n            if i == j {\n                continue\n            }\n            product := list1[i][0].(int) * list1[j][1].(int)\n            if min_product == 0 || product < min_product {\n                min_product = product\n            }\n        }\n    }\n    return min_product\n}\n",
    "    min_product := 0\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := tuple1[0].(int) * tuple2[1].(int)\n                if min_product == 0 || product < min_product {\n                    min_product = product\n                }\n            }\n        }\n    }\n    return min_product\n}\n",
    "    var min int\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := tuple1[0].(int) * tuple2[1].(int)\n                if min == 0 || product < min {\n                    min = product\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    min := 0\n    for i := 0; i < len(list1); i++ {\n        for j := i + 1; j < len(list1); j++ {\n            product := list1[i][0].(int) * list1[j][1].(int)\n            if min == 0 || product < min {\n                min = product\n            }\n        }\n    }\n    return min\n}\n",
    "    var min_product int\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := tuple1[0].(int) * tuple2[1].(int)\n                if min_product == 0 {\n                    min_product = product\n                } else if product < min_product {\n                    min_product = product\n                }\n            }\n        }\n    }\n    return min_product\n}\n",
    "    min := 0\n    for i := 0; i < len(list1); i++ {\n        for j := i + 1; j < len(list1); j++ {\n            product := list1[i][0].(int) * list1[j][0].(int)\n            if min == 0 || product < min {\n                min = product\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1); j++ {\n            if i != j {\n                product := list1[i][0].(int) * list1[j][1].(int)\n                if min == 0 || product < min {\n                    min = product\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    min_product := 0\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := tuple1[0].(int) * tuple2[0].(int)\n                if min_product == 0 || product < min_product {\n                    min_product = product\n                }\n            }\n        }\n    }\n    return min_product\n}\n",
    "    var min int = 0\n    for i := 0; i < len(list1); i++ {\n        for j := i+1; j < len(list1); j++ {\n            var product int = 1\n            for k := 0; k < len(list1[i]); k++ {\n                product *= list1[i][k].(int) * list1[j][k].(int)\n            }\n            if min == 0 || product < min {\n                min = product\n            }\n        }\n    }\n    return min\n}\n",
    "    min := 0\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := tuple1[0].(int) * tuple2[0].(int)\n                if min == 0 || product < min {\n                    min = product\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := tuple1[0].(int) * tuple2[0].(int)\n                if min == 0 || product < min {\n                    min = product\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int = 0\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := tuple1[0].(int) * tuple2[0].(int)\n                if min == 0 || product < min {\n                    min = product\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1); j++ {\n            if i != j {\n                if min == 0 {\n                    min = list1[i][1].(int) * list1[j][1].(int)\n                } else if min > list1[i][1].(int) * list1[j][1].(int) {\n                    min = list1[i][1].(int) * list1[j][1].(int)\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1[0] != tuple2[0] && tuple1[1] != tuple2[1] {\n                product := tuple1[0].(int) * tuple2[1].(int)\n                if min == 0 || product < min {\n                    min = product\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    min := 0\n    for i, tuple1 := range list1 {\n        for j, tuple2 := range list1 {\n            if i == j {\n                continue\n            }\n            product := tuple1[0].(int) * tuple2[1].(int)\n            if min == 0 || product < min {\n                min = product\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := tuple1[0].(int) * tuple2[1].(int)\n                if min == 0 || product < min {\n                    min = product\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int = 0\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1); j++ {\n            if i == j {\n                continue\n            }\n            if list1[i][0] == list1[j][1] {\n                product := list1[i][1].(int) * list1[j][0].(int)\n                if min == 0 {\n                    min = product\n                } else if product < min {\n                    min = product\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    min := 0\n    for i := 0; i < len(list1); i++ {\n        for j := i + 1; j < len(list1); j++ {\n            product := list1[i][0].(int) * list1[j][0].(int)\n            if min == 0 || product < min {\n                min = product\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int\n    for i := 0; i < len(list1); i++ {\n        for j := i + 1; j < len(list1); j++ {\n            product := list1[i][0].(int) * list1[j][0].(int)\n            if min == 0 || product < min {\n                min = product\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int = 0\n    for i := 0; i < len(list1); i++ {\n        for j := i + 1; j < len(list1); j++ {\n            if min == 0 {\n                min = list1[i][0].(int) * list1[j][1].(int)\n            } else {\n                if list1[i][0].(int) * list1[j][1].(int) < min {\n                    min = list1[i][0].(int) * list1[j][1].(int)\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int = 0\n    for i := 0; i < len(list1); i++ {\n        for j := i+1; j < len(list1); j++ {\n            var product int = list1[i][0].(int) * list1[j][0].(int)\n            if min == 0 {\n                min = product\n            } else if product < min {\n                min = product\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int\n    for i := 0; i < len(list1); i++ {\n        for j := i+1; j < len(list1); j++ {\n            if i == 0 && j == 1 {\n                min = list1[i][0].(int) * list1[j][1].(int)\n            } else {\n                if min > list1[i][0].(int) * list1[j][1].(int) {\n                    min = list1[i][0].(int) * list1[j][1].(int)\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    var min_product int = 0\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1[i]); j++ {\n            if list1[i][j] == nil {\n                continue\n            }\n            for k := i; k < len(list1); k++ {\n                for l := 0; l < len(list1[k]); l++ {\n                    if list1[k][l] == nil {\n                        continue\n                    }\n                    if i == k && j == l {\n                        continue\n                    }\n                    product := list1[i][j].(int) * list1[k][l].(int)\n                    if min_product == 0 || product < min_product {\n                        min_product = product\n                    }\n                }\n            }\n        }\n    }\n    return min_product\n}\n",
    "    var min int = 0\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1); j++ {\n            if i != j {\n                if min == 0 {\n                    min = list1[i][0].(int) * list1[j][1].(int)\n                } else {\n                    if list1[i][0].(int) * list1[j][1].(int) < min {\n                        min = list1[i][0].(int) * list1[j][1].(int)\n                    }\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    min_product := 0\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := 1\n                for _, num := range tuple1 {\n                    product *= num.(int)\n                }\n                for _, num := range tuple2 {\n                    product *= num.(int)\n                }\n                if min_product == 0 || product < min_product {\n                    min_product = product\n                }\n            }\n        }\n    }\n    return min_product\n}\n",
    "    var min int = 0\n    for i := 0; i < len(list1); i++ {\n        for j := i + 1; j < len(list1); j++ {\n            if list1[i][0] == list1[j][1] && list1[i][1] == list1[j][0] {\n                if min == 0 {\n                    min = list1[i][2].(int) * list1[j][2].(int)\n                } else if min > list1[i][2].(int) * list1[j][2].(int) {\n                    min = list1[i][2].(int) * list1[j][2].(int)\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int = 0\n    for i := 0; i < len(list1); i++ {\n        for j := i + 1; j < len(list1); j++ {\n            if i == 0 && j == 1 {\n                min = list1[i][0].(int) * list1[j][0].(int)\n            } else {\n                if min > list1[i][0].(int) * list1[j][0].(int) {\n                    min = list1[i][0].(int) * list1[j][0].(int)\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int\n    for i := 0; i < len(list1); i++ {\n        for j := i + 1; j < len(list1); j++ {\n            product := list1[i][0].(int) * list1[j][1].(int)\n            if i == 0 && j == 1 {\n                min = product\n            } else if product < min {\n                min = product\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int = 0\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1); j++ {\n            if i != j {\n                if min == 0 {\n                    min = list1[i][0].(int) * list1[j][1].(int)\n                } else {\n                    if list1[i][0].(int) * list1[j][1].(int) < min {\n                        min = list1[i][0].(int) * list1[j][1].(int)\n                    }\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int = 0\n    for i := 0; i < len(list1); i++ {\n        for j := i + 1; j < len(list1); j++ {\n            product := 1\n            for k := 0; k < len(list1[i]); k++ {\n                product *= list1[i][k].(int) * list1[j][k].(int)\n            }\n            if min == 0 || product < min {\n                min = product\n            }\n        }\n    }\n    return min\n}\n",
    "    if len(list1) == 0 {\n        return 0\n    }\n    min_product := list1[0][0].(int) * list1[0][1].(int)\n    for _, tuple := range list1 {\n        if tuple[0].(int) * tuple[1].(int) < min_product {\n            min_product = tuple[0].(int) * tuple[1].(int)\n        }\n    }\n    return min_product\n}\n",
    "    var min int = 0\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := tuple1[0].(int) * tuple2[1].(int)\n                if min == 0 || product < min {\n                    min = product\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    min := 0\n    for i, tuple1 := range list1 {\n        for j, tuple2 := range list1 {\n            if i != j {\n                product := tuple1[0].(int) * tuple2[1].(int)\n                if min == 0 || product < min {\n                    min = product\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    min := 0\n    for i := 0; i < len(list1); i++ {\n        for j := i+1; j < len(list1); j++ {\n            if list1[i][0] == list1[j][1] && list1[i][1] == list1[j][0] {\n                if min == 0 {\n                    min = list1[i][2].(int) * list1[j][2].(int)\n                } else {\n                    if min > list1[i][2].(int) * list1[j][2].(int) {\n                        min = list1[i][2].(int) * list1[j][2].(int)\n                    }\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    min := 0\n    for i := 0; i < len(list1); i++ {\n        for j := i + 1; j < len(list1); j++ {\n            if min == 0 {\n                min = list1[i][0].(int) * list1[j][1].(int)\n            } else if min > list1[i][0].(int) * list1[j][1].(int) {\n                min = list1[i][0].(int) * list1[j][1].(int)\n            }\n        }\n    }\n    return min\n}\n",
    "    min := 0\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1); j++ {\n            if i != j {\n                product := list1[i][0].(int) * list1[j][1].(int)\n                if min == 0 || product < min {\n                    min = product\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    min_product := 0\n    for i := 0; i < len(list1); i++ {\n        for j := i + 1; j < len(list1); j++ {\n            product := list1[i][0].(int) * list1[j][0].(int)\n            if min_product == 0 || product < min_product {\n                min_product = product\n            }\n        }\n    }\n    return min_product\n}\n",
    "    var min_product int\n    for i := 0; i < len(list1); i++ {\n        for j := i + 1; j < len(list1); j++ {\n            product := list1[i][0].(int) * list1[j][0].(int)\n            if min_product == 0 || product < min_product {\n                min_product = product\n            }\n        }\n    }\n    return min_product\n}\n",
    "    min := 0\n    for i := 0; i < len(list1); i++ {\n        for j := i + 1; j < len(list1); j++ {\n            if list1[i][0].(int) * list1[j][1].(int) < min {\n                min = list1[i][0].(int) * list1[j][1].(int)\n            }\n        }\n    }\n    return min\n}\n",
    "    min := 0\n    for i := 0; i < len(list1); i++ {\n        for j := i + 1; j < len(list1); j++ {\n            if i == 0 && j == 1 {\n                min = list1[i][0].(int) * list1[j][1].(int)\n            } else {\n                if list1[i][0].(int) * list1[j][1].(int) < min {\n                    min = list1[i][0].(int) * list1[j][1].(int)\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int\n    for i, v := range list1 {\n        for j, w := range list1 {\n            if i != j {\n                if min == 0 {\n                    min = v[0].(int) * w[1].(int)\n                } else if min > v[0].(int) * w[1].(int) {\n                    min = v[0].(int) * w[1].(int)\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    min := 0\n    for i := 0; i < len(list1); i++ {\n        for j := i+1; j < len(list1); j++ {\n            product := 1\n            for k := 0; k < len(list1[i]); k++ {\n                product *= list1[i][k].(int) * list1[j][k].(int)\n            }\n            if min == 0 || product < min {\n                min = product\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1[i]); j++ {\n            if i == 0 && j == 0 {\n                min = list1[i][j].(int)\n            } else {\n                if list1[i][j].(int) < min {\n                    min = list1[i][j].(int)\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    min_product := 0\n    for i := 0; i < len(list1); i++ {\n        for j := i + 1; j < len(list1); j++ {\n            product := list1[i][0].(int) * list1[j][0].(int)\n            if min_product == 0 || product < min_product {\n                min_product = product\n            }\n        }\n    }\n    return min_product\n}\n",
    "    var min int\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := tuple1[0].(int) * tuple2[1].(int)\n                if min == 0 || product < min {\n                    min = product\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int\n    for i := 0; i < len(list1); i++ {\n        for j := i + 1; j < len(list1); j++ {\n            if i == 0 && j == 1 {\n                min = list1[i][0].(int) * list1[j][1].(int)\n            } else {\n                if list1[i][0].(int) * list1[j][1].(int) < min {\n                    min = list1[i][0].(int) * list1[j][1].(int)\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := tuple1[0].(int) * tuple2[1].(int)\n                if min == 0 || product < min {\n                    min = product\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    min := 0\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := tuple1[0].(int) * tuple2[0].(int)\n                if min == 0 || product < min {\n                    min = product\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    min := 0\n    for i := 0; i < len(list1); i++ {\n        for j := i + 1; j < len(list1); j++ {\n            if min == 0 {\n                min = list1[i][0].(int) * list1[j][1].(int)\n            } else {\n                if list1[i][0].(int) * list1[j][1].(int) < min {\n                    min = list1[i][0].(int) * list1[j][1].(int)\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := tuple1[0].(int) * tuple2[1].(int)\n                if min == 0 || product < min {\n                    min = product\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int = 0\n    for i, v := range list1 {\n        for j, v2 := range list1 {\n            if i != j {\n                if min == 0 {\n                    min = v[0].(int) * v2[1].(int)\n                } else if min > v[0].(int) * v2[1].(int) {\n                    min = v[0].(int) * v2[1].(int)\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int = 0\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1); j++ {\n            if i != j {\n                if min == 0 {\n                    min = list1[i][0].(int) * list1[j][1].(int)\n                } else {\n                    if min > list1[i][0].(int) * list1[j][1].(int) {\n                        min = list1[i][0].(int) * list1[j][1].(int)\n                    }\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int = 0\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1); j++ {\n            if i == j {\n                continue\n            }\n            if list1[i][0] == list1[j][1] {\n                if min == 0 {\n                    min = list1[i][1].(int) * list1[j][0].(int)\n                } else if min > list1[i][1].(int) * list1[j][0].(int) {\n                    min = list1[i][1].(int) * list1[j][0].(int)\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int = 0\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1); j++ {\n            if i != j {\n                product := list1[i][0].(int) * list1[j][1].(int)\n                if min == 0 || product < min {\n                    min = product\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    min := 0\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := tuple1[0].(int) * tuple2[1].(int)\n                if min == 0 || product < min {\n                    min = product\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int = 0\n    for i := 0; i < len(list1); i++ {\n        for j := i + 1; j < len(list1); j++ {\n            product := list1[i][0].(int) * list1[j][0].(int)\n            if min == 0 || product < min {\n                min = product\n            }\n        }\n    }\n    return min\n}\n",
    "    min := 0\n    for i := 0; i < len(list1); i++ {\n        for j := i + 1; j < len(list1); j++ {\n            product := 1\n            for k := 0; k < len(list1[i]); k++ {\n                product *= list1[i][k].(int) * list1[j][k].(int)\n            }\n            if min == 0 || product < min {\n                min = product\n            }\n        }\n    }\n    return min\n}\n",
    "    min := 0\n    for i := 0; i < len(list1); i++ {\n        for j := i + 1; j < len(list1); j++ {\n            product := 1\n            for k := 0; k < len(list1[i]); k++ {\n                product *= list1[i][k].(int) * list1[j][k].(int)\n            }\n            if min == 0 || product < min {\n                min = product\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int = 0\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1[i]); j++ {\n            if i == 0 && j == 0 {\n                min = list1[i][j].(int)\n            } else if list1[i][j].(int) < min {\n                min = list1[i][j].(int)\n            }\n        }\n    }\n    return min\n}\n",
    "    min := 0\n    for i := 0; i < len(list1); i++ {\n        for j := i + 1; j < len(list1); j++ {\n            if list1[i][0].(int) * list1[j][1].(int) < min {\n                min = list1[i][0].(int) * list1[j][1].(int)\n            }\n        }\n    }\n    return min\n}\n",
    "    min := 0\n    for i := 0; i < len(list1); i++ {\n        for j := i + 1; j < len(list1); j++ {\n            product := list1[i][0].(int) * list1[j][1].(int)\n            if min == 0 || product < min {\n                min = product\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int\n    for i, v := range list1 {\n        for j, w := range list1 {\n            if i != j {\n                product := v[0].(int) * w[0].(int)\n                if min == 0 || product < min {\n                    min = product\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    min := 0\n    for i := 0; i < len(list1); i++ {\n        for j := i + 1; j < len(list1); j++ {\n            product := 1\n            for k := 0; k < len(list1[i]); k++ {\n                product *= list1[i][k].(int) * list1[j][k].(int)\n            }\n            if min == 0 || product < min {\n                min = product\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := tuple1[0].(int) * tuple2[1].(int)\n                if min == 0 || product < min {\n                    min = product\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    min_product := 0\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1); j++ {\n            if i == j {\n                continue\n            }\n            product := list1[i][0].(int) * list1[j][1].(int)\n            if min_product == 0 || product < min_product {\n                min_product = product\n            }\n        }\n    }\n    return min_product\n}\n",
    "    min := 0\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1); j++ {\n            if i != j {\n                if min == 0 {\n                    min = list1[i][1].(int) * list1[j][1].(int)\n                } else if min > list1[i][1].(int) * list1[j][1].(int) {\n                    min = list1[i][1].(int) * list1[j][1].(int)\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int\n    for i := 0; i < len(list1); i++ {\n        for j := i+1; j < len(list1); j++ {\n            product := list1[i][0].(int) * list1[j][0].(int)\n            if min == 0 || product < min {\n                min = product\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int\n    for i := 0; i < len(list1); i++ {\n        for j := i + 1; j < len(list1); j++ {\n            if i == 0 && j == 1 {\n                min = list1[i][0].(int) * list1[j][1].(int)\n            } else {\n                if list1[i][0].(int) * list1[j][1].(int) < min {\n                    min = list1[i][0].(int) * list1[j][1].(int)\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    min := 0\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1); j++ {\n            if i != j {\n                product := list1[i][0].(int) * list1[j][1].(int)\n                if min == 0 || product < min {\n                    min = product\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int\n    for i := 0; i < len(list1); i++ {\n        for j := i + 1; j < len(list1); j++ {\n            if i == 0 && j == 1 {\n                min = list1[i][0].(int) * list1[j][1].(int)\n            } else {\n                if min > list1[i][0].(int) * list1[j][1].(int) {\n                    min = list1[i][0].(int) * list1[j][1].(int)\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := tuple1[0].(int) * tuple2[0].(int)\n                if min == 0 || product < min {\n                    min = product\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int = 0\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1); j++ {\n            if i == j {\n                continue\n            }\n            product := list1[i][0].(int) * list1[j][1].(int)\n            if min == 0 || product < min {\n                min = product\n            }\n        }\n    }\n    return min\n}\n",
    "    min := 0\n    for i := 0; i < len(list1); i++ {\n        for j := i+1; j < len(list1); j++ {\n            product := 1\n            for k := 0; k < len(list1[i]); k++ {\n                product *= list1[i][k].(int) * list1[j][k].(int)\n            }\n            if min == 0 || product < min {\n                min = product\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int = 0\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1); j++ {\n            if i == j {\n                continue\n            }\n            if min == 0 {\n                min = list1[i][0].(int) * list1[j][1].(int)\n            } else {\n                if list1[i][0].(int) * list1[j][1].(int) < min {\n                    min = list1[i][0].(int) * list1[j][1].(int)\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int = 0\n    for i := 0; i < len(list1); i++ {\n        for j := i+1; j < len(list1); j++ {\n            if list1[i][0].(int) * list1[j][0].(int) + list1[i][1].(int) * list1[j][1].(int) < min {\n                min = list1[i][0].(int) * list1[j][0].(int) + list1[i][1].(int) * list1[j][1].(int)\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int = 0\n    for i := 0; i < len(list1); i++ {\n        for j := i + 1; j < len(list1); j++ {\n            var product int = 1\n            for k := 0; k < len(list1[i]); k++ {\n                product *= list1[i][k].(int) * list1[j][k].(int)\n            }\n            if min == 0 || product < min {\n                min = product\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int = 0\n    for i := 0; i < len(list1); i++ {\n        for j := i + 1; j < len(list1); j++ {\n            if min == 0 {\n                min = list1[i][0].(int) * list1[j][1].(int)\n            } else {\n                if min > list1[i][0].(int) * list1[j][1].(int) {\n                    min = list1[i][0].(int) * list1[j][1].(int)\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    min_product := 0\n    for i := 0; i < len(list1); i++ {\n        for j := i+1; j < len(list1); j++ {\n            product := 1\n            for k := 0; k < len(list1[i]); k++ {\n                product *= list1[i][k].(int)\n            }\n            for k := 0; k < len(list1[j]); k++ {\n                product *= list1[j][k].(int)\n            }\n            if min_product == 0 || product < min_product {\n                min_product = product\n            }\n        }\n    }\n    return min_product\n}\n",
    "    var min int\n    for _, v1 := range list1 {\n        for _, v2 := range list1 {\n            if v1 != v2 {\n                product := v1[0].(int) * v2[1].(int)\n                if min == 0 || product < min {\n                    min = product\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := tuple1[0].(int) * tuple2[1].(int)\n                if min == 0 || product < min {\n                    min = product\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int = 0\n    for i := 0; i < len(list1); i++ {\n        for j := i+1; j < len(list1); j++ {\n            if list1[i][0] == list1[j][0] || list1[i][1] == list1[j][1] {\n                if min == 0 {\n                    min = list1[i][2].(int) * list1[j][2].(int)\n                } else if min > list1[i][2].(int) * list1[j][2].(int) {\n                    min = list1[i][2].(int) * list1[j][2].(int)\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    min := 0\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := tuple1[0].(int) * tuple2[1].(int)\n                if min == 0 || product < min {\n                    min = product\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    var min_product int\n    for i := 0; i < len(list1); i++ {\n        for j := i + 1; j < len(list1); j++ {\n            product := list1[i][0].(int) * list1[j][0].(int)\n            if min_product == 0 || product < min_product {\n                min_product = product\n            }\n        }\n    }\n    return min_product\n}\n",
    "    var min int = 0\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1); j++ {\n            if i == j {\n                continue\n            }\n            if min == 0 {\n                min = list1[i][1].(int) * list1[j][1].(int)\n            } else {\n                if list1[i][1].(int) * list1[j][1].(int) < min {\n                    min = list1[i][1].(int) * list1[j][1].(int)\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    var min_product int = 0\n    for i := 0; i < len(list1); i++ {\n        for j := i + 1; j < len(list1); j++ {\n            product := list1[i][0].(int) * list1[j][0].(int)\n            if min_product == 0 || product < min_product {\n                min_product = product\n            }\n        }\n    }\n    return min_product\n}\n",
    "    var min int\n    for _, tuple := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple[0] != tuple2[0] && tuple[1] != tuple2[1] {\n                product := tuple[0].(int) * tuple2[1].(int)\n                if min == 0 || product < min {\n                    min = product\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1); j++ {\n            if i == j {\n                continue\n            }\n            product := list1[i][0].(int) * list1[j][1].(int)\n            if min == 0 {\n                min = product\n            } else if product < min {\n                min = product\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int = 0\n    for i := 0; i < len(list1); i++ {\n        for j := i + 1; j < len(list1); j++ {\n            var product int = 1\n            for k := 0; k < len(list1[i]); k++ {\n                product *= list1[i][k].(int) * list1[j][k].(int)\n            }\n            if min == 0 || product < min {\n                min = product\n            }\n        }\n    }\n    return min\n}\n",
    "    min_product := 0\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := 1\n                for _, value := range tuple1 {\n                    product *= value.(int)\n                }\n                for _, value := range tuple2 {\n                    product *= value.(int)\n                }\n                if min_product == 0 || product < min_product {\n                    min_product = product\n                }\n            }\n        }\n    }\n    return min_product\n}\n",
    "    var min int\n    for i := 0; i < len(list1); i++ {\n        for j := i + 1; j < len(list1); j++ {\n            if i == 0 && j == 1 {\n                min = list1[i][0].(int) * list1[j][0].(int)\n            } else {\n                if list1[i][0].(int) * list1[j][0].(int) < min {\n                    min = list1[i][0].(int) * list1[j][0].(int)\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1); j++ {\n            if i == j {\n                continue\n            }\n            if min == 0 {\n                min = list1[i][0].(int) * list1[j][1].(int)\n            } else if min > list1[i][0].(int) * list1[j][1].(int) {\n                min = list1[i][0].(int) * list1[j][1].(int)\n            }\n        }\n    }\n    return min\n}\n",
    "    min := 0\n    for i := 0; i < len(list1); i++ {\n        for j := i + 1; j < len(list1); j++ {\n            product := 1\n            for k := 0; k < len(list1[i]); k++ {\n                product *= list1[i][k].(int) * list1[j][k].(int)\n            }\n            if min == 0 || product < min {\n                min = product\n            }\n        }\n    }\n    return min\n}\n",
    "    var min_product int = 0\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1); j++ {\n            if i != j {\n                product := list1[i][0].(int) * list1[j][1].(int)\n                if min_product == 0 || product < min_product {\n                    min_product = product\n                }\n            }\n        }\n    }\n    return min_product\n}\n",
    "    min := 0\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := tuple1[0].(int) * tuple2[0].(int)\n                if min == 0 || product < min {\n                    min = product\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    min_product := 0\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := tuple1[0].(int) * tuple2[1].(int)\n                if min_product == 0 || product < min_product {\n                    min_product = product\n                }\n            }\n        }\n    }\n    return min_product\n}\n",
    "    min := 0\n    for i := 0; i < len(list1); i++ {\n        for j := i + 1; j < len(list1); j++ {\n            if min == 0 {\n                min = list1[i][1].(int) * list1[j][1].(int)\n            } else {\n                if min > list1[i][1].(int) * list1[j][1].(int) {\n                    min = list1[i][1].(int) * list1[j][1].(int)\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int\n    for i := 0; i < len(list1); i++ {\n        for j := i + 1; j < len(list1); j++ {\n            product := list1[i][0].(int) * list1[j][0].(int)\n            if min == 0 || product < min {\n                min = product\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int = 0\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1[i]); j++ {\n            if i == 0 && j == 0 {\n                min = list1[i][j].(int)\n            } else {\n                if list1[i][j].(int) < min {\n                    min = list1[i][j].(int)\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int = 0\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1); j++ {\n            if i == j {\n                continue\n            }\n            if list1[i][0].(int) * list1[j][1].(int) < min {\n                min = list1[i][0].(int) * list1[j][1].(int)\n            }\n        }\n    }\n    return min\n}\n",
    "    var min_product int\n    for i := 0; i < len(list1); i++ {\n        for j := i + 1; j < len(list1); j++ {\n            product := list1[i][0].(int) * list1[j][1].(int)\n            if min_product == 0 || product < min_product {\n                min_product = product\n            }\n        }\n    }\n    return min_product\n}\n",
    "    min := 0\n    for i := 0; i < len(list1); i++ {\n        for j := i + 1; j < len(list1); j++ {\n            if min == 0 {\n                min = list1[i][0].(int) * list1[j][1].(int)\n            } else if min > list1[i][0].(int) * list1[j][1].(int) {\n                min = list1[i][0].(int) * list1[j][1].(int)\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := tuple1[0].(int) * tuple2[1].(int)\n                if min == 0 || product < min {\n                    min = product\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int = 0\n    for i := 0; i < len(list1); i++ {\n        for j := i + 1; j < len(list1); j++ {\n            if i == 0 && j == 1 {\n                min = list1[i][0].(int) * list1[j][1].(int)\n            } else {\n                if min > list1[i][0].(int) * list1[j][1].(int) {\n                    min = list1[i][0].(int) * list1[j][1].(int)\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int\n    for i := 0; i < len(list1); i++ {\n        for j := i + 1; j < len(list1); j++ {\n            product := list1[i][0].(int) * list1[j][0].(int)\n            if min == 0 || product < min {\n                min = product\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int\n    for i := 0; i < len(list1); i++ {\n        for j := i + 1; j < len(list1); j++ {\n            product := list1[i][0].(int) * list1[j][0].(int)\n            if min == 0 || product < min {\n                min = product\n            }\n        }\n    }\n    return min\n}\n",
    "    min_product := 0\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := 1\n                for _, val := range tuple1 {\n                    product *= val.(int)\n                }\n                for _, val := range tuple2 {\n                    product *= val.(int)\n                }\n                if min_product == 0 || product < min_product {\n                    min_product = product\n                }\n            }\n        }\n    }\n    return min_product\n}\n",
    "    min := 0\n    for i, _ := range list1 {\n        for j, _ := range list1 {\n            if i != j {\n                product := list1[i][0].(int) * list1[j][1].(int)\n                if min == 0 || product < min {\n                    min = product\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    min := 0\n    for i := 0; i < len(list1); i++ {\n        for j := i + 1; j < len(list1); j++ {\n            if list1[i][0] == list1[j][1] {\n                if min == 0 {\n                    min = list1[i][1].(int) * list1[j][0].(int)\n                } else {\n                    if min > list1[i][1].(int) * list1[j][0].(int) {\n                        min = list1[i][1].(int) * list1[j][0].(int)\n                    }\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := tuple1[0].(int) * tuple2[1].(int)\n                if min == 0 || product < min {\n                    min = product\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int = 0\n    for i, tuple1 := range list1 {\n        for j, tuple2 := range list1 {\n            if i != j {\n                product := tuple1[0].(int) * tuple2[1].(int)\n                if min == 0 || product < min {\n                    min = product\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    min := 0\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1); j++ {\n            if i != j {\n                product := list1[i][0].(int) * list1[j][1].(int)\n                if min == 0 {\n                    min = product\n                } else if product < min {\n                    min = product\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int = 0\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1); j++ {\n            if i == j {\n                continue\n            }\n            if min == 0 {\n                min = list1[i][0].(int) * list1[j][1].(int)\n            }\n            if list1[i][0].(int) * list1[j][1].(int) < min {\n                min = list1[i][0].(int) * list1[j][1].(int)\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int = 0\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := tuple1[0].(int) * tuple2[1].(int)\n                if min == 0 || product < min {\n                    min = product\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    min := 0\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1[i]); j++ {\n            if min == 0 {\n                min = list1[i][j].(int)\n            } else if list1[i][j].(int) < min {\n                min = list1[i][j].(int)\n            }\n        }\n    }\n    return min\n}\n",
    "    var result int = 0\n    for i := 0; i < len(list1); i++ {\n        for j := i + 1; j < len(list1); j++ {\n            if result == 0 {\n                result = list1[i][0].(int) * list1[j][1].(int)\n            } else {\n                if result > list1[i][0].(int) * list1[j][1].(int) {\n                    result = list1[i][0].(int) * list1[j][1].(int)\n                }\n            }\n        }\n    }\n    return result\n}\n",
    "    min := 0\n    for i := 0; i < len(list1); i++ {\n        for j := i+1; j < len(list1); j++ {\n            if min == 0 {\n                min = list1[i][0].(int) * list1[j][1].(int)\n            } else if min > list1[i][0].(int) * list1[j][1].(int) {\n                min = list1[i][0].(int) * list1[j][1].(int)\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int = 0\n    for i := 0; i < len(list1); i++ {\n        for j := i + 1; j < len(list1); j++ {\n            //fmt.Println(list1[i][1], list1[j][1])\n            product := list1[i][1].(int) * list1[j][1].(int)\n            if min == 0 {\n                min = product\n            } else if product < min {\n                min = product\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int = 0\n    for i := 0; i < len(list1); i++ {\n        for j := i + 1; j < len(list1); j++ {\n            var product int = 1\n            for k := 0; k < len(list1[i]); k++ {\n                product *= list1[i][k].(int) * list1[j][k].(int)\n            }\n            if min == 0 || min > product {\n                min = product\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int\n    for i := 0; i < len(list1); i++ {\n        for j := i + 1; j < len(list1); j++ {\n            if i == 0 && j == 1 {\n                min = list1[i][0].(int) * list1[j][1].(int)\n            } else {\n                if list1[i][0].(int) * list1[j][1].(int) < min {\n                    min = list1[i][0].(int) * list1[j][1].(int)\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    min := 0\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1); j++ {\n            if i == j {\n                continue\n            }\n            product := list1[i][0].(int) * list1[j][1].(int)\n            if min == 0 || product < min {\n                min = product\n            }\n        }\n    }\n    return min\n}\n",
    "    var min_product int\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := tuple1[0].(int) * tuple2[1].(int)\n                if min_product == 0 || product < min_product {\n                    min_product = product\n                }\n            }\n        }\n    }\n    return min_product\n}\n",
    "    var min int\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1); j++ {\n            if i == j {\n                continue\n            }\n            if i == 0 && j == 1 {\n                min = list1[i][0].(int) * list1[j][1].(int)\n            }\n            if min > list1[i][0].(int) * list1[j][1].(int) {\n                min = list1[i][0].(int) * list1[j][1].(int)\n            }\n        }\n    }\n    return min\n}\n",
    "    min := 0\n    for i := 0; i < len(list1); i++ {\n        for j := i + 1; j < len(list1); j++ {\n            if min == 0 {\n                min = list1[i][0].(int) * list1[j][0].(int)\n            } else if min > list1[i][0].(int) * list1[j][0].(int) {\n                min = list1[i][0].(int) * list1[j][0].(int)\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int = 0\n    for i := 0; i < len(list1); i++ {\n        for j := i + 1; j < len(list1); j++ {\n            var product int = 1\n            for k := 0; k < len(list1[i]); k++ {\n                product *= list1[i][k].(int) * list1[j][k].(int)\n            }\n            if min == 0 || product < min {\n                min = product\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int = 0\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1); j++ {\n            if i != j {\n                if list1[i][0].(int) * list1[j][1].(int) < min || min == 0 {\n                    min = list1[i][0].(int) * list1[j][1].(int)\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := tuple1[0].(int) * tuple2[1].(int)\n                if min == 0 || product < min {\n                    min = product\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int = 0\n    for i := 0; i < len(list1); i++ {\n        for j := i + 1; j < len(list1); j++ {\n            var product int = 1\n            for k := 0; k < len(list1[i]); k++ {\n                product *= list1[i][k].(int) * list1[j][k].(int)\n            }\n            if min == 0 || product < min {\n                min = product\n            }\n        }\n    }\n    return min\n}\n",
    "    min_product := 0\n    for _, tuple := range list1 {\n        product := 1\n        for _, value := range tuple {\n            product *= value.(int)\n        }\n        if min_product == 0 || product < min_product {\n            min_product = product\n        }\n    }\n    return min_product\n}\n",
    "    var min_product int = 0\n    for i := 0; i < len(list1); i++ {\n        for j := i + 1; j < len(list1); j++ {\n            product := list1[i][0].(int) * list1[j][0].(int)\n            if min_product == 0 {\n                min_product = product\n            } else if product < min_product {\n                min_product = product\n            }\n        }\n    }\n    return min_product\n}\n",
    "    min_product := 0\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1); j++ {\n            if i == j {\n                continue\n            }\n            product := list1[i][0].(int) * list1[j][1].(int)\n            if min_product == 0 || product < min_product {\n                min_product = product\n            }\n        }\n    }\n    return min_product\n}\n",
    "    var min int = 0\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1); j++ {\n            if i != j {\n                if min == 0 {\n                    min = list1[i][1].(int) * list1[j][1].(int)\n                } else {\n                    if min > list1[i][1].(int) * list1[j][1].(int) {\n                        min = list1[i][1].(int) * list1[j][1].(int)\n                    }\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    min := 0\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := tuple1[0].(int) * tuple2[1].(int)\n                if min == 0 || product < min {\n                    min = product\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := tuple1[0].(int) * tuple2[1].(int)\n                if min == 0 || product < min {\n                    min = product\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int = 0\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1); j++ {\n            if i != j {\n                product := list1[i][0].(int) * list1[j][1].(int)\n                if min == 0 || product < min {\n                    min = product\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    var min_product int = 0\n    var product int = 0\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1); j++ {\n            if i != j {\n                product = list1[i][0].(int) * list1[j][1].(int)\n                if min_product == 0 || product < min_product {\n                    min_product = product\n                }\n            }\n        }\n    }\n    return min_product\n}\n",
    "    var min_product int = 0\n    for i, tuple1 := range list1 {\n        for j, tuple2 := range list1 {\n            if i != j {\n                product := tuple1[0].(int) * tuple2[1].(int)\n                if min_product == 0 || product < min_product {\n                    min_product = product\n                }\n            }\n        }\n    }\n    return min_product\n}\n",
    "    var min int = 0\n    for i := 0; i < len(list1); i++ {\n        for j := i + 1; j < len(list1); j++ {\n            product := 1\n            for k := 0; k < len(list1[i]); k++ {\n                product *= list1[i][k].(int) * list1[j][k].(int)\n            }\n            if min == 0 || product < min {\n                min = product\n            }\n        }\n    }\n    return min\n}\n",
    "    min := 0\n    for i := 0; i < len(list1); i++ {\n        for j := i + 1; j < len(list1); j++ {\n            if min == 0 {\n                min = list1[i][0].(int) * list1[j][1].(int)\n            } else {\n                if list1[i][0].(int) * list1[j][1].(int) < min {\n                    min = list1[i][0].(int) * list1[j][1].(int)\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1[i]); j++ {\n            if i == 0 && j == 0 {\n                min = list1[i][j].(int)\n            } else {\n                if list1[i][j].(int) < min {\n                    min = list1[i][j].(int)\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int = 0\n    for i := 0; i < len(list1); i++ {\n        for j := i+1; j < len(list1); j++ {\n            product := 1\n            for k := 0; k < len(list1[i]); k++ {\n                product *= list1[i][k].(int) * list1[j][k].(int)\n            }\n            if min == 0 || product < min {\n                min = product\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int = 0\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1[0] != tuple2[0] && tuple1[1] != tuple2[1] {\n                product := tuple1[0].(int) * tuple2[1].(int)\n                if min == 0 || product < min {\n                    min = product\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    min_product := 0\n    for i := 0; i < len(list1); i++ {\n        for j := i + 1; j < len(list1); j++ {\n            product := list1[i][0].(int) * list1[j][0].(int)\n            if min_product == 0 || product < min_product {\n                min_product = product\n            }\n        }\n    }\n    return min_product\n}\n",
    "    var min int\n    for i := 0; i < len(list1); i++ {\n        for j := i + 1; j < len(list1); j++ {\n            if i == 0 && j == 1 {\n                min = list1[i][0].(int) * list1[j][1].(int)\n            } else {\n                if list1[i][0].(int) * list1[j][1].(int) < min {\n                    min = list1[i][0].(int) * list1[j][1].(int)\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1); j++ {\n            if i != j {\n                if min == 0 {\n                    min = list1[i][0].(int) * list1[j][1].(int)\n                } else {\n                    if min > list1[i][0].(int) * list1[j][1].(int) {\n                        min = list1[i][0].(int) * list1[j][1].(int)\n                    }\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    min_product := 0\n    for i, tuple1 := range list1 {\n        for j, tuple2 := range list1 {\n            if i == j {\n                continue\n            }\n            product := tuple1[0].(int) * tuple2[1].(int)\n            if min_product == 0 || product < min_product {\n                min_product = product\n            }\n        }\n    }\n    return min_product\n}\n",
    "    min := 0\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := tuple1[0].(int) * tuple2[0].(int)\n                if min == 0 || product < min {\n                    min = product\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    min := 0\n    for i := 0; i < len(list1); i++ {\n        for j := i + 1; j < len(list1); j++ {\n            if list1[i][0] == list1[j][1] && list1[i][1] == list1[j][0] {\n                if min == 0 {\n                    min = list1[i][2].(int) * list1[j][2].(int)\n                } else if min > list1[i][2].(int) * list1[j][2].(int) {\n                    min = list1[i][2].(int) * list1[j][2].(int)\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    min := 0\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := tuple1[0].(int) * tuple2[1].(int)\n                if min == 0 || product < min {\n                    min = product\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    min := 0\n    for i := 0; i < len(list1); i++ {\n        for j := i + 1; j < len(list1); j++ {\n            product := 1\n            for k := 0; k < len(list1[i]); k++ {\n                product *= list1[i][k].(int) * list1[j][k].(int)\n            }\n            if min == 0 || product < min {\n                min = product\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int = 0\n    for i := 0; i < len(list1); i++ {\n        for j := i + 1; j < len(list1); j++ {\n            var product int = 1\n            for k := 0; k < len(list1[i]); k++ {\n                product *= list1[i][k].(int) * list1[j][k].(int)\n            }\n            if min == 0 || product < min {\n                min = product\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int = 0\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1); j++ {\n            if i != j {\n                product := list1[i][0].(int) * list1[j][1].(int)\n                if min == 0 {\n                    min = product\n                } else if product < min {\n                    min = product\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    var min_product int = 0\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1); j++ {\n            if i != j {\n                product := list1[i][0].(int) * list1[j][1].(int)\n                if min_product == 0 {\n                    min_product = product\n                } else if product < min_product {\n                    min_product = product\n                }\n            }\n        }\n    }\n    return min_product\n}\n",
    "    var min_product int\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1); j++ {\n            if i != j {\n                product := list1[i][0].(int) * list1[j][1].(int)\n                if min_product == 0 {\n                    min_product = product\n                } else if product < min_product {\n                    min_product = product\n                }\n            }\n        }\n    }\n    return min_product\n}\n",
    "    var min int\n    for _, v1 := range list1 {\n        for _, v2 := range list1 {\n            if v1[0] != v2[0] && v1[1] != v2[1] {\n                product := v1[0].(int) * v2[1].(int)\n                if min == 0 || product < min {\n                    min = product\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int = 0\n    var product int = 0\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1[i]); j++ {\n            if j == 0 {\n                min = list1[i][j].(int)\n            } else {\n                if list1[i][j].(int) < min {\n                    min = list1[i][j].(int)\n                }\n            }\n        }\n        product += min\n    }\n    return product\n}\n",
    "    var min int\n    for i := 0; i < len(list1); i++ {\n        for j := i + 1; j < len(list1); j++ {\n            product := list1[i][0].(int) * list1[j][0].(int)\n            if min == 0 || product < min {\n                min = product\n            }\n        }\n    }\n    return min\n}\n",
    "    min_product := list1[0][0].(int) * list1[0][1].(int)\n    for _, tuple := range list1 {\n        product := tuple[0].(int) * tuple[1].(int)\n        if product < min_product {\n            min_product = product\n        }\n    }\n    return min_product\n}\n",
    "    min := 0\n    for i, tuple1 := range list1 {\n        for j, tuple2 := range list1 {\n            if i == j {\n                continue\n            }\n            product := tuple1[0].(int) * tuple2[1].(int)\n            if min == 0 || product < min {\n                min = product\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1[i]); j++ {\n            if i == 0 && j == 0 {\n                min = list1[i][j].(int)\n            } else {\n                if list1[i][j].(int) < min {\n                    min = list1[i][j].(int)\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    min := 0\n    for i := 0; i < len(list1); i++ {\n        for j := i + 1; j < len(list1); j++ {\n            if list1[i][0] == list1[j][1] && list1[i][1] == list1[j][0] {\n                if min == 0 {\n                    min = list1[i][2].(int) * list1[j][2].(int)\n                } else {\n                    if min > list1[i][2].(int) * list1[j][2].(int) {\n                        min = list1[i][2].(int) * list1[j][2].(int)\n                    }\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1); j++ {\n            if i != j {\n                if min == 0 {\n                    min = list1[i][0].(int) * list1[j][1].(int)\n                } else if min > list1[i][0].(int) * list1[j][1].(int) {\n                    min = list1[i][0].(int) * list1[j][1].(int)\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    min := 0\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := tuple1[0].(int) * tuple2[1].(int)\n                if min == 0 || product < min {\n                    min = product\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int = 0\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1); j++ {\n            if i != j {\n                if min == 0 {\n                    min = list1[i][0].(int) * list1[j][1].(int)\n                } else {\n                    if min > list1[i][0].(int) * list1[j][1].(int) {\n                        min = list1[i][0].(int) * list1[j][1].(int)\n                    }\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    min := 0\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := tuple1[0].(int) * tuple2[0].(int)\n                if min == 0 || product < min {\n                    min = product\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int\n    for i := 0; i < len(list1); i++ {\n        for j := i+1; j < len(list1); j++ {\n            if (list1[i][0].(int) * list1[j][0].(int)) < min {\n                min = list1[i][0].(int) * list1[j][0].(int)\n            }\n        }\n    }\n    return min\n}\n",
    "    min := 0\n    for i, _ := range list1 {\n        for j, _ := range list1 {\n            if i != j {\n                product := list1[i][0].(int) * list1[j][1].(int)\n                if min == 0 || product < min {\n                    min = product\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int = 0\n    for _, v1 := range list1 {\n        for _, v2 := range list1 {\n            if v1 != v2 {\n                var product int = v1[0].(int) * v2[0].(int)\n                if min == 0 || product < min {\n                    min = product\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    min := 0\n    for i := 0; i < len(list1); i++ {\n        for j := i + 1; j < len(list1); j++ {\n            product := list1[i][0].(int) * list1[j][0].(int)\n            if min == 0 || product < min {\n                min = product\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int\n    for i, tuple1 := range list1 {\n        for j, tuple2 := range list1 {\n            if i != j {\n                product := tuple1[0].(int) * tuple2[1].(int)\n                if min == 0 || product < min {\n                    min = product\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int\n    for i := 0; i < len(list1); i++ {\n        for j := i + 1; j < len(list1); j++ {\n            if i == 0 && j == 1 {\n                min = list1[i][0].(int) * list1[j][1].(int)\n            } else {\n                if list1[i][0].(int) * list1[j][1].(int) < min {\n                    min = list1[i][0].(int) * list1[j][1].(int)\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    min_product := 0\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1); j++ {\n            if i != j {\n                product := list1[i][0].(int) * list1[j][1].(int)\n                if min_product == 0 || product < min_product {\n                    min_product = product\n                }\n            }\n        }\n    }\n    return min_product\n}\n",
    "    var min_product int = 0\n    var min_product_tuple_index int = 0\n    for i := 0; i < len(list1); i++ {\n        var product int = 1\n        for j := 0; j < len(list1[i]); j++ {\n            product *= list1[i][j].(int)\n        }\n        if i == 0 {\n            min_product = product\n        } else {\n            if product < min_product {\n                min_product = product\n                min_product_tuple_index = i\n            }\n        }\n    }\n    fmt.Println(\"The minimum product tuple is: \", list1[min_product_tuple_index])\n    return min_product\n}\n",
    "    var min int\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := tuple1[0].(int) * tuple2[0].(int)\n                if min == 0 || product < min {\n                    min = product\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := tuple1[0].(int) * tuple2[0].(int)\n                if min == 0 || product < min {\n                    min = product\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    min_product := 0\n    for _, tuple1 := range list1 {\n        for _, tuple2 := range list1 {\n            if tuple1 != tuple2 {\n                product := 1\n                for _, value := range tuple1 {\n                    product *= value.(int)\n                }\n                for _, value := range tuple2 {\n                    product *= value.(int)\n                }\n                if min_product == 0 || product < min_product {\n                    min_product = product\n                }\n            }\n        }\n    }\n    return min_product\n}\n",
    "    var min_product int = 0\n\n    for i := 0; i < len(list1); i++ {\n        for j := i + 1; j < len(list1); j++ {\n            product := list1[i][0].(int) * list1[j][0].(int)\n            if min_product == 0 || product < min_product {\n                min_product = product\n            }\n        }\n    }\n\n    return min_product\n}\n",
    "    min := 0\n    for i := 0; i < len(list1); i++ {\n        for j := i + 1; j < len(list1); j++ {\n            if min == 0 {\n                min = list1[i][0].(int) * list1[j][0].(int)\n            } else {\n                if min > list1[i][0].(int) * list1[j][0].(int) {\n                    min = list1[i][0].(int) * list1[j][0].(int)\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int = 0\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1); j++ {\n            if i == j {\n                continue\n            }\n            product := list1[i][0].(int) * list1[j][1].(int)\n            if min == 0 || product < min {\n                min = product\n            }\n        }\n    }\n    return min\n}\n",
    "    min := 0\n    for i := 0; i < len(list1); i++ {\n        for j := i + 1; j < len(list1); j++ {\n            product := 1\n            for k := 0; k < len(list1[i]); k++ {\n                product *= list1[i][k].(int) * list1[j][k].(int)\n            }\n            if min == 0 || product < min {\n                min = product\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int = 0\n    for i := 0; i < len(list1); i++ {\n        for j := i + 1; j < len(list1); j++ {\n            var product int = 1\n            for k := 0; k < len(list1[i]); k++ {\n                product *= list1[i][k].(int) * list1[j][k].(int)\n            }\n            if min == 0 || product < min {\n                min = product\n            }\n        }\n    }\n    return min\n}\n",
    "    min := 0\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1); j++ {\n            if i != j {\n                if min == 0 {\n                    min = list1[i][0].(int) * list1[j][1].(int)\n                } else if min > list1[i][0].(int) * list1[j][1].(int) {\n                    min = list1[i][0].(int) * list1[j][1].(int)\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    min := 0\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1); j++ {\n            if i == j {\n                continue\n            }\n            product := list1[i][0].(int) * list1[j][1].(int)\n            if min == 0 || product < min {\n                min = product\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int = 0\n    for i := 0; i < len(list1); i++ {\n        for j := i+1; j < len(list1); j++ {\n            var product int = 1\n            for k := 0; k < len(list1[i]); k++ {\n                product *= list1[i][k].(int) * list1[j][k].(int)\n            }\n            if min == 0 || product < min {\n                min = product\n            }\n        }\n    }\n    return min\n}\n",
    "    var min int = 0\n    for i := 0; i < len(list1); i++ {\n        for j := 0; j < len(list1); j++ {\n            if i != j {\n                if min == 0 {\n                    min = list1[i][0].(int) * list1[j][1].(int)\n                } else {\n                    if min > list1[i][0].(int) * list1[j][1].(int) {\n                        min = list1[i][0].(int) * list1[j][1].(int)\n                    }\n                }\n            }\n        }\n    }\n    return min\n}\n",
    "    min := 0\n    for i := 0; i < len(list1); i++ {\n        for j := i + 1; j < len(list1); j++ {\n            if list1[i][0].(int) * list1[j][1].(int) < min {\n                min = list1[i][0].(int) * list1[j][1].(int)\n            }\n        }\n    }\n    return min\n}\n",
    "    min := 0\n    for i := 0; i < len(list1); i++ {\n        for j := i + 1; j < len(list1); j++ {\n            if min == 0 {\n                min = list1[i][0].(int) * list1[j][1].(int)\n            } else {\n                if min > list1[i][0].(int) * list1[j][1].(int) {\n                    min = list1[i][0].(int) * list1[j][1].(int)\n                }\n            }\n        }\n    }\n    return min\n}\n"
  ]
}
{
  "name": "mbpp_103_eulerian_num",
  "language": "go_test.go",
  "prompt": "package eulerian_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the Eulerian number a(n, m).\nfunc eulerian_num(n int, m int) int {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_103_eulerian_num.py",
  "prompt_terminology": "verbatim",
  "tests": "func TestEulerian_Num(t *testing.T) {\n  candidate := eulerian_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3, 1), expected: 4 },\n     { actual: candidate(4, 1), expected: 11 },\n     { actual: candidate(5, 3), expected: 26 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
  "stop_tokens": [
    "\nfunc",
    "struct",
    "\n// "
  ],
  "completions": [
    "    if n == 0 {\n        return 1\n    }\n    if m == 0 {\n        return 0\n    }\n    return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    // TODO: implement\n    return 0\n}\n",
    "    if n == 0 {\n        return 1\n    } else if m == 0 {\n        return 0\n    } else {\n        return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n    }\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if n < m {\n        return 0\n    }\n    return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    } else if n == 1 {\n        return m\n    } else if m == 1 {\n        return 1\n    } else {\n        return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n    }\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    if m == 0 {\n        return 0\n    }\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    if n < 0 || m < 0 {\n        return 0\n    }\n    return (n - m) * eulerian_num(n - 1, m) + (m + 1) * eulerian_num(n - 1, m - 1)\n}\n",
    "    if n < 0 || m < 0 {\n        return 0\n    }\n    if n == 0 || m == 0 {\n        return 1\n    }\n    if n == 1 {\n        return m + 1\n    }\n    if m == 1 {\n        return n + 1\n    }\n    return (n + m) * eulerian_num(n - 1, m) + eulerian_num(n, m - 1)\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if n == m {\n        return 0\n    }\n    return (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    if m == 0 {\n        return 0\n    }\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if n == 1 {\n        return m + 1\n    }\n    if m == 1 {\n        return n + 1\n    }\n    return eulerian_num(n - 1, m) + m * eulerian_num(n, m - 1)\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if n == 1 {\n        return m + 1\n    }\n    if m == 1 {\n        return n + 1\n    }\n    return eulerian_num(n - 1, m) + eulerian_num(n, m - 1)\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if n < m {\n        return 0\n    }\n    return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if n < m {\n        return 0\n    }\n    return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n < 0 || m < 0 {\n        return 0\n    }\n    if n == 0 && m == 0 {\n        return 1\n    }\n    if m == 0 {\n        return 0\n    }\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1)\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if n == 1 {\n        return m + 1\n    }\n    if m == 1 {\n        return n + 1\n    }\n    return eulerian_num(n - 1, m) + m * eulerian_num(n, m - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return m + 1\n    }\n    if m == 0 {\n        return 0\n    }\n    return (n - m) * eulerian_num(n - 1, m) + (m + 1) * eulerian_num(n - 1, m - 1)\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if n == 1 {\n        return m\n    }\n    if m == 1 {\n        return n\n    }\n    return (n - m) * eulerian_num(n - 1, m) + (m + 1) * eulerian_num(n - 1, m - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    if m == 0 {\n        return 0\n    }\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if n == 1 {\n        return m + 1\n    }\n    if m == 1 {\n        return n + 1\n    }\n    return eulerian_num(n - 1, m) + m * eulerian_num(n, m - 1)\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if n == 1 {\n        return m + 1\n    }\n    if m == 1 {\n        return n + 1\n    }\n    return eulerian_num(n - 1, m) + m * eulerian_num(n, m - 1)\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if n == 1 {\n        return m\n    }\n    if m == 1 {\n        return 1\n    }\n    return (n - m) * eulerian_num(n - 1, m) + (m + 1) * eulerian_num(n - 1, m - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    if m == 0 {\n        return 0\n    }\n    return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    if m == 0 {\n        return 0\n    }\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if n < m {\n        return 0\n    }\n    return eulerian_num(n-1, m-1) + (n-m+1) * eulerian_num(n-1, m)\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if n == 1 || m == 1 {\n        return n\n    }\n    if n == m {\n        return 1\n    }\n    return eulerian_num(n-1, m-1) + (n-1) * eulerian_num(n-1, m)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    if m == 0 {\n        return 0\n    }\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if m == 0 {\n        return 1\n    }\n    if n == 0 {\n        return 0\n    }\n    return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if n < m {\n        return 0\n    }\n    return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if n == 1 {\n        return m + 1\n    }\n    if m == 1 {\n        return n + 1\n    }\n    return (n + m) * eulerian_num(n, m - 1) / m\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if n == 1 {\n        return m + 1\n    }\n    if m == 1 {\n        return n + 1\n    }\n    return eulerian_num(n - 1, m) + m * eulerian_num(n, m - 1)\n}\n",
    "    if n == 0 && m == 0 {\n        return 1\n    }\n    if n < 0 || m < 0 {\n        return 0\n    }\n    return (n + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n < 0 || m < 0 {\n        return 0\n    }\n    if n == 0 || m == 0 {\n        return 1\n    }\n    if n < m {\n        return 0\n    }\n    return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if n == 1 {\n        return m + 1\n    }\n    if m == 1 {\n        return n + 1\n    }\n    return eulerian_num(n - 1, m) + m * eulerian_num(n, m - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    if m == 0 {\n        return 0\n    }\n    return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if n == 1 {\n        return m + 1\n    }\n    if m == 1 {\n        return n + 1\n    }\n    return eulerian_num(n - 1, m) + m * eulerian_num(n, m - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    if m == 0 {\n        return 0\n    }\n    return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    if n < m {\n        return 0\n    }\n    return (n - m + 1) * eulerian_num(n - 1, m) + (m + 1) * eulerian_num(n - 1, m - 1)\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if n == 1 {\n        return m + 1\n    }\n    if m == 1 {\n        return n + 1\n    }\n    return (n + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n < m {\n        return 0\n    }\n    if n == m {\n        return 1\n    }\n    if m == 0 {\n        return 1\n    }\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1)\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if n == 1 || m == 1 {\n        return n\n    }\n    if n < m {\n        return 0\n    }\n    return (n - m + 1) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    if m == 0 {\n        return 0\n    }\n    return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if n == 1 {\n        return m + 1\n    }\n    if m == 1 {\n        return n + 1\n    }\n    return eulerian_num(n - 1, m) + m * eulerian_num(n, m - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    if m == 0 {\n        return 0\n    }\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 && m == 0 {\n        return 1\n    }\n    if n == 0 || m == 0 {\n        return 0\n    }\n    return (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    if m == 0 {\n        return 0\n    }\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if n == 1 || m == 1 {\n        return n\n    }\n    if n == m {\n        return 1\n    }\n    return eulerian_num(n-1, m-1) + (n-1) * eulerian_num(n-1, m)\n}\n",
    "    if n == 0 && m == 0 {\n        return 1\n    }\n    if n < 0 || m < 0 {\n        return 0\n    }\n    return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if m == 1 {\n        return 0\n    }\n    if n == m {\n        return 1\n    }\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    if m == 0 {\n        return 0\n    }\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if n == 1 {\n        return m + 1\n    }\n    if m == 1 {\n        return n + 1\n    }\n    return eulerian_num(n - 1, m) + eulerian_num(n, m - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    if n < 0 || m < 0 {\n        return 0\n    }\n    return (n - m + 1) * eulerian_num(n - 1, m - 1) / n + m * eulerian_num(n - 1, m) / n\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    if m == 0 {\n        return 0\n    }\n    return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    if n < m {\n        return 0\n    }\n    return eulerian_num(n-1, m) + (n-m) * eulerian_num(n-1, m-1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    if m == 0 {\n        return 0\n    }\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if n == 1 {\n        return m + 1\n    }\n    if m == 1 {\n        return n + 1\n    }\n    return eulerian_num(n - 1, m) + m * eulerian_num(n, m - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    if m == 0 {\n        return 0\n    }\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if n == 1 || m == 1 {\n        return n\n    }\n    if n < m {\n        return 0\n    }\n    return eulerian_num(n-1, m-1) + (n-m)*eulerian_num(n-1, m)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    if m == 0 {\n        return 0\n    }\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if n == 1 {\n        return m + 1\n    }\n    if m == 1 {\n        return n + 1\n    }\n    return eulerian_num(n - 1, m) + m * eulerian_num(n, m - 1)\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if n < m {\n        return 0\n    }\n    return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if n < m {\n        return 0\n    }\n    return eulerian_num(n-1, m-1) + (n-m+1) * eulerian_num(n-1, m)\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if n == 1 {\n        return m\n    }\n    if m == 1 {\n        return 1\n    }\n    return (n - m) * eulerian_num(n - 1, m) + (m + 1) * eulerian_num(n - 1, m - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    if m == 0 {\n        return 0\n    }\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n < m {\n        return 0\n    }\n    if n == m {\n        return 1\n    }\n    return (n - m) * eulerian_num(n - 1, m) + (m + 1) * eulerian_num(n - 1, m - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    if m == 0 {\n        return 0\n    }\n    return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    if m == 0 {\n        return 0\n    }\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n < 0 || m < 0 {\n        return 0\n    }\n    if n == 0 || m == 0 {\n        return 1\n    }\n    if n < m {\n        return 0\n    }\n    return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if n == 1 {\n        return m\n    }\n    if m == 1 {\n        return n\n    }\n    return (n - m) * eulerian_num(n - 1, m) + (m + 1) * eulerian_num(n - 1, m - 1)\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if n == 1 {\n        return m\n    }\n    if m == 1 {\n        return 1\n    }\n    return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if n < m {\n        return 0\n    }\n    return eulerian_num(n - 1, m - 1) + (n - m) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    if m == 0 {\n        return 0\n    }\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if n < m {\n        return 0\n    }\n    return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    if n < m {\n        return 0\n    }\n    return (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1)\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if n < m {\n        return 0\n    }\n    return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if n < m {\n        return 0\n    }\n    return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    if m == 0 {\n        return 0\n    }\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if n == 1 {\n        return m + 1\n    }\n    if m == 1 {\n        return n + 1\n    }\n    return eulerian_num(n - 1, m) + m * eulerian_num(n, m - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    } else if m == 0 {\n        return 0\n    } else {\n        return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n    }\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    if n < m {\n        return 0\n    }\n    return (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1)\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if n == 1 || m == 1 {\n        return n\n    }\n    return eulerian_num(n-1, m-1) + (n-1) * eulerian_num(n-1, m)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    if m == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if m == 1 {\n        return 1\n    }\n    return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if n == 1 {\n        return m + 1\n    }\n    if m == 1 {\n        return n + 1\n    }\n    return eulerian_num(n-1, m) + m * eulerian_num(n, m-1)\n}\n",
    "    if n == 0 && m == 0 {\n        return 1\n    }\n    if n == 0 || m == 0 {\n        return 0\n    }\n    return (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 {\n        return 1\n    } else if n == 1 {\n        return m\n    } else if m == 0 {\n        return 0\n    } else {\n        return (n-1)*eulerian_num(n-1, m) + (m-1)*eulerian_num(n, m-1)\n    }\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if n == 1 {\n        return m + 1\n    }\n    if m == 1 {\n        return n + 1\n    }\n    return (n + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    if n < m {\n        return 0\n    }\n    return (n - m) * eulerian_num(n - 1, m) + (m + 1) * eulerian_num(n - 1, m - 1)\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if n < m {\n        return 0\n    }\n    return (n - m + 1) * eulerian_num(n - 1, m - 1) / m\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if n < m {\n        return 0\n    }\n    return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 {\n        return 1\n    } else if m == 0 {\n        return 0\n    } else {\n        return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n    }\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    if m == 0 {\n        return 0\n    }\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    // Initialize the array.\n    a := make([][]int, n+1)\n    for i := 0; i <= n; i++ {\n        a[i] = make([]int, m+1)\n    }\n\n    // Fill the array.\n    for i := 0; i <= n; i++ {\n        for j := 0; j <= m; j++ {\n            if i == 0 && j == 0 {\n                a[i][j] = 1\n            } else if i == 0 {\n                a[i][j] = 0\n            } else if j == 0 {\n                a[i][j] = 1\n            } else {\n                a[i][j] = a[i-1][j-1] + (i * a[i-1][j])\n            }\n        }\n    }\n\n    return a[n][m]\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return m\n    }\n    if n == 2 {\n        return m * (m - 1) + 1\n    }\n    if n == 3 {\n        return m * (m - 1) * (m - 2) + m * 2 + 1\n    }\n    if n == 4 {\n        return m * (m - 1) * (m - 2) * (m - 3) + m * (m - 1) * 3 + m * 2 + 1\n    }\n    if n == 5 {\n        return m * (m - 1) * (m - 2) * (m - 3) * (m - 4) + m * (m - 1) * (m - 2) * 4 + m * (m - 1) * 3 + m * 2 + 1\n    }\n    if n == 6 {\n        return m * (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) + m * (m - 1) * (m - 2) * (m - 3) * 5 + m * (m - 1) * (m - 2) * 4 + m * (m - 1) * 3 + m * 2 + 1\n    }\n    if n == 7 {\n        return m * (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) + m * (m - 1) * (m - 2) * (m - 3) * (m - 4) * 6 + m * (m - 1) * (m - 2) * (m - 3) * 5 + m * (m - 1) * (m - 2) * 4 + m * (m - 1) * 3 + m * 2 + 1\n    }\n    if n == 8 {\n        return m * (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) + m * (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if n == 1 {\n        return m + 1\n    }\n    if m == 1 {\n        return n + 1\n    }\n    return (n + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return m\n    }\n    if n == 2 {\n        return m * (m - 1) + 1\n    }\n    return (m - n + 1) * eulerian_num(n - 1, m) + (n + 1) * eulerian_num(n - 2, m)\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if n == 1 || m == 1 {\n        return n\n    }\n    if n < m {\n        return 0\n    }\n    return eulerian_num(n-1, m) + (n-1) * eulerian_num(n-1, m-1)\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if n == 1 {\n        return m + 1\n    }\n    if m == 1 {\n        return n + 1\n    }\n    return eulerian_num(n - 1, m) + eulerian_num(n, m - 1)\n}\n",
    "    if n == 0 && m == 0 {\n        return 1\n    }\n    if n == 0 || m == 0 {\n        return 0\n    }\n    return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if n == 1 || m == 1 {\n        return n\n    }\n    return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if n == 1 {\n        return m\n    }\n    if m == 1 {\n        return 1\n    }\n    return (n - m) * eulerian_num(n - 1, m) + (m + 1) * eulerian_num(n - 1, m - 1)\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if n < m {\n        return 0\n    }\n    return eulerian_num(n-1, m-1) + (n-m+1) * eulerian_num(n-1, m)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    if m == 0 {\n        return 0\n    }\n    return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if n == 1 || m == 1 {\n        return n\n    }\n    return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if n < m {\n        return 0\n    }\n    return eulerian_num(n - 1, m - 1) + (n - m) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    if m == 0 {\n        return 0\n    }\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 {\n        return 1\n    } else if n == 1 {\n        return m\n    } else if n > 1 {\n        return (m - n + 1) * eulerian_num(n - 1, m) + (n + 1) * eulerian_num(n - 1, m - 1)\n    } else {\n        return 0\n    }\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    if m == 0 {\n        return 0\n    }\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if n == 1 {\n        return m + 1\n    }\n    if m == 1 {\n        return n + 1\n    }\n    return (n + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    if n < m {\n        return 0\n    }\n    return (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1)\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if n < m {\n        return 0\n    }\n    return (n - m + 1) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1)\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if n == 1 {\n        return m\n    }\n    if m == 1 {\n        return 1\n    }\n    return (n - m) * eulerian_num(n - 1, m) + (m + 1) * eulerian_num(n - 1, m - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    } else if n == 1 {\n        return m\n    } else if m == 0 {\n        return 0\n    } else {\n        return (m - n + 1) * eulerian_num(n - 1, m) + (n + 1) * eulerian_num(n, m - 1)\n    }\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if n == 1 {\n        return m + 1\n    }\n    if m == 1 {\n        return n + 1\n    }\n    return (n + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if n == 1 {\n        return m + 1\n    }\n    if m == 1 {\n        return n + 1\n    }\n    return (n + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return m\n    }\n    if n == 2 {\n        return m * (m - 1) + 1\n    }\n    if n == 3 {\n        return m * (m - 1) * (m - 2) + m * 2\n    }\n    if n == 4 {\n        return m * (m - 1) * (m - 2) * (m - 3) + m * (m - 1) * 3 + 1\n    }\n    return 0\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    if m == 0 {\n        return 0\n    }\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if n == 1 {\n        return m + 1\n    }\n    if m == 1 {\n        return n + 1\n    }\n    return eulerian_num(n - 1, m) + m * eulerian_num(n, m - 1)\n}\n",
    "    if m == 0 {\n        return 1\n    }\n    if n == 0 {\n        return 0\n    }\n    return (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1)\n}\n",
    "    if n < 0 || m < 0 {\n        return 0\n    }\n    if n == 0 && m == 0 {\n        return 1\n    }\n    if n == 0 || m == 0 {\n        return 0\n    }\n    return (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if n < m {\n        return 0\n    }\n    return eulerian_num(n - 1, m - 1) + (n - m) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if n == 1 {\n        return m\n    }\n    if m == 1 {\n        return 1\n    }\n    return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 && m == 0 {\n        return 1\n    }\n    if n == 0 || m == 0 {\n        return 0\n    }\n    return (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n < 0 || m < 0 {\n        return 0\n    }\n    if n == 0 || m == 0 {\n        return 1\n    }\n    if n == 1 {\n        return m\n    }\n    if n == m {\n        return 1\n    }\n    return eulerian_num(n - 1, m - 1) + (n - 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if n == 1 {\n        return m\n    }\n    if m == 1 {\n        return 1\n    }\n    return (m - n + 1) * eulerian_num(n - 1, m - 1) + (n - 1) * eulerian_num(n, m - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    } else if n < 0 || m < 0 {\n        return 0\n    } else {\n        return (n - m) * eulerian_num(n - 1, m) + (m + 1) * eulerian_num(n - 1, m - 1)\n    }\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    if m == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if m == 1 {\n        return 1\n    }\n    return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n < 0 || m < 0 || n < m {\n        return 0\n    }\n    if n == 0 || m == 0 {\n        return 1\n    }\n    return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if n == 1 {\n        return m + 1\n    }\n    if m == 1 {\n        return n + 1\n    }\n    return eulerian_num(n - 1, m) + eulerian_num(n, m - 1)\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n\n    if n == 1 {\n        return m + 1\n    }\n\n    if m == 1 {\n        return n + 1\n    }\n\n    return eulerian_num(n - 1, m) + m * eulerian_num(n, m - 1)\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if n == 1 || m == 1 {\n        return n\n    }\n    return eulerian_num(n-1, m-1) + (n-1) * eulerian_num(n-1, m)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    if m == 0 {\n        return 0\n    }\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    if m == 0 {\n        return 0\n    }\n    return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    if n < m {\n        return 0\n    }\n    return (n - m) * eulerian_num(n - 1, m) + (m + 1) * eulerian_num(n - 1, m - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    if m == 0 {\n        return 0\n    }\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    if m == 0 {\n        return 0\n    }\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n < 0 || m < 0 {\n        return 0\n    }\n    if n == 0 || m == 0 {\n        return 1\n    }\n    if n < m {\n        return 0\n    }\n    return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 && m == 0 {\n        return 1\n    }\n    if n == 0 || m == 0 {\n        return 0\n    }\n    return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n < 0 || m < 0 {\n        return 0\n    }\n    if n == 0 && m == 0 {\n        return 1\n    }\n    if n == 0 || m == 0 {\n        return 0\n    }\n    return (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    if m == 0 {\n        return 0\n    }\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    if m == 0 {\n        return 0\n    }\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 {\n        return 1\n    } else if m == 0 {\n        return 0\n    } else {\n        return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n    }\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return m\n    }\n    if m == 0 {\n        return 0\n    }\n    return (m - n + 1) * eulerian_num(n - 1, m) + (n + 1) * eulerian_num(n, m - 1)\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if n == 1 {\n        return m + 1\n    }\n    if m == 1 {\n        return n + 1\n    }\n    return eulerian_num(n - 1, m) + m * eulerian_num(n, m - 1)\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if n == 1 {\n        return m\n    }\n    if m == 1 {\n        return 1\n    }\n    return (n - m) * eulerian_num(n - 1, m) + (m + 1) * eulerian_num(n - 1, m - 1)\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if n == 1 {\n        return m + 1\n    }\n    if m == 1 {\n        return n + 1\n    }\n    return eulerian_num(n - 1, m) + m * eulerian_num(n, m - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return m\n    }\n    if m == 0 {\n        return 0\n    }\n    return (n - m) * eulerian_num(n - 1, m) + (m + 1) * eulerian_num(n - 1, m - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return m + 1\n    }\n    if m == 0 {\n        return 0\n    }\n    return (m + 1) * eulerian_num(n - 1, m) + (n - 1) * eulerian_num(n - 1, m - 1)\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    } else if n < m {\n        return 0\n    } else {\n        return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n    }\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    if m == 0 {\n        return 0\n    }\n    if n == m {\n        return 1\n    }\n    return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    if m == 0 {\n        return 0\n    }\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if n < m {\n        return 0\n    }\n    return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if n == 1 || m == 1 {\n        return n\n    }\n    return eulerian_num(n-1, m) + m * eulerian_num(n-1, m-1)\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if n == 1 {\n        return m + 1\n    }\n    if m == 1 {\n        return n + 1\n    }\n    return eulerian_num(n-1, m) + m * eulerian_num(n, m-1)\n}\n",
    "    if n == 0 && m == 0 {\n        return 1\n    } else if n == 0 || m == 0 {\n        return 0\n    } else {\n        return (n - m) * eulerian_num(n - 1, m) + (m + 1) * eulerian_num(n - 1, m - 1)\n    }\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if n == 1 {\n        return m + 1\n    }\n    if m == 1 {\n        return n + 1\n    }\n    return eulerian_num(n - 1, m) + m * eulerian_num(n, m - 1)\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if n < m {\n        return 0\n    }\n    return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if n == 1 {\n        return m\n    }\n    if m == 1 {\n        return 1\n    }\n    return (n - m) * eulerian_num(n - 1, m) + (m + 1) * eulerian_num(n - 1, m - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    if m == 0 {\n        return 0\n    }\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if n == 1 {\n        return m + 1\n    }\n    if m == 1 {\n        return n + 1\n    }\n    return eulerian_num(n - 1, m) + eulerian_num(n, m - 1)\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if n == 1 || m == 1 {\n        return n\n    }\n    if n < m {\n        return 0\n    }\n    return eulerian_num(n-1, m-1) + (n-1) * eulerian_num(n-1, m)\n}\n",
    "    if n < 0 || m < 0 {\n        return 0\n    }\n    if n == 0 || m == 0 {\n        return 1\n    }\n    if n == 1 {\n        return m + 1\n    }\n    if m == 1 {\n        return n + 1\n    }\n    return (n + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    if m == 0 {\n        return 0\n    }\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return m + 1\n    }\n    if n == 2 {\n        return (m + 1) * (m + 2) / 2\n    }\n    if n == 3 {\n        return (m + 1) * (m + 2) * (m + 3) / 6\n    }\n    if n == 4 {\n        return (m + 1) * (m + 2) * (m + 3) * (m + 4) / 24\n    }\n    if n == 5 {\n        return (m + 1) * (m + 2) * (m + 3) * (m + 4) * (m + 5) / 120\n    }\n    if n == 6 {\n        return (m + 1) * (m + 2) * (m + 3) * (m + 4) * (m + 5) * (m + 6) / 720\n    }\n    if n == 7 {\n        return (m + 1) * (m + 2) * (m + 3) * (m + 4) * (m + 5) * (m + 6) * (m + 7) / 5040\n    }\n    if n == 8 {\n        return (m + 1) * (m + 2) * (m + 3) * (m + 4) * (m + 5) * (m + 6) * (m + 7) * (m + 8) / 40320\n    }\n    if n == 9 {\n        return (m + 1) * (m + 2) * (m + 3) * (m + 4) * (m + 5) * (m + 6) * (m + 7) * (m + 8) * (m + 9) / 362880\n    }\n    if n == 10 {\n        return (m + 1) * (m + 2) * (m + 3) * (m + 4) * (m + 5) * (m + 6) * (m + 7) * (m + 8) * (m + 9) * (m + 10) / 3628800\n    }\n    if n == 11 {\n        return (m + 1) * (m + 2) * (m + 3",
    "    if n == 0 {\n        return 1\n    }\n    if m == 0 {\n        return 0\n    }\n    if m > n {\n        return 0\n    }\n    return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if n < m {\n        return 0\n    }\n    return eulerian_num(n - 1, m - 1) + (n - m) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if n < m {\n        return 0\n    }\n    return eulerian_num(n-1, m) + (n-m) * eulerian_num(n-1, m-1)\n}\n",
    "    if n == 0 {\n        return 1\n    } else if n == 1 {\n        return m\n    } else {\n        return (m - n + 1) * eulerian_num(n - 1, m) + (n + 1) * eulerian_num(n - 1, m - 1)\n    }\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if n == 1 {\n        return m + 1\n    }\n    if m == 1 {\n        return n + 1\n    }\n    return eulerian_num(n - 1, m) + m * eulerian_num(n, m - 1)\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if n == 1 || m == 1 {\n        return n\n    }\n    if n < m {\n        return 0\n    }\n    return eulerian_num(n - 1, m) + (n - m) * eulerian_num(n - 1, m - 1)\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if n == 1 {\n        return m + 1\n    }\n    if m == 1 {\n        return n + 1\n    }\n    return eulerian_num(n - 1, m) + m * eulerian_num(n, m - 1)\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if n < m {\n        return 0\n    }\n    return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n < 0 || m < 0 {\n        return 0\n    }\n    if n == 0 || m == 0 {\n        return 1\n    }\n    if n < m {\n        return 0\n    }\n    return (m+1)*eulerian_num(n-1, m) + (n-m)*eulerian_num(n-1, m-1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    if m == 0 {\n        return 0\n    }\n    return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    if m == 0 {\n        return 0\n    }\n    return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if n == 1 {\n        return m + 1\n    }\n    if m == 1 {\n        return n + 1\n    }\n    return eulerian_num(n - 1, m) + m * eulerian_num(n, m - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return m\n    }\n    if n == 2 {\n        return m * (m - 1) + 1\n    }\n    if n == 3 {\n        return m * (m - 1) * (m - 2) + m * 2\n    }\n    if n == 4 {\n        return m * (m - 1) * (m - 2) * (m - 3) + m * (m - 1) * 3 + 1\n    }\n    if n == 5 {\n        return m * (m - 1) * (m - 2) * (m - 3) * (m - 4) + m * (m - 1) * (m - 2) * 4 + m * 6 + 1\n    }\n    if n == 6 {\n        return m * (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) + m * (m - 1) * (m - 2) * (m - 3) * 5 + m * (m - 1) * 15 + m * 20 + 1\n    }\n    if n == 7 {\n        return m * (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) + m * (m - 1) * (m - 2) * (m - 3) * (m - 4) * 6 + m * (m - 1) * (m - 2) * 21 + m * (m - 1) * 35 + m * 70 + 1\n    }\n    if n == 8 {\n        return m * (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) + m * (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * 7 + m * (m - 1) * (m - 2) * (m - 3) * 28 + m * (m - 1) * (m - 2) * 56 + m * (m - 1) * 126 +",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if n < m {\n        return 0\n    }\n    return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if n < m {\n        return 0\n    }\n    return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    if m == 0 {\n        return 0\n    }\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    if m == 0 {\n        return 0\n    }\n    return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return m\n    }\n    if m == 0 {\n        return 0\n    }\n    return (n - 1) * (eulerian_num(n, m - 1) + eulerian_num(n - 1, m - 1))\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return m + 1\n    }\n    if m == 0 {\n        return 0\n    }\n    return (m + 1) * eulerian_num(n - 1, m) + (n - m) * eulerian_num(n - 1, m - 1)\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if n == 1 {\n        return m + 1\n    }\n    if m == 1 {\n        return n + 1\n    }\n    return (n + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n < 0 || m < 0 {\n        return 0\n    }\n    if n == 0 {\n        return 1\n    }\n    if m == 0 {\n        return 0\n    }\n    return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n < 0 || m < 0 {\n        return 0\n    }\n    if n == 0 || m == 0 {\n        return 1\n    }\n    if n == 1 {\n        return m\n    }\n    if m == 1 {\n        return 1\n    }\n    return (n - m) * eulerian_num(n - 1, m) + (m + 1) * eulerian_num(n - 1, m - 1)\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if n == 1 {\n        return m + 1\n    }\n    if m == 1 {\n        return n + 1\n    }\n    return eulerian_num(n - 1, m) + eulerian_num(n, m - 1)\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if n < m {\n        return 0\n    }\n    return eulerian_num(n - 1, m - 1) + (n - m) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    } else if n < m {\n        return 0\n    } else {\n        return eulerian_num(n - 1, m - 1) + (n - m) * eulerian_num(n - 1, m)\n    }\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    if m == 0 {\n        return 0\n    }\n    return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    if m == 0 {\n        return 0\n    }\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n < 0 || m < 0 {\n        return 0\n    }\n    if n == 0 || m == 0 {\n        return 1\n    }\n    if n == 1 {\n        return m + 1\n    }\n    if m == 1 {\n        return n + 1\n    }\n    return (n + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    if m == 0 {\n        return 0\n    }\n    return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    if m == 0 {\n        return 0\n    }\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    if m == 0 {\n        return 0\n    }\n    return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    if m == 0 {\n        return 0\n    }\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    if m == 0 {\n        return 0\n    }\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    if n < 0 {\n        return 0\n    }\n    if m == 0 {\n        return 0\n    }\n    return (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    if m == 0 {\n        return 0\n    }\n    if m > n {\n        return 0\n    }\n    return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    if m == 0 {\n        return 0\n    }\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n}\n",
    "    if n == 0 || m == 0 {\n        return 1\n    }\n    if n < m {\n        return 0\n    }\n    return eulerian_num(n - 1, m - 1) + (n - m) * eulerian_num(n - 1, m)\n}\n"
  ]
}
{
  "name": "mbpp_583_catalan_number",
  "language": "go_test.go",
  "prompt": "package catalan_number_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function which returns nth catalan number.\nfunc catalan_number(num int) int {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_583_catalan_number.py",
  "prompt_terminology": "verbatim",
  "tests": "func TestCatalan_Number(t *testing.T) {\n  candidate := catalan_number\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(10), expected: 16796 },\n     { actual: candidate(9), expected: 4862 },\n     { actual: candidate(7), expected: 429 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
  "stop_tokens": [
    "\nfunc",
    "struct",
    "\n// "
  ],
  "completions": [
    "    if num == 0 {\n        return 1\n    }\n    if num == 1 {\n        return 1\n    }\n    var sum int = 0\n    for i := 0; i < num; i++ {\n        sum += catalan_number(i) * catalan_number(num - i - 1)\n    }\n    return sum\n}\n",
    "    if num == 0 {\n        return 1\n    }\n    result := 0\n    for i := 0; i < num; i++ {\n        result += catalan_number(i) * catalan_number(num - i - 1)\n    }\n    return result\n}\n",
    "    if num <= 1 {\n        return 1\n    }\n    res := 0\n    for i := 0; i < num; i++ {\n        res += catalan_number(i) * catalan_number(num - i - 1)\n    }\n    return res\n}\n",
    "    if num == 0 {\n        return 1\n    }\n    sum := 0\n    for i := 0; i < num; i++ {\n        sum += catalan_number(i) * catalan_number(num - i - 1)\n    }\n    return sum\n}\n",
    "    if num <= 1 {\n        return 1\n    }\n    result := 0\n    for i := 0; i < num; i++ {\n        result += catalan_number(i) * catalan_number(num - i - 1)\n    }\n    return result\n}\n",
    "    if num == 0 {\n        return 1\n    }\n\n    var res int = 0\n    for i := 0; i < num; i++ {\n        res += catalan_number(i) * catalan_number(num - i - 1)\n    }\n\n    return res\n}\n",
    "    if num == 0 {\n        return 1\n    }\n    if num == 1 {\n        return 1\n    }\n    res := 0\n    for i := 0; i < num; i++ {\n        res += catalan_number(i) * catalan_number(num - i - 1)\n    }\n    return res\n}\n",
    "    if num == 0 {\n        return 1\n    }\n    result := 0\n    for i := 0; i < num; i++ {\n        result += catalan_number(i) * catalan_number(num - i - 1)\n    }\n    return result\n}\n",
    "    if num == 0 {\n        return 1\n    }\n    result := 0\n    for i := 0; i < num; i++ {\n        result += catalan_number(i) * catalan_number(num - i - 1)\n    }\n    return result\n}\n",
    "    if num == 0 {\n        return 1\n    }\n    if num == 1 {\n        return 1\n    }\n    if num == 2 {\n        return 2\n    }\n    var result int = 0\n    for i := 0; i < num; i++ {\n        result += catalan_number(i) * catalan_number(num - i - 1)\n    }\n    return result\n}\n",
    "    if num == 0 {\n        return 1\n    }\n    var sum int = 0\n    for i := 0; i < num; i++ {\n        sum += catalan_number(i) * catalan_number(num - i - 1)\n    }\n    return sum\n}\n",
    "    if num <= 1 {\n        return 1\n    }\n    res := 0\n    for i := 0; i < num; i++ {\n        res += catalan_number(i) * catalan_number(num - i - 1)\n    }\n    return res\n}\n",
    "    if num <= 1 {\n        return 1\n    }\n\n    res := 0\n    for i := 0; i < num; i++ {\n        res += catalan_number(i) * catalan_number(num - i - 1)\n    }\n\n    return res\n}\n",
    "    if num == 0 {\n        return 1\n    }\n\n    res := 0\n    for i := 0; i < num; i++ {\n        res += catalan_number(i) * catalan_number(num - i - 1)\n    }\n    return res\n}\n",
    "    if num == 0 {\n        return 1\n    }\n    result := 0\n    for i := 0; i < num; i++ {\n        result += catalan_number(i) * catalan_number(num - i - 1)\n    }\n    return result\n}\n",
    "    if num == 0 {\n        return 1\n    }\n    res := 0\n    for i := 0; i < num; i++ {\n        res += catalan_number(i) * catalan_number(num - i - 1)\n    }\n    return res\n}\n",
    "    if num == 0 {\n        return 1\n    }\n    sum := 0\n    for i := 0; i < num; i++ {\n        sum += catalan_number(i) * catalan_number(num - i - 1)\n    }\n    return sum\n}\n",
    "    if num == 0 {\n        return 1\n    }\n    res := 0\n    for i := 0; i < num; i++ {\n        res += catalan_number(i) * catalan_number(num - i - 1)\n    }\n    return res\n}\n",
    "    if num == 0 {\n        return 1\n    }\n    var sum int = 0\n    for i := 0; i < num; i++ {\n        sum += catalan_number(i) * catalan_number(num - i - 1)\n    }\n    return sum\n}\n",
    "    if num == 0 {\n        return 1\n    }\n\n    result := 0\n    for i := 0; i < num; i++ {\n        result += catalan_number(i) * catalan_number(num - i - 1)\n    }\n\n    return result\n}\n"
  ]
}
{
  "name": "mbpp_145_max_Abs_Diff",
  "language": "go_test.go",
  "prompt": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the maximum difference between any two elements in a given array.\nfunc max_Abs_Diff(arr []interface{}) int {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_145_max_Abs_Diff.py",
  "prompt_terminology": "verbatim",
  "tests": "func TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
  "stop_tokens": [
    "\nfunc",
    "struct",
    "\n// "
  ],
  "completions": [
    "    // Write your code here\n    var max, min int\n    for _, v := range arr {\n        if v.(int) > max {\n            max = v.(int)\n        }\n        if v.(int) < min {\n            min = v.(int)\n        }\n    }\n    return max - min\n}\n",
    "    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if max_diff < abs(arr[i], arr[j]) {\n                max_diff = abs(arr[i], arr[j])\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    max_diff := 0\n    for i := 0; i < len(arr); i++ {\n        for j := 0; j < len(arr); j++ {\n            if i == j {\n                continue\n            }\n            diff := int(arr[i].(int)) - int(arr[j].(int))\n            if diff < 0 {\n                diff = -diff\n            }\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int = 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max_diff {\n                max_diff = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max, min int\n    for _, v := range arr {\n        if v.(int) > max {\n            max = v.(int)\n        }\n        if v.(int) < min {\n            min = v.(int)\n        }\n    }\n    return max - min\n}\n",
    "    if len(arr) == 0 {\n        return 0\n    }\n    max := arr[0].(int)\n    min := arr[0].(int)\n    for _, v := range arr {\n        if v.(int) > max {\n            max = v.(int)\n        }\n        if v.(int) < min {\n            min = v.(int)\n        }\n    }\n    return max - min\n}\n",
    "    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max_diff {\n                max_diff = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    max := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max {\n                max = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max\n}\n",
    "    max := 0\n    for i, v := range arr {\n        for j, v2 := range arr {\n            if i != j {\n                if v.(int) - v2.(int) > max {\n                    max = v.(int) - v2.(int)\n                }\n            }\n        }\n    }\n    return max\n}\n",
    "    var max int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if max < abs(arr[i], arr[j]) {\n                max = abs(arr[i], arr[j])\n            }\n        }\n    }\n    return max\n}\n",
    "    max_diff := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            diff := int(arr[i].(int) - arr[j].(int))\n            if diff < 0 {\n                diff = -diff\n            }\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    // Your code here\n    return 0\n}\n",
    "    var max, min int\n    for i, v := range arr {\n        if i == 0 {\n            max = v.(int)\n            min = v.(int)\n        } else {\n            if v.(int) > max {\n                max = v.(int)\n            }\n            if v.(int) < min {\n                min = v.(int)\n            }\n        }\n    }\n    return max - min\n}\n",
    "    // Fill this in.\n    return 0\n}\n",
    "    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max_diff {\n                max_diff = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    max := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max {\n                max = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max\n}\n",
    "    var max_diff int\n    for i, v := range arr {\n        for j, v2 := range arr {\n            if i != j {\n                if v.(int) - v2.(int) > max_diff {\n                    max_diff = v.(int) - v2.(int)\n                }\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if max < abs(arr[i].(int) - arr[j].(int)) {\n                max = abs(arr[i].(int) - arr[j].(int))\n            }\n        }\n    }\n    return max\n}\n",
    "    var max_diff int = 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if max_diff < abs(arr[i].(int) - arr[j].(int)) {\n                max_diff = abs(arr[i].(int) - arr[j].(int))\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    if len(arr) == 0 {\n        return 0\n    }\n    max := arr[0].(int)\n    min := arr[0].(int)\n    for _, v := range arr {\n        if v.(int) > max {\n            max = v.(int)\n        }\n        if v.(int) < min {\n            min = v.(int)\n        }\n    }\n    return max - min\n}\n"
  ]
}
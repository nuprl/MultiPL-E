{
  "name": "mbpp_735_toggle_middle_bits",
  "language": "go_test.go",
  "prompt": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_735_toggle_middle_bits.py",
  "prompt_terminology": "verbatim",
  "tests": "func TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
  "stop_tokens": [
    "\nfunc",
    "struct",
    "\n// "
  ],
  "results": [
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0\n    for i := 1; i < 32; i++ {\n        mask = mask | (1 << i)\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509776,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpjmvmh8bf_test.go:34: expected '%!s(int=15)', got '%!s(int=4294967287)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpjmvmh8bf_test.go:34: expected '%!s(int=12)', got '%!s(int=4294967284)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpjmvmh8bf_test.go:34: expected '%!s(int=13)', got '%!s(int=4294967285)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpjmvmh8bf_test.go:34: expected '%!s(int=127)', got '%!s(int=4294967231)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpjmvmh8bf_test.go:34: expected '%!s(int=115)', got '%!s(int=4294967219)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // get the first and last bit\n    first_bit := n & 1\n    last_bit := n & (1 << uint(len(fmt.Sprintf(\"%b\", n)) - 1))\n    // clear the first and last bit\n    n = n & ^1\n    n = n & ^(1 << uint(len(fmt.Sprintf(\"%b\", n)) - 1))\n    // toggle the middle bits\n    n = n ^ (n >> 1)\n    // set the first and last bit\n    n = n | first_bit\n    n = n | last_bit\n    return n\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509776,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpvcr8i00r_test.go:41: expected '%!s(int=15)', got '%!s(int=9)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpvcr8i00r_test.go:41: expected '%!s(int=12)', got '%!s(int=11)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpvcr8i00r_test.go:41: expected '%!s(int=13)', got '%!s(int=11)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpvcr8i00r_test.go:41: expected '%!s(int=127)', got '%!s(int=65)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpvcr8i00r_test.go:41: expected '%!s(int=115)', got '%!s(int=75)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // mask = 0b11111111111111111111111111111100\n    mask := 0xFFFFFFFC\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509776,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpzj2nrku4_test.go:32: expected '%!s(int=15)', got '%!s(int=4294967285)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpzj2nrku4_test.go:32: expected '%!s(int=12)', got '%!s(int=4294967286)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpzj2nrku4_test.go:32: expected '%!s(int=13)', got '%!s(int=4294967287)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpzj2nrku4_test.go:32: expected '%!s(int=127)', got '%!s(int=4294967229)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpzj2nrku4_test.go:32: expected '%!s(int=115)', got '%!s(int=4294967217)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFE\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509776,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmph9gkyy83_test.go:31: expected '%!s(int=15)', got '%!s(int=2147483639)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmph9gkyy83_test.go:31: expected '%!s(int=12)', got '%!s(int=2147483636)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmph9gkyy83_test.go:31: expected '%!s(int=13)', got '%!s(int=2147483637)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmph9gkyy83_test.go:31: expected '%!s(int=127)', got '%!s(int=2147483583)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmph9gkyy83_test.go:31: expected '%!s(int=115)', got '%!s(int=2147483571)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFF\n    var mask2 int = 0x80000000\n    var mask3 int = 0x00000001\n    var mask4 int = 0xFFFFFFFE\n    var mask5 int = 0xFFFFFFFE\n    var mask6 int = 0x7FFFFFFE\n    var mask7 int = 0x80000001\n    return (n & mask) | ((n & mask2) >> 1) | ((n & mask3) << 1) | ((n & mask4) >> 2) | ((n & mask5) << 2) | ((n & mask6) >> 3) | ((n & mask7) << 3)\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509776,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpi32f8sv6_test.go:37: expected '%!s(int=15)', got '%!s(int=43)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpi32f8sv6_test.go:37: expected '%!s(int=12)', got '%!s(int=43)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpi32f8sv6_test.go:37: expected '%!s(int=13)', got '%!s(int=43)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpi32f8sv6_test.go:37: expected '%!s(int=127)', got '%!s(int=347)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpi32f8sv6_test.go:37: expected '%!s(int=115)', got '%!s(int=383)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFF\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509776,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmp4rd7mb9j_test.go:31: expected '%!s(int=15)', got '%!s(int=2147483638)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmp4rd7mb9j_test.go:31: expected '%!s(int=12)', got '%!s(int=2147483637)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmp4rd7mb9j_test.go:31: expected '%!s(int=13)', got '%!s(int=2147483636)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmp4rd7mb9j_test.go:31: expected '%!s(int=127)', got '%!s(int=2147483582)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmp4rd7mb9j_test.go:31: expected '%!s(int=115)', got '%!s(int=2147483570)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    return ((n & 0xFFFFFFE) ^ 0x5555554) | (n & 0x1)\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509776,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpgxnt8avk_test.go:30: expected '%!s(int=15)', got '%!s(int=89478493)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpgxnt8avk_test.go:30: expected '%!s(int=12)', got '%!s(int=89478494)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpgxnt8avk_test.go:30: expected '%!s(int=13)', got '%!s(int=89478495)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpgxnt8avk_test.go:30: expected '%!s(int=127)', got '%!s(int=89478421)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpgxnt8avk_test.go:30: expected '%!s(int=115)', got '%!s(int=89478425)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // get the number of bits in the number\n    num_bits := 0\n    for n > 0 {\n        n = n >> 1\n        num_bits += 1\n    }\n\n    // get the mask for the first and last bits\n    mask := 0\n    for i := 0; i < num_bits; i++ {\n        if i == 0 || i == num_bits - 1 {\n            mask = mask | (1 << i)\n        }\n    }\n\n    // get the mask for the middle bits\n    middle_mask := 0\n    for i := 1; i < num_bits - 1; i++ {\n        middle_mask = middle_mask | (1 << i)\n    }\n\n    // toggle the middle bits\n    return mask | (n ^ middle_mask)\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509776,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpi5s8xeif_test.go:52: expected '%!s(int=12)', got '%!s(int=15)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpi5s8xeif_test.go:52: expected '%!s(int=13)', got '%!s(int=15)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpi5s8xeif_test.go:52: expected '%!s(int=115)', got '%!s(int=127)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // mask to get the first and last bit\n    mask := 3\n    // get the first and last bit\n    first_last_bits := n & mask\n    // get the middle bits\n    middle_bits := n >> 2\n    // toggle the middle bits\n    middle_bits = middle_bits ^ ((1 << uint(len(fmt.Sprintf(\"%b\", middle_bits)) - 1)) - 1)\n    // shift the middle bits to the right place\n    middle_bits = middle_bits << 2\n    // return the result\n    return first_last_bits | middle_bits\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509776,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmph7xpv4i6_test.go:41: expected '%!s(int=15)', got '%!s(int=13)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmph7xpv4i6_test.go:41: expected '%!s(int=12)', got '%!s(int=14)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmph7xpv4i6_test.go:41: expected '%!s(int=13)', got '%!s(int=15)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmph7xpv4i6_test.go:41: expected '%!s(int=127)', got '%!s(int=125)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmph7xpv4i6_test.go:41: expected '%!s(int=115)', got '%!s(int=113)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7ffffffe\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509776,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpqyqe3n0h_test.go:31: expected '%!s(int=15)', got '%!s(int=2147483639)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpqyqe3n0h_test.go:31: expected '%!s(int=12)', got '%!s(int=2147483636)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpqyqe3n0h_test.go:31: expected '%!s(int=13)', got '%!s(int=2147483637)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpqyqe3n0h_test.go:31: expected '%!s(int=127)', got '%!s(int=2147483583)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpqyqe3n0h_test.go:31: expected '%!s(int=115)', got '%!s(int=2147483571)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0\n    var i int = 1\n    for i < 32 {\n        mask = mask | (1 << i)\n        i += 2\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509776,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmphtwnbbnt_test.go:36: expected '%!s(int=15)', got '%!s(int=2863311523)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmphtwnbbnt_test.go:36: expected '%!s(int=12)', got '%!s(int=2863311520)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmphtwnbbnt_test.go:36: expected '%!s(int=13)', got '%!s(int=2863311521)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmphtwnbbnt_test.go:36: expected '%!s(int=127)', got '%!s(int=2863311595)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmphtwnbbnt_test.go:36: expected '%!s(int=115)', got '%!s(int=2863311591)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // n = n & 0xfffffffe\n    // n = n & 0xfffffffd\n    // n = n & 0xfffffffb\n    // n = n & 0xfffffff7\n    // n = n & 0xffffffef\n    // n = n & 0xffffffdf\n    // n = n & 0xffffffbf\n    // n = n & 0xffffff7f\n    // n = n & 0xfffffeff\n    // n = n & 0xfffffdff\n    // n = n & 0xfffffbff\n    // n = n & 0xfffff7ff\n    // n = n & 0xffffefff\n    // n = n & 0xffffdfff\n    // n = n & 0xffffbfff\n    // n = n & 0xffff7fff\n    // n = n & 0xfffeffff\n    // n = n & 0xfffdffff\n    // n = n & 0xfffbffff\n    // n = n & 0xfff7ffff\n    // n = n & 0xffefffff\n    // n = n & 0xffdfffff\n    // n = n & 0xffbfffff\n    // n = n & 0xff7fffff\n    // n = n & 0xfeffffff\n    // n = n & 0xfdffffff\n    // n = n & 0xfbffffff\n    // n = n & 0xf7ffffff\n    // n = n & 0xefffffff\n    // n = n & 0xdfffffff\n    // n = n & 0xbfffffff\n    // n = n & 0x7fffffff\n    // return n\n    return n & 0xfffffffe & 0xfffffffd & 0xfffffffb & 0xfffffff7 & 0xffffffef & 0xffffffdf & 0xffffffbf & 0xffffff7f & 0xfffffeff & 0xfffffdff & 0xfffffbff & 0xfffff7ff & 0xffffefff & 0xffffdfff & 0xffffbfff & 0xffff7fff & 0xfffeffff & 0xfffdffff & 0xfffbffff & 0xfff7ffff & 0\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509775,
      "stdout": "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n",
      "stderr": "# command-line-arguments\n/tmp/tmp0_l6iuwb_test.go:44:6: expected '(', found TestToggle_Middle_Bits\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0b11\n    var result int = 0\n    for i := 0; i < 32; i++ {\n        if i == 0 || i == 31 {\n            result = result | (n & mask)\n        } else {\n            result = result | ((n & mask) ^ mask)\n        }\n        n = n >> 1\n    }\n    return result\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509776,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmp3w91xanr_test.go:40: expected '%!s(int=15)', got '%!s(int=3)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmp3w91xanr_test.go:40: expected '%!s(int=12)', got '%!s(int=3)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmp3w91xanr_test.go:40: expected '%!s(int=13)', got '%!s(int=3)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmp3w91xanr_test.go:40: expected '%!s(int=127)', got '%!s(int=3)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmp3w91xanr_test.go:40: expected '%!s(int=115)', got '%!s(int=3)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // get the first bit\n    first_bit := n & 1\n    // get the last bit\n    last_bit := n & (1 << uint(len(fmt.Sprintf(\"%b\", n)) - 1))\n    // get the middle bits\n    middle_bits := n & (^(1 << uint(len(fmt.Sprintf(\"%b\", n)) - 1)) | 1)\n    // toggle the middle bits\n    middle_bits = middle_bits ^ middle_bits\n    // return the number\n    return first_bit | middle_bits | last_bit\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509776,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpzosebpqm_test.go:39: expected '%!s(int=15)', got '%!s(int=9)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpzosebpqm_test.go:39: expected '%!s(int=12)', got '%!s(int=8)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpzosebpqm_test.go:39: expected '%!s(int=13)', got '%!s(int=9)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpzosebpqm_test.go:39: expected '%!s(int=127)', got '%!s(int=65)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpzosebpqm_test.go:39: expected '%!s(int=115)', got '%!s(int=65)'\nFAIL\nFAIL\tcommand-line-arguments\t0.007s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // get the first and last bit\n    first_bit := n & 1\n    last_bit := n & (1 << uint(len(fmt.Sprintf(\"%b\", n)) - 1))\n    // clear the first and last bit\n    n = n & ^1\n    n = n & ^(1 << uint(len(fmt.Sprintf(\"%b\", n)) - 1))\n    // toggle the middle bits\n    n = n ^ (n >> 1)\n    // set the first and last bit\n    n = n | first_bit\n    n = n | last_bit\n    return n\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509776,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpvcr8i00r_test.go:41: expected '%!s(int=15)', got '%!s(int=9)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpvcr8i00r_test.go:41: expected '%!s(int=12)', got '%!s(int=11)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpvcr8i00r_test.go:41: expected '%!s(int=13)', got '%!s(int=11)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpvcr8i00r_test.go:41: expected '%!s(int=127)', got '%!s(int=65)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpvcr8i00r_test.go:41: expected '%!s(int=115)', got '%!s(int=75)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // Get the first bit\n    first_bit := n & 1\n    // Get the last bit\n    last_bit := n & (1 << uint(len(fmt.Sprintf(\"%b\", n)) - 1))\n    // Get the middle bits\n    middle_bits := n & (^(1 << uint(len(fmt.Sprintf(\"%b\", n)) - 1)))\n    middle_bits = middle_bits & (^1)\n    // Toggle the middle bits\n    middle_bits = middle_bits ^ (middle_bits >> 1)\n    // Add the first and last bit\n    middle_bits = middle_bits | first_bit\n    middle_bits = middle_bits | last_bit\n    return middle_bits\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509776,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmp78s44n4u_test.go:42: expected '%!s(int=15)', got '%!s(int=9)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmp78s44n4u_test.go:42: expected '%!s(int=12)', got '%!s(int=11)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmp78s44n4u_test.go:42: expected '%!s(int=13)', got '%!s(int=11)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmp78s44n4u_test.go:42: expected '%!s(int=127)', got '%!s(int=65)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmp78s44n4u_test.go:42: expected '%!s(int=115)', got '%!s(int=75)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var i uint = 1\n    var j uint = uint(len(fmt.Sprintf(\"%b\", n)) - 2)\n    var mask uint = (1 << j) - 1\n    return n ^ (mask << i)\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509775,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpyi439twf_test.go:13:14: invalid operation: n ^ mask << i (mismatched types int and uint)\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    return n ^ ((1 << (n - 2)) - 1)\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509776,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpq3jrv3xj_test.go:30: expected '%!s(int=15)', got '%!s(int=118)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpq3jrv3xj_test.go:30: expected '%!s(int=12)', got '%!s(int=245)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpq3jrv3xj_test.go:30: expected '%!s(int=13)', got '%!s(int=500)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpq3jrv3xj_test.go:30: expected '%!s(int=127)', got '%!s(int=9223372036854775742)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpq3jrv3xj_test.go:30: expected '%!s(int=115)', got '%!s(int=-78)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // n = n & 0xFFFFFFF8\n    n = n & 0xFFFFFFF8\n    n = n | 0x00000054\n    return n\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509776,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpb0yvmteg_test.go:33: expected '%!s(int=15)', got '%!s(int=92)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpb0yvmteg_test.go:33: expected '%!s(int=12)', got '%!s(int=92)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpb0yvmteg_test.go:33: expected '%!s(int=13)', got '%!s(int=92)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpb0yvmteg_test.go:33: expected '%!s(int=127)', got '%!s(int=84)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpb0yvmteg_test.go:33: expected '%!s(int=115)', got '%!s(int=92)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFF\n    var mask2 int = 0x80000000\n    var mask3 int = 0x00000001\n    var mask4 int = 0xFFFFFFFE\n    var mask5 int = 0x7FFFFFFE\n    var mask6 int = 0x80000001\n    var mask7 int = 0x00000002\n    var mask8 int = 0xFFFFFFFC\n\n    var temp int = n & mask\n    var temp2 int = n & mask2\n    var temp3 int = n & mask3\n    var temp4 int = n & mask4\n    var temp5 int = n & mask5\n    var temp6 int = n & mask6\n    var temp7 int = n & mask7\n    var temp8 int = n & mask8\n\n    var result int = temp ^ temp8\n    result = result | temp2\n    result = result | temp3\n    result = result | temp4\n    result = result | temp5\n    result = result | temp6\n    result = result | temp7\n\n    return result\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509776,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpds4jdy5m_test.go:56: expected '%!s(int=15)', got '%!s(int=9)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpds4jdy5m_test.go:56: expected '%!s(int=12)', got '%!s(int=10)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpds4jdy5m_test.go:56: expected '%!s(int=13)', got '%!s(int=11)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpds4jdy5m_test.go:56: expected '%!s(int=127)', got '%!s(int=65)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpds4jdy5m_test.go:56: expected '%!s(int=115)', got '%!s(int=77)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // get the first and last bit\n    first_bit := n & 1\n    last_bit := n & (1 << uint(len(fmt.Sprintf(\"%b\", n)) - 1))\n\n    // toggle the middle bits\n    n = n ^ (n & ((1 << uint(len(fmt.Sprintf(\"%b\", n)) - 2)) - 1))\n\n    // set the first and last bit\n    n = n | first_bit\n    n = n | last_bit\n\n    return n\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122556,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpmldyu27__test.go:41: expected '%!s(int=15)', got '%!s(int=9)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpmldyu27__test.go:41: expected '%!s(int=12)', got '%!s(int=8)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpmldyu27__test.go:41: expected '%!s(int=13)', got '%!s(int=9)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpmldyu27__test.go:41: expected '%!s(int=127)', got '%!s(int=65)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpmldyu27__test.go:41: expected '%!s(int=115)', got '%!s(int=65)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // Get the number of bits in the number\n    num_bits := 0\n    for n > 0 {\n        n = n >> 1\n        num_bits++\n    }\n\n    // Create a mask with the first and last bit set\n    mask := (1 << num_bits) - 1\n    mask = mask ^ (1 | (1 << (num_bits - 1)))\n\n    // Toggle the bits\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122556,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpqihn21oi_test.go:42: expected '%!s(int=15)', got '%!s(int=6)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpqihn21oi_test.go:42: expected '%!s(int=12)', got '%!s(int=6)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpqihn21oi_test.go:42: expected '%!s(int=13)', got '%!s(int=6)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpqihn21oi_test.go:42: expected '%!s(int=127)', got '%!s(int=62)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpqihn21oi_test.go:42: expected '%!s(int=115)', got '%!s(int=62)'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0\n    for i := 1; i < 32; i++ {\n        if i != 1 && i != 31 {\n            mask = mask | (1 << i)\n        }\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122556,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpoj44jsbq_test.go:36: expected '%!s(int=15)', got '%!s(int=2147483637)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpoj44jsbq_test.go:36: expected '%!s(int=12)', got '%!s(int=2147483638)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpoj44jsbq_test.go:36: expected '%!s(int=13)', got '%!s(int=2147483639)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpoj44jsbq_test.go:36: expected '%!s(int=127)', got '%!s(int=2147483581)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpoj44jsbq_test.go:36: expected '%!s(int=115)', got '%!s(int=2147483569)'\nFAIL\nFAIL\tcommand-line-arguments\t0.008s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFE\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509776,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmph9gkyy83_test.go:31: expected '%!s(int=15)', got '%!s(int=2147483639)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmph9gkyy83_test.go:31: expected '%!s(int=12)', got '%!s(int=2147483636)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmph9gkyy83_test.go:31: expected '%!s(int=13)', got '%!s(int=2147483637)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmph9gkyy83_test.go:31: expected '%!s(int=127)', got '%!s(int=2147483583)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmph9gkyy83_test.go:31: expected '%!s(int=115)', got '%!s(int=2147483571)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFF\n    var mask2 int = 0x80000000\n    var mask3 int = 0x00000001\n    var mask4 int = 0xFFFFFFFE\n\n    var result int = n & mask\n    result = result & mask2\n    result = result | mask3\n    result = result | (n & mask4)\n    return result\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122556,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpm2dltfnr_test.go:39: expected '%!s(int=15)', got '%!s(int=9)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpm2dltfnr_test.go:39: expected '%!s(int=12)', got '%!s(int=11)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpm2dltfnr_test.go:39: expected '%!s(int=13)', got '%!s(int=11)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpm2dltfnr_test.go:39: expected '%!s(int=127)', got '%!s(int=65)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpm2dltfnr_test.go:39: expected '%!s(int=115)', got '%!s(int=77)'\nFAIL\nFAIL\tcommand-line-arguments\t0.008s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFF\n    var mask2 int = 0x80000000\n    var mask3 int = 0x00000001\n    var mask4 int = 0xFFFFFFFE\n    var mask5 int = 0xFFFFFFFC\n    var mask6 int = 0x00000002\n    return (mask & (mask2 | mask3 | mask4 & (n << 1) | mask5 & (n >> 1) | mask6))\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122556,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpdryvlsay_test.go:36: expected '%!s(int=15)', got '%!s(int=23)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpdryvlsay_test.go:36: expected '%!s(int=12)', got '%!s(int=23)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpdryvlsay_test.go:36: expected '%!s(int=13)', got '%!s(int=23)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpdryvlsay_test.go:36: expected '%!s(int=127)', got '%!s(int=163)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpdryvlsay_test.go:36: expected '%!s(int=115)', got '%!s(int=191)'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7ffffffe\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509776,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpqyqe3n0h_test.go:31: expected '%!s(int=15)', got '%!s(int=2147483639)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpqyqe3n0h_test.go:31: expected '%!s(int=12)', got '%!s(int=2147483636)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpqyqe3n0h_test.go:31: expected '%!s(int=13)', got '%!s(int=2147483637)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpqyqe3n0h_test.go:31: expected '%!s(int=127)', got '%!s(int=2147483583)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpqyqe3n0h_test.go:31: expected '%!s(int=115)', got '%!s(int=2147483571)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask = 0\n    for i := 1; i < 32; i++ {\n        if i == 1 || i == 31 {\n            continue\n        }\n        mask |= 1 << i\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122556,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmp3utexcer_test.go:37: expected '%!s(int=15)', got '%!s(int=2147483637)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmp3utexcer_test.go:37: expected '%!s(int=12)', got '%!s(int=2147483638)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmp3utexcer_test.go:37: expected '%!s(int=13)', got '%!s(int=2147483639)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmp3utexcer_test.go:37: expected '%!s(int=127)', got '%!s(int=2147483581)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmp3utexcer_test.go:37: expected '%!s(int=115)', got '%!s(int=2147483569)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // return n ^ (1 << (n - 1))\n    return n ^ ((1 << (n - 1)) - 1)\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122556,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpkncr7vql_test.go:31: expected '%!s(int=15)', got '%!s(int=246)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpkncr7vql_test.go:31: expected '%!s(int=12)', got '%!s(int=501)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpkncr7vql_test.go:31: expected '%!s(int=13)', got '%!s(int=1012)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpkncr7vql_test.go:31: expected '%!s(int=127)', got '%!s(int=-66)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpkncr7vql_test.go:31: expected '%!s(int=115)', got '%!s(int=-78)'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // get the first and last bit\n    first_bit := n & 1\n    last_bit := n & (1 << uint(len(fmt.Sprintf(\"%b\", n)) - 1))\n    // remove the first and last bit\n    n = n & (^1)\n    n = n & (^(1 << uint(len(fmt.Sprintf(\"%b\", n)) - 1)))\n    // toggle the middle bits\n    n = n ^ (n >> 1)\n    // add the first and last bit back\n    n = n | first_bit\n    n = n | last_bit\n    return n\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122556,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmp1ixxl4cm_test.go:41: expected '%!s(int=15)', got '%!s(int=9)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmp1ixxl4cm_test.go:41: expected '%!s(int=12)', got '%!s(int=11)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmp1ixxl4cm_test.go:41: expected '%!s(int=13)', got '%!s(int=11)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmp1ixxl4cm_test.go:41: expected '%!s(int=127)', got '%!s(int=65)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmp1ixxl4cm_test.go:41: expected '%!s(int=115)', got '%!s(int=75)'\nFAIL\nFAIL\tcommand-line-arguments\t0.013s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    return n ^ ((1 << (n - 2)) - 1)\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509776,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpq3jrv3xj_test.go:30: expected '%!s(int=15)', got '%!s(int=118)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpq3jrv3xj_test.go:30: expected '%!s(int=12)', got '%!s(int=245)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpq3jrv3xj_test.go:30: expected '%!s(int=13)', got '%!s(int=500)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpq3jrv3xj_test.go:30: expected '%!s(int=127)', got '%!s(int=9223372036854775742)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpq3jrv3xj_test.go:30: expected '%!s(int=115)', got '%!s(int=-78)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFF\n    var mask2 int = 0x80000000\n    var mask3 int = 0x00000001\n    var mask4 int = 0xFFFFFFFE\n    var mask5 int = 0x7FFFFFFE\n    var mask6 int = 0x80000001\n    var mask7 int = 0x00000002\n    var mask8 int = 0xFFFFFFFC\n    var mask9 int = 0x7FFFFFFC\n    var mask10 int = 0x80000003\n    var mask11 int = 0x00000004\n    var mask12 int = 0xFFFFFFF8\n    var mask13 int = 0x7FFFFFF8\n    var mask14 int = 0x80000007\n    var mask15 int = 0x00000008\n    var mask16 int = 0xFFFFFFF0\n    var mask17 int = 0x7FFFFFF0\n    var mask18 int = 0x8000000F\n    var mask19 int = 0x00000010\n    var mask20 int = 0xFFFFFFE0\n    var mask21 int = 0x7FFFFFE0\n    var mask22 int = 0x8000001F\n    var mask23 int = 0x00000020\n    var mask24 int = 0xFFFFFFC0\n    var mask25 int = 0x7FFFFFC0\n    var mask26 int = 0x8000003F\n    var mask27 int = 0x00000040\n    var mask28 int = 0xFFFFFF80\n    var mask29 int = 0x7FFFFF80\n    var mask30 int = 0x8000007F\n    var mask31 int = 0x00000080\n    var mask32 int = 0xFFFFFF00\n    var mask33 int = 0x7FFFFF00\n    var mask34 int = 0x800000FF\n    var mask35 int = 0x00000100\n    var mask36 int = 0xFFFFFE00\n    var mask37 int = 0x7FFFFE00\n    var mask38 int = 0x800001FF\n    var mask39 int = 0x00000200\n    var mask40 int = 0xFFFFFC00\n    var mask41 int = 0x7FFFFC00\n    var mask42 int = 0x800003\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122555,
      "stdout": "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n",
      "stderr": "# command-line-arguments\n/tmp/tmpkebrnz8k_test.go:52:6: expected '(', found TestToggle_Middle_Bits\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // get the first and last bit\n    first_bit := n & 1\n    last_bit := n & (1 << uint(len(fmt.Sprintf(\"%b\", n)) - 1))\n    // clear the first and last bit\n    n = n & (^1)\n    n = n & (^(1 << uint(len(fmt.Sprintf(\"%b\", n)) - 1)))\n    // toggle the middle bits\n    n = n ^ (n >> 1)\n    // set the first and last bit\n    n = n | first_bit\n    n = n | last_bit\n    return n\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122556,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpa4t6inbm_test.go:41: expected '%!s(int=15)', got '%!s(int=9)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpa4t6inbm_test.go:41: expected '%!s(int=12)', got '%!s(int=11)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpa4t6inbm_test.go:41: expected '%!s(int=13)', got '%!s(int=11)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpa4t6inbm_test.go:41: expected '%!s(int=127)', got '%!s(int=65)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpa4t6inbm_test.go:41: expected '%!s(int=115)', got '%!s(int=75)'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7ffffffe\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509776,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpqyqe3n0h_test.go:31: expected '%!s(int=15)', got '%!s(int=2147483639)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpqyqe3n0h_test.go:31: expected '%!s(int=12)', got '%!s(int=2147483636)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpqyqe3n0h_test.go:31: expected '%!s(int=13)', got '%!s(int=2147483637)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpqyqe3n0h_test.go:31: expected '%!s(int=127)', got '%!s(int=2147483583)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpqyqe3n0h_test.go:31: expected '%!s(int=115)', got '%!s(int=2147483571)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0b11\n    var result int = 0\n    for i := 0; i < 32; i++ {\n        if i == 0 || i == 31 {\n            result |= (n & mask) << i\n        } else {\n            result |= (n & mask) << i ^ mask << i\n        }\n        n >>= 1\n    }\n    return result\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122556,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpr2b9830m_test.go:40: expected '%!s(int=15)', got '%!s(int=4294967287)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpr2b9830m_test.go:40: expected '%!s(int=12)', got '%!s(int=4294967286)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpr2b9830m_test.go:40: expected '%!s(int=13)', got '%!s(int=4294967287)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpr2b9830m_test.go:40: expected '%!s(int=127)', got '%!s(int=4294967231)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpr2b9830m_test.go:40: expected '%!s(int=115)', got '%!s(int=4294967219)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFF\n    var mask2 int = 0x80000000\n    var mask3 int = 0x00000001\n    var mask4 int = 0xFFFFFFFE\n    var mask5 int = 0x7FFFFFFE\n    var mask6 int = 0x80000001\n    var mask7 int = 0x00000002\n    var mask8 int = 0xFFFFFFFC\n    var mask9 int = 0x7FFFFFFC\n    var mask10 int = 0x80000003\n    var mask11 int = 0x00000004\n    var mask12 int = 0xFFFFFFF8\n    var mask13 int = 0x7FFFFFF8\n    var mask14 int = 0x80000007\n    var mask15 int = 0x00000008\n    var mask16 int = 0xFFFFFFF0\n    var mask17 int = 0x7FFFFFF0\n    var mask18 int = 0x8000000F\n    var mask19 int = 0x00000010\n    var mask20 int = 0xFFFFFFE0\n    var mask21 int = 0x7FFFFFE0\n    var mask22 int = 0x8000001F\n    var mask23 int = 0x00000020\n    var mask24 int = 0xFFFFFFC0\n    var mask25 int = 0x7FFFFFC0\n    var mask26 int = 0x8000003F\n    var mask27 int = 0x00000040\n    var mask28 int = 0xFFFFFF80\n    var mask29 int = 0x7FFFFF80\n    var mask30 int = 0x8000007F\n    var mask31 int = 0x00000080\n    var mask32 int = 0xFFFFFF00\n    var mask33 int = 0x7FFFFF00\n    var mask34 int = 0x800000FF\n    var mask35 int = 0x00000100\n    var mask36 int = 0xFFFFFE00\n    var mask37 int = 0x7FFFFE00\n    var mask38 int = 0x800001FF\n    var mask39 int = 0x00000200\n    var mask40 int = 0xFFFFFC00\n    var mask41 int = 0x7FFFFC00\n    var mask42 int = 0x800003\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122555,
      "stdout": "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n",
      "stderr": "# command-line-arguments\n/tmp/tmpkebrnz8k_test.go:52:6: expected '(', found TestToggle_Middle_Bits\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0b111111110\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122556,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpb125pugc_test.go:31: expected '%!s(int=15)', got '%!s(int=503)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpb125pugc_test.go:31: expected '%!s(int=12)', got '%!s(int=500)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpb125pugc_test.go:31: expected '%!s(int=13)', got '%!s(int=501)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpb125pugc_test.go:31: expected '%!s(int=127)', got '%!s(int=447)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpb125pugc_test.go:31: expected '%!s(int=115)', got '%!s(int=435)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0b11\n    var result int = 0\n    for i := 0; i < 32; i++ {\n        if i == 0 || i == 31 {\n            result |= (n & mask) << i\n        } else {\n            result |= (n & mask) << i ^ mask << i\n        }\n        n >>= 1\n    }\n    return result\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122556,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpr2b9830m_test.go:40: expected '%!s(int=15)', got '%!s(int=4294967287)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpr2b9830m_test.go:40: expected '%!s(int=12)', got '%!s(int=4294967286)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpr2b9830m_test.go:40: expected '%!s(int=13)', got '%!s(int=4294967287)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpr2b9830m_test.go:40: expected '%!s(int=127)', got '%!s(int=4294967231)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpr2b9830m_test.go:40: expected '%!s(int=115)', got '%!s(int=4294967219)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0b11111111111111111111111111111110\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122556,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpvbj3gmfb_test.go:31: expected '%!s(int=15)', got '%!s(int=4294967287)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpvbj3gmfb_test.go:31: expected '%!s(int=12)', got '%!s(int=4294967284)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpvbj3gmfb_test.go:31: expected '%!s(int=13)', got '%!s(int=4294967285)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpvbj3gmfb_test.go:31: expected '%!s(int=127)', got '%!s(int=4294967231)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpvbj3gmfb_test.go:31: expected '%!s(int=115)', got '%!s(int=4294967219)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0b11\n    var result int = n\n    for i := 1; i < 32; i++ {\n        mask = mask << 1\n        if i % 2 == 0 {\n            mask = mask | 0b1\n        }\n        result = result ^ mask\n    }\n    return result\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122556,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpl9ir3u2q_test.go:39: expected '%!s(int=15)', got '%!s(int=5153960760)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpl9ir3u2q_test.go:39: expected '%!s(int=12)', got '%!s(int=5153960763)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpl9ir3u2q_test.go:39: expected '%!s(int=13)', got '%!s(int=5153960762)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpl9ir3u2q_test.go:39: expected '%!s(int=127)', got '%!s(int=5153960816)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpl9ir3u2q_test.go:39: expected '%!s(int=115)', got '%!s(int=5153960828)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // mask to get all bits except first and last\n    mask := (1 << uint(n - 1)) - 1\n    // toggle bits\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122556,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpqnfexleq_test.go:33: expected '%!s(int=15)', got '%!s(int=246)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpqnfexleq_test.go:33: expected '%!s(int=12)', got '%!s(int=501)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpqnfexleq_test.go:33: expected '%!s(int=13)', got '%!s(int=1012)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpqnfexleq_test.go:33: expected '%!s(int=127)', got '%!s(int=-66)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpqnfexleq_test.go:33: expected '%!s(int=115)', got '%!s(int=-78)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0\n    var i int = 1\n    for i < 32 {\n        mask = mask | (1 << i)\n        i = i + 2\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122556,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmp1x56ptlv_test.go:36: expected '%!s(int=15)', got '%!s(int=2863311523)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmp1x56ptlv_test.go:36: expected '%!s(int=12)', got '%!s(int=2863311520)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmp1x56ptlv_test.go:36: expected '%!s(int=13)', got '%!s(int=2863311521)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmp1x56ptlv_test.go:36: expected '%!s(int=127)', got '%!s(int=2863311595)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmp1x56ptlv_test.go:36: expected '%!s(int=115)', got '%!s(int=2863311591)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFF\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509776,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmp4rd7mb9j_test.go:31: expected '%!s(int=15)', got '%!s(int=2147483638)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmp4rd7mb9j_test.go:31: expected '%!s(int=12)', got '%!s(int=2147483637)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmp4rd7mb9j_test.go:31: expected '%!s(int=13)', got '%!s(int=2147483636)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmp4rd7mb9j_test.go:31: expected '%!s(int=127)', got '%!s(int=2147483582)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmp4rd7mb9j_test.go:31: expected '%!s(int=115)', got '%!s(int=2147483570)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // mask to get all bits except the first and the last bit\n    mask := (1 << uint(n)) - 1\n    mask = mask ^ (mask >> 1)\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122556,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpkw4ttwyc_test.go:33: expected '%!s(int=15)', got '%!s(int=265)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpkw4ttwyc_test.go:33: expected '%!s(int=12)', got '%!s(int=522)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpkw4ttwyc_test.go:33: expected '%!s(int=13)', got '%!s(int=1035)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpkw4ttwyc_test.go:33: expected '%!s(int=127)', got '%!s(int=65)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpkw4ttwyc_test.go:33: expected '%!s(int=115)', got '%!s(int=77)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFE\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509776,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmph9gkyy83_test.go:31: expected '%!s(int=15)', got '%!s(int=2147483639)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmph9gkyy83_test.go:31: expected '%!s(int=12)', got '%!s(int=2147483636)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmph9gkyy83_test.go:31: expected '%!s(int=13)', got '%!s(int=2147483637)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmph9gkyy83_test.go:31: expected '%!s(int=127)', got '%!s(int=2147483583)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmph9gkyy83_test.go:31: expected '%!s(int=115)', got '%!s(int=2147483571)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0b11\n    var result int = 0\n    for i := 0; i < 32; i++ {\n        if i == 0 || i == 31 {\n            result |= (n & mask)\n        } else {\n            result |= ((n & mask) ^ mask)\n        }\n        n = n >> 1\n    }\n    return result\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122556,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpjmk1m_7x_test.go:40: expected '%!s(int=15)', got '%!s(int=3)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpjmk1m_7x_test.go:40: expected '%!s(int=12)', got '%!s(int=3)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpjmk1m_7x_test.go:40: expected '%!s(int=13)', got '%!s(int=3)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpjmk1m_7x_test.go:40: expected '%!s(int=127)', got '%!s(int=3)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpjmk1m_7x_test.go:40: expected '%!s(int=115)', got '%!s(int=3)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0\n    var i int = 0\n    for i = 1; i < 32; i++ {\n        mask = mask | (1 << i)\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122556,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpverfxwzy_test.go:35: expected '%!s(int=15)', got '%!s(int=4294967287)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpverfxwzy_test.go:35: expected '%!s(int=12)', got '%!s(int=4294967284)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpverfxwzy_test.go:35: expected '%!s(int=13)', got '%!s(int=4294967285)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpverfxwzy_test.go:35: expected '%!s(int=127)', got '%!s(int=4294967231)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpverfxwzy_test.go:35: expected '%!s(int=115)', got '%!s(int=4294967219)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask = 0\n    for i := 1; i < 32; i++ {\n        mask = mask | (1 << i)\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122556,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpuyloywsj_test.go:34: expected '%!s(int=15)', got '%!s(int=4294967287)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpuyloywsj_test.go:34: expected '%!s(int=12)', got '%!s(int=4294967284)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpuyloywsj_test.go:34: expected '%!s(int=13)', got '%!s(int=4294967285)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpuyloywsj_test.go:34: expected '%!s(int=127)', got '%!s(int=4294967231)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpuyloywsj_test.go:34: expected '%!s(int=115)', got '%!s(int=4294967219)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFF\n    var mask2 int = 0x80000000\n    var mask3 int = 0x00000001\n    var mask4 int = 0xFFFFFFFE\n    var mask5 int = 0x7FFFFFFE\n    var mask6 int = 0x80000001\n    var mask7 int = 0x00000002\n    var mask8 int = 0xFFFFFFFC\n    var mask9 int = 0x7FFFFFFC\n    var mask10 int = 0x80000003\n    var mask11 int = 0x00000004\n    var mask12 int = 0xFFFFFFF8\n    var mask13 int = 0x7FFFFFF8\n    var mask14 int = 0x80000007\n    var mask15 int = 0x00000008\n    var mask16 int = 0xFFFFFFF0\n    var mask17 int = 0x7FFFFFF0\n    var mask18 int = 0x8000000F\n    var mask19 int = 0x00000010\n    var mask20 int = 0xFFFFFFE0\n    var mask21 int = 0x7FFFFFE0\n    var mask22 int = 0x8000001F\n    var mask23 int = 0x00000020\n    var mask24 int = 0xFFFFFFC0\n    var mask25 int = 0x7FFFFFC0\n    var mask26 int = 0x8000003F\n    var mask27 int = 0x00000040\n    var mask28 int = 0xFFFFFF80\n    var mask29 int = 0x7FFFFF80\n    var mask30 int = 0x8000007F\n    var mask31 int = 0x00000080\n    var mask32 int = 0xFFFFFF00\n    var mask33 int = 0x7FFFFF00\n    var mask34 int = 0x800000FF\n    var mask35 int = 0x00000100\n    var mask36 int = 0xFFFFFE00\n    var mask37 int = 0x7FFFFE00\n    var mask38 int = 0x800001FF\n    var mask39 int = 0x00000200\n    var mask40 int = 0xFFFFFC00\n    var mask41 int = 0x7FFFFC00\n    var mask42 int = 0x800003\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122555,
      "stdout": "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n",
      "stderr": "# command-line-arguments\n/tmp/tmpkebrnz8k_test.go:52:6: expected '(', found TestToggle_Middle_Bits\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0b11111111111111111111111111111110\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122556,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpvbj3gmfb_test.go:31: expected '%!s(int=15)', got '%!s(int=4294967287)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpvbj3gmfb_test.go:31: expected '%!s(int=12)', got '%!s(int=4294967284)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpvbj3gmfb_test.go:31: expected '%!s(int=13)', got '%!s(int=4294967285)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpvbj3gmfb_test.go:31: expected '%!s(int=127)', got '%!s(int=4294967231)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpvbj3gmfb_test.go:31: expected '%!s(int=115)', got '%!s(int=4294967219)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFE\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509776,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmph9gkyy83_test.go:31: expected '%!s(int=15)', got '%!s(int=2147483639)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmph9gkyy83_test.go:31: expected '%!s(int=12)', got '%!s(int=2147483636)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmph9gkyy83_test.go:31: expected '%!s(int=13)', got '%!s(int=2147483637)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmph9gkyy83_test.go:31: expected '%!s(int=127)', got '%!s(int=2147483583)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmph9gkyy83_test.go:31: expected '%!s(int=115)', got '%!s(int=2147483571)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7ffffffe\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509776,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpqyqe3n0h_test.go:31: expected '%!s(int=15)', got '%!s(int=2147483639)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpqyqe3n0h_test.go:31: expected '%!s(int=12)', got '%!s(int=2147483636)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpqyqe3n0h_test.go:31: expected '%!s(int=13)', got '%!s(int=2147483637)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpqyqe3n0h_test.go:31: expected '%!s(int=127)', got '%!s(int=2147483583)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpqyqe3n0h_test.go:31: expected '%!s(int=115)', got '%!s(int=2147483571)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // get the first bit\n    first_bit := n & 1\n    // get the last bit\n    last_bit := n & (1 << uint(len(fmt.Sprintf(\"%b\", n)) - 1))\n    // get the middle bits\n    middle_bits := n & (^(1 << uint(len(fmt.Sprintf(\"%b\", n)) - 1))) & (^1)\n    // toggle the middle bits\n    middle_bits = middle_bits ^ (middle_bits >> 1)\n    // put the first and the last bit back\n    return middle_bits | first_bit | last_bit\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122556,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmp16_cb3yp_test.go:39: expected '%!s(int=15)', got '%!s(int=9)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmp16_cb3yp_test.go:39: expected '%!s(int=12)', got '%!s(int=11)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmp16_cb3yp_test.go:39: expected '%!s(int=13)', got '%!s(int=11)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmp16_cb3yp_test.go:39: expected '%!s(int=127)', got '%!s(int=65)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmp16_cb3yp_test.go:39: expected '%!s(int=115)', got '%!s(int=75)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    return n ^ ((1 << (n - 2)) - 1)\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509776,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpq3jrv3xj_test.go:30: expected '%!s(int=15)', got '%!s(int=118)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpq3jrv3xj_test.go:30: expected '%!s(int=12)', got '%!s(int=245)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpq3jrv3xj_test.go:30: expected '%!s(int=13)', got '%!s(int=500)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpq3jrv3xj_test.go:30: expected '%!s(int=127)', got '%!s(int=9223372036854775742)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpq3jrv3xj_test.go:30: expected '%!s(int=115)', got '%!s(int=-78)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0b11\n    var result int = 0\n    for i := 0; i < 32; i++ {\n        if i == 0 || i == 31 {\n            result |= (n & mask)\n        } else {\n            result |= ((n & mask) ^ mask)\n        }\n        n = n >> 1\n    }\n    return result\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122556,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpjmk1m_7x_test.go:40: expected '%!s(int=15)', got '%!s(int=3)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpjmk1m_7x_test.go:40: expected '%!s(int=12)', got '%!s(int=3)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpjmk1m_7x_test.go:40: expected '%!s(int=13)', got '%!s(int=3)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpjmk1m_7x_test.go:40: expected '%!s(int=127)', got '%!s(int=3)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpjmk1m_7x_test.go:40: expected '%!s(int=115)', got '%!s(int=3)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    if n == 0 || n == 1 {\n        return n\n    }\n    var mask int = 1\n    var count int = 0\n    for n > mask {\n        mask = mask << 1\n        count++\n    }\n    mask = mask - 1\n    mask = mask ^ (mask >> 1)\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122556,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpxjcoabs0_test.go:41: expected '%!s(int=15)', got '%!s(int=1)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpxjcoabs0_test.go:41: expected '%!s(int=12)', got '%!s(int=2)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpxjcoabs0_test.go:41: expected '%!s(int=13)', got '%!s(int=3)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpxjcoabs0_test.go:41: expected '%!s(int=127)', got '%!s(int=1)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpxjcoabs0_test.go:41: expected '%!s(int=115)', got '%!s(int=13)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFE\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509776,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmph9gkyy83_test.go:31: expected '%!s(int=15)', got '%!s(int=2147483639)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmph9gkyy83_test.go:31: expected '%!s(int=12)', got '%!s(int=2147483636)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmph9gkyy83_test.go:31: expected '%!s(int=13)', got '%!s(int=2147483637)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmph9gkyy83_test.go:31: expected '%!s(int=127)', got '%!s(int=2147483583)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmph9gkyy83_test.go:31: expected '%!s(int=115)', got '%!s(int=2147483571)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7ffffffe\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509776,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpqyqe3n0h_test.go:31: expected '%!s(int=15)', got '%!s(int=2147483639)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpqyqe3n0h_test.go:31: expected '%!s(int=12)', got '%!s(int=2147483636)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpqyqe3n0h_test.go:31: expected '%!s(int=13)', got '%!s(int=2147483637)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpqyqe3n0h_test.go:31: expected '%!s(int=127)', got '%!s(int=2147483583)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpqyqe3n0h_test.go:31: expected '%!s(int=115)', got '%!s(int=2147483571)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // first, get the first and last bits\n    first_bit := n & 1\n    last_bit := n & (1 << uint(len(fmt.Sprintf(\"%b\", n)) - 1))\n\n    // then, toggle all the bits\n    n = n ^ (1 << uint(len(fmt.Sprintf(\"%b\", n)) - 1))\n    n = n ^ 1\n\n    // then, set the first and last bits back\n    n = n | first_bit\n    n = n | last_bit\n\n    return n\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122556,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmp3w1icwes_test.go:42: expected '%!s(int=15)', got '%!s(int=9)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmp3w1icwes_test.go:42: expected '%!s(int=12)', got '%!s(int=11)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmp3w1icwes_test.go:42: expected '%!s(int=13)', got '%!s(int=11)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmp3w1icwes_test.go:42: expected '%!s(int=127)', got '%!s(int=65)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmp3w1icwes_test.go:42: expected '%!s(int=115)', got '%!s(int=77)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // get the first bit\n    first_bit := n & 1\n    // get the last bit\n    last_bit := n & (1 << uint(31))\n    // get the middle bits\n    middle_bits := n & (0x7FFFFFFE)\n    // toggle the middle bits\n    middle_bits = middle_bits ^ 0x7FFFFFFE\n    // return the result\n    return first_bit | middle_bits | last_bit\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122557,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpscc6vtk8_test.go:39: expected '%!s(int=15)', got '%!s(int=2147483639)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpscc6vtk8_test.go:39: expected '%!s(int=12)', got '%!s(int=2147483636)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpscc6vtk8_test.go:39: expected '%!s(int=13)', got '%!s(int=2147483637)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpscc6vtk8_test.go:39: expected '%!s(int=127)', got '%!s(int=2147483583)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpscc6vtk8_test.go:39: expected '%!s(int=115)', got '%!s(int=2147483571)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // mask = 0b11111...11111\n    mask := (1 << uint(n)) - 1\n    // mask = 0b11111...11110\n    mask = mask >> 1\n    // mask = 0b01111...11110\n    mask = mask << 1\n    // mask = 0b01111...11111\n    mask = mask | 1\n    // mask = 0b01111...11110\n    mask = mask >> 1\n    // mask = 0b01111...11111\n    mask = mask << 1\n    // mask = 0b01111...11110\n    mask = mask | 1\n    // mask = 0b01111...11111\n    mask = mask << 1\n    // mask = 0b01111...11110\n    mask = mask | 1\n    // mask = 0b01111...11111\n    mask = mask << 1\n    // mask = 0b01111...11110\n    mask = mask | 1\n    // mask = 0b01111...11111\n    mask = mask << 1\n    // mask = 0b01111...11110\n    mask = mask | 1\n    // mask = 0b01111...11111\n    mask = mask << 1\n    // mask = 0b01111...11110\n    mask = mask | 1\n    // mask = 0b01111...11111\n    mask = mask << 1\n    // mask = 0b01111...11110\n    mask = mask | 1\n    // mask = 0b01111...11111\n    mask = mask << 1\n    // mask = 0b01111...11110\n    mask = mask | 1\n    // mask = 0b01111...11111\n    mask = mask << 1\n    // mask = 0b01111...11110\n    mask = mask | 1\n    // mask = 0b01111...11111\n    mask = mask << 1\n    // mask = 0b01111...11110\n    mask = mask | 1\n    // mask = 0b01111...11111\n    mask = mask << 1\n    // mask = 0b01111...11110\n    mask = mask | 1\n    // mask = 0b01111...11111\n    mask = mask << 1\n    // mask = 0b01111...11110\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122557,
      "stdout": "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n",
      "stderr": "# command-line-arguments\n/tmp/tmpwsbjujjr_test.go:63:6: expected '(', found TestToggle_Middle_Bits\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0xFFFFFFFC\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122558,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpgjo2z4j5_test.go:31: expected '%!s(int=15)', got '%!s(int=4294967285)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpgjo2z4j5_test.go:31: expected '%!s(int=12)', got '%!s(int=4294967286)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpgjo2z4j5_test.go:31: expected '%!s(int=13)', got '%!s(int=4294967287)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpgjo2z4j5_test.go:31: expected '%!s(int=127)', got '%!s(int=4294967229)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpgjo2z4j5_test.go:31: expected '%!s(int=115)', got '%!s(int=4294967217)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFF\n    var mask2 int = 0x80000000\n    var mask3 int = 0x00000001\n    var mask4 int = 0xFFFFFFFE\n    var mask5 int = 0xFFFFFFFC\n    var mask6 int = 0x00000002\n    var mask7 int = 0xFFFFFFFB\n    var mask8 int = 0xFFFFFFF7\n    var mask9 int = 0x00000004\n    var mask10 int = 0xFFFFFFF3\n    var mask11 int = 0xFFFFFFE7\n    var mask12 int = 0x00000008\n    var mask13 int = 0xFFFFFFD7\n    var mask14 int = 0xFFFFFFAF\n    var mask15 int = 0x00000010\n    var mask16 int = 0xFFFFFF6F\n    var mask17 int = 0xFFFFFEFF\n    var mask18 int = 0x00000020\n    var mask19 int = 0xFFFFFDFF\n    var mask20 int = 0xFFFFFBFF\n    var mask21 int = 0x00000040\n    var mask22 int = 0xFFFFF7FF\n    var mask23 int = 0xFFFFEFFF\n    var mask24 int = 0x00000080\n    var mask25 int = 0xFFFFDFFF\n    var mask26 int = 0xFFFFBFFF\n    var mask27 int = 0x00000100\n    var mask28 int = 0xFFFF7FFF\n    var mask29 int = 0xFFFEFFFF\n    var mask30 int = 0x00000200\n    var mask31 int = 0xFFFDFFFF\n    var mask32 int = 0xFFFBFFFF\n    var mask33 int = 0x00000400\n    var mask34 int = 0xFFF7FFFF\n    var mask35 int = 0xFFEFFFFF\n    var mask36 int = 0x00000800\n    var mask37 int = 0xFFDFFFFF\n    var mask38 int = 0xFFBFFFFF\n    var mask39 int = 0x00001000\n    var mask40 int = 0xFF7FFFFF\n    var mask41 int = 0xFEFFFFFF\n    var mask42 int = 0x00002000\n    var mask43 int = 0x\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122558,
      "stdout": "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n",
      "stderr": "# command-line-arguments\n/tmp/tmpj7ecfdzs_test.go:52:24: hexadecimal literal has no digits\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask = (1 << uint(n)) - 1\n    fmt.Printf(\"mask: %b\\n\", mask)\n    var result = n ^ mask\n    fmt.Printf(\"result: %b\\n\", result)\n    return result\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122559,
      "stdout": "mask: 111111111\nresult: 111110110\nmask: 1111111111\nresult: 1111110101\nmask: 11111111111\nresult: 11111110100\nmask: -1\nresult: -1000010\nmask: -1\nresult: -1001110\n--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpak90m54d_test.go:34: expected '%!s(int=15)', got '%!s(int=502)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpak90m54d_test.go:34: expected '%!s(int=12)', got '%!s(int=1013)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpak90m54d_test.go:34: expected '%!s(int=13)', got '%!s(int=2036)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpak90m54d_test.go:34: expected '%!s(int=127)', got '%!s(int=-66)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpak90m54d_test.go:34: expected '%!s(int=115)', got '%!s(int=-78)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0\n    var i int = 1\n    for i < 32 {\n        mask = mask | (1 << i)\n        i = i + 2\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122556,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmp1x56ptlv_test.go:36: expected '%!s(int=15)', got '%!s(int=2863311523)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmp1x56ptlv_test.go:36: expected '%!s(int=12)', got '%!s(int=2863311520)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmp1x56ptlv_test.go:36: expected '%!s(int=13)', got '%!s(int=2863311521)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmp1x56ptlv_test.go:36: expected '%!s(int=127)', got '%!s(int=2863311595)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmp1x56ptlv_test.go:36: expected '%!s(int=115)', got '%!s(int=2863311591)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // get the first and last bit\n    first_bit := n & 1\n    last_bit := n & (1 << uint(len(fmt.Sprintf(\"%b\", n)) - 1))\n    // clear the first and last bit\n    n = n & ^1\n    n = n & ^(1 << uint(len(fmt.Sprintf(\"%b\", n)) - 1))\n    // toggle the middle bits\n    n = n ^ (n >> 1)\n    // set the first and last bit\n    n = n | first_bit\n    n = n | last_bit\n    return n\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509776,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpvcr8i00r_test.go:41: expected '%!s(int=15)', got '%!s(int=9)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpvcr8i00r_test.go:41: expected '%!s(int=12)', got '%!s(int=11)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpvcr8i00r_test.go:41: expected '%!s(int=13)', got '%!s(int=11)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpvcr8i00r_test.go:41: expected '%!s(int=127)', got '%!s(int=65)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpvcr8i00r_test.go:41: expected '%!s(int=115)', got '%!s(int=75)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // get the first and last bit\n    first_bit := n & 1\n    last_bit := n & (1 << uint(len(fmt.Sprintf(\"%b\", n)) - 1))\n    // clear the first and last bit\n    n = n & ^1\n    n = n & ^(1 << uint(len(fmt.Sprintf(\"%b\", n)) - 1))\n    // toggle the middle bits\n    n = n ^ (n >> 1)\n    // set the first and last bit\n    n = n | first_bit\n    n = n | last_bit\n    return n\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509776,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpvcr8i00r_test.go:41: expected '%!s(int=15)', got '%!s(int=9)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpvcr8i00r_test.go:41: expected '%!s(int=12)', got '%!s(int=11)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpvcr8i00r_test.go:41: expected '%!s(int=13)', got '%!s(int=11)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpvcr8i00r_test.go:41: expected '%!s(int=127)', got '%!s(int=65)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpvcr8i00r_test.go:41: expected '%!s(int=115)', got '%!s(int=75)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    return n ^ ((1 << uint(n)) - 1)\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122559,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpsp1o4u6n_test.go:30: expected '%!s(int=15)', got '%!s(int=502)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpsp1o4u6n_test.go:30: expected '%!s(int=12)', got '%!s(int=1013)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpsp1o4u6n_test.go:30: expected '%!s(int=13)', got '%!s(int=2036)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpsp1o4u6n_test.go:30: expected '%!s(int=127)', got '%!s(int=-66)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpsp1o4u6n_test.go:30: expected '%!s(int=115)', got '%!s(int=-78)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0\n    for i := 1; i < 32; i++ {\n        mask = mask | (1 << i)\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509776,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpjmvmh8bf_test.go:34: expected '%!s(int=15)', got '%!s(int=4294967287)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpjmvmh8bf_test.go:34: expected '%!s(int=12)', got '%!s(int=4294967284)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpjmvmh8bf_test.go:34: expected '%!s(int=13)', got '%!s(int=4294967285)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpjmvmh8bf_test.go:34: expected '%!s(int=127)', got '%!s(int=4294967231)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpjmvmh8bf_test.go:34: expected '%!s(int=115)', got '%!s(int=4294967219)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // Get the first and last bit\n    first_bit := n & 1\n    last_bit := n & (1 << uint(len(fmt.Sprintf(\"%b\", n)) - 1))\n    // Remove the first and last bit\n    n = n & (^1)\n    n = n & (^(1 << uint(len(fmt.Sprintf(\"%b\", n)) - 1)))\n    // Toggle the middle bits\n    n = n ^ (n >> 1)\n    // Add the first and last bit back\n    n = n | first_bit\n    n = n | last_bit\n    return n\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122559,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpt3txl0iu_test.go:41: expected '%!s(int=15)', got '%!s(int=9)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpt3txl0iu_test.go:41: expected '%!s(int=12)', got '%!s(int=11)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpt3txl0iu_test.go:41: expected '%!s(int=13)', got '%!s(int=11)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpt3txl0iu_test.go:41: expected '%!s(int=127)', got '%!s(int=65)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpt3txl0iu_test.go:41: expected '%!s(int=115)', got '%!s(int=75)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var i uint\n    var mask uint = 1\n    var result uint = 0\n    for i = 1; i < uint(len(fmt.Sprintf(\"%b\", n)) - 1); i++ {\n        if (uint(n) & (mask << i)) == 0 {\n            result |= (mask << i)\n        }\n    }\n    return int(result)\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122559,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmp2inw2vo9_test.go:38: expected '%!s(int=15)', got '%!s(int=6)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmp2inw2vo9_test.go:38: expected '%!s(int=12)', got '%!s(int=4)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmp2inw2vo9_test.go:38: expected '%!s(int=13)', got '%!s(int=4)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmp2inw2vo9_test.go:38: expected '%!s(int=127)', got '%!s(int=62)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmp2inw2vo9_test.go:38: expected '%!s(int=115)', got '%!s(int=50)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFF\n    var mask2 int = 0x80000000\n    var mask3 int = 0x00000001\n    var mask4 int = 0xFFFFFFFE\n    var mask5 int = 0x7FFFFFFE\n    var mask6 int = 0x80000001\n    var mask7 int = 0xFFFFFFFC\n    var mask8 int = 0x7FFFFFFD\n    var mask9 int = 0x80000003\n    var mask10 int = 0xFFFFFFF8\n    var mask11 int = 0x7FFFFFFB\n    var mask12 int = 0x80000007\n    var mask13 int = 0xFFFFFFF0\n    var mask14 int = 0x7FFFFFF7\n    var mask15 int = 0x8000000F\n    var mask16 int = 0xFFFFFFE0\n    var mask17 int = 0x7FFFFFFF\n    var mask18 int = 0x8000001F\n    var mask19 int = 0xFFFFFFC0\n    var mask20 int = 0x7FFFFFFF\n    var mask21 int = 0x8000003F\n    var mask22 int = 0xFFFFFF80\n    var mask23 int = 0x7FFFFFFF\n    var mask24 int = 0x8000007F\n    var mask25 int = 0xFFFFFF00\n    var mask26 int = 0x7FFFFFFF\n    var mask27 int = 0x800000FF\n    var mask28 int = 0xFFFFFE00\n    var mask29 int = 0x7FFFFFFF\n    var mask30 int = 0x800001FF\n    var mask31 int = 0xFFFFFC00\n    var mask32 int = 0x7FFFFFFF\n    var mask33 int = 0x800003FF\n    var mask34 int = 0xFFFFF800\n    var mask35 int = 0x7FFFFFFF\n    var mask36 int = 0x800007FF\n    var mask37 int = 0xFFFFF000\n    var mask38 int = 0x7FFFFFFF\n    var mask39 int = 0x80000FFF\n    var mask40 int = 0xFFFFE000\n    var mask41 int = 0x7FFFFFF\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122558,
      "stdout": "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n",
      "stderr": "# command-line-arguments\n/tmp/tmpmdwspe3b_test.go:51:6: expected '(', found TestToggle_Middle_Bits\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFE\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509776,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmph9gkyy83_test.go:31: expected '%!s(int=15)', got '%!s(int=2147483639)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmph9gkyy83_test.go:31: expected '%!s(int=12)', got '%!s(int=2147483636)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmph9gkyy83_test.go:31: expected '%!s(int=13)', got '%!s(int=2147483637)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmph9gkyy83_test.go:31: expected '%!s(int=127)', got '%!s(int=2147483583)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmph9gkyy83_test.go:31: expected '%!s(int=115)', got '%!s(int=2147483571)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask = 0x7fffffff\n    var mask2 = 0x80000000\n    var mask3 = 0x00000001\n    var mask4 = 0xfffffffe\n    var mask5 = 0xfffffffd\n    var mask6 = 0xfffffffc\n    var mask7 = 0xfffffffb\n    var mask8 = 0xfffffffa\n    var mask9 = 0xfffffff9\n    var mask10 = 0xfffffff8\n    var mask11 = 0xfffffff7\n    var mask12 = 0xfffffff6\n    var mask13 = 0xfffffff5\n    var mask14 = 0xfffffff4\n    var mask15 = 0xfffffff3\n    var mask16 = 0xfffffff2\n    var mask17 = 0xfffffff1\n    var mask18 = 0xfffffff0\n    var mask19 = 0xffffffef\n    var mask20 = 0xffffffee\n    var mask21 = 0xffffffed\n    var mask22 = 0xffffffec\n    var mask23 = 0xffffffeb\n    var mask24 = 0xffffffea\n    var mask25 = 0xffffffe9\n    var mask26 = 0xffffffe8\n    var mask27 = 0xffffffe7\n    var mask28 = 0xffffffe6\n    var mask29 = 0xffffffe5\n    var mask30 = 0xffffffe4\n    var mask31 = 0xffffffe3\n    var mask32 = 0xffffffe2\n    var mask33 = 0xffffffe1\n    var mask34 = 0xffffffe0\n    var mask35 = 0xffffffdf\n    var mask36 = 0xffffffde\n    var mask37 = 0xffffffdd\n    var mask38 = 0xffffffdc\n    var mask39 = 0xffffffdb\n    var mask40 = 0xffffffda\n    var mask41 = 0xffffffd9\n    var mask42 = 0xffffffd8\n    var mask43 = 0xffffffd7\n    var mask44 = 0xffffffd6\n    var mask45 = 0xffffffd5\n    var mask46 = 0xffffffd4\n    var mask\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122558,
      "stdout": "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n",
      "stderr": "# command-line-arguments\n/tmp/tmpxwhmr64p_test.go:56:9: missing variable type or initialization\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFF\n    var mask2 int = 0x80000000\n    var mask3 int = 0x00000001\n    var mask4 int = 0xFFFFFFFE\n    var mask5 int = 0x7FFFFFFE\n    var mask6 int = 0x80000001\n    var mask7 int = 0x00000002\n    var mask8 int = 0xFFFFFFFC\n    return (n & mask) ^ (mask2 & mask3) ^ (mask4 & mask5) ^ (mask6 & mask7) ^ (mask8 & mask)\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122559,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmp2d1qq_fl_test.go:38: expected '%!s(int=15)', got '%!s(int=11)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmp2d1qq_fl_test.go:38: expected '%!s(int=12)', got '%!s(int=8)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmp2d1qq_fl_test.go:38: expected '%!s(int=13)', got '%!s(int=9)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmp2d1qq_fl_test.go:38: expected '%!s(int=127)', got '%!s(int=67)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmp2d1qq_fl_test.go:38: expected '%!s(int=115)', got '%!s(int=79)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFF\n    var mask2 int = 0x80000000\n    var mask3 int = 0x00000001\n    var mask4 int = 0xFFFFFFFE\n    var mask5 int = 0x7FFFFFFE\n    var mask6 int = 0xFFFFFFFC\n    var mask7 int = 0x7FFFFFFC\n    var mask8 int = 0xFFFFFFF8\n    var mask9 int = 0x7FFFFFF8\n    var mask10 int = 0xFFFFFFF0\n    var mask11 int = 0x7FFFFFF0\n    var mask12 int = 0xFFFFFFE0\n    var mask13 int = 0x7FFFFFE0\n    var mask14 int = 0xFFFFFFC0\n    var mask15 int = 0x7FFFFFC0\n    var mask16 int = 0xFFFFFF80\n    var mask17 int = 0x7FFFFF80\n    var mask18 int = 0xFFFFFF00\n    var mask19 int = 0x7FFFFF00\n    var mask20 int = 0xFFFFFE00\n    var mask21 int = 0x7FFFFE00\n    var mask22 int = 0xFFFFFC00\n    var mask23 int = 0x7FFFFC00\n    var mask24 int = 0xFFFFF800\n    var mask25 int = 0x7FFFF800\n    var mask26 int = 0xFFFFF000\n    var mask27 int = 0x7FFFF000\n    var mask28 int = 0xFFFFE000\n    var mask29 int = 0x7FFFE000\n    var mask30 int = 0xFFFFC000\n    var mask31 int = 0x7FFFC000\n    var mask32 int = 0xFFFF8000\n    var mask33 int = 0x7FFF8000\n    var mask34 int = 0xFFFF0000\n    var mask35 int = 0x7FFF0000\n    var mask36 int = 0xFFFE0000\n    var mask37 int = 0x7FFE0000\n    var mask38 int = 0xFFFC0000\n    var mask39 int = 0x7FFC0000\n    var mask40 int = 0xFFF80000\n    var mask41 int = 0x7FF80000\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122558,
      "stdout": "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n",
      "stderr": "# command-line-arguments\n/tmp/tmp6mehwu89_test.go:51:6: expected '(', found TestToggle_Middle_Bits\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFE\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509776,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmph9gkyy83_test.go:31: expected '%!s(int=15)', got '%!s(int=2147483639)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmph9gkyy83_test.go:31: expected '%!s(int=12)', got '%!s(int=2147483636)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmph9gkyy83_test.go:31: expected '%!s(int=13)', got '%!s(int=2147483637)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmph9gkyy83_test.go:31: expected '%!s(int=127)', got '%!s(int=2147483583)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmph9gkyy83_test.go:31: expected '%!s(int=115)', got '%!s(int=2147483571)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0\n    for i := 1; i < 32; i++ {\n        if i == 1 || i == 31 {\n            continue\n        }\n        mask = mask | (1 << i)\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122559,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpr362i2oh_test.go:37: expected '%!s(int=15)', got '%!s(int=2147483637)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpr362i2oh_test.go:37: expected '%!s(int=12)', got '%!s(int=2147483638)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpr362i2oh_test.go:37: expected '%!s(int=13)', got '%!s(int=2147483639)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpr362i2oh_test.go:37: expected '%!s(int=127)', got '%!s(int=2147483581)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpr362i2oh_test.go:37: expected '%!s(int=115)', got '%!s(int=2147483569)'\nFAIL\nFAIL\tcommand-line-arguments\t0.010s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // Get the first and last bits\n    first_bit := n & 1\n    last_bit := n & (1 << uint(len(fmt.Sprintf(\"%b\", n)) - 1))\n    // Clear the first and last bits\n    n = n &^ 1\n    n = n &^ (1 << uint(len(fmt.Sprintf(\"%b\", n)) - 1))\n    // Toggle the middle bits\n    n = n ^ (n >> 1)\n    // Set the first and last bits\n    n = n | first_bit\n    n = n | last_bit\n    return n\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122559,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmp4bshjazp_test.go:41: expected '%!s(int=15)', got '%!s(int=9)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmp4bshjazp_test.go:41: expected '%!s(int=12)', got '%!s(int=11)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmp4bshjazp_test.go:41: expected '%!s(int=13)', got '%!s(int=11)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmp4bshjazp_test.go:41: expected '%!s(int=127)', got '%!s(int=65)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmp4bshjazp_test.go:41: expected '%!s(int=115)', got '%!s(int=75)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // get the first and last bits\n    first_bit := n & 1\n    last_bit := n & (1 << uint(len(fmt.Sprintf(\"%b\", n)) - 1))\n    // shift the number to the right and left to remove the first and last bits\n    n = n >> 1\n    n = n << 1\n    // toggle the bits\n    n = n ^ (1 << uint(len(fmt.Sprintf(\"%b\", n)) - 1))\n    // add the first and last bits back\n    n = n | first_bit\n    n = n | last_bit\n    return n\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122559,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpfbxhfc4p_test.go:41: expected '%!s(int=15)', got '%!s(int=9)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpfbxhfc4p_test.go:41: expected '%!s(int=12)', got '%!s(int=10)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpfbxhfc4p_test.go:41: expected '%!s(int=13)', got '%!s(int=11)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpfbxhfc4p_test.go:41: expected '%!s(int=127)', got '%!s(int=65)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpfbxhfc4p_test.go:41: expected '%!s(int=115)', got '%!s(int=77)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask = 0\n    var i = 1\n    for i < n {\n        mask = mask | i\n        i = i << 1\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122559,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmp9vkdlnhs_test.go:36: expected '%!s(int=15)', got '%!s(int=6)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmp9vkdlnhs_test.go:36: expected '%!s(int=12)', got '%!s(int=5)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmp9vkdlnhs_test.go:36: expected '%!s(int=13)', got '%!s(int=4)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmp9vkdlnhs_test.go:36: expected '%!s(int=127)', got '%!s(int=62)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmp9vkdlnhs_test.go:36: expected '%!s(int=115)', got '%!s(int=50)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7fffffff\n    var mask2 int = 0x80000000\n    var mask3 int = 0x00000001\n    var mask4 int = 0x7ffffffe\n    var mask5 int = 0xfffffffe\n    var mask6 int = 0xfffffffe\n    var mask7 int = 0xfffffffe\n    var mask8 int = 0xfffffffe\n    var mask9 int = 0xfffffffe\n    var mask10 int = 0xfffffffe\n    var mask11 int = 0xfffffffe\n    var mask12 int = 0xfffffffe\n    var mask13 int = 0xfffffffe\n    var mask14 int = 0xfffffffe\n    var mask15 int = 0xfffffffe\n    var mask16 int = 0xfffffffe\n    var mask17 int = 0xfffffffe\n    var mask18 int = 0xfffffffe\n    var mask19 int = 0xfffffffe\n    var mask20 int = 0xfffffffe\n    var mask21 int = 0xfffffffe\n    var mask22 int = 0xfffffffe\n    var mask23 int = 0xfffffffe\n    var mask24 int = 0xfffffffe\n    var mask25 int = 0xfffffffe\n    var mask26 int = 0xfffffffe\n    var mask27 int = 0xfffffffe\n    var mask28 int = 0xfffffffe\n    var mask29 int = 0xfffffffe\n    var mask30 int = 0xfffffffe\n    var mask31 int = 0xfffffffe\n    var mask32 int = 0xfffffffe\n    var mask33 int = 0xfffffffe\n    var mask34 int = 0xfffffffe\n    var mask35 int = 0xfffffffe\n    var mask36 int = 0xfffffffe\n    var mask37 int = 0xfffffffe\n    var mask38 int = 0xfffffffe\n    var mask39 int = 0xfffffffe\n    var mask40 int = 0xfffffffe\n    var mask41 int = 0xfffffffe\n    var mask42 int = 0xfffffffe\n    var mask43 int = 0xffffff\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122558,
      "stdout": "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n",
      "stderr": "# command-line-arguments\n/tmp/tmpub3uc4v3_test.go:53:6: expected '(', found TestToggle_Middle_Bits\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    mask := 1\n    for i := 1; i < 31; i++ {\n        mask |= 1 << i\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122559,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpgcynme3b_test.go:34: expected '%!s(int=15)', got '%!s(int=2147483638)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpgcynme3b_test.go:34: expected '%!s(int=12)', got '%!s(int=2147483637)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpgcynme3b_test.go:34: expected '%!s(int=13)', got '%!s(int=2147483636)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpgcynme3b_test.go:34: expected '%!s(int=127)', got '%!s(int=2147483582)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpgcynme3b_test.go:34: expected '%!s(int=115)', got '%!s(int=2147483570)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // mask = 0b111111100\n    mask := 0b111111100\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122559,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmp2lcu98fk_test.go:32: expected '%!s(int=15)', got '%!s(int=501)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmp2lcu98fk_test.go:32: expected '%!s(int=12)', got '%!s(int=502)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmp2lcu98fk_test.go:32: expected '%!s(int=13)', got '%!s(int=503)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmp2lcu98fk_test.go:32: expected '%!s(int=127)', got '%!s(int=445)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmp2lcu98fk_test.go:32: expected '%!s(int=115)', got '%!s(int=433)'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0\n    var i int = 1\n    for i < 32 {\n        mask = mask | (1 << i)\n        i += 2\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509776,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmphtwnbbnt_test.go:36: expected '%!s(int=15)', got '%!s(int=2863311523)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmphtwnbbnt_test.go:36: expected '%!s(int=12)', got '%!s(int=2863311520)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmphtwnbbnt_test.go:36: expected '%!s(int=13)', got '%!s(int=2863311521)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmphtwnbbnt_test.go:36: expected '%!s(int=127)', got '%!s(int=2863311595)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmphtwnbbnt_test.go:36: expected '%!s(int=115)', got '%!s(int=2863311591)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0\n    for i := 1; i < 32; i++ {\n        mask = mask | (1 << i)\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509776,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpjmvmh8bf_test.go:34: expected '%!s(int=15)', got '%!s(int=4294967287)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpjmvmh8bf_test.go:34: expected '%!s(int=12)', got '%!s(int=4294967284)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpjmvmh8bf_test.go:34: expected '%!s(int=13)', got '%!s(int=4294967285)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpjmvmh8bf_test.go:34: expected '%!s(int=127)', got '%!s(int=4294967231)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpjmvmh8bf_test.go:34: expected '%!s(int=115)', got '%!s(int=4294967219)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0\n    var i int = 1\n    for ; i < 32; i++ {\n        mask = mask | (1 << i)\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122559,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpzv6glhib_test.go:35: expected '%!s(int=15)', got '%!s(int=4294967287)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpzv6glhib_test.go:35: expected '%!s(int=12)', got '%!s(int=4294967284)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpzv6glhib_test.go:35: expected '%!s(int=13)', got '%!s(int=4294967285)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpzv6glhib_test.go:35: expected '%!s(int=127)', got '%!s(int=4294967231)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpzv6glhib_test.go:35: expected '%!s(int=115)', got '%!s(int=4294967219)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0b11111111111111111111111111111110\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122556,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpvbj3gmfb_test.go:31: expected '%!s(int=15)', got '%!s(int=4294967287)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpvbj3gmfb_test.go:31: expected '%!s(int=12)', got '%!s(int=4294967284)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpvbj3gmfb_test.go:31: expected '%!s(int=13)', got '%!s(int=4294967285)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpvbj3gmfb_test.go:31: expected '%!s(int=127)', got '%!s(int=4294967231)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpvbj3gmfb_test.go:31: expected '%!s(int=115)', got '%!s(int=4294967219)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0\n    for i := 1; i < 32; i++ {\n        if i == 1 || i == 31 {\n            continue\n        }\n        mask |= 1 << i\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122559,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpt8urg7q2_test.go:37: expected '%!s(int=15)', got '%!s(int=2147483637)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpt8urg7q2_test.go:37: expected '%!s(int=12)', got '%!s(int=2147483638)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpt8urg7q2_test.go:37: expected '%!s(int=13)', got '%!s(int=2147483639)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpt8urg7q2_test.go:37: expected '%!s(int=127)', got '%!s(int=2147483581)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpt8urg7q2_test.go:37: expected '%!s(int=115)', got '%!s(int=2147483569)'\nFAIL\nFAIL\tcommand-line-arguments\t0.008s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7fffffff\n    var result int = 0\n    result = n ^ mask\n    return result\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122559,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpf77jxgbh_test.go:33: expected '%!s(int=15)', got '%!s(int=2147483638)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpf77jxgbh_test.go:33: expected '%!s(int=12)', got '%!s(int=2147483637)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpf77jxgbh_test.go:33: expected '%!s(int=13)', got '%!s(int=2147483636)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpf77jxgbh_test.go:33: expected '%!s(int=127)', got '%!s(int=2147483582)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpf77jxgbh_test.go:33: expected '%!s(int=115)', got '%!s(int=2147483570)'\nFAIL\nFAIL\tcommand-line-arguments\t0.009s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7fffffff\n    var mask2 int = 0x80000001\n    return (n & mask) ^ mask2\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122559,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpd7rmf8q8_test.go:32: expected '%!s(int=15)', got '%!s(int=2147483656)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpd7rmf8q8_test.go:32: expected '%!s(int=12)', got '%!s(int=2147483659)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpd7rmf8q8_test.go:32: expected '%!s(int=13)', got '%!s(int=2147483658)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpd7rmf8q8_test.go:32: expected '%!s(int=127)', got '%!s(int=2147483712)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpd7rmf8q8_test.go:32: expected '%!s(int=115)', got '%!s(int=2147483724)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7ffffffe\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509776,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpqyqe3n0h_test.go:31: expected '%!s(int=15)', got '%!s(int=2147483639)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpqyqe3n0h_test.go:31: expected '%!s(int=12)', got '%!s(int=2147483636)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpqyqe3n0h_test.go:31: expected '%!s(int=13)', got '%!s(int=2147483637)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpqyqe3n0h_test.go:31: expected '%!s(int=127)', got '%!s(int=2147483583)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpqyqe3n0h_test.go:31: expected '%!s(int=115)', got '%!s(int=2147483571)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7ffffffe\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509776,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpqyqe3n0h_test.go:31: expected '%!s(int=15)', got '%!s(int=2147483639)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpqyqe3n0h_test.go:31: expected '%!s(int=12)', got '%!s(int=2147483636)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpqyqe3n0h_test.go:31: expected '%!s(int=13)', got '%!s(int=2147483637)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpqyqe3n0h_test.go:31: expected '%!s(int=127)', got '%!s(int=2147483583)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpqyqe3n0h_test.go:31: expected '%!s(int=115)', got '%!s(int=2147483571)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // get the first and last bit\n    first_bit := n & 1\n    last_bit := (n >> 1) & 1\n    // get the number of bits in the number\n    num_bits := 0\n    for n > 0 {\n        n = n >> 1\n        num_bits++\n    }\n    // get the mask for the middle bits\n    mask := (1 << uint(num_bits - 2)) - 1\n    // toggle the middle bits\n    return (n ^ mask) | (first_bit << uint(num_bits - 1)) | (last_bit << uint(num_bits - 2))\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122559,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmp91eawawr_test.go:42: expected '%!s(int=15)', got '%!s(int=11)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmp91eawawr_test.go:42: expected '%!s(int=12)', got '%!s(int=7)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmp91eawawr_test.go:42: expected '%!s(int=13)', got '%!s(int=15)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmp91eawawr_test.go:42: expected '%!s(int=127)', got '%!s(int=95)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmp91eawawr_test.go:42: expected '%!s(int=115)', got '%!s(int=95)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0b11111111111111111111111111111111\n    var mask_left int = 0b11111111111111111111111111111110\n    var mask_right int = 0b11111111111111111111111111111111\n    var mask_middle int = 0b11111111111111111111111111111111\n    var n_left int = n & mask_left\n    var n_right int = n & mask_right\n    var n_middle int = n & mask_middle\n    var n_middle_toggled int = n_middle ^ mask\n    var n_toggled int = n_left | n_middle_toggled | n_right\n    return n_toggled\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122560,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmplzrr5ozg_test.go:39: expected '%!s(int=15)', got '%!s(int=4294967295)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmplzrr5ozg_test.go:39: expected '%!s(int=12)', got '%!s(int=4294967295)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmplzrr5ozg_test.go:39: expected '%!s(int=13)', got '%!s(int=4294967295)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmplzrr5ozg_test.go:39: expected '%!s(int=127)', got '%!s(int=4294967295)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmplzrr5ozg_test.go:39: expected '%!s(int=115)', got '%!s(int=4294967295)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // we need to create a mask that has 1s in the middle and 0s on the ends\n    // we can do this by shifting 1s to the left by 1 and then shifting them back by 1\n    // this will create a mask with 1s in the middle and 0s on the ends\n    mask := (1 << (n - 2)) | (1 << (n - 2)) >> 1\n    // we can then use this mask to toggle the bits in the middle\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122560,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmp1r7blb4u_test.go:35: expected '%!s(int=15)', got '%!s(int=201)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmp1r7blb4u_test.go:35: expected '%!s(int=12)', got '%!s(int=394)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmp1r7blb4u_test.go:35: expected '%!s(int=13)', got '%!s(int=779)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmp1r7blb4u_test.go:35: expected '%!s(int=127)', got '%!s(int=-4611686018427387839)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmp1r7blb4u_test.go:35: expected '%!s(int=115)', got '%!s(int=77)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask = 0\n    for i := 1; i < 32; i++ {\n        if i == 1 || i == 31 {\n            continue\n        }\n        mask |= 1 << i\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122556,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmp3utexcer_test.go:37: expected '%!s(int=15)', got '%!s(int=2147483637)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmp3utexcer_test.go:37: expected '%!s(int=12)', got '%!s(int=2147483638)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmp3utexcer_test.go:37: expected '%!s(int=13)', got '%!s(int=2147483639)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmp3utexcer_test.go:37: expected '%!s(int=127)', got '%!s(int=2147483581)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmp3utexcer_test.go:37: expected '%!s(int=115)', got '%!s(int=2147483569)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0b11111111111111111111111111111101\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122560,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpx7i934zn_test.go:31: expected '%!s(int=15)', got '%!s(int=4294967284)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpx7i934zn_test.go:31: expected '%!s(int=12)', got '%!s(int=4294967287)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpx7i934zn_test.go:31: expected '%!s(int=13)', got '%!s(int=4294967286)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpx7i934zn_test.go:31: expected '%!s(int=127)', got '%!s(int=4294967228)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpx7i934zn_test.go:31: expected '%!s(int=115)', got '%!s(int=4294967216)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0b11\n    var res int = 0\n    for i := 0; i < 32; i++ {\n        if i == 0 || i == 31 {\n            res = res | (n & mask)\n        } else {\n            res = res | (n & mask) ^ mask\n        }\n        n = n >> 1\n    }\n    return res\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122560,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmp3uvuv0v__test.go:40: expected '%!s(int=15)', got '%!s(int=1)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmp3uvuv0v__test.go:40: expected '%!s(int=12)', got '%!s(int=1)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmp3uvuv0v__test.go:40: expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmp3uvuv0v__test.go:40: expected '%!s(int=127)', got '%!s(int=2)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmp3uvuv0v__test.go:40: expected '%!s(int=115)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFF\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509776,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmp4rd7mb9j_test.go:31: expected '%!s(int=15)', got '%!s(int=2147483638)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmp4rd7mb9j_test.go:31: expected '%!s(int=12)', got '%!s(int=2147483637)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmp4rd7mb9j_test.go:31: expected '%!s(int=13)', got '%!s(int=2147483636)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmp4rd7mb9j_test.go:31: expected '%!s(int=127)', got '%!s(int=2147483582)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmp4rd7mb9j_test.go:31: expected '%!s(int=115)', got '%!s(int=2147483570)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask = 0b11 << 1\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122560,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmps1qx89yq_test.go:31: expected '%!s(int=127)', got '%!s(int=71)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmps1qx89yq_test.go:31: expected '%!s(int=115)', got '%!s(int=75)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0\n    var i int = 1\n    for ; i < 32; i++ {\n        if i == 1 || i == 31 {\n            continue\n        }\n        mask = mask | (1 << i)\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122560,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmplgw9r2z5_test.go:38: expected '%!s(int=15)', got '%!s(int=2147483637)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmplgw9r2z5_test.go:38: expected '%!s(int=12)', got '%!s(int=2147483638)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmplgw9r2z5_test.go:38: expected '%!s(int=13)', got '%!s(int=2147483639)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmplgw9r2z5_test.go:38: expected '%!s(int=127)', got '%!s(int=2147483581)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmplgw9r2z5_test.go:38: expected '%!s(int=115)', got '%!s(int=2147483569)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0b11111111111111111111111111111110\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122556,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpvbj3gmfb_test.go:31: expected '%!s(int=15)', got '%!s(int=4294967287)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpvbj3gmfb_test.go:31: expected '%!s(int=12)', got '%!s(int=4294967284)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpvbj3gmfb_test.go:31: expected '%!s(int=13)', got '%!s(int=4294967285)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpvbj3gmfb_test.go:31: expected '%!s(int=127)', got '%!s(int=4294967231)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpvbj3gmfb_test.go:31: expected '%!s(int=115)', got '%!s(int=4294967219)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFF\n    var mask2 int = 0x80000000\n    var mask3 int = 0x00000001\n    var mask4 int = 0xFFFFFFFE\n    var mask5 int = 0xFFFFFFFC\n    var mask6 int = 0x00000002\n    var mask7 int = 0xFFFFFFFB\n    var mask8 int = 0xFFFFFFF7\n    var mask9 int = 0x00000004\n    var mask10 int = 0xFFFFFFF3\n    var mask11 int = 0xFFFFFFE7\n    var mask12 int = 0x00000008\n    var mask13 int = 0xFFFFFFD7\n    var mask14 int = 0xFFFFFFAF\n    var mask15 int = 0x00000010\n    var mask16 int = 0xFFFFFF5F\n    var mask17 int = 0xFFFFFEFF\n    var mask18 int = 0x00000020\n    var mask19 int = 0xFFFFFDFF\n    var mask20 int = 0xFFFFFBFF\n    var mask21 int = 0x00000040\n    var mask22 int = 0xFFFFF7FF\n    var mask23 int = 0xFFFFEFFF\n    var mask24 int = 0x00000080\n    var mask25 int = 0xFFFFDFFF\n    var mask26 int = 0xFFFFBFFF\n    var mask27 int = 0x00000100\n    var mask28 int = 0xFFFF7FFF\n    var mask29 int = 0xFFFEFFFF\n    var mask30 int = 0x00000200\n    var mask31 int = 0xFFFDFFFF\n    var mask32 int = 0xFFFBFFFF\n    var mask33 int = 0x00000400\n    var mask34 int = 0xFFF7FFFF\n    var mask35 int = 0xFFEFFFFF\n    var mask36 int = 0x00000800\n    var mask37 int = 0xFFDFFFFF\n    var mask38 int = 0xFFBFFFFF\n    var mask39 int = 0x00001000\n    var mask40 int = 0xFF7FFFFF\n    var mask41 int = 0xFEFFFFFF\n    var mask42 int = 0x00002000\n    var mask43 int = 0x\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122560,
      "stdout": "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n",
      "stderr": "# command-line-arguments\n/tmp/tmpx1o3uq4e_test.go:52:24: hexadecimal literal has no digits\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFF\n    var mask2 int = 0x80000000\n    var mask3 int = 0x00000001\n    var mask4 int = 0xFFFFFFFE\n    var mask5 int = 0x7FFFFFFE\n    var mask6 int = 0x80000001\n    var mask7 int = 0xFFFFFFFC\n    var mask8 int = 0x7FFFFFFD\n    var mask9 int = 0x80000003\n    var mask10 int = 0xFFFFFFF8\n    var mask11 int = 0x7FFFFFFB\n    var mask12 int = 0x80000007\n    var mask13 int = 0xFFFFFFF0\n    var mask14 int = 0x7FFFFFF7\n    var mask15 int = 0x8000000F\n    var mask16 int = 0xFFFFFFE0\n    var mask17 int = 0x7FFFFFFF\n    var mask18 int = 0x8000001F\n    var mask19 int = 0xFFFFFFC0\n    var mask20 int = 0x7FFFFFFF\n    var mask21 int = 0x8000003F\n    var mask22 int = 0xFFFFFF80\n    var mask23 int = 0x7FFFFFFF\n    var mask24 int = 0x8000007F\n    var mask25 int = 0xFFFFFF00\n    var mask26 int = 0x7FFFFFFF\n    var mask27 int = 0x800000FF\n    var mask28 int = 0xFFFFFE00\n    var mask29 int = 0x7FFFFFFF\n    var mask30 int = 0x800001FF\n    var mask31 int = 0xFFFFFC00\n    var mask32 int = 0x7FFFFFFF\n    var mask33 int = 0x800003FF\n    var mask34 int = 0xFFFFF800\n    var mask35 int = 0x7FFFFFFF\n    var mask36 int = 0x800007FF\n    var mask37 int = 0xFFFFF000\n    var mask38 int = 0x7FFFFFFF\n    var mask39 int = 0x80000FFF\n    var mask40 int = 0xFFFFE000\n    var mask41 int = 0x7FFFFFF\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122558,
      "stdout": "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n",
      "stderr": "# command-line-arguments\n/tmp/tmpmdwspe3b_test.go:51:6: expected '(', found TestToggle_Middle_Bits\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = (1 << (n - 1)) - 1\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122561,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpq5zcn869_test.go:31: expected '%!s(int=15)', got '%!s(int=246)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpq5zcn869_test.go:31: expected '%!s(int=12)', got '%!s(int=501)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpq5zcn869_test.go:31: expected '%!s(int=13)', got '%!s(int=1012)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpq5zcn869_test.go:31: expected '%!s(int=127)', got '%!s(int=-66)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpq5zcn869_test.go:31: expected '%!s(int=115)', got '%!s(int=-78)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFF\n    var mask2 int = 0x80000000\n    var mask3 int = 0x00000001\n    var mask4 int = 0xFFFFFFFE\n    var mask5 int = 0x7FFFFFFE\n    var mask6 int = 0xFFFFFFFC\n    var mask7 int = 0x7FFFFFFC\n    var mask8 int = 0xFFFFFFF8\n    var mask9 int = 0x7FFFFFF8\n    var mask10 int = 0xFFFFFFF0\n    var mask11 int = 0x7FFFFFF0\n    var mask12 int = 0xFFFFFFE0\n    var mask13 int = 0x7FFFFFE0\n    var mask14 int = 0xFFFFFFC0\n    var mask15 int = 0x7FFFFFC0\n    var mask16 int = 0xFFFFFF80\n    var mask17 int = 0x7FFFFF80\n    var mask18 int = 0xFFFFFF00\n    var mask19 int = 0x7FFFFF00\n    var mask20 int = 0xFFFFFE00\n    var mask21 int = 0x7FFFFE00\n    var mask22 int = 0xFFFFFC00\n    var mask23 int = 0x7FFFFC00\n    var mask24 int = 0xFFFFF800\n    var mask25 int = 0x7FFFF800\n    var mask26 int = 0xFFFFF000\n    var mask27 int = 0x7FFFF000\n    var mask28 int = 0xFFFFE000\n    var mask29 int = 0x7FFFE000\n    var mask30 int = 0xFFFFC000\n    var mask31 int = 0x7FFFC000\n    var mask32 int = 0xFFFF8000\n    var mask33 int = 0x7FFF8000\n    var mask34 int = 0xFFFF0000\n    var mask35 int = 0x7FFF0000\n    var mask36 int = 0xFFFE0000\n    var mask37 int = 0x7FFE0000\n    var mask38 int = 0xFFFC0000\n    var mask39 int = 0x7FFC0000\n    var mask40 int = 0xFFF80000\n    var mask41 int = 0x7FF80000\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122558,
      "stdout": "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n",
      "stderr": "# command-line-arguments\n/tmp/tmp6mehwu89_test.go:51:6: expected '(', found TestToggle_Middle_Bits\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFF\n    var mask2 int = 0x80000000\n    var mask3 int = 0x00000001\n    var mask4 int = 0xFFFFFFFE\n    var mask5 int = 0x7FFFFFFE\n    var mask6 int = 0x80000001\n    var mask7 int = 0x00000002\n    var mask8 int = 0xFFFFFFFC\n    var mask9 int = 0x7FFFFFFC\n    var mask10 int = 0x80000003\n    var mask11 int = 0x00000004\n    var mask12 int = 0xFFFFFFF8\n    var mask13 int = 0x7FFFFFF8\n    var mask14 int = 0x80000007\n    var mask15 int = 0x00000008\n    var mask16 int = 0xFFFFFFF0\n    var mask17 int = 0x7FFFFFF0\n    var mask18 int = 0x8000000F\n    var mask19 int = 0x00000010\n    var mask20 int = 0xFFFFFFE0\n    var mask21 int = 0x7FFFFFE0\n    var mask22 int = 0x8000001F\n    var mask23 int = 0x00000020\n    var mask24 int = 0xFFFFFFC0\n    var mask25 int = 0x7FFFFFC0\n    var mask26 int = 0x8000003F\n    var mask27 int = 0x00000040\n    var mask28 int = 0xFFFFFF80\n    var mask29 int = 0x7FFFFF80\n    var mask30 int = 0x8000007F\n    var mask31 int = 0x00000080\n    var mask32 int = 0xFFFFFF00\n    var mask33 int = 0x7FFFFF00\n    var mask34 int = 0x800000FF\n    var mask35 int = 0x00000100\n    var mask36 int = 0xFFFFFE00\n    var mask37 int = 0x7FFFFE00\n    var mask38 int = 0x800001FF\n    var mask39 int = 0x00000200\n    var mask40 int = 0xFFFFFC00\n    var mask41 int = 0x7FFFFC00\n    var mask42 int = 0x800003\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122555,
      "stdout": "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n",
      "stderr": "# command-line-arguments\n/tmp/tmpkebrnz8k_test.go:52:6: expected '(', found TestToggle_Middle_Bits\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // get the first and last bit\n    first_bit := n & 1\n    last_bit := n & (1 << uint(len(fmt.Sprintf(\"%b\", n)) - 1))\n\n    // get the middle bits\n    middle_bits := n & (^(1 << uint(len(fmt.Sprintf(\"%b\", n)) - 1)))\n    middle_bits = middle_bits & (^1)\n\n    // toggle the middle bits\n    middle_bits = middle_bits ^ (middle_bits >> 1)\n\n    // put the first and last bit back\n    middle_bits = middle_bits | first_bit\n    middle_bits = middle_bits | last_bit\n\n    return middle_bits\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122561,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpxhl22i4u_test.go:45: expected '%!s(int=15)', got '%!s(int=9)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpxhl22i4u_test.go:45: expected '%!s(int=12)', got '%!s(int=11)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpxhl22i4u_test.go:45: expected '%!s(int=13)', got '%!s(int=11)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpxhl22i4u_test.go:45: expected '%!s(int=127)', got '%!s(int=65)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpxhl22i4u_test.go:45: expected '%!s(int=115)', got '%!s(int=75)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0\n    for i := 1; i < 32; i++ {\n        mask = mask | (1 << i)\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509776,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpjmvmh8bf_test.go:34: expected '%!s(int=15)', got '%!s(int=4294967287)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpjmvmh8bf_test.go:34: expected '%!s(int=12)', got '%!s(int=4294967284)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpjmvmh8bf_test.go:34: expected '%!s(int=13)', got '%!s(int=4294967285)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpjmvmh8bf_test.go:34: expected '%!s(int=127)', got '%!s(int=4294967231)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpjmvmh8bf_test.go:34: expected '%!s(int=115)', got '%!s(int=4294967219)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // get the first and last bit\n    first_bit := n & 1\n    last_bit := n & (1 << uint(len(fmt.Sprintf(\"%b\", n)) - 1))\n    // clear the first and last bit\n    n = n & (^1)\n    n = n & (^(1 << uint(len(fmt.Sprintf(\"%b\", n)) - 1)))\n    // toggle the middle bits\n    n = n ^ (n >> 1)\n    // set the first and last bit\n    n = n | first_bit\n    n = n | last_bit\n    return n\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122556,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpa4t6inbm_test.go:41: expected '%!s(int=15)', got '%!s(int=9)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpa4t6inbm_test.go:41: expected '%!s(int=12)', got '%!s(int=11)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpa4t6inbm_test.go:41: expected '%!s(int=13)', got '%!s(int=11)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpa4t6inbm_test.go:41: expected '%!s(int=127)', got '%!s(int=65)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpa4t6inbm_test.go:41: expected '%!s(int=115)', got '%!s(int=75)'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    return ((n & 0xFFFFFFF8) << 1) | ((n & 0xFFFFFFF8) >> 1) | (n & 0x3)\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122561,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmps9k_b35f_test.go:30: expected '%!s(int=15)', got '%!s(int=21)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmps9k_b35f_test.go:30: expected '%!s(int=12)', got '%!s(int=22)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmps9k_b35f_test.go:30: expected '%!s(int=13)', got '%!s(int=23)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmps9k_b35f_test.go:30: expected '%!s(int=127)', got '%!s(int=161)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmps9k_b35f_test.go:30: expected '%!s(int=115)', got '%!s(int=181)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // TODO\n    return 0\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122561,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpdigvlj81_test.go:31: expected '%!s(int=15)', got '%!s(int=0)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpdigvlj81_test.go:31: expected '%!s(int=12)', got '%!s(int=0)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpdigvlj81_test.go:31: expected '%!s(int=13)', got '%!s(int=0)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpdigvlj81_test.go:31: expected '%!s(int=127)', got '%!s(int=0)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpdigvlj81_test.go:31: expected '%!s(int=115)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0b11\n    var result int = 0\n    for i := 0; i < 32; i++ {\n        if i == 0 || i == 31 {\n            result |= n & mask\n        } else {\n            result |= ^(n & mask)\n        }\n        mask <<= 1\n    }\n    return result\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122561,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmp7jlpb9d3_test.go:40: expected '%!s(int=15)', got '%!s(int=-1)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmp7jlpb9d3_test.go:40: expected '%!s(int=12)', got '%!s(int=-1)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmp7jlpb9d3_test.go:40: expected '%!s(int=13)', got '%!s(int=-1)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmp7jlpb9d3_test.go:40: expected '%!s(int=127)', got '%!s(int=-1)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmp7jlpb9d3_test.go:40: expected '%!s(int=115)', got '%!s(int=-1)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0b111\n    var result int = 0\n    for i := 0; i < 32; i++ {\n        if i == 0 || i == 31 {\n            result = result | (n & (1 << i))\n        } else {\n            result = result | ((n & (1 << i)) ^ (mask << i))\n        }\n    }\n    return result\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122561,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpsxzt4g9r_test.go:39: expected '%!s(int=15)', got '%!s(int=8589934591)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpsxzt4g9r_test.go:39: expected '%!s(int=12)', got '%!s(int=8589934588)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpsxzt4g9r_test.go:39: expected '%!s(int=13)', got '%!s(int=8589934589)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpsxzt4g9r_test.go:39: expected '%!s(int=127)', got '%!s(int=8589934591)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpsxzt4g9r_test.go:39: expected '%!s(int=115)', got '%!s(int=8589934591)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // get the first and last bit\n    first := n & 1\n    last := n & (1 << uint(len(fmt.Sprintf(\"%b\", n)) - 1))\n    // remove the first and last bit\n    n = n >> 1\n    n = n << 1\n    n = n >> 1\n    // toggle the middle bits\n    n = n ^ (n >> 1)\n    // add the first and last bit back\n    n = n | first\n    n = n | last\n    return n\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122561,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpd5v1l41n_test.go:42: expected '%!s(int=12)', got '%!s(int=15)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpd5v1l41n_test.go:42: expected '%!s(int=13)', got '%!s(int=15)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpd5v1l41n_test.go:42: expected '%!s(int=127)', got '%!s(int=113)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpd5v1l41n_test.go:42: expected '%!s(int=115)', got '%!s(int=117)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    return n ^ ((1 << uint(n)) - 1)\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122559,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpsp1o4u6n_test.go:30: expected '%!s(int=15)', got '%!s(int=502)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpsp1o4u6n_test.go:30: expected '%!s(int=12)', got '%!s(int=1013)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpsp1o4u6n_test.go:30: expected '%!s(int=13)', got '%!s(int=2036)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpsp1o4u6n_test.go:30: expected '%!s(int=127)', got '%!s(int=-66)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpsp1o4u6n_test.go:30: expected '%!s(int=115)', got '%!s(int=-78)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0b11111111111111111111111111111111\n    var mask_left int = 0b11111111111111111111111111111110\n    var mask_right int = 0b11111111111111111111111111111101\n    var mask_middle int = mask_left & mask_right\n    return n ^ mask_middle\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122561,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpip4sccrs_test.go:10:9: mask declared but not used\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFF\n    var mask2 int = 0x80000000\n    var mask3 int = 0x00000001\n    var mask4 int = 0xFFFFFFFE\n    var mask5 int = 0x7FFFFFFE\n    var mask6 int = 0x80000001\n    var mask7 int = 0x00000002\n    var mask8 int = 0xFFFFFFFC\n    var mask9 int = 0x7FFFFFFC\n    var mask10 int = 0x80000003\n    var mask11 int = 0x00000004\n    var mask12 int = 0xFFFFFFF8\n    var mask13 int = 0x7FFFFFF8\n    var mask14 int = 0x80000007\n    var mask15 int = 0x00000008\n    var mask16 int = 0xFFFFFFF0\n    var mask17 int = 0x7FFFFFF0\n    var mask18 int = 0x8000000F\n    var mask19 int = 0x00000010\n    var mask20 int = 0xFFFFFFE0\n    var mask21 int = 0x7FFFFFE0\n    var mask22 int = 0x8000001F\n    var mask23 int = 0x00000020\n    var mask24 int = 0xFFFFFFC0\n    var mask25 int = 0x7FFFFFC0\n    var mask26 int = 0x8000003F\n    var mask27 int = 0x00000040\n    var mask28 int = 0xFFFFFF80\n    var mask29 int = 0x7FFFFF80\n    var mask30 int = 0x8000007F\n    var mask31 int = 0x00000080\n    var mask32 int = 0xFFFFFF00\n    var mask33 int = 0x7FFFFF00\n    var mask34 int = 0x800000FF\n    var mask35 int = 0x00000100\n    var mask36 int = 0xFFFFFE00\n    var mask37 int = 0x7FFFFE00\n    var mask38 int = 0x800001FF\n    var mask39 int = 0x00000200\n    var mask40 int = 0xFFFFFC00\n    var mask41 int = 0x7FFFFC00\n    var mask42 int = 0x800003\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122555,
      "stdout": "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n",
      "stderr": "# command-line-arguments\n/tmp/tmpkebrnz8k_test.go:52:6: expected '(', found TestToggle_Middle_Bits\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0b11111111111111111111111111111110\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122556,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpvbj3gmfb_test.go:31: expected '%!s(int=15)', got '%!s(int=4294967287)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpvbj3gmfb_test.go:31: expected '%!s(int=12)', got '%!s(int=4294967284)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpvbj3gmfb_test.go:31: expected '%!s(int=13)', got '%!s(int=4294967285)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpvbj3gmfb_test.go:31: expected '%!s(int=127)', got '%!s(int=4294967231)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpvbj3gmfb_test.go:31: expected '%!s(int=115)', got '%!s(int=4294967219)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // get the first bit\n    first_bit := n & 1\n    // get the last bit\n    last_bit := n & (1 << uint(len(fmt.Sprintf(\"%b\", n)) - 1))\n    // get the middle bits\n    middle_bits := n & (^(1 << uint(len(fmt.Sprintf(\"%b\", n)) - 1))) & (^1)\n    // toggle the middle bits\n    middle_bits = middle_bits ^ middle_bits\n    // return the number\n    return first_bit | middle_bits | last_bit\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122561,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpqar5mjl1_test.go:39: expected '%!s(int=15)', got '%!s(int=9)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpqar5mjl1_test.go:39: expected '%!s(int=12)', got '%!s(int=8)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpqar5mjl1_test.go:39: expected '%!s(int=13)', got '%!s(int=9)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpqar5mjl1_test.go:39: expected '%!s(int=127)', got '%!s(int=65)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpqar5mjl1_test.go:39: expected '%!s(int=115)', got '%!s(int=65)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // Get the number of bits in the number\n    num_bits := 0\n    for n > 0 {\n        n = n >> 1\n        num_bits++\n    }\n\n    // Toggle all the bits except the first and last\n    for i := 1; i < num_bits - 1; i++ {\n        n = n ^ (1 << i)\n    }\n\n    return n\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122561,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmp8yrgbnkd_test.go:42: expected '%!s(int=15)', got '%!s(int=6)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmp8yrgbnkd_test.go:42: expected '%!s(int=12)', got '%!s(int=6)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmp8yrgbnkd_test.go:42: expected '%!s(int=13)', got '%!s(int=6)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmp8yrgbnkd_test.go:42: expected '%!s(int=127)', got '%!s(int=62)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmp8yrgbnkd_test.go:42: expected '%!s(int=115)', got '%!s(int=62)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFF\n    var mask2 int = 0x80000000\n    var mask3 int = 0x00000001\n    var mask4 int = 0xFFFFFFFE\n    var mask5 int = 0xFFFFFFFE\n    var mask6 int = 0xFFFFFFFE\n    var mask7 int = 0xFFFFFFFE\n    var mask8 int = 0xFFFFFFFE\n    var mask9 int = 0xFFFFFFFE\n    var mask10 int = 0xFFFFFFFE\n    var mask11 int = 0xFFFFFFFE\n    var mask12 int = 0xFFFFFFFE\n    var mask13 int = 0xFFFFFFFE\n    var mask14 int = 0xFFFFFFFE\n    var mask15 int = 0xFFFFFFFE\n    var mask16 int = 0xFFFFFFFE\n    var mask17 int = 0xFFFFFFFE\n    var mask18 int = 0xFFFFFFFE\n    var mask19 int = 0xFFFFFFFE\n    var mask20 int = 0xFFFFFFFE\n    var mask21 int = 0xFFFFFFFE\n    var mask22 int = 0xFFFFFFFE\n    var mask23 int = 0xFFFFFFFE\n    var mask24 int = 0xFFFFFFFE\n    var mask25 int = 0xFFFFFFFE\n    var mask26 int = 0xFFFFFFFE\n    var mask27 int = 0xFFFFFFFE\n    var mask28 int = 0xFFFFFFFE\n    var mask29 int = 0xFFFFFFFE\n    var mask30 int = 0xFFFFFFFE\n    var mask31 int = 0xFFFFFFFE\n    var mask32 int = 0xFFFFFFFE\n    var mask33 int = 0xFFFFFFFE\n    var mask34 int = 0xFFFFFFFE\n    var mask35 int = 0xFFFFFFFE\n    var mask36 int = 0xFFFFFFFE\n    var mask37 int = 0xFFFFFFFE\n    var mask38 int = 0xFFFFFFFE\n    var mask39 int = 0xFFFFFFFE\n    var mask40 int = 0xFFFFFFFE\n    var mask41 int = 0xFFFFFFFE\n    var mask42 int = 0xFFFFFFFE\n    var mask43 int = 0xFFFF\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122560,
      "stdout": "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n",
      "stderr": "# command-line-arguments\n/tmp/tmpx4jt020t_test.go:53:6: expected '(', found TestToggle_Middle_Bits\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // mask = 0b11111110\n    mask := 0b11111110\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122561,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpxxxbimzw_test.go:32: expected '%!s(int=15)', got '%!s(int=247)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpxxxbimzw_test.go:32: expected '%!s(int=12)', got '%!s(int=244)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpxxxbimzw_test.go:32: expected '%!s(int=13)', got '%!s(int=245)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpxxxbimzw_test.go:32: expected '%!s(int=127)', got '%!s(int=191)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpxxxbimzw_test.go:32: expected '%!s(int=115)', got '%!s(int=179)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // mask = 0b11111111111111111111111111111100\n    mask := 0xFFFFFFFC\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509776,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpzj2nrku4_test.go:32: expected '%!s(int=15)', got '%!s(int=4294967285)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpzj2nrku4_test.go:32: expected '%!s(int=12)', got '%!s(int=4294967286)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpzj2nrku4_test.go:32: expected '%!s(int=13)', got '%!s(int=4294967287)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpzj2nrku4_test.go:32: expected '%!s(int=127)', got '%!s(int=4294967229)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpzj2nrku4_test.go:32: expected '%!s(int=115)', got '%!s(int=4294967217)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // get the first bit\n    first_bit := n & 1\n    // get the last bit\n    last_bit := n & (1 << uint(len(fmt.Sprintf(\"%b\", n)) - 1))\n    // get the middle bits\n    middle_bits := n & (^(1 << uint(len(fmt.Sprintf(\"%b\", n)) - 1)))\n    // toggle the middle bits\n    middle_bits = middle_bits ^ (middle_bits >> 1)\n    // put the first and last bit back\n    middle_bits = middle_bits | (first_bit << uint(len(fmt.Sprintf(\"%b\", n)) - 1))\n    middle_bits = middle_bits | last_bit\n    return middle_bits\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122561,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpsyhszwjj_test.go:41: expected '%!s(int=15)', got '%!s(int=9)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpsyhszwjj_test.go:41: expected '%!s(int=12)', got '%!s(int=11)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpsyhszwjj_test.go:41: expected '%!s(int=13)', got '%!s(int=10)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpsyhszwjj_test.go:41: expected '%!s(int=127)', got '%!s(int=65)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpsyhszwjj_test.go:41: expected '%!s(int=115)', got '%!s(int=75)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0b11\n    var result int = 0\n    for i := 0; i < 32; i++ {\n        if i == 0 || i == 31 {\n            result |= (n & (1 << i))\n        } else {\n            result |= (n & (1 << i)) ^ (1 << i)\n        }\n    }\n    return result\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122561,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpp_8n_jq2_test.go:10:9: mask declared but not used\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFF\n    var mask2 int = 0x80000000\n    var mask3 int = 0x00000001\n    var mask4 int = 0xFFFFFFFE\n    var mask5 int = 0xFFFFFFFE\n    var mask6 int = 0xFFFFFFFE\n    var mask7 int = 0xFFFFFFFE\n    var mask8 int = 0xFFFFFFFE\n    var mask9 int = 0xFFFFFFFE\n    var mask10 int = 0xFFFFFFFE\n    var mask11 int = 0xFFFFFFFE\n    var mask12 int = 0xFFFFFFFE\n    var mask13 int = 0xFFFFFFFE\n    var mask14 int = 0xFFFFFFFE\n    var mask15 int = 0xFFFFFFFE\n    var mask16 int = 0xFFFFFFFE\n    var mask17 int = 0xFFFFFFFE\n    var mask18 int = 0xFFFFFFFE\n    var mask19 int = 0xFFFFFFFE\n    var mask20 int = 0xFFFFFFFE\n    var mask21 int = 0xFFFFFFFE\n    var mask22 int = 0xFFFFFFFE\n    var mask23 int = 0xFFFFFFFE\n    var mask24 int = 0xFFFFFFFE\n    var mask25 int = 0xFFFFFFFE\n    var mask26 int = 0xFFFFFFFE\n    var mask27 int = 0xFFFFFFFE\n    var mask28 int = 0xFFFFFFFE\n    var mask29 int = 0xFFFFFFFE\n    var mask30 int = 0xFFFFFFFE\n    var mask31 int = 0xFFFFFFFE\n    var mask32 int = 0xFFFFFFFE\n    var mask33 int = 0xFFFFFFFE\n    var mask34 int = 0xFFFFFFFE\n    var mask35 int = 0xFFFFFFFE\n    var mask36 int = 0xFFFFFFFE\n    var mask37 int = 0xFFFFFFFE\n    var mask38 int = 0xFFFFFFFE\n    var mask39 int = 0xFFFFFFFE\n    var mask40 int = 0xFFFFFFFE\n    var mask41 int = 0xFFFFFFFE\n    var mask42 int = 0xFFFFFFFE\n    var mask43 int = 0xFFFF\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122560,
      "stdout": "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n",
      "stderr": "# command-line-arguments\n/tmp/tmpx4jt020t_test.go:53:6: expected '(', found TestToggle_Middle_Bits\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // get the first and last bit\n    first_bit := n & 1\n    last_bit := n & (1 << uint(len(fmt.Sprintf(\"%b\", n)) - 1))\n    // remove the first and last bit\n    n = n & (^1)\n    n = n & (^(1 << uint(len(fmt.Sprintf(\"%b\", n)) - 1)))\n    // toggle the bits\n    n = n ^ (n >> 1)\n    // add the first and last bit back\n    n = n | first_bit\n    n = n | last_bit\n    return n\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122561,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmptl_w8hck_test.go:41: expected '%!s(int=15)', got '%!s(int=9)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmptl_w8hck_test.go:41: expected '%!s(int=12)', got '%!s(int=11)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmptl_w8hck_test.go:41: expected '%!s(int=13)', got '%!s(int=11)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmptl_w8hck_test.go:41: expected '%!s(int=127)', got '%!s(int=65)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmptl_w8hck_test.go:41: expected '%!s(int=115)', got '%!s(int=75)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0\n    for i := 1; i < 32; i++ {\n        mask = mask | (1 << i)\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509776,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpjmvmh8bf_test.go:34: expected '%!s(int=15)', got '%!s(int=4294967287)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpjmvmh8bf_test.go:34: expected '%!s(int=12)', got '%!s(int=4294967284)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpjmvmh8bf_test.go:34: expected '%!s(int=13)', got '%!s(int=4294967285)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpjmvmh8bf_test.go:34: expected '%!s(int=127)', got '%!s(int=4294967231)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpjmvmh8bf_test.go:34: expected '%!s(int=115)', got '%!s(int=4294967219)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // Get the first bit\n    first := n & 1\n    // Get the last bit\n    last := n & (1 << uint(len(fmt.Sprintf(\"%b\", n)) - 1))\n    // Get the middle bits\n    middle := n & (^(1 << uint(len(fmt.Sprintf(\"%b\", n)) - 1))) & (^1)\n    // Toggle the middle bits\n    middle = middle ^ middle\n    // Put the bits together\n    return first | middle | last\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122561,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmppcilgg_e_test.go:39: expected '%!s(int=15)', got '%!s(int=9)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmppcilgg_e_test.go:39: expected '%!s(int=12)', got '%!s(int=8)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmppcilgg_e_test.go:39: expected '%!s(int=13)', got '%!s(int=9)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmppcilgg_e_test.go:39: expected '%!s(int=127)', got '%!s(int=65)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmppcilgg_e_test.go:39: expected '%!s(int=115)', got '%!s(int=65)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // mask = 0b11111111111111111111111111111100\n    mask := 0xFFFFFFFC\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509776,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpzj2nrku4_test.go:32: expected '%!s(int=15)', got '%!s(int=4294967285)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpzj2nrku4_test.go:32: expected '%!s(int=12)', got '%!s(int=4294967286)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpzj2nrku4_test.go:32: expected '%!s(int=13)', got '%!s(int=4294967287)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpzj2nrku4_test.go:32: expected '%!s(int=127)', got '%!s(int=4294967229)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpzj2nrku4_test.go:32: expected '%!s(int=115)', got '%!s(int=4294967217)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0\n    var i int = 1\n    for i < 31 {\n        mask = mask | (1 << i)\n        i += 2\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122562,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmp73kr4fu3_test.go:36: expected '%!s(int=15)', got '%!s(int=715827875)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmp73kr4fu3_test.go:36: expected '%!s(int=12)', got '%!s(int=715827872)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmp73kr4fu3_test.go:36: expected '%!s(int=13)', got '%!s(int=715827873)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmp73kr4fu3_test.go:36: expected '%!s(int=127)', got '%!s(int=715827947)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmp73kr4fu3_test.go:36: expected '%!s(int=115)', got '%!s(int=715827943)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = (1 << (n - 1)) - 1\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122561,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpq5zcn869_test.go:31: expected '%!s(int=15)', got '%!s(int=246)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpq5zcn869_test.go:31: expected '%!s(int=12)', got '%!s(int=501)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpq5zcn869_test.go:31: expected '%!s(int=13)', got '%!s(int=1012)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpq5zcn869_test.go:31: expected '%!s(int=127)', got '%!s(int=-66)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpq5zcn869_test.go:31: expected '%!s(int=115)', got '%!s(int=-78)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // mask = 0b111111100\n    mask := 0x7E\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122562,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmple9quyj2_test.go:32: expected '%!s(int=15)', got '%!s(int=119)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmple9quyj2_test.go:32: expected '%!s(int=12)', got '%!s(int=116)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmple9quyj2_test.go:32: expected '%!s(int=13)', got '%!s(int=117)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmple9quyj2_test.go:32: expected '%!s(int=127)', got '%!s(int=63)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmple9quyj2_test.go:32: expected '%!s(int=115)', got '%!s(int=51)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFF\n    var mask2 int = 0x80000000\n    var mask3 int = 0x00000001\n    var mask4 int = 0xFFFFFFFE\n    var mask5 int = 0x7FFFFFFE\n    var mask6 int = 0x80000001\n    var mask7 int = 0x00000002\n    var mask8 int = 0xFFFFFFFC\n    var mask9 int = 0x7FFFFFFC\n    var mask10 int = 0x80000003\n    var mask11 int = 0x00000004\n    var mask12 int = 0xFFFFFFF8\n    var mask13 int = 0x7FFFFFF8\n    var mask14 int = 0x80000007\n    var mask15 int = 0x00000008\n    var mask16 int = 0xFFFFFFF0\n    var mask17 int = 0x7FFFFFF0\n    var mask18 int = 0x8000000F\n    var mask19 int = 0x00000010\n    var mask20 int = 0xFFFFFFE0\n    var mask21 int = 0x7FFFFFE0\n    var mask22 int = 0x8000001F\n    var mask23 int = 0x00000020\n    var mask24 int = 0xFFFFFFC0\n    var mask25 int = 0x7FFFFFC0\n    var mask26 int = 0x8000003F\n    var mask27 int = 0x00000040\n    var mask28 int = 0xFFFFFF80\n    var mask29 int = 0x7FFFFF80\n    var mask30 int = 0x8000007F\n    var mask31 int = 0x00000080\n    var mask32 int = 0xFFFFFF00\n    var mask33 int = 0x7FFFFF00\n    var mask34 int = 0x800000FF\n    var mask35 int = 0x00000100\n    var mask36 int = 0xFFFFFE00\n    var mask37 int = 0x7FFFFE00\n    var mask38 int = 0x800001FF\n    var mask39 int = 0x00000200\n    var mask40 int = 0xFFFFFC00\n    var mask41 int = 0x7FFFFC00\n    var mask42 int = 0x800003\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122555,
      "stdout": "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n",
      "stderr": "# command-line-arguments\n/tmp/tmpkebrnz8k_test.go:52:6: expected '(', found TestToggle_Middle_Bits\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7ffffffe\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509776,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpqyqe3n0h_test.go:31: expected '%!s(int=15)', got '%!s(int=2147483639)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpqyqe3n0h_test.go:31: expected '%!s(int=12)', got '%!s(int=2147483636)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpqyqe3n0h_test.go:31: expected '%!s(int=13)', got '%!s(int=2147483637)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpqyqe3n0h_test.go:31: expected '%!s(int=127)', got '%!s(int=2147483583)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpqyqe3n0h_test.go:31: expected '%!s(int=115)', got '%!s(int=2147483571)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    return n ^ ((1 << uint(n - 1)) - 1)\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122562,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpuid211ry_test.go:30: expected '%!s(int=15)', got '%!s(int=246)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpuid211ry_test.go:30: expected '%!s(int=12)', got '%!s(int=501)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpuid211ry_test.go:30: expected '%!s(int=13)', got '%!s(int=1012)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpuid211ry_test.go:30: expected '%!s(int=127)', got '%!s(int=-66)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpuid211ry_test.go:30: expected '%!s(int=115)', got '%!s(int=-78)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0b11111111111111111111111111111110\n    var result int = n ^ mask\n    return result\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122562,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmp22h113k__test.go:32: expected '%!s(int=15)', got '%!s(int=4294967287)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmp22h113k__test.go:32: expected '%!s(int=12)', got '%!s(int=4294967284)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmp22h113k__test.go:32: expected '%!s(int=13)', got '%!s(int=4294967285)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmp22h113k__test.go:32: expected '%!s(int=127)', got '%!s(int=4294967231)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmp22h113k__test.go:32: expected '%!s(int=115)', got '%!s(int=4294967219)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // Get the number of bits in the number\n    n_bits := 0\n    for n > 0 {\n        n = n >> 1\n        n_bits += 1\n    }\n\n    // Create a mask with all bits set except the first and last\n    mask := 0\n    for i := 1; i < n_bits - 1; i++ {\n        mask = mask | (1 << i)\n    }\n\n    // Toggle the bits\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122562,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpiyts_ktw_test.go:44: expected '%!s(int=15)', got '%!s(int=6)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpiyts_ktw_test.go:44: expected '%!s(int=12)', got '%!s(int=6)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpiyts_ktw_test.go:44: expected '%!s(int=13)', got '%!s(int=6)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpiyts_ktw_test.go:44: expected '%!s(int=127)', got '%!s(int=62)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpiyts_ktw_test.go:44: expected '%!s(int=115)', got '%!s(int=62)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // get the first and last bit\n    first_bit := n & 1\n    last_bit := n & (1 << uint(len(fmt.Sprintf(\"%b\", n)) - 1))\n    // set all bits to 1\n    all_ones := (1 << uint(len(fmt.Sprintf(\"%b\", n)))) - 1\n    // set all bits to 0 except the first and last bit\n    all_zeros_except_first_and_last := all_ones ^ (first_bit | last_bit)\n    // toggle all bits except the first and last bit\n    return n ^ all_zeros_except_first_and_last\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122562,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmppnqrjmgy_test.go:38: expected '%!s(int=12)', got '%!s(int=13)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // 1. Get the number of bits in the number\n    // 2. Get the number of bits to toggle\n    // 3. Get the mask\n    // 4. Toggle the bits\n    // 5. Return the number\n\n    // 1. Get the number of bits in the number\n    num_bits := 0\n    for n > 0 {\n        n = n >> 1\n        num_bits++\n    }\n\n    // 2. Get the number of bits to toggle\n    num_bits_to_toggle := num_bits - 2\n\n    // 3. Get the mask\n    mask := 0\n    for i := 0; i < num_bits_to_toggle; i++ {\n        mask = mask << 1\n        mask = mask | 1\n    }\n\n    // 4. Toggle the bits\n    n = n ^ mask\n\n    // 5. Return the number\n    return n\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122562,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpoteuuggf_test.go:57: expected '%!s(int=15)', got '%!s(int=3)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpoteuuggf_test.go:57: expected '%!s(int=12)', got '%!s(int=3)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpoteuuggf_test.go:57: expected '%!s(int=13)', got '%!s(int=3)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpoteuuggf_test.go:57: expected '%!s(int=127)', got '%!s(int=31)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpoteuuggf_test.go:57: expected '%!s(int=115)', got '%!s(int=31)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0b11\n    var result int = 0\n    for i := 0; i < 32; i++ {\n        if i == 0 || i == 31 {\n            result |= (n & mask) << i\n        } else {\n            result |= (^n & mask) << i\n        }\n        mask <<= 1\n    }\n    return result\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122562,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpc_xuxcd6_test.go:40: expected '%!s(int=15)', got '%!s(int=4611686018427387805)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpc_xuxcd6_test.go:40: expected '%!s(int=12)', got '%!s(int=4611686018427387802)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpc_xuxcd6_test.go:40: expected '%!s(int=13)', got '%!s(int=4611686018427387803)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpc_xuxcd6_test.go:40: expected '%!s(int=127)', got '%!s(int=4611686018427381757)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpc_xuxcd6_test.go:40: expected '%!s(int=115)', got '%!s(int=4611686018427381637)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFF\n    var mask2 int = 0x80000000\n    var mask3 int = 0x00000001\n    var mask4 int = 0xFFFFFFFE\n    var mask5 int = 0x7FFFFFFE\n    var mask6 int = 0x80000001\n    var mask7 int = 0x00000002\n    var mask8 int = 0xFFFFFFFC\n    return ((n & mask) ^ mask2) | ((n & mask3) ^ mask4) | ((n & mask5) ^ mask6) | ((n & mask7) ^ mask8)\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122563,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmp3jhk4__d_test.go:38: expected '%!s(int=15)', got '%!s(int=4294967295)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmp3jhk4__d_test.go:38: expected '%!s(int=12)', got '%!s(int=4294967295)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmp3jhk4__d_test.go:38: expected '%!s(int=13)', got '%!s(int=4294967295)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmp3jhk4__d_test.go:38: expected '%!s(int=127)', got '%!s(int=4294967295)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmp3jhk4__d_test.go:38: expected '%!s(int=115)', got '%!s(int=4294967295)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFF\n    var mask2 int = 0x80000000\n    var mask3 int = 0x00000001\n    var mask4 int = 0xFFFFFFFE\n    var mask5 int = 0x7FFFFFFE\n    var mask6 int = 0x80000001\n    var mask7 int = 0xFFFFFFFC\n    var mask8 int = 0x7FFFFFFD\n    var mask9 int = 0x80000003\n    var mask10 int = 0xFFFFFFF8\n    var mask11 int = 0x7FFFFFFB\n    var mask12 int = 0x80000007\n    var mask13 int = 0xFFFFFFF0\n    var mask14 int = 0x7FFFFFF7\n    var mask15 int = 0x8000000F\n    var mask16 int = 0xFFFFFFE0\n    var mask17 int = 0x7FFFFFFF\n    var mask18 int = 0x8000001F\n    var mask19 int = 0xFFFFFFC0\n    var mask20 int = 0x7FFFFFFF\n    var mask21 int = 0x8000003F\n    var mask22 int = 0xFFFFFF80\n    var mask23 int = 0x7FFFFFFF\n    var mask24 int = 0x8000007F\n    var mask25 int = 0xFFFFFF00\n    var mask26 int = 0x7FFFFFEF\n    var mask27 int = 0x80000FFF\n    var mask28 int = 0xFFFFFE00\n    var mask29 int = 0x7FFFFFDF\n    var mask30 int = 0x800001FF\n    var mask31 int = 0xFFFFFC00\n    var mask32 int = 0x7FFFFFBF\n    var mask33 int = 0x800003FF\n    var mask34 int = 0xFFFFF800\n    var mask35 int = 0x7FFFFF7F\n    var mask36 int = 0x800007FF\n    var mask37 int = 0xFFFFF000\n    var mask38 int = 0x7FFFFEFF\n    var mask39 int = 0x80000FFF\n    var mask40 int = 0xFFFFE000\n    var mask41 int = 0x7FFFF\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122562,
      "stdout": "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n",
      "stderr": "# command-line-arguments\n/tmp/tmpz6r57w5u_test.go:51:6: expected '(', found TestToggle_Middle_Bits\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFF\n    var mask2 int = 0x80000000\n    var mask3 int = 0x00000001\n    var mask4 int = 0xFFFFFFFE\n    var mask5 int = 0xFFFFFFFC\n    var mask6 int = 0x00000002\n    var mask7 int = 0xFFFFFFFB\n    var mask8 int = 0xFFFFFFF7\n    var mask9 int = 0x00000004\n    var mask10 int = 0xFFFFFFF3\n    var mask11 int = 0xFFFFFFE7\n    var mask12 int = 0x00000008\n    var mask13 int = 0xFFFFFFD7\n    var mask14 int = 0xFFFFFFAF\n    var mask15 int = 0x00000010\n    var mask16 int = 0xFFFFFF6F\n    var mask17 int = 0xFFFFFEFF\n    var mask18 int = 0x00000020\n    var mask19 int = 0xFFFFFDFF\n    var mask20 int = 0xFFFFFBFF\n    var mask21 int = 0x00000040\n    var mask22 int = 0xFFFFF7FF\n    var mask23 int = 0xFFFFEFFF\n    var mask24 int = 0x00000080\n    var mask25 int = 0xFFFFDFFF\n    var mask26 int = 0xFFFFBFFF\n    var mask27 int = 0x00000100\n    var mask28 int = 0xFFFF7FFF\n    var mask29 int = 0xFFFEFFFF\n    var mask30 int = 0x00000200\n    var mask31 int = 0xFFFDFFFF\n    var mask32 int = 0xFFFBFFFF\n    var mask33 int = 0x00000400\n    var mask34 int = 0xFFF7FFFF\n    var mask35 int = 0xFFEFFFFF\n    var mask36 int = 0x00000800\n    var mask37 int = 0xFFDFFFFF\n    var mask38 int = 0xFFBFFFFF\n    var mask39 int = 0x00001000\n    var mask40 int = 0xFF7FFFFF\n    var mask41 int = 0xFEFFFFFF\n    var mask42 int = 0x00002000\n    var mask43 int = 0x\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122558,
      "stdout": "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n",
      "stderr": "# command-line-arguments\n/tmp/tmpj7ecfdzs_test.go:52:24: hexadecimal literal has no digits\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // Get the number of bits in the number\n    num_bits := 0\n    for n > 0 {\n        n = n >> 1\n        num_bits++\n    }\n\n    // Get the mask for the first and last bits\n    mask := (1 << uint(num_bits - 1)) | 1\n\n    // Toggle the bits in the number\n    n = n ^ (mask << 1)\n\n    return n\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122563,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmplauczjo__test.go:43: expected '%!s(int=15)', got '%!s(int=18)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmplauczjo__test.go:43: expected '%!s(int=12)', got '%!s(int=18)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmplauczjo__test.go:43: expected '%!s(int=13)', got '%!s(int=18)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmplauczjo__test.go:43: expected '%!s(int=127)', got '%!s(int=130)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmplauczjo__test.go:43: expected '%!s(int=115)', got '%!s(int=130)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // mask = 0b111000111\n    mask := 0b111000111\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122563,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmp5xvpsfw1_test.go:32: expected '%!s(int=15)', got '%!s(int=462)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmp5xvpsfw1_test.go:32: expected '%!s(int=12)', got '%!s(int=461)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmp5xvpsfw1_test.go:32: expected '%!s(int=13)', got '%!s(int=460)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmp5xvpsfw1_test.go:32: expected '%!s(int=127)', got '%!s(int=390)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmp5xvpsfw1_test.go:32: expected '%!s(int=115)', got '%!s(int=394)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFF\n    var mask2 int = 0x80000000\n    var mask3 int = 0x00000001\n    var mask4 int = 0xFFFFFFFE\n    var mask5 int = 0x7FFFFFFE\n    var mask6 int = 0x80000001\n    var mask7 int = 0xFFFFFFFC\n    var mask8 int = 0x7FFFFFFD\n    var mask9 int = 0x80000003\n    var mask10 int = 0xFFFFFFF8\n    var mask11 int = 0x7FFFFFFB\n    var mask12 int = 0x80000007\n    var mask13 int = 0xFFFFFFF0\n    var mask14 int = 0x7FFFFFF7\n    var mask15 int = 0x8000000F\n    var mask16 int = 0xFFFFFFE0\n    var mask17 int = 0x7FFFFFFF\n    var mask18 int = 0x8000001F\n    var mask19 int = 0xFFFFFFC0\n    var mask20 int = 0x7FFFFFFF\n    var mask21 int = 0x8000003F\n    var mask22 int = 0xFFFFFF80\n    var mask23 int = 0x7FFFFFFF\n    var mask24 int = 0x8000007F\n    var mask25 int = 0xFFFFFF00\n    var mask26 int = 0x7FFFFFFF\n    var mask27 int = 0x800000FF\n    var mask28 int = 0xFFFFFE00\n    var mask29 int = 0x7FFFFFFF\n    var mask30 int = 0x800001FF\n    var mask31 int = 0xFFFFFC00\n    var mask32 int = 0x7FFFFFFF\n    var mask33 int = 0x800003FF\n    var mask34 int = 0xFFFFF800\n    var mask35 int = 0x7FFFFFFF\n    var mask36 int = 0x800007FF\n    var mask37 int = 0xFFFFF000\n    var mask38 int = 0x7FFFFFFF\n    var mask39 int = 0x80000FFF\n    var mask40 int = 0xFFFFE000\n    var mask41 int = 0x7FFFFFF\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122558,
      "stdout": "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n",
      "stderr": "# command-line-arguments\n/tmp/tmpmdwspe3b_test.go:51:6: expected '(', found TestToggle_Middle_Bits\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFF\n    var mask2 int = 0x80000000\n    var mask3 int = 0x00000001\n    var mask4 int = 0xFFFFFFFE\n    var mask5 int = 0x7FFFFFFE\n    var mask6 int = 0x80000001\n    var mask7 int = 0xFFFFFFFC\n    var mask8 int = 0x7FFFFFFC\n    var mask9 int = 0x80000003\n    var mask10 int = 0xFFFFFFF8\n    var mask11 int = 0x7FFFFFF8\n    var mask12 int = 0x80000007\n    var mask13 int = 0xFFFFFFF0\n    var mask14 int = 0x7FFFFFF0\n    var mask15 int = 0x8000000F\n    var mask16 int = 0xFFFFFFE0\n    var mask17 int = 0x7FFFFFE0\n    var mask18 int = 0x8000001F\n    var mask19 int = 0xFFFFFFC0\n    var mask20 int = 0x7FFFFC0\n    var mask21 int = 0x8000003F\n    var mask22 int = 0xFFFFFF80\n    var mask23 int = 0x7FFFFC0\n    var mask24 int = 0x8000007F\n    var mask25 int = 0xFFFFFF00\n    var mask26 int = 0x7FFFFC0\n    var mask27 int = 0x800000FF\n    var mask28 int = 0xFFFFFE00\n    var mask29 int = 0x7FFFE00\n    var mask30 int = 0x800001FF\n    var mask31 int = 0xFFFFC00\n    var mask32 int = 0x7FFC00\n    var mask33 int = 0x800003FF\n    var mask34 int = 0xFFFF800\n    var mask35 int = 0x7FFC00\n    var mask36 int = 0x800007FF\n    var mask37 int = 0xFFFF000\n    var mask38 int = 0x7FFC00\n    var mask39 int = 0x80000FFF\n    var mask40 int = 0xFFFE000\n    var mask41 int = 0x7\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122562,
      "stdout": "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n",
      "stderr": "# command-line-arguments\n/tmp/tmpcaat9d99_test.go:51:6: expected '(', found TestToggle_Middle_Bits\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0b11\n    var result int = 0\n    for i := 0; i < 32; i++ {\n        if i == 0 || i == 31 {\n            result |= (n & (1 << i))\n        } else {\n            result |= ((n & (1 << i)) ^ (1 << i))\n        }\n    }\n    return result\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122563,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpqu2tqo4s_test.go:10:9: mask declared but not used\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask = 0b11111111111111111111111111111111\n    var mask_left = 0b11111111111111111111111111111110\n    var mask_right = 0b11111111111111111111111111111101\n    var mask_middle = mask_left & mask_right\n    return n ^ mask_middle\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122563,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpmbnunsm2_test.go:10:9: mask declared but not used\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0\n    var i int = 0\n    for i = 1; i < 32; i++ {\n        mask = mask | (1 << i)\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122556,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpverfxwzy_test.go:35: expected '%!s(int=15)', got '%!s(int=4294967287)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpverfxwzy_test.go:35: expected '%!s(int=12)', got '%!s(int=4294967284)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpverfxwzy_test.go:35: expected '%!s(int=13)', got '%!s(int=4294967285)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpverfxwzy_test.go:35: expected '%!s(int=127)', got '%!s(int=4294967231)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpverfxwzy_test.go:35: expected '%!s(int=115)', got '%!s(int=4294967219)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = (1 << (n - 2)) - 1\n    return (n ^ mask)\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122563,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpss0w6oeg_test.go:31: expected '%!s(int=15)', got '%!s(int=118)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpss0w6oeg_test.go:31: expected '%!s(int=12)', got '%!s(int=245)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpss0w6oeg_test.go:31: expected '%!s(int=13)', got '%!s(int=500)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpss0w6oeg_test.go:31: expected '%!s(int=127)', got '%!s(int=9223372036854775742)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpss0w6oeg_test.go:31: expected '%!s(int=115)', got '%!s(int=-78)'\nFAIL\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // mask = 0b11...11100\n    mask := 1\n    for i := 0; i < 32; i++ {\n        mask = mask << 1\n    }\n    mask = mask - 1\n    mask = mask ^ 0b11\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122563,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpewjp0n7c_test.go:37: expected '%!s(int=15)', got '%!s(int=4294967285)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpewjp0n7c_test.go:37: expected '%!s(int=12)', got '%!s(int=4294967286)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpewjp0n7c_test.go:37: expected '%!s(int=13)', got '%!s(int=4294967287)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpewjp0n7c_test.go:37: expected '%!s(int=127)', got '%!s(int=4294967229)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpewjp0n7c_test.go:37: expected '%!s(int=115)', got '%!s(int=4294967217)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0b11111111111111111111111111111110\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122556,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpvbj3gmfb_test.go:31: expected '%!s(int=15)', got '%!s(int=4294967287)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpvbj3gmfb_test.go:31: expected '%!s(int=12)', got '%!s(int=4294967284)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpvbj3gmfb_test.go:31: expected '%!s(int=13)', got '%!s(int=4294967285)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpvbj3gmfb_test.go:31: expected '%!s(int=127)', got '%!s(int=4294967231)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpvbj3gmfb_test.go:31: expected '%!s(int=115)', got '%!s(int=4294967219)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask = 0x7FFFFFFF\n    var mask2 = 0x80000000\n    var mask3 = 0x00000001\n    var mask4 = 0xFFFFFFFE\n    var mask5 = 0x7FFFFFFE\n    var mask6 = 0x80000001\n    var mask7 = 0x00000002\n    var mask8 = 0xFFFFFFFC\n    var mask9 = 0x7FFFFFFC\n    var mask10 = 0x80000003\n    var mask11 = 0x00000004\n    var mask12 = 0xFFFFFFF8\n    var mask13 = 0x7FFFFFF8\n    var mask14 = 0x80000007\n    var mask15 = 0x00000008\n    var mask16 = 0xFFFFFFF0\n    var mask17 = 0x7FFFFFF0\n    var mask18 = 0x8000000F\n    var mask19 = 0x00000010\n    var mask20 = 0xFFFFFFE0\n    var mask21 = 0x7FFFFFE0\n    var mask22 = 0x8000001F\n    var mask23 = 0x00000020\n    var mask24 = 0xFFFFFFC0\n    var mask25 = 0x7FFFFFC0\n    var mask26 = 0x8000003F\n    var mask27 = 0x00000040\n    var mask28 = 0xFFFFFF80\n    var mask29 = 0x7FFFFF80\n    var mask30 = 0x8000007F\n    var mask31 = 0x00000080\n    var mask32 = 0xFFFFFF00\n    var mask33 = 0x7FFFFF00\n    var mask34 = 0x800000FF\n    var mask35 = 0x00000100\n    var mask36 = 0xFFFFFE00\n    var mask37 = 0x7FFFFE00\n    var mask38 = 0x800001FF\n    var mask39 = 0x00000200\n    var mask40 = 0xFFFFFC00\n    var mask41 = 0x7FFFFC00\n    var mask42 = 0x800003FF\n    var mask43 = 0x00000400\n    var mask44 = 0xFFFFF800\n    var mask45 = 0x7FFFF800\n    var mask46 = 0x8\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122562,
      "stdout": "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n",
      "stderr": "# command-line-arguments\n/tmp/tmpvfa7zopg_test.go:56:6: expected '(', found TestToggle_Middle_Bits\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // mask = 0b111111100\n    mask := 0b111111100\n    // n = 0b110101110\n    // n = n & mask\n    // n = 0b110101100\n    n = n & mask\n    // mask = 0b000000011\n    mask = 0b000000011\n    // n = n | mask\n    // n = 0b110101101\n    n = n | mask\n    return n\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122563,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmp489zc7cu_test.go:41: expected '%!s(int=15)', got '%!s(int=11)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmp489zc7cu_test.go:41: expected '%!s(int=12)', got '%!s(int=11)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmp489zc7cu_test.go:41: expected '%!s(int=13)', got '%!s(int=11)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmp489zc7cu_test.go:41: expected '%!s(int=127)', got '%!s(int=67)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmp489zc7cu_test.go:41: expected '%!s(int=115)', got '%!s(int=79)'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0\n    var i int = 1\n    for i < n {\n        mask = mask | i\n        i = i << 1\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122563,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpdf117erj_test.go:36: expected '%!s(int=15)', got '%!s(int=6)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpdf117erj_test.go:36: expected '%!s(int=12)', got '%!s(int=5)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpdf117erj_test.go:36: expected '%!s(int=13)', got '%!s(int=4)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpdf117erj_test.go:36: expected '%!s(int=127)', got '%!s(int=62)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpdf117erj_test.go:36: expected '%!s(int=115)', got '%!s(int=50)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    return n ^ ((1 << (n - 2)) - 1)\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509776,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpq3jrv3xj_test.go:30: expected '%!s(int=15)', got '%!s(int=118)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpq3jrv3xj_test.go:30: expected '%!s(int=12)', got '%!s(int=245)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpq3jrv3xj_test.go:30: expected '%!s(int=13)', got '%!s(int=500)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpq3jrv3xj_test.go:30: expected '%!s(int=127)', got '%!s(int=9223372036854775742)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpq3jrv3xj_test.go:30: expected '%!s(int=115)', got '%!s(int=-78)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0b11111111111111111111111111111110\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122556,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpvbj3gmfb_test.go:31: expected '%!s(int=15)', got '%!s(int=4294967287)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpvbj3gmfb_test.go:31: expected '%!s(int=12)', got '%!s(int=4294967284)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpvbj3gmfb_test.go:31: expected '%!s(int=13)', got '%!s(int=4294967285)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpvbj3gmfb_test.go:31: expected '%!s(int=127)', got '%!s(int=4294967231)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpvbj3gmfb_test.go:31: expected '%!s(int=115)', got '%!s(int=4294967219)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // get the first and last bit\n    first_bit := n & 1\n    last_bit := n & (1 << uint(len(fmt.Sprintf(\"%b\", n)) - 1))\n\n    // clear the first and last bit\n    n = n & ^1\n    n = n & ^(1 << uint(len(fmt.Sprintf(\"%b\", n)) - 1))\n\n    // toggle the remaining bits\n    n = n ^ (n >> 1)\n\n    // set the first and last bit\n    n = n | first_bit\n    n = n | last_bit\n\n    return n\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122563,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpuy8jod6k_test.go:45: expected '%!s(int=15)', got '%!s(int=9)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpuy8jod6k_test.go:45: expected '%!s(int=12)', got '%!s(int=11)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpuy8jod6k_test.go:45: expected '%!s(int=13)', got '%!s(int=11)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpuy8jod6k_test.go:45: expected '%!s(int=127)', got '%!s(int=65)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpuy8jod6k_test.go:45: expected '%!s(int=115)', got '%!s(int=75)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0\n    for i := 1; i < 32; i++ {\n        mask = mask | (1 << i)\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509776,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpjmvmh8bf_test.go:34: expected '%!s(int=15)', got '%!s(int=4294967287)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpjmvmh8bf_test.go:34: expected '%!s(int=12)', got '%!s(int=4294967284)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpjmvmh8bf_test.go:34: expected '%!s(int=13)', got '%!s(int=4294967285)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpjmvmh8bf_test.go:34: expected '%!s(int=127)', got '%!s(int=4294967231)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpjmvmh8bf_test.go:34: expected '%!s(int=115)', got '%!s(int=4294967219)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFE\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509776,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmph9gkyy83_test.go:31: expected '%!s(int=15)', got '%!s(int=2147483639)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmph9gkyy83_test.go:31: expected '%!s(int=12)', got '%!s(int=2147483636)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmph9gkyy83_test.go:31: expected '%!s(int=13)', got '%!s(int=2147483637)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmph9gkyy83_test.go:31: expected '%!s(int=127)', got '%!s(int=2147483583)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmph9gkyy83_test.go:31: expected '%!s(int=115)', got '%!s(int=2147483571)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // get the first bit\n    first_bit := n & 1\n    // get the last bit\n    last_bit := n & (1 << uint(len(fmt.Sprintf(\"%b\", n)) - 1))\n    // get the middle bits\n    middle_bits := n & (^(1 << uint(len(fmt.Sprintf(\"%b\", n)) - 1)) | 1)\n    // toggle the middle bits\n    middle_bits = middle_bits ^ middle_bits\n    // return the number\n    return first_bit | middle_bits | last_bit\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509776,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpzosebpqm_test.go:39: expected '%!s(int=15)', got '%!s(int=9)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpzosebpqm_test.go:39: expected '%!s(int=12)', got '%!s(int=8)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpzosebpqm_test.go:39: expected '%!s(int=13)', got '%!s(int=9)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpzosebpqm_test.go:39: expected '%!s(int=127)', got '%!s(int=65)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpzosebpqm_test.go:39: expected '%!s(int=115)', got '%!s(int=65)'\nFAIL\nFAIL\tcommand-line-arguments\t0.007s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFF\n    var mask2 int = 0x80000000\n    var mask3 int = 0x00000001\n    var mask4 int = 0xFFFFFFFE\n    var mask5 int = 0x7FFFFFFE\n    var mask6 int = 0x80000001\n    var mask7 int = 0x00000001\n    var mask8 int = 0xFFFFFFFE\n    var mask9 int = 0x7FFFFFFE\n    var mask10 int = 0x80000001\n    var mask11 int = 0x00000001\n    var mask12 int = 0xFFFFFFFE\n    var mask13 int = 0x7FFFFFFE\n    var mask14 int = 0x80000001\n    var mask15 int = 0x00000001\n    var mask16 int = 0xFFFFFFFE\n    var mask17 int = 0x7FFFFFFE\n    var mask18 int = 0x80000001\n    var mask19 int = 0x00000001\n    var mask20 int = 0xFFFFFFFE\n    var mask21 int = 0x7FFFFFFE\n    var mask22 int = 0x80000001\n    var mask23 int = 0x00000001\n    var mask24 int = 0xFFFFFFFE\n    var mask25 int = 0x7FFFFFFE\n    var mask26 int = 0x80000001\n    var mask27 int = 0x00000001\n    var mask28 int = 0xFFFFFFFE\n    var mask29 int = 0x7FFFFFFE\n    var mask30 int = 0x80000001\n    var mask31 int = 0x00000001\n    var mask32 int = 0xFFFFFFFE\n    var mask33 int = 0x7FFFFFFE\n    var mask34 int = 0x80000001\n    var mask35 int = 0x00000001\n    var mask36 int = 0xFFFFFFFE\n    var mask37 int = 0x7FFFFFFE\n    var mask38 int = 0x80000001\n    var mask39 int = 0x00000001\n    var mask40 int = 0xFFFFFFFE\n    var mask41 int = 0x7FFFFFFE\n    var mask42 int = 0x80000001\n    var mask43 int = 0x\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122562,
      "stdout": "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n",
      "stderr": "# command-line-arguments\n/tmp/tmpjfxm0rqu_test.go:52:24: hexadecimal literal has no digits\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // get the first bit\n    first_bit := n & 1\n    // get the last bit\n    last_bit := n & (1 << uint(31))\n    // get the middle bits\n    middle_bits := n & (0x7FFFFFFE)\n    // toggle the middle bits\n    middle_bits = middle_bits ^ 0x7FFFFFFE\n    // put the bits back together\n    return first_bit | middle_bits | last_bit\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122563,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpyyfzok8u_test.go:39: expected '%!s(int=15)', got '%!s(int=2147483639)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpyyfzok8u_test.go:39: expected '%!s(int=12)', got '%!s(int=2147483636)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpyyfzok8u_test.go:39: expected '%!s(int=13)', got '%!s(int=2147483637)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpyyfzok8u_test.go:39: expected '%!s(int=127)', got '%!s(int=2147483583)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpyyfzok8u_test.go:39: expected '%!s(int=115)', got '%!s(int=2147483571)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0\n    for i := 1; i < 32; i++ {\n        mask = mask | (1 << i)\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509776,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpjmvmh8bf_test.go:34: expected '%!s(int=15)', got '%!s(int=4294967287)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpjmvmh8bf_test.go:34: expected '%!s(int=12)', got '%!s(int=4294967284)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpjmvmh8bf_test.go:34: expected '%!s(int=13)', got '%!s(int=4294967285)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpjmvmh8bf_test.go:34: expected '%!s(int=127)', got '%!s(int=4294967231)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpjmvmh8bf_test.go:34: expected '%!s(int=115)', got '%!s(int=4294967219)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFF\n    var mask2 int = 0x80000000\n    var mask3 int = 0x00000001\n    var mask4 int = 0xFFFFFFFE\n    var mask5 int = 0x7FFFFFFE\n    var mask6 int = 0x80000001\n    return ((n & mask) ^ mask2) | ((n & mask3) ^ mask4) | ((n & mask5) ^ mask6)\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122564,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpug8nn0o7_test.go:36: expected '%!s(int=15)', got '%!s(int=4294967295)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpug8nn0o7_test.go:36: expected '%!s(int=12)', got '%!s(int=4294967295)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpug8nn0o7_test.go:36: expected '%!s(int=13)', got '%!s(int=4294967295)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpug8nn0o7_test.go:36: expected '%!s(int=127)', got '%!s(int=4294967295)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpug8nn0o7_test.go:36: expected '%!s(int=115)', got '%!s(int=4294967295)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // get the first and last bit\n    first_bit := n & 1\n    last_bit := n & (1 << uint(len(fmt.Sprintf(\"%b\", n)) - 1))\n    // clear the first and last bit\n    n = n & (^1)\n    n = n & (^(1 << uint(len(fmt.Sprintf(\"%b\", n)) - 1)))\n    // toggle the middle bits\n    n = n ^ (n >> 1)\n    // set the first and last bit\n    n = n | first_bit\n    n = n | last_bit\n    return n\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122556,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpa4t6inbm_test.go:41: expected '%!s(int=15)', got '%!s(int=9)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpa4t6inbm_test.go:41: expected '%!s(int=12)', got '%!s(int=11)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpa4t6inbm_test.go:41: expected '%!s(int=13)', got '%!s(int=11)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpa4t6inbm_test.go:41: expected '%!s(int=127)', got '%!s(int=65)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpa4t6inbm_test.go:41: expected '%!s(int=115)', got '%!s(int=75)'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0\n    for i := 1; i < 32; i++ {\n        mask = mask | (1 << i)\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509776,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpjmvmh8bf_test.go:34: expected '%!s(int=15)', got '%!s(int=4294967287)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpjmvmh8bf_test.go:34: expected '%!s(int=12)', got '%!s(int=4294967284)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpjmvmh8bf_test.go:34: expected '%!s(int=13)', got '%!s(int=4294967285)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpjmvmh8bf_test.go:34: expected '%!s(int=127)', got '%!s(int=4294967231)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpjmvmh8bf_test.go:34: expected '%!s(int=115)', got '%!s(int=4294967219)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFE\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509776,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmph9gkyy83_test.go:31: expected '%!s(int=15)', got '%!s(int=2147483639)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmph9gkyy83_test.go:31: expected '%!s(int=12)', got '%!s(int=2147483636)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmph9gkyy83_test.go:31: expected '%!s(int=13)', got '%!s(int=2147483637)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmph9gkyy83_test.go:31: expected '%!s(int=127)', got '%!s(int=2147483583)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmph9gkyy83_test.go:31: expected '%!s(int=115)', got '%!s(int=2147483571)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0b11\n    var result int = 0\n    for i := 0; i < 32; i++ {\n        if i == 0 || i == 31 {\n            result = result | (n & mask)\n        } else {\n            result = result | ((n & mask) ^ mask)\n        }\n        n = n >> 1\n    }\n    return result\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509776,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmp3w91xanr_test.go:40: expected '%!s(int=15)', got '%!s(int=3)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmp3w91xanr_test.go:40: expected '%!s(int=12)', got '%!s(int=3)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmp3w91xanr_test.go:40: expected '%!s(int=13)', got '%!s(int=3)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmp3w91xanr_test.go:40: expected '%!s(int=127)', got '%!s(int=3)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmp3w91xanr_test.go:40: expected '%!s(int=115)', got '%!s(int=3)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // get the first and last bit\n    first_bit := n & 1\n    last_bit := n & (1 << uint(len(fmt.Sprintf(\"%b\", n)) - 1))\n    // clear the first and last bit\n    n = n & (^1)\n    n = n & (^(1 << uint(len(fmt.Sprintf(\"%b\", n)) - 1)))\n    // toggle the middle bits\n    n = n ^ (n >> 1)\n    // set the first and last bit\n    n = n | first_bit\n    n = n | last_bit\n    return n\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122556,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpa4t6inbm_test.go:41: expected '%!s(int=15)', got '%!s(int=9)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpa4t6inbm_test.go:41: expected '%!s(int=12)', got '%!s(int=11)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpa4t6inbm_test.go:41: expected '%!s(int=13)', got '%!s(int=11)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpa4t6inbm_test.go:41: expected '%!s(int=127)', got '%!s(int=65)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpa4t6inbm_test.go:41: expected '%!s(int=115)', got '%!s(int=75)'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // mask = 0b11111\n    mask := 0b11111\n    // mask = 0b11111 << 1\n    mask = mask << 1\n    // mask = 0b111110\n    mask = mask << 1\n    // mask = 0b1111100\n    mask = mask << 1\n    // mask = 0b11111000\n    mask = mask << 1\n    // mask = 0b111111000\n    mask = mask << 1\n    // mask = 0b1111110000\n    mask = mask << 1\n    // mask = 0b11111100000\n    mask = mask << 1\n    // mask = 0b111111000000\n    mask = mask << 1\n    // mask = 0b1111110000000\n    mask = mask << 1\n    // mask = 0b11111100000000\n    mask = mask << 1\n    // mask = 0b111111000000000\n    mask = mask << 1\n    // mask = 0b1111110000000000\n    mask = mask << 1\n    // mask = 0b11111100000000000\n    mask = mask << 1\n    // mask = 0b111111000000000000\n    mask = mask << 1\n    // mask = 0b1111110000000000000\n    mask = mask << 1\n    // mask = 0b11111100000000000000\n    mask = mask << 1\n    // mask = 0b111111000000000000000\n    mask = mask << 1\n    // mask = 0b1111110000000000000000\n    mask = mask << 1\n    // mask = 0b11111100000000000000000\n    mask = mask << 1\n    // mask = 0b111111000000000000000000\n    mask = mask << 1\n    // mask = 0b1111110000000000000000000\n    mask = mask << 1\n    // mask = 0b11111100000000000000000000\n    mask = mask << 1\n    // mask = 0b111111000000000000000000000\n    mask = mask << 1\n    // mask = 0b1111110000000000000000000000\n    mask = mask << 1\n    // mask = 0b11111100000000000000000000000\n    mask = mask << 1\n    // mask = 0b111111000000000000000000000000\n    mask = mask << 1\n    // mask = 0b1111110000000000000000000000000\n    mask = mask << 1\n    // mask = 0b11111100000000000000000000000000\n    mask = mask << 1\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122563,
      "stdout": "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n",
      "stderr": "# command-line-arguments\n/tmp/tmpp30qev3h_test.go:69:6: expected '(', found TestToggle_Middle_Bits\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0b11111111111111111111111111111111\n    var mask_first_bit int = 0b11111111111111111111111111111110\n    var mask_last_bit int = 0b11111111111111111111111111111101\n    var mask_middle_bits int = mask_first_bit & mask_last_bit\n    return n ^ mask_middle_bits\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122563,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpfl54vnr7_test.go:10:9: mask declared but not used\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFF\n    var mask2 int = 0x80000000\n    var mask3 int = 0x00000001\n    var mask4 int = 0xFFFFFFFE\n    var mask5 int = 0xFFFFFFFC\n    var mask6 int = 0x00000003\n    var mask7 int = 0xFFFFFFFB\n    var mask8 int = 0xFFFFFFF7\n    var mask9 int = 0x00000007\n    var mask10 int = 0xFFFFFFF8\n    var mask11 int = 0xFFFFFFF0\n    var mask12 int = 0x0000000F\n    var mask13 int = 0xFFFFFFF0\n    var mask14 int = 0xFFFFFF0F\n    var mask15 int = 0x000000F0\n    var mask16 int = 0xFFFFFF0F\n    var mask17 int = 0xFFFFF0FF\n    var mask18 int = 0x00000F00\n    var mask19 int = 0xFFFFF0FF\n    var mask20 int = 0xFFF0FFFF\n    var mask21 int = 0x000F0000\n    var mask22 int = 0xFFF0FFFF\n    var mask23 int = 0xF0FFFFFF\n    var mask24 int = 0x0F000000\n    var mask25 int = 0xF0FFFFFF\n    var mask26 int = 0x0FFFFFFF\n    var mask27 int = 0xF0000000\n    var mask28 int = 0x0FFFFFFF\n    var mask29 int = 0x00FFFFFF\n    var mask30 int = 0xFF000000\n    var mask31 int = 0x00FFFFFF\n    var mask32 int = 0xFFFFFF00\n    var mask33 int = 0x000000FF\n    var mask34 int = 0xFFFFFF00\n    var mask35 int = 0xFFFF00FF\n    var mask36 int = 0x0000FF00\n    var mask37 int = 0xFFFF00FF\n    var mask38 int = 0xFF00FFFF\n    var mask39 int = 0x00FF0000\n    var mask40 int = 0xFF00FFFF\n    var mask41 int = 0x00FFFFFF\n    var mask42 int = 0xFF000000\n    var\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122563,
      "stdout": "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n",
      "stderr": "# command-line-arguments\n/tmp/tmp7yj8hanh_test.go:53:1: expected 'IDENT', found 'func'\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // n = n & 0xfffffffe\n    // n = n | 0x00000001\n    // n = n | 0x80000000\n    n = n & 0xfffffffe | 0x80000001\n    return n\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122564,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpawoqgyi7_test.go:34: expected '%!s(int=15)', got '%!s(int=2147483657)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpawoqgyi7_test.go:34: expected '%!s(int=12)', got '%!s(int=2147483659)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpawoqgyi7_test.go:34: expected '%!s(int=13)', got '%!s(int=2147483659)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpawoqgyi7_test.go:34: expected '%!s(int=127)', got '%!s(int=2147483713)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpawoqgyi7_test.go:34: expected '%!s(int=115)', got '%!s(int=2147483725)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0\n    for i := 1; i < 32; i++ {\n        mask = mask | (1 << i)\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509776,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpjmvmh8bf_test.go:34: expected '%!s(int=15)', got '%!s(int=4294967287)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpjmvmh8bf_test.go:34: expected '%!s(int=12)', got '%!s(int=4294967284)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpjmvmh8bf_test.go:34: expected '%!s(int=13)', got '%!s(int=4294967285)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpjmvmh8bf_test.go:34: expected '%!s(int=127)', got '%!s(int=4294967231)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpjmvmh8bf_test.go:34: expected '%!s(int=115)', got '%!s(int=4294967219)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // Get the first and last bit\n    first_bit := n & 1\n    last_bit := n & (1 << uint(len(fmt.Sprintf(\"%b\", n)) - 1))\n    // Remove the first and last bit\n    n = n & (^1)\n    n = n & (^(1 << uint(len(fmt.Sprintf(\"%b\", n)) - 1)))\n    // Toggle the middle bits\n    n = n ^ (n >> 1)\n    // Add the first and last bit back\n    n = n | first_bit\n    n = n | last_bit\n    return n\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122559,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpt3txl0iu_test.go:41: expected '%!s(int=15)', got '%!s(int=9)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpt3txl0iu_test.go:41: expected '%!s(int=12)', got '%!s(int=11)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpt3txl0iu_test.go:41: expected '%!s(int=13)', got '%!s(int=11)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpt3txl0iu_test.go:41: expected '%!s(int=127)', got '%!s(int=65)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpt3txl0iu_test.go:41: expected '%!s(int=115)', got '%!s(int=75)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0\n    var i int = 1\n    for i < 32 {\n        mask = mask | (1 << i)\n        i += 2\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509776,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmphtwnbbnt_test.go:36: expected '%!s(int=15)', got '%!s(int=2863311523)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmphtwnbbnt_test.go:36: expected '%!s(int=12)', got '%!s(int=2863311520)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmphtwnbbnt_test.go:36: expected '%!s(int=13)', got '%!s(int=2863311521)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmphtwnbbnt_test.go:36: expected '%!s(int=127)', got '%!s(int=2863311595)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmphtwnbbnt_test.go:36: expected '%!s(int=115)', got '%!s(int=2863311591)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // mask = 0b11111...11111\n    mask := (1 << uint(n)) - 1\n    // mask = 0b11111...11110\n    mask = mask &^ 1\n    // mask = 0b1111...111000\n    mask = mask &^ (1 << uint(n - 1))\n    // mask = 0b1111...111000\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122564,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpqwsk3z58_test.go:37: expected '%!s(int=15)', got '%!s(int=247)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpqwsk3z58_test.go:37: expected '%!s(int=12)', got '%!s(int=500)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpqwsk3z58_test.go:37: expected '%!s(int=13)', got '%!s(int=1013)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpqwsk3z58_test.go:37: expected '%!s(int=127)', got '%!s(int=-65)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpqwsk3z58_test.go:37: expected '%!s(int=115)', got '%!s(int=-77)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0\n    for i := 1; i < 32; i++ {\n        mask = mask | (1 << i)\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509776,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpjmvmh8bf_test.go:34: expected '%!s(int=15)', got '%!s(int=4294967287)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpjmvmh8bf_test.go:34: expected '%!s(int=12)', got '%!s(int=4294967284)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpjmvmh8bf_test.go:34: expected '%!s(int=13)', got '%!s(int=4294967285)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpjmvmh8bf_test.go:34: expected '%!s(int=127)', got '%!s(int=4294967231)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpjmvmh8bf_test.go:34: expected '%!s(int=115)', got '%!s(int=4294967219)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7ffffffe\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509776,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpqyqe3n0h_test.go:31: expected '%!s(int=15)', got '%!s(int=2147483639)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpqyqe3n0h_test.go:31: expected '%!s(int=12)', got '%!s(int=2147483636)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpqyqe3n0h_test.go:31: expected '%!s(int=13)', got '%!s(int=2147483637)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpqyqe3n0h_test.go:31: expected '%!s(int=127)', got '%!s(int=2147483583)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpqyqe3n0h_test.go:31: expected '%!s(int=115)', got '%!s(int=2147483571)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // get the first and last bit\n    first_bit := n & 1\n    last_bit := n & (1 << uint(len(fmt.Sprintf(\"%b\", n)) - 1))\n\n    // toggle all bits\n    n = n ^ (1 << uint(len(fmt.Sprintf(\"%b\", n)) - 1))\n    n = n ^ 1\n\n    // set the first and last bit\n    n = n | first_bit\n    n = n | last_bit\n\n    return n\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122564,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpvgg4bm_7_test.go:42: expected '%!s(int=15)', got '%!s(int=9)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpvgg4bm_7_test.go:42: expected '%!s(int=12)', got '%!s(int=11)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpvgg4bm_7_test.go:42: expected '%!s(int=13)', got '%!s(int=11)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpvgg4bm_7_test.go:42: expected '%!s(int=127)', got '%!s(int=65)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpvgg4bm_7_test.go:42: expected '%!s(int=115)', got '%!s(int=77)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // n = n & 0xFFFFFFF8\n    // n = n | 0x00000014\n    // return n\n    return (n & 0xFFFFFFF8) | 0x00000014\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122564,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmp6v5rwq6t_test.go:33: expected '%!s(int=15)', got '%!s(int=28)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmp6v5rwq6t_test.go:33: expected '%!s(int=12)', got '%!s(int=28)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmp6v5rwq6t_test.go:33: expected '%!s(int=13)', got '%!s(int=28)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmp6v5rwq6t_test.go:33: expected '%!s(int=127)', got '%!s(int=84)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmp6v5rwq6t_test.go:33: expected '%!s(int=115)', got '%!s(int=92)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0b11\n    var i int = 1\n    for i < 32 {\n        mask = mask | (0b11 << i)\n        i += 2\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122564,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmp_sjcllpy_test.go:36: expected '%!s(int=15)', got '%!s(int=8589934582)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmp_sjcllpy_test.go:36: expected '%!s(int=12)', got '%!s(int=8589934581)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmp_sjcllpy_test.go:36: expected '%!s(int=13)', got '%!s(int=8589934580)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmp_sjcllpy_test.go:36: expected '%!s(int=127)', got '%!s(int=8589934526)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmp_sjcllpy_test.go:36: expected '%!s(int=115)', got '%!s(int=8589934514)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0b11\n    var result int = 0\n    for i := 0; i < 32; i++ {\n        if i == 0 || i == 31 {\n            result = result | (n & mask)\n        } else {\n            result = result | ((n & mask) ^ mask)\n        }\n        n = n >> 1\n    }\n    return result\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509776,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmp3w91xanr_test.go:40: expected '%!s(int=15)', got '%!s(int=3)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmp3w91xanr_test.go:40: expected '%!s(int=12)', got '%!s(int=3)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmp3w91xanr_test.go:40: expected '%!s(int=13)', got '%!s(int=3)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmp3w91xanr_test.go:40: expected '%!s(int=127)', got '%!s(int=3)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmp3w91xanr_test.go:40: expected '%!s(int=115)', got '%!s(int=3)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0\n    for i := 1; i < 32; i++ {\n        if i == 1 || i == 31 {\n            continue\n        }\n        mask = mask | (1 << i)\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122559,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpr362i2oh_test.go:37: expected '%!s(int=15)', got '%!s(int=2147483637)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpr362i2oh_test.go:37: expected '%!s(int=12)', got '%!s(int=2147483638)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpr362i2oh_test.go:37: expected '%!s(int=13)', got '%!s(int=2147483639)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpr362i2oh_test.go:37: expected '%!s(int=127)', got '%!s(int=2147483581)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpr362i2oh_test.go:37: expected '%!s(int=115)', got '%!s(int=2147483569)'\nFAIL\nFAIL\tcommand-line-arguments\t0.010s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // Get the mask\n    mask := 1 << uint(n)\n    // Toggle the bits\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122564,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmp9d7k5e3t_test.go:33: expected '%!s(int=15)', got '%!s(int=521)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmp9d7k5e3t_test.go:33: expected '%!s(int=12)', got '%!s(int=1034)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmp9d7k5e3t_test.go:33: expected '%!s(int=13)', got '%!s(int=2059)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmp9d7k5e3t_test.go:33: expected '%!s(int=127)', got '%!s(int=65)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmp9d7k5e3t_test.go:33: expected '%!s(int=115)', got '%!s(int=77)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask = 0\n    for i := 1; i < 32; i++ {\n        mask = mask | (1 << i)\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122556,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpuyloywsj_test.go:34: expected '%!s(int=15)', got '%!s(int=4294967287)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpuyloywsj_test.go:34: expected '%!s(int=12)', got '%!s(int=4294967284)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpuyloywsj_test.go:34: expected '%!s(int=13)', got '%!s(int=4294967285)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpuyloywsj_test.go:34: expected '%!s(int=127)', got '%!s(int=4294967231)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpuyloywsj_test.go:34: expected '%!s(int=115)', got '%!s(int=4294967219)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // Get the number of bits in the number\n    num_bits := 0\n    for n > 0 {\n        n = n >> 1\n        num_bits += 1\n    }\n\n    // Create a mask with all bits set except the first and last bit\n    mask := 0\n    for i := 1; i < num_bits - 1; i++ {\n        mask = mask | (1 << i)\n    }\n\n    // Toggle the bits\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122564,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmp_as4qubv_test.go:44: expected '%!s(int=15)', got '%!s(int=6)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmp_as4qubv_test.go:44: expected '%!s(int=12)', got '%!s(int=6)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmp_as4qubv_test.go:44: expected '%!s(int=13)', got '%!s(int=6)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmp_as4qubv_test.go:44: expected '%!s(int=127)', got '%!s(int=62)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmp_as4qubv_test.go:44: expected '%!s(int=115)', got '%!s(int=62)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0\n    for i := 1; i < 32; i++ {\n        if i == 1 || i == 31 {\n            continue\n        }\n        mask = mask | (1 << i)\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122559,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpr362i2oh_test.go:37: expected '%!s(int=15)', got '%!s(int=2147483637)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpr362i2oh_test.go:37: expected '%!s(int=12)', got '%!s(int=2147483638)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpr362i2oh_test.go:37: expected '%!s(int=13)', got '%!s(int=2147483639)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpr362i2oh_test.go:37: expected '%!s(int=127)', got '%!s(int=2147483581)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpr362i2oh_test.go:37: expected '%!s(int=115)', got '%!s(int=2147483569)'\nFAIL\nFAIL\tcommand-line-arguments\t0.010s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // mask to get the first and last bit\n    mask := 0b11\n    // get the first and last bit\n    first_last := n & mask\n    // shift the number to the right by 2 bits\n    n = n >> 2\n    // toggle the bits\n    n = n ^ 0b11111111111111111111111111111111\n    // shift the number to the left by 2 bits\n    n = n << 2\n    // add the first and last bit\n    n = n | first_last\n    return n\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122564,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmph43g01gd_test.go:42: expected '%!s(int=15)', got '%!s(int=17179869173)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmph43g01gd_test.go:42: expected '%!s(int=12)', got '%!s(int=17179869174)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmph43g01gd_test.go:42: expected '%!s(int=13)', got '%!s(int=17179869175)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmph43g01gd_test.go:42: expected '%!s(int=127)', got '%!s(int=17179869117)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmph43g01gd_test.go:42: expected '%!s(int=115)', got '%!s(int=17179869105)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask = 0x7FFFFFFE\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122564,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpmp7qyzj0_test.go:31: expected '%!s(int=15)', got '%!s(int=2147483639)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpmp7qyzj0_test.go:31: expected '%!s(int=12)', got '%!s(int=2147483636)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpmp7qyzj0_test.go:31: expected '%!s(int=13)', got '%!s(int=2147483637)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpmp7qyzj0_test.go:31: expected '%!s(int=127)', got '%!s(int=2147483583)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpmp7qyzj0_test.go:31: expected '%!s(int=115)', got '%!s(int=2147483571)'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // get the first bit\n    first_bit := n & 1\n    // get the last bit\n    last_bit := n & (1 << uint(len(fmt.Sprintf(\"%b\", n)) - 1))\n    // get the middle bits\n    middle_bits := n & (^(1 << uint(len(fmt.Sprintf(\"%b\", n)) - 1))) & (^1)\n    // toggle the middle bits\n    middle_bits = middle_bits ^ middle_bits\n    // return the number\n    return first_bit | middle_bits | last_bit\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122561,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpqar5mjl1_test.go:39: expected '%!s(int=15)', got '%!s(int=9)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpqar5mjl1_test.go:39: expected '%!s(int=12)', got '%!s(int=8)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpqar5mjl1_test.go:39: expected '%!s(int=13)', got '%!s(int=9)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpqar5mjl1_test.go:39: expected '%!s(int=127)', got '%!s(int=65)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpqar5mjl1_test.go:39: expected '%!s(int=115)', got '%!s(int=65)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFF\n    var mask2 int = 0x80000000\n    var mask3 int = 0x00000001\n    var mask4 int = 0xFFFFFFFE\n    var mask5 int = 0xFFFFFFFE\n    var mask6 int = 0xFFFFFFFE\n    var mask7 int = 0xFFFFFFFE\n    var mask8 int = 0xFFFFFFFE\n    var mask9 int = 0xFFFFFFFE\n    var mask10 int = 0xFFFFFFFE\n    var mask11 int = 0xFFFFFFFE\n    var mask12 int = 0xFFFFFFFE\n    var mask13 int = 0xFFFFFFFE\n    var mask14 int = 0xFFFFFFFE\n    var mask15 int = 0xFFFFFFFE\n    var mask16 int = 0xFFFFFFFE\n    var mask17 int = 0xFFFFFFFE\n    var mask18 int = 0xFFFFFFFE\n    var mask19 int = 0xFFFFFFFE\n    var mask20 int = 0xFFFFFFFE\n    var mask21 int = 0xFFFFFFFE\n    var mask22 int = 0xFFFFFFFE\n    var mask23 int = 0xFFFFFFFE\n    var mask24 int = 0xFFFFFFFE\n    var mask25 int = 0xFFFFFFFE\n    var mask26 int = 0xFFFFFFFE\n    var mask27 int = 0xFFFFFFFE\n    var mask28 int = 0xFFFFFFFE\n    var mask29 int = 0xFFFFFFFE\n    var mask30 int = 0xFFFFFFFE\n    var mask31 int = 0xFFFFFFFE\n    var mask32 int = 0xFFFFFFFE\n    var mask33 int = 0xFFFFFFFE\n    var mask34 int = 0xFFFFFFFE\n    var mask35 int = 0xFFFFFFFE\n    var mask36 int = 0xFFFFFFFE\n    var mask37 int = 0xFFFFFFFE\n    var mask38 int = 0xFFFFFFFE\n    var mask39 int = 0xFFFFFFFE\n    var mask40 int = 0xFFFFFFFE\n    var mask41 int = 0xFFFFFFFE\n    var mask42 int = 0xFFFFFFFE\n    var mask43 int = 0xFFFF\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122560,
      "stdout": "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n",
      "stderr": "# command-line-arguments\n/tmp/tmpx4jt020t_test.go:53:6: expected '(', found TestToggle_Middle_Bits\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // get the first and last bits\n    first_bit := n & 1\n    last_bit := n & (1 << uint(len(fmt.Sprintf(\"%b\", n)) - 1))\n    // remove the first and last bits\n    n = n & (^1)\n    n = n & (^last_bit)\n    // toggle the middle bits\n    n = n ^ (n >> 1)\n    // add the first and last bits back\n    n = n | first_bit\n    n = n | last_bit\n    return n\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122564,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpjn07tbum_test.go:41: expected '%!s(int=15)', got '%!s(int=9)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpjn07tbum_test.go:41: expected '%!s(int=12)', got '%!s(int=11)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpjn07tbum_test.go:41: expected '%!s(int=13)', got '%!s(int=11)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpjn07tbum_test.go:41: expected '%!s(int=127)', got '%!s(int=65)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpjn07tbum_test.go:41: expected '%!s(int=115)', got '%!s(int=75)'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    return n ^ ((1 << (n - 1)) - 1)\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122564,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmp938hjed1_test.go:30: expected '%!s(int=15)', got '%!s(int=246)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmp938hjed1_test.go:30: expected '%!s(int=12)', got '%!s(int=501)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmp938hjed1_test.go:30: expected '%!s(int=13)', got '%!s(int=1012)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmp938hjed1_test.go:30: expected '%!s(int=127)', got '%!s(int=-66)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmp938hjed1_test.go:30: expected '%!s(int=115)', got '%!s(int=-78)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7ffffffe\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509776,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpqyqe3n0h_test.go:31: expected '%!s(int=15)', got '%!s(int=2147483639)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpqyqe3n0h_test.go:31: expected '%!s(int=12)', got '%!s(int=2147483636)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpqyqe3n0h_test.go:31: expected '%!s(int=13)', got '%!s(int=2147483637)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpqyqe3n0h_test.go:31: expected '%!s(int=127)', got '%!s(int=2147483583)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpqyqe3n0h_test.go:31: expected '%!s(int=115)', got '%!s(int=2147483571)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
{
  "name": "mbpp_783_rgb_to_hsv",
  "language": "go_test.go",
  "prompt": "package rgb_to_hsv_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r int, g int, b int) interface{} {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_783_rgb_to_hsv.py",
  "prompt_terminology": "verbatim",
  "tests": "func TestRgb_To_Hsv(t *testing.T) {\n  candidate := rgb_to_hsv\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(255, 255, 255), expected: []interface{}{0, 0.0, 100.0} },\n     { actual: candidate(0, 215, 0), expected: []interface{}{120.0, 100.0, 84.31372549019608} },\n     { actual: candidate(10, 215, 110), expected: []interface{}{149.26829268292684, 95.34883720930233, 84.31372549019608} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
  "stop_tokens": [
    "\nfunc",
    "struct",
    "\n// "
  ],
  "completions": [
    "    var h, s, v int\n    var min, max, delta int\n\n    min = r\n    if g < min {\n        min = g\n    }\n    if b < min {\n        min = b\n    }\n\n    max = r\n    if g > max {\n        max = g\n    }\n    if b > max {\n        max = b\n    }\n\n    v = max\n\n    delta = max - min\n\n    if max != 0 {\n        s = delta * 100 / max\n    } else {\n        s = 0\n        h = -1\n        return fmt.Sprintf(\"%d, %d, %d\", h, s, v)\n    }\n\n    if r == max {\n        h = (g - b) * 60 / delta\n    } else if g == max {\n        h = 120 + (b - r) * 60 / delta\n    } else {\n        h = 240 + (r - g) * 60 / delta\n    }\n\n    if h < 0 {\n        h += 360\n    }\n\n    return fmt.Sprintf(\"%d, %d, %d\", h, s, v)\n}\n",
    "    // Your code goes here\n    return nil\n}\n",
    "    // Your code goes here\n    return nil\n}\n",
    "    var h, s, v int\n    var min, max, delta int\n    min = r\n    if g < min {\n        min = g\n    }\n    if b < min {\n        min = b\n    }\n    max = r\n    if g > max {\n        max = g\n    }\n    if b > max {\n        max = b\n    }\n    v = max\n    delta = max - min\n    if max != 0 {\n        s = delta * 100 / max\n    } else {\n        s = 0\n        h = -1\n        return map[string]interface{}{\n            \"h\": h,\n            \"s\": s,\n            \"v\": v,\n        }\n    }\n    if r == max {\n        h = (g - b) * 60 / delta\n    } else if g == max {\n        h = 120 + (b - r) * 60 / delta\n    } else {\n        h = 240 + (r - g) * 60 / delta\n    }\n    if h < 0 {\n        h += 360\n    }\n    return map[string]interface{}{\n        \"h\": h,\n        \"s\": s,\n        \"v\": v,\n    }\n}\n",
    "    return nil\n}\n",
    "    return nil\n}\n",
    "    // TODO: implement\n    return nil\n}\n",
    "    // TODO: implement this function\n    return nil\n}\n",
    "    // your code here\n    return nil\n}\n",
    "    // TODO: implement\n    return nil\n}\n",
    "    var h, s, v float64\n    cmax := float64(max(r, g, b))\n    cmin := float64(min(r, g, b))\n    delta := cmax - cmin\n\n    if delta == 0 {\n        h = 0\n    } else if cmax == float64(r) {\n        h = 60 * ((float64(g) - float64(b)) / delta)\n    } else if cmax == float64(g) {\n        h = 60 * (2 + (float64(b) - float64(r)) / delta)\n    } else if cmax == float64(b) {\n        h = 60 * (4 + (float64(r) - float64(g)) / delta)\n    }\n\n    if cmax == 0 {\n        s = 0\n    } else {\n        s = delta / cmax\n    }\n\n    v = cmax\n\n    return fmt.Sprintf(\"%f, %f, %f\", h, s, v)\n}\n",
    "    return nil\n}\n",
    "    var h, s, v float64\n    var max, min int\n    var diff int\n\n    max = r\n    if g > max {\n        max = g\n    }\n    if b > max {\n        max = b\n    }\n\n    min = r\n    if g < min {\n        min = g\n    }\n    if b < min {\n        min = b\n    }\n\n    diff = max - min\n\n    if max == min {\n        h = 0\n    } else if max == r {\n        h = 60 * float64(g - b) / float64(diff)\n    } else if max == g {\n        h = 60 * float64(b - r) / float64(diff) + 120\n    } else if max == b {\n        h = 60 * float64(r - g) / float64(diff) + 240\n    }\n\n    if h < 0 {\n        h += 360\n    }\n\n    if max == 0 {\n        s = 0\n    } else {\n        s = float64(diff) / float64(max)\n    }\n\n    v = float64(max) / 255\n\n    return fmt.Sprintf(\"%f %f %f\", h, s, v)\n}\n",
    "    return nil\n}\n",
    "    return nil\n}\n",
    "    // Write your code here\n    return nil\n}\n",
    "    var h float64\n    var s float64\n    var v float64\n\n    var min float64\n    var max float64\n    var delta float64\n\n    rf := float64(r) / 255.0\n    gf := float64(g) / 255.0\n    bf := float64(b) / 255.0\n\n    min = rf\n    if gf < min {\n        min = gf\n    }\n    if bf < min {\n        min = bf\n    }\n\n    max = rf\n    if gf > max {\n        max = gf\n    }\n    if bf > max {\n        max = bf\n    }\n\n    v = max\n\n    delta = max - min\n\n    if max != 0 {\n        s = delta / max\n    } else {\n        s = 0\n        h = -1\n        return []float64{h, s, v}\n    }\n\n    if rf == max {\n        h = (gf - bf) / delta\n    } else if gf == max {\n        h = 2 + (bf - rf) / delta\n    } else {\n        h = 4 + (rf - gf) / delta\n    }\n\n    h *= 60\n\n    if h < 0 {\n        h += 360\n    }\n\n    return []float64{h, s, v}\n}\n",
    "    // TODO: implement\n    return nil\n}\n",
    "    var h, s, v int\n    var min, max, delta int\n    min = r\n    if g < min {\n        min = g\n    }\n    if b < min {\n        min = b\n    }\n    max = r\n    if g > max {\n        max = g\n    }\n    if b > max {\n        max = b\n    }\n    v = max\n    delta = max - min\n    if max != 0 {\n        s = delta * 100 / max\n    } else {\n        s = 0\n        h = -1\n        return map[string]int{\"h\": h, \"s\": s, \"v\": v}\n    }\n    if r == max {\n        h = (g - b) * 60 / delta\n    } else if g == max {\n        h = 120 + (b - r) * 60 / delta\n    } else {\n        h = 240 + (r - g) * 60 / delta\n    }\n    if h < 0 {\n        h += 360\n    }\n    return map[string]int{\"h\": h, \"s\": s, \"v\": v}\n}\n",
    "    // TODO - Add your code here\n    return nil\n}\n",
    "    var h, s, v int\n    var min, max, delta int\n    min = r\n    if g < min {\n        min = g\n    }\n    if b < min {\n        min = b\n    }\n    max = r\n    if g > max {\n        max = g\n    }\n    if b > max {\n        max = b\n    }\n    v = max\n    delta = max - min\n    if max != 0 {\n        s = delta * 100 / max\n    } else {\n        s = 0\n        h = -1\n        return fmt.Sprintf(\"H: %d, S: %d, V: %d\", h, s, v)\n    }\n    if r == max {\n        h = (g - b) * 60 / delta\n    } else if g == max {\n        h = 120 + (b - r) * 60 / delta\n    } else {\n        h = 240 + (r - g) * 60 / delta\n    }\n    if h < 0 {\n        h += 360\n    }\n    return fmt.Sprintf(\"H: %d, S: %d, V: %d\", h, s, v)\n}\n",
    "    // TODO - Add your code here\n    return nil\n}\n",
    "    return nil\n}\n",
    "    // TODO - Add your code here\n    return nil\n}\n",
    "    // TODO: Implement me!\n    return nil\n}\n",
    "    // TODO: implement\n    return nil\n}\n",
    "    return nil\n}\n",
    "    // TODO - Add your code here\n    return nil\n}\n",
    "    // Your code goes here\n    return nil\n}\n",
    "    // Your code goes here\n    return nil\n}\n",
    "    // TODO - Add your code here\n    return nil\n}\n",
    "    var h, s, v int\n    var max, min int\n    var diff int\n\n    max = r\n    if g > max {\n        max = g\n    }\n    if b > max {\n        max = b\n    }\n\n    min = r\n    if g < min {\n        min = g\n    }\n    if b < min {\n        min = b\n    }\n\n    diff = max - min\n\n    // Hue\n    if diff == 0 {\n        h = 0\n    } else if max == r {\n        h = 60 * ((g - b) / diff)\n    } else if max == g {\n        h = 60 * ((b - r) / diff) + 120\n    } else if max == b {\n        h = 60 * ((r - g) / diff) + 240\n    }\n\n    if h < 0 {\n        h += 360\n    }\n\n    // Saturation\n    if max == 0 {\n        s = 0\n    } else {\n        s = 255 * diff / max\n    }\n\n    // Value\n    v = max\n\n    return fmt.Sprintf(\"%d, %d, %d\", h, s, v)\n}\n",
    "    // TODO - Add your code here\n    return nil\n}\n",
    "    return nil\n}\n",
    "    // TODO: Implement\n    return nil\n}\n",
    "    // Your code goes here\n    return nil\n}\n",
    "    return nil\n}\n",
    "    // TODO: Implement\n    return nil\n}\n",
    "    return nil\n}\n",
    "    // TODO - Add your code here\n    return nil\n}\n",
    "    return nil\n}\n",
    "    // TODO\n    return nil\n}\n",
    "    // TODO: Implement\n    return nil\n}\n",
    "    // TODO: implement\n    return nil\n}\n",
    "    return nil\n}\n",
    "    // TODO: implement\n    return nil\n}\n",
    "    return nil\n}\n",
    "    // Your code goes here\n    return nil\n}\n",
    "    // TODO: Implement\n    return nil\n}\n",
    "    return nil\n}\n",
    "    return nil\n}\n",
    "    // TODO\n    return nil\n}\n",
    "    var h, s, v int\n    var max, min int\n    var delta int\n\n    max = r\n    if max < g {\n        max = g\n    }\n    if max < b {\n        max = b\n    }\n\n    min = r\n    if min > g {\n        min = g\n    }\n    if min > b {\n        min = b\n    }\n\n    delta = max - min\n    v = max\n\n    if max == 0 {\n        s = 0\n    } else {\n        s = delta * 100 / max\n    }\n\n    if delta == 0 {\n        h = 0\n    } else if r == max {\n        h = 60 * (g - b) / delta\n    } else if g == max {\n        h = 120 + 60 * (b - r) / delta\n    } else if b == max {\n        h = 240 + 60 * (r - g) / delta\n    }\n\n    if h < 0 {\n        h += 360\n    }\n\n    return fmt.Sprintf(\"%d, %d, %d\", h, s, v)\n}\n",
    "    return nil\n}\n",
    "    return nil\n}\n",
    "    var h, s, v float64\n    rf, gf, bf := float64(r), float64(g), float64(b)\n    cmax := max(rf, gf, bf)\n    cmin := min(rf, gf, bf)\n    delta := cmax - cmin\n    if delta == 0 {\n        h = 0\n    } else if cmax == rf {\n        h = 60 * ((gf - bf) / delta)\n    } else if cmax == gf {\n        h = 60 * ((bf - rf) / delta + 2)\n    } else if cmax == bf {\n        h = 60 * ((rf - gf) / delta + 4)\n    }\n    if cmax == 0 {\n        s = 0\n    } else {\n        s = delta / cmax\n    }\n    v = cmax\n    return map[string]float64{\"h\": h, \"s\": s, \"v\": v}\n}\n",
    "    // TODO\n    return nil\n}\n",
    "    return nil\n}\n",
    "    return nil\n}\n",
    "    // TODO - Add your code here\n    return nil\n}\n",
    "    // TODO: implement\n    return nil\n}\n",
    "    // TODO - Add your code here\n    return nil\n}\n",
    "    // your code here\n    return nil\n}\n",
    "    // TODO\n    return nil\n}\n",
    "    var h float64\n    var s float64\n    var v float64\n\n    var min float64\n    var max float64\n    var delta float64\n\n    rf := float64(r)\n    gf := float64(g)\n    bf := float64(b)\n\n    min = rf\n    if gf < min {\n        min = gf\n    }\n    if bf < min {\n        min = bf\n    }\n\n    max = rf\n    if gf > max {\n        max = gf\n    }\n    if bf > max {\n        max = bf\n    }\n\n    v = max\n\n    delta = max - min\n\n    if max != 0 {\n        s = delta / max\n    } else {\n        s = 0\n        h = -1\n        return map[string]interface{} {\n            \"h\": h,\n            \"s\": s,\n            \"v\": v,\n        }\n    }\n\n    if rf == max {\n        h = (gf - bf) / delta\n    } else if gf == max {\n        h = 2 + (bf - rf) / delta\n    } else {\n        h = 4 + (rf - gf) / delta\n    }\n\n    h *= 60\n    if h < 0 {\n        h += 360\n    }\n\n    return map[string]interface{} {\n        \"h\": h,\n        \"s\": s,\n        \"v\": v,\n    }\n}\n",
    "    // your code goes here\n    return nil\n}\n",
    "    var h, s, v int\n    var min, max, delta int\n    min = r\n    if g < min {\n        min = g\n    }\n    if b < min {\n        min = b\n    }\n    max = r\n    if g > max {\n        max = g\n    }\n    if b > max {\n        max = b\n    }\n    v = max\n    delta = max - min\n    if max != 0 {\n        s = delta * 100 / max\n    } else {\n        s = 0\n        h = -1\n        return map[string]int{\"h\": h, \"s\": s, \"v\": v}\n    }\n    if r == max {\n        h = (g - b) * 60 / delta\n    } else if g == max {\n        h = 120 + (b - r) * 60 / delta\n    } else {\n        h = 240 + (r - g) * 60 / delta\n    }\n    if h < 0 {\n        h += 360\n    }\n    return map[string]int{\"h\": h, \"s\": s, \"v\": v}\n}\n",
    "    var h int\n    var s int\n    var v int\n    var min int\n    var max int\n    var diff int\n\n    min = r\n    if g < min {\n        min = g\n    }\n    if b < min {\n        min = b\n    }\n\n    max = r\n    if g > max {\n        max = g\n    }\n    if b > max {\n        max = b\n    }\n\n    diff = max - min\n\n    if max == min {\n        h = 0\n    } else if max == r {\n        h = 60 * (g - b) / diff\n    } else if max == g {\n        h = 60 * (b - r) / diff + 120\n    } else if max == b {\n        h = 60 * (r - g) / diff + 240\n    }\n\n    if h < 0 {\n        h += 360\n    }\n\n    if max == 0 {\n        s = 0\n    } else {\n        s = diff / max\n    }\n\n    v = max\n\n    return map[string]int{\n        \"h\": h,\n        \"s\": s,\n        \"v\": v,\n    }\n}\n",
    "    // TODO: implement\n    return nil\n}\n",
    "    var h, s, v int\n    var min, max, delta int\n\n    if r > g {\n        max = r\n        min = g\n    } else {\n        max = g\n        min = r\n    }\n\n    if b > max {\n        max = b\n    } else if b < min {\n        min = b\n    }\n\n    v = max\n\n    delta = max - min\n\n    if max != 0 {\n        s = delta * 100 / max\n    } else {\n        s = 0\n        h = -1\n        return map[string]int{\"h\": h, \"s\": s, \"v\": v}\n    }\n\n    if r == max {\n        h = (g - b) * 60 / delta\n    } else if g == max {\n        h = 120 + (b - r) * 60 / delta\n    } else {\n        h = 240 + (r - g) * 60 / delta\n    }\n\n    if h < 0 {\n        h += 360\n    }\n\n    return map[string]int{\"h\": h, \"s\": s, \"v\": v}\n}\n",
    "    // TODO\n    return nil\n}\n",
    "    return nil\n}\n",
    "    var h float64\n    var s float64\n    var v float64\n    var max float64\n    var min float64\n    var diff float64\n\n    if r > g {\n        if r > b {\n            max = float64(r)\n        } else {\n            max = float64(b)\n        }\n    } else {\n        if g > b {\n            max = float64(g)\n        } else {\n            max = float64(b)\n        }\n    }\n\n    if r < g {\n        if r < b {\n            min = float64(r)\n        } else {\n            min = float64(b)\n        }\n    } else {\n        if g < b {\n            min = float64(g)\n        } else {\n            min = float64(b)\n        }\n    }\n\n    diff = max - min\n\n    if max == min {\n        h = 0\n    } else if max == float64(r) {\n        h = 60 * ((float64(g) - float64(b)) / diff)\n    } else if max == float64(g) {\n        h = 60 * ((float64(b) - float64(r)) / diff + 2)\n    } else if max == float64(b) {\n        h = 60 * ((float64(r) - float64(g)) / diff + 4)\n    }\n\n    if max == 0 {\n        s = 0\n    } else {\n        s = diff / max\n    }\n\n    v = max\n\n    return fmt.Sprintf(\"h: %.2f, s: %.2f, v: %.2f\", h, s, v)\n}\n",
    "    // TODO: implement\n    return nil\n}\n",
    "    // Your code goes here\n    return nil\n}\n",
    "    return nil\n}\n",
    "    // Your code goes here\n    return nil\n}\n",
    "    return nil\n}\n",
    "    var h, s, v float64\n    var max, min, delta int\n\n    max = max_of_three(r, g, b)\n    min = min_of_three(r, g, b)\n    delta = max - min\n\n    if delta == 0 {\n        h = 0\n    } else if max == r {\n        h = 60 * float64(g - b) / float64(delta)\n    } else if max == g {\n        h = 60 * float64(b - r) / float64(delta) + 120\n    } else if max == b {\n        h = 60 * float64(r - g) / float64(delta) + 240\n    }\n\n    if max == 0 {\n        s = 0\n    } else {\n        s = float64(delta) / float64(max)\n    }\n\n    v = float64(max) / 255\n\n    return map[string]interface{} {\n        \"h\": h,\n        \"s\": s,\n        \"v\": v,\n    }\n}\n",
    "    return nil\n}\n",
    "    // TODO - Add your code here\n    return nil\n}\n",
    "    return nil\n}\n",
    "    return nil\n}\n",
    "    // TODO: implement\n    return nil\n}\n",
    "    // TODO\n    return nil\n}\n",
    "    // TODO - Add your code here\n    return nil\n}\n",
    "    // TODO - Add your code here\n    return nil\n}\n",
    "    return nil\n}\n",
    "    // TODO - Add your code here\n    return nil\n}\n",
    "    // Your code goes here\n    return nil\n}\n",
    "    return nil\n}\n",
    "    return nil\n}\n",
    "    // TODO - Add your code here\n    return nil\n}\n",
    "    var h float64\n    var s float64\n    var v float64\n\n    r = r / 255\n    g = g / 255\n    b = b / 255\n\n    var min int\n    var max int\n\n    if r > g {\n        max = r\n        min = g\n    } else {\n        max = g\n        min = r\n    }\n\n    if b > max {\n        max = b\n    } else if b < min {\n        min = b\n    }\n\n    v = float64(max)\n\n    if max == 0 {\n        s = 0\n    } else {\n        s = float64(max - min) / float64(max)\n    }\n\n    if max == min {\n        h = 0\n    } else {\n        if max == r {\n            h = 60 * (float64(g - b) / float64(max - min))\n        } else if max == g {\n            h = 60 * (2 + float64(b - r) / float64(max - min))\n        } else if max == b {\n            h = 60 * (4 + float64(r - g) / float64(max - min))\n        }\n    }\n\n    if h < 0 {\n        h += 360\n    }\n\n    return fmt.Sprintf(\"H: %.2f, S: %.2f, V: %.2f\", h, s, v)\n}\n",
    "    return nil\n}\n",
    "    // Your code goes here\n    return nil\n}\n",
    "    rf := float64(r)\n    gf := float64(g)\n    bf := float64(b)\n\n    cmax := rf\n    if gf > cmax {\n        cmax = gf\n    }\n    if bf > cmax {\n        cmax = bf\n    }\n\n    cmin := rf\n    if gf < cmin {\n        cmin = gf\n    }\n    if bf < cmin {\n        cmin = bf\n    }\n\n    delta := cmax - cmin\n\n    h := 0.0\n    if delta == 0 {\n        h = 0\n    } else if cmax == rf {\n        h = 60 * ((gf - bf) / delta)\n    } else if cmax == gf {\n        h = 60 * ((bf - rf) / delta + 2)\n    } else if cmax == bf {\n        h = 60 * ((rf - gf) / delta + 4)\n    }\n\n    if h < 0 {\n        h += 360\n    }\n\n    s := 0.0\n    if cmax == 0 {\n        s = 0\n    } else {\n        s = delta / cmax\n    }\n\n    v := cmax\n\n    return []float64{h, s, v}\n}\n",
    "    var h, s, v float64\n    rf, gf, bf := float64(r), float64(g), float64(b)\n    cmax := max(rf, gf, bf)\n    cmin := min(rf, gf, bf)\n    delta := cmax - cmin\n\n    if delta == 0 {\n        h = 0\n    } else if cmax == rf {\n        h = 60 * ((gf - bf) / delta)\n    } else if cmax == gf {\n        h = 60 * ((bf - rf) / delta + 2)\n    } else {\n        h = 60 * ((rf - gf) / delta + 4)\n    }\n\n    if cmax == 0 {\n        s = 0\n    } else {\n        s = delta / cmax\n    }\n\n    v = cmax\n\n    return fmt.Sprintf(\"%f %f %f\", h, s, v)\n}\n",
    "    var h, s, v int\n    var min, max, delta int\n\n    min = r\n    if g < min {\n        min = g\n    }\n    if b < min {\n        min = b\n    }\n\n    max = r\n    if g > max {\n        max = g\n    }\n    if b > max {\n        max = b\n    }\n\n    v = max\n\n    delta = max - min\n\n    if max != 0 {\n        s = delta * 100 / max\n    } else {\n        s = 0\n        h = -1\n        return map[string]int{\"h\": h, \"s\": s, \"v\": v}\n    }\n\n    if r == max {\n        h = (g - b) * 60 / delta\n    } else if g == max {\n        h = 120 + (b - r) * 60 / delta\n    } else {\n        h = 240 + (r - g) * 60 / delta\n    }\n\n    if h < 0 {\n        h += 360\n    }\n\n    return map[string]int{\"h\": h, \"s\": s, \"v\": v}\n}\n",
    "    return nil\n}\n",
    "    return nil\n}\n",
    "    return nil\n}\n",
    "    var h, s, v int\n    var min, max, delta int\n    min = r\n    if g < min {\n        min = g\n    }\n    if b < min {\n        min = b\n    }\n    max = r\n    if g > max {\n        max = g\n    }\n    if b > max {\n        max = b\n    }\n    v = max\n    delta = max - min\n    if max != 0 {\n        s = delta * 100 / max\n    } else {\n        s = 0\n        h = -1\n        return fmt.Sprintf(\"%d %d %d\", h, s, v)\n    }\n    if r == max {\n        h = (g - b) * 60 / delta\n    } else if g == max {\n        h = 120 + (b - r) * 60 / delta\n    } else {\n        h = 240 + (r - g) * 60 / delta\n    }\n    if h < 0 {\n        h += 360\n    }\n    return fmt.Sprintf(\"%d %d %d\", h, s, v)\n}\n",
    "    // Your code goes here\n    return nil\n}\n",
    "    return nil\n}\n",
    "    // TODO - Add your code here\n    return nil\n}\n",
    "    return nil\n}\n",
    "    return nil\n}\n",
    "    return nil\n}\n",
    "    // TODO: Implement this function\n    return nil\n}\n",
    "    // TODO: implement\n    return nil\n}\n",
    "    var h, s, v int\n    var min, max, delta int\n    min = r\n    if g < min {\n        min = g\n    }\n    if b < min {\n        min = b\n    }\n    max = r\n    if g > max {\n        max = g\n    }\n    if b > max {\n        max = b\n    }\n    v = max\n    delta = max - min\n    if max != 0 {\n        s = delta * 100 / max\n    } else {\n        s = 0\n        h = -1\n        return []int{h, s, v}\n    }\n    if r == max {\n        h = (g - b) * 60 / delta\n    } else if g == max {\n        h = 120 + (b - r) * 60 / delta\n    } else {\n        h = 240 + (r - g) * 60 / delta\n    }\n    if h < 0 {\n        h += 360\n    }\n    return []int{h, s, v}\n}\n",
    "    rf := float64(r) / 255.0\n    gf := float64(g) / 255.0\n    bf := float64(b) / 255.0\n\n    max := rf\n    if gf > max {\n        max = gf\n    }\n    if bf > max {\n        max = bf\n    }\n\n    min := rf\n    if gf < min {\n        min = gf\n    }\n    if bf < min {\n        min = bf\n    }\n\n    diff := max - min\n    var h float64\n    if diff == 0 {\n        h = 0\n    } else if max == rf {\n        h = 60 * ((gf - bf) / diff)\n    } else if max == gf {\n        h = 60 * ((bf - rf) / diff) + 120\n    } else if max == bf {\n        h = 60 * ((rf - gf) / diff) + 240\n    }\n\n    if h < 0 {\n        h += 360\n    }\n\n    var s float64\n    if max == 0 {\n        s = 0\n    } else {\n        s = diff / max\n    }\n\n    v := max\n\n    return []float64{h, s, v}\n}\n",
    "    return nil\n}\n",
    "    var h, s, v float64\n    var max, min int\n    var diff int\n\n    max = r\n    if g > max {\n        max = g\n    }\n    if b > max {\n        max = b\n    }\n\n    min = r\n    if g < min {\n        min = g\n    }\n    if b < min {\n        min = b\n    }\n\n    diff = max - min\n\n    if max == min {\n        h = 0\n    } else if max == r {\n        h = float64(60 * (g - b) / diff)\n    } else if max == g {\n        h = float64(60 * (b - r) / diff + 120)\n    } else if max == b {\n        h = float64(60 * (r - g) / diff + 240)\n    }\n\n    if h < 0 {\n        h += 360\n    }\n\n    if max == 0 {\n        s = 0\n    } else {\n        s = float64(diff) / float64(max)\n    }\n\n    v = float64(max) / 255\n\n    return map[string]float64{\"h\": h, \"s\": s, \"v\": v}\n}\n",
    "    // TODO - Add your code here\n    return nil\n}\n",
    "    var h float64\n    var s float64\n    var v float64\n\n    r_f := float64(r)\n    g_f := float64(g)\n    b_f := float64(b)\n\n    c_max := max(r_f, g_f, b_f)\n    c_min := min(r_f, g_f, b_f)\n    delta := c_max - c_min\n\n    if delta == 0 {\n        h = 0\n    } else if c_max == r_f {\n        h = 60 * ((g_f - b_f) / delta)\n    } else if c_max == g_f {\n        h = 60 * ((b_f - r_f) / delta + 2)\n    } else if c_max == b_f {\n        h = 60 * ((r_f - g_f) / delta + 4)\n    }\n\n    if h < 0 {\n        h += 360\n    }\n\n    if c_max == 0 {\n        s = 0\n    } else {\n        s = delta / c_max\n    }\n\n    v = c_max\n\n    return map[string]interface{}{\n        \"h\": h,\n        \"s\": s,\n        \"v\": v,\n    }\n}\n",
    "    // Your code goes here\n    return nil\n}\n",
    "    return nil\n}\n",
    "    var h, s, v int\n    var min, max, delta int\n    min = min(r, min(g, b))\n    max = max(r, max(g, b))\n    v = max\n    delta = max - min\n    if max != 0 {\n        s = delta * 100 / max\n    } else {\n        s = 0\n        h = -1\n        return map[string]int{\"h\": h, \"s\": s, \"v\": v}\n    }\n    if r == max {\n        h = (g - b) * 60 / delta\n    } else if g == max {\n        h = 120 + (b - r) * 60 / delta\n    } else {\n        h = 240 + (r - g) * 60 / delta\n    }\n    if h < 0 {\n        h += 360\n    }\n    return map[string]int{\"h\": h, \"s\": s, \"v\": v}\n}\n",
    "    return nil\n}\n",
    "    // TODO: Implement\n    return nil\n}\n",
    "    var h, s, v int\n    var min, max, delta int\n    min = min_int(r, g, b)\n    max = max_int(r, g, b)\n    v = max\n    delta = max - min\n    if max != 0 {\n        s = delta * 100 / max\n    } else {\n        s = 0\n        h = -1\n        return map[string]int{\"h\": h, \"s\": s, \"v\": v}\n    }\n    if r == max {\n        h = (g - b) * 60 / delta\n    } else if g == max {\n        h = (b - r) * 60 / delta + 120\n    } else {\n        h = (r - g) * 60 / delta + 240\n    }\n    if h < 0 {\n        h += 360\n    }\n    return map[string]int{\"h\": h, \"s\": s, \"v\": v}\n}\n",
    "    // Your code goes here\n    return nil\n}\n",
    "    // TODO: implement\n    return nil\n}\n",
    "    var h, s, v float64\n    var max, min float64\n    var diff float64\n\n    max = float64(r)\n    if float64(g) > max {\n        max = float64(g)\n    }\n    if float64(b) > max {\n        max = float64(b)\n    }\n\n    min = float64(r)\n    if float64(g) < min {\n        min = float64(g)\n    }\n    if float64(b) < min {\n        min = float64(b)\n    }\n\n    diff = max - min\n\n    if max == 0 {\n        s = 0\n    } else {\n        s = diff / max\n    }\n\n    if diff == 0 {\n        h = 0\n    } else if max == float64(r) {\n        h = 60 * ((float64(g) - float64(b)) / diff)\n    } else if max == float64(g) {\n        h = 60 * (2 + (float64(b) - float64(r)) / diff)\n    } else if max == float64(b) {\n        h = 60 * (4 + (float64(r) - float64(g)) / diff)\n    }\n\n    if h < 0 {\n        h += 360\n    }\n\n    v = max / 255\n\n    return fmt.Sprintf(\"H: %f S: %f V: %f\", h, s, v)\n}\n",
    "    // TODO - Add your code here\n    return nil\n}\n",
    "    var h, s, v int\n    var min, max, delta int\n\n    min = r\n    if g < min {\n        min = g\n    }\n    if b < min {\n        min = b\n    }\n\n    max = r\n    if g > max {\n        max = g\n    }\n    if b > max {\n        max = b\n    }\n\n    v = max\n\n    delta = max - min\n\n    if max != 0 {\n        s = delta * 100 / max\n    } else {\n        s = 0\n        h = -1\n        return fmt.Sprintf(\"%d %d %d\", h, s, v)\n    }\n\n    if r == max {\n        h = (g - b) * 60 / delta\n    } else if g == max {\n        h = 120 + (b - r) * 60 / delta\n    } else {\n        h = 240 + (r - g) * 60 / delta\n    }\n\n    if h < 0 {\n        h += 360\n    }\n\n    return fmt.Sprintf(\"%d %d %d\", h, s, v)\n}\n",
    "    // TODO: implement\n    return nil\n}\n",
    "    var h int\n    var s int\n    var v int\n    var min int\n    var max int\n    var delta int\n\n    min = r\n    if g < min {\n        min = g\n    }\n    if b < min {\n        min = b\n    }\n\n    max = r\n    if g > max {\n        max = g\n    }\n    if b > max {\n        max = b\n    }\n\n    v = max\n\n    delta = max - min\n\n    if max != 0 {\n        s = delta * 100 / max\n    } else {\n        s = 0\n        h = -1\n        return map[string]int{\"h\": h, \"s\": s, \"v\": v}\n    }\n\n    if r == max {\n        h = (g - b) * 60 / delta\n    } else if g == max {\n        h = 120 + (b - r) * 60 / delta\n    } else {\n        h = 240 + (r - g) * 60 / delta\n    }\n\n    if h < 0 {\n        h += 360\n    }\n\n    return map[string]int{\"h\": h, \"s\": s, \"v\": v}\n}\n",
    "    // TODO - Add your code here\n    return nil\n}\n",
    "    // TODO - Add your code here\n    return nil\n}\n",
    "    var h, s, v float64\n    var max, min int\n    if r > g {\n        max = r\n        min = g\n    } else {\n        max = g\n        min = r\n    }\n    if b > max {\n        max = b\n    }\n    if b < min {\n        min = b\n    }\n    v = float64(max) / 255\n    if max == 0 {\n        s = 0\n    } else {\n        s = float64(max - min) / float64(max)\n    }\n    if max == min {\n        h = 0\n    } else {\n        switch max {\n        case r:\n            h = 60 * (float64(g - b) / float64(max - min))\n        case g:\n            h = 60 * (2 + float64(b - r) / float64(max - min))\n        case b:\n            h = 60 * (4 + float64(r - g) / float64(max - min))\n        }\n    }\n    if h < 0 {\n        h += 360\n    }\n    return fmt.Sprintf(\"h: %.2f, s: %.2f, v: %.2f\", h, s, v)\n}\n",
    "    return nil\n}\n",
    "    // TODO\n    return nil\n}\n",
    "    // TODO: implement\n    return nil\n}\n",
    "    // TODO: Implement this function\n    return nil\n}\n",
    "    var h int\n    var s int\n    var v int\n    var cmax int\n    var cmin int\n    var diff int\n    var rd float64\n    var gd float64\n    var bd float64\n\n    rd = float64(r) / 255\n    gd = float64(g) / 255\n    bd = float64(b) / 255\n\n    cmax = max(r, g, b)\n    cmin = min(r, g, b)\n    diff = cmax - cmin\n\n    if cmax == cmin {\n        h = 0\n    } else if cmax == r {\n        h = 60 * ((int(gd) - int(bd)) / diff)\n    } else if cmax == g {\n        h = 60 * ((int(bd) - int(rd)) / diff + 2)\n    } else if cmax == b {\n        h = 60 * ((int(rd) - int(gd)) / diff + 4)\n    }\n\n    if cmax == 0 {\n        s = 0\n    } else {\n        s = diff / cmax\n    }\n\n    v = cmax\n\n    return fmt.Sprintf(\"%d, %d, %d\", h, s, v)\n}\n",
    "    // TODO - Add your code here\n    return nil\n}\n",
    "    // Your code goes here\n    return nil\n}\n",
    "    var h, s, v float64\n    var min, max, delta float64\n    min = float64(r)\n    if float64(g) < min {\n        min = float64(g)\n    }\n    if float64(b) < min {\n        min = float64(b)\n    }\n    max = float64(r)\n    if float64(g) > max {\n        max = float64(g)\n    }\n    if float64(b) > max {\n        max = float64(b)\n    }\n    v = max\n    delta = max - min\n    if max != 0 {\n        s = delta / max\n    } else {\n        s = 0\n        h = -1\n        return []float64{h, s, v}\n    }\n    if float64(r) == max {\n        h = (float64(g) - float64(b)) / delta\n    } else if float64(g) == max {\n        h = 2 + (float64(b) - float64(r)) / delta\n    } else {\n        h = 4 + (float64(r) - float64(g)) / delta\n    }\n    h *= 60\n    if h < 0 {\n        h += 360\n    }\n    return []float64{h, s, v}\n}\n",
    "    // TODO\n    return nil\n}\n",
    "    // TODO\n    return nil\n}\n",
    "    var h, s, v float64\n    var min, max, delta float64\n    min = float64(r)\n    if float64(g) < min {\n        min = float64(g)\n    }\n    if float64(b) < min {\n        min = float64(b)\n    }\n    max = float64(r)\n    if float64(g) > max {\n        max = float64(g)\n    }\n    if float64(b) > max {\n        max = float64(b)\n    }\n    v = max\n    delta = max - min\n    if max != 0 {\n        s = delta / max\n    } else {\n        s = 0\n        h = -1\n        return fmt.Sprintf(\"H: %f, S: %f, V: %f\", h, s, v)\n    }\n    if float64(r) == max {\n        h = (float64(g) - float64(b)) / delta\n    } else if float64(g) == max {\n        h = 2 + (float64(b) - float64(r)) / delta\n    } else {\n        h = 4 + (float64(r) - float64(g)) / delta\n    }\n    h *= 60\n    if h < 0 {\n        h += 360\n    }\n    return fmt.Sprintf(\"H: %f, S: %f, V: %f\", h, s, v)\n}\n",
    "    return nil\n}\n",
    "    // TODO: implement\n    return nil\n}\n",
    "    // Your code goes here\n    return nil\n}\n",
    "    var h, s, v float64\n    r = r / 255\n    g = g / 255\n    b = b / 255\n    cmax := max(r, g, b)\n    cmin := min(r, g, b)\n    delta := cmax - cmin\n    if delta == 0 {\n        h = 0\n    } else if cmax == r {\n        h = 60 * ((g - b) / delta)\n    } else if cmax == g {\n        h = 60 * ((b - r) / delta) + 120\n    } else if cmax == b {\n        h = 60 * ((r - g) / delta) + 240\n    }\n    if cmax == 0 {\n        s = 0\n    } else {\n        s = delta / cmax\n    }\n    v = cmax\n    return fmt.Sprintf(\"%f, %f, %f\", h, s, v)\n}\n",
    "    // Your code goes here\n    return nil\n}\n",
    "    return nil\n}\n",
    "    var h int\n    var s int\n    var v int\n    var cmax int\n    var cmin int\n    var diff int\n\n    cmax = max(r, g, b)\n    cmin = min(r, g, b)\n    diff = cmax - cmin\n\n    if cmax == cmin {\n        h = 0\n    } else if cmax == r {\n        h = 60 * ((g - b) / diff) % 360\n    } else if cmax == g {\n        h = 60 * ((b - r) / diff) + 120\n    } else if cmax == b {\n        h = 60 * ((r - g) / diff) + 240\n    }\n\n    if cmax == 0 {\n        s = 0\n    } else {\n        s = diff / cmax\n    }\n\n    v = cmax\n\n    return fmt.Sprintf(\"%d, %d, %d\", h, s, v)\n}\n",
    "    // your code goes here\n    return nil\n}\n",
    "    // Your code goes here\n    return nil\n}\n",
    "    // TODO - Add your code here\n    return nil\n}\n",
    "    // TODO: implement\n    return nil\n}\n",
    "    // TODO: implement\n    return nil\n}\n",
    "    // TODO: Implement\n    return nil\n}\n",
    "    // TODO - Add your code here\n    return nil\n}\n",
    "    return nil\n}\n",
    "    var h, s, v int\n    var min, max, delta int\n    min = r\n    if g < min {\n        min = g\n    }\n    if b < min {\n        min = b\n    }\n    max = r\n    if g > max {\n        max = g\n    }\n    if b > max {\n        max = b\n    }\n    v = max\n    delta = max - min\n    if max != 0 {\n        s = delta * 100 / max\n    } else {\n        s = 0\n        h = -1\n        return [3]int{h, s, v}\n    }\n    if r == max {\n        h = (g - b) * 60 / delta\n    } else if g == max {\n        h = 120 + (b - r) * 60 / delta\n    } else {\n        h = 240 + (r - g) * 60 / delta\n    }\n    if h < 0 {\n        h += 360\n    }\n    return [3]int{h, s, v}\n}\n",
    "    // Write your code here\n    return nil\n}\n",
    "    // TODO: implement\n    return nil\n}\n",
    "    var h, s, v int\n    cmax := max(r, g, b)\n    cmin := min(r, g, b)\n    delta := cmax - cmin\n\n    if delta == 0 {\n        h = 0\n    } else if cmax == r {\n        h = 60 * ((g - b) / delta) % 360\n    } else if cmax == g {\n        h = 60 * ((b - r) / delta + 2)\n    } else if cmax == b {\n        h = 60 * ((r - g) / delta + 4)\n    }\n\n    if cmax == 0 {\n        s = 0\n    } else {\n        s = delta / cmax\n    }\n\n    v = cmax\n\n    return map[string]int{\"h\": h, \"s\": s, \"v\": v}\n}\n",
    "    var h, s, v int\n    var min, max, delta int\n\n    min = r\n    if g < min {\n        min = g\n    }\n    if b < min {\n        min = b\n    }\n\n    max = r\n    if g > max {\n        max = g\n    }\n    if b > max {\n        max = b\n    }\n\n    v = max\n\n    delta = max - min\n\n    if max != 0 {\n        s = delta * 100 / max\n    } else {\n        s = 0\n    }\n\n    if s == 0 {\n        h = 0\n    } else {\n        if r == max {\n            h = (g - b) * 60 / delta\n        } else if g == max {\n            h = 120 + (b - r) * 60 / delta\n        } else {\n            h = 240 + (r - g) * 60 / delta\n        }\n\n        if h < 0 {\n            h += 360\n        }\n    }\n\n    return fmt.Sprintf(\"H: %d, S: %d, V: %d\", h, s, v)\n}\n",
    "    // TODO: Implement\n    return nil\n}\n",
    "    var h, s, v int\n    var min, max, delta int\n\n    if r > g {\n        max = r\n        min = g\n    } else {\n        max = g\n        min = r\n    }\n\n    if b > max {\n        max = b\n    } else if b < min {\n        min = b\n    }\n\n    v = max\n\n    delta = max - min\n\n    if max != 0 {\n        s = delta * 100 / max\n    } else {\n        s = 0\n        h = -1\n        return fmt.Sprintf(\"%d, %d, %d\", h, s, v)\n    }\n\n    if r == max {\n        h = (g - b) * 60 / delta\n    } else if g == max {\n        h = 120 + (b - r) * 60 / delta\n    } else {\n        h = 240 + (r - g) * 60 / delta\n    }\n\n    if h < 0 {\n        h += 360\n    }\n\n    return fmt.Sprintf(\"%d, %d, %d\", h, s, v)\n}\n",
    "    // TODO: Implement\n    return nil\n}\n",
    "    var h, s, v int\n    var min, max, delta int\n\n    min = r\n    if g < min {\n        min = g\n    }\n    if b < min {\n        min = b\n    }\n\n    max = r\n    if g > max {\n        max = g\n    }\n    if b > max {\n        max = b\n    }\n\n    v = max\n    delta = max - min\n    if max != 0 {\n        s = delta * 100 / max\n    } else {\n        s = 0\n        h = -1\n        return map[string]int{\n            \"h\": h,\n            \"s\": s,\n            \"v\": v,\n        }\n    }\n\n    if r == max {\n        h = (g - b) * 60 / delta\n    } else if g == max {\n        h = 120 + (b - r) * 60 / delta\n    } else {\n        h = 240 + (r - g) * 60 / delta\n    }\n\n    if h < 0 {\n        h += 360\n    }\n\n    return map[string]int{\n        \"h\": h,\n        \"s\": s,\n        \"v\": v,\n    }\n}\n",
    "    var h int\n    var s int\n    var v int\n\n    var max int\n    var min int\n\n    if r > g {\n        max = r\n        min = g\n    } else {\n        max = g\n        min = r\n    }\n\n    if b > max {\n        max = b\n    } else if b < min {\n        min = b\n    }\n\n    v = max\n\n    if max == 0 {\n        s = 0\n    } else {\n        s = (max - min) * 100 / max\n    }\n\n    if max == min {\n        h = 0\n    } else if max == r {\n        h = 60 * (g - b) / (max - min)\n    } else if max == g {\n        h = 60 * (b - r) / (max - min) + 120\n    } else if max == b {\n        h = 60 * (r - g) / (max - min) + 240\n    }\n\n    if h < 0 {\n        h += 360\n    }\n\n    return map[string]int{\"h\": h, \"s\": s, \"v\": v}\n}\n",
    "    return nil\n}\n",
    "    // Your code goes here\n    return nil\n}\n",
    "    return nil\n}\n",
    "    return nil\n}\n",
    "    return nil\n}\n",
    "    var h, s, v float64\n    var min, max, delta int\n\n    if r > g {\n        max = r\n        min = g\n    } else {\n        max = g\n        min = r\n    }\n\n    if b > max {\n        max = b\n    }\n\n    if b < min {\n        min = b\n    }\n\n    delta = max - min\n\n    v = float64(max) / 255.0\n\n    if max != 0 {\n        s = float64(delta) / float64(max)\n    } else {\n        s = 0\n        h = -1\n        return fmt.Sprintf(\"%d, %d, %d\", int(h), int(s), int(v))\n    }\n\n    if r == max {\n        h = float64(g - b) / float64(delta)\n    } else if g == max {\n        h = 2 + float64(b - r) / float64(delta)\n    } else {\n        h = 4 + float64(r - g) / float64(delta)\n    }\n\n    h *= 60\n\n    if h < 0 {\n        h += 360\n    }\n\n    return fmt.Sprintf(\"%d, %d, %d\", int(h), int(s), int(v))\n}\n",
    "    // TODO - Add your code here\n    return nil\n}\n",
    "    // Your code goes here\n    return nil\n}\n",
    "    return nil\n}\n",
    "    return nil\n}\n",
    "    // TODO: Implement\n    return nil\n}\n",
    "    return nil\n}\n",
    "    return nil\n}\n",
    "    // TODO: Implement\n    return nil\n}\n",
    "    return nil\n}\n",
    "    // TODO - Add your code here\n    return nil\n}\n",
    "    // Your code goes here\n    return nil\n}\n",
    "    // TODO - Add your code here\n    return nil\n}\n",
    "    var h,s,v int\n    var max, min int\n    if r > g {\n        max = r\n        min = g\n    } else {\n        max = g\n        min = r\n    }\n    if b > max {\n        max = b\n    } else if b < min {\n        min = b\n    }\n    v = max\n    if max == 0 {\n        s = 0\n    } else {\n        s = 255 * (max - min) / max\n    }\n    if max == min {\n        h = 0\n    } else {\n        if max == r {\n            if g >= b {\n                h = 60 * (g - b) / (max - min)\n            } else {\n                h = 60 * (g - b) / (max - min) + 360\n            }\n        } else if max == g {\n            h = 60 * (b - r) / (max - min) + 120\n        } else if max == b {\n            h = 60 * (r - g) / (max - min) + 240\n        }\n    }\n    return map[string]int{\"h\":h, \"s\":s, \"v\":v}\n}\n",
    "    // TODO: implement\n    return nil\n}\n",
    "    return nil\n}\n",
    "    // Your code goes here\n    return nil\n}\n",
    "    // TODO: implement\n    return nil\n}\n",
    "    return nil\n}\n",
    "    return nil\n}\n",
    "    return nil\n}\n",
    "    // TODO: Write - Your - Code\n    return nil\n}\n",
    "    // TODO: implement\n    return nil\n}\n",
    "    var h, s, v float64\n    var min, max, delta float64\n    min = float64(r)\n    if min > float64(g) {\n        min = float64(g)\n    }\n    if min > float64(b) {\n        min = float64(b)\n    }\n    max = float64(r)\n    if max < float64(g) {\n        max = float64(g)\n    }\n    if max < float64(b) {\n        max = float64(b)\n    }\n    v = max\n    delta = max - min\n    if max != 0 {\n        s = delta / max\n    } else {\n        s = 0\n        h = -1\n        return map[string]interface{}{\"h\": h, \"s\": s, \"v\": v}\n    }\n    if float64(r) == max {\n        h = (float64(g) - float64(b)) / delta\n    } else if float64(g) == max {\n        h = 2 + (float64(b) - float64(r)) / delta\n    } else {\n        h = 4 + (float64(r) - float64(g)) / delta\n    }\n    h *= 60\n    if h < 0 {\n        h += 360\n    }\n    return map[string]interface{}{\"h\": h, \"s\": s, \"v\": v}\n}\n",
    "    // TODO - Add your code here\n    return nil\n}\n",
    "    // Write your code here\n    return nil\n}\n"
  ]
}
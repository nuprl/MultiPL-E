{
  "name": "mbpp_797_sum_in_range",
  "language": "go_test.go",
  "prompt": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_797_sum_in_range.py",
  "prompt_terminology": "verbatim",
  "tests": "func TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
  "stop_tokens": [
    "\nfunc",
    "struct",
    "\n// "
  ],
  "results": [
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 == 1 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    var sum int\n    for i := l; i <= r; i++ {\n        if i % 2 == 1 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    var sum int\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    var sum int\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    var sum int\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    // your code here\n    return 0\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "--- FAIL: TestSum_In_Range (0.00s)\n    --- FAIL: TestSum_In_Range/test_num__0 (0.00s)\n        tmpe_gg9h6y_test.go:29: expected '%!s(int=8)', got '%!s(int=0)'\n    --- FAIL: TestSum_In_Range/test_num__1 (0.00s)\n        tmpe_gg9h6y_test.go:29: expected '%!s(int=12)', got '%!s(int=0)'\n    --- FAIL: TestSum_In_Range/test_num__2 (0.00s)\n        tmpe_gg9h6y_test.go:29: expected '%!s(int=40)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    var sum int = 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    var sum int\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    var sum int = 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    var sum int\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    var sum int\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    var sum int\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    var sum int\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    var sum int = 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    var sum int = 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    var sum int\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    var sum int\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    var sum int\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    var sum int = 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    var sum int = 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    var sum int\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    var sum int\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 == 1 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 == 1 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    var sum int\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    var sum int\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    var sum int = 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    var sum int\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    var sum int\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    var sum int\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 == 1 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    var sum int\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    var sum int\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    var sum int\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    var sum int\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 == 1 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    var sum int\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    var sum int = 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    var sum int\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    var sum int\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    var sum int = 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    var sum int\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    var sum int\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    var sum int = 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    var sum int\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    var sum int\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    var sum int = 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 == 1 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    var sum int\n    for i := l; i <= r; i++ {\n        if i % 2 == 1 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    var sum int\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 == 1 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    var sum int\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    var sum int = 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    var sum int\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    var sum int\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    var sum int\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    var sum int\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    var sum int = 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    var sum int\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    var sum int = 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    var sum int\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    var sum int = 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    var sum int\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    var sum int\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 == 1 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    var sum int\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 == 1 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    var sum int\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    var sum int\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    var sum int\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    var sum int = 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    var sum int\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    var sum int = 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package sum_in_range_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the sum of all odd natural numbers within the range l and r.\nfunc sum_in_range(l int, r int) int {\n    sum := 0\n    for i := l; i <= r; i++ {\n        if i % 2 != 0 {\n            sum += i\n        }\n    }\n    return sum\n}\n\nfunc TestSum_In_Range(t *testing.T) {\n  candidate := sum_in_range\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2, 5), expected: 8 },\n     { actual: candidate(5, 7), expected: 12 },\n     { actual: candidate(7, 13), expected: 40 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665517192,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
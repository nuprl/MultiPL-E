{
  "name": "mbpp_581_surface_Area",
  "language": "go_test.go",
  "prompt": "package surface_Area_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a python function to find the surface area of a square pyramid with a given base edge and height.\nfunc surface_Area(b int, s int) int {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_581_surface_Area.py",
  "prompt_terminology": "verbatim",
  "tests": "func TestSurface_Area(t *testing.T) {\n  candidate := surface_Area\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3, 4), expected: 33 },\n     { actual: candidate(4, 5), expected: 56 },\n     { actual: candidate(1, 2), expected: 5 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
  "stop_tokens": [
    "\nfunc",
    "struct",
    "\n// "
  ],
  "completions": [
    "    return b * b + 2 * b * s\n}\n",
    "    return b * b + 2 * b * s\n}\n",
    "    return b * b + 2 * b * s\n}\n",
    "    return b * b + 2 * b * s\n}\n",
    "    return (b * b) + (2 * b * s)\n}\n",
    "    return b * s * 2 + b * b\n}\n",
    "    return b*b + 2*b*s\n}\n",
    "    return (b * b) + (2 * b * s)\n}\n",
    "    return b * b + 2 * b * s\n}\n",
    "    return (b * b) + (2 * b * s)\n}\n",
    "    return (b * s) + (b * b)\n}\n",
    "    return (b * b) + (2 * b * s)\n}\n",
    "    return (b * b) + (2 * b * s)\n}\n",
    "    return b * b + 2 * b * s\n}\n",
    "    return b * b + 2 * b * s\n}\n",
    "    return b * b + 2 * b * s\n}\n",
    "    return (b * b) + (2 * b * s)\n}\n",
    "    return (b * s) + (b * b)\n}\n",
    "    return (b * s) + (b * b)\n}\n",
    "    return b*b + 2*b*s\n}\n"
  ]
}
{
  "name": "mbpp_427_change_date_format",
  "language": "go_test.go",
  "prompt": "package change_date_format_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfunc change_date_format(dt string) string {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_427_change_date_format.py",
  "prompt_terminology": "verbatim",
  "tests": "func TestChange_Date_Format(t *testing.T) {\n  candidate := change_date_format\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"2026-01-02\"), expected: \"02-01-2026\" },\n     { actual: candidate(\"2020-11-13\"), expected: \"13-11-2020\" },\n     { actual: candidate(\"2021-04-26\"), expected: \"26-04-2021\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
  "stop_tokens": [
    "\nfunc",
    "struct",
    "\n// "
  ],
  "completions": [
    "    return dt[8:10] + \"-\" + dt[5:7] + \"-\" + dt[0:4]\n}\n",
    "    return dt[8:10] + \"-\" + dt[5:7] + \"-\" + dt[0:4]\n}\n",
    "    return dt[8:10] + \"-\" + dt[5:7] + \"-\" + dt[0:4]\n}\n",
    "    return dt[8:10] + \"-\" + dt[5:7] + \"-\" + dt[0:4]\n}\n",
    "    return fmt.Sprintf(\"%s-%s-%s\", dt[8:10], dt[5:7], dt[0:4])\n}\n",
    "    return dt[8:10] + \"-\" + dt[5:7] + \"-\" + dt[0:4]\n}\n",
    "    var year, month, day string\n    var i int\n    for i = 0; i < 4; i++ {\n        year += string(dt[i])\n    }\n    for i = 5; i < 7; i++ {\n        month += string(dt[i])\n    }\n    for i = 8; i < 10; i++ {\n        day += string(dt[i])\n    }\n    return day + \"-\" + month + \"-\" + year\n}\n",
    "    var year, month, day string\n    year = dt[0:4]\n    month = dt[5:7]\n    day = dt[8:10]\n    return fmt.Sprintf(\"%s-%s-%s\", day, month, year)\n}\n",
    "    var year, month, day string\n    var i int\n    for i = 0; i < 4; i++ {\n        year += string(dt[i])\n    }\n    for i = 5; i < 7; i++ {\n        month += string(dt[i])\n    }\n    for i = 8; i < 10; i++ {\n        day += string(dt[i])\n    }\n    return day + \"-\" + month + \"-\" + year\n}\n",
    "    return fmt.Sprintf(\"%s-%s-%s\", dt[8:10], dt[5:7], dt[0:4])\n}\n",
    "    return fmt.Sprintf(\"%s-%s-%s\", dt[8:10], dt[5:7], dt[0:4])\n}\n",
    "    var dt_arr []string = strings.Split(dt, \"-\")\n    return fmt.Sprintf(\"%s-%s-%s\", dt_arr[2], dt_arr[1], dt_arr[0])\n}\n",
    "    return fmt.Sprintf(\"%s-%s-%s\", dt[8:], dt[5:7], dt[0:4])\n}\n",
    "    return fmt.Sprintf(\"%s-%s-%s\", dt[8:10], dt[5:7], dt[0:4])\n}\n",
    "    return dt[8:10] + \"-\" + dt[5:7] + \"-\" + dt[0:4]\n}\n",
    "    var year, month, day string\n    var i int\n    for i = 0; i < 4; i++ {\n        year += string(dt[i])\n    }\n    for i = 5; i < 7; i++ {\n        month += string(dt[i])\n    }\n    for i = 8; i < 10; i++ {\n        day += string(dt[i])\n    }\n    return day + \"-\" + month + \"-\" + year\n}\n",
    "    var year, month, day string\n    var i int\n    for i = 0; i < 4; i++ {\n        year += string(dt[i])\n    }\n    for i = 5; i < 7; i++ {\n        month += string(dt[i])\n    }\n    for i = 8; i < 10; i++ {\n        day += string(dt[i])\n    }\n    return day + \"-\" + month + \"-\" + year\n}\n",
    "    var year, month, day string\n    var i int\n    for i = 0; i < len(dt); i++ {\n        if dt[i] == '-' {\n            break\n        }\n        year += string(dt[i])\n    }\n    for i = i + 1; i < len(dt); i++ {\n        if dt[i] == '-' {\n            break\n        }\n        month += string(dt[i])\n    }\n    for i = i + 1; i < len(dt); i++ {\n        day += string(dt[i])\n    }\n    return fmt.Sprintf(\"%s-%s-%s\", day, month, year)\n}\n",
    "    var year, month, day string\n    for i, v := range dt {\n        if i < 4 {\n            year += string(v)\n        } else if i > 4 && i < 7 {\n            month += string(v)\n        } else if i > 7 && i < 10 {\n            day += string(v)\n        }\n    }\n    return day + \"-\" + month + \"-\" + year\n}\n",
    "    var year, month, day string\n    year = dt[0:4]\n    month = dt[5:7]\n    day = dt[8:10]\n    return day + \"-\" + month + \"-\" + year\n}\n"
  ]
}
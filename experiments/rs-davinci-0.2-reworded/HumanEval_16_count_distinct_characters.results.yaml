name: HumanEval_16_count_distinct_characters
language: rs
results:
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut chars:\
    \ HashSet<char> = HashSet::new();\n    for c in string.chars() {\n        chars.insert(c.to_lowercase().next().unwrap());\n\
    \    }\n    chars.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  stdout: ''
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmp_htv1pq8.rs:7:20\n\
    \  |\n7 |     let mut chars: HashSet<char> = HashSet::new();\n  |            \
    \        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n\
    \  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashSet`\n --> /tmp/tmp_htv1pq8.rs:7:36\n  |\n7 |  \
    \   let mut chars: HashSet<char> = HashSet::new();\n  |                      \
    \              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\n\
    For more information about an error, try `rustc --explain E0412`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_chars\
    \ = HashSet::new();\n    for c in string.chars() {\n        distinct_chars.insert(c.to_lowercase().next().unwrap());\n\
    \    }\n    distinct_chars.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp_m75x93w.rs:7:30\n  |\n7 |     let mut distinct_chars = HashSet::new();\n\
    \  |                              ^^^^^^^ not found in this scope\n  |\nhelp:\
    \ consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_chars\
    \ = HashSet::new();\n    for c in string.chars() {\n        distinct_chars.insert(c.to_lowercase().to_string());\n\
    \    }\n    distinct_chars.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmptnv5v1xf.rs:7:30\n  |\n7 |     let mut distinct_chars = HashSet::new();\n\
    \  |                              ^^^^^^^ not found in this scope\n  |\nhelp:\
    \ consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters\
    \ = HashSet::new();\n    for c in string.chars() {\n        distinct_characters.insert(c.to_lowercase().next().unwrap());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpyey4m14p.rs:7:35\n  |\n7 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_chars\
    \ = HashSet::new();\n    for c in string.chars() {\n        distinct_chars.insert(c.to_lowercase().next().unwrap());\n\
    \    }\n    distinct_chars.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmphuf0to50.rs:7:30\n  |\n7 |     let mut distinct_chars = HashSet::new();\n\
    \  |                              ^^^^^^^ not found in this scope\n  |\nhelp:\
    \ consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_chars\
    \ = HashSet::new();\n    for c in string.chars() {\n        distinct_chars.insert(c.to_lowercase().next().unwrap());\n\
    \    }\n    distinct_chars.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpmondt46t.rs:7:30\n  |\n7 |     let mut distinct_chars = HashSet::new();\n\
    \  |                              ^^^^^^^ not found in this scope\n  |\nhelp:\
    \ consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut chars:\
    \ HashSet<char> = HashSet::new();\n    for c in string.chars() {\n        chars.insert(c.to_lowercase().next().unwrap());\n\
    \    }\n    chars.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  stdout: ''
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmp8qcm4gzm.rs:7:20\n\
    \  |\n7 |     let mut chars: HashSet<char> = HashSet::new();\n  |            \
    \        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n\
    \  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashSet`\n --> /tmp/tmp8qcm4gzm.rs:7:36\n  |\n7 |  \
    \   let mut chars: HashSet<char> = HashSet::new();\n  |                      \
    \              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\n\
    For more information about an error, try `rustc --explain E0412`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters\
    \ = HashSet::new();\n    for character in string.chars() {\n        distinct_characters.insert(character.to_lowercase().to_string());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpke54iwho.rs:7:35\n  |\n7 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut set:\
    \ HashSet<char> = HashSet::new();\n    for c in string.chars() {\n        set.insert(c.to_lowercase().next().unwrap());\n\
    \    }\n    set.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  stdout: ''
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpnk4xqiip.rs:7:18\n\
    \  |\n7 |     let mut set: HashSet<char> = HashSet::new();\n  |              \
    \    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n\
    \  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashSet`\n --> /tmp/tmpnk4xqiip.rs:7:34\n  |\n7 |  \
    \   let mut set: HashSet<char> = HashSet::new();\n  |                        \
    \          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this\
    \ struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due\
    \ to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\n\
    For more information about an error, try `rustc --explain E0412`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut chars:\
    \ HashSet<char> = HashSet::new();\n    for c in string.chars() {\n        chars.insert(c.to_lowercase().next().unwrap());\n\
    \    }\n    chars.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  stdout: ''
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmphqusijg8.rs:7:20\n\
    \  |\n7 |     let mut chars: HashSet<char> = HashSet::new();\n  |            \
    \        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n\
    \  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashSet`\n --> /tmp/tmphqusijg8.rs:7:36\n  |\n7 |  \
    \   let mut chars: HashSet<char> = HashSet::new();\n  |                      \
    \              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\n\
    For more information about an error, try `rustc --explain E0412`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut chars:\
    \ Vec<char> = string.chars().collect();\n    chars.sort();\n    chars.dedup();\n\
    \    chars.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `5`', /tmp/tmpacwmkmjo.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters\
    \ = 0;\n    let mut characters = HashSet::new();\n    for character in string.chars()\
    \ {\n        if !characters.contains(&character.to_ascii_lowercase()) {\n    \
    \        distinct_characters += 1;\n            characters.insert(character.to_ascii_lowercase());\n\
    \        }\n    }\n    distinct_characters\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpdas3yeyc.rs:8:26\n  |\n8 |     let mut characters = HashSet::new();\n\
    \  |                          ^^^^^^^ not found in this scope\n  |\nhelp: consider\
    \ importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut chars\
    \ = HashSet::new();\n    for c in string.chars() {\n        chars.insert(c.to_lowercase().to_string());\n\
    \    }\n    chars.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpteu7yny_.rs:7:21\n  |\n7 |     let mut chars = HashSet::new();\n  |\
    \                     ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters\
    \ = HashSet::new();\n    for character in string.chars() {\n        distinct_characters.insert(character.to_lowercase().to_string());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpe49l15v2.rs:7:35\n  |\n7 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut set\
    \ = HashSet::new();\n    for c in string.chars() {\n        set.insert(c.to_lowercase().next().unwrap());\n\
    \    }\n    set.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpg11jxq_a.rs:7:19\n  |\n7 |     let mut set = HashSet::new();\n  |  \
    \                 ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters\
    \ = HashSet::new();\n    for character in string.chars() {\n        distinct_characters.insert(character.to_lowercase().to_string());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp849p29mc.rs:7:35\n  |\n7 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters\
    \ = HashSet::new();\n    for character in string.chars() {\n        distinct_characters.insert(character.to_lowercase().to_string());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp9uwz6w93.rs:7:35\n  |\n7 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut chars:\
    \ HashSet<char> = HashSet::new();\n    for c in string.chars() {\n        chars.insert(c.to_lowercase().next().unwrap());\n\
    \    }\n    chars.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  stdout: ''
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpfo3tbghj.rs:7:20\n\
    \  |\n7 |     let mut chars: HashSet<char> = HashSet::new();\n  |            \
    \        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n\
    \  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashSet`\n --> /tmp/tmpfo3tbghj.rs:7:36\n  |\n7 |  \
    \   let mut chars: HashSet<char> = HashSet::new();\n  |                      \
    \              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\n\
    For more information about an error, try `rustc --explain E0412`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut set\
    \ = HashSet::new();\n    for c in string.chars() {\n        set.insert(c.to_lowercase().to_string());\n\
    \    }\n    set.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpj_qedkd8.rs:7:19\n  |\n7 |     let mut set = HashSet::new();\n  |  \
    \                 ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters\
    \ = HashSet::new();\n    for character in string.chars() {\n        distinct_characters.insert(character.to_lowercase().to_string());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpg3alvwht.rs:7:35\n  |\n7 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters\
    \ = HashSet::new();\n    for character in string.chars() {\n        distinct_characters.insert(character.to_lowercase().to_string());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpco2ruybf.rs:7:35\n  |\n7 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters:\
    \ HashSet<char> = HashSet::new();\n    for character in string.chars() {\n   \
    \     distinct_characters.insert(character.to_lowercase().next().unwrap());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpymu93xhq.rs:7:34\n\
    \  |\n7 |     let mut distinct_characters: HashSet<char> = HashSet::new();\n \
    \ |                                  ^^^^^^^ not found in this scope\n  |\nhelp:\
    \ consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\
    \nerror[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpymu93xhq.rs:7:50\n\
    \  |\n7 |     let mut distinct_characters: HashSet<char> = HashSet::new();\n \
    \ |                                                  ^^^^^^^ not found in this\
    \ scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed\
    \ explanations: E0412, E0433.\nFor more information about an error, try `rustc\
    \ --explain E0412`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut chars:\
    \ HashSet<char> = HashSet::new();\n    for c in string.chars() {\n        chars.insert(c.to_lowercase().next().unwrap());\n\
    \    }\n    chars.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  stdout: ''
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpx78axwgl.rs:7:20\n\
    \  |\n7 |     let mut chars: HashSet<char> = HashSet::new();\n  |            \
    \        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n\
    \  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashSet`\n --> /tmp/tmpx78axwgl.rs:7:36\n  |\n7 |  \
    \   let mut chars: HashSet<char> = HashSet::new();\n  |                      \
    \              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\n\
    For more information about an error, try `rustc --explain E0412`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut set\
    \ = HashSet::new();\n    for c in string.chars() {\n        set.insert(c.to_lowercase().to_string());\n\
    \    }\n    set.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpoavq7qvj.rs:7:19\n  |\n7 |     let mut set = HashSet::new();\n  |  \
    \                 ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters\
    \ = HashSet::new();\n    for character in string.chars() {\n        distinct_characters.insert(character.to_lowercase().to_string());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpj0ov1opx.rs:7:35\n  |\n7 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut chars\
    \ = string.chars().collect::<Vec<char>>();\n    chars.sort();\n    chars.dedup();\n\
    \    chars.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `5`', /tmp/tmp2q6kwg1x.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters\
    \ = HashSet::new();\n    for character in string.chars() {\n        distinct_characters.insert(character.to_lowercase().to_string());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpsakmk1lt.rs:7:35\n  |\n7 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut chars\
    \ = string.chars().collect::<Vec<char>>();\n    chars.sort();\n    chars.dedup();\n\
    \    chars.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `5`', /tmp/tmpffewffpj.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut characters\
    \ = HashSet::new();\n    for c in string.chars() {\n        characters.insert(c.to_lowercase().to_string());\n\
    \    }\n    characters.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp4mnd6glk.rs:7:26\n  |\n7 |     let mut characters = HashSet::new();\n\
    \  |                          ^^^^^^^ not found in this scope\n  |\nhelp: consider\
    \ importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters\
    \ = HashSet::new();\n    for character in string.chars() {\n        distinct_characters.insert(character.to_ascii_lowercase());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmphzveo666.rs:7:35\n  |\n7 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters\
    \ = HashSet::new();\n    for character in string.chars() {\n        distinct_characters.insert(character.to_lowercase().to_string());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmppotxcjc2.rs:7:35\n  |\n7 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut chars\
    \ = string.chars().collect::<Vec<char>>();\n    chars.sort();\n    chars.dedup();\n\
    \    chars.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `5`', /tmp/tmp0gdcvwvy.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters\
    \ = HashSet::new();\n    for character in string.chars() {\n        distinct_characters.insert(character.to_lowercase().next().unwrap());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpw2jdss7r.rs:7:35\n  |\n7 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_chars\
    \ = HashSet::new();\n    for c in string.chars() {\n        distinct_chars.insert(c.to_lowercase().to_string());\n\
    \    }\n    distinct_chars.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmptcx8r89_.rs:7:30\n  |\n7 |     let mut distinct_chars = HashSet::new();\n\
    \  |                              ^^^^^^^ not found in this scope\n  |\nhelp:\
    \ consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut chars:\
    \ HashSet<char> = HashSet::new();\n    for c in string.chars() {\n        chars.insert(c.to_lowercase().next().unwrap());\n\
    \    }\n    chars.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  stdout: ''
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpg__pxbc1.rs:7:20\n\
    \  |\n7 |     let mut chars: HashSet<char> = HashSet::new();\n  |            \
    \        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n\
    \  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashSet`\n --> /tmp/tmpg__pxbc1.rs:7:36\n  |\n7 |  \
    \   let mut chars: HashSet<char> = HashSet::new();\n  |                      \
    \              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\n\
    For more information about an error, try `rustc --explain E0412`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters\
    \ = HashSet::new();\n    for character in string.chars() {\n        distinct_characters.insert(character.to_lowercase().to_string());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpqz3mo2id.rs:7:35\n  |\n7 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut chars:\
    \ HashSet<char> = HashSet::new();\n    for c in string.chars() {\n        chars.insert(c.to_lowercase().next().unwrap());\n\
    \    }\n    chars.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  stdout: ''
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpw9mq4oxp.rs:7:20\n\
    \  |\n7 |     let mut chars: HashSet<char> = HashSet::new();\n  |            \
    \        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n\
    \  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashSet`\n --> /tmp/tmpw9mq4oxp.rs:7:36\n  |\n7 |  \
    \   let mut chars: HashSet<char> = HashSet::new();\n  |                      \
    \              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\n\
    For more information about an error, try `rustc --explain E0412`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters:\
    \ HashSet<char> = HashSet::new();\n    for character in string.chars() {\n   \
    \     distinct_characters.insert(character.to_lowercase().next().unwrap());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmp55f1a5n4.rs:7:34\n\
    \  |\n7 |     let mut distinct_characters: HashSet<char> = HashSet::new();\n \
    \ |                                  ^^^^^^^ not found in this scope\n  |\nhelp:\
    \ consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\
    \nerror[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmp55f1a5n4.rs:7:50\n\
    \  |\n7 |     let mut distinct_characters: HashSet<char> = HashSet::new();\n \
    \ |                                                  ^^^^^^^ not found in this\
    \ scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed\
    \ explanations: E0412, E0433.\nFor more information about an error, try `rustc\
    \ --explain E0412`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters\
    \ = HashSet::new();\n    for character in string.chars() {\n        distinct_characters.insert(character.to_lowercase().next().unwrap());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpfmficz52.rs:7:35\n  |\n7 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters\
    \ = HashSet::new();\n    for character in string.chars() {\n        distinct_characters.insert(character.to_lowercase().to_string());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpkryjso1q.rs:7:35\n  |\n7 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut set\
    \ = HashSet::new();\n    for c in string.chars() {\n        set.insert(c.to_lowercase().to_string());\n\
    \    }\n    set.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpkwprdvzv.rs:7:19\n  |\n7 |     let mut set = HashSet::new();\n  |  \
    \                 ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters\
    \ = HashSet::new();\n    for character in string.chars() {\n        distinct_characters.insert(character.to_lowercase().to_string());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpnt5lssm8.rs:7:35\n  |\n7 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters\
    \ = HashSet::new();\n    for character in string.chars() {\n        distinct_characters.insert(character.to_ascii_lowercase());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp2vh8j1jk.rs:7:35\n  |\n7 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters\
    \ = HashSet::new();\n    for character in string.chars() {\n        distinct_characters.insert(character.to_lowercase().to_string());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpqiupt4yk.rs:7:35\n  |\n7 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters\
    \ = HashSet::new();\n    for character in string.chars() {\n        distinct_characters.insert(character.to_lowercase().to_string());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpxqdnmp0i.rs:7:35\n  |\n7 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters\
    \ = HashSet::new();\n    for character in string.chars() {\n        distinct_characters.insert(character.to_ascii_lowercase());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpain0altn.rs:7:35\n  |\n7 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters\
    \ = HashSet::new();\n    for character in string.chars() {\n        distinct_characters.insert(character.to_lowercase().to_string());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp_u3ha6im.rs:7:35\n  |\n7 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_chars\
    \ = HashSet::new();\n    for c in string.chars() {\n        distinct_chars.insert(c.to_lowercase().to_string());\n\
    \    }\n    distinct_chars.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpqklzt9zg.rs:7:30\n  |\n7 |     let mut distinct_chars = HashSet::new();\n\
    \  |                              ^^^^^^^ not found in this scope\n  |\nhelp:\
    \ consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut chars\
    \ = string.chars().collect::<Vec<char>>();\n    chars.sort();\n    chars.dedup();\n\
    \    chars.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `5`', /tmp/tmpkpo422sv.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters\
    \ = HashSet::new();\n    for character in string.chars() {\n        distinct_characters.insert(character.to_lowercase().to_string());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpjb_h0qxt.rs:7:35\n  |\n7 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters\
    \ = HashSet::new();\n    for character in string.chars() {\n        distinct_characters.insert(character.to_lowercase().next().unwrap());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpuihpmlt_.rs:7:35\n  |\n7 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters\
    \ = HashSet::new();\n    for character in string.chars() {\n        distinct_characters.insert(character.to_lowercase().to_string());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpv9y16i1t.rs:7:35\n  |\n7 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_chars\
    \ = HashSet::new();\n    for c in string.chars() {\n        distinct_chars.insert(c.to_lowercase().to_string());\n\
    \    }\n    distinct_chars.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpuihfg1f8.rs:7:30\n  |\n7 |     let mut distinct_chars = HashSet::new();\n\
    \  |                              ^^^^^^^ not found in this scope\n  |\nhelp:\
    \ consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters\
    \ = HashSet::new();\n    for character in string.chars() {\n        distinct_characters.insert(character.to_lowercase().to_string());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp5rf70h0k.rs:7:35\n  |\n7 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters\
    \ = HashSet::new();\n    for character in string.chars() {\n        distinct_characters.insert(character.to_lowercase().to_string());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp7uw7ixq_.rs:7:35\n  |\n7 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters\
    \ = HashSet::new();\n    for character in string.chars() {\n        distinct_characters.insert(character.to_lowercase().next().unwrap());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpbmuun9rc.rs:7:35\n  |\n7 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut chars\
    \ = HashSet::new();\n    for c in string.chars() {\n        chars.insert(c.to_lowercase().to_string());\n\
    \    }\n    chars.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp208ltu6r.rs:7:21\n  |\n7 |     let mut chars = HashSet::new();\n  |\
    \                     ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters\
    \ = HashSet::new();\n    for character in string.chars() {\n        distinct_characters.insert(character.to_lowercase().to_string());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpdxnj1myy.rs:7:35\n  |\n7 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut chars:\
    \ HashSet<char> = HashSet::new();\n    for c in string.chars() {\n        chars.insert(c.to_lowercase().next().unwrap());\n\
    \    }\n    chars.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  stdout: ''
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpsch8e9bq.rs:7:20\n\
    \  |\n7 |     let mut chars: HashSet<char> = HashSet::new();\n  |            \
    \        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n\
    \  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashSet`\n --> /tmp/tmpsch8e9bq.rs:7:36\n  |\n7 |  \
    \   let mut chars: HashSet<char> = HashSet::new();\n  |                      \
    \              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\n\
    For more information about an error, try `rustc --explain E0412`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut chars:\
    \ Vec<char> = string.chars().collect();\n    chars.sort();\n    chars.dedup();\n\
    \    chars.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `5`', /tmp/tmpddp8p105.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut set\
    \ = HashSet::new();\n    for c in string.chars() {\n        set.insert(c.to_lowercase().to_string());\n\
    \    }\n    set.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpufjdnmrb.rs:7:19\n  |\n7 |     let mut set = HashSet::new();\n  |  \
    \                 ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters\
    \ = HashSet::new();\n    for character in string.chars() {\n        distinct_characters.insert(character.to_lowercase().to_string());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpocjefbx1.rs:7:35\n  |\n7 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters\
    \ = HashSet::new();\n    for character in string.chars() {\n        distinct_characters.insert(character.to_lowercase().to_string());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpjcsp8eg9.rs:7:35\n  |\n7 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters\
    \ = HashSet::new();\n    for character in string.chars() {\n        distinct_characters.insert(character.to_lowercase().to_string());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpx1_sgqna.rs:7:35\n  |\n7 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut count\
    \ = 0;\n    let mut chars = string.chars().collect::<Vec<char>>();\n    chars.sort();\n\
    \    chars.dedup();\n    for char in chars {\n        count += 1;\n    }\n   \
    \ count\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n  \
    \  assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `5`', /tmp/tmpe2iumy9z.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut set\
    \ = HashSet::new();\n    for c in string.chars() {\n        set.insert(c.to_lowercase().to_string());\n\
    \    }\n    set.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpo18zxsl8.rs:7:19\n  |\n7 |     let mut set = HashSet::new();\n  |  \
    \                 ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut chars:\
    \ Vec<char> = string.chars().collect();\n    chars.sort();\n    chars.dedup();\n\
    \    chars.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `5`', /tmp/tmpnsq140wc.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters:\
    \ HashSet<char> = HashSet::new();\n    for character in string.chars() {\n   \
    \     distinct_characters.insert(character.to_lowercase().next().unwrap());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmp248zwydc.rs:7:34\n\
    \  |\n7 |     let mut distinct_characters: HashSet<char> = HashSet::new();\n \
    \ |                                  ^^^^^^^ not found in this scope\n  |\nhelp:\
    \ consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\
    \nerror[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmp248zwydc.rs:7:50\n\
    \  |\n7 |     let mut distinct_characters: HashSet<char> = HashSet::new();\n \
    \ |                                                  ^^^^^^^ not found in this\
    \ scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed\
    \ explanations: E0412, E0433.\nFor more information about an error, try `rustc\
    \ --explain E0412`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters\
    \ = HashSet::new();\n    for character in string.chars() {\n        distinct_characters.insert(character.to_lowercase().to_string());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpk328reha.rs:7:35\n  |\n7 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut chars:\
    \ Vec<char> = string.chars().collect();\n    chars.sort();\n    chars.dedup();\n\
    \    chars.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `5`', /tmp/tmp1_zsy4og.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut set\
    \ = HashSet::new();\n    for c in string.chars() {\n        set.insert(c.to_lowercase().to_string());\n\
    \    }\n    set.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp1l2fj2ry.rs:7:19\n  |\n7 |     let mut set = HashSet::new();\n  |  \
    \                 ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_chars\
    \ = HashSet::new();\n    for c in string.chars() {\n        distinct_chars.insert(c.to_lowercase().to_string());\n\
    \    }\n    distinct_chars.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp0yap3ls7.rs:7:30\n  |\n7 |     let mut distinct_chars = HashSet::new();\n\
    \  |                              ^^^^^^^ not found in this scope\n  |\nhelp:\
    \ consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_chars\
    \ = HashSet::new();\n    for c in string.chars() {\n        distinct_chars.insert(c.to_lowercase().to_string());\n\
    \    }\n    distinct_chars.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpn_pcnfzb.rs:7:30\n  |\n7 |     let mut distinct_chars = HashSet::new();\n\
    \  |                              ^^^^^^^ not found in this scope\n  |\nhelp:\
    \ consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut chars:\
    \ HashSet<char> = HashSet::new();\n    for c in string.chars() {\n        chars.insert(c.to_lowercase().nth(0).unwrap());\n\
    \    }\n    chars.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  stdout: ''
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmp0zuxqu9t.rs:7:20\n\
    \  |\n7 |     let mut chars: HashSet<char> = HashSet::new();\n  |            \
    \        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n\
    \  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashSet`\n --> /tmp/tmp0zuxqu9t.rs:7:36\n  |\n7 |  \
    \   let mut chars: HashSet<char> = HashSet::new();\n  |                      \
    \              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\n\
    For more information about an error, try `rustc --explain E0412`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut result\
    \ = 0;\n    let mut chars = string.chars().collect::<Vec<char>>();\n    chars.sort();\n\
    \    for i in 0..chars.len() {\n        if i == 0 {\n            result += 1;\n\
    \        } else if chars[i] != chars[i - 1] {\n            result += 1;\n    \
    \    }\n    }\n    result\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `5`', /tmp/tmpxy6b6jsj.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut chars:\
    \ Vec<char> = string.chars().collect();\n    chars.sort();\n    chars.dedup();\n\
    \    chars.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `5`', /tmp/tmpwjl54fw8.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut count\
    \ = 0;\n    let mut chars = HashSet::new();\n    for c in string.chars() {\n \
    \       chars.insert(c.to_lowercase().to_string());\n    }\n    count = chars.len()\
    \ as isize;\n    count\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpyfve2huu.rs:8:21\n  |\n8 |     let mut chars = HashSet::new();\n  |\
    \                     ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters\
    \ = HashSet::new();\n    for character in string.chars() {\n        distinct_characters.insert(character.to_lowercase().next().unwrap());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpwkk9j92w.rs:7:35\n  |\n7 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters\
    \ = HashSet::new();\n    for character in string.chars() {\n        distinct_characters.insert(character.to_lowercase().to_string());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp1m4_tvp7.rs:7:35\n  |\n7 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters\
    \ = HashSet::new();\n    for c in string.chars() {\n        distinct_characters.insert(c.to_lowercase().to_string());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpa_4idlkj.rs:7:35\n  |\n7 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut chars\
    \ = string.chars().collect::<Vec<char>>();\n    chars.sort();\n    chars.dedup();\n\
    \    chars.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `5`', /tmp/tmp720k1oa_.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters\
    \ = HashSet::new();\n    for character in string.chars() {\n        distinct_characters.insert(character.to_lowercase().to_string());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpgdccda8t.rs:7:35\n  |\n7 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut chars:\
    \ HashSet<char> = HashSet::new();\n    for c in string.chars() {\n        chars.insert(c.to_lowercase().nth(0).unwrap());\n\
    \    }\n    chars.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  stdout: ''
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpev6iokhc.rs:7:20\n\
    \  |\n7 |     let mut chars: HashSet<char> = HashSet::new();\n  |            \
    \        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n\
    \  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashSet`\n --> /tmp/tmpev6iokhc.rs:7:36\n  |\n7 |  \
    \   let mut chars: HashSet<char> = HashSet::new();\n  |                      \
    \              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\n\
    For more information about an error, try `rustc --explain E0412`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters\
    \ = HashSet::new();\n    for character in string.chars() {\n        distinct_characters.insert(character.to_lowercase().to_string());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpfwbm5ouj.rs:7:35\n  |\n7 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters\
    \ = HashSet::new();\n    for character in string.chars() {\n        distinct_characters.insert(character.to_lowercase().next().unwrap());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpfmlh6hyq.rs:7:35\n  |\n7 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters\
    \ = HashSet::new();\n    for character in string.chars() {\n        distinct_characters.insert(character.to_lowercase().to_string());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp7d4s0_a2.rs:7:35\n  |\n7 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut chars\
    \ = string.chars().collect::<Vec<char>>();\n    chars.sort();\n    chars.dedup();\n\
    \    chars.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `5`', /tmp/tmpk6cqcfb6.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_chars:\
    \ HashSet<char> = HashSet::new();\n    for c in string.chars() {\n        distinct_chars.insert(c.to_lowercase().next().unwrap());\n\
    \    }\n    distinct_chars.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmp__djgbvo.rs:7:29\n\
    \  |\n7 |     let mut distinct_chars: HashSet<char> = HashSet::new();\n  |   \
    \                          ^^^^^^^ not found in this scope\n  |\nhelp: consider\
    \ importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]:\
    \ failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmp__djgbvo.rs:7:45\n\
    \  |\n7 |     let mut distinct_chars: HashSet<char> = HashSet::new();\n  |   \
    \                                          ^^^^^^^ not found in this scope\n \
    \ |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed\
    \ explanations: E0412, E0433.\nFor more information about an error, try `rustc\
    \ --explain E0412`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut set\
    \ = HashSet::new();\n    for c in string.chars() {\n        set.insert(c.to_lowercase().to_string());\n\
    \    }\n    set.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpc9vvkfi8.rs:7:19\n  |\n7 |     let mut set = HashSet::new();\n  |  \
    \                 ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters\
    \ = HashSet::new();\n    for character in string.chars() {\n        distinct_characters.insert(character.to_lowercase().to_string());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpm4io7j2p.rs:7:35\n  |\n7 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters\
    \ = HashSet::new();\n    for c in string.chars() {\n        distinct_characters.insert(c.to_lowercase().to_string());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp5cp1abyd.rs:7:35\n  |\n7 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut chars\
    \ = string.chars().collect::<Vec<char>>();\n    chars.sort();\n    chars.dedup();\n\
    \    chars.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `5`', /tmp/tmp0cczfwxf.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut chars:\
    \ Vec<char> = string.chars().collect();\n    chars.sort();\n    chars.dedup();\n\
    \    chars.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `5`', /tmp/tmp9zv016kv.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_chars\
    \ = HashSet::new();\n    for c in string.chars() {\n        distinct_chars.insert(c.to_lowercase().next().unwrap());\n\
    \    }\n    distinct_chars.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpinql6sha.rs:7:30\n  |\n7 |     let mut distinct_chars = HashSet::new();\n\
    \  |                              ^^^^^^^ not found in this scope\n  |\nhelp:\
    \ consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut char_set\
    \ = HashSet::new();\n    for c in string.chars() {\n        char_set.insert(c.to_lowercase().next().unwrap());\n\
    \    }\n    char_set.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmplcfze_vg.rs:7:24\n  |\n7 |     let mut char_set = HashSet::new();\n\
    \  |                        ^^^^^^^ not found in this scope\n  |\nhelp: consider\
    \ importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters\
    \ = HashSet::new();\n    for character in string.chars() {\n        distinct_characters.insert(character.to_lowercase().to_string());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpg4elv10u.rs:7:35\n  |\n7 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut set\
    \ = HashSet::new();\n    for c in string.chars() {\n        set.insert(c.to_lowercase().to_string());\n\
    \    }\n    set.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpdkgiudxv.rs:7:19\n  |\n7 |     let mut set = HashSet::new();\n  |  \
    \                 ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut chars\
    \ = HashSet::new();\n    for c in string.chars() {\n        chars.insert(c.to_lowercase().next().unwrap());\n\
    \    }\n    chars.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp4_wa25sb.rs:7:21\n  |\n7 |     let mut chars = HashSet::new();\n  |\
    \                     ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters\
    \ = HashSet::new();\n    for character in string.chars() {\n        distinct_characters.insert(character.to_lowercase().next().unwrap());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp84qdrd2o.rs:7:35\n  |\n7 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters\
    \ = HashSet::new();\n    for character in string.chars() {\n        distinct_characters.insert(character.to_lowercase().collect::<String>());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpl7qicdvz.rs:7:35\n  |\n7 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut set\
    \ = HashSet::new();\n    for c in string.chars() {\n        set.insert(c.to_lowercase().to_string());\n\
    \    }\n    set.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpsol882_n.rs:7:19\n  |\n7 |     let mut set = HashSet::new();\n  |  \
    \                 ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut chars\
    \ = string.chars().collect::<Vec<char>>();\n    chars.sort();\n    chars.dedup();\n\
    \    chars.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `5`', /tmp/tmp0repskkj.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut set\
    \ = HashSet::new();\n    for c in string.chars() {\n        set.insert(c.to_lowercase().next().unwrap());\n\
    \    }\n    set.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpw4zk_lik.rs:7:19\n  |\n7 |     let mut set = HashSet::new();\n  |  \
    \                 ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters\
    \ = HashSet::new();\n    for character in string.chars() {\n        distinct_characters.insert(character.to_lowercase().to_string());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpjp4frg1n.rs:7:35\n  |\n7 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut chars:\
    \ HashSet<char> = HashSet::new();\n    for c in string.chars() {\n        chars.insert(c.to_lowercase().next().unwrap());\n\
    \    }\n    chars.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  stdout: ''
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpaad1euxt.rs:7:20\n\
    \  |\n7 |     let mut chars: HashSet<char> = HashSet::new();\n  |            \
    \        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n\
    \  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashSet`\n --> /tmp/tmpaad1euxt.rs:7:36\n  |\n7 |  \
    \   let mut chars: HashSet<char> = HashSet::new();\n  |                      \
    \              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\n\
    For more information about an error, try `rustc --explain E0412`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters\
    \ = HashSet::new();\n    for character in string.chars() {\n        distinct_characters.insert(character.to_lowercase().to_string());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpmnzkdts7.rs:7:35\n  |\n7 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut chars:\
    \ HashSet<char> = HashSet::new();\n    for c in string.chars() {\n        chars.insert(c.to_lowercase().next().unwrap());\n\
    \    }\n    chars.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  stdout: ''
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpw77rin8p.rs:7:20\n\
    \  |\n7 |     let mut chars: HashSet<char> = HashSet::new();\n  |            \
    \        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n\
    \  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashSet`\n --> /tmp/tmpw77rin8p.rs:7:36\n  |\n7 |  \
    \   let mut chars: HashSet<char> = HashSet::new();\n  |                      \
    \              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\n\
    For more information about an error, try `rustc --explain E0412`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_chars\
    \ = HashSet::new();\n    for c in string.chars() {\n        distinct_chars.insert(c.to_lowercase().to_string());\n\
    \    }\n    distinct_chars.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp7dizkjmo.rs:7:30\n  |\n7 |     let mut distinct_chars = HashSet::new();\n\
    \  |                              ^^^^^^^ not found in this scope\n  |\nhelp:\
    \ consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters\
    \ = HashSet::new();\n    for character in string.chars() {\n        distinct_characters.insert(character.to_lowercase().to_string());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp3ebuhhr6.rs:7:35\n  |\n7 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut chars:\
    \ Vec<char> = string.chars().collect();\n    chars.sort();\n    chars.dedup();\n\
    \    chars.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `5`', /tmp/tmp79giircr.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters:\
    \ HashSet<char> = HashSet::new();\n    for character in string.chars() {\n   \
    \     distinct_characters.insert(character.to_lowercase().next().unwrap());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpylu4mqhx.rs:7:34\n\
    \  |\n7 |     let mut distinct_characters: HashSet<char> = HashSet::new();\n \
    \ |                                  ^^^^^^^ not found in this scope\n  |\nhelp:\
    \ consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\
    \nerror[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpylu4mqhx.rs:7:50\n\
    \  |\n7 |     let mut distinct_characters: HashSet<char> = HashSet::new();\n \
    \ |                                                  ^^^^^^^ not found in this\
    \ scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed\
    \ explanations: E0412, E0433.\nFor more information about an error, try `rustc\
    \ --explain E0412`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\
    \")), 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpajw6rvvq.rs:7:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters\
    \ = HashSet::new();\n    for character in string.chars() {\n        distinct_characters.insert(character.to_lowercase().next().unwrap());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp4gcup6eq.rs:7:35\n  |\n7 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut set\
    \ = HashSet::new();\n    for c in string.chars() {\n        set.insert(c.to_lowercase().to_string());\n\
    \    }\n    set.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpb216rr_2.rs:7:19\n  |\n7 |     let mut set = HashSet::new();\n  |  \
    \                 ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut chars:\
    \ HashSet<char> = HashSet::new();\n    for c in string.chars() {\n        chars.insert(c.to_lowercase().next().unwrap());\n\
    \    }\n    chars.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  stdout: ''
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpkcixyihs.rs:7:20\n\
    \  |\n7 |     let mut chars: HashSet<char> = HashSet::new();\n  |            \
    \        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n\
    \  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashSet`\n --> /tmp/tmpkcixyihs.rs:7:36\n  |\n7 |  \
    \   let mut chars: HashSet<char> = HashSet::new();\n  |                      \
    \              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\n\
    For more information about an error, try `rustc --explain E0412`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut chars:\
    \ HashSet<char> = HashSet::new();\n    for c in string.chars() {\n        chars.insert(c.to_lowercase().next().unwrap());\n\
    \    }\n    chars.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  stdout: ''
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmp86jzysmf.rs:7:20\n\
    \  |\n7 |     let mut chars: HashSet<char> = HashSet::new();\n  |            \
    \        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n\
    \  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashSet`\n --> /tmp/tmp86jzysmf.rs:7:36\n  |\n7 |  \
    \   let mut chars: HashSet<char> = HashSet::new();\n  |                      \
    \              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\n\
    For more information about an error, try `rustc --explain E0412`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters\
    \ = HashSet::new();\n    for character in string.chars() {\n        distinct_characters.insert(character.to_lowercase().to_string());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpju7j7pyt.rs:7:35\n  |\n7 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters\
    \ = HashSet::new();\n    for character in string.chars() {\n        distinct_characters.insert(character.to_lowercase().to_string());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp0_sbcv_g.rs:7:35\n  |\n7 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters\
    \ = HashSet::new();\n    for character in string.chars() {\n        distinct_characters.insert(character.to_lowercase().to_string());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpqoiwrj_f.rs:7:35\n  |\n7 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut chars:\
    \ HashSet<char> = HashSet::new();\n    for c in string.chars() {\n        chars.insert(c.to_lowercase().next().unwrap());\n\
    \    }\n    chars.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  stdout: ''
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpczigm5lo.rs:7:20\n\
    \  |\n7 |     let mut chars: HashSet<char> = HashSet::new();\n  |            \
    \        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n\
    \  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashSet`\n --> /tmp/tmpczigm5lo.rs:7:36\n  |\n7 |  \
    \   let mut chars: HashSet<char> = HashSet::new();\n  |                      \
    \              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\n\
    For more information about an error, try `rustc --explain E0412`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_chars\
    \ = HashSet::new();\n    for c in string.chars() {\n        distinct_chars.insert(c.to_lowercase().to_string());\n\
    \    }\n    distinct_chars.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpuqse866c.rs:7:30\n  |\n7 |     let mut distinct_chars = HashSet::new();\n\
    \  |                              ^^^^^^^ not found in this scope\n  |\nhelp:\
    \ consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters\
    \ = HashSet::new();\n    for character in string.chars() {\n        distinct_characters.insert(character.to_lowercase().to_string());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpcgy4un_a.rs:7:35\n  |\n7 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters\
    \ = HashSet::new();\n    for character in string.chars() {\n        distinct_characters.insert(character.to_lowercase().next().unwrap());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpwgghmxht.rs:7:35\n  |\n7 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters\
    \ = HashSet::new();\n    for character in string.chars() {\n        distinct_characters.insert(character.to_lowercase().to_string());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpyeuvdsvc.rs:7:35\n  |\n7 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut chars\
    \ = string.chars().collect::<Vec<char>>();\n    chars.sort();\n    let mut count\
    \ = 1;\n    for i in 1..chars.len() {\n        if chars[i] != chars[i - 1] {\n\
    \            count += 1;\n        }\n    }\n    count\n}\n\nfn main() {\n    let\
    \ candidate = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\
    \")), 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `0`', /tmp/tmp3ttuyqgz.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut chars:\
    \ Vec<char> = string.chars().collect();\n    chars.sort();\n    chars.dedup();\n\
    \    chars.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `5`', /tmp/tmpngyyfjiy.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters\
    \ = HashSet::new();\n    for character in string.chars() {\n        distinct_characters.insert(character.to_lowercase().to_string());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpgvxtccu2.rs:7:35\n  |\n7 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters:\
    \ HashSet<char> = HashSet::new();\n    for character in string.chars() {\n   \
    \     distinct_characters.insert(character.to_lowercase().next().unwrap());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpe4ksvn8t.rs:7:34\n\
    \  |\n7 |     let mut distinct_characters: HashSet<char> = HashSet::new();\n \
    \ |                                  ^^^^^^^ not found in this scope\n  |\nhelp:\
    \ consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\
    \nerror[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpe4ksvn8t.rs:7:50\n\
    \  |\n7 |     let mut distinct_characters: HashSet<char> = HashSet::new();\n \
    \ |                                                  ^^^^^^^ not found in this\
    \ scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed\
    \ explanations: E0412, E0433.\nFor more information about an error, try `rustc\
    \ --explain E0412`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters\
    \ = HashSet::new();\n    for character in string.chars() {\n        distinct_characters.insert(character.to_lowercase().next().unwrap());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp0_m7d6o8.rs:7:35\n  |\n7 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut characters:\
    \ HashSet<char> = HashSet::new();\n    for character in string.chars() {\n   \
    \     characters.insert(character.to_lowercase().next().unwrap());\n    }\n  \
    \  characters.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  stdout: ''
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmp77brouyn.rs:7:25\n\
    \  |\n7 |     let mut characters: HashSet<char> = HashSet::new();\n  |       \
    \                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed\
    \ to resolve: use of undeclared type `HashSet`\n --> /tmp/tmp77brouyn.rs:7:41\n\
    \  |\n7 |     let mut characters: HashSet<char> = HashSet::new();\n  |       \
    \                                  ^^^^^^^ not found in this scope\n  |\nhelp:\
    \ consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters\
    \ = HashSet::new();\n    for character in string.chars() {\n        distinct_characters.insert(character.to_lowercase().to_string());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpalntqcw9.rs:7:35\n  |\n7 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters\
    \ = HashSet::new();\n    for character in string.chars() {\n        distinct_characters.insert(character.to_lowercase().next().unwrap());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmps66vc1qs.rs:7:35\n  |\n7 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters:\
    \ HashSet<char> = HashSet::new();\n    for character in string.chars() {\n   \
    \     distinct_characters.insert(character.to_lowercase().next().unwrap());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmputo03elc.rs:7:34\n\
    \  |\n7 |     let mut distinct_characters: HashSet<char> = HashSet::new();\n \
    \ |                                  ^^^^^^^ not found in this scope\n  |\nhelp:\
    \ consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\
    \nerror[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmputo03elc.rs:7:50\n\
    \  |\n7 |     let mut distinct_characters: HashSet<char> = HashSet::new();\n \
    \ |                                                  ^^^^^^^ not found in this\
    \ scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed\
    \ explanations: E0412, E0433.\nFor more information about an error, try `rustc\
    \ --explain E0412`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters:\
    \ HashSet<char> = HashSet::new();\n    for character in string.chars() {\n   \
    \     distinct_characters.insert(character.to_lowercase().next().unwrap());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmp5cdf2q9w.rs:7:34\n\
    \  |\n7 |     let mut distinct_characters: HashSet<char> = HashSet::new();\n \
    \ |                                  ^^^^^^^ not found in this scope\n  |\nhelp:\
    \ consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\
    \nerror[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmp5cdf2q9w.rs:7:50\n\
    \  |\n7 |     let mut distinct_characters: HashSet<char> = HashSet::new();\n \
    \ |                                                  ^^^^^^^ not found in this\
    \ scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed\
    \ explanations: E0412, E0433.\nFor more information about an error, try `rustc\
    \ --explain E0412`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut set:\
    \ HashSet<char> = HashSet::new();\n    for c in string.chars() {\n        set.insert(c.to_lowercase().next().unwrap());\n\
    \    }\n    set.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  stdout: ''
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpv8ab1si9.rs:7:18\n\
    \  |\n7 |     let mut set: HashSet<char> = HashSet::new();\n  |              \
    \    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n\
    \  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashSet`\n --> /tmp/tmpv8ab1si9.rs:7:34\n  |\n7 |  \
    \   let mut set: HashSet<char> = HashSet::new();\n  |                        \
    \          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this\
    \ struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due\
    \ to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\n\
    For more information about an error, try `rustc --explain E0412`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut chars\
    \ = HashSet::new();\n    for c in string.chars() {\n        chars.insert(c.to_lowercase().to_string());\n\
    \    }\n    chars.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp2jgdq9vi.rs:7:21\n  |\n7 |     let mut chars = HashSet::new();\n  |\
    \                     ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut chars:\
    \ Vec<char> = string.chars().collect();\n    chars.sort();\n    chars.dedup();\n\
    \    chars.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `5`', /tmp/tmpo6hpc5pw.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut chars\
    \ = string.chars().collect::<Vec<char>>();\n    chars.sort();\n    let mut count\
    \ = 1;\n    for i in 1..chars.len() {\n        if chars[i] != chars[i - 1] {\n\
    \            count += 1;\n        }\n    }\n    count\n}\n\nfn main() {\n    let\
    \ candidate = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\
    \")), 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `0`', /tmp/tmpxo9fosa1.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut chars\
    \ = string.chars().collect::<Vec<char>>();\n    chars.sort();\n    chars.dedup();\n\
    \    chars.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `5`', /tmp/tmpx_eqtc7k.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters\
    \ = HashSet::new();\n    for character in string.chars() {\n        distinct_characters.insert(character.to_lowercase().to_string());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpfxbdaw53.rs:7:35\n  |\n7 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut chars:\
    \ Vec<char> = string.chars().collect();\n    chars.sort();\n    chars.dedup();\n\
    \    chars.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `5`', /tmp/tmpi8xg4poh.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters\
    \ = HashSet::new();\n    for character in string.chars() {\n        distinct_characters.insert(character.to_lowercase().to_string());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp16_e5yfd.rs:7:35\n  |\n7 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut set\
    \ = HashSet::new();\n    for c in string.chars() {\n        set.insert(c.to_lowercase().next().unwrap());\n\
    \    }\n    set.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpniex_6be.rs:7:19\n  |\n7 |     let mut set = HashSet::new();\n  |  \
    \                 ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters\
    \ = HashSet::new();\n    for character in string.chars() {\n        distinct_characters.insert(character.to_lowercase().next().unwrap());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpx_lkvnyg.rs:7:35\n  |\n7 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters\
    \ = HashSet::new();\n    for character in string.chars() {\n        distinct_characters.insert(character.to_lowercase().to_string());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpapcw48cj.rs:7:35\n  |\n7 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters\
    \ = HashSet::new();\n    for character in string.chars() {\n        distinct_characters.insert(character.to_lowercase().to_string());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpxq5r7e1d.rs:7:35\n  |\n7 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut chars:\
    \ HashSet<char> = HashSet::new();\n    for c in string.chars() {\n        chars.insert(c.to_lowercase().next().unwrap());\n\
    \    }\n    chars.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  stdout: ''
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpouvofoef.rs:7:20\n\
    \  |\n7 |     let mut chars: HashSet<char> = HashSet::new();\n  |            \
    \        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n\
    \  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashSet`\n --> /tmp/tmpouvofoef.rs:7:36\n  |\n7 |  \
    \   let mut chars: HashSet<char> = HashSet::new();\n  |                      \
    \              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\n\
    For more information about an error, try `rustc --explain E0412`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters\
    \ = HashSet::new();\n    for character in string.chars() {\n        distinct_characters.insert(character.to_lowercase().to_string());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmptkghxnk7.rs:7:35\n  |\n7 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut chars:\
    \ HashSet<char> = HashSet::new();\n    for c in string.chars() {\n        chars.insert(c.to_lowercase().next().unwrap());\n\
    \    }\n    chars.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  stdout: ''
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpdiz_c_p5.rs:7:20\n\
    \  |\n7 |     let mut chars: HashSet<char> = HashSet::new();\n  |            \
    \        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n\
    \  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashSet`\n --> /tmp/tmpdiz_c_p5.rs:7:36\n  |\n7 |  \
    \   let mut chars: HashSet<char> = HashSet::new();\n  |                      \
    \              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\n\
    For more information about an error, try `rustc --explain E0412`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters\
    \ = HashSet::new();\n    for character in string.chars() {\n        distinct_characters.insert(character.to_lowercase().to_string());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpb09ley4k.rs:7:35\n  |\n7 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut chars:\
    \ HashSet<char> = HashSet::new();\n    for c in string.chars() {\n        chars.insert(c.to_lowercase().next().unwrap());\n\
    \    }\n    chars.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  stdout: ''
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpwb_wgx4b.rs:7:20\n\
    \  |\n7 |     let mut chars: HashSet<char> = HashSet::new();\n  |            \
    \        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n\
    \  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashSet`\n --> /tmp/tmpwb_wgx4b.rs:7:36\n  |\n7 |  \
    \   let mut chars: HashSet<char> = HashSet::new();\n  |                      \
    \              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\n\
    For more information about an error, try `rustc --explain E0412`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters:\
    \ HashSet<char> = HashSet::new();\n    for character in string.chars() {\n   \
    \     distinct_characters.insert(character.to_lowercase().next().unwrap());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpibrtuvp7.rs:7:34\n\
    \  |\n7 |     let mut distinct_characters: HashSet<char> = HashSet::new();\n \
    \ |                                  ^^^^^^^ not found in this scope\n  |\nhelp:\
    \ consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\
    \nerror[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpibrtuvp7.rs:7:50\n\
    \  |\n7 |     let mut distinct_characters: HashSet<char> = HashSet::new();\n \
    \ |                                                  ^^^^^^^ not found in this\
    \ scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed\
    \ explanations: E0412, E0433.\nFor more information about an error, try `rustc\
    \ --explain E0412`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters\
    \ = HashSet::new();\n    for character in string.chars() {\n        distinct_characters.insert(character.to_lowercase().to_string());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp9u80cosq.rs:7:35\n  |\n7 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters\
    \ = HashSet::new();\n    for character in string.chars() {\n        distinct_characters.insert(character.to_lowercase().to_string());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpo898q870.rs:7:35\n  |\n7 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut chars:\
    \ HashSet<char> = HashSet::new();\n    for c in string.chars() {\n        chars.insert(c.to_lowercase().next().unwrap());\n\
    \    }\n    chars.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  stdout: ''
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpqibedvqh.rs:7:20\n\
    \  |\n7 |     let mut chars: HashSet<char> = HashSet::new();\n  |            \
    \        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n\
    \  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashSet`\n --> /tmp/tmpqibedvqh.rs:7:36\n  |\n7 |  \
    \   let mut chars: HashSet<char> = HashSet::new();\n  |                      \
    \              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\n\
    For more information about an error, try `rustc --explain E0412`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut characters:\
    \ HashSet<char> = HashSet::new();\n    for c in string.chars() {\n        characters.insert(c.to_lowercase().next().unwrap());\n\
    \    }\n    characters.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  stdout: ''
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmp2f5bf4id.rs:7:25\n\
    \  |\n7 |     let mut characters: HashSet<char> = HashSet::new();\n  |       \
    \                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed\
    \ to resolve: use of undeclared type `HashSet`\n --> /tmp/tmp2f5bf4id.rs:7:41\n\
    \  |\n7 |     let mut characters: HashSet<char> = HashSet::new();\n  |       \
    \                                  ^^^^^^^ not found in this scope\n  |\nhelp:\
    \ consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut chars:\
    \ Vec<char> = string.chars().collect();\n    chars.sort();\n    chars.dedup();\n\
    \    chars.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `5`', /tmp/tmpg3glqqwr.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    unimplemented!();\n\
    }\n\nfn main() {\n    let candidate = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\
    \")), 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpvkm2aruq.rs:7:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_chars\
    \ = HashSet::new();\n    for c in string.chars() {\n        distinct_chars.insert(c.to_lowercase().to_string());\n\
    \    }\n    distinct_chars.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpxohmg4k9.rs:7:30\n  |\n7 |     let mut distinct_chars = HashSet::new();\n\
    \  |                              ^^^^^^^ not found in this scope\n  |\nhelp:\
    \ consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters\
    \ = HashSet::new();\n    for character in string.chars() {\n        distinct_characters.insert(character.to_lowercase().to_string());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp8ckz1zjf.rs:7:35\n  |\n7 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters\
    \ = HashSet::new();\n    for character in string.chars() {\n        distinct_characters.insert(character.to_lowercase().to_string());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpypdpc0vl.rs:7:35\n  |\n7 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters\
    \ = HashSet::new();\n    for character in string.chars() {\n        distinct_characters.insert(character.to_lowercase().next().unwrap());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpoc61na7l.rs:7:35\n  |\n7 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut chars\
    \ = HashSet::new();\n    for c in string.chars() {\n        chars.insert(c.to_lowercase().to_string());\n\
    \    }\n    chars.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp0pqxh26j.rs:7:21\n  |\n7 |     let mut chars = HashSet::new();\n  |\
    \                     ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters\
    \ = HashSet::new();\n    for character in string.chars() {\n        distinct_characters.insert(character.to_lowercase().to_string());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmptl4nd0fj.rs:7:35\n  |\n7 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut characters:\
    \ HashSet<char> = HashSet::new();\n    for c in string.chars() {\n        characters.insert(c.to_lowercase().next().unwrap());\n\
    \    }\n    characters.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  stdout: ''
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpqskty1xz.rs:7:25\n\
    \  |\n7 |     let mut characters: HashSet<char> = HashSet::new();\n  |       \
    \                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed\
    \ to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpqskty1xz.rs:7:41\n\
    \  |\n7 |     let mut characters: HashSet<char> = HashSet::new();\n  |       \
    \                                  ^^^^^^^ not found in this scope\n  |\nhelp:\
    \ consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters\
    \ = HashSet::new();\n    for character in string.chars() {\n        distinct_characters.insert(character.to_lowercase().next().unwrap());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp8770vz_n.rs:7:35\n  |\n7 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters\
    \ = HashSet::new();\n    for character in string.chars() {\n        distinct_characters.insert(character.to_lowercase().to_string());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpj3lwqut6.rs:7:35\n  |\n7 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_chars\
    \ = HashSet::new();\n    for c in string.chars() {\n        distinct_chars.insert(c.to_lowercase().to_string());\n\
    \    }\n    distinct_chars.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpk0bfz0u5.rs:7:30\n  |\n7 |     let mut distinct_chars = HashSet::new();\n\
    \  |                              ^^^^^^^ not found in this scope\n  |\nhelp:\
    \ consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters\
    \ = HashSet::new();\n    for character in string.chars() {\n        distinct_characters.insert(character.to_lowercase().next().unwrap());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpz6lv59qz.rs:7:35\n  |\n7 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters\
    \ = HashSet::new();\n    for character in string.chars() {\n        distinct_characters.insert(character.to_lowercase().to_string());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp4daouihe.rs:7:35\n  |\n7 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters\
    \ = HashSet::new();\n    for character in string.chars() {\n        distinct_characters.insert(character.to_lowercase().to_string());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpfvvocfbp.rs:7:35\n  |\n7 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_chars\
    \ = HashSet::new();\n    for c in string.chars() {\n        distinct_chars.insert(c.to_lowercase().to_string());\n\
    \    }\n    distinct_chars.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpkogypud6.rs:7:30\n  |\n7 |     let mut distinct_chars = HashSet::new();\n\
    \  |                              ^^^^^^^ not found in this scope\n  |\nhelp:\
    \ consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters\
    \ = HashSet::new();\n    for character in string.chars() {\n        distinct_characters.insert(character.to_lowercase().to_string());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp_8czylly.rs:7:35\n  |\n7 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters\
    \ = HashSet::new();\n    for character in string.chars() {\n        distinct_characters.insert(character.to_lowercase().to_string());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpywpb4edl.rs:7:35\n  |\n7 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters\
    \ = HashSet::new();\n    for character in string.chars() {\n        distinct_characters.insert(character.to_lowercase().to_string());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpkfwser9s.rs:7:35\n  |\n7 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut chars\
    \ = HashSet::new();\n    for c in string.chars() {\n        chars.insert(c.to_lowercase().to_string());\n\
    \    }\n    chars.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp7ryaoi8k.rs:7:21\n  |\n7 |     let mut chars = HashSet::new();\n  |\
    \                     ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut chars:\
    \ Vec<char> = string.chars().collect();\n    chars.sort();\n    chars.dedup();\n\
    \    chars.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `5`', /tmp/tmpoi43xf3e.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut chars:\
    \ Vec<char> = string.chars().collect();\n    chars.sort();\n    let mut distinct_chars:\
    \ Vec<char> = Vec::new();\n    let mut previous_char: char = '\\0';\n    for c\
    \ in chars {\n        if c != previous_char {\n            distinct_chars.push(c);\n\
    \        }\n        previous_char = c;\n    }\n    distinct_chars.len() as isize\n\
    }\n\nfn main() {\n    let candidate = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\
    \")), 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `5`', /tmp/tmpkp1ic9vw.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut chars\
    \ = string.chars().collect::<Vec<char>>();\n    chars.sort();\n    chars.dedup();\n\
    \    chars.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `5`', /tmp/tmp_durp2rk.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut set\
    \ = HashSet::new();\n    for c in string.chars() {\n        set.insert(c.to_lowercase().next().unwrap());\n\
    \    }\n    set.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpj7sy0i86.rs:7:19\n  |\n7 |     let mut set = HashSet::new();\n  |  \
    \                 ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut chars:\
    \ Vec<char> = string.chars().collect();\n    chars.sort();\n    chars.dedup();\n\
    \    chars.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `5`', /tmp/tmpsl5gr3q5.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters:\
    \ HashSet<char> = HashSet::new();\n    for character in string.chars() {\n   \
    \     distinct_characters.insert(character.to_lowercase().next().unwrap());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmp2ycsgher.rs:7:34\n\
    \  |\n7 |     let mut distinct_characters: HashSet<char> = HashSet::new();\n \
    \ |                                  ^^^^^^^ not found in this scope\n  |\nhelp:\
    \ consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\
    \nerror[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmp2ycsgher.rs:7:50\n\
    \  |\n7 |     let mut distinct_characters: HashSet<char> = HashSet::new();\n \
    \ |                                                  ^^^^^^^ not found in this\
    \ scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed\
    \ explanations: E0412, E0433.\nFor more information about an error, try `rustc\
    \ --explain E0412`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_chars\
    \ = HashSet::new();\n    for c in string.chars() {\n        distinct_chars.insert(c.to_lowercase().next().unwrap());\n\
    \    }\n    distinct_chars.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpznoilhcp.rs:7:30\n  |\n7 |     let mut distinct_chars = HashSet::new();\n\
    \  |                              ^^^^^^^ not found in this scope\n  |\nhelp:\
    \ consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut chars:\
    \ HashSet<char> = HashSet::new();\n    for c in string.chars() {\n        chars.insert(c.to_lowercase().next().unwrap());\n\
    \    }\n    chars.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  stdout: ''
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmppf8giorm.rs:7:20\n\
    \  |\n7 |     let mut chars: HashSet<char> = HashSet::new();\n  |            \
    \        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n\
    \  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashSet`\n --> /tmp/tmppf8giorm.rs:7:36\n  |\n7 |  \
    \   let mut chars: HashSet<char> = HashSet::new();\n  |                      \
    \              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\n\
    For more information about an error, try `rustc --explain E0412`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut chars\
    \ = HashSet::new();\n    for c in string.chars() {\n        chars.insert(c.to_lowercase().to_string());\n\
    \    }\n    chars.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpapugg0qj.rs:7:21\n  |\n7 |     let mut chars = HashSet::new();\n  |\
    \                     ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters\
    \ = HashSet::new();\n    for character in string.chars() {\n        distinct_characters.insert(character.to_lowercase().to_string());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpsh4mds64.rs:7:35\n  |\n7 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters\
    \ = HashSet::new();\n    for character in string.chars() {\n        distinct_characters.insert(character.to_lowercase().next().unwrap());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp4gtho07z.rs:7:35\n  |\n7 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut set\
    \ = HashSet::new();\n    for c in string.chars() {\n        set.insert(c.to_lowercase().to_string());\n\
    \    }\n    set.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpyu73s3od.rs:7:19\n  |\n7 |     let mut set = HashSet::new();\n  |  \
    \                 ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut chars:\
    \ HashSet<char> = HashSet::new();\n    for c in string.chars() {\n        chars.insert(c.to_lowercase().next().unwrap());\n\
    \    }\n    chars.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  stdout: ''
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmprb20hee0.rs:7:20\n\
    \  |\n7 |     let mut chars: HashSet<char> = HashSet::new();\n  |            \
    \        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n\
    \  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashSet`\n --> /tmp/tmprb20hee0.rs:7:36\n  |\n7 |  \
    \   let mut chars: HashSet<char> = HashSet::new();\n  |                      \
    \              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\n\
    For more information about an error, try `rustc --explain E0412`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters:\
    \ HashSet<char> = HashSet::new();\n    for c in string.chars() {\n        distinct_characters.insert(c.to_lowercase().next().unwrap());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmp3pcq1f8m.rs:7:34\n\
    \  |\n7 |     let mut distinct_characters: HashSet<char> = HashSet::new();\n \
    \ |                                  ^^^^^^^ not found in this scope\n  |\nhelp:\
    \ consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\
    \nerror[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmp3pcq1f8m.rs:7:50\n\
    \  |\n7 |     let mut distinct_characters: HashSet<char> = HashSet::new();\n \
    \ |                                                  ^^^^^^^ not found in this\
    \ scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed\
    \ explanations: E0412, E0433.\nFor more information about an error, try `rustc\
    \ --explain E0412`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut chars:\
    \ Vec<char> = string.chars().collect();\n    chars.sort();\n    chars.dedup();\n\
    \    chars.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `5`', /tmp/tmpvrm356vt.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters:\
    \ HashSet<char> = HashSet::new();\n    for c in string.chars() {\n        distinct_characters.insert(c.to_lowercase().next().unwrap());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpgedppko9.rs:7:34\n\
    \  |\n7 |     let mut distinct_characters: HashSet<char> = HashSet::new();\n \
    \ |                                  ^^^^^^^ not found in this scope\n  |\nhelp:\
    \ consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\
    \nerror[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpgedppko9.rs:7:50\n\
    \  |\n7 |     let mut distinct_characters: HashSet<char> = HashSet::new();\n \
    \ |                                                  ^^^^^^^ not found in this\
    \ scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed\
    \ explanations: E0412, E0433.\nFor more information about an error, try `rustc\
    \ --explain E0412`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut chars:\
    \ Vec<char> = Vec::new();\n    for c in string.chars() {\n        if !chars.contains(&c.to_ascii_lowercase())\
    \ {\n            chars.push(c.to_ascii_lowercase());\n        }\n    }\n    chars.len()\
    \ as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_chars\
    \ = HashSet::new();\n    for c in string.chars() {\n        distinct_chars.insert(c.to_lowercase().to_string());\n\
    \    }\n    distinct_chars.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp_9d0vm_t.rs:7:30\n  |\n7 |     let mut distinct_chars = HashSet::new();\n\
    \  |                              ^^^^^^^ not found in this scope\n  |\nhelp:\
    \ consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters:\
    \ HashSet<char> = HashSet::new();\n    for character in string.chars() {\n   \
    \     distinct_characters.insert(character.to_lowercase().next().unwrap());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmp3qxu0hu0.rs:7:34\n\
    \  |\n7 |     let mut distinct_characters: HashSet<char> = HashSet::new();\n \
    \ |                                  ^^^^^^^ not found in this scope\n  |\nhelp:\
    \ consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\
    \nerror[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmp3qxu0hu0.rs:7:50\n\
    \  |\n7 |     let mut distinct_characters: HashSet<char> = HashSet::new();\n \
    \ |                                                  ^^^^^^^ not found in this\
    \ scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed\
    \ explanations: E0412, E0433.\nFor more information about an error, try `rustc\
    \ --explain E0412`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters\
    \ = HashSet::new();\n    for c in string.chars() {\n        distinct_characters.insert(c.to_lowercase().next().unwrap());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpp5xvns7l.rs:7:35\n  |\n7 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_chars\
    \ = HashSet::new();\n    for c in string.chars() {\n        distinct_chars.insert(c.to_lowercase().next().unwrap());\n\
    \    }\n    distinct_chars.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp1vxapi_g.rs:7:30\n  |\n7 |     let mut distinct_chars = HashSet::new();\n\
    \  |                              ^^^^^^^ not found in this scope\n  |\nhelp:\
    \ consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_characters\
    \ = HashSet::new();\n    for character in string.chars() {\n        distinct_characters.insert(character.to_lowercase().to_string());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpbsgu706a.rs:7:35\n  |\n7 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut distinct_chars\
    \ = HashSet::new();\n    for c in string.chars() {\n        distinct_chars.insert(c.to_lowercase().to_string());\n\
    \    }\n    distinct_chars.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpvxlyd_ng.rs:7:30\n  |\n7 |     let mut distinct_chars = HashSet::new();\n\
    \  |                              ^^^^^^^ not found in this scope\n  |\nhelp:\
    \ consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n/// >>> count_distinct_characters(String::from(\"\
    xyzXYZ\"))\n/// 3\n/// >>> count_distinct_characters(String::from(\"Jerry\"))\n\
    /// 4\nfn count_distinct_characters(string: String) -> isize {\n    let mut chars:\
    \ HashSet<char> = HashSet::new();\n    for c in string.chars() {\n        chars.insert(c.to_lowercase().to_string().chars().next().unwrap());\n\
    \    }\n    chars.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  stdout: ''
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmp4xhptmdz.rs:7:20\n\
    \  |\n7 |     let mut chars: HashSet<char> = HashSet::new();\n  |            \
    \        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n\
    \  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashSet`\n --> /tmp/tmp4xhptmdz.rs:7:36\n  |\n7 |  \
    \   let mut chars: HashSet<char> = HashSet::new();\n  |                      \
    \              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\n\
    For more information about an error, try `rustc --explain E0412`.\n"
  exit_code: 1
  status: SyntaxError

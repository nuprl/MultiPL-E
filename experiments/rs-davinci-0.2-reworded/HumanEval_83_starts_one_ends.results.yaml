name: HumanEval_83_starts_one_ends
language: rs
results:
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    for i in 1..n {\n        count += 9\
    \ * pow(10, i - 1);\n    }\n    count + pow(10, n - 1)\n}\n\nfn main() {\n   \
    \ let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `pow` in this scope\n --> /tmp/tmpyxj_g5nz.rs:6:22\n\
    \  |\n6 |         count += 9 * pow(10, i - 1);\n  |                      ^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find function `pow` in this scope\n\
    \ --> /tmp/tmpyxj_g5nz.rs:8:13\n  |\n8 |     count + pow(10, n - 1)\n  |     \
    \        ^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i) * starts_one_ends(n\
    \ - i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmp8s0wjqnn.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 1;\n    }\n\n    let mut sum = 0;\n\
    \    for i in 1..n {\n        sum += starts_one_ends(i);\n    }\n\n    sum + 1\n\
    }\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `18`', /tmp/tmpz_alfx7c.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i) * starts_one_ends(n\
    \ - i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmp2c8zae6h.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 1;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i) * starts_one_ends(n\
    \ - i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `18`', /tmp/tmpn17hxswp.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    let mut i = 1;\n    while i <= n {\n\
    \        count += 9 * 10isize.pow(i - 1);\n        i += 1;\n    }\n    count\n\
    }\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpu0zcjznk.rs:7:34\n  |\n7 |\
    \         count += 9 * 10isize.pow(i - 1);\n  |                              \
    \    ^^^^^ expected `u32`, found `isize`\n  |\nhelp: you can convert an `isize`\
    \ to a `u32` and panic if the converted value doesn't fit\n  |\n7 |         count\
    \ += 9 * 10isize.pow((i - 1).try_into().unwrap());\n  |                      \
    \            +     +++++++++++++++++++++\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut dp = vec![0;\
    \ n as usize];\n    dp[0] = 10;\n    dp[1] = 81;\n    for i in 2..n {\n      \
    \  dp[i as usize] = dp[(i - 1) as usize] * 9;\n    }\n    dp[(n - 1) as usize]\n\
    }\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmpew81cv7d.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut dp = vec![0;\
    \ n as usize];\n    dp[0] = 10;\n    for i in 1..n {\n        dp[i as usize] =\
    \ 9 * dp[(i - 1) as usize];\n    }\n    dp[(n - 1) as usize]\n}\n\nfn main() {\n\
    \    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmpy7gdcmcf.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    for i in 1..n {\n        count += 9\
    \ * 10isize.pow(i - 1);\n    }\n    count + 10isize.pow(n - 1)\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpxkwwmsat.rs:6:34\n  |\n6 |\
    \         count += 9 * 10isize.pow(i - 1);\n  |                              \
    \    ^^^^^ expected `u32`, found `isize`\n  |\nhelp: you can convert an `isize`\
    \ to a `u32` and panic if the converted value doesn't fit\n  |\n6 |         count\
    \ += 9 * 10isize.pow((i - 1).try_into().unwrap());\n  |                      \
    \            +     +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n -->\
    \ /tmp/tmpxkwwmsat.rs:8:25\n  |\n8 |     count + 10isize.pow(n - 1)\n  |     \
    \                    ^^^^^ expected `u32`, found `isize`\n  |\nhelp: you can convert\
    \ an `isize` to a `u32` and panic if the converted value doesn't fit\n  |\n8 |\
    \     count + 10isize.pow((n - 1).try_into().unwrap())\n  |                  \
    \       +     +++++++++++++++++++++\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    // The number of n-digit numbers that start with 1 is the same\
    \ as the\n    // number of (n-1)-digit numbers.\n    let start = count_n_digit_numbers(n\
    \ - 1);\n\n    // The number of n-digit numbers that end with 1 is the same as\
    \ the number\n    // of (n-1)-digit numbers, except that we can't have a leading\
    \ zero.\n    let end = count_n_digit_numbers(n - 1) - count_n_digit_numbers(n\
    \ - 2);\n\n    start + end\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `count_n_digit_numbers` in this scope\n\
    \ --> /tmp/tmp9w_yaam3.rs:6:17\n  |\n6 |     let start = count_n_digit_numbers(n\
    \ - 1);\n  |                 ^^^^^^^^^^^^^^^^^^^^^ not found in this scope\n\n\
    error[E0425]: cannot find function `count_n_digit_numbers` in this scope\n  -->\
    \ /tmp/tmp9w_yaam3.rs:10:15\n   |\n10 |     let end = count_n_digit_numbers(n\
    \ - 1) - count_n_digit_numbers(n - 2);\n   |               ^^^^^^^^^^^^^^^^^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find function `count_n_digit_numbers`\
    \ in this scope\n  --> /tmp/tmp9w_yaam3.rs:10:46\n   |\n10 |     let end = count_n_digit_numbers(n\
    \ - 1) - count_n_digit_numbers(n - 2);\n   |                                 \
    \             ^^^^^^^^^^^^^^^^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to 3 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i) * starts_one_ends(n\
    \ - i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmp1e9vu4b6.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    if n == 2 {\n   \
    \     return 4;\n    }\n    let mut dp = vec![0; n as usize];\n    dp[0] = 2;\n\
    \    dp[1] = 4;\n    for i in 2..n {\n        dp[i as usize] = dp[(i - 1) as usize]\
    \ + dp[(i - 2) as usize];\n    }\n    dp[(n - 1) as usize]\n}\n\nfn main() {\n\
    \    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmp_hf8y1g9.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    for i in 1..n {\n        count += starts_one_ends(i) * 10_isize.pow(n\
    \ - i - 1);\n    }\n    count + 10_isize.pow(n - 1)\n}\n\nfn main() {\n    let\
    \ candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpz3951y03.rs:9:52\n  |\n9 |\
    \         count += starts_one_ends(i) * 10_isize.pow(n - i - 1);\n  |        \
    \                                            ^^^^^^^^^ expected `u32`, found `isize`\n\
    \  |\nhelp: you can convert an `isize` to a `u32` and panic if the converted value\
    \ doesn't fit\n  |\n9 |         count += starts_one_ends(i) * 10_isize.pow((n\
    \ - i - 1).try_into().unwrap());\n  |                                        \
    \            +         +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmpz3951y03.rs:11:26\n   |\n11 |     count + 10_isize.pow(n - 1)\n\
    \   |                          ^^^^^ expected `u32`, found `isize`\n   |\nhelp:\
    \ you can convert an `isize` to a `u32` and panic if the converted value doesn't\
    \ fit\n   |\n11 |     count + 10_isize.pow((n - 1).try_into().unwrap())\n   |\
    \                          +     +++++++++++++++++++++\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    for i in 1..n + 1 {\n        count +=\
    \ starts_one_ends_helper(i);\n    }\n    count\n}\n\nfn main() {\n    let candidate\
    \ = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `starts_one_ends_helper` in this scope\n\
    \ --> /tmp/tmp22rimgsw.rs:6:18\n  |\n6 |         count += starts_one_ends_helper(i);\n\
    \  |                  ^^^^^^^^^^^^^^^^^^^^^^ not found in this scope\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n\n    let mut count\
    \ = 0;\n    for i in 1..n {\n        count += starts_one_ends(i) * 10_isize.pow(n\
    \ - i - 1);\n    }\n    count += 10_isize.pow(n - 1);\n    count\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpc8osk5bw.rs:10:52\n   |\n\
    10 |         count += starts_one_ends(i) * 10_isize.pow(n - i - 1);\n   |    \
    \                                                ^^^^^^^^^ expected `u32`, found\
    \ `isize`\n   |\nhelp: you can convert an `isize` to a `u32` and panic if the\
    \ converted value doesn't fit\n   |\n10 |         count += starts_one_ends(i)\
    \ * 10_isize.pow((n - i - 1).try_into().unwrap());\n   |                     \
    \                               +         +++++++++++++++++++++\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmpc8osk5bw.rs:12:27\n   |\n12 |     count += 10_isize.pow(n\
    \ - 1);\n   |                           ^^^^^ expected `u32`, found `isize`\n\
    \   |\nhelp: you can convert an `isize` to a `u32` and panic if the converted\
    \ value doesn't fit\n   |\n12 |     count += 10_isize.pow((n - 1).try_into().unwrap());\n\
    \   |                           +     +++++++++++++++++++++\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i) * starts_one_ends(n\
    \ - i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpjvk8una5.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    for i in 1..n {\n        count += 9\
    \ * 10_isize.pow(i - 1);\n    }\n    count + 1\n}\n\nfn main() {\n    let candidate\
    \ = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpi5rq020z.rs:6:35\n  |\n6 |\
    \         count += 9 * 10_isize.pow(i - 1);\n  |                             \
    \      ^^^^^ expected `u32`, found `isize`\n  |\nhelp: you can convert an `isize`\
    \ to a `u32` and panic if the converted value doesn't fit\n  |\n6 |         count\
    \ += 9 * 10_isize.pow((i - 1).try_into().unwrap());\n  |                     \
    \              +     +++++++++++++++++++++\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    let mut i = 1;\n    while i <= n {\n\
    \        count += 9 * starts_one_ends(n - i);\n        i += 1;\n    }\n    if\
    \ n == 1 {\n        count += 1;\n    }\n    count\n}\n\nfn main() {\n    let candidate\
    \ = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `18`', /tmp/tmpgg6mw2tv.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i);\n    }\n    count *\
    \ 9 + 10_isize.pow(n - 1)\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp_ib7c2tq.rs:11:30\n   |\n\
    11 |     count * 9 + 10_isize.pow(n - 1)\n   |                              ^^^^^\
    \ expected `u32`, found `isize`\n   |\nhelp: you can convert an `isize` to a `u32`\
    \ and panic if the converted value doesn't fit\n   |\n11 |     count * 9 + 10_isize.pow((n\
    \ - 1).try_into().unwrap())\n   |                              +     +++++++++++++++++++++\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    for i in 1..n {\n        count += starts_one_ends(i) * 10_isize.pow(n\
    \ - i - 1);\n    }\n    count += 10_isize.pow(n - 1);\n    count\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpew6xmzgj.rs:9:52\n  |\n9 |\
    \         count += starts_one_ends(i) * 10_isize.pow(n - i - 1);\n  |        \
    \                                            ^^^^^^^^^ expected `u32`, found `isize`\n\
    \  |\nhelp: you can convert an `isize` to a `u32` and panic if the converted value\
    \ doesn't fit\n  |\n9 |         count += starts_one_ends(i) * 10_isize.pow((n\
    \ - i - 1).try_into().unwrap());\n  |                                        \
    \            +         +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmpew6xmzgj.rs:11:27\n   |\n11 |     count += 10_isize.pow(n - 1);\n\
    \   |                           ^^^^^ expected `u32`, found `isize`\n   |\nhelp:\
    \ you can convert an `isize` to a `u32` and panic if the converted value doesn't\
    \ fit\n   |\n11 |     count += 10_isize.pow((n - 1).try_into().unwrap());\n  \
    \ |                           +     +++++++++++++++++++++\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 1;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i) * starts_one_ends(n\
    \ - i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `18`', /tmp/tmp5icke8vy.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 9;\n    let mut i = 2;\n    while i <= n {\n        count = count * (9 - i +\
    \ 2);\n        i += 1;\n    }\n    count\n}\n\nfn main() {\n    let candidate\
    \ = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmpoxle944u.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i) * starts_one_ends(n\
    \ - i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmp0sjh42ob.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    for i in 1..n {\n        count += 9 * starts_one_ends(i);\n    }\n \
    \   count + 9\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmpkbxkz3fg.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    let mut i = 1;\n    while i < n {\n        count += 9 * starts_one_ends(i);\n\
    \        i += 1;\n    }\n    count + 9\n}\n\nfn main() {\n    let candidate =\
    \ starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmp852a5c9_.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    let mut i = 1;\n    while i <= n {\n\
    \        count += 9 * (10 as isize).pow(i - 1);\n        i += 1;\n    }\n    count\n\
    }\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpu3hl8qvy.rs:7:40\n  |\n7 |\
    \         count += 9 * (10 as isize).pow(i - 1);\n  |                        \
    \                ^^^^^ expected `u32`, found `isize`\n  |\nhelp: you can convert\
    \ an `isize` to a `u32` and panic if the converted value doesn't fit\n  |\n7 |\
    \         count += 9 * (10 as isize).pow((i - 1).try_into().unwrap());\n  |  \
    \                                      +     +++++++++++++++++++++\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i) * starts_one_ends(n\
    \ - i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpa2es5csb.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n\n    let mut a = 1;\n\
    \    let mut b = 1;\n    let mut c = 0;\n    for _ in 1..n {\n        c = (a +\
    \ b) * 9;\n        a = b;\n        b = c;\n    }\n\n    c + a\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmphw0fz865.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    let mut power = 1;\n    for _ in 0..n\
    \ {\n        count += 9 * power;\n        power *= 10;\n    }\n    count\n}\n\n\
    fn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `1`', /tmp/tmpvln6kl31.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n\n    let mut count\
    \ = 0;\n    let mut i = 1;\n    while i < n {\n        count += 9 * starts_one_ends(n\
    \ - i);\n        i += 1;\n    }\n    count += starts_one_ends(n - i);\n    count\n\
    }\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmpvfl9_q4u.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 1;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i) * starts_one_ends(n\
    \ - i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `18`', /tmp/tmpvyxp2uza.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    for i in 1..n {\n        count += 9\
    \ * starts_one_ends(i - 1);\n    }\n    count + 9\n}\n\nfn main() {\n    let candidate\
    \ = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `1`', /tmp/tmpfv8qfpq_.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    for i in 1..n {\n        count += 9\
    \ * 10isize.pow(i - 1);\n    }\n    count + 10isize.pow(n - 1)\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsri1s6m6.rs:6:34\n  |\n6 |\
    \         count += 9 * 10isize.pow(i - 1);\n  |                              \
    \    ^^^^^ expected `u32`, found `isize`\n  |\nhelp: you can convert an `isize`\
    \ to a `u32` and panic if the converted value doesn't fit\n  |\n6 |         count\
    \ += 9 * 10isize.pow((i - 1).try_into().unwrap());\n  |                      \
    \            +     +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n -->\
    \ /tmp/tmpsri1s6m6.rs:8:25\n  |\n8 |     count + 10isize.pow(n - 1)\n  |     \
    \                    ^^^^^ expected `u32`, found `isize`\n  |\nhelp: you can convert\
    \ an `isize` to a `u32` and panic if the converted value doesn't fit\n  |\n8 |\
    \     count + 10isize.pow((n - 1).try_into().unwrap())\n  |                  \
    \       +     +++++++++++++++++++++\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut dp = vec![0;\
    \ n as usize];\n    dp[0] = 10;\n    dp[1] = 81;\n    for i in 2..n {\n      \
    \  dp[i as usize] = dp[(i - 1) as usize] * (9 - i + 2);\n    }\n    dp[(n - 1)\
    \ as usize]\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmpzu16nulo.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    for i in 1..n {\n        count += starts_one_ends(i) * 10_isize.pow(n\
    \ - i - 1);\n    }\n    count + 10_isize.pow(n - 1)\n}\n\nfn main() {\n    let\
    \ candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpp34zzy5h.rs:9:52\n  |\n9 |\
    \         count += starts_one_ends(i) * 10_isize.pow(n - i - 1);\n  |        \
    \                                            ^^^^^^^^^ expected `u32`, found `isize`\n\
    \  |\nhelp: you can convert an `isize` to a `u32` and panic if the converted value\
    \ doesn't fit\n  |\n9 |         count += starts_one_ends(i) * 10_isize.pow((n\
    \ - i - 1).try_into().unwrap());\n  |                                        \
    \            +         +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmpp34zzy5h.rs:11:26\n   |\n11 |     count + 10_isize.pow(n - 1)\n\
    \   |                          ^^^^^ expected `u32`, found `isize`\n   |\nhelp:\
    \ you can convert an `isize` to a `u32` and panic if the converted value doesn't\
    \ fit\n   |\n11 |     count + 10_isize.pow((n - 1).try_into().unwrap())\n   |\
    \                          +     +++++++++++++++++++++\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    for i in 1..n {\n        count += starts_one_ends(i) * 10isize.pow(n\
    \ - i - 1);\n    }\n    count + 10isize.pow(n - 1)\n}\n\nfn main() {\n    let\
    \ candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmppjj7pmm4.rs:9:51\n  |\n9 |\
    \         count += starts_one_ends(i) * 10isize.pow(n - i - 1);\n  |         \
    \                                          ^^^^^^^^^ expected `u32`, found `isize`\n\
    \  |\nhelp: you can convert an `isize` to a `u32` and panic if the converted value\
    \ doesn't fit\n  |\n9 |         count += starts_one_ends(i) * 10isize.pow((n -\
    \ i - 1).try_into().unwrap());\n  |                                          \
    \         +         +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmppjj7pmm4.rs:11:25\n   |\n11 |     count + 10isize.pow(n - 1)\n\
    \   |                         ^^^^^ expected `u32`, found `isize`\n   |\nhelp:\
    \ you can convert an `isize` to a `u32` and panic if the converted value doesn't\
    \ fit\n   |\n11 |     count + 10isize.pow((n - 1).try_into().unwrap())\n   | \
    \                        +     +++++++++++++++++++++\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i) * starts_one_ends(n\
    \ - i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpy39vhhmp.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    let mut dp = vec![0;\
    \ n as usize];\n    dp[0] = 1;\n    dp[1] = 2;\n    for i in 2..n {\n        dp[i\
    \ as usize] = dp[(i - 1) as usize] + dp[(i - 2) as usize];\n    }\n    dp[(n -\
    \ 1) as usize] * 2\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n \
    \   assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmppbw14yuf.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    for i in 1..n {\n        count += starts_one_ends(i);\n    }\n    count\
    \ *= 9;\n    count += starts_one_ends(n - 1);\n    count\n}\n\nfn main() {\n \
    \   let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmpkka3ipbp.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 1;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i) * starts_one_ends(n\
    \ - i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `18`', /tmp/tmpcboyck8z.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    for i in 1..n {\n        count += starts_one_ends(i) * 10_isize.pow(n\
    \ - i - 1);\n    }\n    count + 10_isize.pow(n - 1)\n}\n\nfn main() {\n    let\
    \ candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp5u9elhzo.rs:9:52\n  |\n9 |\
    \         count += starts_one_ends(i) * 10_isize.pow(n - i - 1);\n  |        \
    \                                            ^^^^^^^^^ expected `u32`, found `isize`\n\
    \  |\nhelp: you can convert an `isize` to a `u32` and panic if the converted value\
    \ doesn't fit\n  |\n9 |         count += starts_one_ends(i) * 10_isize.pow((n\
    \ - i - 1).try_into().unwrap());\n  |                                        \
    \            +         +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmp5u9elhzo.rs:11:26\n   |\n11 |     count + 10_isize.pow(n - 1)\n\
    \   |                          ^^^^^ expected `u32`, found `isize`\n   |\nhelp:\
    \ you can convert an `isize` to a `u32` and panic if the converted value doesn't\
    \ fit\n   |\n11 |     count + 10_isize.pow((n - 1).try_into().unwrap())\n   |\
    \                          +     +++++++++++++++++++++\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    for i in 1..n {\n        count += 9 * starts_one_ends(i);\n    }\n \
    \   count + 9\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmpptkrf9p6.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n\n    let mut count\
    \ = 0;\n    for i in 1..n {\n        count += 9 * starts_one_ends(i);\n    }\n\
    \n    count + 9 * starts_one_ends(n - 1)\n}\n\nfn main() {\n    let candidate\
    \ = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmp1rtdz2q5.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    for i in 1..n {\n        count += 9\
    \ * 10_isize.pow(i - 1);\n    }\n    count + 10_isize.pow(n - 1)\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpzfkecldq.rs:6:35\n  |\n6 |\
    \         count += 9 * 10_isize.pow(i - 1);\n  |                             \
    \      ^^^^^ expected `u32`, found `isize`\n  |\nhelp: you can convert an `isize`\
    \ to a `u32` and panic if the converted value doesn't fit\n  |\n6 |         count\
    \ += 9 * 10_isize.pow((i - 1).try_into().unwrap());\n  |                     \
    \              +     +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n\
    \ --> /tmp/tmpzfkecldq.rs:8:26\n  |\n8 |     count + 10_isize.pow(n - 1)\n  |\
    \                          ^^^^^ expected `u32`, found `isize`\n  |\nhelp: you\
    \ can convert an `isize` to a `u32` and panic if the converted value doesn't fit\n\
    \  |\n8 |     count + 10_isize.pow((n - 1).try_into().unwrap())\n  |         \
    \                 +     +++++++++++++++++++++\n\nerror: aborting due to 2 previous\
    \ errors\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut result = 0;\n    let mut i = 1;\n    while i <= n {\n\
    \        result += 9 * starts_one_ends(n - i);\n        i += 1;\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpgt2dum0n.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut dp = vec![0;\
    \ n as usize];\n    dp[0] = 1;\n    for i in 1..n {\n        dp[i as usize] =\
    \ dp[(i - 1) as usize] * 9 + 10_isize.pow(i - 1);\n    }\n    dp[(n - 1) as usize]\n\
    }\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpk9zsk5pf.rs:10:66\n   |\n\
    10 |         dp[i as usize] = dp[(i - 1) as usize] * 9 + 10_isize.pow(i - 1);\n\
    \   |                                                                  ^^^^^ expected\
    \ `u32`, found `isize`\n   |\nhelp: you can convert an `isize` to a `u32` and\
    \ panic if the converted value doesn't fit\n   |\n10 |         dp[i as usize]\
    \ = dp[(i - 1) as usize] * 9 + 10_isize.pow((i - 1).try_into().unwrap());\n  \
    \ |                                                                  +     +++++++++++++++++++++\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    for i in 1..n {\n        count += 9\
    \ * (10 as isize).pow(i - 1);\n    }\n    count\n}\n\nfn main() {\n    let candidate\
    \ = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpi0gssc06.rs:6:40\n  |\n6 |\
    \         count += 9 * (10 as isize).pow(i - 1);\n  |                        \
    \                ^^^^^ expected `u32`, found `isize`\n  |\nhelp: you can convert\
    \ an `isize` to a `u32` and panic if the converted value doesn't fit\n  |\n6 |\
    \         count += 9 * (10 as isize).pow((i - 1).try_into().unwrap());\n  |  \
    \                                      +     +++++++++++++++++++++\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    for i in 1..n {\n        count += starts_one_ends(i) * 9 * 10isize.pow(n\
    \ - i - 1);\n    }\n    count += 10isize.pow(n - 1);\n    count\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpfs66yhkf.rs:9:55\n  |\n9 |\
    \         count += starts_one_ends(i) * 9 * 10isize.pow(n - i - 1);\n  |     \
    \                                                  ^^^^^^^^^ expected `u32`, found\
    \ `isize`\n  |\nhelp: you can convert an `isize` to a `u32` and panic if the converted\
    \ value doesn't fit\n  |\n9 |         count += starts_one_ends(i) * 9 * 10isize.pow((n\
    \ - i - 1).try_into().unwrap());\n  |                                        \
    \               +         +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmpfs66yhkf.rs:11:26\n   |\n11 |     count += 10isize.pow(n - 1);\n\
    \   |                          ^^^^^ expected `u32`, found `isize`\n   |\nhelp:\
    \ you can convert an `isize` to a `u32` and panic if the converted value doesn't\
    \ fit\n   |\n11 |     count += 10isize.pow((n - 1).try_into().unwrap());\n   |\
    \                          +     +++++++++++++++++++++\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 1;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i);\n    }\n    count +\
    \ 1\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `18`', /tmp/tmpx827a2wt.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i);\n    }\n    count *=\
    \ 9;\n    count += starts_one_ends(n - 1);\n    count\n}\n\nfn main() {\n    let\
    \ candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmp22s6nd6s.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    for i in 1..n {\n        count += 9\
    \ * 10isize.pow(i - 1);\n    }\n    count + 10isize.pow(n - 1)\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp53bkglhz.rs:6:34\n  |\n6 |\
    \         count += 9 * 10isize.pow(i - 1);\n  |                              \
    \    ^^^^^ expected `u32`, found `isize`\n  |\nhelp: you can convert an `isize`\
    \ to a `u32` and panic if the converted value doesn't fit\n  |\n6 |         count\
    \ += 9 * 10isize.pow((i - 1).try_into().unwrap());\n  |                      \
    \            +     +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n -->\
    \ /tmp/tmp53bkglhz.rs:8:25\n  |\n8 |     count + 10isize.pow(n - 1)\n  |     \
    \                    ^^^^^ expected `u32`, found `isize`\n  |\nhelp: you can convert\
    \ an `isize` to a `u32` and panic if the converted value doesn't fit\n  |\n8 |\
    \     count + 10isize.pow((n - 1).try_into().unwrap())\n  |                  \
    \       +     +++++++++++++++++++++\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut dp = vec![0; (n + 1) as usize];\n    dp[1] = 1;\n  \
    \  for i in 2..=n {\n        dp[i as usize] = dp[(i - 1) as usize] * 9 + dp[(i\
    \ - 2) as usize];\n    }\n    dp[n as usize]\n}\n\nfn main() {\n    let candidate\
    \ = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `18`', /tmp/tmp0octtine.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    let mut start = 1;\n    let mut end\
    \ = 1;\n    for _ in 0..n {\n        count += start + end;\n        start *= 10;\n\
    \        end = end * 10 + 1;\n    }\n    count\n}\n\nfn main() {\n    let candidate\
    \ = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpfidvoib4.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 1;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i) * starts_one_ends(n\
    \ - i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `18`', /tmp/tmp4ejq3pu9.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    for i in 1..n {\n        count += starts_one_ends(i) * 9 * 10isize.pow(n\
    \ - i - 1);\n    }\n    count + 10isize.pow(n - 1)\n}\n\nfn main() {\n    let\
    \ candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpxfdosufy.rs:9:55\n  |\n9 |\
    \         count += starts_one_ends(i) * 9 * 10isize.pow(n - i - 1);\n  |     \
    \                                                  ^^^^^^^^^ expected `u32`, found\
    \ `isize`\n  |\nhelp: you can convert an `isize` to a `u32` and panic if the converted\
    \ value doesn't fit\n  |\n9 |         count += starts_one_ends(i) * 9 * 10isize.pow((n\
    \ - i - 1).try_into().unwrap());\n  |                                        \
    \               +         +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmpxfdosufy.rs:11:25\n   |\n11 |     count + 10isize.pow(n - 1)\n\
    \   |                         ^^^^^ expected `u32`, found `isize`\n   |\nhelp:\
    \ you can convert an `isize` to a `u32` and panic if the converted value doesn't\
    \ fit\n   |\n11 |     count + 10isize.pow((n - 1).try_into().unwrap())\n   | \
    \                        +     +++++++++++++++++++++\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    for i in 1..10 {\n        count += starts_one_ends(n - 1);\n    }\n\
    \    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmpsop0ncbz.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    for i in 1..n {\n        count += 9\
    \ * 10isize.pow(i - 1);\n    }\n    count + 10isize.pow(n - 1)\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpvxnq4fq7.rs:6:34\n  |\n6 |\
    \         count += 9 * 10isize.pow(i - 1);\n  |                              \
    \    ^^^^^ expected `u32`, found `isize`\n  |\nhelp: you can convert an `isize`\
    \ to a `u32` and panic if the converted value doesn't fit\n  |\n6 |         count\
    \ += 9 * 10isize.pow((i - 1).try_into().unwrap());\n  |                      \
    \            +     +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n -->\
    \ /tmp/tmpvxnq4fq7.rs:8:25\n  |\n8 |     count + 10isize.pow(n - 1)\n  |     \
    \                    ^^^^^ expected `u32`, found `isize`\n  |\nhelp: you can convert\
    \ an `isize` to a `u32` and panic if the converted value doesn't fit\n  |\n8 |\
    \     count + 10isize.pow((n - 1).try_into().unwrap())\n  |                  \
    \       +     +++++++++++++++++++++\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    for i in 1..n {\n        count += starts_one_ends(i)\
    \ * 10_isize.pow(n - i - 1);\n    }\n    count + 10_isize.pow(n - 1)\n}\n\nfn\
    \ main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpj1yrc5mr.rs:6:52\n  |\n6 |\
    \         count += starts_one_ends(i) * 10_isize.pow(n - i - 1);\n  |        \
    \                                            ^^^^^^^^^ expected `u32`, found `isize`\n\
    \  |\nhelp: you can convert an `isize` to a `u32` and panic if the converted value\
    \ doesn't fit\n  |\n6 |         count += starts_one_ends(i) * 10_isize.pow((n\
    \ - i - 1).try_into().unwrap());\n  |                                        \
    \            +         +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n\
    \ --> /tmp/tmpj1yrc5mr.rs:8:26\n  |\n8 |     count + 10_isize.pow(n - 1)\n  |\
    \                          ^^^^^ expected `u32`, found `isize`\n  |\nhelp: you\
    \ can convert an `isize` to a `u32` and panic if the converted value doesn't fit\n\
    \  |\n8 |     count + 10_isize.pow((n - 1).try_into().unwrap())\n  |         \
    \                 +     +++++++++++++++++++++\n\nerror: aborting due to 2 previous\
    \ errors\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    for i in 1..n {\n        count += starts_one_ends(i) * 10_isize.pow(n\
    \ - i - 1);\n    }\n    count + 10_isize.pow(n - 1)\n}\n\nfn main() {\n    let\
    \ candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpz581jf_f.rs:9:52\n  |\n9 |\
    \         count += starts_one_ends(i) * 10_isize.pow(n - i - 1);\n  |        \
    \                                            ^^^^^^^^^ expected `u32`, found `isize`\n\
    \  |\nhelp: you can convert an `isize` to a `u32` and panic if the converted value\
    \ doesn't fit\n  |\n9 |         count += starts_one_ends(i) * 10_isize.pow((n\
    \ - i - 1).try_into().unwrap());\n  |                                        \
    \            +         +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmpz581jf_f.rs:11:26\n   |\n11 |     count + 10_isize.pow(n - 1)\n\
    \   |                          ^^^^^ expected `u32`, found `isize`\n   |\nhelp:\
    \ you can convert an `isize` to a `u32` and panic if the converted value doesn't\
    \ fit\n   |\n11 |     count + 10_isize.pow((n - 1).try_into().unwrap())\n   |\
    \                          +     +++++++++++++++++++++\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i) * starts_one_ends(n\
    \ - i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpibhripz2.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    let mut i = 1;\n    while i < n {\n        count += 9 * starts_one_ends(i)\
    \ * 10isize.pow(n - i - 1);\n        i += 1;\n    }\n    count + 10isize.pow(n\
    \ - 1)\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp9f8si_x5.rs:10:55\n   |\n\
    10 |         count += 9 * starts_one_ends(i) * 10isize.pow(n - i - 1);\n   | \
    \                                                      ^^^^^^^^^ expected `u32`,\
    \ found `isize`\n   |\nhelp: you can convert an `isize` to a `u32` and panic if\
    \ the converted value doesn't fit\n   |\n10 |         count += 9 * starts_one_ends(i)\
    \ * 10isize.pow((n - i - 1).try_into().unwrap());\n   |                      \
    \                                 +         +++++++++++++++++++++\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmp9f8si_x5.rs:13:25\n   |\n13 |     count + 10isize.pow(n\
    \ - 1)\n   |                         ^^^^^ expected `u32`, found `isize`\n   |\n\
    help: you can convert an `isize` to a `u32` and panic if the converted value doesn't\
    \ fit\n   |\n13 |     count + 10isize.pow((n - 1).try_into().unwrap())\n   | \
    \                        +     +++++++++++++++++++++\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n\n    let mut count\
    \ = 0;\n    for i in 1..n {\n        count += starts_one_ends(i) * 10_isize.pow(n\
    \ - i - 1);\n    }\n    count + 10_isize.pow(n - 1)\n}\n\nfn main() {\n    let\
    \ candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpny3nj4wi.rs:10:52\n   |\n\
    10 |         count += starts_one_ends(i) * 10_isize.pow(n - i - 1);\n   |    \
    \                                                ^^^^^^^^^ expected `u32`, found\
    \ `isize`\n   |\nhelp: you can convert an `isize` to a `u32` and panic if the\
    \ converted value doesn't fit\n   |\n10 |         count += starts_one_ends(i)\
    \ * 10_isize.pow((n - i - 1).try_into().unwrap());\n   |                     \
    \                               +         +++++++++++++++++++++\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmpny3nj4wi.rs:12:26\n   |\n12 |     count + 10_isize.pow(n\
    \ - 1)\n   |                          ^^^^^ expected `u32`, found `isize`\n  \
    \ |\nhelp: you can convert an `isize` to a `u32` and panic if the converted value\
    \ doesn't fit\n   |\n12 |     count + 10_isize.pow((n - 1).try_into().unwrap())\n\
    \   |                          +     +++++++++++++++++++++\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    let mut count = 0;\n\
    \    let mut i = 1;\n    while i < n {\n        count += 9 * starts_one_ends(n\
    \ - i - 1);\n        i += 1;\n    }\n    count + 9\n}\n\nfn main() {\n    let\
    \ candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmp99gejdp0.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    for i in 1..n {\n        count += starts_one_ends(i) * 10_isize.pow(n\
    \ - i - 1);\n    }\n    count + 10_isize.pow(n - 1)\n}\n\nfn main() {\n    let\
    \ candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpv14sw3d2.rs:9:52\n  |\n9 |\
    \         count += starts_one_ends(i) * 10_isize.pow(n - i - 1);\n  |        \
    \                                            ^^^^^^^^^ expected `u32`, found `isize`\n\
    \  |\nhelp: you can convert an `isize` to a `u32` and panic if the converted value\
    \ doesn't fit\n  |\n9 |         count += starts_one_ends(i) * 10_isize.pow((n\
    \ - i - 1).try_into().unwrap());\n  |                                        \
    \            +         +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmpv14sw3d2.rs:11:26\n   |\n11 |     count + 10_isize.pow(n - 1)\n\
    \   |                          ^^^^^ expected `u32`, found `isize`\n   |\nhelp:\
    \ you can convert an `isize` to a `u32` and panic if the converted value doesn't\
    \ fit\n   |\n11 |     count + 10_isize.pow((n - 1).try_into().unwrap())\n   |\
    \                          +     +++++++++++++++++++++\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    let mut count = 0;\n\
    \    let mut i = 1;\n    while i < n {\n        count += starts_one_ends(i) *\
    \ starts_one_ends(n - i);\n        i += 1;\n    }\n    count + 2\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpkq62sa43.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 9;\n    let mut i = 1;\n    while i < n {\n        count *= 10 - i;\n      \
    \  i += 1;\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmpb_qv043o.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i);\n    }\n    count *=\
    \ 9;\n    count += starts_one_ends(n - 1);\n    count\n}\n\nfn main() {\n    let\
    \ candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpgnjf_6wm.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut dp = vec![0;\
    \ (n + 1) as usize];\n    dp[1] = 10;\n    dp[2] = 81;\n    for i in 3..=n {\n\
    \        dp[i as usize] = dp[(i - 1) as usize] * (9 - i + 2) + dp[(i - 2) as usize];\n\
    \    }\n    dp[n as usize]\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmpc_7odynd.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    for i in 1..n {\n        count += starts_one_ends(i) * 9 * 10_isize.pow(n\
    \ - i - 1);\n    }\n    count + 10_isize.pow(n - 1)\n}\n\nfn main() {\n    let\
    \ candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpzqgn8hc6.rs:9:56\n  |\n9 |\
    \         count += starts_one_ends(i) * 9 * 10_isize.pow(n - i - 1);\n  |    \
    \                                                    ^^^^^^^^^ expected `u32`,\
    \ found `isize`\n  |\nhelp: you can convert an `isize` to a `u32` and panic if\
    \ the converted value doesn't fit\n  |\n9 |         count += starts_one_ends(i)\
    \ * 9 * 10_isize.pow((n - i - 1).try_into().unwrap());\n  |                  \
    \                                      +         +++++++++++++++++++++\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmpzqgn8hc6.rs:11:26\n   |\n11 |     count + 10_isize.pow(n\
    \ - 1)\n   |                          ^^^^^ expected `u32`, found `isize`\n  \
    \ |\nhelp: you can convert an `isize` to a `u32` and panic if the converted value\
    \ doesn't fit\n   |\n11 |     count + 10_isize.pow((n - 1).try_into().unwrap())\n\
    \   |                          +     +++++++++++++++++++++\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    if n == 2 {\n  \
    \      return 55;\n    }\n    let mut dp = vec![0; n as usize];\n    dp[0] = 10;\n\
    \    dp[1] = 55;\n    for i in 2..n {\n        dp[i as usize] = dp[(i - 1) as\
    \ usize] + dp[(i - 2) as usize];\n    }\n    dp[(n - 1) as usize]\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmpcwpe68_k.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    for i in 1..n {\n        count += starts_one_ends(i) * 9 * 10isize.pow(n\
    \ - i - 1);\n    }\n    count + 10isize.pow(n - 1)\n}\n\nfn main() {\n    let\
    \ candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpihv_zrpp.rs:9:55\n  |\n9 |\
    \         count += starts_one_ends(i) * 9 * 10isize.pow(n - i - 1);\n  |     \
    \                                                  ^^^^^^^^^ expected `u32`, found\
    \ `isize`\n  |\nhelp: you can convert an `isize` to a `u32` and panic if the converted\
    \ value doesn't fit\n  |\n9 |         count += starts_one_ends(i) * 9 * 10isize.pow((n\
    \ - i - 1).try_into().unwrap());\n  |                                        \
    \               +         +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmpihv_zrpp.rs:11:25\n   |\n11 |     count + 10isize.pow(n - 1)\n\
    \   |                         ^^^^^ expected `u32`, found `isize`\n   |\nhelp:\
    \ you can convert an `isize` to a `u32` and panic if the converted value doesn't\
    \ fit\n   |\n11 |     count + 10isize.pow((n - 1).try_into().unwrap())\n   | \
    \                        +     +++++++++++++++++++++\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    for i in 1..n {\n        count += starts_one_ends(i) * 10_isize.pow(n\
    \ - i - 1);\n    }\n    count + 10_isize.pow(n - 1)\n}\n\nfn main() {\n    let\
    \ candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpakj0jx9_.rs:9:52\n  |\n9 |\
    \         count += starts_one_ends(i) * 10_isize.pow(n - i - 1);\n  |        \
    \                                            ^^^^^^^^^ expected `u32`, found `isize`\n\
    \  |\nhelp: you can convert an `isize` to a `u32` and panic if the converted value\
    \ doesn't fit\n  |\n9 |         count += starts_one_ends(i) * 10_isize.pow((n\
    \ - i - 1).try_into().unwrap());\n  |                                        \
    \            +         +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmpakj0jx9_.rs:11:26\n   |\n11 |     count + 10_isize.pow(n - 1)\n\
    \   |                          ^^^^^ expected `u32`, found `isize`\n   |\nhelp:\
    \ you can convert an `isize` to a `u32` and panic if the converted value doesn't\
    \ fit\n   |\n11 |     count + 10_isize.pow((n - 1).try_into().unwrap())\n   |\
    \                          +     +++++++++++++++++++++\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    for i in 1..n {\n        count += starts_one_ends(i);\n    }\n    count\
    \ * 9 + 10\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmpowesa1jd.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 1;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i);\n    }\n    count *=\
    \ 9;\n    count += starts_one_ends(n - 1);\n    count\n}\n\nfn main() {\n    let\
    \ candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `18`', /tmp/tmpzc_h3m5h.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    for i in 1..n {\n        count += starts_one_ends(i) * 9 * 10isize.pow(n\
    \ - i - 1);\n    }\n    count + 10isize.pow(n - 1)\n}\n\nfn main() {\n    let\
    \ candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpef7etdi3.rs:9:55\n  |\n9 |\
    \         count += starts_one_ends(i) * 9 * 10isize.pow(n - i - 1);\n  |     \
    \                                                  ^^^^^^^^^ expected `u32`, found\
    \ `isize`\n  |\nhelp: you can convert an `isize` to a `u32` and panic if the converted\
    \ value doesn't fit\n  |\n9 |         count += starts_one_ends(i) * 9 * 10isize.pow((n\
    \ - i - 1).try_into().unwrap());\n  |                                        \
    \               +         +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmpef7etdi3.rs:11:25\n   |\n11 |     count + 10isize.pow(n - 1)\n\
    \   |                         ^^^^^ expected `u32`, found `isize`\n   |\nhelp:\
    \ you can convert an `isize` to a `u32` and panic if the converted value doesn't\
    \ fit\n   |\n11 |     count + 10isize.pow((n - 1).try_into().unwrap())\n   | \
    \                        +     +++++++++++++++++++++\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n\n    let mut count\
    \ = 0;\n    for i in 1..n {\n        count += starts_one_ends(i) * 10_isize.pow(n\
    \ - i - 1);\n    }\n    count += 10_isize.pow(n - 1);\n    count\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpd4o5c3k_.rs:10:52\n   |\n\
    10 |         count += starts_one_ends(i) * 10_isize.pow(n - i - 1);\n   |    \
    \                                                ^^^^^^^^^ expected `u32`, found\
    \ `isize`\n   |\nhelp: you can convert an `isize` to a `u32` and panic if the\
    \ converted value doesn't fit\n   |\n10 |         count += starts_one_ends(i)\
    \ * 10_isize.pow((n - i - 1).try_into().unwrap());\n   |                     \
    \                               +         +++++++++++++++++++++\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmpd4o5c3k_.rs:12:27\n   |\n12 |     count += 10_isize.pow(n\
    \ - 1);\n   |                           ^^^^^ expected `u32`, found `isize`\n\
    \   |\nhelp: you can convert an `isize` to a `u32` and panic if the converted\
    \ value doesn't fit\n   |\n12 |     count += 10_isize.pow((n - 1).try_into().unwrap());\n\
    \   |                           +     +++++++++++++++++++++\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    for i in 1..n {\n        count += starts_one_ends(i) * 9 * 10isize.pow(n\
    \ - i - 1);\n    }\n    count + 10isize.pow(n - 1)\n}\n\nfn main() {\n    let\
    \ candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpa1855yp3.rs:9:55\n  |\n9 |\
    \         count += starts_one_ends(i) * 9 * 10isize.pow(n - i - 1);\n  |     \
    \                                                  ^^^^^^^^^ expected `u32`, found\
    \ `isize`\n  |\nhelp: you can convert an `isize` to a `u32` and panic if the converted\
    \ value doesn't fit\n  |\n9 |         count += starts_one_ends(i) * 9 * 10isize.pow((n\
    \ - i - 1).try_into().unwrap());\n  |                                        \
    \               +         +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmpa1855yp3.rs:11:25\n   |\n11 |     count + 10isize.pow(n - 1)\n\
    \   |                         ^^^^^ expected `u32`, found `isize`\n   |\nhelp:\
    \ you can convert an `isize` to a `u32` and panic if the converted value doesn't\
    \ fit\n   |\n11 |     count + 10isize.pow((n - 1).try_into().unwrap())\n   | \
    \                        +     +++++++++++++++++++++\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    for i in 1..n {\n        count += starts_one_ends(i) * 10_isize.pow(n\
    \ - i - 1);\n    }\n    count + 10_isize.pow(n - 1)\n}\n\nfn main() {\n    let\
    \ candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpby_nrhkd.rs:9:52\n  |\n9 |\
    \         count += starts_one_ends(i) * 10_isize.pow(n - i - 1);\n  |        \
    \                                            ^^^^^^^^^ expected `u32`, found `isize`\n\
    \  |\nhelp: you can convert an `isize` to a `u32` and panic if the converted value\
    \ doesn't fit\n  |\n9 |         count += starts_one_ends(i) * 10_isize.pow((n\
    \ - i - 1).try_into().unwrap());\n  |                                        \
    \            +         +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmpby_nrhkd.rs:11:26\n   |\n11 |     count + 10_isize.pow(n - 1)\n\
    \   |                          ^^^^^ expected `u32`, found `isize`\n   |\nhelp:\
    \ you can convert an `isize` to a `u32` and panic if the converted value doesn't\
    \ fit\n   |\n11 |     count + 10_isize.pow((n - 1).try_into().unwrap())\n   |\
    \                          +     +++++++++++++++++++++\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    for i in 1..10 {\n        count += starts_one_ends(n - 1);\n    }\n\
    \    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmpowbwbocb.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    let mut start = 1;\n    let mut end = 1;\n    for _ in 1..n {\n    \
    \    start *= 10;\n        end = end * 10 + 1;\n    }\n    count += start;\n \
    \   count += end;\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmpp1q_2kbm.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i) * starts_one_ends(n\
    \ - i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpndjm3tsf.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 9;\n    for _ in 2..n {\n        count *= 10;\n    }\n    count * 2\n}\n\nfn\
    \ main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmpr8cbps87.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 9;\n    for _ in 1..n {\n        count *= 10;\n    }\n    count\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmpp43ssdmd.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    if n == 2 {\n   \
    \     return 4;\n    }\n    if n == 3 {\n        return 8;\n    }\n    let mut\
    \ dp = vec![0; n as usize];\n    dp[0] = 2;\n    dp[1] = 4;\n    dp[2] = 8;\n\
    \    for i in 3..n {\n        dp[i as usize] = dp[(i - 1) as usize] + dp[(i -\
    \ 2) as usize] + dp[(i - 3) as usize];\n    }\n    dp[(n - 1) as usize]\n}\n\n\
    fn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmp7w8zmuen.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i) * starts_one_ends(n\
    \ - i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmp90bs3kp4.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    for i in 1..n {\n        count += starts_one_ends(i) * 10_isize.pow(n\
    \ - i - 1);\n    }\n    count + 10_isize.pow(n - 1)\n}\n\nfn main() {\n    let\
    \ candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp_9bk8unq.rs:9:52\n  |\n9 |\
    \         count += starts_one_ends(i) * 10_isize.pow(n - i - 1);\n  |        \
    \                                            ^^^^^^^^^ expected `u32`, found `isize`\n\
    \  |\nhelp: you can convert an `isize` to a `u32` and panic if the converted value\
    \ doesn't fit\n  |\n9 |         count += starts_one_ends(i) * 10_isize.pow((n\
    \ - i - 1).try_into().unwrap());\n  |                                        \
    \            +         +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmp_9bk8unq.rs:11:26\n   |\n11 |     count + 10_isize.pow(n - 1)\n\
    \   |                          ^^^^^ expected `u32`, found `isize`\n   |\nhelp:\
    \ you can convert an `isize` to a `u32` and panic if the converted value doesn't\
    \ fit\n   |\n11 |     count + 10_isize.pow((n - 1).try_into().unwrap())\n   |\
    \                          +     +++++++++++++++++++++\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    let mut i = 1;\n    while i <= n {\n\
    \        count += 9 * starts_one_ends(n - i);\n        i += 1;\n    }\n    count\n\
    }\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp__wknsv9.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 1;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i) * starts_one_ends(n\
    \ - i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `18`', /tmp/tmpgji8t4lp.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    for i in 1..n {\n        count += 9\
    \ * 10_isize.pow(i - 1);\n    }\n    count + 10_isize.pow(n - 1)\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpcgudntli.rs:6:35\n  |\n6 |\
    \         count += 9 * 10_isize.pow(i - 1);\n  |                             \
    \      ^^^^^ expected `u32`, found `isize`\n  |\nhelp: you can convert an `isize`\
    \ to a `u32` and panic if the converted value doesn't fit\n  |\n6 |         count\
    \ += 9 * 10_isize.pow((i - 1).try_into().unwrap());\n  |                     \
    \              +     +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n\
    \ --> /tmp/tmpcgudntli.rs:8:26\n  |\n8 |     count + 10_isize.pow(n - 1)\n  |\
    \                          ^^^^^ expected `u32`, found `isize`\n  |\nhelp: you\
    \ can convert an `isize` to a `u32` and panic if the converted value doesn't fit\n\
    \  |\n8 |     count + 10_isize.pow((n - 1).try_into().unwrap())\n  |         \
    \                 +     +++++++++++++++++++++\n\nerror: aborting due to 2 previous\
    \ errors\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 9;\n    let mut base = 9;\n    for _ in 1..n {\n        count *= base;\n   \
    \     base -= 1;\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmpq49i_r4q.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    if n == 2 {\n  \
    \      return 55;\n    }\n    let mut sum = 0;\n    for i in 1..n {\n        sum\
    \ += starts_one_ends(i) * starts_one_ends(n - i);\n    }\n    sum\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmp9d9m3lkn.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    for i in 1..n + 1 {\n        count +=\
    \ starts_one_ends_helper(i);\n    }\n    count\n}\n\nfn main() {\n    let candidate\
    \ = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `starts_one_ends_helper` in this scope\n\
    \ --> /tmp/tmpsdnae847.rs:6:18\n  |\n6 |         count += starts_one_ends_helper(i);\n\
    \  |                  ^^^^^^^^^^^^^^^^^^^^^^ not found in this scope\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    let mut i = 1;\n    while i <= n {\n\
    \        count += 9 * (10_isize.pow(i - 1) - 10_isize.pow(i - 2));\n        i\
    \ += 1;\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpwlq4uhpz.rs:7:36\n  |\n7 |\
    \         count += 9 * (10_isize.pow(i - 1) - 10_isize.pow(i - 2));\n  |     \
    \                               ^^^^^ expected `u32`, found `isize`\n  |\nhelp:\
    \ you can convert an `isize` to a `u32` and panic if the converted value doesn't\
    \ fit\n  |\n7 |         count += 9 * (10_isize.pow((i - 1).try_into().unwrap())\
    \ - 10_isize.pow(i - 2));\n  |                                    +     +++++++++++++++++++++\n\
    \nerror[E0308]: mismatched types\n --> /tmp/tmpwlq4uhpz.rs:7:58\n  |\n7 |    \
    \     count += 9 * (10_isize.pow(i - 1) - 10_isize.pow(i - 2));\n  |         \
    \                                                 ^^^^^ expected `u32`, found\
    \ `isize`\n  |\nhelp: you can convert an `isize` to a `u32` and panic if the converted\
    \ value doesn't fit\n  |\n7 |         count += 9 * (10_isize.pow(i - 1) - 10_isize.pow((i\
    \ - 2).try_into().unwrap()));\n  |                                           \
    \               +     +++++++++++++++++++++\n\nerror: aborting due to 2 previous\
    \ errors\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut result =\
    \ 9;\n    for _ in 1..n {\n        result *= 10;\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmp2sgbr23k.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    let mut count = 0;\n\
    \    let mut start = 1;\n    let mut end = 1;\n    let mut i = 1;\n    while i\
    \ < n {\n        start = start * 10;\n        end = end * 10 + 1;\n        i +=\
    \ 1;\n    }\n    count += start;\n    count += end;\n    count\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpa751z5b8.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    for i in 1..n {\n        count += starts_one_ends(i);\n\
    \    }\n    count + 1\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `18`', /tmp/tmpfp76dpuh.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    for i in 1..n {\n        count += 9 * starts_one_ends(i);\n    }\n \
    \   count + 9\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmpq5os9rvp.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 1;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i);\n    }\n    count +\
    \ 1\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `18`', /tmp/tmp9rmgv_cx.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 1;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i) * starts_one_ends(n\
    \ - i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `18`', /tmp/tmpknwjzqp_.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut result = 0;\n    for i in 1..n {\n        result +=\
    \ 9 * 10isize.pow(i - 1);\n    }\n    result + 10isize.pow(n - 1)\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpom0w4duv.rs:6:35\n  |\n6 |\
    \         result += 9 * 10isize.pow(i - 1);\n  |                             \
    \      ^^^^^ expected `u32`, found `isize`\n  |\nhelp: you can convert an `isize`\
    \ to a `u32` and panic if the converted value doesn't fit\n  |\n6 |         result\
    \ += 9 * 10isize.pow((i - 1).try_into().unwrap());\n  |                      \
    \             +     +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n\
    \ --> /tmp/tmpom0w4duv.rs:8:26\n  |\n8 |     result + 10isize.pow(n - 1)\n  |\
    \                          ^^^^^ expected `u32`, found `isize`\n  |\nhelp: you\
    \ can convert an `isize` to a `u32` and panic if the converted value doesn't fit\n\
    \  |\n8 |     result + 10isize.pow((n - 1).try_into().unwrap())\n  |         \
    \                 +     +++++++++++++++++++++\n\nerror: aborting due to 2 previous\
    \ errors\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n\n    let mut count\
    \ = 0;\n    for i in 1..n {\n        count += starts_one_ends(i) * 9 * 10isize.pow(n\
    \ - i - 1);\n    }\n    count + 10isize.pow(n - 1)\n}\n\nfn main() {\n    let\
    \ candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpj_we1q5w.rs:10:55\n   |\n\
    10 |         count += starts_one_ends(i) * 9 * 10isize.pow(n - i - 1);\n   | \
    \                                                      ^^^^^^^^^ expected `u32`,\
    \ found `isize`\n   |\nhelp: you can convert an `isize` to a `u32` and panic if\
    \ the converted value doesn't fit\n   |\n10 |         count += starts_one_ends(i)\
    \ * 9 * 10isize.pow((n - i - 1).try_into().unwrap());\n   |                  \
    \                                     +         +++++++++++++++++++++\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmpj_we1q5w.rs:12:25\n   |\n12 |     count + 10isize.pow(n\
    \ - 1)\n   |                         ^^^^^ expected `u32`, found `isize`\n   |\n\
    help: you can convert an `isize` to a `u32` and panic if the converted value doesn't\
    \ fit\n   |\n12 |     count + 10isize.pow((n - 1).try_into().unwrap())\n   | \
    \                        +     +++++++++++++++++++++\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 1;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i) * starts_one_ends(n\
    \ - i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `18`', /tmp/tmprfuiefal.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut sum = 0;\n\
    \    for i in 0..n {\n        sum += starts_one_ends(i) * starts_one_ends(n -\
    \ i - 1);\n    }\n    sum\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmpxb2dsc35.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut result = 0;\n    for i in 1..n {\n        result +=\
    \ 9 * starts_one_ends(i);\n    }\n    result + 9\n}\n\nfn main() {\n    let candidate\
    \ = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `1`', /tmp/tmp7xhrzb63.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    for i in 1..n {\n        count += starts_one_ends(i) * (10 - i);\n \
    \   }\n    count + 9\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmpvizvsds4.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i) * starts_one_ends(n\
    \ - i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmp2oihw8s_.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n\n    let mut result\
    \ = 9;\n    let mut base = 9;\n    for _ in 1..n {\n        result += base;\n\
    \        base *= 10;\n    }\n\n    result\n}\n\nfn main() {\n    let candidate\
    \ = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmpw721y0b8.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    for i in 1..n {\n        count += 9\
    \ * 10isize.pow(i - 1);\n    }\n    count + 10isize.pow(n - 1)\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpw266ea_n.rs:6:34\n  |\n6 |\
    \         count += 9 * 10isize.pow(i - 1);\n  |                              \
    \    ^^^^^ expected `u32`, found `isize`\n  |\nhelp: you can convert an `isize`\
    \ to a `u32` and panic if the converted value doesn't fit\n  |\n6 |         count\
    \ += 9 * 10isize.pow((i - 1).try_into().unwrap());\n  |                      \
    \            +     +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n -->\
    \ /tmp/tmpw266ea_n.rs:8:25\n  |\n8 |     count + 10isize.pow(n - 1)\n  |     \
    \                    ^^^^^ expected `u32`, found `isize`\n  |\nhelp: you can convert\
    \ an `isize` to a `u32` and panic if the converted value doesn't fit\n  |\n8 |\
    \     count + 10isize.pow((n - 1).try_into().unwrap())\n  |                  \
    \       +     +++++++++++++++++++++\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    for i in 1..n {\n        count += starts_one_ends(i) * 10_isize.pow(n\
    \ - i - 1);\n    }\n    count + 10_isize.pow(n - 1)\n}\n\nfn main() {\n    let\
    \ candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpfyrqzjge.rs:9:52\n  |\n9 |\
    \         count += starts_one_ends(i) * 10_isize.pow(n - i - 1);\n  |        \
    \                                            ^^^^^^^^^ expected `u32`, found `isize`\n\
    \  |\nhelp: you can convert an `isize` to a `u32` and panic if the converted value\
    \ doesn't fit\n  |\n9 |         count += starts_one_ends(i) * 10_isize.pow((n\
    \ - i - 1).try_into().unwrap());\n  |                                        \
    \            +         +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmpfyrqzjge.rs:11:26\n   |\n11 |     count + 10_isize.pow(n - 1)\n\
    \   |                          ^^^^^ expected `u32`, found `isize`\n   |\nhelp:\
    \ you can convert an `isize` to a `u32` and panic if the converted value doesn't\
    \ fit\n   |\n11 |     count + 10_isize.pow((n - 1).try_into().unwrap())\n   |\
    \                          +     +++++++++++++++++++++\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 1;\n    }\n    let mut count = 0;\n\
    \    let mut i = 1;\n    while i <= n {\n        count += starts_one_ends(n -\
    \ i) * 9;\n        i += 1;\n    }\n    count\n}\n\nfn main() {\n    let candidate\
    \ = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `18`', /tmp/tmphzbemkmf.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut dp = vec![0;\
    \ n as usize];\n    dp[0] = 10;\n    dp[1] = 81;\n    for i in 2..n {\n      \
    \  dp[i as usize] = dp[(i - 1) as usize] * (9 - i + 2);\n    }\n    return dp[(n\
    \ - 1) as usize];\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n  \
    \  assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmpyw4hqglb.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i) * starts_one_ends(n\
    \ - i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpu4gh1151.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    for i in 1..n {\n        count += 9\
    \ * 10isize.pow(i - 1);\n    }\n    count + 10isize.pow(n - 1)\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpclc9wj3v.rs:6:34\n  |\n6 |\
    \         count += 9 * 10isize.pow(i - 1);\n  |                              \
    \    ^^^^^ expected `u32`, found `isize`\n  |\nhelp: you can convert an `isize`\
    \ to a `u32` and panic if the converted value doesn't fit\n  |\n6 |         count\
    \ += 9 * 10isize.pow((i - 1).try_into().unwrap());\n  |                      \
    \            +     +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n -->\
    \ /tmp/tmpclc9wj3v.rs:8:25\n  |\n8 |     count + 10isize.pow(n - 1)\n  |     \
    \                    ^^^^^ expected `u32`, found `isize`\n  |\nhelp: you can convert\
    \ an `isize` to a `u32` and panic if the converted value doesn't fit\n  |\n8 |\
    \     count + 10isize.pow((n - 1).try_into().unwrap())\n  |                  \
    \       +     +++++++++++++++++++++\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i) * 9 * 10isize.pow(n\
    \ - i - 1);\n    }\n    count + 10isize.pow(n - 1)\n}\n\nfn main() {\n    let\
    \ candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp1x4c079i.rs:9:55\n  |\n9 |\
    \         count += starts_one_ends(i) * 9 * 10isize.pow(n - i - 1);\n  |     \
    \                                                  ^^^^^^^^^ expected `u32`, found\
    \ `isize`\n  |\nhelp: you can convert an `isize` to a `u32` and panic if the converted\
    \ value doesn't fit\n  |\n9 |         count += starts_one_ends(i) * 9 * 10isize.pow((n\
    \ - i - 1).try_into().unwrap());\n  |                                        \
    \               +         +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmp1x4c079i.rs:11:25\n   |\n11 |     count + 10isize.pow(n - 1)\n\
    \   |                         ^^^^^ expected `u32`, found `isize`\n   |\nhelp:\
    \ you can convert an `isize` to a `u32` and panic if the converted value doesn't\
    \ fit\n   |\n11 |     count + 10isize.pow((n - 1).try_into().unwrap())\n   | \
    \                        +     +++++++++++++++++++++\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    let mut i = 1;\n    while i <= n {\n\
    \        count += starts_one_ends_helper(i);\n        i += 1;\n    }\n    count\n\
    }\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `starts_one_ends_helper` in this scope\n\
    \ --> /tmp/tmpd0mhnoik.rs:7:18\n  |\n7 |         count += starts_one_ends_helper(i);\n\
    \  |                  ^^^^^^^^^^^^^^^^^^^^^^ not found in this scope\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    let mut i = 1;\n    while i <= n {\n\
    \        count += 9 * starts_one_ends(n - i);\n        i += 1;\n    }\n    count\n\
    }\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpry8ugah3.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    let mut count = 0;\n\
    \    let mut i = 1;\n    while i < n {\n        count += starts_one_ends(i) *\
    \ starts_one_ends(n - i);\n        i += 1;\n    }\n    count\n}\n\nfn main() {\n\
    \    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpcwvbfqzb.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 1;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i);\n    }\n    count *\
    \ 9 + 10isize.pow(n - 1)\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp5ns5jglb.rs:11:29\n   |\n\
    11 |     count * 9 + 10isize.pow(n - 1)\n   |                             ^^^^^\
    \ expected `u32`, found `isize`\n   |\nhelp: you can convert an `isize` to a `u32`\
    \ and panic if the converted value doesn't fit\n   |\n11 |     count * 9 + 10isize.pow((n\
    \ - 1).try_into().unwrap())\n   |                             +     +++++++++++++++++++++\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 9;\n    let mut base = 9;\n    for _ in 1..n {\n        count *= base;\n   \
    \     base -= 1;\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmpl9vkawtw.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n\n    let mut count\
    \ = 0;\n    for i in 1..n {\n        count += starts_one_ends(i) * 9 * 10isize.pow(n\
    \ - i - 1);\n    }\n    count += 10isize.pow(n - 1);\n    count\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpm8ai0520.rs:10:55\n   |\n\
    10 |         count += starts_one_ends(i) * 9 * 10isize.pow(n - i - 1);\n   | \
    \                                                      ^^^^^^^^^ expected `u32`,\
    \ found `isize`\n   |\nhelp: you can convert an `isize` to a `u32` and panic if\
    \ the converted value doesn't fit\n   |\n10 |         count += starts_one_ends(i)\
    \ * 9 * 10isize.pow((n - i - 1).try_into().unwrap());\n   |                  \
    \                                     +         +++++++++++++++++++++\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmpm8ai0520.rs:12:26\n   |\n12 |     count += 10isize.pow(n\
    \ - 1);\n   |                          ^^^^^ expected `u32`, found `isize`\n \
    \  |\nhelp: you can convert an `isize` to a `u32` and panic if the converted value\
    \ doesn't fit\n   |\n12 |     count += 10isize.pow((n - 1).try_into().unwrap());\n\
    \   |                          +     +++++++++++++++++++++\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    for i in 1..n {\n        count += 9\
    \ * pow(10, i - 1);\n    }\n    count + pow(10, n - 1)\n}\n\nfn main() {\n   \
    \ let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `pow` in this scope\n --> /tmp/tmpjrb7vbmv.rs:6:22\n\
    \  |\n6 |         count += 9 * pow(10, i - 1);\n  |                      ^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find function `pow` in this scope\n\
    \ --> /tmp/tmpjrb7vbmv.rs:8:13\n  |\n8 |     count + pow(10, n - 1)\n  |     \
    \        ^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    for i in 1..n {\n        count += 9\
    \ * 10isize.pow(i - 1);\n    }\n    count + 1\n}\n\nfn main() {\n    let candidate\
    \ = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpnp_xkld5.rs:6:34\n  |\n6 |\
    \         count += 9 * 10isize.pow(i - 1);\n  |                              \
    \    ^^^^^ expected `u32`, found `isize`\n  |\nhelp: you can convert an `isize`\
    \ to a `u32` and panic if the converted value doesn't fit\n  |\n6 |         count\
    \ += 9 * 10isize.pow((i - 1).try_into().unwrap());\n  |                      \
    \            +     +++++++++++++++++++++\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    for i in 1..n {\n        count += 9\
    \ * starts_one_ends(i - 1);\n    }\n    count + 9\n}\n\nfn main() {\n    let candidate\
    \ = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `1`', /tmp/tmp8lmy2iit.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    for i in 1..n {\n        count += starts_one_ends(i) * 9 * 10isize.pow(n\
    \ - i - 1);\n    }\n    count += 10isize.pow(n - 1);\n    count\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpt_617h3p.rs:9:55\n  |\n9 |\
    \         count += starts_one_ends(i) * 9 * 10isize.pow(n - i - 1);\n  |     \
    \                                                  ^^^^^^^^^ expected `u32`, found\
    \ `isize`\n  |\nhelp: you can convert an `isize` to a `u32` and panic if the converted\
    \ value doesn't fit\n  |\n9 |         count += starts_one_ends(i) * 9 * 10isize.pow((n\
    \ - i - 1).try_into().unwrap());\n  |                                        \
    \               +         +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmpt_617h3p.rs:11:26\n   |\n11 |     count += 10isize.pow(n - 1);\n\
    \   |                          ^^^^^ expected `u32`, found `isize`\n   |\nhelp:\
    \ you can convert an `isize` to a `u32` and panic if the converted value doesn't\
    \ fit\n   |\n11 |     count += 10isize.pow((n - 1).try_into().unwrap());\n   |\
    \                          +     +++++++++++++++++++++\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 9;\n    for _ in 1..n {\n        count *= 10;\n    }\n    count\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmpficfwi9s.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i) * 10_isize.pow(n - i\
    \ - 1);\n    }\n    count += 10_isize.pow(n - 1);\n    count\n}\n\nfn main() {\n\
    \    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpxe7qp6et.rs:9:52\n  |\n9 |\
    \         count += starts_one_ends(i) * 10_isize.pow(n - i - 1);\n  |        \
    \                                            ^^^^^^^^^ expected `u32`, found `isize`\n\
    \  |\nhelp: you can convert an `isize` to a `u32` and panic if the converted value\
    \ doesn't fit\n  |\n9 |         count += starts_one_ends(i) * 10_isize.pow((n\
    \ - i - 1).try_into().unwrap());\n  |                                        \
    \            +         +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmpxe7qp6et.rs:11:27\n   |\n11 |     count += 10_isize.pow(n - 1);\n\
    \   |                           ^^^^^ expected `u32`, found `isize`\n   |\nhelp:\
    \ you can convert an `isize` to a `u32` and panic if the converted value doesn't\
    \ fit\n   |\n11 |     count += 10_isize.pow((n - 1).try_into().unwrap());\n  \
    \ |                           +     +++++++++++++++++++++\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 9;\n    for _ in 1..n {\n        count *= 10;\n    }\n    count\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmpn9_ljbfo.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut dp = vec![0;\
    \ (n + 1) as usize];\n    dp[1] = 10;\n    for i in 2..=n {\n        dp[i as usize]\
    \ = dp[(i - 1) as usize] * 9 + dp[(i - 2) as usize];\n    }\n    dp[n as usize]\n\
    }\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmp0eg6p94u.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut sum = 0;\n\
    \    for i in 1..n {\n        sum += starts_one_ends(i) * 10_isize.pow(n - i -\
    \ 1);\n    }\n    sum + 10_isize.pow(n - 1)\n}\n\nfn main() {\n    let candidate\
    \ = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpq3lqlbkr.rs:9:50\n  |\n9 |\
    \         sum += starts_one_ends(i) * 10_isize.pow(n - i - 1);\n  |          \
    \                                        ^^^^^^^^^ expected `u32`, found `isize`\n\
    \  |\nhelp: you can convert an `isize` to a `u32` and panic if the converted value\
    \ doesn't fit\n  |\n9 |         sum += starts_one_ends(i) * 10_isize.pow((n -\
    \ i - 1).try_into().unwrap());\n  |                                          \
    \        +         +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n \
    \ --> /tmp/tmpq3lqlbkr.rs:11:24\n   |\n11 |     sum + 10_isize.pow(n - 1)\n  \
    \ |                        ^^^^^ expected `u32`, found `isize`\n   |\nhelp: you\
    \ can convert an `isize` to a `u32` and panic if the converted value doesn't fit\n\
    \   |\n11 |     sum + 10_isize.pow((n - 1).try_into().unwrap())\n   |        \
    \                +     +++++++++++++++++++++\n\nerror: aborting due to 2 previous\
    \ errors\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    for i in 1..n {\n        count += starts_one_ends(i) * 9 * 10isize.pow(n\
    \ - i - 1);\n    }\n    count + 10isize.pow(n - 1)\n}\n\nfn main() {\n    let\
    \ candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpa_9sjux0.rs:9:55\n  |\n9 |\
    \         count += starts_one_ends(i) * 9 * 10isize.pow(n - i - 1);\n  |     \
    \                                                  ^^^^^^^^^ expected `u32`, found\
    \ `isize`\n  |\nhelp: you can convert an `isize` to a `u32` and panic if the converted\
    \ value doesn't fit\n  |\n9 |         count += starts_one_ends(i) * 9 * 10isize.pow((n\
    \ - i - 1).try_into().unwrap());\n  |                                        \
    \               +         +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmpa_9sjux0.rs:11:25\n   |\n11 |     count + 10isize.pow(n - 1)\n\
    \   |                         ^^^^^ expected `u32`, found `isize`\n   |\nhelp:\
    \ you can convert an `isize` to a `u32` and panic if the converted value doesn't\
    \ fit\n   |\n11 |     count + 10isize.pow((n - 1).try_into().unwrap())\n   | \
    \                        +     +++++++++++++++++++++\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i) * starts_one_ends(n\
    \ - i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpp27ix0dy.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 1;\n    }\n\n    let mut count =\
    \ 0;\n    let mut start = 1;\n    let mut end = 1;\n\n    for _ in 0..n {\n  \
    \      count += start + end;\n        start *= 10;\n        end = end * 10 + 1;\n\
    \    }\n\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `23`,\n right: `18`', /tmp/tmptiawhvvv.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    for i in 1..n {\n        count += starts_one_ends(i);\n\
    \    }\n    count + 1\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `18`', /tmp/tmp4srqpjik.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    for i in 1..n {\n        count += starts_one_ends(i) * 9 * 10isize.pow(n\
    \ - i - 1);\n    }\n    count += 10isize.pow(n - 1);\n    count\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpw840d25z.rs:9:55\n  |\n9 |\
    \         count += starts_one_ends(i) * 9 * 10isize.pow(n - i - 1);\n  |     \
    \                                                  ^^^^^^^^^ expected `u32`, found\
    \ `isize`\n  |\nhelp: you can convert an `isize` to a `u32` and panic if the converted\
    \ value doesn't fit\n  |\n9 |         count += starts_one_ends(i) * 9 * 10isize.pow((n\
    \ - i - 1).try_into().unwrap());\n  |                                        \
    \               +         +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmpw840d25z.rs:11:26\n   |\n11 |     count += 10isize.pow(n - 1);\n\
    \   |                          ^^^^^ expected `u32`, found `isize`\n   |\nhelp:\
    \ you can convert an `isize` to a `u32` and panic if the converted value doesn't\
    \ fit\n   |\n11 |     count += 10isize.pow((n - 1).try_into().unwrap());\n   |\
    \                          +     +++++++++++++++++++++\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    for i in 1..n {\n        count += 9\
    \ * 10_isize.pow(i - 1);\n    }\n    count + 10_isize.pow(n - 1)\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmphd8nbzmn.rs:6:35\n  |\n6 |\
    \         count += 9 * 10_isize.pow(i - 1);\n  |                             \
    \      ^^^^^ expected `u32`, found `isize`\n  |\nhelp: you can convert an `isize`\
    \ to a `u32` and panic if the converted value doesn't fit\n  |\n6 |         count\
    \ += 9 * 10_isize.pow((i - 1).try_into().unwrap());\n  |                     \
    \              +     +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n\
    \ --> /tmp/tmphd8nbzmn.rs:8:26\n  |\n8 |     count + 10_isize.pow(n - 1)\n  |\
    \                          ^^^^^ expected `u32`, found `isize`\n  |\nhelp: you\
    \ can convert an `isize` to a `u32` and panic if the converted value doesn't fit\n\
    \  |\n8 |     count + 10_isize.pow((n - 1).try_into().unwrap())\n  |         \
    \                 +     +++++++++++++++++++++\n\nerror: aborting due to 2 previous\
    \ errors\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i) * starts_one_ends(n\
    \ - i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmppvh2owie.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut dp = vec![0;\
    \ n as usize];\n    dp[0] = 1;\n    for i in 1..n {\n        dp[i as usize] =\
    \ dp[(i - 1) as usize] * 9 + 10_isize.pow(i - 1);\n    }\n    dp[(n - 1) as usize]\
    \ * 2\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp14h45rf7.rs:10:66\n   |\n\
    10 |         dp[i as usize] = dp[(i - 1) as usize] * 9 + 10_isize.pow(i - 1);\n\
    \   |                                                                  ^^^^^ expected\
    \ `u32`, found `isize`\n   |\nhelp: you can convert an `isize` to a `u32` and\
    \ panic if the converted value doesn't fit\n   |\n10 |         dp[i as usize]\
    \ = dp[(i - 1) as usize] * 9 + 10_isize.pow((i - 1).try_into().unwrap());\n  \
    \ |                                                                  +     +++++++++++++++++++++\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    let mut start = 1;\n    for _ in 0..n\
    \ {\n        count += start;\n        start *= 10;\n    }\n    count\n}\n\nfn\
    \ main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `11`,\n right: `18`', /tmp/tmpo9_p9ha6.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    for i in 1..n {\n        count += starts_one_ends(i);\n    }\n    count\
    \ * 9 + 10.pow(n - 1)\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "error[E0689]: can't call method `pow` on ambiguous numeric type `{integer}`\n\
    \  --> /tmp/tmpv4z_akuu.rs:11:20\n   |\n11 |     count * 9 + 10.pow(n - 1)\n \
    \  |                    ^^^\n   |\nhelp: you must specify a concrete type for\
    \ this numeric value, like `i32`\n   |\n11 |     count * 9 + 10_i32.pow(n - 1)\n\
    \   |                 ~~~~~~\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0689`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    let mut dp = vec![0;\
    \ n as usize];\n    dp[0] = 1;\n    dp[1] = 2;\n    for i in 2..n {\n        dp[i\
    \ as usize] = dp[(i - 1) as usize] + dp[(i - 2) as usize];\n    }\n    dp[(n -\
    \ 1) as usize] * 2\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n \
    \   assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpjm_juh1f.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    let mut i = 1;\n    while i <= n {\n\
    \        count += 9 * 10isize.pow(i - 1);\n        i += 1;\n    }\n    count\n\
    }\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmppsh8wp8v.rs:7:34\n  |\n7 |\
    \         count += 9 * 10isize.pow(i - 1);\n  |                              \
    \    ^^^^^ expected `u32`, found `isize`\n  |\nhelp: you can convert an `isize`\
    \ to a `u32` and panic if the converted value doesn't fit\n  |\n7 |         count\
    \ += 9 * 10isize.pow((i - 1).try_into().unwrap());\n  |                      \
    \            +     +++++++++++++++++++++\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n\n    let mut count\
    \ = 0;\n    for i in 1..n {\n        count += starts_one_ends(i);\n    }\n\n \
    \   count * 9 + 10\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n \
    \   assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmp78ut66w_.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 1;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i);\n    }\n    count *=\
    \ 9;\n    count += starts_one_ends(n - 1);\n    count\n}\n\nfn main() {\n    let\
    \ candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `18`', /tmp/tmpkf7qdbpn.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    let mut result =\
    \ 0;\n    for i in 1..n {\n        result += starts_one_ends(i);\n    }\n    result\
    \ *= 9;\n    result += starts_one_ends(n - 1);\n    result\n}\n\nfn main() {\n\
    \    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpmarv3r_w.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i);\n    }\n    count *=\
    \ 9;\n    count += starts_one_ends(n - 1);\n    count\n}\n\nfn main() {\n    let\
    \ candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpmdw3sk71.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i);\n    }\n    count *\
    \ 9 + 10_isize.pow(n - 1)\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp2k24n774.rs:11:30\n   |\n\
    11 |     count * 9 + 10_isize.pow(n - 1)\n   |                              ^^^^^\
    \ expected `u32`, found `isize`\n   |\nhelp: you can convert an `isize` to a `u32`\
    \ and panic if the converted value doesn't fit\n   |\n11 |     count * 9 + 10_isize.pow((n\
    \ - 1).try_into().unwrap())\n   |                              +     +++++++++++++++++++++\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    let mut i = 1;\n    while i < n {\n        count += 9 * starts_one_ends(i);\n\
    \        i += 1;\n    }\n    count + 9\n}\n\nfn main() {\n    let candidate =\
    \ starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmpmgkom3fg.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    for i in 1..n {\n        count += starts_one_ends(i);\n    }\n    count\
    \ * 9 + 10\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmpk71o0py3.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n\n    let mut count =\
    \ 0;\n    let mut i = 1;\n    while i < n {\n        count += starts_one_ends(i)\
    \ * starts_one_ends(n - i);\n        i += 1;\n    }\n\n    count\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmp05yhnucr.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    if n == 2 {\n   \
    \     return 4;\n    }\n    let mut dp = vec![0; n as usize];\n    dp[0] = 2;\n\
    \    dp[1] = 4;\n    for i in 2..n {\n        dp[i as usize] = dp[(i - 1) as usize]\
    \ + dp[(i - 2) as usize];\n    }\n    dp[(n - 1) as usize]\n}\n\nfn main() {\n\
    \    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpnnqg_swi.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n\n    let mut count\
    \ = 0;\n    let mut i = 1;\n    while i < n {\n        count += 9 * starts_one_ends(n\
    \ - i);\n        i += 1;\n    }\n    count += 9 * starts_one_ends(n - i);\n  \
    \  count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmpf3k_vg0n.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i) * starts_one_ends(n\
    \ - i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmp4_r5vtxj.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i) * starts_one_ends(n\
    \ - i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmp_weie7t7.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    let mut result =\
    \ 0;\n    for i in 1..n {\n        result += starts_one_ends(i) * starts_one_ends(n\
    \ - i);\n    }\n    result\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmp9v2_6olm.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i) * starts_one_ends(n\
    \ - i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpw3wv4pns.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    for i in 1..n {\n        count += starts_one_ends(i) * 9 * 10isize.pow(n\
    \ - i - 1);\n    }\n    count += 10isize.pow(n - 1);\n    count\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpu726cx0i.rs:9:55\n  |\n9 |\
    \         count += starts_one_ends(i) * 9 * 10isize.pow(n - i - 1);\n  |     \
    \                                                  ^^^^^^^^^ expected `u32`, found\
    \ `isize`\n  |\nhelp: you can convert an `isize` to a `u32` and panic if the converted\
    \ value doesn't fit\n  |\n9 |         count += starts_one_ends(i) * 9 * 10isize.pow((n\
    \ - i - 1).try_into().unwrap());\n  |                                        \
    \               +         +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmpu726cx0i.rs:11:26\n   |\n11 |     count += 10isize.pow(n - 1);\n\
    \   |                          ^^^^^ expected `u32`, found `isize`\n   |\nhelp:\
    \ you can convert an `isize` to a `u32` and panic if the converted value doesn't\
    \ fit\n   |\n11 |     count += 10isize.pow((n - 1).try_into().unwrap());\n   |\
    \                          +     +++++++++++++++++++++\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n\n    let mut dp = vec![0;\
    \ n as usize];\n    dp[0] = 1;\n    dp[1] = 2;\n\n    for i in 2..n {\n      \
    \  dp[i as usize] = dp[(i - 1) as usize] + dp[(i - 2) as usize];\n    }\n\n  \
    \  dp[(n - 1) as usize] * 2\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmp_zzhpx_l.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    for i in 1..n {\n        count += starts_one_ends(i) * 9 * 10isize.pow(n\
    \ - i - 1);\n    }\n    count += 10isize.pow(n - 1);\n    count\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpnwvarw3o.rs:9:55\n  |\n9 |\
    \         count += starts_one_ends(i) * 9 * 10isize.pow(n - i - 1);\n  |     \
    \                                                  ^^^^^^^^^ expected `u32`, found\
    \ `isize`\n  |\nhelp: you can convert an `isize` to a `u32` and panic if the converted\
    \ value doesn't fit\n  |\n9 |         count += starts_one_ends(i) * 9 * 10isize.pow((n\
    \ - i - 1).try_into().unwrap());\n  |                                        \
    \               +         +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmpnwvarw3o.rs:11:26\n   |\n11 |     count += 10isize.pow(n - 1);\n\
    \   |                          ^^^^^ expected `u32`, found `isize`\n   |\nhelp:\
    \ you can convert an `isize` to a `u32` and panic if the converted value doesn't\
    \ fit\n   |\n11 |     count += 10isize.pow((n - 1).try_into().unwrap());\n   |\
    \                          +     +++++++++++++++++++++\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    for i in 1..n {\n        count += 9\
    \ * 10isize.pow(i - 1);\n    }\n    count + 1\n}\n\nfn main() {\n    let candidate\
    \ = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp91gtrr9v.rs:6:34\n  |\n6 |\
    \         count += 9 * 10isize.pow(i - 1);\n  |                              \
    \    ^^^^^ expected `u32`, found `isize`\n  |\nhelp: you can convert an `isize`\
    \ to a `u32` and panic if the converted value doesn't fit\n  |\n6 |         count\
    \ += 9 * 10isize.pow((i - 1).try_into().unwrap());\n  |                      \
    \            +     +++++++++++++++++++++\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    let mut dp = vec![0;\
    \ n as usize];\n    dp[0] = 1;\n    dp[1] = 2;\n    for i in 2..n {\n        dp[i\
    \ as usize] = dp[(i - 1) as usize] + dp[(i - 2) as usize];\n    }\n    dp[(n -\
    \ 1) as usize] * 2\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n \
    \   assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpltbljaxm.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    let mut res = 0;\n\
    \    for i in 1..n {\n        res += 9 * starts_one_ends(i - 1);\n    }\n    res\
    \ + 9\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `1`', /tmp/tmpuhzvsufb.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    for i in 1..n {\n        count += starts_one_ends(i);\n    }\n    count\
    \ * 9 + 10\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmpk78fiq_r.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    for i in 1..n {\n        count += 9\
    \ * pow(10, i - 1);\n    }\n    count + pow(10, n - 1)\n}\n\nfn main() {\n   \
    \ let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `pow` in this scope\n --> /tmp/tmpgu0pynst.rs:6:22\n\
    \  |\n6 |         count += 9 * pow(10, i - 1);\n  |                      ^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find function `pow` in this scope\n\
    \ --> /tmp/tmpgu0pynst.rs:8:13\n  |\n8 |     count + pow(10, n - 1)\n  |     \
    \        ^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i);\n    }\n    count *=\
    \ 9;\n    count += starts_one_ends(n - 1);\n    count\n}\n\nfn main() {\n    let\
    \ candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpkwe4ll6u.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i) * starts_one_ends(n\
    \ - i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpkshm94mj.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    let mut last_digit = 1;\n    let mut digits = n - 1;\n    while digits\
    \ > 0 {\n        count += 9 * last_digit;\n        last_digit *= 10;\n       \
    \ digits -= 1;\n    }\n    count + last_digit\n}\n\nfn main() {\n    let candidate\
    \ = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmp5_dd8f06.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    for i in 1..n {\n        count += 9 * starts_one_ends(i);\n    }\n \
    \   count += 9 * starts_one_ends(n - 1);\n    count\n}\n\nfn main() {\n    let\
    \ candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmphgxt7ylb.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    for i in 1..n {\n        count += 9\
    \ * 10isize.pow(i - 1);\n    }\n    count + 1\n}\n\nfn main() {\n    let candidate\
    \ = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpw9uq7n13.rs:6:34\n  |\n6 |\
    \         count += 9 * 10isize.pow(i - 1);\n  |                              \
    \    ^^^^^ expected `u32`, found `isize`\n  |\nhelp: you can convert an `isize`\
    \ to a `u32` and panic if the converted value doesn't fit\n  |\n6 |         count\
    \ += 9 * 10isize.pow((i - 1).try_into().unwrap());\n  |                      \
    \            +     +++++++++++++++++++++\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    let mut start = 1;\n    let mut end\
    \ = 1;\n    for _ in 0..n {\n        count += start + end;\n        start *= 10;\n\
    \        end = end * 10 + 1;\n    }\n    count\n}\n\nfn main() {\n    let candidate\
    \ = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpk2eeyjdn.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    let mut i = 1;\n    while i <= n {\n\
    \        count += starts_one_ends_helper(i);\n        i += 1;\n    }\n    count\n\
    }\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `starts_one_ends_helper` in this scope\n\
    \ --> /tmp/tmpa0h6euoq.rs:7:18\n  |\n7 |         count += starts_one_ends_helper(i);\n\
    \  |                  ^^^^^^^^^^^^^^^^^^^^^^ not found in this scope\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 1;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i) * starts_one_ends(n\
    \ - i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `18`', /tmp/tmp74dnikkn.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i) * starts_one_ends(n\
    \ - i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmp3yvacwaf.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n\n    let mut count\
    \ = 0;\n    for i in 1..n {\n        count += starts_one_ends(i) * 10_isize.pow(n\
    \ - i - 1);\n    }\n    count += 10_isize.pow(n - 1);\n    count\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpx625e45v.rs:10:52\n   |\n\
    10 |         count += starts_one_ends(i) * 10_isize.pow(n - i - 1);\n   |    \
    \                                                ^^^^^^^^^ expected `u32`, found\
    \ `isize`\n   |\nhelp: you can convert an `isize` to a `u32` and panic if the\
    \ converted value doesn't fit\n   |\n10 |         count += starts_one_ends(i)\
    \ * 10_isize.pow((n - i - 1).try_into().unwrap());\n   |                     \
    \                               +         +++++++++++++++++++++\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmpx625e45v.rs:12:27\n   |\n12 |     count += 10_isize.pow(n\
    \ - 1);\n   |                           ^^^^^ expected `u32`, found `isize`\n\
    \   |\nhelp: you can convert an `isize` to a `u32` and panic if the converted\
    \ value doesn't fit\n   |\n12 |     count += 10_isize.pow((n - 1).try_into().unwrap());\n\
    \   |                           +     +++++++++++++++++++++\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    let mut count = 0;\n\
    \    for i in 0..n {\n        count += starts_one_ends(i) * starts_one_ends(n\
    \ - i - 1);\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpgg42fxs3.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    let mut i = 1;\n    while i < n {\n        count += 9 * starts_one_ends(i);\n\
    \        i += 1;\n    }\n    count + 10\n}\n\nfn main() {\n    let candidate =\
    \ starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmpzrqhvh_m.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    for i in 1..n {\n        count += 9\
    \ * 10_isize.pow(i - 1);\n    }\n    count + 10_isize.pow(n - 1)\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpa724a4hk.rs:6:35\n  |\n6 |\
    \         count += 9 * 10_isize.pow(i - 1);\n  |                             \
    \      ^^^^^ expected `u32`, found `isize`\n  |\nhelp: you can convert an `isize`\
    \ to a `u32` and panic if the converted value doesn't fit\n  |\n6 |         count\
    \ += 9 * 10_isize.pow((i - 1).try_into().unwrap());\n  |                     \
    \              +     +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n\
    \ --> /tmp/tmpa724a4hk.rs:8:26\n  |\n8 |     count + 10_isize.pow(n - 1)\n  |\
    \                          ^^^^^ expected `u32`, found `isize`\n  |\nhelp: you\
    \ can convert an `isize` to a `u32` and panic if the converted value doesn't fit\n\
    \  |\n8 |     count + 10_isize.pow((n - 1).try_into().unwrap())\n  |         \
    \                 +     +++++++++++++++++++++\n\nerror: aborting due to 2 previous\
    \ errors\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    for i in 1..n {\n        count += starts_one_ends(i);\n\
    \    }\n    count + 1\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `18`', /tmp/tmpvfcfzz5h.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    let mut count = 0;\n\
    \    let mut i = 1;\n    while i <= n {\n        count += starts_one_ends(n -\
    \ i);\n        i += 1;\n    }\n    count\n}\n\nfn main() {\n    let candidate\
    \ = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpobabjc67.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 9;\n    let mut i = 2;\n    while i <= n {\n        count *= 10 - i + 1;\n \
    \       i += 1;\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmpq5ldqs3t.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    for i in 1..n {\n        count += 9\
    \ * (10 as isize).pow(i - 1);\n    }\n    count\n}\n\nfn main() {\n    let candidate\
    \ = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp9hmukqv1.rs:6:40\n  |\n6 |\
    \         count += 9 * (10 as isize).pow(i - 1);\n  |                        \
    \                ^^^^^ expected `u32`, found `isize`\n  |\nhelp: you can convert\
    \ an `isize` to a `u32` and panic if the converted value doesn't fit\n  |\n6 |\
    \         count += 9 * (10 as isize).pow((i - 1).try_into().unwrap());\n  |  \
    \                                      +     +++++++++++++++++++++\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut dp = vec![0;\
    \ n as usize];\n    dp[0] = 10;\n    dp[1] = 81;\n    for i in 2..n {\n      \
    \  dp[i as usize] = dp[(i - 1) as usize] * (9 - i + 2);\n    }\n    dp[(n - 1)\
    \ as usize]\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmpo40n_pw6.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n\n    let mut count =\
    \ 0;\n    for i in 1..n {\n        count += starts_one_ends(i);\n    }\n\n   \
    \ count *= 9;\n    count += starts_one_ends(n - 1);\n\n    count\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpofge2d5j.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut dp = vec![0;\
    \ n as usize];\n    dp[0] = 10;\n    dp[1] = 81;\n    for i in 2..n {\n      \
    \  dp[i as usize] = dp[(i - 1) as usize] * 9;\n    }\n    dp[n as usize - 1] *\
    \ 2\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmpvlfhmx4m.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    for i in 1..n {\n        count += starts_one_ends(i) * 10_isize.pow(n\
    \ - i - 1);\n    }\n    count + 10_isize.pow(n - 1)\n}\n\nfn main() {\n    let\
    \ candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp9aokifci.rs:9:52\n  |\n9 |\
    \         count += starts_one_ends(i) * 10_isize.pow(n - i - 1);\n  |        \
    \                                            ^^^^^^^^^ expected `u32`, found `isize`\n\
    \  |\nhelp: you can convert an `isize` to a `u32` and panic if the converted value\
    \ doesn't fit\n  |\n9 |         count += starts_one_ends(i) * 10_isize.pow((n\
    \ - i - 1).try_into().unwrap());\n  |                                        \
    \            +         +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmp9aokifci.rs:11:26\n   |\n11 |     count + 10_isize.pow(n - 1)\n\
    \   |                          ^^^^^ expected `u32`, found `isize`\n   |\nhelp:\
    \ you can convert an `isize` to a `u32` and panic if the converted value doesn't\
    \ fit\n   |\n11 |     count + 10_isize.pow((n - 1).try_into().unwrap())\n   |\
    \                          +     +++++++++++++++++++++\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n\n    let mut count\
    \ = 0;\n    for i in 1..n {\n        count += starts_one_ends(i);\n    }\n\n \
    \   count * 9\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmpa64ml81r.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 9;\n    for _ in 1..n {\n        count *= 10;\n    }\n    count\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmp2ucf_e7c.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i);\n    }\n    count *=\
    \ 9;\n    count += starts_one_ends(n - 1);\n    count\n}\n\nfn main() {\n    let\
    \ candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmp7wee_rgy.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    let mut count = 0;\n\
    \    let mut i = 1;\n    while i < n {\n        count += starts_one_ends(i) *\
    \ starts_one_ends(n - i);\n        i += 1;\n    }\n    count + 2\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpf3i5sd2p.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    let mut x = 1;\n    for _ in 0..n {\n\
    \        count += x;\n        x *= 10;\n    }\n    count\n}\n\nfn main() {\n \
    \   let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `11`,\n right: `18`', /tmp/tmpbp95itzi.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    for i in 1..n + 1 {\n        count +=\
    \ starts_one_ends_helper(i);\n    }\n    count\n}\n\nfn main() {\n    let candidate\
    \ = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `starts_one_ends_helper` in this scope\n\
    \ --> /tmp/tmp396hq58u.rs:6:18\n  |\n6 |         count += starts_one_ends_helper(i);\n\
    \  |                  ^^^^^^^^^^^^^^^^^^^^^^ not found in this scope\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut dp = vec![0; (n + 1) as usize];\n    dp[1] = 1;\n  \
    \  for i in 2..=n {\n        dp[i as usize] = dp[(i - 1) as usize] * 9 + dp[(i\
    \ - 2) as usize];\n    }\n    dp[n as usize]\n}\n\nfn main() {\n    let candidate\
    \ = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `18`', /tmp/tmpp6ihqajz.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 1;\n    }\n    if n == 2 {\n   \
    \     return 10;\n    }\n    let mut count = 0;\n    for i in 1..n {\n       \
    \ count += starts_one_ends(i) * starts_one_ends(n - i);\n    }\n    count\n}\n\
    \nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `18`', /tmp/tmp4zoqqyj_.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    let mut i = 1;\n    while i <= n {\n\
    \        count += 9 * (10 as isize).pow(i - 1);\n        i += 1;\n    }\n    count\n\
    }\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpd6tkm3ls.rs:7:40\n  |\n7 |\
    \         count += 9 * (10 as isize).pow(i - 1);\n  |                        \
    \                ^^^^^ expected `u32`, found `isize`\n  |\nhelp: you can convert\
    \ an `isize` to a `u32` and panic if the converted value doesn't fit\n  |\n7 |\
    \         count += 9 * (10 as isize).pow((i - 1).try_into().unwrap());\n  |  \
    \                                      +     +++++++++++++++++++++\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 1;\n    }\n    let mut count = 0;\n\
    \    let mut i = 1;\n    while i <= n {\n        count += starts_one_ends(n -\
    \ i) * 9;\n        i += 1;\n    }\n    count\n}\n\nfn main() {\n    let candidate\
    \ = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `18`', /tmp/tmpt8hga2j1.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    for i in 1..n {\n        count += starts_one_ends(i) * 9 * 10isize.pow(n\
    \ - i - 1);\n    }\n    count += 10isize.pow(n - 1);\n    count\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp0afl1hjh.rs:9:55\n  |\n9 |\
    \         count += starts_one_ends(i) * 9 * 10isize.pow(n - i - 1);\n  |     \
    \                                                  ^^^^^^^^^ expected `u32`, found\
    \ `isize`\n  |\nhelp: you can convert an `isize` to a `u32` and panic if the converted\
    \ value doesn't fit\n  |\n9 |         count += starts_one_ends(i) * 9 * 10isize.pow((n\
    \ - i - 1).try_into().unwrap());\n  |                                        \
    \               +         +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmp0afl1hjh.rs:11:26\n   |\n11 |     count += 10isize.pow(n - 1);\n\
    \   |                          ^^^^^ expected `u32`, found `isize`\n   |\nhelp:\
    \ you can convert an `isize` to a `u32` and panic if the converted value doesn't\
    \ fit\n   |\n11 |     count += 10isize.pow((n - 1).try_into().unwrap());\n   |\
    \                          +     +++++++++++++++++++++\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    for i in 1..n {\n        count += 9\
    \ * 10isize.pow(i - 1);\n    }\n    count + 10isize.pow(n - 1)\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpxljfdevl.rs:6:34\n  |\n6 |\
    \         count += 9 * 10isize.pow(i - 1);\n  |                              \
    \    ^^^^^ expected `u32`, found `isize`\n  |\nhelp: you can convert an `isize`\
    \ to a `u32` and panic if the converted value doesn't fit\n  |\n6 |         count\
    \ += 9 * 10isize.pow((i - 1).try_into().unwrap());\n  |                      \
    \            +     +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n -->\
    \ /tmp/tmpxljfdevl.rs:8:25\n  |\n8 |     count + 10isize.pow(n - 1)\n  |     \
    \                    ^^^^^ expected `u32`, found `isize`\n  |\nhelp: you can convert\
    \ an `isize` to a `u32` and panic if the converted value doesn't fit\n  |\n8 |\
    \     count + 10isize.pow((n - 1).try_into().unwrap())\n  |                  \
    \       +     +++++++++++++++++++++\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    let mut count = 0;\n\
    \    for i in 1..n {\n        count += starts_one_ends(i);\n    }\n    count *=\
    \ 9;\n    count += starts_one_ends(n - 1);\n    count\n}\n\nfn main() {\n    let\
    \ candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmp2nx6wo8m.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    let mut i = 1;\n    while i < n {\n        count += 9 * starts_one_ends(n\
    \ - i - 1);\n        i += 1;\n    }\n    count + 10\n}\n\nfn main() {\n    let\
    \ candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmp0urt8as8.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    for i in 1..n {\n        count += starts_one_ends(i) * 9 * 10isize.pow(n\
    \ - i - 1);\n    }\n    count + 10isize.pow(n - 1)\n}\n\nfn main() {\n    let\
    \ candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpb2t6lwgv.rs:9:55\n  |\n9 |\
    \         count += starts_one_ends(i) * 9 * 10isize.pow(n - i - 1);\n  |     \
    \                                                  ^^^^^^^^^ expected `u32`, found\
    \ `isize`\n  |\nhelp: you can convert an `isize` to a `u32` and panic if the converted\
    \ value doesn't fit\n  |\n9 |         count += starts_one_ends(i) * 9 * 10isize.pow((n\
    \ - i - 1).try_into().unwrap());\n  |                                        \
    \               +         +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmpb2t6lwgv.rs:11:25\n   |\n11 |     count + 10isize.pow(n - 1)\n\
    \   |                         ^^^^^ expected `u32`, found `isize`\n   |\nhelp:\
    \ you can convert an `isize` to a `u32` and panic if the converted value doesn't\
    \ fit\n   |\n11 |     count + 10isize.pow((n - 1).try_into().unwrap())\n   | \
    \                        +     +++++++++++++++++++++\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut count =\
    \ 0;\n    for i in 1..n {\n        count += 9 * 10isize.pow(i - 1) * i;\n    }\n\
    \    count + 10isize.pow(n - 1)\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp_li9r3hy.rs:9:34\n  |\n9 |\
    \         count += 9 * 10isize.pow(i - 1) * i;\n  |                          \
    \        ^^^^^ expected `u32`, found `isize`\n  |\nhelp: you can convert an `isize`\
    \ to a `u32` and panic if the converted value doesn't fit\n  |\n9 |         count\
    \ += 9 * 10isize.pow((i - 1).try_into().unwrap()) * i;\n  |                  \
    \                +     +++++++++++++++++++++\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmp_li9r3hy.rs:11:25\n   |\n11 |     count + 10isize.pow(n - 1)\n\
    \   |                         ^^^^^ expected `u32`, found `isize`\n   |\nhelp:\
    \ you can convert an `isize` to a `u32` and panic if the converted value doesn't\
    \ fit\n   |\n11 |     count + 10isize.pow((n - 1).try_into().unwrap())\n   | \
    \                        +     +++++++++++++++++++++\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError

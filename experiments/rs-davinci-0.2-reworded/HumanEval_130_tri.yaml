name: HumanEval_130_tri
language: rs
prompt: "/// Everyone knows Fibonacci sequence, it was studied deeply by mathematicians\
  \ in \n/// the last couple centuries. However, what people don't know is Tribonacci\
  \ sequence.\n/// Tribonacci sequence is defined by the recurrence:\n/// tri(1) =\
  \ 3\n/// tri(n) = 1 + n / 2, if n is even.\n/// tri(n) =  tri(n - 1) + tri(n - 2)\
  \ + tri(n + 1), if n is odd.\n/// For example:\n/// tri(2) = 1 + (2 / 2) = 2\n///\
  \ tri(4) = 3\n/// tri(3) = tri(2) + tri(1) + tri(4)\n/// = 2 + 3 + 3 = 8 \n/// You\
  \ are given a non-negative integer number n, you have to a return a vector of the\
  \ \n/// first n + 1 numbers of the Tribonacci sequence.\n/// Examples:\n/// >>>\
  \ tri(3)\n/// vec![1, 3, 2, 8]\nfn tri(n: isize) -> Vec<isize> {\n"
tests: "}\n\nfn main() {\n    let candidate = tri;\n    assert_eq!(candidate(3), vec![1,\
  \ 3, 2, 8]);\n    assert_eq!(candidate(4), vec![1, 3, 2, 8, 3]);\n    assert_eq!(candidate(5),\
  \ vec![1, 3, 2, 8, 3, 15]);\n    assert_eq!(candidate(6), vec![1, 3, 2, 8, 3, 15,\
  \ 4]);\n    assert_eq!(candidate(7), vec![1, 3, 2, 8, 3, 15, 4, 24]);\n    assert_eq!(candidate(8),\
  \ vec![1, 3, 2, 8, 3, 15, 4, 24, 5]);\n    assert_eq!(candidate(9), vec![1, 3, 2,\
  \ 8, 3, 15, 4, 24, 5, 35]);\n    assert_eq!(candidate(20), vec![1, 3, 2, 8, 3, 15,\
  \ 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11]);\n    assert_eq!(candidate(0),\
  \ vec![1]);\n    assert_eq!(candidate(1), vec![1, 3]);\n}\n"
completions: ["    let mut v = vec![1, 3, 2];\n    if n <= 2 {\n        return v;\n\
    \    }\n    for i in 3..=n {\n        if i % 2 == 0 {\n            v.push(1 +\
    \ i / 2);\n        } else {\n            v.push(v[i as usize - 1] + v[i as usize\
    \ - 2] + v[i as usize + 1]);\n        }\n    }\n    v", "    let mut v = vec![1,\
    \ 3, 2];\n    for i in 3..=n {\n        v.push(if i % 2 == 0 {\n            1\
    \ + i / 2\n        } else {\n            v[(i - 1) as usize] + v[(i - 2) as usize]\
    \ + v[(i + 1) as usize]\n        });\n    }\n    v", "    let mut v = vec![1,\
    \ 3, 2];\n    for _ in 3..n + 1 {\n        let x = v[v.len() - 1] + v[v.len()\
    \ - 2] + v[v.len() - 3];\n        v.push(x);\n    }\n    v", "    let mut v =\
    \ vec![1, 3, 2];\n    if n < 3 {\n        return v[0..(n + 1)].to_vec();\n   \
    \ }\n    for i in 3..(n + 1) {\n        let x = v[i - 1] + v[i - 2] + v[i - 3];\n\
    \        v.push(x);\n    }\n    v", "    let mut v = vec![1, 3, 2];\n    for i\
    \ in 3..n + 1 {\n        v.push(if i % 2 == 0 {\n            1 + i / 2\n     \
    \   } else {\n            v[(i - 1) as usize] + v[(i - 2) as usize] + v[(i + 1)\
    \ as usize]\n        });\n    }\n    v", "    let mut v = vec![1, 3, 2];\n   \
    \ if n < 3 {\n        return v[0..(n + 1)].to_vec();\n    }\n    for i in 3..(n\
    \ + 1) {\n        let x = if i % 2 == 0 {\n            1 + i / 2\n        } else\
    \ {\n            v[i as usize - 1] + v[i as usize - 2] + v[i as usize + 1]\n \
    \       };\n        v.push(x);\n    }\n    v", "    let mut v = vec![1, 3, 2];\n\
    \    for i in 3..n + 1 {\n        v.push(if i % 2 == 0 {\n            1 + i /\
    \ 2\n        } else {\n            v[(i - 1) as usize] + v[(i - 2) as usize] +\
    \ v[(i + 1) as usize]\n        });\n    }\n    v", "    let mut v = vec![1, 3,\
    \ 2];\n    for i in 3..n + 1 {\n        let x = if i % 2 == 0 {\n            1\
    \ + i / 2\n        } else {\n            v[i as usize - 1] + v[i as usize - 2]\
    \ + v[i as usize + 1]\n        };\n        v.push(x);\n    }\n    v", "    let\
    \ mut v = vec![1, 3, 2];\n    for i in 3..n + 1 {\n        let mut x = v[i as\
    \ usize - 1] + v[i as usize - 2] + v[i as usize - 3];\n        if i % 2 == 0 {\n\
    \            x = 1 + i / 2;\n        }\n        v.push(x);\n    }\n    v", " \
    \   let mut v = vec![1, 3, 2];\n    for i in 3..n+1 {\n        v.push(if i % 2\
    \ == 0 {\n            1 + i / 2\n        } else {\n            v[i as usize -\
    \ 1] + v[i as usize - 2] + v[i as usize + 1]\n        });\n    }\n    v", "  \
    \  let mut result = vec![1, 3, 2];\n    for i in 3..n + 1 {\n        let mut next\
    \ = result[i as usize - 1] + result[i as usize - 2] + result[i as usize - 3];\n\
    \        if i % 2 == 0 {\n            next = 1 + i / 2;\n        }\n        result.push(next);\n\
    \    }\n    result", "    if n == 0 {\n        return vec![1];\n    }\n    let\
    \ mut v = vec![1, 3, 2];\n    for i in 3..n + 1 {\n        v.push(if i % 2 ==\
    \ 0 {\n            1 + i / 2\n        } else {\n            v[i as usize - 1]\
    \ + v[i as usize - 2] + v[i as usize + 1]\n        });\n    }\n    v", "    let\
    \ mut v = vec![1, 3, 2];\n    for i in 3..=n {\n        let x = if i % 2 == 0\
    \ {\n            1 + i / 2\n        } else {\n            v[(i - 1) as usize]\
    \ + v[(i - 2) as usize] + v[(i + 1) as usize]\n        };\n        v.push(x);\n\
    \    }\n    v", "    let mut v = vec![1, 3, 2];\n    if n <= 2 {\n        return\
    \ v;\n    }\n    for i in 3..n + 1 {\n        let x = if i % 2 == 0 {\n      \
    \      1 + i / 2\n        } else {\n            v[i as usize - 1] + v[i as usize\
    \ - 2] + v[i as usize + 1]\n        };\n        v.push(x);\n    }\n    v", " \
    \   let mut v = vec![1, 3, 2];\n    for i in 3..=n {\n        v.push(if i % 2\
    \ == 0 {\n            i / 2 + 1\n        } else {\n            v[(i - 1) as usize]\
    \ + v[(i - 2) as usize] + v[(i + 1) as usize]\n        });\n    }\n    v", " \
    \   let mut v = vec![1, 3, 2];\n    for i in 3..n+1 {\n        v.push(if i % 2\
    \ == 0 {\n            1 + i / 2\n        } else {\n            v[i as usize -\
    \ 1] + v[i as usize - 2] + v[i as usize + 1]\n        });\n    }\n    v", "  \
    \  let mut v = vec![1, 3, 2];\n    for i in 3..n + 1 {\n        v.push(if i %\
    \ 2 == 0 {\n            1 + i / 2\n        } else {\n            v[(i - 1) as\
    \ usize] + v[(i - 2) as usize] + v[(i + 1) as usize]\n        });\n    }\n   \
    \ v", "    let mut result = vec![1, 3, 2];\n    if n <= 2 {\n        return result;\n\
    \    }\n    for i in 3..=n {\n        let next = if i % 2 == 0 {\n           \
    \ 1 + i / 2\n        } else {\n            result[i as usize - 1] + result[i as\
    \ usize - 2] + result[i as usize + 1]\n        };\n        result.push(next);\n\
    \    }\n    result", "    let mut v = vec![1, 3, 2];\n    for i in 3..=n {\n \
    \       v.push(if i % 2 == 0 {\n            1 + i / 2\n        } else {\n    \
    \        v[(i - 1) as usize] + v[(i - 2) as usize] + v[(i + 1) as usize]\n   \
    \     });\n    }\n    v", "    let mut v = vec![1, 3, 2];\n    for i in 3..n +\
    \ 1 {\n        v.push(if i % 2 == 0 {\n            1 + i / 2\n        } else {\n\
    \            v[(i - 1) as usize] + v[(i - 2) as usize] + v[(i + 1) as usize]\n\
    \        });\n    }\n    v"]
stop_tokens:
- "\n}"

name: HumanEval_130_tri
language: rs
prompt: "/// Everyone knows Fibonacci sequence, it was studied deeply by mathematicians\
  \ in \n/// the last couple centuries. However, what people don't know is Tribonacci\
  \ sequence.\n/// Tribonacci sequence is defined by the recurrence:\n/// >>> tri(1)\n\
  /// 3\n/// >>> tri(2)\n/// 2\n/// >>> tri(4)\n/// 3\n/// >>> tri(3)\n/// 8\nfn tri(n:\
  \ isize) -> Vec<isize> {\n"
tests: "}\n\nfn main() {\n    let candidate = tri;\n    assert_eq!(candidate(3), vec![1,\
  \ 3, 2.0, 8.0]);\n    assert_eq!(candidate(4), vec![1, 3, 2.0, 8.0, 3.0]);\n   \
  \ assert_eq!(candidate(5), vec![1, 3, 2.0, 8.0, 3.0, 15.0]);\n    assert_eq!(candidate(6),\
  \ vec![1, 3, 2.0, 8.0, 3.0, 15.0, 4.0]);\n    assert_eq!(candidate(7), vec![1, 3,\
  \ 2.0, 8.0, 3.0, 15.0, 4.0, 24.0]);\n    assert_eq!(candidate(8), vec![1, 3, 2.0,\
  \ 8.0, 3.0, 15.0, 4.0, 24.0, 5.0]);\n    assert_eq!(candidate(9), vec![1, 3, 2.0,\
  \ 8.0, 3.0, 15.0, 4.0, 24.0, 5.0, 35.0]);\n    assert_eq!(candidate(20), vec![1,\
  \ 3, 2.0, 8.0, 3.0, 15.0, 4.0, 24.0, 5.0, 35.0, 6.0, 48.0, 7.0, 63.0, 8.0, 80.0,\
  \ 9.0, 99.0, 10.0, 120.0, 11.0]);\n    assert_eq!(candidate(0), vec![1]);\n    assert_eq!(candidate(1),\
  \ vec![1, 3]);\n}\n"
completions: ["    let mut v = vec![3, 2, 1];\n    for _ in 0..n {\n        let x\
    \ = v[0] + v[1] + v[2];\n        v.remove(0);\n        v.push(x);\n    }\n   \
    \ v", "    let mut v = vec![3, 2, 1];\n    for _ in 0..n {\n        let x = v[0]\
    \ + v[1] + v[2];\n        v.remove(0);\n        v.push(x);\n    }\n    v", " \
    \   let mut v = vec![3, 2, 1];\n    if n <= 3 {\n        v.truncate(n as usize);\n\
    \        return v;\n    }\n    for _ in 3..n {\n        let x = v[0] + v[1] +\
    \ v[2];\n        v.remove(0);\n        v.push(x);\n    }\n    v", "    let mut\
    \ v = vec![1, 1, 1];\n    for _ in 3..n {\n        v.push(v[v.len() - 3] + v[v.len()\
    \ - 2] + v[v.len() - 1]);\n    }\n    v", "    let mut v = vec![];\n    for i\
    \ in 1..n + 1 {\n        v.push(tri_rec(i));\n    }\n    v", "    let mut v =\
    \ vec![3, 2, 1];\n    for _ in 0..n {\n        let x = v[0] + v[1] + v[2];\n \
    \       v.remove(0);\n        v.push(x);\n    }\n    v", "    let mut v = vec![3,\
    \ 2, 1];\n    for _ in 0..n {\n        let x = v[0] + v[1] + v[2];\n        v.remove(0);\n\
    \        v.push(x);\n    }\n    v", "    let mut v = vec![3, 2, 1];\n    for _\
    \ in 0..n {\n        let t = v[0] + v[1] + v[2];\n        v.remove(0);\n     \
    \   v.push(t);\n    }\n    v", "    let mut v = vec![1, 1, 1];\n    for _ in 3..n\
    \ {\n        v.push(v[v.len() - 3] + v[v.len() - 2] + v[v.len() - 1]);\n    }\n\
    \    v", "    let mut v = vec![3, 2, 1];\n    for _ in 0..n {\n        let x =\
    \ v[v.len() - 1] + v[v.len() - 2] + v[v.len() - 3];\n        v.push(x);\n    }\n\
    \    v", "    let mut v = vec![1, 2, 3];\n    for _ in 3..n {\n        let x =\
    \ v[v.len() - 1] + v[v.len() - 2] + v[v.len() - 3];\n        v.push(x);\n    }\n\
    \    v", "    let mut v = vec![3, 2, 1];\n    for _ in 0..n {\n        let x =\
    \ v[v.len() - 1] + v[v.len() - 2] + v[v.len() - 3];\n        v.push(x);\n    }\n\
    \    v", "    let mut v = vec![0, 1, 1];\n    for i in 3..n {\n        v.push(v[i\
    \ - 1] + v[i - 2] + v[i - 3]);\n    }\n    v", "    let mut v = vec![3, 2, 1];\n\
    \    for _ in 0..n {\n        let x = v[0] + v[1] + v[2];\n        v.remove(0);\n\
    \        v.push(x);\n    }\n    v", "    let mut v = vec![3, 2, 1];\n    if n\
    \ <= 3 {\n        v.truncate(n as usize);\n        return v;\n    }\n    for _\
    \ in 3..n {\n        let last = v.len() - 1;\n        v.push(v[last] + v[last\
    \ - 1] + v[last - 2]);\n    }\n    v", "    let mut v = vec![0, 1, 2];\n    for\
    \ i in 3..n {\n        v.push(v[i - 1] + v[i - 2] + v[i - 3]);\n    }\n    v",
  "    let mut v = vec![3, 2, 1];\n    for _ in 0..n {\n        let x = v[0] + v[1]\
    \ + v[2];\n        v.remove(0);\n        v.push(x);\n    }\n    v", "    let mut\
    \ v = vec![3, 2, 1];\n    for _ in 0..n {\n        let last = v.len() - 1;\n \
    \       v.push(v[last - 2] + v[last - 1] + v[last]);\n    }\n    v", "    let\
    \ mut v = vec![1, 2, 3];\n    if n <= 3 {\n        return v;\n    }\n    for _\
    \ in 3..n {\n        let x = v[0] + v[1] + v[2];\n        v.remove(0);\n     \
    \   v.push(x);\n    }\n    v", "    let mut v = vec![3, 2, 1];\n    for _ in 0..n\
    \ {\n        let x = v[0] + v[1] + v[2];\n        v.remove(0);\n        v.push(x);\n\
    \    }\n    v", "    let mut vec = vec![3, 2, 1];\n    for _ in 0..n {\n     \
    \   let len = vec.len();\n        vec.push(vec[len - 1] + vec[len - 2] + vec[len\
    \ - 3]);\n    }\n    vec", "    let mut v = vec![3, 2, 1];\n    for _ in 0..n\
    \ {\n        let x = v[0] + v[1] + v[2];\n        v.remove(0);\n        v.push(x);\n\
    \    }\n    v", "    let mut v = vec![1, 2, 3];\n    for _ in 0..n {\n       \
    \ let x = v[v.len() - 1] + v[v.len() - 2] + v[v.len() - 3];\n        v.push(x);\n\
    \    }\n    v", "    let mut v = vec![0, 1, 1];\n    for i in 3..n {\n       \
    \ v.push(v[i - 1] + v[i - 2] + v[i - 3]);\n    }\n    v", "    let mut v = vec![1,\
    \ 1, 1];\n    for _ in 0..n {\n        let a = v[0];\n        let b = v[1];\n\
    \        let c = v[2];\n        v.push(a + b + c);\n        v.remove(0);\n   \
    \ }\n    v", "    let mut vec = vec![1, 1, 1];\n    for _ in 3..n {\n        vec.push(vec[vec.len()\
    \ - 1] + vec[vec.len() - 2] + vec[vec.len() - 3]);\n    }\n    vec", "    let\
    \ mut v = vec![0, 1, 1];\n    for _ in 3..n {\n        v.push(v[v.len() - 1] +\
    \ v[v.len() - 2] + v[v.len() - 3]);\n    }\n    v", "    let mut v = vec![0, 1,\
    \ 2];\n    for i in 3..n {\n        v.push(v[i - 1] + v[i - 2] + v[i - 3]);\n\
    \    }\n    v", "    let mut v = vec![3, 2, 1];\n    for _ in 0..n {\n       \
    \ let x = v[0] + v[1] + v[2];\n        v.remove(0);\n        v.push(x);\n    }\n\
    \    v", "    let mut v = vec![1, 2, 3];\n    for _ in 3..n {\n        let x =\
    \ v[v.len() - 1] + v[v.len() - 2] + v[v.len() - 3];\n        v.push(x);\n    }\n\
    \    v", "    let mut v = vec![3, 2, 1];\n    for _ in 0..n {\n        let l =\
    \ v.len();\n        v.push(v[l - 3] + v[l - 2] + v[l - 1]);\n    }\n    v", " \
    \   let mut v = vec![3, 2, 1];\n    for _ in 0..n {\n        let x = v[v.len()\
    \ - 1] + v[v.len() - 2] + v[v.len() - 3];\n        v.push(x);\n    }\n    v",
  "    let mut v = vec![3, 2, 1];\n    for _ in 0..n {\n        let x = v[0] + v[1]\
    \ + v[2];\n        v.insert(0, x);\n        v.pop();\n    }\n    v", "    let\
    \ mut result = vec![3, 2, 1];\n    if n <= 3 {\n        result.truncate(n as usize);\n\
    \        return result;\n    }\n    for _ in 3..n {\n        let x = result[0]\
    \ + result[1] + result[2];\n        result.remove(0);\n        result.push(x);\n\
    \    }\n    result", "    let mut v = vec![3, 2, 1];\n    for _ in 0..n {\n  \
    \      let x = v[0] + v[1] + v[2];\n        v.remove(0);\n        v.push(x);\n\
    \    }\n    v", "    let mut v = vec![3, 2, 1];\n    for _ in 0..n {\n       \
    \ let x = v[0] + v[1] + v[2];\n        v.push(x);\n        v.remove(0);\n    }\n\
    \    v", "    let mut v = vec![1, 2, 3];\n    for _ in 3..n {\n        let x =\
    \ v[v.len() - 1] + v[v.len() - 2] + v[v.len() - 3];\n        v.push(x);\n    }\n\
    \    v", "    let mut v = vec![3, 2, 1];\n    for _ in 0..n {\n        let x =\
    \ v[0] + v[1] + v[2];\n        v.remove(0);\n        v.push(x);\n    }\n    v",
  "    let mut v = vec![0, 1, 1];\n    for i in 3..n {\n        v.push(v[i - 1] +\
    \ v[i - 2] + v[i - 3]);\n    }\n    v", "    let mut v = vec![3, 2, 1];\n    for\
    \ _ in 0..n {\n        let x = v[0] + v[1] + v[2];\n        v.remove(0);\n   \
    \     v.push(x);\n    }\n    v", "    let mut v = vec![0, 1, 1];\n    for i in\
    \ 3..n {\n        v.push(v[i - 1] + v[i - 2] + v[i - 3]);\n    }\n    v", "  \
    \  let mut v = vec![3, 2, 1];\n    for _ in 0..n {\n        let last = v.last().unwrap();\n\
    \        let second_last = v.get(v.len() - 2).unwrap();\n        let third_last\
    \ = v.get(v.len() - 3).unwrap();\n        v.push(last + second_last + third_last);\n\
    \    }\n    v", "    let mut v = vec![3, 2, 1];\n    for _ in 0..n {\n       \
    \ let x = v[0] + v[1] + v[2];\n        v.remove(0);\n        v.push(x);\n    }\n\
    \    v", "    let mut v = vec![3, 2, 1];\n    for _ in 3..n {\n        v.push(v[v.len()\
    \ - 1] + v[v.len() - 2] + v[v.len() - 3]);\n    }\n    v", "    let mut v = vec![];\n\
    \    if n == 0 {\n        return v;\n    }\n    v.push(3);\n    if n == 1 {\n\
    \        return v;\n    }\n    v.push(2);\n    if n == 2 {\n        return v;\n\
    \    }\n    v.push(1);\n    for _ in 3..n {\n        let l = v.len();\n      \
    \  v.push(v[l - 1] + v[l - 2] + v[l - 3]);\n    }\n    v", "    let mut v = vec![0,\
    \ 1, 1];\n    for i in 3..n {\n        v.push(v[i - 1] + v[i - 2] + v[i - 3]);\n\
    \    }\n    v", "    let mut v = vec![3, 2, 1];\n    for _ in 0..n {\n       \
    \ let x = v[0] + v[1] + v[2];\n        v.remove(0);\n        v.push(x);\n    }\n\
    \    v", "    let mut v = vec![3, 2, 1];\n    for _ in 0..n {\n        let x =\
    \ v[0] + v[1] + v[2];\n        v.remove(0);\n        v.push(x);\n    }\n    v",
  "    let mut v = vec![3, 2, 1];\n    for _ in 0..n {\n        let x = v[v.len()\
    \ - 1] + v[v.len() - 2] + v[v.len() - 3];\n        v.push(x);\n    }\n    v",
  "    let mut v = vec![3, 2, 1];\n    for _ in 0..n {\n        let x = v[0] + v[1]\
    \ + v[2];\n        v.remove(0);\n        v.push(x);\n    }\n    v", "    let mut\
    \ v = vec![3, 2, 1];\n    for _ in 0..n {\n        let x = v[0] + v[1] + v[2];\n\
    \        v.remove(0);\n        v.push(x);\n    }\n    v", "    let mut v = vec![3,\
    \ 2, 1];\n    for _ in 0..n {\n        let x = v[0] + v[1] + v[2];\n        v.remove(0);\n\
    \        v.push(x);\n    }\n    v", "    let mut v = vec![3, 2, 1];\n    for _\
    \ in 3..n {\n        v.push(v[v.len() - 1] + v[v.len() - 2] + v[v.len() - 3]);\n\
    \    }\n    v", "    let mut vec = vec![3, 2, 1];\n    for i in 3..n {\n     \
    \   vec.push(vec[i - 3] + vec[i - 2] + vec[i - 1]);\n    }\n    vec", "    let\
    \ mut v = vec![1, 1, 1];\n    for _ in 3..n {\n        v.push(v[v.len() - 3] +\
    \ v[v.len() - 2] + v[v.len() - 1]);\n    }\n    v", "    let mut v = vec![3, 2,\
    \ 1];\n    for _ in 0..n {\n        let x = v[0] + v[1] + v[2];\n        v.remove(0);\n\
    \        v.push(x);\n    }\n    v", "    let mut v = vec![];\n    let mut a =\
    \ 0;\n    let mut b = 0;\n    let mut c = 1;\n    for _ in 0..n {\n        v.push(a\
    \ + b + c);\n        a = b;\n        b = c;\n        c = v[v.len() - 1];\n   \
    \ }\n    v", "    let mut v = vec![3, 2, 1];\n    for _ in 0..n {\n        let\
    \ x = v[0] + v[1] + v[2];\n        v.remove(0);\n        v.push(x);\n    }\n \
    \   v", "    let mut v = vec![1, 1, 1];\n    for _ in 0..n {\n        let last\
    \ = v.len() - 1;\n        v.push(v[last] + v[last - 1] + v[last - 2]);\n    }\n\
    \    v", "    let mut v = vec![3, 2, 1];\n    if n < 4 {\n        v.truncate(n\
    \ as usize);\n        return v;\n    }\n    for _ in 4..=n {\n        let x =\
    \ v[0] + v[1] + v[2];\n        v.remove(0);\n        v.push(x);\n    }\n    v",
  "    let mut v = vec![3, 2, 1];\n    for _ in 0..n {\n        let x = v[0] + v[1]\
    \ + v[2];\n        v.remove(0);\n        v.push(x);\n    }\n    v", "    let mut\
    \ v = vec![3, 2, 1];\n    for _ in 0..n {\n        let x = v[0] + v[1] + v[2];\n\
    \        v.remove(0);\n        v.push(x);\n    }\n    v", "    let mut v = vec![3,\
    \ 2, 1];\n    for _ in 0..n {\n        let t = v[0] + v[1] + v[2];\n        v.remove(0);\n\
    \        v.push(t);\n    }\n    v", "    let mut v = vec![3, 2, 1];\n    for _\
    \ in 0..n {\n        let x = v[0] + v[1] + v[2];\n        v.remove(0);\n     \
    \   v.push(x);\n    }\n    v", "    let mut v = vec![3, 2, 1];\n    for _ in 0..n\
    \ {\n        let x = v[0] + v[1] + v[2];\n        v.remove(0);\n        v.push(x);\n\
    \    }\n    v", "    let mut v = vec![1, 2, 3];\n    for _ in 0..n {\n       \
    \ let x = v[v.len() - 1] + v[v.len() - 2] + v[v.len() - 3];\n        v.push(x);\n\
    \    }\n    v", "    let mut vec = vec![1, 1, 1];\n    for _ in 3..n {\n     \
    \   vec.push(vec[vec.len() - 1] + vec[vec.len() - 2] + vec[vec.len() - 3]);\n\
    \    }\n    vec", "    let mut v = vec![0, 1, 2];\n    for i in 3..n {\n     \
    \   v.push(v[i - 1] + v[i - 2] + v[i - 3]);\n    }\n    v", "    let mut v = vec![1,\
    \ 1, 1];\n    for _ in 0..n {\n        let x = v[0] + v[1] + v[2];\n        v.remove(0);\n\
    \        v.push(x);\n    }\n    v", "    let mut v = vec![];\n    let mut a =\
    \ 0;\n    let mut b = 1;\n    let mut c = 2;\n    for _ in 0..n {\n        v.push(a);\n\
    \        a = b;\n        b = c;\n        c = a + b + c;\n    }\n    v", "    let\
    \ mut v = vec![3, 2, 1];\n    for _ in 0..n {\n        let t = v[0] + v[1] + v[2];\n\
    \        v.remove(0);\n        v.push(t);\n    }\n    v", "    let mut v = vec![3,\
    \ 2, 1];\n    for _ in 3..n {\n        v.push(v[v.len() - 1] + v[v.len() - 2]\
    \ + v[v.len() - 3]);\n    }\n    v", "    let mut v = vec![0, 1, 2];\n    for\
    \ _ in 3..n {\n        v.push(v[v.len() - 3] + v[v.len() - 2] + v[v.len() - 1]);\n\
    \    }\n    v", "    let mut v = vec![3, 2, 1];\n    for _ in 0..n {\n       \
    \ let x = v[v.len() - 1] + v[v.len() - 2] + v[v.len() - 3];\n        v.push(x);\n\
    \    }\n    v", "    let mut v = vec![3, 2, 1];\n    for _ in 0..n {\n       \
    \ let x = v[0] + v[1] + v[2];\n        v.remove(0);\n        v.push(x);\n    }\n\
    \    v", "    let mut v = vec![0, 1, 1];\n    for i in 3..n {\n        v.push(v[i\
    \ - 1] + v[i - 2] + v[i - 3]);\n    }\n    v", "    let mut v = vec![3, 2, 1];\n\
    \    for _ in 3..n {\n        v.push(v[v.len() - 1] + v[v.len() - 2] + v[v.len()\
    \ - 3]);\n    }\n    v", "    let mut v = vec![0, 1, 1];\n    for _ in 3..n {\n\
    \        v.push(v[v.len() - 3] + v[v.len() - 2] + v[v.len() - 1]);\n    }\n  \
    \  v", "    let mut v = vec![1, 1, 1];\n    for _ in 0..n {\n        let x = v[0]\
    \ + v[1] + v[2];\n        v.remove(0);\n        v.push(x);\n    }\n    v", " \
    \   let mut v = vec![3, 2, 1];\n    for _ in 0..n {\n        let x = v[0] + v[1]\
    \ + v[2];\n        v.remove(0);\n        v.push(x);\n    }\n    v", "    let mut\
    \ v = vec![3, 2, 1];\n    for _ in 0..n {\n        let last = v.last().unwrap();\n\
    \        let second_last = v.get(v.len() - 2).unwrap();\n        let third_last\
    \ = v.get(v.len() - 3).unwrap();\n        v.push(last + second_last + third_last);\n\
    \    }\n    v", "    let mut result = vec![3, 2, 1];\n    for _ in 3..n {\n  \
    \      let last = result.len() - 1;\n        result.push(result[last] + result[last\
    \ - 1] + result[last - 2]);\n    }\n    result", "    let mut v = vec![3, 2, 1];\n\
    \    if n <= 3 {\n        return v[0..n as usize].to_vec();\n    }\n    for _\
    \ in 3..n {\n        let x = v[0] + v[1] + v[2];\n        v.remove(0);\n     \
    \   v.push(x);\n    }\n    v", "    let mut v = vec![3, 2, 1];\n    for _ in 0..n\
    \ {\n        let x = v[0] + v[1] + v[2];\n        v.remove(0);\n        v.push(x);\n\
    \    }\n    v", "    let mut v = vec![1, 1, 1];\n    for _ in 3..n {\n       \
    \ v.push(v[v.len() - 3] + v[v.len() - 2] + v[v.len() - 1]);\n    }\n    v", " \
    \   let mut v = vec![3, 2, 1];\n    for _ in 0..n {\n        let x = v[0] + v[1]\
    \ + v[2];\n        v.remove(0);\n        v.push(x);\n    }\n    v", "    let mut\
    \ v = vec![3, 2, 1];\n    for _ in 0..n {\n        let t = v[0] + v[1] + v[2];\n\
    \        v.remove(0);\n        v.push(t);\n    }\n    v", "    let mut v = vec![1,\
    \ 2, 3];\n    for _ in 0..n {\n        let x = v[v.len() - 1] + v[v.len() - 2]\
    \ + v[v.len() - 3];\n        v.push(x);\n    }\n    v", "    let mut v = vec![1,\
    \ 1, 1];\n    for _ in 0..n {\n        let x = v[0] + v[1] + v[2];\n        v.remove(0);\n\
    \        v.push(x);\n    }\n    v", "    let mut v = vec![3, 2, 1];\n    for _\
    \ in 0..n {\n        let last = v.last().unwrap();\n        let second_last =\
    \ v.get(v.len() - 2).unwrap();\n        let third_last = v.get(v.len() - 3).unwrap();\n\
    \        v.push(last + second_last + third_last);\n    }\n    v", "    let mut\
    \ v = vec![3, 2, 1];\n    for _ in 0..n {\n        let x = v[v.len() - 1] + v[v.len()\
    \ - 2] + v[v.len() - 3];\n        v.push(x);\n    }\n    v", "    let mut v =\
    \ vec![3, 2, 1];\n    for _ in 0..n {\n        let a = v[v.len() - 1];\n     \
    \   let b = v[v.len() - 2];\n        let c = v[v.len() - 3];\n        v.push(a\
    \ + b + c);\n    }\n    v", "    let mut v = vec![1, 1, 1];\n    for _ in 0..n\
    \ {\n        let x = v[0] + v[1] + v[2];\n        v.remove(0);\n        v.push(x);\n\
    \    }\n    v", "    let mut v = vec![0, 1, 2];\n    for _ in 3..n {\n       \
    \ v.push(v[v.len() - 3] + v[v.len() - 2] + v[v.len() - 1]);\n    }\n    v", " \
    \   let mut v = vec![1, 2, 3];\n    for _ in 3..n {\n        let x = v[v.len()\
    \ - 1] + v[v.len() - 2] + v[v.len() - 3];\n        v.push(x);\n    }\n    v",
  "    let mut v = vec![3, 2, 1];\n    for _ in 0..n {\n        let x = v[0] + v[1]\
    \ + v[2];\n        v.remove(0);\n        v.push(x);\n    }\n    v", "    let mut\
    \ v = vec![3, 2, 1];\n    for _ in 0..n {\n        let x = v[0] + v[1] + v[2];\n\
    \        v.remove(0);\n        v.push(x);\n    }\n    v", "    let mut v = vec![1,\
    \ 1, 1];\n    for _ in 3..n {\n        v.push(v[v.len() - 3] + v[v.len() - 2]\
    \ + v[v.len() - 1]);\n    }\n    v", "    let mut v = vec![1, 1, 1];\n    for\
    \ _ in 3..n {\n        v.push(v[v.len() - 3] + v[v.len() - 2] + v[v.len() - 1]);\n\
    \    }\n    v", "    if n == 0 {\n        return vec![];\n    }\n    let mut v\
    \ = vec![3, 2, 1];\n    for _ in 3..n {\n        v.push(v[v.len() - 1] + v[v.len()\
    \ - 2] + v[v.len() - 3]);\n    }\n    v", "    let mut v = vec![3, 2, 1];\n  \
    \  for _ in 0..n {\n        let last = v.len() - 1;\n        v.push(v[last - 2]\
    \ + v[last - 1] + v[last]);\n    }\n    v", "    let mut v = vec![1, 2, 3];\n\
    \    for _ in 3..n {\n        let x = v[v.len() - 1] + v[v.len() - 2] + v[v.len()\
    \ - 3];\n        v.push(x);\n    }\n    v", "    let mut v = vec![3, 2, 1];\n\
    \    for _ in 0..n {\n        let sum = v.iter().sum();\n        v.push(sum);\n\
    \        v.remove(0);\n    }\n    v", "    let mut v = vec![1, 2, 3];\n    for\
    \ _ in 3..n {\n        let t = v[0] + v[1] + v[2];\n        v.remove(0);\n   \
    \     v.push(t);\n    }\n    v", "    let mut v = vec![];\n    for i in 1..n+1\
    \ {\n        v.push(tri_n(i));\n    }\n    v", "    let mut v = vec![3, 2, 1];\n\
    \    for _ in 3..n {\n        v.push(v[v.len() - 1] + v[v.len() - 2] + v[v.len()\
    \ - 3]);\n    }\n    v", "    let mut res = vec![0; n as usize];\n    res[0] =\
    \ 3;\n    res[1] = 2;\n    res[2] = 1;\n    for i in 3..n {\n        res[i as\
    \ usize] = res[(i - 1) as usize] + res[(i - 2) as usize] + res[(i - 3) as usize];\n\
    \    }\n    res", "    let mut v = vec![0, 1, 1];\n    for i in 3..n {\n     \
    \   v.push(v[i - 1] + v[i - 2] + v[i - 3]);\n    }\n    v", "    let mut v = vec![1,\
    \ 1, 1];\n    for _ in 0..n {\n        let x = v[0] + v[1] + v[2];\n        v.remove(0);\n\
    \        v.push(x);\n    }\n    v", "    let mut v = vec![3, 2, 1];\n    for _\
    \ in 0..n {\n        let x = v[0] + v[1] + v[2];\n        v.remove(0);\n     \
    \   v.push(x);\n    }\n    v", "    let mut v = vec![0, 1, 2];\n    for _ in 3..n\
    \ {\n        v.push(v[v.len() - 3] + v[v.len() - 2] + v[v.len() - 1]);\n    }\n\
    \    v", "    let mut v = vec![3, 2, 1];\n    if n == 1 {\n        return vec![3];\n\
    \    } else if n == 2 {\n        return vec![3, 2];\n    } else if n == 3 {\n\
    \        return vec![3, 2, 1];\n    }\n    for _ in 3..n {\n        v.push(v[v.len()\
    \ - 1] + v[v.len() - 2] + v[v.len() - 3]);\n    }\n    v", "    let mut v = vec![1,\
    \ 1, 1];\n    for _ in 3..n {\n        v.push(v[v.len() - 3] + v[v.len() - 2]\
    \ + v[v.len() - 1]);\n    }\n    v", "    let mut v = vec![];\n    for i in 1..n+1\
    \ {\n        v.push(tri_rec(i));\n    }\n    v", "    let mut v = vec![3, 2, 1];\n\
    \    for _ in 0..n {\n        let x = v[0] + v[1] + v[2];\n        v.remove(0);\n\
    \        v.push(x);\n    }\n    v", "    let mut v = vec![0, 1, 1];\n    for i\
    \ in 3..n {\n        v.push(v[i - 1] + v[i - 2] + v[i - 3]);\n    }\n    v", " \
    \   let mut v = vec![3, 2, 1];\n    for _ in 0..n {\n        let x = v[0] + v[1]\
    \ + v[2];\n        v.remove(0);\n        v.push(x);\n    }\n    v", "    let mut\
    \ v = vec![3, 2, 1];\n    for _ in 0..n {\n        let last = v.len() - 1;\n \
    \       v.push(v[last - 2] + v[last - 1] + v[last]);\n    }\n    v", "    let\
    \ mut v = vec![3, 2, 1];\n    for _ in 3..n {\n        v.push(v[v.len() - 1] +\
    \ v[v.len() - 2] + v[v.len() - 3]);\n    }\n    v", "    let mut v = vec![1, 1,\
    \ 1];\n    for _ in 0..n {\n        let x = v[0] + v[1] + v[2];\n        v.remove(0);\n\
    \        v.push(x);\n    }\n    v", "    let mut v = vec![];\n    for i in 1..n+1\
    \ {\n        if i == 1 {\n            v.push(3);\n        } else if i == 2 {\n\
    \            v.push(2);\n        } else if i == 3 {\n            v.push(8);\n\
    \        } else {\n            v.push(v[i as usize - 2] + v[i as usize - 3] +\
    \ v[i as usize - 4]);\n        }\n    }\n    v", "    let mut v = vec![1, 1, 1];\n\
    \    for _ in 0..n {\n        let a = v[0];\n        let b = v[1];\n        let\
    \ c = v[2];\n        v.push(a + b + c);\n        v.remove(0);\n    }\n    v",
  "    let mut v = vec![3, 2, 1];\n    for _ in 0..n {\n        let x = v[0] + v[1]\
    \ + v[2];\n        v.remove(0);\n        v.push(x);\n    }\n    v", "    let mut\
    \ v = vec![3, 2, 1];\n    for _ in 0..n {\n        let x = v[0] + v[1] + v[2];\n\
    \        v.remove(0);\n        v.push(x);\n    }\n    v", "    let mut v = vec![3,\
    \ 2, 1];\n    for _ in 0..n {\n        let x = v[0] + v[1] + v[2];\n        v.push(x);\n\
    \        v.remove(0);\n    }\n    v", "    let mut v = vec![3, 2, 1];\n    for\
    \ _ in 0..n {\n        let x = v[0] + v[1] + v[2];\n        v.remove(0);\n   \
    \     v.push(x);\n    }\n    v", "    let mut v: Vec<isize> = vec![3, 2, 1];\n\
    \    for _ in 0..n {\n        let last = v.len() - 1;\n        v.push(v[last]\
    \ + v[last - 1] + v[last - 2]);\n    }\n    v", "    let mut v = vec![3, 2, 1];\n\
    \    for _ in 0..n {\n        let x = v[0] + v[1] + v[2];\n        v.remove(0);\n\
    \        v.push(x);\n    }\n    v", "    let mut v = vec![3, 2, 1];\n    for _\
    \ in 0..n {\n        let tmp = v[0] + v[1] + v[2];\n        v.remove(0);\n   \
    \     v.push(tmp);\n    }\n    v", "    let mut v = vec![0, 1, 1];\n    for i\
    \ in 3..n {\n        v.push(v[i - 1] + v[i - 2] + v[i - 3]);\n    }\n    v", " \
    \   let mut v = vec![0, 1, 2];\n    for i in 3..n {\n        v.push(v[i - 1] +\
    \ v[i - 2] + v[i - 3]);\n    }\n    v", "    let mut v = vec![1, 1, 1];\n    for\
    \ _ in 0..n {\n        let last = v.len() - 1;\n        v.push(v[last] + v[last\
    \ - 1] + v[last - 2]);\n    }\n    v", "    let mut v = vec![];\n    let mut a\
    \ = 0;\n    let mut b = 0;\n    let mut c = 1;\n    for _ in 0..n {\n        a\
    \ = b;\n        b = c;\n        c = a + b + c;\n        v.push(c);\n    }\n  \
    \  v", "    let mut v = vec![1, 1, 1];\n    for _ in 3..n {\n        v.push(v[v.len()\
    \ - 3] + v[v.len() - 2] + v[v.len() - 1]);\n    }\n    v", "    let mut v = vec![3,\
    \ 2, 1];\n    for _ in 3..n {\n        v.push(v[v.len() - 1] + v[v.len() - 2]\
    \ + v[v.len() - 3]);\n    }\n    v", "    let mut v = vec![1, 2, 3];\n    for\
    \ _ in 0..n {\n        let x = v[v.len() - 1] + v[v.len() - 2] + v[v.len() - 3];\n\
    \        v.push(x);\n    }\n    v", "    let mut v = vec![3, 2, 1];\n    for _\
    \ in 0..n {\n        let x = v[0] + v[1] + v[2];\n        v.remove(0);\n     \
    \   v.push(x);\n    }\n    v", "    let mut v = vec![3, 2, 1];\n    for _ in 0..n\
    \ {\n        let x = v[0] + v[1] + v[2];\n        v.push(x);\n        v.remove(0);\n\
    \    }\n    v", "    let mut v = vec![1, 2, 3];\n    for _ in 3..n {\n       \
    \ let x = v[v.len() - 1] + v[v.len() - 2] + v[v.len() - 3];\n        v.push(x);\n\
    \    }\n    v", "    let mut v = vec![1, 1, 1];\n    for _ in 0..n {\n       \
    \ let x = v[0] + v[1] + v[2];\n        v.remove(0);\n        v.push(x);\n    }\n\
    \    v", "    let mut v = vec![3, 2, 1];\n    for _ in 0..n {\n        let x =\
    \ v[0] + v[1] + v[2];\n        v.push(x);\n        v.remove(0);\n    }\n    v",
  "    let mut v = vec![1, 1, 1];\n    for _ in 3..n {\n        v.push(v[v.len() -\
    \ 3] + v[v.len() - 2] + v[v.len() - 1]);\n    }\n    v", "    let mut v = vec![3,\
    \ 2, 1];\n    for _ in 0..n {\n        let t = v[0] + v[1] + v[2];\n        v.push(t);\n\
    \        v.remove(0);\n    }\n    v", "    let mut v = vec![3, 2, 1];\n    for\
    \ _ in 3..n {\n        v.push(v[v.len() - 1] + v[v.len() - 2] + v[v.len() - 3]);\n\
    \    }\n    v", "    if n == 0 {\n        return vec![];\n    }\n    if n == 1\
    \ {\n        return vec![3];\n    }\n    if n == 2 {\n        return vec![3, 2];\n\
    \    }\n    if n == 3 {\n        return vec![3, 2, 8];\n    }\n    let mut v =\
    \ vec![3, 2, 8];\n    for i in 4..n+1 {\n        let x = v[i-4] + v[i-3] + v[i-2];\n\
    \        v.push(x);\n    }\n    v", "    let mut v = vec![0, 1, 1];\n    for _\
    \ in 3..n {\n        v.push(v[v.len() - 1] + v[v.len() - 2] + v[v.len() - 3]);\n\
    \    }\n    v", "    let mut v = vec![1, 1, 1];\n    for _ in 0..n {\n       \
    \ let x = v[0] + v[1] + v[2];\n        v.remove(0);\n        v.push(x);\n    }\n\
    \    v", "    let mut v = vec![0, 1, 2];\n    for i in 3..n {\n        v.push(v[i\
    \ - 1] + v[i - 2] + v[i - 3]);\n    }\n    v", "    let mut v = vec![1, 1, 1];\n\
    \    for _ in 3..n {\n        v.push(v[v.len() - 3] + v[v.len() - 2] + v[v.len()\
    \ - 1]);\n    }\n    v", "    let mut v = vec![1, 1, 1];\n    for _ in 0..n {\n\
    \        let x = v[0] + v[1] + v[2];\n        v.remove(0);\n        v.push(x);\n\
    \    }\n    v", "    let mut v = vec![1, 2, 3];\n    for _ in 3..n {\n       \
    \ let x = v[v.len() - 1] + v[v.len() - 2] + v[v.len() - 3];\n        v.push(x);\n\
    \    }\n    v", "    let mut v = vec![0, 1, 1];\n    for i in 3..n+1 {\n     \
    \   v.push(v[i-1] + v[i-2] + v[i-3]);\n    }\n    v", "    let mut v = vec![0,\
    \ 1, 2];\n    for i in 3..n {\n        v.push(v[i - 3] + v[i - 2] + v[i - 1]);\n\
    \    }\n    v", "    let mut result = vec![1, 1, 1];\n    for _ in 3..n {\n  \
    \      let sum = result.iter().sum();\n        result.push(sum);\n        result.remove(0);\n\
    \    }\n    result", "    let mut v = vec![1, 1, 1];\n    for _ in 0..n {\n  \
    \      let x = v[0] + v[1] + v[2];\n        v.remove(0);\n        v.push(x);\n\
    \    }\n    v", "    let mut v = vec![3, 2, 1];\n    for _ in 0..n {\n       \
    \ let x = v[0] + v[1] + v[2];\n        v.insert(0, x);\n        v.pop();\n   \
    \ }\n    v", "    let mut v = vec![3, 2, 1];\n    for _ in 0..n {\n        let\
    \ a = v[0];\n        let b = v[1];\n        let c = v[2];\n        v.push(a +\
    \ b + c);\n        v.remove(0);\n    }\n    v", "    let mut v = vec![3, 2, 1];\n\
    \    for _ in 0..n {\n        let len = v.len();\n        v.push(v[len - 3] +\
    \ v[len - 2] + v[len - 1]);\n    }\n    v", "    let mut v = vec![3, 2, 1];\n\
    \    for _ in 0..n {\n        let t = v[0] + v[1] + v[2];\n        v.insert(0,\
    \ t);\n    }\n    v", "    let mut v = vec![3, 2, 1];\n    for _ in 0..n {\n \
    \       let x = v[0] + v[1] + v[2];\n        v.remove(0);\n        v.push(x);\n\
    \    }\n    v", "    let mut v = vec![3, 2, 1];\n    for _ in 0..n {\n       \
    \ let l = v.len();\n        v.push(v[l - 3] + v[l - 2] + v[l - 1]);\n    }\n \
    \   v", "    let mut v = vec![1, 1, 1];\n    for _ in 0..n {\n        let mut\
    \ t = v.pop().unwrap();\n        v.insert(0, t);\n        v[0] = v.iter().sum();\n\
    \    }\n    v", "    let mut v = vec![0, 1, 1];\n    for _ in 3..n {\n       \
    \ v.push(v[v.len() - 1] + v[v.len() - 2] + v[v.len() - 3]);\n    }\n    v", " \
    \   let mut v = vec![3, 2, 1];\n    for _ in 3..n {\n        v.push(v[v.len()\
    \ - 1] + v[v.len() - 2] + v[v.len() - 3]);\n    }\n    v", "    let mut v = vec![3,\
    \ 2, 1];\n    for _ in 3..n {\n        v.push(v[v.len() - 1] + v[v.len() - 2]\
    \ + v[v.len() - 3]);\n    }\n    v", "    let mut v = vec![];\n    for i in 1..n+1\
    \ {\n        v.push(tri_rec(i));\n    }\n    v", "    let mut v = vec![3, 2, 1];\n\
    \    for _ in 0..n {\n        let x = v[0] + v[1] + v[2];\n        v.push(x);\n\
    \        v.remove(0);\n    }\n    v", "    let mut v = vec![3, 2, 1];\n    for\
    \ _ in 0..n {\n        let x = v[0] + v[1] + v[2];\n        v.remove(0);\n   \
    \     v.push(x);\n    }\n    v", "    let mut v = vec![1, 1, 1];\n    for _ in\
    \ 3..n {\n        v.push(v[v.len() - 3] + v[v.len() - 2] + v[v.len() - 1]);\n\
    \    }\n    v", "    let mut v = vec![3, 2, 1];\n    for _ in 0..n {\n       \
    \ let last = v.last().unwrap();\n        let second_last = v.get(v.len() - 2).unwrap();\n\
    \        let third_last = v.get(v.len() - 3).unwrap();\n        v.push(last +\
    \ second_last + third_last);\n    }\n    v", "    let mut v = vec![0; n as usize];\n\
    \    v[0] = 3;\n    v[1] = 2;\n    v[2] = 8;\n    for i in 3..n {\n        v[i\
    \ as usize] = v[(i - 1) as usize] + v[(i - 2) as usize] + v[(i - 3) as usize];\n\
    \    }\n    v", "    let mut v = vec![3, 2, 1];\n    for _ in 0..n {\n       \
    \ let x = v[0] + v[1] + v[2];\n        v.push(x);\n        v.remove(0);\n    }\n\
    \    v", "    let mut v = vec![3, 2, 1];\n    for _ in 3..n {\n        v.push(v[v.len()\
    \ - 1] + v[v.len() - 2] + v[v.len() - 3]);\n    }\n    v", "    let mut v = vec![0,\
    \ 1, 2];\n    for i in 3..n {\n        v.push(v[i - 1] + v[i - 2] + v[i - 3]);\n\
    \    }\n    v", "    let mut v = vec![1, 1, 1];\n    for _ in 3..n {\n       \
    \ v.push(v[v.len() - 3] + v[v.len() - 2] + v[v.len() - 1]);\n    }\n    v", " \
    \   let mut v = vec![0, 0, 1];\n    for _ in 0..n {\n        v.push(v[v.len()\
    \ - 1] + v[v.len() - 2] + v[v.len() - 3]);\n    }\n    v", "    let mut v = vec![3,\
    \ 2, 1];\n    for _ in 0..n {\n        let x = v[0] + v[1] + v[2];\n        v.remove(0);\n\
    \        v.push(x);\n    }\n    v", "    let mut v = vec![0, 1, 1];\n    for i\
    \ in 3..n {\n        v.push(v[i - 1] + v[i - 2] + v[i - 3]);\n    }\n    v", " \
    \   let mut v = vec![1, 1, 1];\n    for _ in 0..n {\n        let x = v[0] + v[1]\
    \ + v[2];\n        v.remove(0);\n        v.push(x);\n    }\n    v", "    let mut\
    \ v = vec![];\n    if n == 0 {\n        return v;\n    }\n    v.push(3);\n   \
    \ if n == 1 {\n        return v;\n    }\n    v.push(2);\n    if n == 2 {\n   \
    \     return v;\n    }\n    v.push(8);\n    for _ in 3..n {\n        let l = v.len();\n\
    \        v.push(v[l - 1] + v[l - 2] + v[l - 3]);\n    }\n    v", "    let mut\
    \ v = vec![3, 2, 1];\n    for _ in 0..n {\n        let x = v[v.len() - 1] + v[v.len()\
    \ - 2] + v[v.len() - 3];\n        v.push(x);\n    }\n    v", "    let mut v =\
    \ vec![3, 2, 1];\n    for _ in 0..n {\n        let x = v[0] + v[1] + v[2];\n \
    \       v.push(x);\n        v.remove(0);\n    }\n    v", "    let mut v = vec![0;\
    \ n as usize];\n    v[0] = 3;\n    v[1] = 2;\n    v[2] = 8;\n    for i in 3..n\
    \ {\n        v[i as usize] = v[(i - 1) as usize] + v[(i - 2) as usize] + v[(i\
    \ - 3) as usize];\n    }\n    v", "    let mut v = vec![1, 1, 1];\n    for _ in\
    \ 0..n {\n        let x = v[0] + v[1] + v[2];\n        v.remove(0);\n        v.push(x);\n\
    \    }\n    v", "    let mut v = vec![1, 1, 1];\n    for _ in 0..n {\n       \
    \ let last = v.len() - 1;\n        v.push(v[last] + v[last - 1] + v[last - 2]);\n\
    \    }\n    v", "    let mut v = vec![3, 2, 1];\n    for _ in 0..n {\n       \
    \ let a = v[0];\n        let b = v[1];\n        let c = v[2];\n        v.push(a\
    \ + b + c);\n        v.remove(0);\n    }\n    v", "    let mut v = vec![3, 2,\
    \ 1];\n    for _ in 0..n {\n        let t = v[0] + v[1] + v[2];\n        v.remove(0);\n\
    \        v.push(t);\n    }\n    v", "    let mut v = vec![0, 1, 2];\n    for i\
    \ in 3..n {\n        v.push(v[i - 1] + v[i - 2] + v[i - 3]);\n    }\n    v", " \
    \   let mut v = vec![1, 2, 3];\n    for _ in 0..n {\n        let x = v[v.len()\
    \ - 1] + v[v.len() - 2] + v[v.len() - 3];\n        v.push(x);\n    }\n    v",
  "    let mut v = vec![0; n as usize];\n    v[0] = 3;\n    v[1] = 2;\n    v[2] =\
    \ 8;\n    for i in 3..n {\n        v[i as usize] = v[(i - 1) as usize] + v[(i\
    \ - 2) as usize] + v[(i - 3) as usize];\n    }\n    v", "    let mut v = vec![3,\
    \ 2, 1];\n    for _ in 0..n {\n        let x = v[v.len() - 1] + v[v.len() - 2]\
    \ + v[v.len() - 3];\n        v.push(x);\n    }\n    v", "    let mut v = vec![3,\
    \ 2, 1];\n    for _ in 3..n {\n        v.push(v[v.len() - 1] + v[v.len() - 2]\
    \ + v[v.len() - 3]);\n    }\n    v", "    let mut v = vec![3, 2, 1];\n    for\
    \ _ in 0..n {\n        let last = v.last().unwrap();\n        let second_last\
    \ = v.get(v.len() - 2).unwrap();\n        let third_last = v.get(v.len() - 3).unwrap();\n\
    \        v.push(last + second_last + third_last);\n    }\n    v", "    let mut\
    \ v = vec![3, 2, 1];\n    for _ in 0..n {\n        let x = v[0] + v[1] + v[2];\n\
    \        v.remove(0);\n        v.push(x);\n    }\n    v", "    let mut v = vec![3,\
    \ 2, 1];\n    for _ in 0..n {\n        let x = v[0] + v[1] + v[2];\n        v.remove(0);\n\
    \        v.push(x);\n    }\n    v", "    let mut v = vec![3, 2, 1];\n    for _\
    \ in 0..n {\n        let last = v.last().unwrap();\n        let second_last =\
    \ v.get(v.len() - 2).unwrap();\n        let third_last = v.get(v.len() - 3).unwrap();\n\
    \        v.push(last + second_last + third_last);\n    }\n    v", "    let mut\
    \ v = vec![0, 1, 1];\n    for i in 3..n {\n        v.push(v[i - 1] + v[i - 2]\
    \ + v[i - 3]);\n    }\n    v", "    let mut v = vec![1, 1, 1];\n    for _ in 3..n\
    \ {\n        v.push(v[v.len() - 3] + v[v.len() - 2] + v[v.len() - 1]);\n    }\n\
    \    v", "    let mut v = vec![3, 2, 1];\n    for _ in 0..n {\n        let last\
    \ = v.last().unwrap();\n        let second_last = v.iter().rev().skip(1).next().unwrap();\n\
    \        let third_last = v.iter().rev().skip(2).next().unwrap();\n        v.push(last\
    \ + second_last + third_last);\n    }\n    v", "    let mut v = vec![1, 1, 1];\n\
    \    if n <= 3 {\n        return v;\n    }\n    for _ in 4..n + 1 {\n        let\
    \ mut t = v[0] + v[1] + v[2];\n        v[0] = v[1];\n        v[1] = v[2];\n  \
    \      v[2] = t;\n    }\n    v"]
stop_tokens:
- "\n}"

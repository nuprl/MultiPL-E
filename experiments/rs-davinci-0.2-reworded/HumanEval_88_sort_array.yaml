name: HumanEval_88_sort_array
language: rs
prompt: "/// Given a vector of non-negative integers, return a cors of the given vector\
  \ after sorting,\n/// you will sort the given vector in ascending order if the sum(\
  \ first index value, last index value) is odd,\n/// or sort it in descending order\
  \ if the sum( first index value, last index value) is even.\n/// Note:\n/// * don't\
  \ change the given vector.\n/// Examples:\n/// >>> sort_array(vec![])\n/// vec![]\n\
  /// >>> sort_array(vec![5])\n/// vec![5]\n/// >>> sort_array(vec![2, 4, 3, 0, 1,\
  \ 5])\n/// vec![0, 1, 2, 3, 4, 5]\n/// >>> sort_array(vec![2, 4, 3, 0, 1, 5, 6])\n\
  /// vec![6, 5, 4, 3, 2, 1, 0]\nfn sort_array(array: Vec<isize>) -> Vec<isize> {\n"
tests: "}\n\nfn main() {\n    let candidate = sort_array;\n    assert_eq!(candidate(Vec::<isize>::new()),\
  \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![5]), vec![5]);\n    assert_eq!(candidate(vec![2,\
  \ 4, 3, 0, 1, 5]), vec![0, 1, 2, 3, 4, 5]);\n    assert_eq!(candidate(vec![2, 4,\
  \ 3, 0, 1, 5, 6]), vec![6, 5, 4, 3, 2, 1, 0]);\n    assert_eq!(candidate(vec![2,\
  \ 1]), vec![1, 2]);\n    assert_eq!(candidate(vec![15, 42, 87, 32, 11, 0]), vec![0,\
  \ 11, 15, 32, 42, 87]);\n    assert_eq!(candidate(vec![21, 14, 23, 11]), vec![23,\
  \ 21, 14, 11]);\n}\n"
completions: ["    let mut array = array;\n    let mut i = 0;\n    let mut j = array.len()\
    \ - 1;\n    while i < j {\n        if array[i] % 2 == 0 && array[j] % 2 == 1 {\n\
    \            array.swap(i, j);\n            i += 1;\n            j -= 1;\n   \
    \     } else if array[i] % 2 == 1 {\n            i += 1;\n        } else if array[j]\
    \ % 2 == 0 {\n            j -= 1;\n        } else {\n            i += 1;\n   \
    \         j -= 1;\n        }\n    }\n    if array.len() % 2 == 1 {\n        array[i..].sort();\n\
    \    } else {\n        array[i..].sort_by(|a, b| b.cmp(a));\n    }\n    array",
  "    let mut array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n\
    \    while i < j {\n        if array[i] % 2 == 0 && array[j] % 2 == 1 {\n    \
    \        array.swap(i, j);\n            i += 1;\n            j -= 1;\n       \
    \ } else if array[i] % 2 == 1 {\n            i += 1;\n        } else if array[j]\
    \ % 2 == 0 {\n            j -= 1;\n        } else {\n            i += 1;\n   \
    \         j -= 1;\n        }\n    }\n    if array.len() % 2 == 1 {\n        array[i..].sort();\n\
    \    } else {\n        array[i..].sort_by(|a, b| b.cmp(a));\n    }\n    array",
  "    let mut array = array;\n    if array.len() > 1 {\n        let mut i = 0;\n\
    \        let mut j = array.len() - 1;\n        while i < j {\n            if array[i]\
    \ % 2 == 1 && array[j] % 2 == 0 {\n                array.swap(i, j);\n       \
    \         i += 1;\n                j -= 1;\n            } else if array[i] % 2\
    \ == 0 {\n                j -= 1;\n            } else {\n                i +=\
    \ 1;\n            }\n        }\n        if array[i] % 2 == 0 {\n            array[i..].sort();\n\
    \            array[..i].sort_by(|a, b| b.cmp(a));\n        } else {\n        \
    \    array[..i].sort();\n            array[i..].sort_by(|a, b| b.cmp(a));\n  \
    \      }\n    }\n    array", "    if array.len() == 0 {\n        return array;\n\
    \    }\n    let mut array = array;\n    let mut i = 0;\n    let mut j = array.len()\
    \ - 1;\n    while i < j {\n        if array[i] % 2 == 0 && array[j] % 2 == 1 {\n\
    \            array.swap(i, j);\n            i += 1;\n            j -= 1;\n   \
    \     } else if array[i] % 2 == 1 {\n            i += 1;\n        } else if array[j]\
    \ % 2 == 0 {\n            j -= 1;\n        }\n    }\n    if array.len() % 2 ==\
    \ 0 {\n        array[i..].sort();\n        array[..i].sort_by(|a, b| b.cmp(a));\n\
    \    } else {\n        array[i..].sort_by(|a, b| b.cmp(a));\n        array[..i].sort();\n\
    \    }\n    array", "    let mut array = array;\n    if array.len() > 1 {\n  \
    \      let (first, last) = (array[0], array[array.len() - 1]);\n        if (first\
    \ + last) % 2 == 0 {\n            array.sort_by(|a, b| b.cmp(a));\n        } else\
    \ {\n            array.sort_by(|a, b| a.cmp(b));\n        }\n    }\n    array",
  "    let mut array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n\
    \    while i < j {\n        if (array[i] + array[j]) % 2 == 0 {\n            array.swap(i,\
    \ j);\n        }\n        i += 1;\n        j -= 1;\n    }\n    array", "    let\
    \ mut array = array;\n    if array.len() > 1 {\n        let (mut left, mut right)\
    \ = array.split_at_mut(array.len() / 2);\n        left = sort_array(left.to_vec()).as_mut_slice();\n\
    \        right = sort_array(right.to_vec()).as_mut_slice();\n        let mut i\
    \ = 0;\n        let mut j = 0;\n        while i < left.len() && j < right.len()\
    \ {\n            if left[i] < right[j] {\n                array[i + j] = left[i];\n\
    \                i += 1;\n            } else {\n                array[i + j] =\
    \ right[j];\n                j += 1;\n            }\n        }\n        while\
    \ i < left.len() {\n            array[i + j] = left[i];\n            i += 1;\n\
    \        }\n        while j < right.len() {\n            array[i + j] = right[j];\n\
    \            j += 1;\n        }\n    }\n    if array.len() % 2 == 0 {\n      \
    \  array.reverse();\n    }\n    array", "    let mut array = array;\n    let mut\
    \ i = 0;\n    let mut j = array.len() - 1;\n    while i < j {\n        if array[i]\
    \ % 2 == 0 && array[j] % 2 == 1 {\n            array.swap(i, j);\n           \
    \ i += 1;\n            j -= 1;\n        } else if array[i] % 2 == 1 {\n      \
    \      i += 1;\n        } else if array[j] % 2 == 0 {\n            j -= 1;\n \
    \       } else {\n            i += 1;\n            j -= 1;\n        }\n    }\n\
    \    if array.len() % 2 == 1 {\n        array[i..].sort();\n    } else {\n   \
    \     array[i..].sort_by(|a, b| b.cmp(a));\n    }\n    array", "    let mut array\
    \ = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n    while i\
    \ < j {\n        if array[i] % 2 == 0 && array[j] % 2 == 1 {\n            array.swap(i,\
    \ j);\n            i += 1;\n            j -= 1;\n        } else if array[i] %\
    \ 2 == 1 {\n            i += 1;\n        } else if array[j] % 2 == 0 {\n     \
    \       j -= 1;\n        } else {\n            i += 1;\n            j -= 1;\n\
    \        }\n    }\n    if array.len() % 2 == 1 {\n        array[i..].sort();\n\
    \    } else {\n        array[i..].sort_by(|a, b| b.cmp(a));\n    }\n    array",
  "    let mut array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n\
    \    while i < j {\n        if array[i] % 2 == 0 && array[j] % 2 == 1 {\n    \
    \        array.swap(i, j);\n            i += 1;\n            j -= 1;\n       \
    \ } else if array[i] % 2 == 1 {\n            i += 1;\n        } else if array[j]\
    \ % 2 == 0 {\n            j -= 1;\n        } else {\n            i += 1;\n   \
    \         j -= 1;\n        }\n    }\n    if i == j && array[i] % 2 == 0 {\n  \
    \      array.swap(i, i + 1);\n    }\n    array", "    let mut array = array;\n\
    \    let mut i = 0;\n    let mut j = array.len() - 1;\n    while i < j {\n   \
    \     if (array[i] + array[j]) % 2 == 0 {\n            array.swap(i, j);\n   \
    \     }\n        i += 1;\n        j -= 1;\n    }\n    array", "    let mut array\
    \ = array;\n    if array.len() > 1 {\n        let (first, last) = (array[0], array[array.len()\
    \ - 1]);\n        let (mut left, mut right) = (0, array.len() - 1);\n        while\
    \ left < right {\n            while array[left] < first {\n                left\
    \ += 1;\n            }\n            while array[right] > last {\n            \
    \    right -= 1;\n            }\n            if left < right {\n             \
    \   array.swap(left, right);\n            }\n        }\n        array.swap(0,\
    \ right);\n        array.swap(array.len() - 1, right + 1);\n        if (first\
    \ + last) % 2 == 0 {\n            array.reverse();\n        }\n    }\n    array",
  "    let mut array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n\
    \    while i < j {\n        if array[i] % 2 == 0 && array[j] % 2 == 1 {\n    \
    \        array.swap(i, j);\n            i += 1;\n            j -= 1;\n       \
    \ } else if array[i] % 2 == 1 {\n            i += 1;\n        } else if array[j]\
    \ % 2 == 0 {\n            j -= 1;\n        } else {\n            i += 1;\n   \
    \         j -= 1;\n        }\n    }\n    if array.len() % 2 == 1 {\n        array[i..].sort();\n\
    \    } else {\n        array[i..].sort_by(|a, b| b.cmp(a));\n    }\n    array",
  "    let mut array = array;\n    if array.len() > 1 {\n        let (first, last)\
    \ = (array[0], array[array.len() - 1]);\n        let sum = first + last;\n   \
    \     if sum % 2 == 0 {\n            array.sort_by(|a, b| b.cmp(a));\n       \
    \ } else {\n            array.sort_by(|a, b| a.cmp(b));\n        }\n    }\n  \
    \  array", "    let mut array = array;\n    let mut i = 0;\n    let mut j = array.len()\
    \ - 1;\n    while i < j {\n        if array[i] % 2 == 0 && array[j] % 2 == 1 {\n\
    \            array.swap(i, j);\n            i += 1;\n            j -= 1;\n   \
    \     } else if array[i] % 2 == 1 {\n            i += 1;\n        } else if array[j]\
    \ % 2 == 0 {\n            j -= 1;\n        } else {\n            i += 1;\n   \
    \         j -= 1;\n        }\n    }\n    if array.len() % 2 == 1 {\n        array[i..].sort();\n\
    \    } else {\n        array[i..].sort_by(|a, b| b.cmp(a));\n    }\n    array",
  "    let mut array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n\
    \    while i < j {\n        if array[i] % 2 == 0 && array[j] % 2 == 1 {\n    \
    \        array.swap(i, j);\n            i += 1;\n            j -= 1;\n       \
    \ } else if array[i] % 2 == 1 {\n            i += 1;\n        } else if array[j]\
    \ % 2 == 0 {\n            j -= 1;\n        } else {\n            i += 1;\n   \
    \         j -= 1;\n        }\n    }\n    if array.len() % 2 == 1 {\n        array[i..].sort();\n\
    \    } else {\n        array[i..].sort_by(|a, b| b.cmp(a));\n    }\n    array",
  "    let mut array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n\
    \    while i < j {\n        if array[i] % 2 == 0 && array[j] % 2 == 1 {\n    \
    \        array.swap(i, j);\n            i += 1;\n            j -= 1;\n       \
    \ } else if array[i] % 2 == 1 {\n            i += 1;\n        } else if array[j]\
    \ % 2 == 0 {\n            j -= 1;\n        } else {\n            i += 1;\n   \
    \         j -= 1;\n        }\n    }\n    if array.len() % 2 == 1 {\n        array[i..].sort();\n\
    \    } else {\n        array[i..].sort_by(|a, b| b.cmp(a));\n    }\n    array",
  "    let mut array = array;\n    if array.len() > 1 {\n        let (left, right)\
    \ = array.split_at_mut(array.len() / 2);\n        let left = sort_array(left.to_vec());\n\
    \        let right = sort_array(right.to_vec());\n        array = merge(left,\
    \ right);\n    }\n    array", "    let mut array = array;\n    if array.len()\
    \ > 1 {\n        let (mut left, mut right) = array.split_at_mut(array.len() /\
    \ 2);\n        left = sort_array(left.to_vec()).as_mut_slice();\n        right\
    \ = sort_array(right.to_vec()).as_mut_slice();\n        let mut i = 0;\n     \
    \   let mut j = 0;\n        let mut k = 0;\n        while i < left.len() && j\
    \ < right.len() {\n            if (left[i] + right[j]) % 2 == 0 {\n          \
    \      array[k] = left[i];\n                i += 1;\n            } else {\n  \
    \              array[k] = right[j];\n                j += 1;\n            }\n\
    \            k += 1;\n        }\n        while i < left.len() {\n            array[k]\
    \ = left[i];\n            i += 1;\n            k += 1;\n        }\n        while\
    \ j < right.len() {\n            array[k] = right[j];\n            j += 1;\n \
    \           k += 1;\n        }\n    }\n    array", "    let mut array = array;\n\
    \    if array.len() > 1 {\n        let (first, last) = (array[0], array[array.len()\
    \ - 1]);\n        let (mut left, mut right) = (0, array.len() - 1);\n        while\
    \ left < right {\n            if (first + last) % 2 == 0 {\n                if\
    \ array[left] < array[right] {\n                    array.swap(left, right);\n\
    \                }\n            } else {\n                if array[left] > array[right]\
    \ {\n                    array.swap(left, right);\n                }\n       \
    \     }\n            left += 1;\n            right -= 1;\n        }\n    }\n \
    \   array", "    let mut array = array;\n    let mut i = 0;\n    let mut j = array.len()\
    \ - 1;\n    while i < j {\n        if array[i] % 2 == 0 && array[j] % 2 == 1 {\n\
    \            array.swap(i, j);\n            i += 1;\n            j -= 1;\n   \
    \     } else if array[i] % 2 == 1 {\n            i += 1;\n        } else if array[j]\
    \ % 2 == 0 {\n            j -= 1;\n        } else {\n            i += 1;\n   \
    \         j -= 1;\n        }\n    }\n    if array.len() % 2 == 1 {\n        array[i..].sort();\n\
    \    } else {\n        array[i..].sort_by(|a, b| b.cmp(a));\n    }\n    array",
  "    let mut array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n\
    \    while i < j {\n        if (array[i] + array[j]) % 2 == 0 {\n            array.swap(i,\
    \ j);\n        }\n        i += 1;\n        j -= 1;\n    }\n    array", "    let\
    \ mut array = array;\n    let mut index = 0;\n    let mut index_end = array.len()\
    \ - 1;\n    let mut is_odd = false;\n    if array.len() > 1 {\n        if array[0]\
    \ + array[index_end] % 2 == 1 {\n            is_odd = true;\n        }\n     \
    \   while index < index_end {\n            if is_odd {\n                if array[index]\
    \ > array[index_end] {\n                    array.swap(index, index_end);\n  \
    \              }\n            } else {\n                if array[index] < array[index_end]\
    \ {\n                    array.swap(index, index_end);\n                }\n  \
    \          }\n            index += 1;\n            index_end -= 1;\n        }\n\
    \    }\n    array", "    let mut array = array;\n    let mut i = 0;\n    let mut\
    \ j = array.len() - 1;\n    while i < j {\n        if array[i] % 2 == 0 && array[j]\
    \ % 2 == 1 {\n            array.swap(i, j);\n            i += 1;\n           \
    \ j -= 1;\n        } else if array[i] % 2 == 1 {\n            i += 1;\n      \
    \  } else if array[j] % 2 == 0 {\n            j -= 1;\n        } else {\n    \
    \        i += 1;\n            j -= 1;\n        }\n    }\n    if array.len() %\
    \ 2 == 1 {\n        array[i..].sort();\n    } else {\n        array[i..].sort_by(|a,\
    \ b| b.cmp(a));\n    }\n    array", "    let mut array = array;\n    if array.len()\
    \ > 1 {\n        let mut i = 0;\n        let mut j = array.len() - 1;\n      \
    \  while i < j {\n            if (array[i] + array[j]) % 2 == 0 {\n          \
    \      array.swap(i, j);\n            }\n            i += 1;\n            j -=\
    \ 1;\n        }\n        array.sort();\n    }\n    array", "    let mut array\
    \ = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n    while i\
    \ < j {\n        if array[i] % 2 == 0 && array[j] % 2 == 1 {\n            array.swap(i,\
    \ j);\n            i += 1;\n            j -= 1;\n        } else if array[i] %\
    \ 2 == 1 {\n            i += 1;\n        } else if array[j] % 2 == 0 {\n     \
    \       j -= 1;\n        } else {\n            i += 1;\n            j -= 1;\n\
    \        }\n    }\n    if array.len() % 2 == 1 {\n        array[i..].sort();\n\
    \    } else {\n        array[i..].sort_by(|a, b| b.cmp(a));\n    }\n    array",
  "    let mut array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n\
    \    while i < j {\n        if array[i] % 2 == 0 && array[j] % 2 == 1 {\n    \
    \        array.swap(i, j);\n            i += 1;\n            j -= 1;\n       \
    \ } else if array[i] % 2 == 1 {\n            i += 1;\n        } else if array[j]\
    \ % 2 == 0 {\n            j -= 1;\n        } else {\n            i += 1;\n   \
    \         j -= 1;\n        }\n    }\n    if i == j && array[i] % 2 == 0 {\n  \
    \      array.swap(i, j);\n    }\n    array", "    let mut array = array;\n   \
    \ let mut i = 0;\n    let mut j = array.len() - 1;\n    while i < j {\n      \
    \  if array[i] % 2 == 0 && array[j] % 2 == 1 {\n            array.swap(i, j);\n\
    \            i += 1;\n            j -= 1;\n        } else if array[i] % 2 == 1\
    \ {\n            i += 1;\n        } else if array[j] % 2 == 0 {\n            j\
    \ -= 1;\n        } else {\n            i += 1;\n            j -= 1;\n        }\n\
    \    }\n    if array.len() % 2 == 1 {\n        array[i..].sort();\n    } else\
    \ {\n        array[i..].sort_by(|a, b| b.cmp(a));\n    }\n    array", "    let\
    \ mut array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n \
    \   while i < j {\n        if array[i] % 2 == 0 && array[j] % 2 == 1 {\n     \
    \       array.swap(i, j);\n            i += 1;\n            j -= 1;\n        }\
    \ else if array[i] % 2 == 1 {\n            i += 1;\n        } else if array[j]\
    \ % 2 == 0 {\n            j -= 1;\n        }\n    }\n    if array.len() % 2 ==\
    \ 0 {\n        array.sort();\n    } else {\n        array.sort_by(|a, b| b.cmp(a));\n\
    \    }\n    array", "    let mut array = array;\n    let mut i = 0;\n    let mut\
    \ j = array.len() - 1;\n    while i < j {\n        if array[i] % 2 == 0 && array[j]\
    \ % 2 == 1 {\n            array.swap(i, j);\n            i += 1;\n           \
    \ j -= 1;\n        } else if array[i] % 2 == 1 {\n            i += 1;\n      \
    \  } else if array[j] % 2 == 0 {\n            j -= 1;\n        } else {\n    \
    \        i += 1;\n            j -= 1;\n        }\n    }\n    if array.len() %\
    \ 2 == 1 {\n        array[i..].sort();\n    } else {\n        array[i..].sort_by(|a,\
    \ b| b.cmp(a));\n    }\n    array", "    let mut array = array;\n    let len =\
    \ array.len();\n    if len == 0 {\n        return array;\n    }\n    let mut i\
    \ = 0;\n    let mut j = len - 1;\n    while i < j {\n        if array[i] % 2 ==\
    \ 0 && array[j] % 2 == 1 {\n            array.swap(i, j);\n            i += 1;\n\
    \            j -= 1;\n        } else if array[i] % 2 == 1 {\n            i +=\
    \ 1;\n        } else if array[j] % 2 == 0 {\n            j -= 1;\n        }\n\
    \    }\n    if len % 2 == 0 {\n        array[..i].sort();\n        array[i..].sort_by(|a,\
    \ b| b.cmp(a));\n    } else {\n        array[..i].sort_by(|a, b| b.cmp(a));\n\
    \        array[i..].sort();\n    }\n    array", "    let mut array = array;\n\
    \    if array.len() > 1 {\n        let mut left = 0;\n        let mut right =\
    \ array.len() - 1;\n        while left < right {\n            if (array[left]\
    \ + array[right]) % 2 == 0 {\n                array.swap(left, right);\n     \
    \       }\n            left += 1;\n            right -= 1;\n        }\n      \
    \  array.sort();\n    }\n    array", "    let mut array = array;\n    let len\
    \ = array.len();\n    if len == 0 {\n        return array;\n    }\n    let mut\
    \ i = 0;\n    let mut j = len - 1;\n    while i < j {\n        if (array[i] +\
    \ array[j]) % 2 == 0 {\n            array.swap(i, j);\n        }\n        i +=\
    \ 1;\n        j -= 1;\n    }\n    array", "    let mut array = array;\n    let\
    \ len = array.len();\n    if len == 0 {\n        return array;\n    }\n    if\
    \ len == 1 {\n        return array;\n    }\n    let mut left = 0;\n    let mut\
    \ right = len - 1;\n    while left < right {\n        if (array[left] + array[right])\
    \ % 2 == 0 {\n            array.swap(left, right);\n        }\n        left +=\
    \ 1;\n        right -= 1;\n    }\n    array.sort();\n    array", "    let mut\
    \ array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n    while\
    \ i < j {\n        if array[i] % 2 == 0 && array[j] % 2 == 1 {\n            array.swap(i,\
    \ j);\n            i += 1;\n            j -= 1;\n        } else if array[i] %\
    \ 2 == 1 {\n            i += 1;\n        } else if array[j] % 2 == 0 {\n     \
    \       j -= 1;\n        } else {\n            i += 1;\n            j -= 1;\n\
    \        }\n    }\n    if array.len() % 2 == 1 {\n        array[i..].sort_by(|a,\
    \ b| b.cmp(a));\n    } else {\n        array[i..].sort();\n    }\n    array",
  "    let mut array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n\
    \    while i < j {\n        if array[i] % 2 == 0 && array[j] % 2 == 1 {\n    \
    \        array.swap(i, j);\n            i += 1;\n            j -= 1;\n       \
    \ } else if array[i] % 2 == 1 {\n            i += 1;\n        } else if array[j]\
    \ % 2 == 0 {\n            j -= 1;\n        } else {\n            i += 1;\n   \
    \         j -= 1;\n        }\n    }\n    if array.len() % 2 == 1 {\n        array[i..].sort();\n\
    \    } else {\n        array[i..].sort_by(|a, b| b.cmp(a));\n    }\n    array",
  "    let mut array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n\
    \    while i < j {\n        if array[i] % 2 == 0 && array[j] % 2 == 1 {\n    \
    \        array.swap(i, j);\n            i += 1;\n            j -= 1;\n       \
    \ } else if array[i] % 2 == 1 {\n            i += 1;\n        } else if array[j]\
    \ % 2 == 0 {\n            j -= 1;\n        } else {\n            i += 1;\n   \
    \         j -= 1;\n        }\n    }\n    if i == j && array[i] % 2 == 0 {\n  \
    \      array.reverse();\n    }\n    array", "    let mut array = array;\n    let\
    \ mut i = 0;\n    let mut j = array.len() - 1;\n    while i < j {\n        if\
    \ array[i] % 2 == 0 && array[j] % 2 == 1 {\n            array.swap(i, j);\n  \
    \          i += 1;\n            j -= 1;\n        } else if array[i] % 2 == 1 {\n\
    \            i += 1;\n        } else if array[j] % 2 == 0 {\n            j -=\
    \ 1;\n        } else {\n            i += 1;\n            j -= 1;\n        }\n\
    \    }\n    if array.len() % 2 == 1 {\n        array[i..].sort();\n    } else\
    \ {\n        array[i..].sort_by(|a, b| b.cmp(a));\n    }\n    array", "    let\
    \ mut array = array;\n    if array.len() > 1 {\n        let (first, last) = (array[0],\
    \ array[array.len() - 1]);\n        let (mut left, mut right) = (1, array.len()\
    \ - 2);\n        while left <= right {\n            while left <= right && array[left]\
    \ < first {\n                left += 1;\n            }\n            while left\
    \ <= right && array[right] > last {\n                right -= 1;\n           \
    \ }\n            if left <= right {\n                array.swap(left, right);\n\
    \                left += 1;\n                right -= 1;\n            }\n    \
    \    }\n        array.swap(0, right);\n        array.swap(array.len() - 1, left);\n\
    \        if (first + last) % 2 == 0 {\n            array[0..right + 1].sort();\n\
    \            array[left..array.len()].sort();\n        } else {\n            array[0..right\
    \ + 1].sort_by(|a, b| b.cmp(a));\n            array[left..array.len()].sort_by(|a,\
    \ b| b.cmp(a));\n        }\n    }\n    array", "    let mut array = array;\n \
    \   if array.len() > 1 {\n        let mut i = 0;\n        let mut j = array.len()\
    \ - 1;\n        while i < j {\n            if array[i] % 2 == 0 && array[j] %\
    \ 2 == 1 {\n                array.swap(i, j);\n                i += 1;\n     \
    \           j -= 1;\n            } else if array[i] % 2 == 1 {\n             \
    \   i += 1;\n            } else if array[j] % 2 == 0 {\n                j -= 1;\n\
    \            } else {\n                i += 1;\n                j -= 1;\n    \
    \        }\n        }\n        if i == j && array[i] % 2 == 0 {\n            array.swap(i,\
    \ i + 1);\n        }\n        if array[0] % 2 == 0 {\n            array.sort_by(|a,\
    \ b| b.cmp(a));\n        } else {\n            array.sort();\n        }\n    }\n\
    \    array", "    let mut array = array;\n    let mut i = 0;\n    let mut j =\
    \ array.len() - 1;\n    while i < j {\n        if array[i] % 2 == 0 && array[j]\
    \ % 2 == 1 {\n            array.swap(i, j);\n            i += 1;\n           \
    \ j -= 1;\n        } else if array[i] % 2 == 1 {\n            i += 1;\n      \
    \  } else if array[j] % 2 == 0 {\n            j -= 1;\n        } else {\n    \
    \        i += 1;\n            j -= 1;\n        }\n    }\n    if array.len() %\
    \ 2 == 1 {\n        array[i..].sort();\n    } else {\n        array[i..].sort_by(|a,\
    \ b| b.cmp(a));\n    }\n    array", "    let mut array = array;\n    let mut i\
    \ = 0;\n    let mut j = array.len() - 1;\n    while i < j {\n        if array[i]\
    \ % 2 == 0 && array[j] % 2 == 1 {\n            array.swap(i, j);\n           \
    \ i += 1;\n            j -= 1;\n        } else if array[i] % 2 == 1 {\n      \
    \      i += 1;\n        } else if array[j] % 2 == 0 {\n            j -= 1;\n \
    \       } else {\n            i += 1;\n            j -= 1;\n        }\n    }\n\
    \    if array.len() % 2 == 1 {\n        array[i..].sort();\n    } else {\n   \
    \     array[i..].sort_by(|a, b| b.cmp(a));\n    }\n    array", "    let mut array\
    \ = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n    while i\
    \ < j {\n        if array[i] % 2 == 0 && array[j] % 2 == 1 {\n            array.swap(i,\
    \ j);\n            i += 1;\n            j -= 1;\n        } else if array[i] %\
    \ 2 == 1 {\n            i += 1;\n        } else if array[j] % 2 == 0 {\n     \
    \       j -= 1;\n        } else {\n            i += 1;\n            j -= 1;\n\
    \        }\n    }\n    if array.len() % 2 == 1 {\n        array[i..].sort();\n\
    \    } else {\n        array[i..].sort_by(|a, b| b.cmp(a));\n    }\n    array",
  "    let mut array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n\
    \    while i < j {\n        if array[i] % 2 == 0 && array[j] % 2 == 1 {\n    \
    \        array.swap(i, j);\n            i += 1;\n            j -= 1;\n       \
    \ } else if array[i] % 2 == 1 {\n            i += 1;\n        } else if array[j]\
    \ % 2 == 0 {\n            j -= 1;\n        }\n    }\n    if array.len() % 2 ==\
    \ 1 {\n        array[i..].sort_by(|a, b| b.cmp(a));\n    } else {\n        array[i..].sort();\n\
    \    }\n    array", "    let mut array = array;\n    if array.len() < 2 {\n  \
    \      return array;\n    }\n    let (mut i, mut j) = (0, array.len() - 1);\n\
    \    while i < j {\n        if (array[i] + array[j]) % 2 == 0 {\n            array.swap(i,\
    \ j);\n        }\n        i += 1;\n        j -= 1;\n    }\n    array.sort();\n\
    \    array", "    let mut array = array;\n    if array.len() > 1 {\n        let\
    \ (first, last) = (array[0], array[array.len() - 1]);\n        if (first + last)\
    \ % 2 == 0 {\n            array.sort_by(|a, b| b.cmp(a));\n        } else {\n\
    \            array.sort_by(|a, b| a.cmp(b));\n        }\n    }\n    array", " \
    \   let mut array = array;\n    let len = array.len();\n    if len == 0 {\n  \
    \      return vec![];\n    }\n    if len == 1 {\n        return array;\n    }\n\
    \    let mut i = 0;\n    let mut j = len - 1;\n    while i < j {\n        if array[i]\
    \ % 2 == 0 && array[j] % 2 == 1 {\n            array.swap(i, j);\n           \
    \ i += 1;\n            j -= 1;\n        } else if array[i] % 2 == 1 && array[j]\
    \ % 2 == 1 {\n            i += 1;\n        } else if array[i] % 2 == 0 && array[j]\
    \ % 2 == 0 {\n            j -= 1;\n        } else {\n            i += 1;\n   \
    \         j -= 1;\n        }\n    }\n    let mut i = 0;\n    let mut j = len -\
    \ 1;\n    if (array[i] + array[j]) % 2 == 0 {\n        while i < j {\n       \
    \     if array[i] > array[j] {\n                array.swap(i, j);\n          \
    \  }\n            i += 1;\n            j -= 1;\n        }\n    } else {\n    \
    \    while i < j {\n            if array[i] < array[j] {\n                array.swap(i,\
    \ j);\n            }\n            i += 1;\n            j -= 1;\n        }\n  \
    \  }\n    array", "    let mut array = array;\n    let mut sorted = false;\n \
    \   while !sorted {\n        sorted = true;\n        for i in 0..array.len() -\
    \ 1 {\n            if array[i] > array[i + 1] {\n                array.swap(i,\
    \ i + 1);\n                sorted = false;\n            }\n        }\n    }\n\
    \    if array.len() > 0 && (array[0] + array[array.len() - 1]) % 2 == 0 {\n  \
    \      array.reverse();\n    }\n    array", "    let mut array = array;\n    let\
    \ mut i = 0;\n    let mut j = array.len() - 1;\n    while i < j {\n        if\
    \ array[i] % 2 == 0 && array[j] % 2 == 1 {\n            array.swap(i, j);\n  \
    \          i += 1;\n            j -= 1;\n        } else if array[i] % 2 == 1 {\n\
    \            i += 1;\n        } else if array[j] % 2 == 0 {\n            j -=\
    \ 1;\n        } else {\n            i += 1;\n            j -= 1;\n        }\n\
    \    }\n    if array.len() % 2 == 1 {\n        array[i..].sort();\n    } else\
    \ {\n        array[i..].sort_by(|a, b| b.cmp(a));\n    }\n    array", "    let\
    \ mut array = array;\n    if array.len() > 1 {\n        let sum = array[0] + array[array.len()\
    \ - 1];\n        if sum % 2 == 0 {\n            array.sort_by(|a, b| b.cmp(a));\n\
    \        } else {\n            array.sort_by(|a, b| a.cmp(b));\n        }\n  \
    \  }\n    array", "    let mut array = array;\n    if array.len() > 1 {\n    \
    \    let (first, last) = (array[0], array[array.len() - 1]);\n        let (mut\
    \ left, mut right) = (0, array.len() - 1);\n        while left < right {\n   \
    \         if (first + last) % 2 == 0 {\n                if array[left] < array[right]\
    \ {\n                    array.swap(left, right);\n                }\n       \
    \     } else {\n                if array[left] > array[right] {\n            \
    \        array.swap(left, right);\n                }\n            }\n        \
    \    left += 1;\n            right -= 1;\n        }\n    }\n    array", "    let\
    \ mut array = array;\n    if array.len() > 1 {\n        let (first, last) = (array[0],\
    \ array[array.len() - 1]);\n        let (mut left, mut right) = (0, array.len()\
    \ - 1);\n        while left < right {\n            if (first + last) % 2 == 0\
    \ {\n                if array[left] > array[right] {\n                    array.swap(left,\
    \ right);\n                }\n            } else {\n                if array[left]\
    \ < array[right] {\n                    array.swap(left, right);\n           \
    \     }\n            }\n            left += 1;\n            right -= 1;\n    \
    \    }\n    }\n    array", "    let mut array = array;\n    let mut i = 0;\n \
    \   let mut j = array.len() - 1;\n    let mut sorted = false;\n    while !sorted\
    \ {\n        sorted = true;\n        while i < j {\n            if array[i] >\
    \ array[i + 1] {\n                array.swap(i, i + 1);\n                sorted\
    \ = false;\n            }\n            i += 1;\n        }\n        while j > i\
    \ {\n            if array[j] < array[j - 1] {\n                array.swap(j, j\
    \ - 1);\n                sorted = false;\n            }\n            j -= 1;\n\
    \        }\n    }\n    if array.len() % 2 == 0 {\n        array.reverse();\n \
    \   }\n    array", "    let mut array = array;\n    let sum = array.first().unwrap()\
    \ + array.last().unwrap();\n    if sum % 2 == 0 {\n        array.sort_by(|a, b|\
    \ b.cmp(a));\n    } else {\n        array.sort_by(|a, b| a.cmp(b));\n    }\n \
    \   array", "    let mut array = array;\n    let mut i = 0;\n    let mut j = array.len()\
    \ - 1;\n    while i < j {\n        if array[i] % 2 == 0 && array[j] % 2 == 1 {\n\
    \            array.swap(i, j);\n            i += 1;\n            j -= 1;\n   \
    \     } else if array[i] % 2 == 1 {\n            i += 1;\n        } else if array[j]\
    \ % 2 == 0 {\n            j -= 1;\n        } else {\n            i += 1;\n   \
    \         j -= 1;\n        }\n    }\n    if array.len() % 2 == 1 {\n        array[i..].sort();\n\
    \    } else {\n        array[i..].sort_by(|a, b| b.cmp(a));\n    }\n    array",
  "    let mut array = array;\n    if array.len() > 1 {\n        let (first, last)\
    \ = (array[0], array[array.len() - 1]);\n        let sum = first + last;\n   \
    \     if sum % 2 == 0 {\n            array.sort_by(|a, b| b.cmp(a));\n       \
    \ } else {\n            array.sort_by(|a, b| a.cmp(b));\n        }\n    }\n  \
    \  array", "    let mut array = array;\n    if array.len() > 1 {\n        let\
    \ (mut left, mut right) = array.split_at_mut(array.len() / 2);\n        left =\
    \ sort_array(left.to_vec()).as_mut_slice();\n        right = sort_array(right.to_vec()).as_mut_slice();\n\
    \        let (mut i, mut j) = (0, 0);\n        while i < left.len() && j < right.len()\
    \ {\n            if left[i] > right[j] {\n                array.push(left[i]);\n\
    \                i += 1;\n            } else {\n                array.push(right[j]);\n\
    \                j += 1;\n            }\n        }\n        while i < left.len()\
    \ {\n            array.push(left[i]);\n            i += 1;\n        }\n      \
    \  while j < right.len() {\n            array.push(right[j]);\n            j +=\
    \ 1;\n        }\n    }\n    if array.len() > 1 && array[0] + array[array.len()\
    \ - 1] % 2 == 0 {\n        array.reverse();\n    }\n    array", "    let mut array\
    \ = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n    while i\
    \ < j {\n        if array[i] % 2 == 0 && array[j] % 2 == 1 {\n            array.swap(i,\
    \ j);\n            i += 1;\n            j -= 1;\n        } else if array[i] %\
    \ 2 == 1 {\n            i += 1;\n        } else if array[j] % 2 == 0 {\n     \
    \       j -= 1;\n        } else {\n            i += 1;\n            j -= 1;\n\
    \        }\n    }\n    if i == j && array[i] % 2 == 0 {\n        array.swap(i,\
    \ j);\n    }\n    if array.len() % 2 == 0 {\n        array.sort();\n    } else\
    \ {\n        array.sort_by(|a, b| b.cmp(a));\n    }\n    array", "    let mut\
    \ array = array;\n    let len = array.len();\n    if len == 0 {\n        return\
    \ array;\n    }\n    let mut i = 0;\n    let mut j = len - 1;\n    while i < j\
    \ {\n        if (array[i] + array[j]) % 2 == 0 {\n            array.swap(i, j);\n\
    \        }\n        i += 1;\n        j -= 1;\n    }\n    array", "    let mut\
    \ array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n    while\
    \ i < j {\n        if array[i] % 2 == 0 && array[j] % 2 == 1 {\n            array.swap(i,\
    \ j);\n            i += 1;\n            j -= 1;\n        } else if array[i] %\
    \ 2 == 1 {\n            i += 1;\n        } else if array[j] % 2 == 0 {\n     \
    \       j -= 1;\n        } else {\n            i += 1;\n            j -= 1;\n\
    \        }\n    }\n    if array.len() % 2 == 1 {\n        array[i..].sort();\n\
    \    } else {\n        array[i..].sort_by(|a, b| b.cmp(a));\n    }\n    array",
  "    let mut array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n\
    \    while i < j {\n        if array[i] % 2 == 0 && array[j] % 2 == 1 {\n    \
    \        array.swap(i, j);\n            i += 1;\n            j -= 1;\n       \
    \ } else if array[i] % 2 == 1 {\n            i += 1;\n        } else if array[j]\
    \ % 2 == 0 {\n            j -= 1;\n        } else {\n            i += 1;\n   \
    \         j -= 1;\n        }\n    }\n    if array.len() % 2 == 1 {\n        array[i..].sort();\n\
    \    } else {\n        array[i..].sort_by(|a, b| b.cmp(a));\n    }\n    array",
  "    let mut array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n\
    \    while i < j {\n        if array[i] % 2 == 0 && array[j] % 2 == 1 {\n    \
    \        array.swap(i, j);\n            i += 1;\n            j -= 1;\n       \
    \ } else if array[i] % 2 == 1 {\n            i += 1;\n        } else if array[j]\
    \ % 2 == 0 {\n            j -= 1;\n        } else {\n            i += 1;\n   \
    \         j -= 1;\n        }\n    }\n    if array.len() % 2 == 1 {\n        array[i..].sort();\n\
    \    } else {\n        array[i..].sort_by(|a, b| b.cmp(a));\n    }\n    array",
  "    let mut array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n\
    \    while i < j {\n        if array[i] % 2 == 0 && array[j] % 2 == 1 {\n    \
    \        array.swap(i, j);\n            i += 1;\n            j -= 1;\n       \
    \ } else if array[i] % 2 == 1 {\n            i += 1;\n        } else if array[j]\
    \ % 2 == 0 {\n            j -= 1;\n        } else {\n            i += 1;\n   \
    \         j -= 1;\n        }\n    }\n    if array.len() % 2 == 1 {\n        array[i..].sort();\n\
    \    } else {\n        array[i..].sort_by(|a, b| b.cmp(a));\n    }\n    array",
  "    let mut array = array;\n    if array.len() > 1 {\n        let mut i = 0;\n\
    \        let mut j = array.len() - 1;\n        while i < j {\n            if array[i]\
    \ % 2 == 0 && array[j] % 2 == 1 {\n                array.swap(i, j);\n       \
    \         i += 1;\n                j -= 1;\n            } else if array[i] % 2\
    \ == 1 {\n                i += 1;\n            } else if array[j] % 2 == 0 {\n\
    \                j -= 1;\n            } else {\n                i += 1;\n    \
    \            j -= 1;\n            }\n        }\n        if array[i] % 2 == 0 {\n\
    \            array[i..].sort();\n        } else {\n            array[..i + 1].sort();\n\
    \            array[i + 1..].sort_by(|a, b| b.cmp(a));\n        }\n    }\n    array",
  "    let mut array = array;\n    if array.len() > 1 {\n        let mut i = 0;\n\
    \        let mut j = array.len() - 1;\n        while i < j {\n            if array[i]\
    \ % 2 == 0 && array[j] % 2 == 1 {\n                array.swap(i, j);\n       \
    \         i += 1;\n                j -= 1;\n            } else if array[i] % 2\
    \ == 1 {\n                i += 1;\n            } else if array[j] % 2 == 0 {\n\
    \                j -= 1;\n            } else {\n                i += 1;\n    \
    \            j -= 1;\n            }\n        }\n        if array[i] % 2 == 0 {\n\
    \            array[i..].sort();\n        } else {\n            array[..i].sort();\n\
    \            array[..i].reverse();\n        }\n    }\n    array", "    let mut\
    \ array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n    while\
    \ i < j {\n        if array[i] % 2 == 0 && array[j] % 2 == 1 {\n            array.swap(i,\
    \ j);\n            i += 1;\n            j -= 1;\n        } else if array[i] %\
    \ 2 == 1 {\n            i += 1;\n        } else if array[j] % 2 == 0 {\n     \
    \       j -= 1;\n        }\n    }\n    if array.len() % 2 == 0 {\n        array.sort();\n\
    \    } else {\n        array.sort_by(|a, b| b.cmp(a));\n    }\n    array", " \
    \   let mut array = array;\n    let len = array.len();\n    if len == 0 {\n  \
    \      return array;\n    }\n    let mut i = 0;\n    let mut j = len - 1;\n  \
    \  while i < j {\n        if array[i] % 2 == 0 && array[j] % 2 == 1 {\n      \
    \      array.swap(i, j);\n            i += 1;\n            j -= 1;\n        }\
    \ else if array[i] % 2 == 1 {\n            i += 1;\n        } else if array[j]\
    \ % 2 == 0 {\n            j -= 1;\n        }\n    }\n    if len % 2 == 0 {\n \
    \       array[i..].sort_by(|a, b| b.cmp(a));\n    } else {\n        array[i..].sort_by(|a,\
    \ b| a.cmp(b));\n    }\n    array", "    let mut array = array;\n    let mut i\
    \ = 0;\n    let mut j = array.len() - 1;\n    while i < j {\n        if array[i]\
    \ % 2 == 0 && array[j] % 2 == 1 {\n            array.swap(i, j);\n           \
    \ i += 1;\n            j -= 1;\n        } else if array[i] % 2 == 1 {\n      \
    \      i += 1;\n        } else if array[j] % 2 == 0 {\n            j -= 1;\n \
    \       } else {\n            i += 1;\n            j -= 1;\n        }\n    }\n\
    \    if i == j && array[i] % 2 == 0 {\n        array.swap(i, j);\n    }\n    array",
  "    let mut array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n\
    \    while i < j {\n        if (array[i] + array[j]) % 2 == 0 {\n            array.swap(i,\
    \ j);\n        }\n        i += 1;\n        j -= 1;\n    }\n    array", "    let\
    \ mut array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n \
    \   while i < j {\n        if array[i] % 2 == 0 && array[j] % 2 == 1 {\n     \
    \       array.swap(i, j);\n            i += 1;\n            j -= 1;\n        }\
    \ else if array[i] % 2 == 1 {\n            i += 1;\n        } else if array[j]\
    \ % 2 == 0 {\n            j -= 1;\n        } else {\n            i += 1;\n   \
    \         j -= 1;\n        }\n    }\n    if array.len() % 2 == 1 {\n        array[i..].sort();\n\
    \    } else {\n        array[i..].sort_by(|a, b| b.cmp(a));\n    }\n    array",
  "    let mut result = array.clone();\n    if result.len() > 1 {\n        let (first,\
    \ last) = (result[0], result[result.len() - 1]);\n        if (first + last) %\
    \ 2 == 0 {\n            result.sort_by(|a, b| b.cmp(a));\n        } else {\n \
    \           result.sort_by(|a, b| a.cmp(b));\n        }\n    }\n    result", " \
    \   let mut array = array;\n    if array.len() > 1 {\n        let (mut left, mut\
    \ right) = array.split_at_mut(array.len() / 2);\n        left = sort_array(left.to_vec()).as_mut_slice();\n\
    \        right = sort_array(right.to_vec()).as_mut_slice();\n        let mut i\
    \ = 0;\n        let mut j = 0;\n        let mut k = 0;\n        while i < left.len()\
    \ && j < right.len() {\n            if left[i] < right[j] {\n                array[k]\
    \ = left[i];\n                i += 1;\n            } else {\n                array[k]\
    \ = right[j];\n                j += 1;\n            }\n            k += 1;\n \
    \       }\n        while i < left.len() {\n            array[k] = left[i];\n \
    \           i += 1;\n            k += 1;\n        }\n        while j < right.len()\
    \ {\n            array[k] = right[j];\n            j += 1;\n            k += 1;\n\
    \        }\n    }\n    array", "    let mut array = array;\n    let mut i = 0;\n\
    \    let mut j = array.len() - 1;\n    let mut is_odd = (array[i] + array[j])\
    \ % 2 == 1;\n    while i < j {\n        if is_odd {\n            if array[i] %\
    \ 2 == 0 {\n                i += 1;\n            } else if array[j] % 2 == 1 {\n\
    \                j -= 1;\n            } else {\n                array.swap(i,\
    \ j);\n                i += 1;\n                j -= 1;\n            }\n     \
    \   } else {\n            if array[i] % 2 == 1 {\n                i += 1;\n  \
    \          } else if array[j] % 2 == 0 {\n                j -= 1;\n          \
    \  } else {\n                array.swap(i, j);\n                i += 1;\n    \
    \            j -= 1;\n            }\n        }\n    }\n    array.sort_by(|a, b|\
    \ {\n        if is_odd {\n            a.cmp(b)\n        } else {\n           \
    \ b.cmp(a)\n        }\n    });\n    array", "    let mut array = array;\n    let\
    \ mut i = 0;\n    let mut j = array.len() - 1;\n    let mut is_odd = (array[i]\
    \ + array[j]) % 2 == 1;\n    while i < j {\n        if is_odd {\n            if\
    \ array[i] % 2 == 0 {\n                i += 1;\n            } else if array[j]\
    \ % 2 == 1 {\n                j -= 1;\n            } else {\n                array.swap(i,\
    \ j);\n                i += 1;\n                j -= 1;\n            }\n     \
    \   } else {\n            if array[i] % 2 == 1 {\n                i += 1;\n  \
    \          } else if array[j] % 2 == 0 {\n                j -= 1;\n          \
    \  } else {\n                array.swap(i, j);\n                i += 1;\n    \
    \            j -= 1;\n            }\n        }\n    }\n    array.sort_by(|a, b|\
    \ {\n        if is_odd {\n            a.cmp(b)\n        } else {\n           \
    \ b.cmp(a)\n        }\n    });\n    array", "    let mut array = array;\n    if\
    \ array.len() > 1 {\n        let (mut left, mut right) = array.split_at_mut(array.len()\
    \ / 2);\n        left = sort_array(left.to_vec()).as_mut_slice();\n        right\
    \ = sort_array(right.to_vec()).as_mut_slice();\n        let mut i = 0;\n     \
    \   let mut j = 0;\n        let mut k = 0;\n        while i < left.len() && j\
    \ < right.len() {\n            if (left[i] + right[j]) % 2 == 0 {\n          \
    \      array[k] = left[i];\n                i += 1;\n            } else {\n  \
    \              array[k] = right[j];\n                j += 1;\n            }\n\
    \            k += 1;\n        }\n        while i < left.len() {\n            array[k]\
    \ = left[i];\n            i += 1;\n            k += 1;\n        }\n        while\
    \ j < right.len() {\n            array[k] = right[j];\n            j += 1;\n \
    \           k += 1;\n        }\n    }\n    array", "    let mut array = array;\n\
    \    let mut sorted = false;\n    while !sorted {\n        sorted = true;\n  \
    \      for i in 0..array.len() - 1 {\n            if (array[0] + array[array.len()\
    \ - 1]) % 2 == 0 {\n                if array[i] < array[i + 1] {\n           \
    \         array.swap(i, i + 1);\n                    sorted = false;\n       \
    \         }\n            } else {\n                if array[i] > array[i + 1]\
    \ {\n                    array.swap(i, i + 1);\n                    sorted = false;\n\
    \                }\n            }\n        }\n    }\n    array", "    let mut\
    \ array = array;\n    if array.len() > 1 {\n        let (first, last) = (array[0],\
    \ array[array.len() - 1]);\n        let (mut left, mut right) = (0, array.len()\
    \ - 1);\n        while left < right {\n            if (first + last) % 2 == 0\
    \ {\n                if array[left] < array[right] {\n                    array.swap(left,\
    \ right);\n                }\n            } else {\n                if array[left]\
    \ > array[right] {\n                    array.swap(left, right);\n           \
    \     }\n            }\n            left += 1;\n            right -= 1;\n    \
    \    }\n    }\n    array", "    let mut array = array;\n    let mut i = 0;\n \
    \   let mut j = array.len() - 1;\n    while i < j {\n        if array[i] % 2 ==\
    \ 0 && array[j] % 2 == 1 {\n            array.swap(i, j);\n            i += 1;\n\
    \            j -= 1;\n        } else if array[i] % 2 == 1 {\n            i +=\
    \ 1;\n        } else if array[j] % 2 == 0 {\n            j -= 1;\n        } else\
    \ {\n            i += 1;\n            j -= 1;\n        }\n    }\n    if array.len()\
    \ % 2 == 1 {\n        array[i..].sort();\n    } else {\n        array[i..].sort_by(|a,\
    \ b| b.cmp(a));\n    }\n    array", "    let mut array = array;\n    let mut i\
    \ = 0;\n    let mut j = array.len() - 1;\n    while i < j {\n        if array[i]\
    \ % 2 == 0 && array[j] % 2 == 1 {\n            array.swap(i, j);\n           \
    \ i += 1;\n            j -= 1;\n        } else if array[i] % 2 == 1 {\n      \
    \      i += 1;\n        } else if array[j] % 2 == 0 {\n            j -= 1;\n \
    \       } else {\n            i += 1;\n            j -= 1;\n        }\n    }\n\
    \    if i == j && array[i] % 2 == 0 {\n        array.swap(i, 0);\n    }\n    array",
  "    let mut array = array;\n    let len = array.len();\n    if len == 0 {\n   \
    \     return array;\n    }\n    if len == 1 {\n        return array;\n    }\n\
    \    let mut i = 0;\n    let mut j = len - 1;\n    while i < j {\n        if array[i]\
    \ % 2 == 0 && array[j] % 2 == 1 {\n            array.swap(i, j);\n           \
    \ i += 1;\n            j -= 1;\n        } else if array[i] % 2 == 1 && array[j]\
    \ % 2 == 1 {\n            i += 1;\n        } else if array[i] % 2 == 0 && array[j]\
    \ % 2 == 0 {\n            j -= 1;\n        } else {\n            if (i + j) %\
    \ 2 == 0 {\n                if array[i] > array[j] {\n                    array.swap(i,\
    \ j);\n                }\n            } else {\n                if array[i] <\
    \ array[j] {\n                    array.swap(i, j);\n                }\n     \
    \       }\n            i += 1;\n            j -= 1;\n        }\n    }\n    array",
  "    let mut array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n\
    \    while i < j {\n        if array[i] % 2 == 0 && array[j] % 2 == 1 {\n    \
    \        array.swap(i, j);\n            i += 1;\n            j -= 1;\n       \
    \ } else if array[i] % 2 == 1 {\n            i += 1;\n        } else if array[j]\
    \ % 2 == 0 {\n            j -= 1;\n        } else {\n            i += 1;\n   \
    \         j -= 1;\n        }\n    }\n    if array.len() % 2 == 1 {\n        array[i..].sort();\n\
    \    } else {\n        array[i..].sort_by(|a, b| b.cmp(a));\n    }\n    array",
  "    let mut array = array;\n    if array.len() > 1 {\n        let (first, last)\
    \ = (array[0], array[array.len() - 1]);\n        let (mut i, mut j) = (0, array.len()\
    \ - 1);\n        while i < j {\n            if (first + last) % 2 == 0 {\n   \
    \             if array[i] > array[j] {\n                    array.swap(i, j);\n\
    \                }\n                j -= 1;\n            } else {\n          \
    \      if array[i] < array[j] {\n                    array.swap(i, j);\n     \
    \           }\n                i += 1;\n            }\n        }\n    }\n    array",
  "    let mut array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n\
    \    while i < j {\n        if array[i] % 2 == 0 && array[j] % 2 == 1 {\n    \
    \        array.swap(i, j);\n            i += 1;\n            j -= 1;\n       \
    \ } else if array[i] % 2 == 1 {\n            i += 1;\n        } else if array[j]\
    \ % 2 == 0 {\n            j -= 1;\n        } else {\n            i += 1;\n   \
    \         j -= 1;\n        }\n    }\n    if array.len() % 2 == 1 {\n        array[i..].sort();\n\
    \    } else {\n        array[i..].sort_by(|a, b| b.cmp(a));\n    }\n    array",
  "    let mut array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n\
    \    while i < j {\n        if array[i] % 2 == 0 && array[j] % 2 == 1 {\n    \
    \        array.swap(i, j);\n            i += 1;\n            j -= 1;\n       \
    \ } else if array[i] % 2 == 1 {\n            i += 1;\n        } else if array[j]\
    \ % 2 == 0 {\n            j -= 1;\n        } else {\n            i += 1;\n   \
    \         j -= 1;\n        }\n    }\n    if array.len() % 2 == 1 {\n        array[i..].sort();\n\
    \    } else {\n        array[i..].sort_by(|a, b| b.cmp(a));\n    }\n    array",
  "    let mut array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n\
    \    while i < j {\n        if array[i] % 2 == 0 && array[j] % 2 == 1 {\n    \
    \        array.swap(i, j);\n            i += 1;\n            j -= 1;\n       \
    \ } else if array[i] % 2 == 1 {\n            i += 1;\n        } else if array[j]\
    \ % 2 == 0 {\n            j -= 1;\n        } else {\n            i += 1;\n   \
    \         j -= 1;\n        }\n    }\n    if array.len() % 2 == 1 {\n        array[i..].sort();\n\
    \    } else {\n        array[i..].sort_by(|a, b| b.cmp(a));\n    }\n    array",
  "    let mut array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n\
    \    while i < j {\n        if array[i] % 2 == 0 && array[j] % 2 == 1 {\n    \
    \        array.swap(i, j);\n            i += 1;\n            j -= 1;\n       \
    \ } else if array[i] % 2 == 1 {\n            i += 1;\n        } else if array[j]\
    \ % 2 == 0 {\n            j -= 1;\n        }\n    }\n    if array.len() % 2 ==\
    \ 1 {\n        array[i..].sort_by(|a, b| b.cmp(a));\n    } else {\n        array[i..].sort();\n\
    \    }\n    array", "    let mut array = array;\n    let mut i = 0;\n    let mut\
    \ j = array.len() - 1;\n    while i < j {\n        if array[i] % 2 == 0 && array[j]\
    \ % 2 == 1 {\n            array.swap(i, j);\n            i += 1;\n           \
    \ j -= 1;\n        } else if array[i] % 2 == 1 {\n            i += 1;\n      \
    \  } else if array[j] % 2 == 0 {\n            j -= 1;\n        } else {\n    \
    \        i += 1;\n            j -= 1;\n        }\n    }\n    if array.len() %\
    \ 2 == 1 {\n        array[i..].sort();\n    } else {\n        array[i..].sort_by(|a,\
    \ b| b.cmp(a));\n    }\n    array", "    let mut array = array;\n    let len =\
    \ array.len();\n    if len == 0 {\n        return array;\n    }\n    if len ==\
    \ 1 {\n        return array;\n    }\n    let mut i = 0;\n    let mut j = len -\
    \ 1;\n    while i < j {\n        if (array[i] + array[j]) % 2 == 0 {\n       \
    \     array.swap(i, j);\n        }\n        i += 1;\n        j -= 1;\n    }\n\
    \    array.sort();\n    array", "    let mut array = array;\n    if array.len()\
    \ > 1 {\n        let (mut left, mut right) = array.split_at_mut(array.len() /\
    \ 2);\n        left = sort_array(left.to_vec()).as_mut_slice();\n        right\
    \ = sort_array(right.to_vec()).as_mut_slice();\n        let mut i = 0;\n     \
    \   let mut j = 0;\n        while i < left.len() && j < right.len() {\n      \
    \      if left[i] < right[j] {\n                array[i + j] = left[i];\n    \
    \            i += 1;\n            } else {\n                array[i + j] = right[j];\n\
    \                j += 1;\n            }\n        }\n        while i < left.len()\
    \ {\n            array[i + j] = left[i];\n            i += 1;\n        }\n   \
    \     while j < right.len() {\n            array[i + j] = right[j];\n        \
    \    j += 1;\n        }\n    }\n    if array.len() % 2 == 0 {\n        array.reverse();\n\
    \    }\n    array", "    let mut array = array;\n    let mut i = 0;\n    let mut\
    \ j = array.len() - 1;\n    while i < j {\n        if array[i] % 2 == 0 && array[j]\
    \ % 2 == 1 {\n            array.swap(i, j);\n            i += 1;\n           \
    \ j -= 1;\n        } else if array[i] % 2 == 1 {\n            i += 1;\n      \
    \  } else if array[j] % 2 == 0 {\n            j -= 1;\n        } else {\n    \
    \        i += 1;\n            j -= 1;\n        }\n    }\n    if array.len() %\
    \ 2 == 1 {\n        array[i..].sort();\n    } else {\n        array[i..].sort_by(|a,\
    \ b| b.cmp(a));\n    }\n    array", "    let mut array = array;\n    if array.len()\
    \ > 1 {\n        let mut i = 0;\n        let mut j = array.len() - 1;\n      \
    \  while i < j {\n            if array[i] % 2 == 0 && array[j] % 2 == 1 {\n  \
    \              array.swap(i, j);\n                i += 1;\n                j -=\
    \ 1;\n            } else if array[i] % 2 == 1 {\n                i += 1;\n   \
    \         } else if array[j] % 2 == 0 {\n                j -= 1;\n           \
    \ } else {\n                i += 1;\n                j -= 1;\n            }\n\
    \        }\n        if array[i] % 2 == 0 {\n            array[i..].sort();\n \
    \       } else {\n            array[..i + 1].sort();\n            array[i + 1..].sort();\n\
    \            array[i + 1..].reverse();\n        }\n    }\n    array", "    let\
    \ mut array = array;\n    let len = array.len();\n    if len == 0 {\n        return\
    \ array;\n    }\n    let mut i = 0;\n    let mut j = len - 1;\n    while i < j\
    \ {\n        if array[i] > array[j] {\n            array.swap(i, j);\n       \
    \ }\n        i += 1;\n        j -= 1;\n    }\n    array", "    let mut array =\
    \ array;\n    let len = array.len();\n    if len == 0 {\n        return vec![];\n\
    \    }\n    if len == 1 {\n        return array;\n    }\n    let mut i = 0;\n\
    \    let mut j = len - 1;\n    while i < j {\n        if array[i] % 2 == 0 &&\
    \ array[j] % 2 == 1 {\n            array.swap(i, j);\n            i += 1;\n  \
    \          j -= 1;\n        } else if array[i] % 2 == 1 && array[j] % 2 == 1 {\n\
    \            i += 1;\n        } else if array[i] % 2 == 0 && array[j] % 2 == 0\
    \ {\n            j -= 1;\n        } else {\n            i += 1;\n            j\
    \ -= 1;\n        }\n    }\n    if len % 2 == 0 {\n        array.sort_by(|a, b|\
    \ b.cmp(a));\n    } else {\n        array.sort_by(|a, b| a.cmp(b));\n    }\n \
    \   array", "    let mut array = array;\n    if array.len() > 1 {\n        let\
    \ first = array[0];\n        let last = array[array.len() - 1];\n        if (first\
    \ + last) % 2 == 0 {\n            array.sort_by(|a, b| b.cmp(a));\n        } else\
    \ {\n            array.sort_by(|a, b| a.cmp(b));\n        }\n    }\n    array",
  "    let mut array = array;\n    if array.len() > 1 {\n        let mid = array.len()\
    \ / 2;\n        let (left, right) = array.split_at_mut(mid);\n        let left\
    \ = sort_array(left.to_vec());\n        let right = sort_array(right.to_vec());\n\
    \        let mut i = 0;\n        let mut j = 0;\n        let mut k = 0;\n    \
    \    while i < left.len() && j < right.len() {\n            if left[i] < right[j]\
    \ {\n                array[k] = left[i];\n                i += 1;\n          \
    \  } else {\n                array[k] = right[j];\n                j += 1;\n \
    \           }\n            k += 1;\n        }\n        while i < left.len() {\n\
    \            array[k] = left[i];\n            i += 1;\n            k += 1;\n \
    \       }\n        while j < right.len() {\n            array[k] = right[j];\n\
    \            j += 1;\n            k += 1;\n        }\n    }\n    if array.len()\
    \ > 1 && (array[0] + array[array.len() - 1]) % 2 == 0 {\n        array.reverse();\n\
    \    }\n    array", "    let mut array = array;\n    let mut i = 0;\n    let mut\
    \ j = array.len() - 1;\n    while i < j {\n        if array[i] % 2 == 0 && array[j]\
    \ % 2 == 1 {\n            array.swap(i, j);\n            i += 1;\n           \
    \ j -= 1;\n        } else if array[i] % 2 == 1 {\n            i += 1;\n      \
    \  } else if array[j] % 2 == 0 {\n            j -= 1;\n        } else {\n    \
    \        i += 1;\n            j -= 1;\n        }\n    }\n    if array.len() %\
    \ 2 == 1 {\n        array[i..].sort();\n    } else {\n        array[i..].sort_by(|a,\
    \ b| b.cmp(a));\n    }\n    array", "    let mut array = array;\n    let mut i\
    \ = 0;\n    let mut j = array.len() - 1;\n    while i < j {\n        if array[i]\
    \ % 2 == 0 && array[j] % 2 == 1 {\n            array.swap(i, j);\n           \
    \ i += 1;\n            j -= 1;\n        } else if array[i] % 2 == 1 {\n      \
    \      i += 1;\n        } else if array[j] % 2 == 0 {\n            j -= 1;\n \
    \       } else {\n            i += 1;\n            j -= 1;\n        }\n    }\n\
    \    if array.len() % 2 == 1 {\n        array[i..].sort();\n    } else {\n   \
    \     array[i..].sort_by(|a, b| b.cmp(a));\n    }\n    array", "    if array.len()\
    \ <= 1 {\n        return array;\n    }\n    let mut array = array;\n    let (mut\
    \ i, mut j) = (0, array.len() - 1);\n    while i < j {\n        if (array[i] +\
    \ array[j]) % 2 == 0 {\n            array.swap(i, j);\n        }\n        i +=\
    \ 1;\n        j -= 1;\n    }\n    array.sort();\n    array", "    let mut array\
    \ = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n    while i\
    \ < j {\n        if array[i] % 2 == 0 && array[j] % 2 == 1 {\n            array.swap(i,\
    \ j);\n            i += 1;\n            j -= 1;\n        } else if array[i] %\
    \ 2 == 1 {\n            i += 1;\n        } else if array[j] % 2 == 0 {\n     \
    \       j -= 1;\n        } else {\n            i += 1;\n            j -= 1;\n\
    \        }\n    }\n    if array.len() % 2 == 1 {\n        array[i..].sort();\n\
    \    } else {\n        array[i..].sort_by(|a, b| b.cmp(a));\n    }\n    array",
  "    let mut array = array;\n    if array.len() > 1 {\n        let (mut left, mut\
    \ right) = array.split_at_mut(array.len() / 2);\n        left = sort_array(left.to_vec()).as_mut_slice();\n\
    \        right = sort_array(right.to_vec()).as_mut_slice();\n        let mut i\
    \ = 0;\n        let mut j = 0;\n        while i < left.len() && j < right.len()\
    \ {\n            if (left[i] + right[j]) % 2 == 0 {\n                array[i +\
    \ j] = left[i];\n                i += 1;\n            } else {\n             \
    \   array[i + j] = right[j];\n                j += 1;\n            }\n       \
    \ }\n        while i < left.len() {\n            array[i + j] = left[i];\n   \
    \         i += 1;\n        }\n        while j < right.len() {\n            array[i\
    \ + j] = right[j];\n            j += 1;\n        }\n    }\n    array", "    let\
    \ mut array = array;\n    let len = array.len();\n    let mut i = 0;\n    let\
    \ mut j = len - 1;\n    while i < j {\n        if (array[i] + array[j]) % 2 ==\
    \ 0 {\n            array.swap(i, j);\n        }\n        i += 1;\n        j -=\
    \ 1;\n    }\n    array", "    let mut array = array;\n    let mut i = 0;\n   \
    \ let mut j = array.len() - 1;\n    let mut tmp;\n    while i < j {\n        if\
    \ (array[i] + array[j]) % 2 == 0 {\n            tmp = array[i];\n            array[i]\
    \ = array[j];\n            array[j] = tmp;\n        }\n        i += 1;\n     \
    \   j -= 1;\n    }\n    array", "    let mut array = array;\n    if array.len()\
    \ > 1 {\n        let sum = array[0] + array[array.len() - 1];\n        if sum\
    \ % 2 == 0 {\n            array.sort_by(|a, b| b.cmp(a));\n        } else {\n\
    \            array.sort_by(|a, b| a.cmp(b));\n        }\n    }\n    array", " \
    \   let mut array = array;\n    if array.len() > 1 {\n        let mut i = 0;\n\
    \        let mut j = array.len() - 1;\n        while i < j {\n            if array[i]\
    \ % 2 == 0 && array[j] % 2 == 1 {\n                array.swap(i, j);\n       \
    \         i += 1;\n                j -= 1;\n            } else if array[i] % 2\
    \ == 1 {\n                j -= 1;\n            } else {\n                i +=\
    \ 1;\n            }\n        }\n        if array[i] % 2 == 0 {\n            array[i..].sort();\n\
    \        } else {\n            array[..i].sort();\n            array[..i].reverse();\n\
    \        }\n    }\n    array", "    let mut array = array;\n    let mut i = 0;\n\
    \    let mut j = array.len() - 1;\n    let mut is_odd = (array[i] + array[j])\
    \ % 2 == 1;\n    while i < j {\n        if is_odd {\n            if array[i] %\
    \ 2 == 0 {\n                i += 1;\n            } else if array[j] % 2 == 1 {\n\
    \                j -= 1;\n            } else {\n                array.swap(i,\
    \ j);\n                i += 1;\n                j -= 1;\n            }\n     \
    \   } else {\n            if array[i] % 2 == 1 {\n                i += 1;\n  \
    \          } else if array[j] % 2 == 0 {\n                j -= 1;\n          \
    \  } else {\n                array.swap(i, j);\n                i += 1;\n    \
    \            j -= 1;\n            }\n        }\n    }\n    array.sort_by(|a, b|\
    \ {\n        if is_odd {\n            a.cmp(b)\n        } else {\n           \
    \ b.cmp(a)\n        }\n    });\n    array", "    let mut array = array;\n    if\
    \ array.len() > 1 {\n        let mut i = 0;\n        let mut j = array.len() -\
    \ 1;\n        while i < j {\n            if array[i] % 2 == 0 && array[j] % 2\
    \ == 1 {\n                array.swap(i, j);\n                i += 1;\n       \
    \         j -= 1;\n            } else if array[i] % 2 == 1 {\n               \
    \ i += 1;\n            } else if array[j] % 2 == 0 {\n                j -= 1;\n\
    \            } else {\n                i += 1;\n                j -= 1;\n    \
    \        }\n        }\n        if array[i] % 2 == 0 {\n            array[i..].sort();\n\
    \        } else {\n            array[..=i].sort();\n            array[..=i].reverse();\n\
    \        }\n    }\n    array", "    let mut array = array;\n    if array.len()\
    \ > 1 {\n        let (first, last) = (array[0], array[array.len() - 1]);\n   \
    \     if (first + last) % 2 == 0 {\n            array.sort_by(|a, b| b.cmp(a));\n\
    \        } else {\n            array.sort_by(|a, b| a.cmp(b));\n        }\n  \
    \  }\n    array", "    let mut array = array;\n    let mut i = 0;\n    let mut\
    \ j = array.len() - 1;\n    while i < j {\n        if array[i] % 2 == 0 && array[j]\
    \ % 2 == 1 {\n            array.swap(i, j);\n            i += 1;\n           \
    \ j -= 1;\n        } else if array[i] % 2 == 1 {\n            i += 1;\n      \
    \  } else if array[j] % 2 == 0 {\n            j -= 1;\n        } else {\n    \
    \        i += 1;\n            j -= 1;\n        }\n    }\n    if array.len() %\
    \ 2 == 1 {\n        array[i..].sort();\n    } else {\n        array[i..].sort_by(|a,\
    \ b| b.cmp(a));\n    }\n    array", "    let mut array = array;\n    let sum =\
    \ array.first().unwrap() + array.last().unwrap();\n    if sum % 2 == 0 {\n   \
    \     array.sort_by(|a, b| b.cmp(a));\n    } else {\n        array.sort_by(|a,\
    \ b| a.cmp(b));\n    }\n    array", "    let mut array = array;\n    let mut sorted\
    \ = false;\n    while !sorted {\n        sorted = true;\n        for i in 0..array.len()\
    \ - 1 {\n            if array[i] > array[i + 1] {\n                array.swap(i,\
    \ i + 1);\n                sorted = false;\n            }\n        }\n    }\n\
    \    if array.len() > 1 && (array[0] + array[array.len() - 1]) % 2 == 0 {\n  \
    \      array.reverse();\n    }\n    array", "    if array.len() < 2 {\n      \
    \  return array;\n    }\n    let mut array = array;\n    let (mut i, mut j) =\
    \ (0, array.len() - 1);\n    while i < j {\n        if (array[i] + array[j]) %\
    \ 2 == 0 {\n            array.swap(i, j);\n        }\n        i += 1;\n      \
    \  j -= 1;\n    }\n    array.sort();\n    array", "    let mut array = array;\n\
    \    let mut i = 0;\n    let mut j = array.len() - 1;\n    while i < j {\n   \
    \     if array[i] % 2 == 0 && array[j] % 2 == 1 {\n            array.swap(i, j);\n\
    \            i += 1;\n            j -= 1;\n        } else if array[i] % 2 == 1\
    \ {\n            i += 1;\n        } else if array[j] % 2 == 0 {\n            j\
    \ -= 1;\n        } else {\n            i += 1;\n            j -= 1;\n        }\n\
    \    }\n    if array.len() % 2 == 1 {\n        array[i..].sort();\n    } else\
    \ {\n        array[i..].sort_by(|a, b| b.cmp(a));\n    }\n    array", "    let\
    \ mut array = array;\n    if array.len() > 1 {\n        let (mut left, mut right)\
    \ = array.split_at_mut(array.len() / 2);\n        left = sort_array(left.to_vec()).as_mut_slice();\n\
    \        right = sort_array(right.to_vec()).as_mut_slice();\n        let mut i\
    \ = 0;\n        let mut j = 0;\n        let mut k = 0;\n        while i < left.len()\
    \ && j < right.len() {\n            if (left[i] + right[j]) % 2 == 0 {\n     \
    \           array[k] = left[i];\n                i += 1;\n            } else {\n\
    \                array[k] = right[j];\n                j += 1;\n            }\n\
    \            k += 1;\n        }\n        while i < left.len() {\n            array[k]\
    \ = left[i];\n            i += 1;\n            k += 1;\n        }\n        while\
    \ j < right.len() {\n            array[k] = right[j];\n            j += 1;\n \
    \           k += 1;\n        }\n    }\n    array", "    let mut array = array;\n\
    \    let mut index = 0;\n    let mut last_index = array.len() - 1;\n    while\
    \ index < last_index {\n        if array[index] % 2 == 0 && array[last_index]\
    \ % 2 == 0 {\n            index += 1;\n        } else if array[index] % 2 == 1\
    \ && array[last_index] % 2 == 1 {\n            last_index -= 1;\n        } else\
    \ if array[index] % 2 == 0 && array[last_index] % 2 == 1 {\n            array.swap(index,\
    \ last_index);\n            index += 1;\n            last_index -= 1;\n      \
    \  } else {\n            if index + last_index % 2 == 0 {\n                array.swap(index,\
    \ last_index);\n            }\n            index += 1;\n            last_index\
    \ -= 1;\n        }\n    }\n    array", "    let mut array = array;\n    let len\
    \ = array.len();\n    if len == 0 {\n        return array;\n    }\n    if len\
    \ == 1 {\n        return array;\n    }\n    if (array[0] + array[len - 1]) % 2\
    \ == 0 {\n        array.sort_by(|a, b| b.cmp(a));\n    } else {\n        array.sort_by(|a,\
    \ b| a.cmp(b));\n    }\n    array", "    let mut array = array;\n    let mut i\
    \ = 0;\n    let mut j = array.len() - 1;\n    while i < j {\n        if array[i]\
    \ % 2 == 0 && array[j] % 2 == 1 {\n            array.swap(i, j);\n           \
    \ i += 1;\n            j -= 1;\n        } else if array[i] % 2 == 1 {\n      \
    \      i += 1;\n        } else if array[j] % 2 == 0 {\n            j -= 1;\n \
    \       } else {\n            i += 1;\n            j -= 1;\n        }\n    }\n\
    \    if i == j && array[i] % 2 == 0 {\n        array.swap(i, j);\n    }\n    array",
  "    let mut array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n\
    \    while i < j {\n        if array[i] % 2 == 0 && array[j] % 2 == 1 {\n    \
    \        array.swap(i, j);\n            i += 1;\n            j -= 1;\n       \
    \ } else if array[i] % 2 == 1 {\n            i += 1;\n        } else if array[j]\
    \ % 2 == 0 {\n            j -= 1;\n        } else {\n            i += 1;\n   \
    \         j -= 1;\n        }\n    }\n    if array.len() % 2 == 1 {\n        array[i..].sort();\n\
    \    } else {\n        array[i..].sort_by(|a, b| b.cmp(a));\n    }\n    array",
  "    let mut array = array;\n    let len = array.len();\n    if len == 0 {\n   \
    \     return array;\n    }\n    let mut i = 0;\n    let mut j = len - 1;\n   \
    \ while i < j {\n        if (array[i] + array[j]) % 2 == 0 {\n            array.swap(i,\
    \ j);\n        }\n        i += 1;\n        j -= 1;\n    }\n    array", "    let\
    \ mut array = array;\n    if array.len() > 1 {\n        let (first, last) = (array[0],\
    \ array[array.len() - 1]);\n        if (first + last) % 2 == 0 {\n           \
    \ array.sort_by(|a, b| b.cmp(a));\n        } else {\n            array.sort_by(|a,\
    \ b| a.cmp(b));\n        }\n    }\n    array", "    let mut array = array;\n \
    \   let mut i = 0;\n    let mut j = array.len() - 1;\n    let mut sorted = false;\n\
    \    while !sorted {\n        sorted = true;\n        while i < j {\n        \
    \    if array[i] > array[i + 1] {\n                array.swap(i, i + 1);\n   \
    \             sorted = false;\n            }\n            i += 1;\n        }\n\
    \        while j > i {\n            if array[j] < array[j - 1] {\n           \
    \     array.swap(j, j - 1);\n                sorted = false;\n            }\n\
    \            j -= 1;\n        }\n    }\n    array", "    let mut array = array;\n\
    \    let mut i = 0;\n    let mut j = array.len() - 1;\n    while i < j {\n   \
    \     if array[i] % 2 == 0 && array[j] % 2 == 1 {\n            array.swap(i, j);\n\
    \            i += 1;\n            j -= 1;\n        } else if array[i] % 2 == 1\
    \ {\n            i += 1;\n        } else if array[j] % 2 == 0 {\n            j\
    \ -= 1;\n        } else {\n            i += 1;\n            j -= 1;\n        }\n\
    \    }\n    if array.len() % 2 == 1 {\n        array[i..].sort();\n    } else\
    \ {\n        array[i..].sort_by(|a, b| b.cmp(a));\n    }\n    array", "    let\
    \ mut array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n \
    \   while i < j {\n        if array[i] % 2 == 0 && array[j] % 2 == 1 {\n     \
    \       array.swap(i, j);\n            i += 1;\n            j -= 1;\n        }\
    \ else if array[i] % 2 == 1 {\n            i += 1;\n        } else if array[j]\
    \ % 2 == 0 {\n            j -= 1;\n        } else {\n            i += 1;\n   \
    \         j -= 1;\n        }\n    }\n    if array.len() % 2 == 1 {\n        array[i..].sort();\n\
    \    } else {\n        array[i..].sort_by(|a, b| b.cmp(a));\n    }\n    array",
  "    let mut array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n\
    \    while i < j {\n        if array[i] % 2 == 0 && array[j] % 2 == 1 {\n    \
    \        array.swap(i, j);\n            i += 1;\n            j -= 1;\n       \
    \ } else if array[i] % 2 == 1 {\n            i += 1;\n        } else if array[j]\
    \ % 2 == 0 {\n            j -= 1;\n        } else {\n            i += 1;\n   \
    \         j -= 1;\n        }\n    }\n    if array.len() % 2 == 1 {\n        array[i..].sort();\n\
    \    } else {\n        array[i..].sort_by(|a, b| b.cmp(a));\n    }\n    array",
  "    let mut array = array;\n    if array.len() > 1 {\n        let (first, last)\
    \ = (array[0], array[array.len() - 1]);\n        if (first + last) % 2 == 0 {\n\
    \            array.sort_by(|a, b| b.cmp(a));\n        } else {\n            array.sort_by(|a,\
    \ b| a.cmp(b));\n        }\n    }\n    array", "    let mut array = array;\n \
    \   let mut i = 0;\n    let mut j = array.len() - 1;\n    while i < j {\n    \
    \    if array[i] % 2 == 0 && array[j] % 2 == 1 {\n            array.swap(i, j);\n\
    \            i += 1;\n            j -= 1;\n        } else if array[i] % 2 == 1\
    \ {\n            i += 1;\n        } else if array[j] % 2 == 0 {\n            j\
    \ -= 1;\n        } else {\n            i += 1;\n            j -= 1;\n        }\n\
    \    }\n    if array.len() % 2 == 1 {\n        array[i..].sort();\n    } else\
    \ {\n        array[i..].sort_by(|a, b| b.cmp(a));\n    }\n    array", "    let\
    \ mut array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n \
    \   while i < j {\n        if array[i] % 2 == 0 && array[j] % 2 == 1 {\n     \
    \       array.swap(i, j);\n            i += 1;\n            j -= 1;\n        }\
    \ else if array[i] % 2 == 1 {\n            i += 1;\n        } else if array[j]\
    \ % 2 == 0 {\n            j -= 1;\n        } else {\n            i += 1;\n   \
    \         j -= 1;\n        }\n    }\n    if array.len() % 2 == 1 {\n        array[i..].sort();\n\
    \    } else {\n        array[i..].sort_by(|a, b| b.cmp(a));\n    }\n    array",
  "    let mut array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n\
    \    while i < j {\n        if array[i] % 2 == 0 && array[j] % 2 == 1 {\n    \
    \        array.swap(i, j);\n            i += 1;\n            j -= 1;\n       \
    \ } else if array[i] % 2 == 1 {\n            i += 1;\n        } else if array[j]\
    \ % 2 == 0 {\n            j -= 1;\n        } else {\n            i += 1;\n   \
    \         j -= 1;\n        }\n    }\n    if i == j && array[i] % 2 == 0 {\n  \
    \      array.swap(i, j);\n    }\n    array", "    let mut array = array;\n   \
    \ let len = array.len();\n    if len == 0 {\n        return array;\n    }\n  \
    \  let mut i = 0;\n    let mut j = len - 1;\n    while i < j {\n        if (array[i]\
    \ + array[j]) % 2 == 0 {\n            array.swap(i, j);\n        }\n        i\
    \ += 1;\n        j -= 1;\n    }\n    array", "    let mut array = array;\n   \
    \ let mut i = 0;\n    let mut j = array.len() - 1;\n    while i < j {\n      \
    \  if array[i] % 2 == 0 && array[j] % 2 == 1 {\n            array.swap(i, j);\n\
    \            i += 1;\n            j -= 1;\n        } else if array[i] % 2 == 1\
    \ {\n            i += 1;\n        } else if array[j] % 2 == 0 {\n            j\
    \ -= 1;\n        }\n    }\n    if array.len() % 2 == 0 {\n        array.sort();\n\
    \    } else {\n        array.sort_by(|a, b| b.cmp(a));\n    }\n    array", " \
    \   let mut array = array;\n    let mut i = 0;\n    let mut j = array.len() -\
    \ 1;\n    while i < j {\n        if (array[i] + array[j]) % 2 == 0 {\n       \
    \     array.swap(i, j);\n        }\n        i += 1;\n        j -= 1;\n    }\n\
    \    array", "    let mut array = array;\n    let len = array.len();\n    let\
    \ mut i = 0;\n    let mut j = len - 1;\n    while i < j {\n        if array[i]\
    \ % 2 == 1 && array[j] % 2 == 0 {\n            array.swap(i, j);\n           \
    \ i += 1;\n            j -= 1;\n        } else if array[i] % 2 == 0 {\n      \
    \      j -= 1;\n        } else if array[j] % 2 == 1 {\n            i += 1;\n \
    \       } else {\n            i += 1;\n            j -= 1;\n        }\n    }\n\
    \    if len % 2 == 1 {\n        array[i..].sort();\n        array[..i].sort_by(|a,\
    \ b| b.cmp(a));\n    } else {\n        array[i..].sort_by(|a, b| b.cmp(a));\n\
    \        array[..i].sort();\n    }\n    array", "    let mut array = array;\n\
    \    if array.len() > 1 {\n        let (first, last) = (array[0], array[array.len()\
    \ - 1]);\n        let (mut left, mut right) = (0, array.len() - 1);\n        while\
    \ left < right {\n            if (first + last) % 2 == 0 {\n                if\
    \ array[left] < array[right] {\n                    array.swap(left, right);\n\
    \                }\n            } else {\n                if array[left] > array[right]\
    \ {\n                    array.swap(left, right);\n                }\n       \
    \     }\n            left += 1;\n            right -= 1;\n        }\n    }\n \
    \   array", "    let mut array = array;\n    if array.len() > 1 {\n        let\
    \ (mut left, mut right) = array.split_at_mut(array.len() / 2);\n        left =\
    \ sort_array(left.to_vec()).as_mut_slice();\n        right = sort_array(right.to_vec()).as_mut_slice();\n\
    \        let mut i = 0;\n        let mut j = 0;\n        let mut k = 0;\n    \
    \    while i < left.len() && j < right.len() {\n            if left[i] < right[j]\
    \ {\n                array[k] = left[i];\n                i += 1;\n          \
    \  } else {\n                array[k] = right[j];\n                j += 1;\n \
    \           }\n            k += 1;\n        }\n        while i < left.len() {\n\
    \            array[k] = left[i];\n            i += 1;\n            k += 1;\n \
    \       }\n        while j < right.len() {\n            array[k] = right[j];\n\
    \            j += 1;\n            k += 1;\n        }\n    }\n    if array.len()\
    \ % 2 == 0 {\n        array.reverse();\n    }\n    array", "    let mut result\
    \ = array.clone();\n    if result.len() > 1 {\n        let mut i = 0;\n      \
    \  let mut j = result.len() - 1;\n        while i < j {\n            if result[i]\
    \ % 2 == 0 && result[j] % 2 == 1 {\n                result.swap(i, j);\n     \
    \           i += 1;\n                j -= 1;\n            } else if result[i]\
    \ % 2 == 1 && result[j] % 2 == 0 {\n                i += 1;\n                j\
    \ -= 1;\n            } else if result[i] % 2 == 1 && result[j] % 2 == 1 {\n  \
    \              i += 1;\n            } else {\n                j -= 1;\n      \
    \      }\n        }\n        if result.len() % 2 == 1 {\n            result[i..].sort();\n\
    \        } else {\n            result[i..].sort_by(|a, b| b.cmp(a));\n       \
    \ }\n    }\n    result", "    let mut array = array;\n    let sum = array.first().unwrap()\
    \ + array.last().unwrap();\n    if sum % 2 == 0 {\n        array.sort_by(|a, b|\
    \ b.cmp(a));\n    } else {\n        array.sort_by(|a, b| a.cmp(b));\n    }\n \
    \   array", "    let mut array = array;\n    if array.len() > 1 {\n        let\
    \ mut i = 0;\n        let mut j = array.len() - 1;\n        while i < j {\n  \
    \          if (array[i] + array[j]) % 2 == 0 {\n                array.swap(i,\
    \ j);\n            }\n            i += 1;\n            j -= 1;\n        }\n  \
    \      array.sort();\n    }\n    array", "    let mut array = array;\n    let\
    \ len = array.len();\n    if len == 0 {\n        return array;\n    }\n    let\
    \ mut i = 0;\n    let mut j = len - 1;\n    while i < j {\n        if array[i]\
    \ % 2 == 0 && array[j] % 2 == 1 {\n            array.swap(i, j);\n           \
    \ i += 1;\n            j -= 1;\n        } else if array[i] % 2 == 1 {\n      \
    \      i += 1;\n        } else if array[j] % 2 == 0 {\n            j -= 1;\n \
    \       }\n    }\n    if len % 2 == 0 {\n        array[..i].sort();\n        array[i..].sort_by(|a,\
    \ b| b.cmp(a));\n    } else {\n        array[..i].sort_by(|a, b| b.cmp(a));\n\
    \        array[i..].sort();\n    }\n    array", "    let mut array = array;\n\
    \    let mut i = 0;\n    let mut j = array.len() - 1;\n    let mut is_odd = (array[i]\
    \ + array[j]) % 2 == 1;\n    while i < j {\n        if is_odd {\n            if\
    \ array[i] % 2 == 0 {\n                i += 1;\n            } else if array[j]\
    \ % 2 == 1 {\n                j -= 1;\n            } else {\n                array.swap(i,\
    \ j);\n                i += 1;\n                j -= 1;\n            }\n     \
    \   } else {\n            if array[i] % 2 == 1 {\n                i += 1;\n  \
    \          } else if array[j] % 2 == 0 {\n                j -= 1;\n          \
    \  } else {\n                array.swap(i, j);\n                i += 1;\n    \
    \            j -= 1;\n            }\n        }\n    }\n    array.sort_by(|a, b|\
    \ {\n        if is_odd {\n            a.cmp(b)\n        } else {\n           \
    \ b.cmp(a)\n        }\n    });\n    array", "    let mut array = array;\n    if\
    \ array.len() > 1 {\n        let (mut start, mut end) = (0, array.len() - 1);\n\
    \        while start < end {\n            while start < end && (start + end) %\
    \ 2 == 1 {\n                start += 1;\n            }\n            while start\
    \ < end && (start + end) % 2 == 0 {\n                end -= 1;\n            }\n\
    \            array.swap(start, end);\n        }\n    }\n    array", "    let mut\
    \ array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n    while\
    \ i < j {\n        if array[i] % 2 == 0 && array[j] % 2 == 1 {\n            array.swap(i,\
    \ j);\n            i += 1;\n            j -= 1;\n        } else if array[i] %\
    \ 2 == 1 {\n            i += 1;\n        } else if array[j] % 2 == 0 {\n     \
    \       j -= 1;\n        } else {\n            i += 1;\n            j -= 1;\n\
    \        }\n    }\n    if array.len() % 2 == 1 {\n        array[i..].sort();\n\
    \    } else {\n        array[i..].sort_by(|a, b| b.cmp(a));\n    }\n    array",
  "    let mut array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n\
    \    while i < j {\n        if array[i] % 2 == 0 && array[j] % 2 == 1 {\n    \
    \        array.swap(i, j);\n            i += 1;\n            j -= 1;\n       \
    \ } else if array[i] % 2 == 1 {\n            i += 1;\n        } else if array[j]\
    \ % 2 == 0 {\n            j -= 1;\n        } else {\n            i += 1;\n   \
    \         j -= 1;\n        }\n    }\n    if array.len() % 2 == 1 {\n        array[i..].sort();\n\
    \    } else {\n        array[i..].sort_by(|a, b| b.cmp(a));\n    }\n    array",
  "    let mut array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n\
    \    while i < j {\n        if array[i] % 2 == 0 && array[j] % 2 == 1 {\n    \
    \        array.swap(i, j);\n            i += 1;\n            j -= 1;\n       \
    \ } else if array[i] % 2 == 1 {\n            i += 1;\n        } else if array[j]\
    \ % 2 == 0 {\n            j -= 1;\n        }\n    }\n    if array.len() % 2 ==\
    \ 0 {\n        array.sort();\n    } else {\n        array.sort_by(|a, b| b.cmp(a));\n\
    \    }\n    array", "    let mut array = array;\n    let len = array.len();\n\
    \    if len == 0 {\n        return array;\n    }\n    let mut i = 0;\n    let\
    \ mut j = len - 1;\n    while i < j {\n        if (array[i] + array[j]) % 2 ==\
    \ 0 {\n            array.swap(i, j);\n        }\n        i += 1;\n        j -=\
    \ 1;\n    }\n    array", "    let mut array = array;\n    let mut i = 0;\n   \
    \ let mut j = array.len() - 1;\n    while i < j {\n        if array[i] % 2 ==\
    \ 0 && array[j] % 2 == 1 {\n            array.swap(i, j);\n            i += 1;\n\
    \            j -= 1;\n        } else if array[i] % 2 == 1 {\n            i +=\
    \ 1;\n        } else if array[j] % 2 == 0 {\n            j -= 1;\n        } else\
    \ {\n            i += 1;\n            j -= 1;\n        }\n    }\n    if array.len()\
    \ % 2 == 1 {\n        array[i..].sort();\n    } else {\n        array[i..].sort_by(|a,\
    \ b| b.cmp(a));\n    }\n    array", "    let mut array = array;\n    let mut i\
    \ = 0;\n    let mut j = array.len() - 1;\n    while i < j {\n        if array[i]\
    \ % 2 == 0 && array[j] % 2 == 1 {\n            array.swap(i, j);\n           \
    \ i += 1;\n            j -= 1;\n        } else if array[i] % 2 == 1 {\n      \
    \      i += 1;\n        } else if array[j] % 2 == 0 {\n            j -= 1;\n \
    \       } else {\n            i += 1;\n            j -= 1;\n        }\n    }\n\
    \    if array.len() % 2 == 1 {\n        array[i..].sort();\n    } else {\n   \
    \     array[i..].sort_by(|a, b| b.cmp(a));\n    }\n    array", "    let mut array\
    \ = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n    while i\
    \ < j {\n        if array[i] % 2 == 0 && array[j] % 2 == 1 {\n            array.swap(i,\
    \ j);\n            i += 1;\n            j -= 1;\n        } else if array[i] %\
    \ 2 == 1 {\n            i += 1;\n        } else if array[j] % 2 == 0 {\n     \
    \       j -= 1;\n        }\n    }\n    if array.len() % 2 == 0 {\n        array.sort();\n\
    \    } else {\n        array.sort_by(|a, b| b.cmp(a));\n    }\n    array", " \
    \   let mut array = array;\n    if array.len() > 1 {\n        let (first, last)\
    \ = (array[0], array[array.len() - 1]);\n        let (mut left, mut right) = (1,\
    \ array.len() - 2);\n        while left <= right {\n            if (first + last)\
    \ % 2 == 0 {\n                if array[left] > array[right] {\n              \
    \      array.swap(left, right);\n                }\n            } else {\n   \
    \             if array[left] < array[right] {\n                    array.swap(left,\
    \ right);\n                }\n            }\n            left += 1;\n        \
    \    right -= 1;\n        }\n    }\n    array", "    let mut array = array;\n\
    \    let mut i = 0;\n    let mut j = array.len() - 1;\n    while i < j {\n   \
    \     if array[i] % 2 == 0 && array[j] % 2 == 1 {\n            array.swap(i, j);\n\
    \            i += 1;\n            j -= 1;\n        } else if array[i] % 2 == 1\
    \ {\n            i += 1;\n        } else if array[j] % 2 == 0 {\n            j\
    \ -= 1;\n        }\n    }\n    if array.len() % 2 == 0 {\n        array.sort();\n\
    \    } else {\n        array.sort_by(|a, b| b.cmp(a));\n    }\n    array", " \
    \   let mut result = array.clone();\n    if array.len() > 1 {\n        if (array[0]\
    \ + array[array.len() - 1]) % 2 == 0 {\n            result.sort_by(|a, b| b.cmp(a));\n\
    \        } else {\n            result.sort_by(|a, b| a.cmp(b));\n        }\n \
    \   }\n    result", "    let mut array = array;\n    if array.len() > 1 {\n  \
    \      let (first, last) = (array[0], array[array.len() - 1]);\n        if (first\
    \ + last) % 2 == 0 {\n            array.sort_by(|a, b| b.cmp(a));\n        } else\
    \ {\n            array.sort_by(|a, b| a.cmp(b));\n        }\n    }\n    array",
  "    let mut array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n\
    \    while i < j {\n        if array[i] % 2 == 0 && array[j] % 2 == 1 {\n    \
    \        array.swap(i, j);\n            i += 1;\n            j -= 1;\n       \
    \ } else if array[i] % 2 == 1 {\n            i += 1;\n        } else if array[j]\
    \ % 2 == 0 {\n            j -= 1;\n        }\n    }\n    if array.len() % 2 ==\
    \ 0 {\n        array.sort();\n    } else {\n        array.sort_by(|a, b| b.cmp(a));\n\
    \    }\n    array", "    let mut array = array;\n    let mut i = 0;\n    let mut\
    \ j = array.len() - 1;\n    while i < j {\n        if array[i] % 2 == 0 && array[j]\
    \ % 2 == 1 {\n            array.swap(i, j);\n            i += 1;\n           \
    \ j -= 1;\n        } else if array[i] % 2 == 1 {\n            i += 1;\n      \
    \  } else if array[j] % 2 == 0 {\n            j -= 1;\n        } else {\n    \
    \        i += 1;\n            j -= 1;\n        }\n    }\n    if array.len() %\
    \ 2 == 1 {\n        array[i..].sort();\n    } else {\n        array[i..].sort_by(|a,\
    \ b| b.cmp(a));\n    }\n    array", "    let mut array = array;\n    if array.len()\
    \ > 1 {\n        let mut i = 0;\n        let mut j = array.len() - 1;\n      \
    \  while i < j {\n            if array[i] % 2 == 0 && array[j] % 2 == 1 {\n  \
    \              array.swap(i, j);\n                i += 1;\n                j -=\
    \ 1;\n            } else if array[i] % 2 == 1 {\n                i += 1;\n   \
    \         } else if array[j] % 2 == 0 {\n                j -= 1;\n           \
    \ } else {\n                i += 1;\n                j -= 1;\n            }\n\
    \        }\n        if array[i] % 2 == 0 {\n            array[i..].sort();\n \
    \       } else {\n            array[..=i].sort();\n            array[..=i].reverse();\n\
    \        }\n    }\n    array", "    let mut array = array;\n    if array.len()\
    \ > 1 {\n        let mut i = 0;\n        let mut j = array.len() - 1;\n      \
    \  while i < j {\n            if array[i] % 2 == 0 && array[j] % 2 == 1 {\n  \
    \              array.swap(i, j);\n                i += 1;\n                j -=\
    \ 1;\n            } else if array[i] % 2 == 1 {\n                i += 1;\n   \
    \         } else if array[j] % 2 == 0 {\n                j -= 1;\n           \
    \ } else {\n                i += 1;\n                j -= 1;\n            }\n\
    \        }\n        if i == j && array[i] % 2 == 0 {\n            array.swap(i,\
    \ i + 1);\n        }\n        let mut i = 0;\n        let mut j = array.len()\
    \ - 1;\n        while i < j {\n            if array[i] % 2 == 1 && array[j] %\
    \ 2 == 0 {\n                array.swap(i, j);\n                i += 1;\n     \
    \           j -= 1;\n            } else if array[i] % 2 == 0 {\n             \
    \   i += 1;\n            } else if array[j] % 2 == 1 {\n                j -= 1;\n\
    \            } else {\n                i += 1;\n                j -= 1;\n    \
    \        }\n        }\n        if i == j && array[i] % 2 == 1 {\n            array.swap(i,\
    \ i + 1);\n        }\n        let mut i = 0;\n        let mut j = array.len()\
    \ - 1;\n        while i < j {\n            if array[i] % 2 == 1 && array[j] %\
    \ 2 == 1 {\n                if array[i] > array[j] {\n                    array.swap(i,\
    \ j);\n                }\n                i += 1;\n                j -= 1;\n \
    \           } else if array[i] % 2 == 0 {\n                i += 1;\n         \
    \   } else if array[j] % 2 == 0 {\n                j -= 1;\n            } else\
    \ {\n                i += 1;\n                j -= 1;\n            }\n       \
    \ }\n        if i == j && array[", "    let mut array = array;\n    let mut i\
    \ = 0;\n    let mut j = array.len() - 1;\n    while i < j {\n        if array[i]\
    \ % 2 == 0 && array[j] % 2 == 1 {\n            array.swap(i, j);\n           \
    \ i += 1;\n            j -= 1;\n        } else if array[i] % 2 == 1 {\n      \
    \      i += 1;\n        } else if array[j] % 2 == 0 {\n            j -= 1;\n \
    \       } else {\n            i += 1;\n            j -= 1;\n        }\n    }\n\
    \    if array.len() % 2 == 1 {\n        array[i..].sort();\n    } else {\n   \
    \     array[i..].sort_by(|a, b| b.cmp(a));\n    }\n    array", "    let mut array\
    \ = array;\n    if array.len() > 1 {\n        let (mut left, mut right) = array.split_at_mut(array.len()\
    \ / 2);\n        left = sort_array(left.to_vec()).as_mut_slice();\n        right\
    \ = sort_array(right.to_vec()).as_mut_slice();\n        let mut temp = Vec::with_capacity(array.len());\n\
    \        let (mut i, mut j) = (0, 0);\n        while i < left.len() && j < right.len()\
    \ {\n            if left[i] < right[j] {\n                temp.push(left[i]);\n\
    \                i += 1;\n            } else {\n                temp.push(right[j]);\n\
    \                j += 1;\n            }\n        }\n        if i < left.len()\
    \ {\n            temp.extend_from_slice(&left[i..]);\n        }\n        if j\
    \ < right.len() {\n            temp.extend_from_slice(&right[j..]);\n        }\n\
    \        array = temp;\n    }\n    if array.len() > 1 && (array[0] + array[array.len()\
    \ - 1]) % 2 == 0 {\n        array.reverse();\n    }\n    array", "    let mut\
    \ array = array;\n    let len = array.len();\n    if len == 0 {\n        return\
    \ array;\n    }\n    let is_odd = (array[0] + array[len - 1]) % 2 == 1;\n    if\
    \ is_odd {\n        array.sort();\n    } else {\n        array.sort_by(|a, b|\
    \ b.cmp(a));\n    }\n    array", "    let mut array = array;\n    let mut i =\
    \ 0;\n    let mut j = array.len() - 1;\n    while i < j {\n        if array[i]\
    \ % 2 == 0 && array[j] % 2 == 1 {\n            array.swap(i, j);\n           \
    \ i += 1;\n            j -= 1;\n        } else if array[i] % 2 == 1 {\n      \
    \      i += 1;\n        } else if array[j] % 2 == 0 {\n            j -= 1;\n \
    \       } else {\n            i += 1;\n            j -= 1;\n        }\n    }\n\
    \    if array.len() % 2 == 1 {\n        array[i..].sort();\n    } else {\n   \
    \     array[i..].sort_by(|a, b| b.cmp(a));\n    }\n    array", "    let mut array\
    \ = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n    while i\
    \ < j {\n        if array[i] % 2 == 0 && array[j] % 2 == 1 {\n            array.swap(i,\
    \ j);\n            i += 1;\n            j -= 1;\n        } else if array[i] %\
    \ 2 == 1 {\n            i += 1;\n        } else if array[j] % 2 == 0 {\n     \
    \       j -= 1;\n        } else {\n            i += 1;\n            j -= 1;\n\
    \        }\n    }\n    if array.len() % 2 == 1 {\n        array[i..].sort();\n\
    \    } else {\n        array[i..].sort_by(|a, b| b.cmp(a));\n    }\n    array",
  "    let mut array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n\
    \    while i < j {\n        if array[i] % 2 == 0 && array[j] % 2 == 1 {\n    \
    \        array.swap(i, j);\n            i += 1;\n            j -= 1;\n       \
    \ } else if array[i] % 2 == 1 {\n            i += 1;\n        } else if array[j]\
    \ % 2 == 0 {\n            j -= 1;\n        } else {\n            i += 1;\n   \
    \         j -= 1;\n        }\n    }\n    if array.len() % 2 == 1 {\n        array[i..].sort();\n\
    \    } else {\n        array[i..].sort_by(|a, b| b.cmp(a));\n    }\n    array",
  "    let mut array = array;\n    if array.len() > 1 {\n        let (mut left, mut\
    \ right) = array.split_at_mut(array.len() / 2);\n        left = sort_array(left.to_vec()).as_mut_slice();\n\
    \        right = sort_array(right.to_vec()).as_mut_slice();\n        let mut i\
    \ = 0;\n        let mut j = 0;\n        let mut k = 0;\n        while i < left.len()\
    \ && j < right.len() {\n            if left[i] < right[j] {\n                array[k]\
    \ = left[i];\n                i += 1;\n            } else {\n                array[k]\
    \ = right[j];\n                j += 1;\n            }\n            k += 1;\n \
    \       }\n        while i < left.len() {\n            array[k] = left[i];\n \
    \           i += 1;\n            k += 1;\n        }\n        while j < right.len()\
    \ {\n            array[k] = right[j];\n            j += 1;\n            k += 1;\n\
    \        }\n    }\n    if array.len() > 1 && (array[0] + array[array.len() - 1])\
    \ % 2 == 0 {\n        array.reverse();\n    }\n    array", "    if array.len()\
    \ < 2 {\n        return array;\n    }\n    let mut array = array;\n    let (mut\
    \ i, mut j) = (0, array.len() - 1);\n    while i < j {\n        if (array[i] +\
    \ array[j]) % 2 == 0 {\n            array.swap(i, j);\n        }\n        i +=\
    \ 1;\n        j -= 1;\n    }\n    array.sort();\n    array", "    let mut array\
    \ = array;\n    let mut sorted = false;\n    while !sorted {\n        sorted =\
    \ true;\n        for i in 0..array.len() - 1 {\n            if array[i] > array[i\
    \ + 1] {\n                array.swap(i, i + 1);\n                sorted = false;\n\
    \            }\n        }\n    }\n    if array.len() > 0 && (array[0] + array[array.len()\
    \ - 1]) % 2 == 0 {\n        array.reverse();\n    }\n    array", "    let mut\
    \ array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n    while\
    \ i < j {\n        if (array[i] + array[j]) % 2 == 0 {\n            array.swap(i,\
    \ j);\n        }\n        i += 1;\n        j -= 1;\n    }\n    array", "    let\
    \ mut array = array;\n    let sum = array.first().unwrap() + array.last().unwrap();\n\
    \    if sum % 2 == 0 {\n        array.sort_by(|a, b| b.cmp(a));\n    } else {\n\
    \        array.sort_by(|a, b| a.cmp(b));\n    }\n    array", "    let mut array\
    \ = array;\n    let mut start = 0;\n    let mut end = array.len() - 1;\n    while\
    \ start < end {\n        if array[start] % 2 == 0 && array[end] % 2 == 1 {\n \
    \           array.swap(start, end);\n            start += 1;\n            end\
    \ -= 1;\n        } else if array[start] % 2 == 1 {\n            start += 1;\n\
    \        } else if array[end] % 2 == 0 {\n            end -= 1;\n        } else\
    \ {\n            start += 1;\n            end -= 1;\n        }\n    }\n    if\
    \ array.len() % 2 == 0 {\n        array.sort();\n    } else {\n        array.sort_by(|a,\
    \ b| b.cmp(a));\n    }\n    array", "    let mut array = array;\n    let mut i\
    \ = 0;\n    let mut j = array.len() - 1;\n    let mut is_odd = (array[i] + array[j])\
    \ % 2 == 1;\n    while i < j {\n        if is_odd {\n            if array[i] %\
    \ 2 == 0 {\n                i += 1;\n            } else if array[j] % 2 == 1 {\n\
    \                j -= 1;\n            } else {\n                array.swap(i,\
    \ j);\n                i += 1;\n                j -= 1;\n            }\n     \
    \   } else {\n            if array[i] % 2 == 1 {\n                i += 1;\n  \
    \          } else if array[j] % 2 == 0 {\n                j -= 1;\n          \
    \  } else {\n                array.swap(i, j);\n                i += 1;\n    \
    \            j -= 1;\n            }\n        }\n    }\n    array.sort_by(|a, b|\
    \ {\n        if is_odd {\n            a.cmp(b)\n        } else {\n           \
    \ b.cmp(a)\n        }\n    });\n    array", "    let mut array = array;\n    let\
    \ sum = array.first().unwrap() + array.last().unwrap();\n    if sum % 2 == 0 {\n\
    \        array.sort_by(|a, b| b.cmp(a));\n    } else {\n        array.sort_by(|a,\
    \ b| a.cmp(b));\n    }\n    array", "    let mut array = array;\n    let mut i\
    \ = 0;\n    let mut j = array.len() - 1;\n    while i < j {\n        if array[i]\
    \ % 2 == 0 && array[j] % 2 == 1 {\n            array.swap(i, j);\n           \
    \ i += 1;\n            j -= 1;\n        } else if array[i] % 2 == 1 {\n      \
    \      i += 1;\n        } else if array[j] % 2 == 0 {\n            j -= 1;\n \
    \       } else {\n            i += 1;\n            j -= 1;\n        }\n    }\n\
    \    if array.len() % 2 == 1 {\n        array[i..].sort();\n    } else {\n   \
    \     array[i..].sort_by(|a, b| b.cmp(a));\n    }\n    array", "    let mut array\
    \ = array;\n    if array.len() > 1 {\n        let (mut left, mut right) = array.split_at_mut(array.len()\
    \ / 2);\n        left = sort_array(left.to_vec()).as_mut_slice();\n        right\
    \ = sort_array(right.to_vec()).as_mut_slice();\n        let mut i = 0;\n     \
    \   let mut j = 0;\n        let mut k = 0;\n        while i < left.len() && j\
    \ < right.len() {\n            if left[i] < right[j] {\n                array[k]\
    \ = left[i];\n                i += 1;\n            } else {\n                array[k]\
    \ = right[j];\n                j += 1;\n            }\n            k += 1;\n \
    \       }\n        while i < left.len() {\n            array[k] = left[i];\n \
    \           i += 1;\n            k += 1;\n        }\n        while j < right.len()\
    \ {\n            array[k] = right[j];\n            j += 1;\n            k += 1;\n\
    \        }\n    }\n    array", "    let mut array = array;\n    if array.len()\
    \ > 1 {\n        let (first, last) = (array[0], array[array.len() - 1]);\n   \
    \     let (mut left, mut right) = (0, array.len() - 1);\n        while left <\
    \ right {\n            if (first + last) % 2 == 0 {\n                if array[left]\
    \ < array[right] {\n                    array.swap(left, right);\n           \
    \     }\n            } else {\n                if array[left] > array[right] {\n\
    \                    array.swap(left, right);\n                }\n           \
    \ }\n            left += 1;\n            right -= 1;\n        }\n    }\n    array",
  "    let mut array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n\
    \    while i < j {\n        if array[i] % 2 == 0 && array[j] % 2 == 1 {\n    \
    \        array.swap(i, j);\n            i += 1;\n            j -= 1;\n       \
    \ } else if array[i] % 2 == 1 {\n            i += 1;\n        } else if array[j]\
    \ % 2 == 0 {\n            j -= 1;\n        } else {\n            i += 1;\n   \
    \         j -= 1;\n        }\n    }\n    if array.len() % 2 == 1 {\n        array[i..].sort();\n\
    \    } else {\n        array[i..].sort_by(|a, b| b.cmp(a));\n    }\n    array",
  "    let mut array = array;\n    let sum = array.first().unwrap() + array.last().unwrap();\n\
    \    if sum % 2 == 0 {\n        array.sort_by(|a, b| b.cmp(a));\n    } else {\n\
    \        array.sort_by(|a, b| a.cmp(b));\n    }\n    array", "    let mut array\
    \ = array;\n    if array.len() > 1 {\n        if (array[0] + array[array.len()\
    \ - 1]) % 2 == 0 {\n            array.sort_by(|a, b| b.cmp(a));\n        } else\
    \ {\n            array.sort_by(|a, b| a.cmp(b));\n        }\n    }\n    array",
  "    let mut array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n\
    \    while i < j {\n        if array[i] % 2 == 0 && array[j] % 2 == 1 {\n    \
    \        array.swap(i, j);\n            i += 1;\n            j -= 1;\n       \
    \ } else if array[i] % 2 == 1 {\n            i += 1;\n        } else if array[j]\
    \ % 2 == 0 {\n            j -= 1;\n        } else {\n            i += 1;\n   \
    \         j -= 1;\n        }\n    }\n    if array.len() % 2 == 1 {\n        array[i..].sort();\n\
    \    } else {\n        array[i..].sort_by(|a, b| b.cmp(a));\n    }\n    array",
  "    let mut array = array;\n    let len = array.len();\n    let mut i = 0;\n  \
    \  let mut j = len - 1;\n    let mut sorted = false;\n    while !sorted {\n  \
    \      sorted = true;\n        while i < j {\n            if array[i] > array[i\
    \ + 1] {\n                array.swap(i, i + 1);\n                sorted = false;\n\
    \            }\n            i += 1;\n        }\n        j -= 1;\n        while\
    \ i > j {\n            if array[i] < array[i - 1] {\n                array.swap(i,\
    \ i - 1);\n                sorted = false;\n            }\n            i -= 1;\n\
    \        }\n        j += 1;\n    }\n    array", "    let mut array = array;\n\
    \    if array.len() > 1 {\n        let (first, last) = (array[0], array[array.len()\
    \ - 1]);\n        if (first + last) % 2 == 0 {\n            array.sort_by(|a,\
    \ b| b.cmp(a));\n        } else {\n            array.sort_by(|a, b| a.cmp(b));\n\
    \        }\n    }\n    array", "    let mut array = array;\n    let mut i = 0;\n\
    \    let mut j = array.len() - 1;\n    while i < j {\n        if array[i] % 2\
    \ == 0 && array[j] % 2 == 1 {\n            array.swap(i, j);\n            i +=\
    \ 1;\n            j -= 1;\n        } else if array[i] % 2 == 1 {\n           \
    \ i += 1;\n        } else if array[j] % 2 == 0 {\n            j -= 1;\n      \
    \  } else {\n            i += 1;\n            j -= 1;\n        }\n    }\n    if\
    \ array.len() % 2 == 1 {\n        array[i..].sort();\n    } else {\n        array[i..].sort_by(|a,\
    \ b| b.cmp(a));\n    }\n    array", "    let mut array = array;\n    let mut i\
    \ = 0;\n    let mut j = array.len() - 1;\n    let mut sorted = false;\n    while\
    \ !sorted {\n        sorted = true;\n        while i < j {\n            if array[i]\
    \ > array[i + 1] {\n                array.swap(i, i + 1);\n                sorted\
    \ = false;\n            }\n            i += 1;\n        }\n        i = 0;\n  \
    \      while i < j {\n            if array[j - 1] > array[j] {\n             \
    \   array.swap(j - 1, j);\n                sorted = false;\n            }\n  \
    \          j -= 1;\n        }\n        j = array.len() - 1;\n    }\n    array",
  "    let mut array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n\
    \    let mut sorted = false;\n    while !sorted {\n        sorted = true;\n  \
    \      while i < j {\n            if array[i] > array[i + 1] {\n             \
    \   array.swap(i, i + 1);\n                sorted = false;\n            }\n  \
    \          i += 1;\n        }\n        while j > i {\n            if array[j]\
    \ < array[j - 1] {\n                array.swap(j, j - 1);\n                sorted\
    \ = false;\n            }\n            j -= 1;\n        }\n    }\n    array",
  "    let mut array = array;\n    if array.len() > 1 {\n        let mut i = 0;\n\
    \        let mut j = array.len() - 1;\n        while i < j {\n            if array[i]\
    \ % 2 == 0 && array[j] % 2 == 1 {\n                array.swap(i, j);\n       \
    \         i += 1;\n                j -= 1;\n            } else if array[i] % 2\
    \ == 1 {\n                i += 1;\n            } else if array[j] % 2 == 0 {\n\
    \                j -= 1;\n            } else {\n                i += 1;\n    \
    \            j -= 1;\n            }\n        }\n        if i == j && array[i]\
    \ % 2 == 0 {\n            array.swap(i, i + 1);\n        }\n        if array[0]\
    \ % 2 == 0 {\n            array.sort_by(|a, b| b.cmp(a));\n        } else {\n\
    \            array.sort();\n        }\n    }\n    array", "    let mut array =\
    \ array;\n    if array.len() > 1 {\n        let (mut left, mut right) = array.split_at_mut(array.len()\
    \ / 2);\n        left = sort_array(left.to_vec()).as_mut_slice();\n        right\
    \ = sort_array(right.to_vec()).as_mut_slice();\n        let mut i = 0;\n     \
    \   let mut j = 0;\n        while i < left.len() && j < right.len() {\n      \
    \      if left[i] < right[j] {\n                array[i + j] = left[i];\n    \
    \            i += 1;\n            } else {\n                array[i + j] = right[j];\n\
    \                j += 1;\n            }\n        }\n        while i < left.len()\
    \ {\n            array[i + j] = left[i];\n            i += 1;\n        }\n   \
    \     while j < right.len() {\n            array[i + j] = right[j];\n        \
    \    j += 1;\n        }\n    }\n    array", "    let mut array = array;\n    if\
    \ array.len() > 1 {\n        let mut i = 0;\n        let mut j = array.len() -\
    \ 1;\n        while i < j {\n            if array[i] % 2 == 0 && array[j] % 2\
    \ == 1 {\n                array.swap(i, j);\n                i += 1;\n       \
    \         j -= 1;\n            } else if array[i] % 2 == 1 {\n               \
    \ i += 1;\n            } else if array[j] % 2 == 0 {\n                j -= 1;\n\
    \            } else {\n                i += 1;\n                j -= 1;\n    \
    \        }\n        }\n        if array[i] % 2 == 0 {\n            array[i..].sort();\n\
    \        } else {\n            array[..=i].sort();\n            array[..=i].reverse();\n\
    \        }\n    }\n    array", "    let mut array = array;\n    let sum = array.first().unwrap()\
    \ + array.last().unwrap();\n    if sum % 2 == 0 {\n        array.sort_by(|a, b|\
    \ b.cmp(a));\n    } else {\n        array.sort_by(|a, b| a.cmp(b));\n    }\n \
    \   array", "    let mut array = array;\n    if array.len() > 1 {\n        let\
    \ (first, last) = (array[0], array[array.len() - 1]);\n        if (first + last)\
    \ % 2 == 0 {\n            array.sort_by(|a, b| b.cmp(a));\n        } else {\n\
    \            array.sort_by(|a, b| a.cmp(b));\n        }\n    }\n    array", " \
    \   let mut array = array;\n    let sum = array.first().unwrap() + array.last().unwrap();\n\
    \    if sum % 2 == 0 {\n        array.sort_by(|a, b| b.cmp(a));\n    } else {\n\
    \        array.sort_by(|a, b| a.cmp(b));\n    }\n    array", "    let mut array\
    \ = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n    while i\
    \ < j {\n        if array[i] % 2 == 0 && array[j] % 2 == 1 {\n            array.swap(i,\
    \ j);\n            i += 1;\n            j -= 1;\n        } else if array[i] %\
    \ 2 == 1 {\n            i += 1;\n        } else if array[j] % 2 == 0 {\n     \
    \       j -= 1;\n        }\n    }\n    if array.len() % 2 == 0 {\n        array.sort();\n\
    \    } else {\n        array.sort_by(|a, b| b.cmp(a));\n    }\n    array", " \
    \   let mut array = array;\n    let len = array.len();\n    if len == 0 {\n  \
    \      return array;\n    }\n    let mut i = 0;\n    let mut j = len - 1;\n  \
    \  while i < j {\n        if array[i] > array[j] {\n            array.swap(i,\
    \ j);\n        }\n        i += 1;\n        j -= 1;\n    }\n    array", "    let\
    \ mut array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n \
    \   while i < j {\n        if (array[i] + array[j]) % 2 == 0 {\n            array.swap(i,\
    \ j);\n        }\n        i += 1;\n        j -= 1;\n    }\n    array", "    let\
    \ mut array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n \
    \   while i < j {\n        if array[i] % 2 == 0 && array[j] % 2 == 1 {\n     \
    \       array.swap(i, j);\n            i += 1;\n            j -= 1;\n        }\
    \ else if array[i] % 2 == 1 {\n            i += 1;\n        } else if array[j]\
    \ % 2 == 0 {\n            j -= 1;\n        }\n    }\n    if i == j && array[i]\
    \ % 2 == 0 {\n        array.swap(i, j);\n    }\n    if array.len() % 2 == 0 {\n\
    \        array.sort();\n    } else {\n        array.sort_by(|a, b| b.cmp(a));\n\
    \    }\n    array", "    let mut array = array;\n    if array.len() < 2 {\n  \
    \      return array;\n    }\n    let (mut i, mut j) = (0, array.len() - 1);\n\
    \    while i < j {\n        if (array[i] + array[j]) % 2 == 0 {\n            array.swap(i,\
    \ j);\n        }\n        i += 1;\n        j -= 1;\n    }\n    array", "    let\
    \ mut array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n \
    \   while i < j {\n        if array[i] % 2 == 0 && array[j] % 2 == 1 {\n     \
    \       array.swap(i, j);\n            i += 1;\n            j -= 1;\n        }\
    \ else if array[i] % 2 == 1 {\n            i += 1;\n        } else if array[j]\
    \ % 2 == 0 {\n            j -= 1;\n        } else {\n            i += 1;\n   \
    \         j -= 1;\n        }\n    }\n    if array.len() % 2 == 1 {\n        array[i..].sort();\n\
    \    } else {\n        array[i..].sort_by(|a, b| b.cmp(a));\n    }\n    array",
  "    let mut array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n\
    \    while i < j {\n        if array[i] % 2 == 0 && array[j] % 2 == 1 {\n    \
    \        array.swap(i, j);\n            i += 1;\n            j -= 1;\n       \
    \ } else if array[i] % 2 == 1 {\n            i += 1;\n        } else if array[j]\
    \ % 2 == 0 {\n            j -= 1;\n        }\n    }\n    if array.len() % 2 ==\
    \ 0 {\n        array.sort();\n    } else {\n        array.sort_by(|a, b| b.cmp(a));\n\
    \    }\n    array", "    let mut array = array;\n    let mut odd_index = 0;\n\
    \    let mut even_index = array.len() - 1;\n    let mut odd_array = Vec::new();\n\
    \    let mut even_array = Vec::new();\n    for i in 0..array.len() {\n       \
    \ if i % 2 == 0 {\n            odd_array.push(array[i]);\n        } else {\n \
    \           even_array.push(array[i]);\n        }\n    }\n    odd_array.sort();\n\
    \    even_array.sort();\n    even_array.reverse();\n    for i in 0..array.len()\
    \ {\n        if i % 2 == 0 {\n            array[i] = odd_array[odd_index];\n \
    \           odd_index += 1;\n        } else {\n            array[i] = even_array[even_index];\n\
    \            even_index -= 1;\n        }\n    }\n    array", "    let mut array\
    \ = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n    while i\
    \ < j {\n        if array[i] % 2 == 0 && array[j] % 2 == 1 {\n            array.swap(i,\
    \ j);\n            i += 1;\n            j -= 1;\n        } else if array[i] %\
    \ 2 == 1 {\n            i += 1;\n        } else if array[j] % 2 == 0 {\n     \
    \       j -= 1;\n        } else {\n            i += 1;\n            j -= 1;\n\
    \        }\n    }\n    if array.len() % 2 == 1 {\n        array[i..].sort();\n\
    \    } else {\n        array[i..].sort_by(|a, b| b.cmp(a));\n    }\n    array",
  "    let mut array = array;\n    if array.len() > 1 {\n        let (mut left, mut\
    \ right) = array.split_at_mut(array.len() / 2);\n        left = sort_array(left.to_vec()).as_mut_slice();\n\
    \        right = sort_array(right.to_vec()).as_mut_slice();\n        let mut i\
    \ = 0;\n        let mut j = 0;\n        let mut k = 0;\n        while i < left.len()\
    \ && j < right.len() {\n            if left[i] < right[j] {\n                array[k]\
    \ = left[i];\n                i += 1;\n            } else {\n                array[k]\
    \ = right[j];\n                j += 1;\n            }\n            k += 1;\n \
    \       }\n        while i < left.len() {\n            array[k] = left[i];\n \
    \           i += 1;\n            k += 1;\n        }\n        while j < right.len()\
    \ {\n            array[k] = right[j];\n            j += 1;\n            k += 1;\n\
    \        }\n    }\n    if array.len() > 1 && (array[0] + array[array.len() - 1])\
    \ % 2 == 0 {\n        array.reverse();\n    }\n    array", "    let mut array\
    \ = array;\n    let len = array.len();\n    if len <= 1 {\n        return array;\n\
    \    }\n    let mut i = 0;\n    let mut j = len - 1;\n    while i < j {\n    \
    \    if array[i] % 2 == 0 && array[j] % 2 == 1 {\n            array.swap(i, j);\n\
    \            i += 1;\n            j -= 1;\n        } else if array[i] % 2 == 1\
    \ {\n            i += 1;\n        } else if array[j] % 2 == 0 {\n            j\
    \ -= 1;\n        }\n    }\n    if len % 2 == 0 {\n        array[i..].sort_by(|a,\
    \ b| b.cmp(a));\n    } else {\n        array[i..].sort_by(|a, b| a.cmp(b));\n\
    \    }\n    array", "    let mut array = array;\n    let mut i = 0;\n    let mut\
    \ j = array.len() - 1;\n    while i < j {\n        if array[i] % 2 == 0 && array[j]\
    \ % 2 == 1 {\n            array.swap(i, j);\n            i += 1;\n           \
    \ j -= 1;\n        } else if array[i] % 2 == 1 {\n            i += 1;\n      \
    \  } else if array[j] % 2 == 0 {\n            j -= 1;\n        } else {\n    \
    \        i += 1;\n            j -= 1;\n        }\n    }\n    if array.len() %\
    \ 2 == 1 {\n        array[i..].sort();\n    } else {\n        array[i..].sort_by(|a,\
    \ b| b.cmp(a));\n    }\n    array", "    let mut array = array;\n    let mut i\
    \ = 0;\n    let mut j = array.len() - 1;\n    while i < j {\n        if array[i]\
    \ % 2 == 0 && array[j] % 2 == 1 {\n            array.swap(i, j);\n           \
    \ i += 1;\n            j -= 1;\n        } else if array[i] % 2 == 1 {\n      \
    \      i += 1;\n        } else if array[j] % 2 == 0 {\n            j -= 1;\n \
    \       } else {\n            i += 1;\n            j -= 1;\n        }\n    }\n\
    \    if array.len() % 2 == 1 {\n        array[i..].sort();\n    } else {\n   \
    \     array[i..].sort_by(|a, b| b.cmp(a));\n    }\n    array", "    let mut array\
    \ = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n    while i\
    \ < j {\n        if array[i] % 2 == 0 && array[j] % 2 == 1 {\n            array.swap(i,\
    \ j);\n            i += 1;\n            j -= 1;\n        } else if array[i] %\
    \ 2 == 1 {\n            i += 1;\n        } else if array[j] % 2 == 0 {\n     \
    \       j -= 1;\n        } else {\n            i += 1;\n            j -= 1;\n\
    \        }\n    }\n    if array.len() % 2 == 1 {\n        array[i..].sort();\n\
    \    } else {\n        array[i..].sort_by(|a, b| b.cmp(a));\n    }\n    array"]
stop_tokens:
- "\n}"

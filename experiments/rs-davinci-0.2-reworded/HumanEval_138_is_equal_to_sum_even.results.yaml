name: HumanEval_138_is_equal_to_sum_even
language: rs
results:
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    let mut sum = 0;\n\
    \    let mut count = 0;\n    let mut i = 2;\n    while sum < n && count < 4 {\n\
    \        if i % 2 == 0 {\n            sum += i;\n            count += 1;\n   \
    \     }\n        i += 1;\n    }\n    sum == n\n}\n\nfn main() {\n    let candidate\
    \ = is_equal_to_sum_even;\n    assert_eq!(candidate(4), false);\n    assert_eq!(candidate(6),\
    \ false);\n    assert_eq!(candidate(8), true);\n    assert_eq!(candidate(10),\
    \ true);\n    assert_eq!(candidate(11), false);\n    assert_eq!(candidate(12),\
    \ true);\n    assert_eq!(candidate(13), false);\n    assert_eq!(candidate(16),\
    \ true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `true`,\n right: `false`', /tmp/tmpwpe60agh.rs:26:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmp63exqrip.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpj2txojj7.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmp95ffvqsn.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpopekf1uv.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpse5ororn.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmp082kdf9f.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpg7y_uns9.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpw6y17ipr.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpedplxo8j.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpefe4_lm8.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpqa_fj90o.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    let mut result = false;\n\
    \    for i in 0..n {\n        for j in 0..n {\n            for k in 0..n {\n \
    \               for l in 0..n {\n                    if i + j + k + l == n &&\
    \ i % 2 == 0 && j % 2 == 0 && k % 2 == 0 && l % 2 == 0 {\n                   \
    \     result = true;\n                    }\n                }\n            }\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n\
    \    assert_eq!(candidate(4), false);\n    assert_eq!(candidate(6), false);\n\
    \    assert_eq!(candidate(8), true);\n    assert_eq!(candidate(10), true);\n \
    \   assert_eq!(candidate(11), false);\n    assert_eq!(candidate(12), true);\n\
    \    assert_eq!(candidate(13), false);\n    assert_eq!(candidate(16), true);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `true`,\n right: `false`', /tmp/tmpjl471rpq.rs:27:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmp9tuaxvu2.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    let mut result = false;\n\
    \    let mut i = 0;\n    while i <= n / 4 {\n        let mut j = 0;\n        while\
    \ j <= n / 4 {\n            let mut k = 0;\n            while k <= n / 4 {\n \
    \               let mut l = 0;\n                while l <= n / 4 {\n         \
    \           if i + j + k + l == n {\n                        result = true;\n\
    \                    }\n                    l += 2;\n                }\n     \
    \           k += 2;\n            }\n            j += 2;\n        }\n        i\
    \ += 2;\n    }\n    result\n}\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n\
    \    assert_eq!(candidate(4), false);\n    assert_eq!(candidate(6), false);\n\
    \    assert_eq!(candidate(8), true);\n    assert_eq!(candidate(10), true);\n \
    \   assert_eq!(candidate(11), false);\n    assert_eq!(candidate(12), true);\n\
    \    assert_eq!(candidate(13), false);\n    assert_eq!(candidate(16), true);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `false`,\n right: `true`', /tmp/tmp3bm8xkw3.rs:38:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmp5djdq5cq.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpoqlw5vj6.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpr38_emo0.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpa42buae8.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    let mut sum = 0;\n\
    \    let mut count = 0;\n    let mut i = 2;\n    while sum < n && count < 4 {\n\
    \        if i % 2 == 0 {\n            sum += i;\n            count += 1;\n   \
    \     }\n        i += 1;\n    }\n    sum == n\n}\n\nfn main() {\n    let candidate\
    \ = is_equal_to_sum_even;\n    assert_eq!(candidate(4), false);\n    assert_eq!(candidate(6),\
    \ false);\n    assert_eq!(candidate(8), true);\n    assert_eq!(candidate(10),\
    \ true);\n    assert_eq!(candidate(11), false);\n    assert_eq!(candidate(12),\
    \ true);\n    assert_eq!(candidate(13), false);\n    assert_eq!(candidate(16),\
    \ true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `true`,\n right: `false`', /tmp/tmp15k_o0qo.rs:26:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpeh76cluy.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmp6kcnp9wy.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpy80hpvom.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpbl110dg6.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpaqk59gap.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmp_84kwk_p.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpitxvzhtc.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmp_fmk02b6.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpzgd9r0rm.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmppnsnn2ap.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpgz5vfpax.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpwejon199.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpinqhj_tj.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!();\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmp5285e6ib.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmp9ev530fq.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmped3oas1e.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpvvi4jn4h.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    let mut result = false;\n\
    \    let mut a = 2;\n    let mut b = 2;\n    let mut c = 2;\n    let mut d = 2;\n\
    \    while a <= n / 4 {\n        while b <= n / 3 {\n            while c <= n\
    \ / 2 {\n                while d <= n {\n                    if a + b + c + d\
    \ == n {\n                        result = true;\n                    }\n    \
    \                d += 2;\n                }\n                c += 2;\n       \
    \     }\n            b += 2;\n        }\n        a += 2;\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpndv0p810.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    // TODO\n    false\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `false`,\n right: `true`', /tmp/tmpfeou6l4z.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    // TODO\n    false\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `false`,\n right: `true`', /tmp/tmp68qo427w.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpa02ymo4c.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmp3f2d0v6i.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpy2ntsjv1.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmp1cz9lioe.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpijmzilqt.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpi3gp4j9s.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmp2qjxc_1s.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmp28ymbjfa.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    // TODO\n    false\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `false`,\n right: `true`', /tmp/tmpkd75rgtn.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!();\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpsc572r3x.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmp63rk8z7t.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    let mut result = false;\n\
    \    let mut i = 0;\n    let mut j = 0;\n    let mut k = 0;\n    let mut l = 0;\n\
    \    while i <= n {\n        while j <= n {\n            while k <= n {\n    \
    \            while l <= n {\n                    if i + j + k + l == n && i %\
    \ 2 == 0 && j % 2 == 0 && k % 2 == 0 && l % 2 == 0 {\n                       \
    \ result = true;\n                    }\n                    l += 2;\n       \
    \         }\n                k += 2;\n            }\n            j += 2;\n   \
    \     }\n        i += 2;\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = is_equal_to_sum_even;\n    assert_eq!(candidate(4), false);\n    assert_eq!(candidate(6),\
    \ false);\n    assert_eq!(candidate(8), true);\n    assert_eq!(candidate(10),\
    \ true);\n    assert_eq!(candidate(11), false);\n    assert_eq!(candidate(12),\
    \ true);\n    assert_eq!(candidate(13), false);\n    assert_eq!(candidate(16),\
    \ true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `true`,\n right: `false`', /tmp/tmp8w3g71rn.rs:35:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpgdm63g6j.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmprz7yl1s7.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpxm8hpfw9.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmphokc6ynb.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpuo_ziu3d.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpfegdsau8.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpxzczgzx7.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpylcpn71b.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    // TODO\n    false\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `false`,\n right: `true`', /tmp/tmp0z51lv8y.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpy5q06t8y.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmp5ae8lgfe.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpc7uoz95_.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmp0wc8i5lu.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpr4ixibk8.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    // TODO\n    false\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `false`,\n right: `true`', /tmp/tmpacelrsbo.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpo36a37tx.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpavb_rlie.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpaclzuqvx.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpoyizn2gr.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmp7q6vojb6.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpig1dntra.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    // TODO\n    false\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `false`,\n right: `true`', /tmp/tmp6z7n3yq7.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmptf4bqae2.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpws8p65xn.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpso6vjo0u.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    let mut sum = 0;\n\
    \    let mut count = 0;\n    for i in 1..n {\n        if i % 2 == 0 {\n      \
    \      sum += i;\n            count += 1;\n        }\n        if sum == n && count\
    \ == 4 {\n            return true;\n        }\n    }\n    false\n}\n\nfn main()\
    \ {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4), false);\n\
    \    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8), true);\n \
    \   assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11), false);\n\
    \    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13), false);\n\
    \    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `false`,\n right: `true`', /tmp/tmpz4898lw_.rs:28:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmp4xu867tu.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpu0jpgmz9.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    // TODO\n    false\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `false`,\n right: `true`', /tmp/tmpppm_4gy5.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpsflfc_qz.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpi4v0s5ut.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpo8vlzmb_.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmp0zeufa3o.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!();\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpsl68awr7.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpf79avcjb.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpq2a_vzg8.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmp2k83flh9.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!();\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpin0d5lm_.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    let mut result = false;\n\
    \    for i in 0..n {\n        for j in 0..n {\n            for k in 0..n {\n \
    \               for l in 0..n {\n                    if i + j + k + l == n &&\
    \ i % 2 == 0 && j % 2 == 0 && k % 2 == 0 && l % 2 == 0 {\n                   \
    \     result = true;\n                    }\n                }\n            }\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n\
    \    assert_eq!(candidate(4), false);\n    assert_eq!(candidate(6), false);\n\
    \    assert_eq!(candidate(8), true);\n    assert_eq!(candidate(10), true);\n \
    \   assert_eq!(candidate(11), false);\n    assert_eq!(candidate(12), true);\n\
    \    assert_eq!(candidate(13), false);\n    assert_eq!(candidate(16), true);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `true`,\n right: `false`', /tmp/tmpk_09v_a2.rs:27:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmp2hqjo60i.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpl6_t8mlo.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpyfae_24v.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpa13uvose.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmppbrm0m3a.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpdp84pu_x.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmprddlu_47.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpq31gc5rt.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpj3qtddsa.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpdehj8yht.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    let mut result = false;\n\
    \    for i in 0..n {\n        for j in 0..n {\n            for k in 0..n {\n \
    \               for l in 0..n {\n                    if i + j + k + l == n &&\
    \ i % 2 == 0 && j % 2 == 0 && k % 2 == 0 && l % 2 == 0 {\n                   \
    \     result = true;\n                    }\n                }\n            }\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n\
    \    assert_eq!(candidate(4), false);\n    assert_eq!(candidate(6), false);\n\
    \    assert_eq!(candidate(8), true);\n    assert_eq!(candidate(10), true);\n \
    \   assert_eq!(candidate(11), false);\n    assert_eq!(candidate(12), true);\n\
    \    assert_eq!(candidate(13), false);\n    assert_eq!(candidate(16), true);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `true`,\n right: `false`', /tmp/tmp4xoluxqz.rs:27:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpd4u1ofiw.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpxrktuypk.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    let mut sum = 0;\n\
    \    let mut count = 0;\n    for i in 1..n {\n        if i % 2 == 0 {\n      \
    \      sum += i;\n            count += 1;\n        }\n        if sum == n && count\
    \ == 4 {\n            return true;\n        }\n    }\n    false\n}\n\nfn main()\
    \ {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4), false);\n\
    \    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8), true);\n \
    \   assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11), false);\n\
    \    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13), false);\n\
    \    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `false`,\n right: `true`', /tmp/tmp1ug_v4k6.rs:28:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmp2l4lucyc.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmp326vdtxf.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpbmkl54o5.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpok03fwvn.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmphuwl88k9.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmps3rf_g4i.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    // TODO\n    false\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `false`,\n right: `true`', /tmp/tmpy_mi40pc.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!();\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmp2dpw95e6.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    // TODO\n    false\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `false`,\n right: `true`', /tmp/tmpahlmkpri.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmp3pdoo4sd.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmp4hnrn_2d.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpgtwgx2ht.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmphx3nnzdv.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmphec02ph4.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpqxj8m27e.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmp8e6u3xa3.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmp614d6g7w.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmp57xkti3g.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpbd652256.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpff2hbnwh.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    let mut sum = 0;\n\
    \    let mut count = 0;\n    let mut i = 2;\n    while sum < n && count < 4 {\n\
    \        if i % 2 == 0 {\n            sum += i;\n            count += 1;\n   \
    \     }\n        i += 1;\n    }\n    sum == n\n}\n\nfn main() {\n    let candidate\
    \ = is_equal_to_sum_even;\n    assert_eq!(candidate(4), false);\n    assert_eq!(candidate(6),\
    \ false);\n    assert_eq!(candidate(8), true);\n    assert_eq!(candidate(10),\
    \ true);\n    assert_eq!(candidate(11), false);\n    assert_eq!(candidate(12),\
    \ true);\n    assert_eq!(candidate(13), false);\n    assert_eq!(candidate(16),\
    \ true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `true`,\n right: `false`', /tmp/tmp5_y6w1cy.rs:26:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmp1s5g8r7i.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    let mut result = false;\n\
    \    let mut i = 2;\n    let mut j = 2;\n    let mut k = 2;\n    let mut l = 2;\n\
    \    while i <= n / 4 {\n        while j <= n / 3 {\n            while k <= n\
    \ / 2 {\n                while l <= n {\n                    if i + j + k + l\
    \ == n {\n                        result = true;\n                    }\n    \
    \                l += 2;\n                }\n                k += 2;\n       \
    \     }\n            j += 2;\n        }\n        i += 2;\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!();\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmp05muxsst.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmp41y9d9gm.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpsg8hafsj.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpn1gmbxj_.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpc1yq2n7b.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpntoi0fty.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmp69v80csf.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    let mut sum = 0;\n\
    \    let mut count = 0;\n    let mut i = 2;\n    while sum < n && count < 4 {\n\
    \        if i % 2 == 0 {\n            sum += i;\n            count += 1;\n   \
    \     }\n        i += 1;\n    }\n    sum == n\n}\n\nfn main() {\n    let candidate\
    \ = is_equal_to_sum_even;\n    assert_eq!(candidate(4), false);\n    assert_eq!(candidate(6),\
    \ false);\n    assert_eq!(candidate(8), true);\n    assert_eq!(candidate(10),\
    \ true);\n    assert_eq!(candidate(11), false);\n    assert_eq!(candidate(12),\
    \ true);\n    assert_eq!(candidate(13), false);\n    assert_eq!(candidate(16),\
    \ true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `true`,\n right: `false`', /tmp/tmp0t39avmh.rs:26:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpya4m16zz.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpmlh15ao1.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpg3qyxe_e.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmp6a5_hvmz.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    // TODO\n    false\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `false`,\n right: `true`', /tmp/tmp1idpf2hh.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpdg9ylidc.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    // TODO\n    false\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `false`,\n right: `true`', /tmp/tmpblz4xcei.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpx60mtgag.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmp3e3behxs.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmp8v04izpz.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpdisuwqwu.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpeou50sms.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmptq1hxf33.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmp7e2zfl3w.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpduh_8d96.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpy0lo35ai.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpdi0opdeo.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpps3hpk38.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpmh45wvmo.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmplj7y1_ww.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmp3wb9y3ez.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    // TODO\n    false\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `false`,\n right: `true`', /tmp/tmpgzgdkvby.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpbrh65oq7.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpg0amhg1p.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmppc_2l98o.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    let mut sum = 0;\n\
    \    let mut count = 0;\n    let mut i = 2;\n    while sum < n && count < 4 {\n\
    \        if i % 2 == 0 {\n            sum += i;\n            count += 1;\n   \
    \     }\n        i += 1;\n    }\n    sum == n\n}\n\nfn main() {\n    let candidate\
    \ = is_equal_to_sum_even;\n    assert_eq!(candidate(4), false);\n    assert_eq!(candidate(6),\
    \ false);\n    assert_eq!(candidate(8), true);\n    assert_eq!(candidate(10),\
    \ true);\n    assert_eq!(candidate(11), false);\n    assert_eq!(candidate(12),\
    \ true);\n    assert_eq!(candidate(13), false);\n    assert_eq!(candidate(16),\
    \ true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `true`,\n right: `false`', /tmp/tmpsn640fjw.rs:26:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpy2y8i11h.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmp46m_uq6b.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    let mut result = false;\n\
    \    let mut i = 2;\n    while i <= n / 4 {\n        let j = n - i;\n        if\
    \ j % 2 == 0 {\n            let k = j / 2;\n            let l = n - i - k;\n \
    \           if l % 2 == 0 {\n                result = true;\n                break;\n\
    \            }\n        }\n        i += 2;\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4), false);\n\
    \    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8), true);\n \
    \   assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11), false);\n\
    \    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13), false);\n\
    \    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `false`,\n right: `true`', /tmp/tmpw97z3dyg.rs:31:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpqda4c91m.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmplo7d4qjw.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmp8w7dyud_.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpa1p7cysy.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!();\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmp7yjwijjx.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmp3bw2hh7q.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpm6sfu52r.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!();\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpjt6q9y5b.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmprppv7c33.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpu4va2enz.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpdsv3cn0r.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpa6cy2x3y.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpw4tc1j4v.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpqwv8lebg.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpuu5yjhp7.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpif7lulho.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpqt6quwgo.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!();\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmph2v3fg4r.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpwkz9k9l0.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpy51i7uxl.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmphlt59tx_.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    // TODO\n    false\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `false`,\n right: `true`', /tmp/tmph7nawlbc.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    let mut result = false;\n\
    \    let mut sum = 0;\n    let mut count = 0;\n    let mut i = 2;\n    while i\
    \ <= n {\n        if i % 2 == 0 {\n            sum += i;\n            count +=\
    \ 1;\n        }\n        if sum == n && count == 4 {\n            result = true;\n\
    \            break;\n        }\n        i += 1;\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4), false);\n\
    \    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8), true);\n \
    \   assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11), false);\n\
    \    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13), false);\n\
    \    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `false`,\n right: `true`', /tmp/tmpru9tywsa.rs:32:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmppgoaervd.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpsge7qyam.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpvaghnqx4.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpji6eyiq4.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    let mut sum = 0;\n\
    \    let mut count = 0;\n    let mut i = 2;\n    while sum < n && count < 4 {\n\
    \        if i % 2 == 0 {\n            sum += i;\n            count += 1;\n   \
    \     }\n        i += 1;\n    }\n    sum == n\n}\n\nfn main() {\n    let candidate\
    \ = is_equal_to_sum_even;\n    assert_eq!(candidate(4), false);\n    assert_eq!(candidate(6),\
    \ false);\n    assert_eq!(candidate(8), true);\n    assert_eq!(candidate(10),\
    \ true);\n    assert_eq!(candidate(11), false);\n    assert_eq!(candidate(12),\
    \ true);\n    assert_eq!(candidate(13), false);\n    assert_eq!(candidate(16),\
    \ true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `true`,\n right: `false`', /tmp/tmpbc6lvigk.rs:26:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmp83v3m_w6.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpz475rj20.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpp4t8r97x.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpa4kbcw_w.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmp33jbnirc.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(4)\n/// false\n\
    /// >>> is_equal_to_sum_even(6)\n/// false\n/// >>> is_equal_to_sum_even(8)\n\
    /// true\nfn is_equal_to_sum_even(n: isize) -> bool {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = is_equal_to_sum_even;\n    assert_eq!(candidate(4),\
    \ false);\n    assert_eq!(candidate(6), false);\n    assert_eq!(candidate(8),\
    \ true);\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(11),\
    \ false);\n    assert_eq!(candidate(12), true);\n    assert_eq!(candidate(13),\
    \ false);\n    assert_eq!(candidate(16), true);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmpu__4vyz3.rs:10:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception

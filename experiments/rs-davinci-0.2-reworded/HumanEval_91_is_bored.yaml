name: HumanEval_91_is_bored
language: rs
prompt: "/// You'll be given a string of words, and your task is to count the number\n\
  /// of boredoms. A boredom is a sentence that starts with the word \"I\".\n/// Sentences\
  \ are delimited by '.', '?' or '!'.\n/// For example:\n/// >>> is_bored(String::from(\"\
  Hello world\"))\n/// 0\n/// >>> is_bored(String::from(\"The sky is blue. The sun\
  \ is shining. I love this weather\"))\n/// 1\nfn is_bored(S: String) -> isize {\n"
tests: "}\n\nfn main() {\n    let candidate = is_bored;\n    assert_eq!(candidate(String::from(\"\
  Hello world\")), 0);\n    assert_eq!(candidate(String::from(\"Is the sky blue?\"\
  )), 0);\n    assert_eq!(candidate(String::from(\"I love It !\")), 1);\n    assert_eq!(candidate(String::from(\"\
  bIt\")), 0);\n    assert_eq!(candidate(String::from(\"I feel good today. I will\
  \ be productive. will kill It\")), 2);\n    assert_eq!(candidate(String::from(\"\
  You and I are going for a walk\")), 0);\n}\n"
completions: ["    let mut boredoms = 0;\n    let mut words = S.split(|c: char| c\
    \ == '.' || c == '?' || c == '!');\n    for word in words {\n        if word.starts_with(\"\
    I\") {\n            boredoms += 1;\n        }\n    }\n    boredoms", "    let\
    \ mut boredoms = 0;\n    let mut sentence = String::new();\n    for c in S.chars()\
    \ {\n        if c == '.' || c == '?' || c == '!' {\n            if sentence.starts_with(\"\
    I\") {\n                boredoms += 1;\n            }\n            sentence.clear();\n\
    \        } else {\n            sentence.push(c);\n        }\n    }\n    boredoms",
  "    let mut boredoms = 0;\n    let mut iter = S.split(|c: char| c == '.' || c ==\
    \ '?' || c == '!');\n    for sentence in iter {\n        let mut words = sentence.split_whitespace();\n\
    \        if let Some(word) = words.next() {\n            if word == \"I\" {\n\
    \                boredoms += 1;\n            }\n        }\n    }\n    boredoms",
  "    let mut boredoms = 0;\n    let mut words = S.split(|c: char| c == '.' || c\
    \ == '?' || c == '!');\n    for word in words {\n        if word.starts_with(\"\
    I\") {\n            boredoms += 1;\n        }\n    }\n    boredoms", "    let\
    \ mut boredoms = 0;\n    let mut words = S.split(|c: char| c == '.' || c == '?'\
    \ || c == '!');\n    for word in words {\n        let mut words = word.split_whitespace();\n\
    \        if words.next() == Some(\"I\") {\n            boredoms += 1;\n      \
    \  }\n    }\n    boredoms", "    let mut boredoms = 0;\n    let mut sentence_start\
    \ = true;\n    for word in S.split_whitespace() {\n        if sentence_start &&\
    \ word.starts_with(\"I\") {\n            boredoms += 1;\n        }\n        sentence_start\
    \ = word.ends_with(\".\") || word.ends_with(\"?\") || word.ends_with(\"!\");\n\
    \    }\n    boredoms", "    let mut boredoms = 0;\n    let mut words = S.split(|c:\
    \ char| c == '.' || c == '?' || c == '!');\n    for word in words {\n        let\
    \ mut chars = word.chars();\n        if let Some(c) = chars.next() {\n       \
    \     if c == 'I' {\n                boredoms += 1;\n            }\n        }\n\
    \    }\n    boredoms", "    let mut boredoms = 0;\n    let mut is_bored = false;\n\
    \    for c in S.chars() {\n        if c == '.' || c == '?' || c == '!' {\n   \
    \         is_bored = false;\n        } else if c == 'I' {\n            is_bored\
    \ = true;\n        } else if is_bored {\n            boredoms += 1;\n        }\n\
    \    }\n    boredoms", "    let mut boredoms = 0;\n    let mut sentence = String::new();\n\
    \    for c in S.chars() {\n        if c == '.' || c == '?' || c == '!' {\n   \
    \         if sentence.starts_with(\"I\") {\n                boredoms += 1;\n \
    \           }\n            sentence.clear();\n        } else {\n            sentence.push(c);\n\
    \        }\n    }\n    boredoms", "    let mut boredoms = 0;\n    let mut is_bored\
    \ = false;\n    for c in S.chars() {\n        if c == 'I' {\n            is_bored\
    \ = true;\n        } else if c == '.' || c == '?' || c == '!' {\n            if\
    \ is_bored {\n                boredoms += 1;\n            }\n            is_bored\
    \ = false;\n        }\n    }\n    boredoms", "    let mut boredoms = 0;\n    let\
    \ mut is_bored = false;\n    for c in S.chars() {\n        if c == '.' || c ==\
    \ '?' || c == '!' {\n            is_bored = false;\n        } else if c == 'I'\
    \ {\n            is_bored = true;\n        } else if is_bored && c == ' ' {\n\
    \            boredoms += 1;\n            is_bored = false;\n        }\n    }\n\
    \    boredoms", "    let mut boredoms = 0;\n    let mut words = S.split(|c: char|\
    \ c == '.' || c == '?' || c == '!');\n    for word in words {\n        let mut\
    \ chars = word.split_whitespace();\n        if let Some(first) = chars.next()\
    \ {\n            if first == \"I\" {\n                boredoms += 1;\n       \
    \     }\n        }\n    }\n    boredoms", "    let mut boredoms = 0;\n    let\
    \ mut words = S.split(|c: char| c == '.' || c == '?' || c == '!');\n    for word\
    \ in words {\n        if word.starts_with(\"I\") {\n            boredoms += 1;\n\
    \        }\n    }\n    boredoms", "    let mut boredoms = 0;\n    let mut sentence\
    \ = String::new();\n    for c in S.chars() {\n        if c == '.' || c == '?'\
    \ || c == '!' {\n            if sentence.starts_with(\"I\") {\n              \
    \  boredoms += 1;\n            }\n            sentence.clear();\n        } else\
    \ {\n            sentence.push(c);\n        }\n    }\n    boredoms", "    let\
    \ mut boredoms = 0;\n    let mut sentence = String::new();\n    for c in S.chars()\
    \ {\n        if c == '.' || c == '?' || c == '!' {\n            if sentence.starts_with(\"\
    I\") {\n                boredoms += 1;\n            }\n            sentence.clear();\n\
    \        } else {\n            sentence.push(c);\n        }\n    }\n    boredoms",
  "    let mut boredoms = 0;\n    let mut words = S.split(|c: char| c == '.' || c\
    \ == '?' || c == '!');\n    for word in words {\n        if word.starts_with(\"\
    I\") {\n            boredoms += 1;\n        }\n    }\n    boredoms", "    let\
    \ mut boredoms = 0;\n    let mut words = S.split(|c: char| c == '.' || c == '?'\
    \ || c == '!');\n    for word in words {\n        if word.starts_with(\"I\") {\n\
    \            boredoms += 1;\n        }\n    }\n    boredoms", "    let mut boredoms\
    \ = 0;\n    let mut sentence = String::new();\n    for c in S.chars() {\n    \
    \    if c == '.' || c == '?' || c == '!' {\n            if sentence.starts_with(\"\
    I\") {\n                boredoms += 1;\n            }\n            sentence.clear();\n\
    \        } else {\n            sentence.push(c);\n        }\n    }\n    boredoms",
  "    let mut count = 0;\n    let mut sentence = String::new();\n    for c in S.chars()\
    \ {\n        if c == '.' || c == '?' || c == '!' {\n            if sentence.starts_with(\"\
    I\") {\n                count += 1;\n            }\n            sentence.clear();\n\
    \        } else {\n            sentence.push(c);\n        }\n    }\n    count",
  "    let mut boredoms = 0;\n    let mut is_bored = false;\n    for word in S.split_whitespace()\
    \ {\n        if word == \"I\" {\n            is_bored = true;\n        }\n   \
    \     if is_bored && word.ends_with('.') || word.ends_with('?') || word.ends_with('!')\
    \ {\n            boredoms += 1;\n            is_bored = false;\n        }\n  \
    \  }\n    boredoms", "    let mut boredoms = 0;\n    let mut words = S.split(|c:\
    \ char| c == '.' || c == '?' || c == '!');\n    for word in words {\n        if\
    \ word.starts_with(\"I\") {\n            boredoms += 1;\n        }\n    }\n  \
    \  boredoms", "    let mut boredoms = 0;\n    let mut is_bored = false;\n    for\
    \ c in S.chars() {\n        if c == '.' || c == '?' || c == '!' {\n          \
    \  is_bored = false;\n        } else if c == 'I' {\n            is_bored = true;\n\
    \        } else if is_bored {\n            boredoms += 1;\n        }\n    }\n\
    \    boredoms", "    let mut boredoms = 0;\n    let mut is_bored = false;\n  \
    \  for c in S.chars() {\n        if c == '.' || c == '?' || c == '!' {\n     \
    \       is_bored = false;\n        } else if c == 'I' {\n            is_bored\
    \ = true;\n        } else if is_bored {\n            boredoms += 1;\n        }\n\
    \    }\n    boredoms", "    let mut boredoms = 0;\n    let mut sentence = String::new();\n\
    \    for c in S.chars() {\n        if c == '.' || c == '?' || c == '!' {\n   \
    \         if sentence.starts_with(\"I\") {\n                boredoms += 1;\n \
    \           }\n            sentence.clear();\n        } else {\n            sentence.push(c);\n\
    \        }\n    }\n    boredoms", "    let mut boredoms = 0;\n    let mut is_bored\
    \ = false;\n    for c in S.chars() {\n        if is_bored {\n            if c\
    \ == '.' || c == '?' || c == '!' {\n                is_bored = false;\n      \
    \      }\n        } else {\n            if c == 'I' {\n                is_bored\
    \ = true;\n                boredoms += 1;\n            }\n        }\n    }\n \
    \   boredoms", "    let mut boredoms = 0;\n    let mut words = S.split(|c: char|\
    \ c == '.' || c == '?' || c == '!');\n    for word in words {\n        if word.starts_with(\"\
    I\") {\n            boredoms += 1;\n        }\n    }\n    boredoms", "    let\
    \ mut boredoms = 0;\n    let mut words = S.split(|c: char| c == '.' || c == '?'\
    \ || c == '!');\n    for word in words {\n        if word.starts_with(\"I\") {\n\
    \            boredoms += 1;\n        }\n    }\n    boredoms", "    let mut boredoms\
    \ = 0;\n    let mut is_bored = false;\n    for c in S.chars() {\n        if c\
    \ == '.' || c == '?' || c == '!' {\n            is_bored = false;\n        } else\
    \ if c == 'I' {\n            is_bored = true;\n        } else if is_bored {\n\
    \            boredoms += 1;\n        }\n    }\n    boredoms", "    let mut boredoms\
    \ = 0;\n    let mut words = S.split(|c: char| c == '.' || c == '?' || c == '!');\n\
    \    for word in words {\n        if word.starts_with(\"I\") {\n            boredoms\
    \ += 1;\n        }\n    }\n    boredoms", "    let mut count = 0;\n    let mut\
    \ prev = ' ';\n    for c in S.chars() {\n        if c == 'I' && prev == ' ' {\n\
    \            count += 1;\n        }\n        if c == '.' || c == '?' || c == '!'\
    \ {\n            prev = ' ';\n        } else {\n            prev = c;\n      \
    \  }\n    }\n    count", "    let mut boredoms = 0;\n    let mut words = S.split(|c:\
    \ char| c == '.' || c == '?' || c == '!');\n    for word in words {\n        let\
    \ mut chars = word.split_whitespace();\n        if chars.next() == Some(\"I\"\
    ) {\n            boredoms += 1;\n        }\n    }\n    boredoms", "    let mut\
    \ boredoms = 0;\n    let mut sentence = String::new();\n    for c in S.chars()\
    \ {\n        if c == '.' || c == '?' || c == '!' {\n            if sentence.starts_with(\"\
    I\") {\n                boredoms += 1;\n            }\n            sentence.clear();\n\
    \        } else {\n            sentence.push(c);\n        }\n    }\n    boredoms",
  "    let mut count = 0;\n    let mut words = S.split(|c: char| c == '.' || c ==\
    \ '?' || c == '!');\n    for word in words {\n        if word.starts_with(\"I\"\
    ) {\n            count += 1;\n        }\n    }\n    count", "    let mut boredoms\
    \ = 0;\n    let mut sentence = String::new();\n    for c in S.chars() {\n    \
    \    if c == '.' || c == '?' || c == '!' {\n            if sentence.starts_with(\"\
    I\") {\n                boredoms += 1;\n            }\n            sentence.clear();\n\
    \        } else {\n            sentence.push(c);\n        }\n    }\n    boredoms",
  "    let mut boredoms = 0;\n    let mut is_bored = false;\n    for c in S.chars()\
    \ {\n        if c == '.' || c == '?' || c == '!' {\n            is_bored = false;\n\
    \        } else if c == 'I' {\n            is_bored = true;\n        } else if\
    \ is_bored {\n            boredoms += 1;\n        }\n    }\n    boredoms", " \
    \   let mut count = 0;\n    let mut is_bored = false;\n    for c in S.chars()\
    \ {\n        if c == '.' || c == '?' || c == '!' {\n            is_bored = false;\n\
    \        } else if c == 'I' {\n            is_bored = true;\n        } else if\
    \ is_bored {\n            count += 1;\n        }\n    }\n    count", "    let\
    \ mut boredoms = 0;\n    let mut sentence = String::new();\n    for c in S.chars()\
    \ {\n        if c == '.' || c == '?' || c == '!' {\n            if sentence.starts_with(\"\
    I\") {\n                boredoms += 1;\n            }\n            sentence.clear();\n\
    \        } else {\n            sentence.push(c);\n        }\n    }\n    boredoms",
  "    let mut boredoms = 0;\n    let mut words = S.split(|c: char| c == '.' || c\
    \ == '?' || c == '!');\n    for word in words {\n        if word.starts_with(\"\
    I\") {\n            boredoms += 1;\n        }\n    }\n    boredoms", "    let\
    \ mut boredoms = 0;\n    let mut words = S.split(|c: char| c == '.' || c == '?'\
    \ || c == '!');\n    for word in words {\n        if word.starts_with(\"I\") {\n\
    \            boredoms += 1;\n        }\n    }\n    boredoms", "    let mut boredoms\
    \ = 0;\n    let mut sentence = String::new();\n    for c in S.chars() {\n    \
    \    if c == '.' || c == '?' || c == '!' {\n            if sentence.starts_with(\"\
    I\") {\n                boredoms += 1;\n            }\n            sentence.clear();\n\
    \        } else {\n            sentence.push(c);\n        }\n    }\n    boredoms",
  "    let mut boredoms = 0;\n    let mut sentence = String::new();\n    for c in\
    \ S.chars() {\n        if c == '.' || c == '?' || c == '!' {\n            if sentence.starts_with(\"\
    I\") {\n                boredoms += 1;\n            }\n            sentence.clear();\n\
    \        } else {\n            sentence.push(c);\n        }\n    }\n    boredoms",
  "    let mut boredoms = 0;\n    let mut sentence = String::new();\n    for c in\
    \ S.chars() {\n        if c == '.' || c == '?' || c == '!' {\n            if sentence.starts_with(\"\
    I\") {\n                boredoms += 1;\n            }\n            sentence.clear();\n\
    \        } else {\n            sentence.push(c);\n        }\n    }\n    boredoms",
  "    let mut boredoms = 0;\n    let mut words = S.split(|c: char| c == '.' || c\
    \ == '?' || c == '!');\n    for word in words {\n        let mut words = word.split_whitespace();\n\
    \        if words.next() == Some(\"I\") {\n            boredoms += 1;\n      \
    \  }\n    }\n    boredoms", "    let mut boredoms = 0;\n    let mut sentence =\
    \ String::new();\n    for c in S.chars() {\n        if c == '.' || c == '?' ||\
    \ c == '!' {\n            if sentence.starts_with(\"I\") {\n                boredoms\
    \ += 1;\n            }\n            sentence.clear();\n        } else {\n    \
    \        sentence.push(c);\n        }\n    }\n    boredoms", "    let mut count\
    \ = 0;\n    let mut sentence = String::new();\n    for c in S.chars() {\n    \
    \    if c == '.' || c == '?' || c == '!' {\n            if sentence.starts_with(\"\
    I\") {\n                count += 1;\n            }\n            sentence.clear();\n\
    \        } else {\n            sentence.push(c);\n        }\n    }\n    count",
  "    let mut boredoms = 0;\n    let mut is_bored = false;\n    for c in S.chars()\
    \ {\n        if c == '.' || c == '?' || c == '!' {\n            is_bored = false;\n\
    \        } else if c == 'I' {\n            is_bored = true;\n        } else if\
    \ is_bored {\n            boredoms += 1;\n        }\n    }\n    boredoms", " \
    \   let mut boredoms = 0;\n    let mut sentence = String::new();\n    for c in\
    \ S.chars() {\n        if c == '.' || c == '?' || c == '!' {\n            if sentence.starts_with(\"\
    I\") {\n                boredoms += 1;\n            }\n            sentence.clear();\n\
    \        } else {\n            sentence.push(c);\n        }\n    }\n    boredoms",
  "    let mut count = 0;\n    let mut sentence = String::new();\n    for c in S.chars()\
    \ {\n        if c == '.' || c == '?' || c == '!' {\n            if sentence.starts_with(\"\
    I\") {\n                count += 1;\n            }\n            sentence.clear();\n\
    \        } else {\n            sentence.push(c);\n        }\n    }\n    count",
  "    let mut boredoms = 0;\n    let mut sentence = String::new();\n    for c in\
    \ S.chars() {\n        if c == '.' || c == '?' || c == '!' {\n            if sentence.starts_with(\"\
    I\") {\n                boredoms += 1;\n            }\n            sentence.clear();\n\
    \        } else {\n            sentence.push(c);\n        }\n    }\n    boredoms",
  "    let mut count = 0;\n    let mut prev_char = ' ';\n    for c in S.chars() {\n\
    \        if prev_char == 'I' && c == ' ' {\n            count += 1;\n        }\n\
    \        prev_char = c;\n    }\n    count", "    let mut boredoms = 0;\n    let\
    \ mut sentence = String::new();\n    for c in S.chars() {\n        if c == '.'\
    \ || c == '?' || c == '!' {\n            if sentence.starts_with(\"I\") {\n  \
    \              boredoms += 1;\n            }\n            sentence.clear();\n\
    \        } else {\n            sentence.push(c);\n        }\n    }\n    boredoms",
  "    let mut boredoms = 0;\n    let mut words = S.split(|c: char| c == '.' || c\
    \ == '?' || c == '!');\n    for word in words {\n        let mut chars = word.split_whitespace();\n\
    \        if let Some(first) = chars.next() {\n            if first == \"I\" {\n\
    \                boredoms += 1;\n            }\n        }\n    }\n    boredoms",
  "    let mut boredoms = 0;\n    let mut words = S.split(|c: char| c == '.' || c\
    \ == '?' || c == '!');\n    for word in words {\n        if word.starts_with(\"\
    I\") {\n            boredoms += 1;\n        }\n    }\n    boredoms", "    let\
    \ mut boredoms = 0;\n    let mut is_bored = false;\n    for c in S.chars() {\n\
    \        if c == 'I' {\n            is_bored = true;\n        } else if c == '.'\
    \ || c == '?' || c == '!' {\n            if is_bored {\n                boredoms\
    \ += 1;\n            }\n            is_bored = false;\n        }\n    }\n    boredoms",
  "    let mut boredoms = 0;\n    let mut words = S.split(|c: char| c == '.' || c\
    \ == '?' || c == '!');\n    for word in words {\n        let mut words = word.split_whitespace();\n\
    \        if words.next() == Some(\"I\") {\n            boredoms += 1;\n      \
    \  }\n    }\n    boredoms", "    let mut boredoms = 0;\n    let mut words = S.split(|c:\
    \ char| c == '.' || c == '?' || c == '!');\n    for word in words {\n        if\
    \ word.starts_with(\"I\") {\n            boredoms += 1;\n        }\n    }\n  \
    \  boredoms", "    let mut boredoms = 0;\n    let mut sentences = S.split(|c|\
    \ c == '.' || c == '?' || c == '!');\n    for sentence in sentences {\n      \
    \  let words = sentence.split_whitespace();\n        if words.next() == Some(\"\
    I\") {\n            boredoms += 1;\n        }\n    }\n    boredoms", "    let\
    \ mut boredoms = 0;\n    let mut is_sentence = false;\n    for word in S.split_whitespace()\
    \ {\n        if is_sentence {\n            if word.starts_with('I') {\n      \
    \          boredoms += 1;\n            }\n            is_sentence = false;\n \
    \       }\n        if word.ends_with('.') || word.ends_with('?') || word.ends_with('!')\
    \ {\n            is_sentence = true;\n        }\n    }\n    boredoms", "    let\
    \ mut boredoms = 0;\n    let mut words = S.split(|c: char| c == '.' || c == '?'\
    \ || c == '!');\n    for word in words {\n        if word.starts_with(\"I\") {\n\
    \            boredoms += 1;\n        }\n    }\n    boredoms", "    let mut boredoms\
    \ = 0;\n    let mut words = S.split(|c: char| c == '.' || c == '?' || c == '!');\n\
    \    for word in words {\n        let mut chars = word.chars();\n        if chars.next()\
    \ == Some('I') {\n            boredoms += 1;\n        }\n    }\n    boredoms",
  "    S.split(|c: char| c == '.' || c == '?' || c == '!').filter(|s| s.starts_with(\"\
    I\")).count() as isize", "    let mut boredoms = 0;\n    let mut words = S.split(|c:\
    \ char| c == '.' || c == '?' || c == '!');\n    for word in words {\n        if\
    \ word.starts_with(\"I\") {\n            boredoms += 1;\n        }\n    }\n  \
    \  boredoms", "    let mut boredoms = 0;\n    let mut sentence_start = true;\n\
    \    for word in S.split_whitespace() {\n        if sentence_start && word.to_lowercase()\
    \ == \"i\" {\n            boredoms += 1;\n        }\n        sentence_start =\
    \ word.ends_with('.') || word.ends_with('?') || word.ends_with('!');\n    }\n\
    \    boredoms", "    let mut count = 0;\n    let mut sentence = String::new();\n\
    \    for c in S.chars() {\n        if c == '.' || c == '?' || c == '!' {\n   \
    \         if sentence.starts_with(\"I\") {\n                count += 1;\n    \
    \        }\n            sentence.clear();\n        } else {\n            sentence.push(c);\n\
    \        }\n    }\n    count", "    let mut boredoms = 0;\n    let mut words =\
    \ S.split(|c: char| c == '.' || c == '?' || c == '!');\n    for word in words\
    \ {\n        if word.starts_with(\"I\") {\n            boredoms += 1;\n      \
    \  }\n    }\n    boredoms", "    let mut boredoms = 0;\n    let mut sentence =\
    \ String::new();\n    for c in S.chars() {\n        if c == '.' || c == '?' ||\
    \ c == '!' {\n            if sentence.starts_with(\"I\") {\n                boredoms\
    \ += 1;\n            }\n            sentence.clear();\n        } else {\n    \
    \        sentence.push(c);\n        }\n    }\n    boredoms", "    let mut boredoms\
    \ = 0;\n    let mut sentence = String::new();\n    let mut words = S.split_whitespace();\n\
    \    while let Some(word) = words.next() {\n        sentence.push_str(word);\n\
    \        sentence.push(' ');\n        if word.ends_with('.') || word.ends_with('?')\
    \ || word.ends_with('!') {\n            if sentence.starts_with(\"I \") {\n  \
    \              boredoms += 1;\n            }\n            sentence.clear();\n\
    \        }\n    }\n    boredoms", "    let mut boredoms = 0;\n    let mut words\
    \ = S.split(|c: char| c == '.' || c == '?' || c == '!');\n    for word in words\
    \ {\n        if word.starts_with(\"I\") {\n            boredoms += 1;\n      \
    \  }\n    }\n    boredoms", "    let mut count = 0;\n    let mut is_bored = false;\n\
    \    for c in S.chars() {\n        if c == 'I' {\n            is_bored = true;\n\
    \        } else if c == '.' || c == '?' || c == '!' {\n            if is_bored\
    \ {\n                count += 1;\n            }\n            is_bored = false;\n\
    \        }\n    }\n    count", "    let mut boredoms = 0;\n    let mut sentence\
    \ = String::new();\n    for c in S.chars() {\n        if c == '.' || c == '?'\
    \ || c == '!' {\n            if sentence.starts_with(\"I\") {\n              \
    \  boredoms += 1;\n            }\n            sentence.clear();\n        } else\
    \ {\n            sentence.push(c);\n        }\n    }\n    boredoms", "    let\
    \ mut boredoms = 0;\n    let mut words = S.split(|c: char| c == '.' || c == '?'\
    \ || c == '!');\n    for word in words {\n        if word.starts_with(\"I\") {\n\
    \            boredoms += 1;\n        }\n    }\n    boredoms", "    let mut boredoms\
    \ = 0;\n    let mut iter = S.split(|c: char| c == '.' || c == '?' || c == '!');\n\
    \    for sentence in iter {\n        let words: Vec<&str> = sentence.split_whitespace().collect();\n\
    \        if words.len() > 0 && words[0] == \"I\" {\n            boredoms += 1;\n\
    \        }\n    }\n    boredoms", "    S.split(|c: char| c == '.' || c == '?'\
    \ || c == '!').filter(|s| s.starts_with(\"I\")).count() as isize", "    let mut\
    \ boredoms = 0;\n    let mut sentence = String::new();\n    for c in S.chars()\
    \ {\n        if c == '.' || c == '?' || c == '!' {\n            if sentence.starts_with(\"\
    I\") {\n                boredoms += 1;\n            }\n            sentence.clear();\n\
    \        } else {\n            sentence.push(c);\n        }\n    }\n    boredoms",
  "    let mut boredoms = 0;\n    let mut words = S.split(|c: char| c == '.' || c\
    \ == '?' || c == '!');\n    for word in words {\n        if word.starts_with(\"\
    I\") {\n            boredoms += 1;\n        }\n    }\n    boredoms", "    let\
    \ mut boredoms = 0;\n    let mut sentence = String::new();\n    for c in S.chars()\
    \ {\n        if c == '.' || c == '?' || c == '!' {\n            if sentence.starts_with(\"\
    I\") {\n                boredoms += 1;\n            }\n            sentence.clear();\n\
    \        } else {\n            sentence.push(c);\n        }\n    }\n    boredoms",
  "    let mut boredoms = 0;\n    let mut words = S.split(|c: char| c == '.' || c\
    \ == '?' || c == '!');\n    for word in words {\n        if word.starts_with(\"\
    I\") {\n            boredoms += 1;\n        }\n    }\n    boredoms", "    let\
    \ mut count = 0;\n    let mut is_bored = false;\n    for c in S.chars() {\n  \
    \      if c == 'I' {\n            is_bored = true;\n        } else if c == '.'\
    \ || c == '?' || c == '!' {\n            if is_bored {\n                count\
    \ += 1;\n            }\n            is_bored = false;\n        }\n    }\n    count",
  "    let mut boredoms = 0;\n    let mut is_bored = false;\n    for c in S.chars()\
    \ {\n        if c == '.' || c == '?' || c == '!' {\n            is_bored = false;\n\
    \        } else if c == 'I' {\n            is_bored = true;\n        } else if\
    \ is_bored {\n            boredoms += 1;\n        }\n    }\n    boredoms", " \
    \   let mut count = 0;\n    let mut iter = S.split(|c: char| c == '.' || c ==\
    \ '?' || c == '!');\n    for s in iter {\n        if s.starts_with(\"I\") {\n\
    \            count += 1;\n        }\n    }\n    count", "    let mut count = 0;\n\
    \    let mut is_bored = false;\n    for c in S.chars() {\n        if c == 'I'\
    \ {\n            is_bored = true;\n        } else if c == '.' || c == '?' || c\
    \ == '!' {\n            if is_bored {\n                count += 1;\n         \
    \   }\n            is_bored = false;\n        }\n    }\n    count", "    S.split(|c:\
    \ char| c == '.' || c == '?' || c == '!').filter(|s| s.starts_with(\"I\")).count()\
    \ as isize", "    let mut boredoms = 0;\n    let mut words = S.split(|c: char|\
    \ c == '.' || c == '?' || c == '!');\n    for word in words {\n        let mut\
    \ words = word.split_whitespace();\n        if words.next() == Some(\"I\") {\n\
    \            boredoms += 1;\n        }\n    }\n    boredoms", "    let mut boredoms\
    \ = 0;\n    let mut words = S.split(|c: char| c == '.' || c == '?' || c == '!');\n\
    \    for word in words {\n        let mut chars = word.split_whitespace();\n \
    \       if let Some(first) = chars.next() {\n            if first == \"I\" {\n\
    \                boredoms += 1;\n            }\n        }\n    }\n    boredoms",
  "    let mut boredoms = 0;\n    let mut is_bored = false;\n    for c in S.chars()\
    \ {\n        if c == '.' || c == '?' || c == '!' {\n            is_bored = false;\n\
    \        } else if c == 'I' {\n            is_bored = true;\n        } else if\
    \ is_bored {\n            boredoms += 1;\n        }\n    }\n    boredoms", " \
    \   let mut boredoms = 0;\n    let mut sentence = String::new();\n    for c in\
    \ S.chars() {\n        if c == '.' || c == '?' || c == '!' {\n            if sentence.starts_with(\"\
    I\") {\n                boredoms += 1;\n            }\n            sentence.clear();\n\
    \        } else {\n            sentence.push(c);\n        }\n    }\n    boredoms",
  "    let mut boredoms = 0;\n    let mut is_bored = false;\n    for c in S.chars()\
    \ {\n        if c == '.' || c == '?' || c == '!' {\n            is_bored = false;\n\
    \        } else if c == 'I' {\n            is_bored = true;\n        } else if\
    \ is_bored {\n            boredoms += 1;\n        }\n    }\n    boredoms", " \
    \   let mut count = 0;\n    let mut is_bored = false;\n    for c in S.chars()\
    \ {\n        if c == 'I' {\n            is_bored = true;\n        } else if c\
    \ == '.' || c == '?' || c == '!' {\n            if is_bored {\n              \
    \  count += 1;\n            }\n            is_bored = false;\n        }\n    }\n\
    \    count", "    let mut boredoms = 0;\n    let mut sentence = String::new();\n\
    \    for c in S.chars() {\n        if c == '.' || c == '?' || c == '!' {\n   \
    \         if sentence.starts_with(\"I\") {\n                boredoms += 1;\n \
    \           }\n            sentence.clear();\n        } else {\n            sentence.push(c);\n\
    \        }\n    }\n    boredoms", "    let mut boredoms = 0;\n    let mut words\
    \ = S.split(|c: char| c == '.' || c == '?' || c == '!');\n    for word in words\
    \ {\n        if word.starts_with(\"I\") {\n            boredoms += 1;\n      \
    \  }\n    }\n    boredoms", "    let mut boredoms = 0;\n    let mut words = S.split(|c:\
    \ char| c == '.' || c == '?' || c == '!');\n    for word in words {\n        let\
    \ mut chars = word.chars();\n        if chars.next() == Some('I') {\n        \
    \    boredoms += 1;\n        }\n    }\n    boredoms", "    let mut boredoms =\
    \ 0;\n    let mut is_bored = false;\n    for c in S.chars() {\n        if c ==\
    \ 'I' {\n            is_bored = true;\n        } else if c == '.' || c == '?'\
    \ || c == '!' {\n            if is_bored {\n                boredoms += 1;\n \
    \           }\n            is_bored = false;\n        }\n    }\n    boredoms",
  "    let mut boredoms = 0;\n    let mut sentence = String::new();\n    for c in\
    \ S.chars() {\n        if c == '.' || c == '?' || c == '!' {\n            if sentence.starts_with(\"\
    I\") {\n                boredoms += 1;\n            }\n            sentence.clear();\n\
    \        } else {\n            sentence.push(c);\n        }\n    }\n    boredoms",
  "    let mut boredoms = 0;\n    let mut sentence = String::new();\n    for c in\
    \ S.chars() {\n        if c == '.' || c == '?' || c == '!' {\n            if sentence.starts_with(\"\
    I\") {\n                boredoms += 1;\n            }\n            sentence.clear();\n\
    \        } else {\n            sentence.push(c);\n        }\n    }\n    boredoms",
  "    let mut boredoms = 0;\n    let mut sentence = String::new();\n    for c in\
    \ S.chars() {\n        if c == '.' || c == '?' || c == '!' {\n            if sentence.starts_with(\"\
    I\") {\n                boredoms += 1;\n            }\n            sentence.clear();\n\
    \        } else {\n            sentence.push(c);\n        }\n    }\n    boredoms",
  "    let mut boredoms = 0;\n    let mut words = S.split(|c: char| c == '.' || c\
    \ == '?' || c == '!');\n    for word in words {\n        if word.starts_with(\"\
    I\") {\n            boredoms += 1;\n        }\n    }\n    boredoms", "    let\
    \ mut boredoms = 0;\n    let mut words = S.split(|c: char| c == '.' || c == '?'\
    \ || c == '!');\n    for word in words {\n        let mut chars = word.chars();\n\
    \        if chars.next() == Some('I') {\n            boredoms += 1;\n        }\n\
    \    }\n    boredoms", "    let mut boredoms = 0;\n    let mut is_bored = false;\n\
    \    for c in S.chars() {\n        if c == 'I' {\n            is_bored = true;\n\
    \        } else if c == '.' || c == '?' || c == '!' {\n            if is_bored\
    \ {\n                boredoms += 1;\n            }\n            is_bored = false;\n\
    \        }\n    }\n    boredoms", "    let mut count = 0;\n    let mut is_bored\
    \ = false;\n    for c in S.chars() {\n        if c == 'I' {\n            is_bored\
    \ = true;\n        } else if c == '.' || c == '?' || c == '!' {\n            if\
    \ is_bored {\n                count += 1;\n            }\n            is_bored\
    \ = false;\n        }\n    }\n    count", "    let mut boredoms = 0;\n    let\
    \ mut is_first_word = true;\n    for word in S.split_whitespace() {\n        if\
    \ is_first_word && word == \"I\" {\n            boredoms += 1;\n        }\n  \
    \      is_first_word = word.ends_with('.') || word.ends_with('?') || word.ends_with('!');\n\
    \    }\n    boredoms", "    let mut boredoms = 0;\n    let mut words = S.split(|c:\
    \ char| c == '.' || c == '?' || c == '!');\n    for word in words {\n        if\
    \ word.starts_with(\"I\") {\n            boredoms += 1;\n        }\n    }\n  \
    \  boredoms", "    let mut boredoms = 0;\n    let mut sentence = String::new();\n\
    \    for c in S.chars() {\n        if c == '.' || c == '?' || c == '!' {\n   \
    \         if sentence.starts_with(\"I\") {\n                boredoms += 1;\n \
    \           }\n            sentence.clear();\n        } else {\n            sentence.push(c);\n\
    \        }\n    }\n    boredoms", "    let mut boredoms = 0;\n    let mut words\
    \ = S.split(|c: char| c == '.' || c == '?' || c == '!');\n    for word in words\
    \ {\n        let mut chars = word.split_whitespace();\n        if let Some(first)\
    \ = chars.next() {\n            if first == \"I\" {\n                boredoms\
    \ += 1;\n            }\n        }\n    }\n    boredoms", "    let mut boredoms\
    \ = 0;\n    let mut words = S.split(|c: char| c == '.' || c == '?' || c == '!');\n\
    \    for word in words {\n        if word.starts_with(\"I\") {\n            boredoms\
    \ += 1;\n        }\n    }\n    boredoms", "    let mut boredoms = 0;\n    let\
    \ mut words = S.split(|c: char| c == '.' || c == '?' || c == '!');\n    for word\
    \ in words {\n        if word.starts_with(\"I\") {\n            boredoms += 1;\n\
    \        }\n    }\n    boredoms", "    let mut boredoms = 0;\n    let mut sentence\
    \ = String::new();\n    let mut sentence_started = false;\n    for c in S.chars()\
    \ {\n        if sentence_started {\n            sentence.push(c);\n        }\n\
    \        if c == '.' || c == '?' || c == '!' {\n            sentence_started =\
    \ false;\n            if sentence.starts_with(\"I\") {\n                boredoms\
    \ += 1;\n            }\n            sentence.clear();\n        } else if c ==\
    \ ' ' {\n            sentence_started = true;\n        }\n    }\n    boredoms",
  "    let mut boredoms = 0;\n    let mut sentence = String::new();\n    for c in\
    \ S.chars() {\n        if c == '.' || c == '?' || c == '!' {\n            if sentence.starts_with(\"\
    I\") {\n                boredoms += 1;\n            }\n            sentence.clear();\n\
    \        } else {\n            sentence.push(c);\n        }\n    }\n    boredoms",
  "    let mut boredoms = 0;\n    let mut is_bored = false;\n    for c in S.chars()\
    \ {\n        if c == 'I' {\n            is_bored = true;\n        }\n        if\
    \ c == '.' || c == '?' || c == '!' {\n            if is_bored {\n            \
    \    boredoms += 1;\n            }\n            is_bored = false;\n        }\n\
    \    }\n    boredoms", "    let mut count = 0;\n    let mut is_first_word = true;\n\
    \    for word in S.split_whitespace() {\n        if is_first_word && word.to_lowercase()\
    \ == \"i\" {\n            count += 1;\n        }\n        is_first_word = word.ends_with('.')\
    \ || word.ends_with('?') || word.ends_with('!');\n    }\n    count", "    let\
    \ mut boredoms = 0;\n    let mut is_bored = false;\n    for c in S.chars() {\n\
    \        if c == '.' || c == '?' || c == '!' {\n            is_bored = false;\n\
    \        } else if c == 'I' {\n            is_bored = true;\n        } else if\
    \ is_bored {\n            boredoms += 1;\n        }\n    }\n    boredoms", " \
    \   let mut boredoms = 0;\n    let mut is_bored = false;\n    for c in S.chars()\
    \ {\n        if c == '.' || c == '?' || c == '!' {\n            is_bored = false;\n\
    \        } else if c == 'I' {\n            is_bored = true;\n        } else if\
    \ is_bored {\n            boredoms += 1;\n        }\n    }\n    boredoms", " \
    \   let mut boredoms = 0;\n    let mut words = S.split_whitespace();\n    while\
    \ let Some(word) = words.next() {\n        if word == \"I\" {\n            boredoms\
    \ += 1;\n        }\n    }\n    boredoms", "    let mut boredoms = 0;\n    let\
    \ mut words = S.split(|c: char| c == '.' || c == '?' || c == '!');\n    for word\
    \ in words {\n        if word.starts_with(\"I\") {\n            boredoms += 1;\n\
    \        }\n    }\n    boredoms", "    let mut count = 0;\n    let mut sentence\
    \ = String::new();\n    for c in S.chars() {\n        if c == '.' || c == '?'\
    \ || c == '!' {\n            if sentence.starts_with(\"I\") {\n              \
    \  count += 1;\n            }\n            sentence.clear();\n        } else {\n\
    \            sentence.push(c);\n        }\n    }\n    count", "    let mut boredoms\
    \ = 0;\n    let mut sentence = String::new();\n    for c in S.chars() {\n    \
    \    if c == '.' || c == '?' || c == '!' {\n            if sentence.starts_with(\"\
    I\") {\n                boredoms += 1;\n            }\n            sentence.clear();\n\
    \        } else {\n            sentence.push(c);\n        }\n    }\n    boredoms",
  "    let mut boredoms = 0;\n    let mut is_bored = false;\n    for c in S.chars()\
    \ {\n        if is_bored {\n            if c == '.' || c == '?' || c == '!' {\n\
    \                is_bored = false;\n            }\n        } else {\n        \
    \    if c == 'I' {\n                is_bored = true;\n                boredoms\
    \ += 1;\n            }\n        }\n    }\n    boredoms", "    let mut boredoms\
    \ = 0;\n    let mut start = 0;\n    let mut end = 0;\n    let mut in_sentence\
    \ = false;\n    let mut in_word = false;\n    let mut is_bored = false;\n    let\
    \ mut word = String::new();\n    for c in S.chars() {\n        if c == '.' ||\
    \ c == '?' || c == '!' {\n            in_sentence = false;\n            in_word\
    \ = false;\n            if is_bored {\n                boredoms += 1;\n      \
    \      }\n            is_bored = false;\n            word = String::new();\n \
    \       } else if c == ' ' {\n            in_word = false;\n            if is_bored\
    \ {\n                boredoms += 1;\n            }\n            is_bored = false;\n\
    \            word = String::new();\n        } else {\n            if !in_sentence\
    \ {\n                in_sentence = true;\n            }\n            if !in_word\
    \ {\n                in_word = true;\n            }\n            word.push(c);\n\
    \            if word == \"I\" {\n                is_bored = true;\n          \
    \  }\n        }\n    }\n    boredoms", "    let mut boredoms = 0;\n    let mut\
    \ words = S.split(|c: char| c == '.' || c == '?' || c == '!');\n    for word in\
    \ words {\n        let mut chars = word.chars();\n        if chars.next() == Some('I')\
    \ {\n            boredoms += 1;\n        }\n    }\n    boredoms", "    let mut\
    \ boredoms = 0;\n    let mut words = S.split(|c: char| c == '.' || c == '?' ||\
    \ c == '!');\n    for word in words {\n        if word.starts_with(\"I\") {\n\
    \            boredoms += 1;\n        }\n    }\n    boredoms", "    let mut boredoms\
    \ = 0;\n    let mut sentence = String::new();\n    for c in S.chars() {\n    \
    \    if c == '.' || c == '?' || c == '!' {\n            if sentence.starts_with(\"\
    I\") {\n                boredoms += 1;\n            }\n            sentence.clear();\n\
    \        } else {\n            sentence.push(c);\n        }\n    }\n    boredoms",
  "    let mut boredoms = 0;\n    let mut sentence = String::new();\n    for c in\
    \ S.chars() {\n        if c == '.' || c == '?' || c == '!' {\n            if sentence.starts_with(\"\
    I\") {\n                boredoms += 1;\n            }\n            sentence.clear();\n\
    \        } else {\n            sentence.push(c);\n        }\n    }\n    boredoms",
  "    S.split(|c: char| c == '.' || c == '?' || c == '!')\n        .filter(|s| s.starts_with(\"\
    I\"))\n        .count() as isize", "    S.split(|c: char| c == '.' || c == '?'\
    \ || c == '!')\n        .filter(|s| s.starts_with(\"I\"))\n        .count() as\
    \ isize", "    S.split(|c: char| c == '.' || c == '?' || c == '!')\n        .filter(|s|\
    \ s.starts_with(\"I\"))\n        .count() as isize", "    let mut boredoms = 0;\n\
    \    let mut words = S.split(|c: char| c == '.' || c == '?' || c == '!');\n  \
    \  for word in words {\n        if word.starts_with(\"I\") {\n            boredoms\
    \ += 1;\n        }\n    }\n    boredoms", "    let mut boredoms = 0;\n    let\
    \ mut words = S.split(|c: char| c == '.' || c == '?' || c == '!');\n    for word\
    \ in words {\n        if word.starts_with(\"I\") {\n            boredoms += 1;\n\
    \        }\n    }\n    boredoms", "    let mut boredoms = 0;\n    let mut words\
    \ = S.split(|c: char| c == '.' || c == '?' || c == '!');\n    for word in words\
    \ {\n        if word.starts_with(\"I\") {\n            boredoms += 1;\n      \
    \  }\n    }\n    boredoms", "    let mut boredoms = 0;\n    let mut words = S.split(|c:\
    \ char| c == '.' || c == '?' || c == '!');\n    for word in words {\n        let\
    \ mut chars = word.chars();\n        if chars.next() == Some('I') {\n        \
    \    boredoms += 1;\n        }\n    }\n    boredoms", "    let mut boredoms =\
    \ 0;\n    let mut sentence = String::new();\n    for c in S.chars() {\n      \
    \  if c == '.' || c == '?' || c == '!' {\n            if sentence.starts_with(\"\
    I\") {\n                boredoms += 1;\n            }\n            sentence.clear();\n\
    \        } else {\n            sentence.push(c);\n        }\n    }\n    boredoms",
  "    let mut boredoms = 0;\n    let mut sentence = String::new();\n    for c in\
    \ S.chars() {\n        if c == '.' || c == '?' || c == '!' {\n            if sentence.starts_with(\"\
    I\") {\n                boredoms += 1;\n            }\n            sentence.clear();\n\
    \        } else {\n            sentence.push(c);\n        }\n    }\n    boredoms",
  "    S.split(|c: char| c == '.' || c == '?' || c == '!')\n        .filter(|s| s.starts_with(\"\
    I\"))\n        .count() as isize", "    let mut boredoms = 0;\n    let mut iter\
    \ = S.split(|c: char| c == '.' || c == '?' || c == '!');\n    for sentence in\
    \ iter {\n        if sentence.starts_with(\"I\") {\n            boredoms += 1;\n\
    \        }\n    }\n    boredoms", "    let mut count = 0;\n    let mut is_bored\
    \ = false;\n    for c in S.chars() {\n        if c == '.' || c == '?' || c ==\
    \ '!' {\n            is_bored = false;\n        } else if c == 'I' {\n       \
    \     if is_bored {\n                count += 1;\n            }\n            is_bored\
    \ = true;\n        }\n    }\n    count", "    let mut boredoms = 0;\n    let mut\
    \ is_bored = false;\n    for c in S.chars() {\n        if c == '.' || c == '?'\
    \ || c == '!' {\n            is_bored = false;\n        } else if c == 'I' {\n\
    \            is_bored = true;\n        } else if is_bored {\n            boredoms\
    \ += 1;\n        }\n    }\n    boredoms", "    let mut boredoms = 0;\n    let\
    \ mut words = S.split(|c: char| c == '.' || c == '?' || c == '!');\n    for word\
    \ in words {\n        if word.starts_with(\"I\") {\n            boredoms += 1;\n\
    \        }\n    }\n    boredoms", "    let mut boredoms = 0;\n    let mut start\
    \ = 0;\n    let mut end = 0;\n    let mut in_sentence = false;\n    let mut in_word\
    \ = false;\n    let mut first_letter = false;\n    let mut is_i = false;\n   \
    \ let mut is_bored = false;\n    let mut chars = S.chars();\n    while let Some(c)\
    \ = chars.next() {\n        if c == '.' || c == '?' || c == '!' {\n          \
    \  in_sentence = true;\n            in_word = false;\n            first_letter\
    \ = false;\n            is_i = false;\n            is_bored = false;\n       \
    \     end = start;\n        } else if c == ' ' {\n            in_word = false;\n\
    \            first_letter = false;\n            is_i = false;\n            is_bored\
    \ = false;\n            end = start;\n        } else {\n            if !in_word\
    \ {\n                in_word = true;\n                first_letter = true;\n \
    \           }\n            if first_letter {\n                if c == 'I' {\n\
    \                    is_i = true;\n                } else {\n                \
    \    is_i = false;\n                }\n                first_letter = false;\n\
    \            }\n            if in_sentence && is_i {\n                is_bored\
    \ = true;\n            }\n            start += 1;\n        }\n        if is_bored\
    \ {\n            boredoms += 1;\n        }\n    }\n    boredoms", "    let mut\
    \ boredoms = 0;\n    let mut prev_char = ' ';\n    for c in S.chars() {\n    \
    \    if prev_char == 'I' && c == ' ' {\n            boredoms += 1;\n        }\n\
    \        prev_char = c;\n    }\n    boredoms", "    let mut boredoms = 0;\n  \
    \  let mut sentence = String::new();\n    for c in S.chars() {\n        if c ==\
    \ '.' || c == '?' || c == '!' {\n            if sentence.starts_with(\"I\") {\n\
    \                boredoms += 1;\n            }\n            sentence.clear();\n\
    \        } else {\n            sentence.push(c);\n        }\n    }\n    boredoms",
  "    let mut count = 0;\n    let mut is_bored = false;\n    for c in S.chars() {\n\
    \        if c == '.' || c == '?' || c == '!' {\n            is_bored = false;\n\
    \        } else if c == 'I' {\n            is_bored = true;\n        } else if\
    \ is_bored && c == ' ' {\n            count += 1;\n            is_bored = false;\n\
    \        }\n    }\n    count", "    let mut boredoms = 0;\n    let mut is_bored\
    \ = false;\n    for c in S.chars() {\n        if c == '.' || c == '?' || c ==\
    \ '!' {\n            is_bored = false;\n        } else if c == 'I' {\n       \
    \     is_bored = true;\n        } else if is_bored {\n            boredoms +=\
    \ 1;\n        }\n    }\n    boredoms", "    let mut boredoms = 0;\n    let mut\
    \ sentence = false;\n    for word in S.split_whitespace() {\n        if word.ends_with('.')\
    \ || word.ends_with('?') || word.ends_with('!') {\n            sentence = true;\n\
    \        }\n        if sentence && word.starts_with('I') {\n            boredoms\
    \ += 1;\n            sentence = false;\n        }\n    }\n    boredoms", "   \
    \ let mut boredoms = 0;\n    let mut words = S.split(|c: char| c == '.' || c ==\
    \ '?' || c == '!');\n    for word in words {\n        let mut chars = word.split_whitespace();\n\
    \        if let Some(first) = chars.next() {\n            if first == \"I\" {\n\
    \                boredoms += 1;\n            }\n        }\n    }\n    boredoms",
  "    let mut boredoms = 0;\n    let mut is_bored = false;\n    for c in S.chars()\
    \ {\n        if c == '.' || c == '?' || c == '!' {\n            is_bored = false;\n\
    \        } else if c == 'I' {\n            is_bored = true;\n        } else if\
    \ is_bored {\n            boredoms += 1;\n        }\n    }\n    boredoms", " \
    \   let mut boredoms = 0;\n    let mut sentence = String::new();\n    for c in\
    \ S.chars() {\n        if c == '.' || c == '?' || c == '!' {\n            if sentence.starts_with(\"\
    I\") {\n                boredoms += 1;\n            }\n            sentence.clear();\n\
    \        } else {\n            sentence.push(c);\n        }\n    }\n    boredoms",
  "    let mut count = 0;\n    let mut is_bored = false;\n    for c in S.chars() {\n\
    \        if c == 'I' {\n            is_bored = true;\n        } else if c == '.'\
    \ || c == '?' || c == '!' {\n            if is_bored {\n                count\
    \ += 1;\n            }\n            is_bored = false;\n        }\n    }\n    count",
  "    let mut boredoms = 0;\n    let mut words = S.split(|c: char| c == '.' || c\
    \ == '?' || c == '!');\n    for word in words {\n        if word.starts_with(\"\
    I\") {\n            boredoms += 1;\n        }\n    }\n    boredoms", "    let\
    \ mut boredoms = 0;\n    let mut words = S.split(|c: char| c == '.' || c == '?'\
    \ || c == '!');\n    for word in words {\n        let mut words = word.split_whitespace();\n\
    \        if words.next() == Some(\"I\") {\n            boredoms += 1;\n      \
    \  }\n    }\n    boredoms", "    let mut boredoms = 0;\n    let mut words = S.split(|c:\
    \ char| c == '.' || c == '?' || c == '!');\n    for word in words {\n        let\
    \ mut chars = word.split_whitespace();\n        if let Some(first) = chars.next()\
    \ {\n            if first == \"I\" {\n                boredoms += 1;\n       \
    \     }\n        }\n    }\n    boredoms", "    let mut boredoms = 0;\n    let\
    \ mut words = S.split(|c: char| c == '.' || c == '?' || c == '!');\n    for word\
    \ in words {\n        let mut words = word.split_whitespace();\n        if words.next()\
    \ == Some(\"I\") {\n            boredoms += 1;\n        }\n    }\n    boredoms",
  "    let mut boredoms = 0;\n    let mut words = S.split(|c: char| c == '.' || c\
    \ == '?' || c == '!');\n    for word in words {\n        let mut chars = word.split_whitespace();\n\
    \        if chars.next() == Some(\"I\") {\n            boredoms += 1;\n      \
    \  }\n    }\n    boredoms", "    let mut boredoms = 0;\n    let mut sentence =\
    \ String::new();\n    for c in S.chars() {\n        if c == '.' || c == '?' ||\
    \ c == '!' {\n            if sentence.starts_with(\"I\") {\n                boredoms\
    \ += 1;\n            }\n            sentence.clear();\n        } else {\n    \
    \        sentence.push(c);\n        }\n    }\n    boredoms", "    let mut boredoms\
    \ = 0;\n    let mut word = String::new();\n    let mut sentence = String::new();\n\
    \    for c in S.chars() {\n        if c.is_alphabetic() {\n            word.push(c);\n\
    \        } else {\n            if word == \"I\" {\n                sentence.push_str(&word);\n\
    \            }\n            sentence.push(c);\n            if c == '.' || c ==\
    \ '?' || c == '!' {\n                if sentence.starts_with(\"I\") {\n      \
    \              boredoms += 1;\n                }\n                sentence.clear();\n\
    \            }\n            word.clear();\n        }\n    }\n    boredoms", " \
    \   let mut boredoms = 0;\n    let mut words = S.split(|c: char| c == '.' || c\
    \ == '?' || c == '!');\n    for word in words {\n        if word.starts_with(\"\
    I\") {\n            boredoms += 1;\n        }\n    }\n    boredoms", "    let\
    \ mut boredoms = 0;\n    let mut sentence = String::new();\n    for c in S.chars()\
    \ {\n        if c == '.' || c == '?' || c == '!' {\n            if sentence.starts_with(\"\
    I\") {\n                boredoms += 1;\n            }\n            sentence.clear();\n\
    \        } else {\n            sentence.push(c);\n        }\n    }\n    boredoms",
  "    let mut boredoms = 0;\n    let mut sentence = String::new();\n    for c in\
    \ S.chars() {\n        if c == '.' || c == '?' || c == '!' {\n            if sentence.starts_with(\"\
    I\") {\n                boredoms += 1;\n            }\n            sentence.clear();\n\
    \        } else {\n            sentence.push(c);\n        }\n    }\n    boredoms",
  "    let mut boredoms = 0;\n    let mut is_bored = false;\n    for c in S.chars()\
    \ {\n        if c == '.' || c == '?' || c == '!' {\n            is_bored = false;\n\
    \        } else if c == 'I' {\n            is_bored = true;\n        } else if\
    \ is_bored {\n            boredoms += 1;\n        }\n    }\n    boredoms", " \
    \   let mut boredoms = 0;\n    let mut sentence = String::new();\n    for c in\
    \ S.chars() {\n        if c == '.' || c == '?' || c == '!' {\n            if sentence.starts_with(\"\
    I\") {\n                boredoms += 1;\n            }\n            sentence.clear();\n\
    \        } else {\n            sentence.push(c);\n        }\n    }\n    boredoms",
  "    let mut boredoms = 0;\n    let mut words = S.split(|c: char| c == '.' || c\
    \ == '?' || c == '!');\n    for word in words {\n        if word.starts_with(\"\
    I\") {\n            boredoms += 1;\n        }\n    }\n    boredoms", "    let\
    \ mut count = 0;\n    let mut i = 0;\n    let mut is_bored = false;\n    while\
    \ i < S.len() {\n        if S.chars().nth(i).unwrap() == 'I' {\n            is_bored\
    \ = true;\n        }\n        if S.chars().nth(i).unwrap() == '.' || S.chars().nth(i).unwrap()\
    \ == '?' || S.chars().nth(i).unwrap() == '!' {\n            if is_bored {\n  \
    \              count += 1;\n                is_bored = false;\n            }\n\
    \        }\n        i += 1;\n    }\n    count", "    let mut boredoms = 0;\n \
    \   let mut is_bored = false;\n    for c in S.chars() {\n        if c == 'I' {\n\
    \            is_bored = true;\n        } else if c == '.' || c == '?' || c ==\
    \ '!' {\n            if is_bored {\n                boredoms += 1;\n         \
    \   }\n            is_bored = false;\n        }\n    }\n    boredoms", "    let\
    \ mut boredoms = 0;\n    let mut sentence = String::new();\n    for c in S.chars()\
    \ {\n        if c == '.' || c == '?' || c == '!' {\n            if sentence.starts_with(\"\
    I\") {\n                boredoms += 1;\n            }\n            sentence.clear();\n\
    \        } else {\n            sentence.push(c);\n        }\n    }\n    boredoms",
  "    let mut boredoms = 0;\n    let mut is_bored = false;\n    for c in S.chars()\
    \ {\n        if c == '.' || c == '?' || c == '!' {\n            if is_bored {\n\
    \                boredoms += 1;\n            }\n            is_bored = false;\n\
    \        } else if c == 'I' {\n            is_bored = true;\n        }\n    }\n\
    \    boredoms", "    let mut count = 0;\n    let mut words = S.split(|c: char|\
    \ c == '.' || c == '?' || c == '!');\n    for word in words {\n        if word.starts_with(\"\
    I\") {\n            count += 1;\n        }\n    }\n    count", "    let mut boredoms\
    \ = 0;\n    let mut is_bored = false;\n    for c in S.chars() {\n        if c\
    \ == '.' || c == '?' || c == '!' {\n            is_bored = false;\n        } else\
    \ if c == 'I' {\n            is_bored = true;\n        } else if is_bored {\n\
    \            boredoms += 1;\n        }\n    }\n    boredoms", "    let mut boredoms\
    \ = 0;\n    let mut is_bored = false;\n    for c in S.chars() {\n        if c\
    \ == 'I' {\n            is_bored = true;\n        } else if c == '.' || c == '?'\
    \ || c == '!' {\n            if is_bored {\n                boredoms += 1;\n \
    \           }\n            is_bored = false;\n        }\n    }\n    boredoms",
  "    let mut count = 0;\n    let mut is_bored = false;\n    for c in S.chars() {\n\
    \        if c == 'I' {\n            is_bored = true;\n        } else if is_bored\
    \ && (c == '.' || c == '?' || c == '!') {\n            count += 1;\n         \
    \   is_bored = false;\n        }\n    }\n    count", "    let mut count = 0;\n\
    \    let mut is_bored = false;\n    for c in S.chars() {\n        if c == 'I'\
    \ {\n            is_bored = true;\n        } else if c == '.' || c == '?' || c\
    \ == '!' {\n            if is_bored {\n                count += 1;\n         \
    \   }\n            is_bored = false;\n        }\n    }\n    count", "    let mut\
    \ boredoms = 0;\n    let mut words = S.split(|c: char| c == '.' || c == '?' ||\
    \ c == '!');\n    for word in words {\n        if word.starts_with(\"I\") {\n\
    \            boredoms += 1;\n        }\n    }\n    boredoms", "    let mut count\
    \ = 0;\n    let mut is_bored = false;\n    for c in S.chars() {\n        if c\
    \ == 'I' {\n            is_bored = true;\n        }\n        if c == '.' || c\
    \ == '?' || c == '!' {\n            if is_bored {\n                count += 1;\n\
    \            }\n            is_bored = false;\n        }\n    }\n    count", " \
    \   let mut boredoms = 0;\n    let mut words = S.split(|c: char| c == '.' || c\
    \ == '?' || c == '!');\n    for word in words {\n        if word.starts_with(\"\
    I\") {\n            boredoms += 1;\n        }\n    }\n    boredoms", "    let\
    \ mut boredoms = 0;\n    let mut is_bored = false;\n    for c in S.chars() {\n\
    \        if c == 'I' {\n            is_bored = true;\n        } else if c == '.'\
    \ || c == '?' || c == '!' {\n            if is_bored {\n                boredoms\
    \ += 1;\n            }\n            is_bored = false;\n        }\n    }\n    boredoms",
  "    let mut boredoms = 0;\n    let mut words = S.split(|c: char| c == '.' || c\
    \ == '?' || c == '!');\n    for word in words {\n        let mut words_in_sentence\
    \ = word.split_whitespace();\n        if words_in_sentence.next() == Some(\"I\"\
    ) {\n            boredoms += 1;\n        }\n    }\n    boredoms", "    let mut\
    \ boredoms = 0;\n    let mut words = S.split(|c: char| c == '.' || c == '?' ||\
    \ c == '!');\n    for word in words {\n        if word.starts_with(\"I\") {\n\
    \            boredoms += 1;\n        }\n    }\n    boredoms", "    let mut count\
    \ = 0;\n    let mut is_bored = false;\n    for c in S.chars() {\n        if c\
    \ == 'I' {\n            is_bored = true;\n        } else if c == '.' || c == '?'\
    \ || c == '!' {\n            if is_bored {\n                count += 1;\n    \
    \        }\n            is_bored = false;\n        }\n    }\n    count", "   \
    \ let mut boredoms = 0;\n    let mut is_bored = false;\n    for c in S.chars()\
    \ {\n        if c == '.' || c == '?' || c == '!' {\n            is_bored = false;\n\
    \        } else if c == 'I' {\n            is_bored = true;\n        } else if\
    \ is_bored && c == ' ' {\n            boredoms += 1;\n            is_bored = false;\n\
    \        }\n    }\n    boredoms", "    let mut boredoms = 0;\n    let mut words\
    \ = S.split(|c: char| c == '.' || c == '?' || c == '!');\n    for word in words\
    \ {\n        let mut chars = word.split_whitespace();\n        if let Some(first)\
    \ = chars.next() {\n            if first == \"I\" {\n                boredoms\
    \ += 1;\n            }\n        }\n    }\n    boredoms", "    let mut boredoms\
    \ = 0;\n    let mut sentence = String::new();\n    for c in S.chars() {\n    \
    \    if c == '.' || c == '?' || c == '!' {\n            if sentence.starts_with(\"\
    I\") {\n                boredoms += 1;\n            }\n            sentence.clear();\n\
    \        } else {\n            sentence.push(c);\n        }\n    }\n    boredoms",
  "    let mut boredoms = 0;\n    let mut sentence = String::new();\n    for c in\
    \ S.chars() {\n        if c == '.' || c == '?' || c == '!' {\n            if sentence.starts_with(\"\
    I\") {\n                boredoms += 1;\n            }\n            sentence.clear();\n\
    \        } else {\n            sentence.push(c);\n        }\n    }\n    boredoms",
  "    let mut boredoms = 0;\n    let mut words = S.split(|c: char| c == '.' || c\
    \ == '?' || c == '!');\n    for word in words {\n        if word.starts_with(\"\
    I\") {\n            boredoms += 1;\n        }\n    }\n    boredoms", "    let\
    \ mut boredoms = 0;\n    let mut sentence = String::new();\n    let mut words\
    \ = S.split_whitespace();\n    while let Some(word) = words.next() {\n       \
    \ sentence.push_str(word);\n        if word.ends_with('.') || word.ends_with('?')\
    \ || word.ends_with('!') {\n            if sentence.starts_with(\"I\") {\n   \
    \             boredoms += 1;\n            }\n            sentence.clear();\n \
    \       } else {\n            sentence.push(' ');\n        }\n    }\n    boredoms",
  "    let mut boredoms = 0;\n    let mut sentence = String::new();\n    for c in\
    \ S.chars() {\n        if c == '.' || c == '?' || c == '!' {\n            if sentence.starts_with(\"\
    I\") {\n                boredoms += 1;\n            }\n            sentence.clear();\n\
    \        } else {\n            sentence.push(c);\n        }\n    }\n    boredoms",
  "    let mut boredoms = 0;\n    let mut sentence = String::new();\n    for c in\
    \ S.chars() {\n        if c == '.' || c == '?' || c == '!' {\n            if sentence.starts_with(\"\
    I\") {\n                boredoms += 1;\n            }\n            sentence.clear();\n\
    \        } else {\n            sentence.push(c);\n        }\n    }\n    boredoms",
  "    let mut boredoms = 0;\n    let mut sentence = String::new();\n    for c in\
    \ S.chars() {\n        if c == '.' || c == '?' || c == '!' {\n            if sentence.starts_with(\"\
    I\") {\n                boredoms += 1;\n            }\n            sentence.clear();\n\
    \        } else {\n            sentence.push(c);\n        }\n    }\n    boredoms",
  "    let mut boredoms = 0;\n    let mut words = S.split(|c: char| c == '.' || c\
    \ == '?' || c == '!');\n    for word in words {\n        if word.starts_with(\"\
    I\") {\n            boredoms += 1;\n        }\n    }\n    boredoms", "    let\
    \ mut boredoms = 0;\n    let mut start_word = false;\n    for c in S.chars() {\n\
    \        if c == '.' || c == '?' || c == '!' {\n            start_word = true;\n\
    \        } else if start_word && c == 'I' {\n            boredoms += 1;\n    \
    \        start_word = false;\n        } else {\n            start_word = false;\n\
    \        }\n    }\n    boredoms", "    let mut boredoms = 0;\n    let mut is_bored\
    \ = false;\n    for c in S.chars() {\n        if c == '.' || c == '?' || c ==\
    \ '!' {\n            is_bored = false;\n        } else if c == 'I' {\n       \
    \     is_bored = true;\n        } else if is_bored {\n            boredoms +=\
    \ 1;\n        }\n    }\n    boredoms", "    let mut boredoms = 0;\n    let mut\
    \ words = S.split(|c: char| c == '.' || c == '?' || c == '!');\n    for word in\
    \ words {\n        if word.starts_with(\"I\") {\n            boredoms += 1;\n\
    \        }\n    }\n    boredoms", "    let mut boredoms = 0;\n    let mut words\
    \ = S.split(|c: char| c == '.' || c == '?' || c == '!');\n    for word in words\
    \ {\n        if word.starts_with(\"I\") {\n            boredoms += 1;\n      \
    \  }\n    }\n    boredoms", "    let mut boredoms = 0;\n    let mut sentence =\
    \ String::new();\n    for c in S.chars() {\n        if c == '.' || c == '?' ||\
    \ c == '!' {\n            if sentence.starts_with(\"I\") {\n                boredoms\
    \ += 1;\n            }\n            sentence.clear();\n        } else {\n    \
    \        sentence.push(c);\n        }\n    }\n    boredoms", "    let mut boredoms\
    \ = 0;\n    let mut is_bored = false;\n    for c in S.chars() {\n        if c\
    \ == '.' || c == '?' || c == '!' {\n            is_bored = false;\n        } else\
    \ if c == 'I' {\n            is_bored = true;\n        } else if is_bored {\n\
    \            boredoms += 1;\n        }\n    }\n    boredoms", "    let mut boredoms\
    \ = 0;\n    let mut sentence_start = true;\n    for word in S.split(|c: char|\
    \ c == '.' || c == '?' || c == '!') {\n        if sentence_start && word.starts_with(\"\
    I\") {\n            boredoms += 1;\n        }\n        sentence_start = true;\n\
    \    }\n    boredoms", "    let mut boredoms = 0;\n    let mut sentence = String::new();\n\
    \    for c in S.chars() {\n        if c == '.' || c == '?' || c == '!' {\n   \
    \         if sentence.starts_with(\"I\") {\n                boredoms += 1;\n \
    \           }\n            sentence.clear();\n        } else {\n            sentence.push(c);\n\
    \        }\n    }\n    boredoms", "    let mut boredoms = 0;\n    let mut words\
    \ = S.split(|c: char| c == '.' || c == '?' || c == '!');\n    for word in words\
    \ {\n        if word.starts_with(\"I\") {\n            boredoms += 1;\n      \
    \  }\n    }\n    boredoms", "    let mut boredoms = 0;\n    let mut sentence =\
    \ String::new();\n    for c in S.chars() {\n        if c == '.' || c == '?' ||\
    \ c == '!' {\n            if sentence.starts_with(\"I\") {\n                boredoms\
    \ += 1;\n            }\n            sentence.clear();\n        } else {\n    \
    \        sentence.push(c);\n        }\n    }\n    boredoms", "    let mut boredoms\
    \ = 0;\n    let mut sentence = String::new();\n    for c in S.chars() {\n    \
    \    if c == '.' || c == '?' || c == '!' {\n            if sentence.starts_with(\"\
    I\") {\n                boredoms += 1;\n            }\n            sentence.clear();\n\
    \        } else {\n            sentence.push(c);\n        }\n    }\n    boredoms",
  "    let mut boredoms = 0;\n    let mut sentence = String::new();\n    for c in\
    \ S.chars() {\n        if c == '.' || c == '?' || c == '!' {\n            if sentence.starts_with(\"\
    I\") {\n                boredoms += 1;\n            }\n            sentence.clear();\n\
    \        } else {\n            sentence.push(c);\n        }\n    }\n    boredoms",
  "    let mut boredoms = 0;\n    let mut words = S.split(|c: char| c == '.' || c\
    \ == '?' || c == '!');\n    for word in words {\n        let mut chars = word.split_whitespace();\n\
    \        if let Some(first) = chars.next() {\n            if first == \"I\" {\n\
    \                boredoms += 1;\n            }\n        }\n    }\n    boredoms",
  "    let mut boredoms = 0;\n    let mut words = S.split(|c: char| c == '.' || c\
    \ == '?' || c == '!');\n    for word in words {\n        if word.starts_with(\"\
    I\") {\n            boredoms += 1;\n        }\n    }\n    boredoms", "    let\
    \ mut boredoms = 0;\n    let mut sentence = String::new();\n    for c in S.chars()\
    \ {\n        if c == '.' || c == '?' || c == '!' {\n            if sentence.starts_with(\"\
    I\") {\n                boredoms += 1;\n            }\n            sentence.clear();\n\
    \        } else {\n            sentence.push(c);\n        }\n    }\n    boredoms",
  "    let mut count = 0;\n    let mut is_bored = false;\n    for c in S.chars() {\n\
    \        if c == 'I' {\n            is_bored = true;\n        } else if c == '.'\
    \ || c == '?' || c == '!' {\n            if is_bored {\n                count\
    \ += 1;\n            }\n            is_bored = false;\n        }\n    }\n    count"]
stop_tokens:
- "\n}"

name: HumanEval_51_remove_vowels
language: rs
results:
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp_chala23.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpj33n2y2u.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpd9er6301.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpwwf9zblv.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_alphabetic()\
    \ {\n            continue;\n        }\n        if c != 'a' && c != 'e' && c !=\
    \ 'i' && c != 'o' && c != 'u' {\n            result.push(c);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmp636stxw6.rs:28:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_alphabetic()\
    \ {\n            continue;\n        }\n        if c == 'a' || c == 'e' || c ==\
    \ 'i' || c == 'o' || c == 'u' {\n            continue;\n        }\n        result.push(c);\n\
    \    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n   \
    \ assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpetf1a4_i.rs:29:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_alphabetic()\
    \ {\n            continue;\n        }\n        if c != 'a' && c != 'e' && c !=\
    \ 'i' && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O'\
    \ && c != 'U' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpq54ja1vz.rs:28:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpqk7kll45.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars().filter(|c| !c.is_ascii_lowercase() || !c.is_ascii_uppercase()\
    \ || !is_vowel(*c)).collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpc8d6fffl.rs:13:84\n\
    \   |\n13 |     text.chars().filter(|c| !c.is_ascii_lowercase() || !c.is_ascii_uppercase()\
    \ || !is_vowel(*c)).collect()\n   |                                          \
    \                                          ^^^^^^^^ not found in this scope\n\n\
    error: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpaeedb55b.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !is_vowel(c) {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpzoyfd1zg.rs:15:40\n\
    \   |\n15 |         if !c.is_ascii_lowercase() || !is_vowel(c) {\n   |       \
    \                                 ^^^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp4ay7v4e0.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || c != 'a' || c != 'e'\
    \ || c != 'i' || c != 'o' || c != 'u' {\n            result.push(c);\n       \
    \ }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpm_gwi47q.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars().filter(|c| !c.is_ascii_lowercase() || !c.is_ascii_uppercase()\
    \ || !is_vowel(*c)).collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmph51i1w82.rs:13:84\n\
    \   |\n13 |     text.chars().filter(|c| !c.is_ascii_lowercase() || !c.is_ascii_uppercase()\
    \ || !is_vowel(*c)).collect()\n   |                                          \
    \                                          ^^^^^^^^ not found in this scope\n\n\
    error: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmplgv_n3mg.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars().filter(|c| !c.is_ascii_lowercase() || !c.is_ascii_uppercase()\
    \ || !is_vowel(*c)).collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp5fegs07w.rs:13:84\n\
    \   |\n13 |     text.chars().filter(|c| !c.is_ascii_lowercase() || !c.is_ascii_uppercase()\
    \ || !is_vowel(*c)).collect()\n   |                                          \
    \                                          ^^^^^^^^ not found in this scope\n\n\
    error: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpek926avq.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_alphabetic()\
    \ {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpfk4i35pc.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpk99_o_g1.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpfupca71z.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmptffsi9po.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpta82b2iu.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmptkunnpqh.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_alphabetic()\
    \ {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmp66n31iha.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_alphabetic()\
    \ {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpddq89uhi.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !is_vowel(c) {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpz6ivaxkl.rs:15:40\n\
    \   |\n15 |         if !c.is_ascii_lowercase() || !is_vowel(c) {\n   |       \
    \                                 ^^^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' && c != 'A' &&\
    \ c != 'E' && c != 'I' && c != 'O' && c != 'U' {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !is_vowel(c) {\n \
    \           result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpic0ap8k2.rs:15:67\n\
    \   |\n15 |         if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !is_vowel(c)\
    \ {\n   |                                                                   ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || c != 'a' || c != 'e'\
    \ || c != 'i' || c != 'o' || c != 'u' {\n            result.push(c);\n       \
    \ }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmp9vgiwk4x.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmp7i0ug_ts.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpf89r3j62.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !is_vowel(c) {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpn58fi4_b.rs:15:40\n\
    \   |\n15 |         if !c.is_ascii_lowercase() || !is_vowel(c) {\n   |       \
    \                                 ^^^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmp67jkkt2t.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpqnwlphh9.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmppohfivrw.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpxv0zi8dk.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars().filter(|c| !c.is_ascii_lowercase() || !c.is_ascii_uppercase()\
    \ || !is_vowel(*c)).collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp3u4csmls.rs:13:84\n\
    \   |\n13 |     text.chars().filter(|c| !c.is_ascii_lowercase() || !c.is_ascii_uppercase()\
    \ || !is_vowel(*c)).collect()\n   |                                          \
    \                                          ^^^^^^^^ not found in this scope\n\n\
    error: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmph8s_1y7d.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_alphabetic()\
    \ {\n            continue;\n        }\n        if c != 'a' && c != 'e' && c !=\
    \ 'i' && c != 'o' && c != 'u' {\n            result.push(c);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmphmb5v8kb.rs:28:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmp2a0qvshz.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !is_vowel(c) {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpffrcz7w7.rs:15:40\n\
    \   |\n15 |         if !c.is_ascii_lowercase() || !is_vowel(c) {\n   |       \
    \                                 ^^^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_ascii_alphabetic()\
    \ {\n            continue;\n        }\n        if c != 'a' && c != 'e' && c !=\
    \ 'i' && c != 'o' && c != 'u' {\n            result.push(c);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmp83hwbxor.rs:28:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars().filter(|c| !c.is_ascii_lowercase() || !c.is_ascii_uppercase()\
    \ || !is_vowel(*c)).collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpvg518bok.rs:13:84\n\
    \   |\n13 |     text.chars().filter(|c| !c.is_ascii_lowercase() || !c.is_ascii_uppercase()\
    \ || !is_vowel(*c)).collect()\n   |                                          \
    \                                          ^^^^^^^^ not found in this scope\n\n\
    error: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || c != 'a' || c != 'e'\
    \ || c != 'i' || c != 'o' || c != 'u' {\n            result.push(c);\n       \
    \ }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpr1yqlj6o.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars().filter(|c| !c.is_ascii_lowercase() || !is_vowel(*c)).collect()\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpv6wigovd.rs:13:57\n\
    \   |\n13 |     text.chars().filter(|c| !c.is_ascii_lowercase() || !is_vowel(*c)).collect()\n\
    \   |                                                         ^^^^^^^^ not found\
    \ in this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_alphabetic()\
    \ {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpgdwd5bzy.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpjwv2jza7.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars().filter(|c| !c.is_ascii_lowercase() || !c.is_ascii_uppercase()\
    \ || !is_vowel(*c)).collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmptloaoehz.rs:13:84\n\
    \   |\n13 |     text.chars().filter(|c| !c.is_ascii_lowercase() || !c.is_ascii_uppercase()\
    \ || !is_vowel(*c)).collect()\n   |                                          \
    \                                          ^^^^^^^^ not found in this scope\n\n\
    error: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_alphabetic()\
    \ {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpupw6uo9x.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || c != 'a' || c != 'e'\
    \ || c != 'i' || c != 'o' || c != 'u' {\n            result.push(c);\n       \
    \ }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmps4l98eqh.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || c != 'a' || c != 'e'\
    \ || c != 'i' || c != 'o' || c != 'u' {\n            result.push(c);\n       \
    \ }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpz0aiamkc.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmptae62qr1.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpycwl_lm0.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpp4rv3p6i.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || c != 'a' || c != 'e'\
    \ || c != 'i' || c != 'o' || c != 'u' {\n            result.push(c);\n       \
    \ }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmp8g9go4p5.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !is_vowel(c) {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmphr15b0a8.rs:15:40\n\
    \   |\n15 |         if !c.is_ascii_lowercase() || !is_vowel(c) {\n   |       \
    \                                 ^^^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || c != 'a' || c != 'e'\
    \ || c != 'i' || c != 'o' || c != 'u' {\n            result.push(c);\n       \
    \ }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpateezz3w.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || c != 'a' || c != 'e'\
    \ || c != 'i' || c != 'o' || c != 'u' {\n            result.push(c);\n       \
    \ }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpoji7gbq8.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmplww80ely.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !is_vowel(c) {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpuj_yrpqq.rs:15:40\n\
    \   |\n15 |         if !c.is_ascii_lowercase() || !is_vowel(c) {\n   |       \
    \                                 ^^^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpyl2_yuvd.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_whitespace()\
    \ {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpg0hkvf86.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_alphabetic()\
    \ {\n            continue;\n        }\n        if c != 'a' && c != 'e' && c !=\
    \ 'i' && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O'\
    \ && c != 'U' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpqgbx2r8k.rs:28:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmp6lv8nlw3.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_alphabetic()\
    \ {\n            continue;\n        }\n        if c != 'a' && c != 'e' && c !=\
    \ 'i' && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O'\
    \ && c != 'U' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmped81yvk7.rs:28:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !is_vowel(c) {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpc255omso.rs:15:40\n\
    \   |\n15 |         if !c.is_ascii_lowercase() || !is_vowel(c) {\n   |       \
    \                                 ^^^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || c != 'a' || c != 'e'\
    \ || c != 'i' || c != 'o' || c != 'u' {\n            result.push(c);\n       \
    \ }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpo0mkxo7c.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmp_t3j2bzj.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_ascii_digit()\
    \ {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpx102lsy1.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmplfhxozfg.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpacotep49.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_alphabetic()\
    \ {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmp4lo3574x.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut new_text = String::new();\n    for c in text.chars() {\n    \
    \    if !c.is_ascii_lowercase() || c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u' {\n            new_text.push(c);\n        }\n    }\n    new_text\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmph6pykejc.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || c != 'a' || c != 'e'\
    \ || c != 'i' || c != 'o' || c != 'u' {\n            result.push(c);\n       \
    \ }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpzx4oqbz2.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp46apdoy2.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpqv2k0e0x.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || c != 'a' || c != 'e'\
    \ || c != 'i' || c != 'o' || c != 'u' {\n            result.push(c);\n       \
    \ }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmp3b0zb4fl.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpw4sqowze.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || c != 'a' || c != 'e'\
    \ || c != 'i' || c != 'o' || c != 'u' {\n            result.push(c);\n       \
    \ }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpmbioyv2h.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpkm084xgf.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut new_text = String::new();\n    for c in text.chars() {\n    \
    \    if !c.is_ascii_lowercase() || c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u' {\n            new_text.push(c);\n        }\n    }\n    new_text\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpgyosua90.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || c != 'a' || c != 'e'\
    \ || c != 'i' || c != 'o' || c != 'u' {\n            result.push(c);\n       \
    \ }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmprpcw30my.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_alphabetic()\
    \ {\n            continue;\n        }\n        if c != 'a' && c != 'e' && c !=\
    \ 'i' && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O'\
    \ && c != 'U' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpyrpkfo7h.rs:28:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp216pv3dz.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_ascii_digit()\
    \ {\n            continue;\n        }\n        if c == 'a' || c == 'e' || c ==\
    \ 'i' || c == 'o' || c == 'u' {\n            continue;\n        }\n        result.push(c);\n\
    \    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n   \
    \ assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpenbqmoh7.rs:29:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_ascii_alphabetic()\
    \ {\n            continue;\n        }\n        if c != 'a' && c != 'e' && c !=\
    \ 'i' && c != 'o' && c != 'u' {\n            result.push(c);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpuuhbuara.rs:28:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !is_vowel(c) {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmppfgxh9yp.rs:15:40\n\
    \   |\n15 |         if !c.is_ascii_lowercase() || !is_vowel(c) {\n   |       \
    \                                 ^^^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || c != 'a' || c != 'e'\
    \ || c != 'i' || c != 'o' || c != 'u' {\n            result.push(c);\n       \
    \ }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmprsdb_8cq.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars().filter(|c| !c.is_ascii_lowercase() || !c.is_ascii_uppercase()\
    \ || !c.is_ascii_digit() || !c.is_whitespace()).collect()\n}\n\nfn main() {\n\
    \    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpuxvgz9n8.rs:19:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpr7ft1zux.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_alphabetic()\
    \ {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmps05__cl8.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpkipxd5_e.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmppuiq461j.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmp4z3z8s8j.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_whitespace()\
    \ {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpg8ghye8d.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpsc9tch5m.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !is_vowel(c) {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpn_3mnpkt.rs:15:40\n\
    \   |\n15 |         if !c.is_ascii_lowercase() || !is_vowel(c) {\n   |       \
    \                                 ^^^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp8gh5as3f.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_alphabetic()\
    \ {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmp3qh97zy8.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !is_vowel(c) {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpmzme1380.rs:15:40\n\
    \   |\n15 |         if !c.is_ascii_lowercase() || !is_vowel(c) {\n   |       \
    \                                 ^^^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_alphabetic()\
    \ {\n            continue;\n        }\n        if c != 'a' && c != 'e' && c !=\
    \ 'i' && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O'\
    \ && c != 'U' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpakdngn9i.rs:28:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmph33ckgbm.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars().filter(|c| !c.is_ascii_lowercase() || !c.is_ascii_uppercase()\
    \ || !is_vowel(*c)).collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpjqzqo_72.rs:13:84\n\
    \   |\n13 |     text.chars().filter(|c| !c.is_ascii_lowercase() || !c.is_ascii_uppercase()\
    \ || !is_vowel(*c)).collect()\n   |                                          \
    \                                          ^^^^^^^^ not found in this scope\n\n\
    error: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp8oojjhi_.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmp7bdcanit.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpxukz1oxp.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp9ut7fldu.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpp71dsq18.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || c == 'a' || c == 'e' || c == 'i' || c == 'o'\
    \ || c == 'u' {\n            continue;\n        }\n        result.push(c);\n \
    \   }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"bcdfghjklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpdk368r3x.rs:26:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_alphabetic()\
    \ {\n            continue;\n        }\n        if c != 'a' && c != 'e' && c !=\
    \ 'i' && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O'\
    \ && c != 'U' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpnlhmcd8z.rs:28:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpd7d23gys.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' && c != 'A' &&\
    \ c != 'E' && c != 'I' && c != 'O' && c != 'U' {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_alphabetic()\
    \ {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpxtfumbg4.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_alphabetic()\
    \ {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmp762x8van.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp78zl18z9.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || c != 'a' || c != 'e'\
    \ || c != 'i' || c != 'o' || c != 'u' {\n            result.push(c);\n       \
    \ }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmprwlm5znb.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars().filter(|c| !c.is_ascii_lowercase() || !c.is_ascii_uppercase()\
    \ || !is_vowel(*c)).collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpy6l3v2sy.rs:13:84\n\
    \   |\n13 |     text.chars().filter(|c| !c.is_ascii_lowercase() || !c.is_ascii_uppercase()\
    \ || !is_vowel(*c)).collect()\n   |                                          \
    \                                          ^^^^^^^^ not found in this scope\n\n\
    error: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmplqxfqtwt.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !is_vowel(c) {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpblwo1q06.rs:15:40\n\
    \   |\n15 |         if !c.is_ascii_lowercase() || !is_vowel(c) {\n   |       \
    \                                 ^^^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpo3dsqv0s.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars().filter(|c| !c.is_ascii_lowercase() || !c.is_ascii_uppercase()\
    \ || !is_vowel(*c)).collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp9l_1hb9m.rs:13:84\n\
    \   |\n13 |     text.chars().filter(|c| !c.is_ascii_lowercase() || !c.is_ascii_uppercase()\
    \ || !is_vowel(*c)).collect()\n   |                                          \
    \                                          ^^^^^^^^ not found in this scope\n\n\
    error: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmppqar2rig.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpl35rzrvr.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_ascii_alphabetic()\
    \ {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpjj8iilqf.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || c != 'a' || c != 'e'\
    \ || c != 'i' || c != 'o' || c != 'u' {\n            result.push(c);\n       \
    \ }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpa63kf3qn.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars().filter(|c| !c.is_ascii_lowercase() || !c.is_ascii_uppercase()\
    \ || !is_vowel(*c)).collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp_r_3ege6.rs:13:84\n\
    \   |\n13 |     text.chars().filter(|c| !c.is_ascii_lowercase() || !c.is_ascii_uppercase()\
    \ || !is_vowel(*c)).collect()\n   |                                          \
    \                                          ^^^^^^^^ not found in this scope\n\n\
    error: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmp22kzm8pk.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpw385ea39.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_whitespace()\
    \ {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmp6uaxmchn.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmphgs_obtq.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars().filter(|c| !c.is_ascii_lowercase() || !c.is_ascii_uppercase()\
    \ || !is_vowel(*c)).collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpbxkuc5sh.rs:13:84\n\
    \   |\n13 |     text.chars().filter(|c| !c.is_ascii_lowercase() || !c.is_ascii_uppercase()\
    \ || !is_vowel(*c)).collect()\n   |                                          \
    \                                          ^^^^^^^^ not found in this scope\n\n\
    error: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_alphabetic()\
    \ {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpkkv_qc6s.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || c != 'a' || c != 'e'\
    \ || c != 'i' || c != 'o' || c != 'u' {\n            result.push(c);\n       \
    \ }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpk0c_hwft.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() {\n            result.push(c);\n        } else if\
    \ c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpzctywzz1.rs:32:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !is_vowel(c) {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpp8zfu3zl.rs:15:40\n\
    \   |\n15 |         if !c.is_ascii_lowercase() || !is_vowel(c) {\n   |       \
    \                                 ^^^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_ascii_alphabetic()\
    \ {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmp8nioswkc.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpevnkuq2x.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || c != 'a' || c != 'e'\
    \ || c != 'i' || c != 'o' || c != 'u' {\n            result.push(c);\n       \
    \ }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmp6yn_mceo.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmptyhp95yj.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp6mc3w_my.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpfa4rvvcx.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp4npzq0gx.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || c != 'a' || c != 'e'\
    \ || c != 'i' || c != 'o' || c != 'u' {\n            result.push(c);\n       \
    \ }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmprc9zrkg4.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpvjq8ouoo.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpp6qawfv2.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpmowhi4vy.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_alphabetic()\
    \ {\n            continue;\n        }\n        if c != 'a' && c != 'e' && c !=\
    \ 'i' && c != 'o' && c != 'u' {\n            result.push(c);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpkb3qccmk.rs:28:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpgsbx4_zz.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !is_vowel(c) {\n \
    \           result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmph9h9kx9e.rs:15:67\n\
    \   |\n15 |         if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !is_vowel(c)\
    \ {\n   |                                                                   ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_ascii_alphabetic()\
    \ {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpq855bkew.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpmh9faxqu.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpl3poz5v7.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpcri75yaj.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpefsp2neu.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_ascii_alphabetic()\
    \ {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpnrp9qh3h.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_alphabetic()\
    \ {\n            continue;\n        }\n        if c != 'a' && c != 'e' && c !=\
    \ 'i' && c != 'o' && c != 'u' {\n            result.push(c);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmp0hef1poo.rs:28:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpx8ax8208.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_alphabetic()\
    \ {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmp743ky2a_.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmp8zyp6z5s.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut new_text = String::new();\n    for c in text.chars() {\n    \
    \    if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_ascii_digit()\
    \ {\n            new_text.push(c);\n        }\n    }\n    new_text\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpnf3id4oj.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || c != 'a' || c != 'e'\
    \ || c != 'i' || c != 'o' || c != 'u' {\n            result.push(c);\n       \
    \ }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpi9wx3f1y.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmp4vlvuikg.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars().filter(|c| !c.is_ascii_lowercase() || !c.is_ascii_uppercase()\
    \ || !is_vowel(*c)).collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp394uqmu5.rs:13:84\n\
    \   |\n13 |     text.chars().filter(|c| !c.is_ascii_lowercase() || !c.is_ascii_uppercase()\
    \ || !is_vowel(*c)).collect()\n   |                                          \
    \                                          ^^^^^^^^ not found in this scope\n\n\
    error: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars().filter(|c| !is_vowel(*c)).collect()\n}\n\nfn main() {\n\
    \    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp47czfayb.rs:13:30\n\
    \   |\n13 |     text.chars().filter(|c| !is_vowel(*c)).collect()\n   |       \
    \                       ^^^^^^^^ not found in this scope\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmp6xvgv7qf.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpxzqv4csp.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || c != 'a' || c != 'e'\
    \ || c != 'i' || c != 'o' || c != 'u' {\n            result.push(c);\n       \
    \ }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpixe95s3s.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_alphabetic()\
    \ {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpixclghg8.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpopsav1bp.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp1dpuonsb.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_whitespace()\
    \ {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpu2ga5z2d.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut new_text = String::new();\n    for c in text.chars() {\n    \
    \    if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_alphabetic()\
    \ {\n            new_text.push(c);\n        }\n    }\n    new_text\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpl___hnwd.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpbzk2qmm8.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || c != 'a' || c != 'e'\
    \ || c != 'i' || c != 'o' || c != 'u' {\n            result.push(c);\n       \
    \ }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpdwhrjt77.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_alphabetic()\
    \ {\n            continue;\n        }\n        if c != 'a' && c != 'e' && c !=\
    \ 'i' && c != 'o' && c != 'u' {\n            result.push(c);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpfdhbz5ok.rs:28:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_alphabetic()\
    \ {\n            continue;\n        }\n        if c != 'a' && c != 'e' && c !=\
    \ 'i' && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O'\
    \ && c != 'U' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpe_ckqjz1.rs:28:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut new_text = String::new();\n    for c in text.chars() {\n    \
    \    if !is_vowel(c) {\n            new_text.push(c);\n        }\n    }\n    new_text\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpo51jwg3n.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmps_z45aw1.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_alphabetic()\
    \ {\n            continue;\n        }\n        if c != 'a' && c != 'e' && c !=\
    \ 'i' && c != 'o' && c != 'u' {\n            result.push(c);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmp1chnsm7e.rs:28:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmppb0ibeqb.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut new_text = String::new();\n    for c in text.chars() {\n    \
    \    if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_alphabetic()\
    \ {\n            continue;\n        }\n        match c {\n            'a' | 'e'\
    \ | 'i' | 'o' | 'u' | 'A' | 'E' | 'I' | 'O' | 'U' => continue,\n            _\
    \ => new_text.push(c),\n        }\n    }\n    new_text\n}\n\nfn main() {\n   \
    \ let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\")),\
    \ String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmptxtbixi1.rs:29:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || c != 'a' || c != 'e'\
    \ || c != 'i' || c != 'o' || c != 'u' {\n            result.push(c);\n       \
    \ }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmp1sghjewa.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || c != 'a' || c != 'e'\
    \ || c != 'i' || c != 'o' || c != 'u' {\n            result.push(c);\n       \
    \ }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpfhmkvim9.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpe3oogxgn.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp4pw4oqs2.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmp_bbq3f16.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars().filter(|c| !c.is_ascii_lowercase() || !c.is_ascii_uppercase()\
    \ || !is_vowel(*c)).collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpc3_p4iip.rs:13:84\n\
    \   |\n13 |     text.chars().filter(|c| !c.is_ascii_lowercase() || !c.is_ascii_uppercase()\
    \ || !is_vowel(*c)).collect()\n   |                                          \
    \                                          ^^^^^^^^ not found in this scope\n\n\
    error: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !is_vowel(c) {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpffgqx2ya.rs:15:40\n\
    \   |\n15 |         if !c.is_ascii_lowercase() || !is_vowel(c) {\n   |       \
    \                                 ^^^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp87v0gtcz.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_ascii_digit()\
    \ {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpw267size.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp4fdv5lwc.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmp667qcegq.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u' {\n            result.push(c);\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmp9s__um3s.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars().filter(|c| !c.is_ascii_lowercase() || !c.is_ascii_uppercase()\
    \ || !is_vowel(*c)).collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpfq25jxqb.rs:13:84\n\
    \   |\n13 |     text.chars().filter(|c| !c.is_ascii_lowercase() || !c.is_ascii_uppercase()\
    \ || !is_vowel(*c)).collect()\n   |                                          \
    \                                          ^^^^^^^^ not found in this scope\n\n\
    error: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || c != 'a' || c != 'e'\
    \ || c != 'i' || c != 'o' || c != 'u' {\n            result.push(c);\n       \
    \ }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpabs5u7ue.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || c != 'a' || c != 'e'\
    \ || c != 'i' || c != 'o' || c != 'u' {\n            result.push(c);\n       \
    \ }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpog0xvgxu.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmph9j8r9gg.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || c != 'a' || c != 'e'\
    \ || c != 'i' || c != 'o' || c != 'u' {\n            result.push(c);\n       \
    \ }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpt2xsp6z8.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || c != 'a' || c != 'e'\
    \ || c != 'i' || c != 'o' || c != 'u' {\n            result.push(c);\n       \
    \ }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpapfh42pv.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_ascii_lowercase() || !is_vowel(c) {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp_w7rhz2f.rs:15:40\n\
    \   |\n15 |         if !c.is_ascii_lowercase() || !is_vowel(c) {\n   |       \
    \                                 ^^^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  exit_code: 1
  status: SyntaxError

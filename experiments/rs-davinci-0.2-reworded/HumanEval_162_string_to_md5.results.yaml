language: rs
name: HumanEval_162_string_to_md5
results:
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut hex_string = String::new();\n\
    \    for byte in result.iter() {\n        hex_string.push_str(&format!(\"{:02x}\"\
    , byte));\n    }\n    Some(hex_string)\n}\n\nfn main() {\n    let candidate =\
    \ string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpgdi8rby2.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp77sdae0a.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp9vt9vra1.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut hex_string = String::new();\n\
    \    for byte in result.iter() {\n        hex_string.push_str(&format!(\"{:02x}\"\
    , byte));\n    }\n    Some(hex_string)\n}\n\nfn main() {\n    let candidate =\
    \ string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpgdi8rby2.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp9vt9vra1.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let hash = hasher.result_str();\n\n    Some(hash)\n}\n\nfn main() {\n   \
    \ let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello\
    \ world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpmu4d7_nh.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp77sdae0a.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp77sdae0a.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for byte\
    \ in result.iter() {\n        s.push_str(&format!(\"{:02x}\", byte));\n    }\n\
    \    Some(s)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpirv3xbvx.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut output = String::new();\n    for\
    \ byte in result.iter() {\n        output.push_str(&format!(\"{:02x}\", byte));\n\
    \    }\n    Some(output)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n\
    \    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpwmh9a772.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for byte\
    \ in result.iter() {\n        s.push_str(&format!(\"{:02x}\", byte));\n    }\n\
    \    Some(s)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpirv3xbvx.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for byte\
    \ in result.iter() {\n        s.push_str(&format!(\"{:02x}\", byte));\n    }\n\
    \    Some(s)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpirv3xbvx.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp9vt9vra1.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut result_string = String::new();\n\
    \    for byte in result.iter() {\n        result_string.push_str(&format!(\"{:02x}\"\
    , byte));\n    }\n    Some(result_string)\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpbrgs32iu.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp77sdae0a.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut result_string = String::new();\n\
    \    for byte in result.iter() {\n        result_string.push_str(&format!(\"{:02x}\"\
    , byte));\n    }\n    Some(result_string)\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpbrgs32iu.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut md5_string = String::new();\n\
    \    for byte in result.iter() {\n        md5_string.push_str(&format!(\"{:02x}\"\
    , byte));\n    }\n    Some(md5_string)\n}\n\nfn main() {\n    let candidate =\
    \ string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpuc34x7h9.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    Some(format!(\"{:x}\", result))\n}\n\n\
    fn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpvy430dy9.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    Some(format!(\"{:x}\", result))\n}\n\n\
    fn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpvy430dy9.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut md5_str = String::new();\n   \
    \ for i in result.iter() {\n        md5_str.push_str(&format!(\"{:02x}\", i));\n\
    \    }\n    Some(md5_str)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n\
    \    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpu8heeb_b.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp77sdae0a.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp9vt9vra1.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp77sdae0a.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp77sdae0a.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp77sdae0a.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:02x}\", i));\n    }\n  \
    \  Some(s)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmppqwv5i6k.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp9vt9vra1.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:02x}\", i));\n    }\n  \
    \  Some(s)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmppqwv5i6k.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp9vt9vra1.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp77sdae0a.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp77sdae0a.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut hex_string = String::new();\n\
    \    for byte in result.iter() {\n        hex_string.push_str(&format!(\"{:02x}\"\
    , byte));\n    }\n    Some(hex_string)\n}\n\nfn main() {\n    let candidate =\
    \ string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpgdi8rby2.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut md5_string = String::new();\n\
    \    for byte in result.iter() {\n        md5_string.push_str(&format!(\"{:02x}\"\
    , byte));\n    }\n    Some(md5_string)\n}\n\nfn main() {\n    let candidate =\
    \ string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpuc34x7h9.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp77sdae0a.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp77sdae0a.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp77sdae0a.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:02x}\", i));\n    }\n  \
    \  Some(s)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmppqwv5i6k.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut result_str = String::new();\n\
    \    for byte in result.iter() {\n        result_str.push_str(&format!(\"{:x}\"\
    , byte));\n    }\n    Some(result_str)\n}\n\nfn main() {\n    let candidate =\
    \ string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpz5edo9ax.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut md5_string = String::new();\n\
    \    for byte in result.iter() {\n        md5_string.push_str(&format!(\"{:02x}\"\
    , byte));\n    }\n    Some(md5_string)\n}\n\nfn main() {\n    let candidate =\
    \ string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpuc34x7h9.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp77sdae0a.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut hex_string = String::new();\n\
    \    for byte in result.iter() {\n        hex_string.push_str(&format!(\"{:02x}\"\
    , byte));\n    }\n    Some(hex_string)\n}\n\nfn main() {\n    let candidate =\
    \ string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpgdi8rby2.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp77sdae0a.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut hex_string = String::new();\n\
    \    for byte in result.iter() {\n        hex_string.push_str(&format!(\"{:02x}\"\
    , byte));\n    }\n    Some(hex_string)\n}\n\nfn main() {\n    let candidate =\
    \ string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpgdi8rby2.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let hex_str = format!(\"{:x}\", result);\n\
    \    Some(hex_str)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n   \
    \ assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpj8lv0u20.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748609
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    Some(format!(\"{:x}\", result))\n}\n\n\
    fn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpvy430dy9.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut hash = String::new();\n    for\
    \ byte in result.iter() {\n        hash.push_str(&format!(\"{:02x}\", byte));\n\
    \    }\n    Some(hash)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n\
    \    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpfdj6o6iw.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:02x}\", i));\n    }\n  \
    \  Some(s)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmppqwv5i6k.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp77sdae0a.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for byte\
    \ in result.iter() {\n        s.push_str(&format!(\"{:02x}\", byte));\n    }\n\
    \    Some(s)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpirv3xbvx.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:02x}\", i));\n    }\n  \
    \  Some(s)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmppqwv5i6k.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp77sdae0a.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut output = String::new();\n    for\
    \ byte in result.iter() {\n        output.push_str(&format!(\"{:02x}\", byte));\n\
    \    }\n    Some(output)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n\
    \    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpwmh9a772.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    Some(format!(\"{:x}\", result))\n}\n\n\
    fn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpvy430dy9.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for byte\
    \ in result.iter() {\n        s.push_str(&format!(\"{:02x}\", byte));\n    }\n\
    \    Some(s)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpirv3xbvx.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut output = String::new();\n    for\
    \ i in result.iter() {\n        output.push_str(&format!(\"{:x}\", i));\n    }\n\
    \    Some(output)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpruzybwef.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut output = String::new();\n    for\
    \ byte in result.iter() {\n        output.push_str(&format!(\"{:02x}\", byte));\n\
    \    }\n    Some(output)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n\
    \    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpwmh9a772.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for byte\
    \ in result.iter() {\n        s.push_str(&format!(\"{:02x}\", byte));\n    }\n\
    \    Some(s)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpirv3xbvx.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp9vt9vra1.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let result_str = format!(\"{:x}\", result);\n\
    \    Some(result_str)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n\
    \    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpcsoij4rq.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut hex_string = String::new();\n\
    \    for byte in result.iter() {\n        hex_string.push_str(&format!(\"{:02x}\"\
    , byte));\n    }\n    Some(hex_string)\n}\n\nfn main() {\n    let candidate =\
    \ string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpgdi8rby2.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    Some(format!(\"{:x}\", result))\n}\n\n\
    fn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpvy430dy9.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp77sdae0a.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp77sdae0a.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp77sdae0a.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp9vt9vra1.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut md5_string = String::new();\n\
    \    for byte in result.iter() {\n        md5_string.push_str(&format!(\"{:02x}\"\
    , byte));\n    }\n    Some(md5_string)\n}\n\nfn main() {\n    let candidate =\
    \ string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpuc34x7h9.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut output = String::new();\n    for\
    \ i in result.iter() {\n        output.push_str(&format!(\"{:x}\", i));\n    }\n\
    \    Some(output)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpruzybwef.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp77sdae0a.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp9vt9vra1.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    Some(format!(\"{:x}\", result))\n}\n\n\
    fn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpvy430dy9.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp77sdae0a.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp77sdae0a.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp77sdae0a.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut output = String::new();\n    for\
    \ i in result.iter() {\n        output.push_str(&format!(\"{:x}\", i));\n    }\n\
    \    Some(output)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpruzybwef.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:02x}\", i));\n    }\n  \
    \  Some(s)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmppqwv5i6k.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for byte\
    \ in result.iter() {\n        s.push_str(&format!(\"{:02x}\", byte));\n    }\n\
    \    Some(s)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpirv3xbvx.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut output = String::new();\n    for\
    \ byte in result.iter() {\n        output.push_str(&format!(\"{:02x}\", byte));\n\
    \    }\n    Some(output)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n\
    \    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpwmh9a772.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp77sdae0a.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp77sdae0a.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:02x}\", i));\n    }\n  \
    \  Some(s)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmppqwv5i6k.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    Some(format!(\"{:x}\", result))\n}\n\n\
    fn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpvy430dy9.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp77sdae0a.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut output = String::new();\n    for\
    \ byte in result.iter() {\n        output.push_str(&format!(\"{:02x}\", byte));\n\
    \    }\n    Some(output)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n\
    \    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpwmh9a772.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    Some(format!(\"{:x}\", result))\n}\n\n\
    fn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpvy430dy9.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp9vt9vra1.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp77sdae0a.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp77sdae0a.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for byte\
    \ in result.iter() {\n        s.push_str(&format!(\"{:02x}\", byte));\n    }\n\
    \    Some(s)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpirv3xbvx.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut result_string = String::new();\n\
    \    for byte in result.iter() {\n        result_string.push_str(&format!(\"{:02x}\"\
    , byte));\n    }\n    Some(result_string)\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpbrgs32iu.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp77sdae0a.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp77sdae0a.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut result_string = String::new();\n\
    \    for byte in result.iter() {\n        result_string.push_str(&format!(\"{:02x}\"\
    , byte));\n    }\n    Some(result_string)\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpbrgs32iu.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:02x}\", i));\n    }\n  \
    \  Some(s)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmppqwv5i6k.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp9vt9vra1.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut md5_string = String::new();\n\
    \    for byte in result.iter() {\n        md5_string.push_str(&format!(\"{:02x}\"\
    , byte));\n    }\n    Some(md5_string)\n}\n\nfn main() {\n    let candidate =\
    \ string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpuc34x7h9.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:02x}\", i));\n    }\n  \
    \  Some(s)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmppqwv5i6k.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut output = String::new();\n    for\
    \ byte in result.iter() {\n        output.push_str(&format!(\"{:02x}\", byte));\n\
    \    }\n    Some(output)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n\
    \    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpwmh9a772.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for byte\
    \ in result.iter() {\n        s.push_str(&format!(\"{:02x}\", byte));\n    }\n\
    \    Some(s)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpirv3xbvx.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut hex_str = String::new();\n   \
    \ for byte in result.iter() {\n        hex_str.push_str(&format!(\"{:02x}\", byte));\n\
    \    }\n    Some(hex_str)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n\
    \    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpt4780uk8.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp77sdae0a.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp77sdae0a.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp77sdae0a.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut output = String::new();\n    for\
    \ byte in result.iter() {\n        output.push_str(&format!(\"{:02x}\", byte));\n\
    \    }\n    Some(output)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n\
    \    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpwmh9a772.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp9vt9vra1.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut output = String::new();\n    for\
    \ byte in result.iter() {\n        output.push_str(&format!(\"{:02x}\", byte));\n\
    \    }\n    Some(output)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n\
    \    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpwmh9a772.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp77sdae0a.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp77sdae0a.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp77sdae0a.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp77sdae0a.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp77sdae0a.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let digest = md5::compute(text);\n    let mut result = String::new();\n\
    \    for byte in digest.iter() {\n        result.push_str(&format!(\"{:02x}\"\
    , byte));\n    }\n\n    Some(result)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n\
    \    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared crate or module `md5`\n\
    \  --> /tmp/tmp5sam2jou.rs:10:18\n   |\n10 |     let digest = md5::compute(text);\n\
    \   |                  ^^^ use of undeclared crate or module `md5`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp77sdae0a.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp77sdae0a.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for byte\
    \ in result.iter() {\n        s.push_str(&format!(\"{:02x}\", byte));\n    }\n\
    \    Some(s)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpirv3xbvx.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut output = String::new();\n    for\
    \ byte in result.iter() {\n        output.push_str(&format!(\"{:02x}\", byte));\n\
    \    }\n    Some(output)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n\
    \    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpwmh9a772.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp9vt9vra1.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp77sdae0a.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let result_str = format!(\"{:x}\", result);\n\
    \    Some(result_str)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n\
    \    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpcsoij4rq.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp77sdae0a.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp77sdae0a.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut hex_string = String::new();\n\
    \    for byte in result.iter() {\n        hex_string.push_str(&format!(\"{:02x}\"\
    , byte));\n    }\n    Some(hex_string)\n}\n\nfn main() {\n    let candidate =\
    \ string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpgdi8rby2.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut output = String::new();\n    for\
    \ byte in result.iter() {\n        output.push_str(&format!(\"{:02x}\", byte));\n\
    \    }\n    Some(output)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n\
    \    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpwmh9a772.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let digest = hasher.result();\n    let mut md5_string = String::new();\n\
    \    for byte in digest.iter() {\n        md5_string.push_str(&format!(\"{:02x}\"\
    , byte));\n    }\n    Some(md5_string)\n}\n\nfn main() {\n    let candidate =\
    \ string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmptkngyggz.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut output = String::new();\n    for\
    \ byte in result.iter() {\n        output.push_str(&format!(\"{:02x}\", byte));\n\
    \    }\n    Some(output)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n\
    \    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpwmh9a772.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for byte\
    \ in result.iter() {\n        s.push_str(&format!(\"{:02x}\", byte));\n    }\n\
    \    Some(s)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpirv3xbvx.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp77sdae0a.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut md5_string = String::new();\n\
    \    for byte in result.iter() {\n        md5_string.push_str(&format!(\"{:02x}\"\
    , byte));\n    }\n    Some(md5_string)\n}\n\nfn main() {\n    let candidate =\
    \ string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpuc34x7h9.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp9vt9vra1.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:02x}\", i));\n    }\n  \
    \  Some(s)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmppqwv5i6k.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for b\
    \ in result.iter() {\n        s.push_str(&format!(\"{:02x}\", b));\n    }\n  \
    \  Some(s)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpen5ya0lq.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for b\
    \ in result.iter() {\n        s.push_str(&format!(\"{:02x}\", b));\n    }\n  \
    \  Some(s)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpen5ya0lq.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut output = String::new();\n    for\
    \ byte in result.iter() {\n        output.push_str(&format!(\"{:02x}\", byte));\n\
    \    }\n    Some(output)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n\
    \    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpwmh9a772.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut result_string = String::new();\n\
    \    for byte in result.iter() {\n        result_string.push_str(&format!(\"{:02x}\"\
    , byte));\n    }\n    Some(result_string)\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpbrgs32iu.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp77sdae0a.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp9vt9vra1.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for byte\
    \ in result.iter() {\n        s.push_str(&format!(\"{:02x}\", byte));\n    }\n\
    \    Some(s)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpirv3xbvx.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp77sdae0a.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut hex_string = String::new();\n\
    \    for byte in result.iter() {\n        hex_string.push_str(&format!(\"{:02x}\"\
    , byte));\n    }\n    Some(hex_string)\n}\n\nfn main() {\n    let candidate =\
    \ string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpgdi8rby2.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp9vt9vra1.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut output = String::new();\n    for\
    \ byte in result.iter() {\n        output.push_str(&format!(\"{:02x}\", byte));\n\
    \    }\n    Some(output)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n\
    \    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpwmh9a772.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut hex_string = String::new();\n\
    \    for byte in result.iter() {\n        hex_string.push_str(&format!(\"{:02x}\"\
    , byte));\n    }\n    Some(hex_string)\n}\n\nfn main() {\n    let candidate =\
    \ string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpgdi8rby2.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp9vt9vra1.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut output = String::new();\n    for\
    \ byte in result.iter() {\n        output.push_str(&format!(\"{:x}\", byte));\n\
    \    }\n    Some(output)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n\
    \    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp582kkemk.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp77sdae0a.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp9vt9vra1.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp77sdae0a.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:02x}\", i));\n    }\n  \
    \  Some(s)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmppqwv5i6k.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp9vt9vra1.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut output = String::new();\n    for\
    \ i in result.iter() {\n        output.push_str(&format!(\"{:x}\", i));\n    }\n\
    \    Some(output)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpruzybwef.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut output = String::new();\n    for\
    \ byte in result.iter() {\n        output.push_str(&format!(\"{:02x}\", byte));\n\
    \    }\n    Some(output)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n\
    \    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpwmh9a772.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp9vt9vra1.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut output = String::new();\n    for\
    \ byte in result.iter() {\n        output.push_str(&format!(\"{:02x}\", byte));\n\
    \    }\n    Some(output)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n\
    \    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpwmh9a772.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp77sdae0a.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for byte\
    \ in result.iter() {\n        s.push_str(&format!(\"{:02x}\", byte));\n    }\n\
    \    Some(s)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpirv3xbvx.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut output = String::new();\n    for\
    \ byte in result.iter() {\n        output.push_str(&format!(\"{:02x}\", byte));\n\
    \    }\n    Some(output)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n\
    \    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpwmh9a772.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp9vt9vra1.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp77sdae0a.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp77sdae0a.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for b\
    \ in result.iter() {\n        s.push_str(&format!(\"{:02x}\", b));\n    }\n  \
    \  Some(s)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpen5ya0lq.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp77sdae0a.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:02x}\", i));\n    }\n  \
    \  Some(s)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmppqwv5i6k.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp77sdae0a.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut output = String::new();\n    for\
    \ byte in result.iter() {\n        output.push_str(&format!(\"{:02x}\", byte));\n\
    \    }\n    Some(output)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n\
    \    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpwmh9a772.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut result_string = String::new();\n\
    \    for byte in result.iter() {\n        result_string.push_str(&format!(\"{:x}\"\
    , byte));\n    }\n    Some(result_string)\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpe05gaf1c.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:02x}\", i));\n    }\n  \
    \  Some(s)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmppqwv5i6k.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp77sdae0a.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut output = String::new();\n    for\
    \ byte in result.iter() {\n        output.push_str(&format!(\"{:02x}\", byte));\n\
    \    }\n    Some(output)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n\
    \    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpwmh9a772.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp77sdae0a.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let result_str = format!(\"{:x}\", result);\n\
    \    Some(result_str)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n\
    \    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpcsoij4rq.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp9vt9vra1.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp9vt9vra1.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:02x}\", i));\n    }\n  \
    \  Some(s)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmppqwv5i6k.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp77sdae0a.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp9vt9vra1.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp77sdae0a.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp9vt9vra1.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:02x}\", i));\n    }\n  \
    \  Some(s)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmppqwv5i6k.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut hash_str = String::new();\n  \
    \  for byte in result.iter() {\n        hash_str.push_str(&format!(\"{:02x}\"\
    , byte));\n    }\n    Some(hash_str)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n\
    \    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmph6lqdd5w.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut output = String::new();\n    for\
    \ byte in result.iter() {\n        output.push_str(&format!(\"{:02x}\", byte));\n\
    \    }\n    Some(output)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n\
    \    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpwmh9a772.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp9vt9vra1.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp77sdae0a.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut output = String::new();\n    for\
    \ byte in result.iter() {\n        output.push_str(&format!(\"{:02x}\", byte));\n\
    \    }\n    Some(output)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n\
    \    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpwmh9a772.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    Some(format!(\"{:x}\", result))\n}\n\n\
    fn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpvy430dy9.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp9vt9vra1.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut output = String::new();\n    for\
    \ byte in result.iter() {\n        output.push_str(&format!(\"{:02x}\", byte));\n\
    \    }\n    Some(output)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n\
    \    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpwmh9a772.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp77sdae0a.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp77sdae0a.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp77sdae0a.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp77sdae0a.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp9vt9vra1.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    Some(format!(\"{:x}\", result))\n}\n\n\
    fn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpvy430dy9.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    Some(format!(\"{:x}\", result))\n}\n\n\
    fn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpvy430dy9.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut output = String::new();\n    for\
    \ byte in result.iter() {\n        output.push_str(&format!(\"{:02x}\", byte));\n\
    \    }\n    Some(output)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n\
    \    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpwmh9a772.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    Some(format!(\"{:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp9vt9vra1.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp77sdae0a.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut output = String::new();\n    for\
    \ byte in result.iter() {\n        output.push_str(&format!(\"{:02x}\", byte));\n\
    \    }\n    Some(output)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n\
    \    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpwmh9a772.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp77sdae0a.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    Some(format!(\"{:x}\", result))\n}\n\n\
    fn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpvy430dy9.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut hex_string = String::new();\n\
    \    for byte in result.iter() {\n        hex_string.push_str(&format!(\"{:02x}\"\
    , byte));\n    }\n    Some(hex_string)\n}\n\nfn main() {\n    let candidate =\
    \ string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpgdi8rby2.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let mut s = String::new();\n    for i\
    \ in result.iter() {\n        s.push_str(&format!(\"{:x}\", i));\n    }\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp77sdae0a.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659748608

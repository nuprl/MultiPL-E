name: HumanEval_54_same_chars
language: rs
prompt: "/// Check if two words have the same characters.\n/// >>> same_chars(String::from(\"\
  eabcdzzzz\"), String::from(\"dddzzzzzzzddeddabc\"))\n/// true\n/// >>> same_chars(String::from(\"\
  abcd\"), String::from(\"dddddddabc\"))\n/// true\n/// >>> same_chars(String::from(\"\
  dddddddabc\"), String::from(\"abcd\"))\n/// true\n/// >>> same_chars(String::from(\"\
  eabcd\"), String::from(\"dddddddabc\"))\n/// false\n/// >>> same_chars(String::from(\"\
  abcd\"), String::from(\"dddddddabce\"))\n/// false\n/// >>> same_chars(String::from(\"\
  eabcdzzzz\"), String::from(\"dddzzzzzzzddddabc\"))\n/// false\nfn same_chars(s0:\
  \ String, s1: String) -> bool {\n"
tests: "}\n\nfn main() {\n    let candidate = same_chars;\n    assert_eq!(candidate(String::from(\"\
  eabcdzzzz\"), String::from(\"dddzzzzzzzddeddabc\")), true);\n    assert_eq!(candidate(String::from(\"\
  abcd\"), String::from(\"dddddddabc\")), true);\n    assert_eq!(candidate(String::from(\"\
  dddddddabc\"), String::from(\"abcd\")), true);\n    assert_eq!(candidate(String::from(\"\
  eabcd\"), String::from(\"dddddddabc\")), false);\n    assert_eq!(candidate(String::from(\"\
  abcd\"), String::from(\"dddddddabcf\")), false);\n    assert_eq!(candidate(String::from(\"\
  eabcdzzzz\"), String::from(\"dddzzzzzzzddddabc\")), false);\n    assert_eq!(candidate(String::from(\"\
  aabb\"), String::from(\"aaccc\")), false);\n}\n"
completions: ["    let mut chars0 = s0.chars().collect::<Vec<char>>();\n    let mut\
    \ chars1 = s1.chars().collect::<Vec<char>>();\n    chars0.sort();\n    chars1.sort();\n\
    \    chars0 == chars1", "    let mut s0 = s0.chars().collect::<Vec<char>>();\n\
    \    let mut s1 = s1.chars().collect::<Vec<char>>();\n    s0.sort();\n    s1.sort();\n\
    \    s0 == s1", "    let mut s0_chars = s0.chars().collect::<Vec<char>>();\n \
    \   let mut s1_chars = s1.chars().collect::<Vec<char>>();\n    s0_chars.sort();\n\
    \    s1_chars.sort();\n    s0_chars == s1_chars", "    let mut s0_chars = s0.chars().collect::<Vec<char>>();\n\
    \    let mut s1_chars = s1.chars().collect::<Vec<char>>();\n    s0_chars.sort();\n\
    \    s1_chars.sort();\n    s0_chars == s1_chars", "    let mut chars0 = s0.chars().collect::<Vec<char>>();\n\
    \    let mut chars1 = s1.chars().collect::<Vec<char>>();\n    chars0.sort();\n\
    \    chars1.sort();\n    chars0 == chars1", "    let mut s0_chars = s0.chars().collect::<Vec<char>>();\n\
    \    let mut s1_chars = s1.chars().collect::<Vec<char>>();\n    s0_chars.sort();\n\
    \    s1_chars.sort();\n    s0_chars == s1_chars", "    let mut s0_chars = s0.chars().collect::<Vec<char>>();\n\
    \    let mut s1_chars = s1.chars().collect::<Vec<char>>();\n    s0_chars.sort();\n\
    \    s1_chars.sort();\n    s0_chars == s1_chars", "    let mut chars0 = s0.chars().collect::<Vec<char>>();\n\
    \    let mut chars1 = s1.chars().collect::<Vec<char>>();\n    chars0.sort();\n\
    \    chars1.sort();\n    chars0 == chars1", "    let mut chars0 = s0.chars().collect::<Vec<char>>();\n\
    \    let mut chars1 = s1.chars().collect::<Vec<char>>();\n    chars0.sort();\n\
    \    chars1.sort();\n    chars0 == chars1", "    let mut s0_chars = s0.chars().collect::<Vec<char>>();\n\
    \    let mut s1_chars = s1.chars().collect::<Vec<char>>();\n    s0_chars.sort();\n\
    \    s1_chars.sort();\n    s0_chars == s1_chars", "    let mut s0_chars = s0.chars().collect::<Vec<char>>();\n\
    \    let mut s1_chars = s1.chars().collect::<Vec<char>>();\n    s0_chars.sort();\n\
    \    s1_chars.sort();\n    s0_chars == s1_chars", "    let mut s0_chars: Vec<char>\
    \ = s0.chars().collect();\n    let mut s1_chars: Vec<char> = s1.chars().collect();\n\
    \    s0_chars.sort();\n    s1_chars.sort();\n    s0_chars == s1_chars", "    let\
    \ mut chars0 = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut chars0\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut chars0\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut s0_chars\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut s1_chars = s1.chars().collect::<Vec<char>>();\n\
    \    s0_chars.sort();\n    s1_chars.sort();\n    s0_chars == s1_chars", "    let\
    \ mut chars0 = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut chars0\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut chars0\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut s0_chars\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut s1_chars = s1.chars().collect::<Vec<char>>();\n\
    \    s0_chars.sort();\n    s1_chars.sort();\n    s0_chars == s1_chars", "    let\
    \ mut chars0 = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut chars0\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut chars0\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut chars0\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut chars0\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut chars0\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut chars0\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut s0_chars:\
    \ Vec<char> = s0.chars().collect();\n    let mut s1_chars: Vec<char> = s1.chars().collect();\n\
    \    s0_chars.sort();\n    s1_chars.sort();\n    s0_chars == s1_chars", "    let\
    \ mut chars0 = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut chars0\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut chars0\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut chars0\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut chars0\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut chars0\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut s0_chars\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut s1_chars = s1.chars().collect::<Vec<char>>();\n\
    \    s0_chars.sort();\n    s1_chars.sort();\n    s0_chars == s1_chars", "    let\
    \ mut chars0 = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut s0_chars\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut s1_chars = s1.chars().collect::<Vec<char>>();\n\
    \    s0_chars.sort();\n    s1_chars.sort();\n    s0_chars == s1_chars", "    let\
    \ mut s0_chars = s0.chars().collect::<Vec<char>>();\n    let mut s1_chars = s1.chars().collect::<Vec<char>>();\n\
    \    s0_chars.sort();\n    s1_chars.sort();\n    s0_chars == s1_chars", "    let\
    \ mut chars_count = [0; 26];\n    for c in s0.chars() {\n        chars_count[(c\
    \ as u8 - b'a') as usize] += 1;\n    }\n    for c in s1.chars() {\n        chars_count[(c\
    \ as u8 - b'a') as usize] -= 1;\n    }\n    chars_count.iter().all(|&x| x == 0)",
  "    let mut chars0 = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut s0_chars\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut s1_chars = s1.chars().collect::<Vec<char>>();\n\
    \    s0_chars.sort();\n    s1_chars.sort();\n    s0_chars == s1_chars", "    let\
    \ mut chars0 = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut s0_chars\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut s1_chars = s1.chars().collect::<Vec<char>>();\n\
    \    s0_chars.sort();\n    s1_chars.sort();\n    s0_chars == s1_chars", "    let\
    \ mut chars0 = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut chars0\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut s0_chars\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut s1_chars = s1.chars().collect::<Vec<char>>();\n\
    \    s0_chars.sort();\n    s1_chars.sort();\n    s0_chars == s1_chars", "    let\
    \ mut chars0 = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut s0_chars:\
    \ Vec<char> = s0.chars().collect();\n    let mut s1_chars: Vec<char> = s1.chars().collect();\n\
    \    s0_chars.sort();\n    s1_chars.sort();\n    s0_chars == s1_chars", "    let\
    \ mut s0_chars: Vec<char> = s0.chars().collect();\n    let mut s1_chars: Vec<char>\
    \ = s1.chars().collect();\n    s0_chars.sort();\n    s1_chars.sort();\n    s0_chars\
    \ == s1_chars", "    let mut chars0 = s0.chars().collect::<Vec<char>>();\n   \
    \ let mut chars1 = s1.chars().collect::<Vec<char>>();\n    chars0.sort();\n  \
    \  chars1.sort();\n    chars0 == chars1", "    let mut s0_chars = s0.chars().collect::<Vec<char>>();\n\
    \    let mut s1_chars = s1.chars().collect::<Vec<char>>();\n    s0_chars.sort();\n\
    \    s1_chars.sort();\n    s0_chars == s1_chars", "    let mut chars_s0 = s0.chars().collect::<Vec<char>>();\n\
    \    let mut chars_s1 = s1.chars().collect::<Vec<char>>();\n    chars_s0.sort();\n\
    \    chars_s1.sort();\n    chars_s0 == chars_s1", "    let mut chars0 = s0.chars().collect::<Vec<char>>();\n\
    \    let mut chars1 = s1.chars().collect::<Vec<char>>();\n    chars0.sort();\n\
    \    chars1.sort();\n    chars0 == chars1", "    let mut chars0 = s0.chars().collect::<Vec<char>>();\n\
    \    let mut chars1 = s1.chars().collect::<Vec<char>>();\n    chars0.sort();\n\
    \    chars1.sort();\n    chars0 == chars1", "    let mut chars0 = s0.chars().collect::<Vec<char>>();\n\
    \    let mut chars1 = s1.chars().collect::<Vec<char>>();\n    chars0.sort();\n\
    \    chars1.sort();\n    chars0 == chars1", "    let mut chars0 = s0.chars().collect::<Vec<char>>();\n\
    \    let mut chars1 = s1.chars().collect::<Vec<char>>();\n    chars0.sort();\n\
    \    chars1.sort();\n    chars0 == chars1", "    let mut chars0 = s0.chars().collect::<Vec<char>>();\n\
    \    let mut chars1 = s1.chars().collect::<Vec<char>>();\n    chars0.sort();\n\
    \    chars1.sort();\n    chars0 == chars1", "    let mut s0_chars: Vec<char> =\
    \ s0.chars().collect();\n    let mut s1_chars: Vec<char> = s1.chars().collect();\n\
    \    s0_chars.sort();\n    s1_chars.sort();\n    s0_chars == s1_chars", "    let\
    \ mut chars0 = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut chars0\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut s0_chars\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut s1_chars = s1.chars().collect::<Vec<char>>();\n\
    \    s0_chars.sort();\n    s1_chars.sort();\n    s0_chars == s1_chars", "    let\
    \ mut chars0 = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut chars0\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut chars0\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut chars0\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut chars0\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut s0_chars\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut s1_chars = s1.chars().collect::<Vec<char>>();\n\
    \    s0_chars.sort();\n    s1_chars.sort();\n    s0_chars == s1_chars", "    let\
    \ mut chars0 = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut chars0\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut chars0\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut chars0\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut chars0\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut chars0\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut s0_chars:\
    \ Vec<char> = s0.chars().collect();\n    let mut s1_chars: Vec<char> = s1.chars().collect();\n\
    \    s0_chars.sort();\n    s1_chars.sort();\n    s0_chars == s1_chars", "    let\
    \ mut chars0 = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut chars0\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut s0_chars\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut s1_chars = s1.chars().collect::<Vec<char>>();\n\
    \    s0_chars.sort();\n    s1_chars.sort();\n    s0_chars == s1_chars", "    let\
    \ mut chars0 = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut chars0\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut s0_chars\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut s1_chars = s1.chars().collect::<Vec<char>>();\n\
    \    s0_chars.sort();\n    s1_chars.sort();\n    s0_chars == s1_chars", "    let\
    \ mut chars0 = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut chars_count\
    \ = HashMap::new();\n    for c in s0.chars() {\n        *chars_count.entry(c).or_insert(0)\
    \ += 1;\n    }\n    for c in s1.chars() {\n        *chars_count.entry(c).or_insert(0)\
    \ -= 1;\n    }\n    chars_count.values().all(|&x| x == 0)", "    let mut s0_chars:\
    \ Vec<char> = s0.chars().collect();\n    let mut s1_chars: Vec<char> = s1.chars().collect();\n\
    \    s0_chars.sort();\n    s1_chars.sort();\n    s0_chars == s1_chars", "    let\
    \ mut chars0 = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut chars0\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut s0_chars\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut s1_chars = s1.chars().collect::<Vec<char>>();\n\
    \    s0_chars.sort();\n    s1_chars.sort();\n    s0_chars == s1_chars", "    let\
    \ mut s0_chars = s0.chars().collect::<Vec<char>>();\n    let mut s1_chars = s1.chars().collect::<Vec<char>>();\n\
    \    s0_chars.sort();\n    s1_chars.sort();\n    s0_chars == s1_chars", "    let\
    \ mut chars0 = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut chars0\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut chars0\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut s0_chars\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut s1_chars = s1.chars().collect::<Vec<char>>();\n\
    \    s0_chars.sort();\n    s1_chars.sort();\n    s0_chars == s1_chars", "    let\
    \ mut chars0 = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut s0_chars\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut s1_chars = s1.chars().collect::<Vec<char>>();\n\
    \    s0_chars.sort();\n    s1_chars.sort();\n    s0_chars == s1_chars", "    let\
    \ mut chars0 = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut chars0\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut s0_chars:\
    \ Vec<char> = s0.chars().collect();\n    let mut s1_chars: Vec<char> = s1.chars().collect();\n\
    \    s0_chars.sort();\n    s1_chars.sort();\n    s0_chars == s1_chars", "    let\
    \ mut s0 = s0.chars().collect::<Vec<char>>();\n    let mut s1 = s1.chars().collect::<Vec<char>>();\n\
    \    s0.sort();\n    s1.sort();\n    s0 == s1", "    let mut s0_chars = s0.chars().collect::<Vec<char>>();\n\
    \    let mut s1_chars = s1.chars().collect::<Vec<char>>();\n    s0_chars.sort();\n\
    \    s1_chars.sort();\n    s0_chars == s1_chars", "    let mut chars0 = s0.chars().collect::<Vec<char>>();\n\
    \    let mut chars1 = s1.chars().collect::<Vec<char>>();\n    chars0.sort();\n\
    \    chars1.sort();\n    chars0 == chars1", "    let mut chars0 = s0.chars().collect::<Vec<char>>();\n\
    \    let mut chars1 = s1.chars().collect::<Vec<char>>();\n    chars0.sort();\n\
    \    chars1.sort();\n    chars0 == chars1", "    let mut s0_chars = s0.chars().collect::<Vec<char>>();\n\
    \    let mut s1_chars = s1.chars().collect::<Vec<char>>();\n    s0_chars.sort();\n\
    \    s1_chars.sort();\n    s0_chars == s1_chars", "    let mut chars0 = s0.chars().collect::<Vec<char>>();\n\
    \    let mut chars1 = s1.chars().collect::<Vec<char>>();\n    chars0.sort();\n\
    \    chars1.sort();\n    chars0 == chars1", "    let mut chars0 = s0.chars().collect::<Vec<char>>();\n\
    \    let mut chars1 = s1.chars().collect::<Vec<char>>();\n    chars0.sort();\n\
    \    chars1.sort();\n    chars0 == chars1", "    let mut chars0 = s0.chars().collect::<Vec<char>>();\n\
    \    let mut chars1 = s1.chars().collect::<Vec<char>>();\n    chars0.sort();\n\
    \    chars1.sort();\n    chars0 == chars1", "    let mut s0_chars = s0.chars().collect::<Vec<char>>();\n\
    \    let mut s1_chars = s1.chars().collect::<Vec<char>>();\n    s0_chars.sort();\n\
    \    s1_chars.sort();\n    s0_chars == s1_chars", "    let mut chars0 = s0.chars().collect::<Vec<char>>();\n\
    \    let mut chars1 = s1.chars().collect::<Vec<char>>();\n    chars0.sort();\n\
    \    chars1.sort();\n    chars0 == chars1", "    let mut chars0 = s0.chars().collect::<Vec<char>>();\n\
    \    let mut chars1 = s1.chars().collect::<Vec<char>>();\n    chars0.sort();\n\
    \    chars1.sort();\n    chars0 == chars1", "    let mut s0_chars = s0.chars().collect::<Vec<char>>();\n\
    \    let mut s1_chars = s1.chars().collect::<Vec<char>>();\n    s0_chars.sort();\n\
    \    s1_chars.sort();\n    s0_chars == s1_chars", "    let mut s0_chars = s0.chars().collect::<Vec<char>>();\n\
    \    let mut s1_chars = s1.chars().collect::<Vec<char>>();\n    s0_chars.sort();\n\
    \    s1_chars.sort();\n    s0_chars == s1_chars", "    let mut s0_chars = s0.chars().collect::<Vec<char>>();\n\
    \    let mut s1_chars = s1.chars().collect::<Vec<char>>();\n    s0_chars.sort();\n\
    \    s1_chars.sort();\n    s0_chars == s1_chars", "    let mut chars0 = s0.chars().collect::<Vec<char>>();\n\
    \    let mut chars1 = s1.chars().collect::<Vec<char>>();\n    chars0.sort();\n\
    \    chars1.sort();\n    chars0 == chars1", "    let mut chars0 = s0.chars().collect::<Vec<char>>();\n\
    \    let mut chars1 = s1.chars().collect::<Vec<char>>();\n    chars0.sort();\n\
    \    chars1.sort();\n    chars0 == chars1", "    let mut chars0 = s0.chars().collect::<Vec<char>>();\n\
    \    let mut chars1 = s1.chars().collect::<Vec<char>>();\n    chars0.sort();\n\
    \    chars1.sort();\n    chars0 == chars1", "    let mut s0_chars = s0.chars().collect::<Vec<char>>();\n\
    \    let mut s1_chars = s1.chars().collect::<Vec<char>>();\n    s0_chars.sort();\n\
    \    s1_chars.sort();\n    s0_chars == s1_chars", "    let mut s0_chars = s0.chars().collect::<Vec<char>>();\n\
    \    let mut s1_chars = s1.chars().collect::<Vec<char>>();\n    s0_chars.sort();\n\
    \    s1_chars.sort();\n    s0_chars == s1_chars", "    let mut s0_chars = s0.chars().collect::<Vec<char>>();\n\
    \    let mut s1_chars = s1.chars().collect::<Vec<char>>();\n    s0_chars.sort();\n\
    \    s1_chars.sort();\n    s0_chars == s1_chars", "    let mut chars0 = s0.chars().collect::<Vec<char>>();\n\
    \    let mut chars1 = s1.chars().collect::<Vec<char>>();\n    chars0.sort();\n\
    \    chars1.sort();\n    chars0 == chars1", "    let mut chars0 = s0.chars().collect::<Vec<char>>();\n\
    \    let mut chars1 = s1.chars().collect::<Vec<char>>();\n    chars0.sort();\n\
    \    chars1.sort();\n    chars0 == chars1", "    let mut s0_chars = s0.chars().collect::<Vec<char>>();\n\
    \    let mut s1_chars = s1.chars().collect::<Vec<char>>();\n    s0_chars.sort();\n\
    \    s1_chars.sort();\n    s0_chars == s1_chars", "    let mut chars0 = s0.chars().collect::<Vec<char>>();\n\
    \    let mut chars1 = s1.chars().collect::<Vec<char>>();\n    chars0.sort();\n\
    \    chars1.sort();\n    chars0 == chars1", "    let mut s0_chars: Vec<char> =\
    \ s0.chars().collect();\n    let mut s1_chars: Vec<char> = s1.chars().collect();\n\
    \    s0_chars.sort();\n    s1_chars.sort();\n    s0_chars == s1_chars", "    let\
    \ mut s0_chars = s0.chars().collect::<Vec<char>>();\n    let mut s1_chars = s1.chars().collect::<Vec<char>>();\n\
    \    s0_chars.sort();\n    s1_chars.sort();\n    s0_chars == s1_chars", "    let\
    \ mut s0_chars = s0.chars().collect::<Vec<char>>();\n    let mut s1_chars = s1.chars().collect::<Vec<char>>();\n\
    \    s0_chars.sort();\n    s1_chars.sort();\n    s0_chars == s1_chars", "    let\
    \ mut chars0 = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut chars0\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut chars0\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut s0_chars\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut s1_chars = s1.chars().collect::<Vec<char>>();\n\
    \    s0_chars.sort();\n    s1_chars.sort();\n    s0_chars == s1_chars", "    let\
    \ mut chars0 = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut chars0\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut s0_chars\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut s1_chars = s1.chars().collect::<Vec<char>>();\n\
    \    s0_chars.sort();\n    s1_chars.sort();\n    s0_chars == s1_chars", "    let\
    \ mut s0_chars = s0.chars().collect::<Vec<char>>();\n    let mut s1_chars = s1.chars().collect::<Vec<char>>();\n\
    \    s0_chars.sort();\n    s1_chars.sort();\n    s0_chars == s1_chars", "    let\
    \ mut chars0 = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut chars0\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut chars0\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut chars0\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut chars0\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut s0_chars\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut s1_chars = s1.chars().collect::<Vec<char>>();\n\
    \    s0_chars.sort();\n    s1_chars.sort();\n    s0_chars == s1_chars", "    let\
    \ mut s0_chars = s0.chars().collect::<Vec<char>>();\n    let mut s1_chars = s1.chars().collect::<Vec<char>>();\n\
    \    s0_chars.sort();\n    s1_chars.sort();\n    s0_chars == s1_chars", "    let\
    \ mut chars0 = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut chars0\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut chars0\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut s0_chars\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut s1_chars = s1.chars().collect::<Vec<char>>();\n\
    \    s0_chars.sort();\n    s1_chars.sort();\n    s0_chars == s1_chars", "    let\
    \ mut s0_chars: Vec<char> = s0.chars().collect();\n    let mut s1_chars: Vec<char>\
    \ = s1.chars().collect();\n    s0_chars.sort();\n    s1_chars.sort();\n    s0_chars\
    \ == s1_chars", "    let mut s0_chars = s0.chars().collect::<Vec<char>>();\n \
    \   let mut s1_chars = s1.chars().collect::<Vec<char>>();\n    s0_chars.sort();\n\
    \    s1_chars.sort();\n    s0_chars == s1_chars", "    let mut s0 = s0.chars().collect::<Vec<char>>();\n\
    \    let mut s1 = s1.chars().collect::<Vec<char>>();\n    s0.sort();\n    s1.sort();\n\
    \    s0 == s1", "    let mut s0_chars = s0.chars().collect::<Vec<char>>();\n \
    \   let mut s1_chars = s1.chars().collect::<Vec<char>>();\n    s0_chars.sort();\n\
    \    s1_chars.sort();\n    s0_chars == s1_chars", "    let mut s0_chars = s0.chars().collect::<Vec<char>>();\n\
    \    let mut s1_chars = s1.chars().collect::<Vec<char>>();\n    s0_chars.sort();\n\
    \    s1_chars.sort();\n    s0_chars == s1_chars", "    let mut s0_chars: Vec<char>\
    \ = s0.chars().collect();\n    let mut s1_chars: Vec<char> = s1.chars().collect();\n\
    \    s0_chars.sort();\n    s1_chars.sort();\n    s0_chars == s1_chars", "    let\
    \ mut chars0 = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut chars0\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut chars0\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut chars0\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut chars0\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut s0_chars:\
    \ Vec<char> = s0.chars().collect();\n    let mut s1_chars: Vec<char> = s1.chars().collect();\n\
    \    s0_chars.sort();\n    s1_chars.sort();\n    s0_chars == s1_chars", "    let\
    \ mut s0_chars = s0.chars().collect::<Vec<char>>();\n    let mut s1_chars = s1.chars().collect::<Vec<char>>();\n\
    \    s0_chars.sort();\n    s1_chars.sort();\n    s0_chars == s1_chars", "    let\
    \ mut chars0 = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut chars0\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut chars0\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut chars0\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut chars0\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut chars0\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut chars0\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut chars0\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut s0_chars\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut s1_chars = s1.chars().collect::<Vec<char>>();\n\
    \    s0_chars.sort();\n    s1_chars.sort();\n    s0_chars == s1_chars", "    let\
    \ mut s0 = s0.chars().collect::<Vec<char>>();\n    let mut s1 = s1.chars().collect::<Vec<char>>();\n\
    \    s0.sort();\n    s1.sort();\n    s0 == s1", "    let mut s0_chars = s0.chars().collect::<Vec<char>>();\n\
    \    let mut s1_chars = s1.chars().collect::<Vec<char>>();\n    s0_chars.sort();\n\
    \    s1_chars.sort();\n    s0_chars == s1_chars", "    let mut chars0 = s0.chars().collect::<Vec<char>>();\n\
    \    let mut chars1 = s1.chars().collect::<Vec<char>>();\n    chars0.sort();\n\
    \    chars1.sort();\n    chars0 == chars1", "    let mut chars0 = s0.chars().collect::<Vec<char>>();\n\
    \    let mut chars1 = s1.chars().collect::<Vec<char>>();\n    chars0.sort();\n\
    \    chars1.sort();\n    chars0 == chars1", "    let mut s0_chars: Vec<char> =\
    \ s0.chars().collect();\n    let mut s1_chars: Vec<char> = s1.chars().collect();\n\
    \    s0_chars.sort();\n    s1_chars.sort();\n    s0_chars == s1_chars", "    let\
    \ mut chars0 = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut chars0\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut chars0\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut chars0\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut chars0\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut chars0\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut chars0\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut chars0\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut chars0\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut chars0\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut s0_chars\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut s1_chars = s1.chars().collect::<Vec<char>>();\n\
    \    s0_chars.sort();\n    s1_chars.sort();\n    s0_chars == s1_chars", "    let\
    \ mut chars0 = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut s0_chars\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut s1_chars = s1.chars().collect::<Vec<char>>();\n\
    \    s0_chars.sort();\n    s1_chars.sort();\n    s0_chars == s1_chars", "    let\
    \ mut s0_chars = s0.chars().collect::<Vec<char>>();\n    let mut s1_chars = s1.chars().collect::<Vec<char>>();\n\
    \    s0_chars.sort();\n    s1_chars.sort();\n    s0_chars == s1_chars", "    let\
    \ mut chars0 = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut s0_chars\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut s1_chars = s1.chars().collect::<Vec<char>>();\n\
    \    s0_chars.sort();\n    s1_chars.sort();\n    s0_chars == s1_chars", "    let\
    \ mut s0_chars = s0.chars().collect::<Vec<char>>();\n    let mut s1_chars = s1.chars().collect::<Vec<char>>();\n\
    \    s0_chars.sort();\n    s1_chars.sort();\n    s0_chars == s1_chars", "    let\
    \ mut chars0 = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut chars0\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut chars1 = s1.chars().collect::<Vec<char>>();\n\
    \    chars0.sort();\n    chars1.sort();\n    chars0 == chars1", "    let mut s0_chars\
    \ = s0.chars().collect::<Vec<char>>();\n    let mut s1_chars = s1.chars().collect::<Vec<char>>();\n\
    \    s0_chars.sort();\n    s1_chars.sort();\n    s0_chars == s1_chars", "    let\
    \ mut s0_chars: Vec<char> = s0.chars().collect();\n    let mut s1_chars: Vec<char>\
    \ = s1.chars().collect();\n    s0_chars.sort();\n    s1_chars.sort();\n    s0_chars\
    \ == s1_chars", "    let mut chars0 = s0.chars().collect::<Vec<char>>();\n   \
    \ let mut chars1 = s1.chars().collect::<Vec<char>>();\n    chars0.sort();\n  \
    \  chars1.sort();\n    chars0 == chars1", "    let mut chars0 = s0.chars().collect::<Vec<char>>();\n\
    \    let mut chars1 = s1.chars().collect::<Vec<char>>();\n    chars0.sort();\n\
    \    chars1.sort();\n    chars0 == chars1", "    let mut chars0 = s0.chars().collect::<Vec<char>>();\n\
    \    let mut chars1 = s1.chars().collect::<Vec<char>>();\n    chars0.sort();\n\
    \    chars1.sort();\n    chars0 == chars1", "    let mut chars0 = s0.chars().collect::<Vec<char>>();\n\
    \    let mut chars1 = s1.chars().collect::<Vec<char>>();\n    chars0.sort();\n\
    \    chars1.sort();\n    chars0 == chars1", "    let mut chars0 = s0.chars().collect::<Vec<char>>();\n\
    \    let mut chars1 = s1.chars().collect::<Vec<char>>();\n    chars0.sort();\n\
    \    chars1.sort();\n    chars0 == chars1", "    let mut chars0 = s0.chars().collect::<Vec<char>>();\n\
    \    let mut chars1 = s1.chars().collect::<Vec<char>>();\n    chars0.sort();\n\
    \    chars1.sort();\n    chars0 == chars1", "    let mut s0_chars = s0.chars().collect::<Vec<char>>();\n\
    \    let mut s1_chars = s1.chars().collect::<Vec<char>>();\n    s0_chars.sort();\n\
    \    s1_chars.sort();\n    s0_chars == s1_chars", "    let mut s0_chars = s0.chars().collect::<Vec<char>>();\n\
    \    let mut s1_chars = s1.chars().collect::<Vec<char>>();\n    s0_chars.sort();\n\
    \    s1_chars.sort();\n    s0_chars == s1_chars", "    let mut chars0 = s0.chars().collect::<Vec<char>>();\n\
    \    let mut chars1 = s1.chars().collect::<Vec<char>>();\n    chars0.sort();\n\
    \    chars1.sort();\n    chars0 == chars1", "    let mut s0_chars = s0.chars().collect::<Vec<char>>();\n\
    \    let mut s1_chars = s1.chars().collect::<Vec<char>>();\n    s0_chars.sort();\n\
    \    s1_chars.sort();\n    s0_chars == s1_chars"]
stop_tokens:
- "\n}"
